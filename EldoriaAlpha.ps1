using namespace System
using namespace System.Collections
using namespace System.Collections.Generic
using namespace System.Management.Automation.Host
using namespace System.Management.Automation.Runspaces
using namespace System.Media

Add-Type -AssemblyName PresentationCore

Set-StrictMode -Version Latest

$PSStyle.Progress.View = 'Minimal'









###############################################################################
#
# TOC
#
# TABLE OF CONTENTS
#
# YEAH, I KNOW, THIS IS WEIRD. BUT, LARGE FILE PROBLEMS BRUH.
#
#
# S01 - ENUMERATIONS
# S02 - GLOBAL VARIABLES
# S02A - THE SCENE IMAGES DEFINITION
# S02B - THE MAP WARP HANDLER DEFINITION
# S02C - THE BAD COMMAND RETORTS DEFINITION
# S02D - THE SPECTRE CONSOLE WINDOW BORDER DEFINITIONS
# S02E - THE BATTLE ENCOUNTER REGION TABLE DEFINITION
# S02F - THE BATTLE ACTION LOOKUP TABLE DEFINTION
# S02G - THE STATE BLOCK TABLE DEFINITIONS
# S02H - THE COMMAND BLOCK DEFINITIONS
# S02I - THE COMMAND TABLE DEFINITION
# S02J - THE BATTLE ACTION DAMAGE CALCULATOR FUNCTION DEFINITION
# S02K - THE PLAYER'S DEFINITION
# S02L - THE GLOBAL STATE BLOCK DEFINITION
# S03 - 24-BIT CONSOLE COLOR DEFINITIONS
# S04 - AT STUCTURE DEFINITIONS
# S05 - COMBAT ENGINE PRIMITIVE DEFINITIONS
# S06 - MAP PRIMITIVE DEFINITIONS
# S07 - EQUIPMENT DEFINITIONS
# S08 - FAST NOISE LITE DEFINITION
# S09 - USER INTERFACE DEFINITIONS
# S10 - BATTLE MANAGER DEFINITION
# S11 - GAME CORE DEFINITION/GAME BOOTSTRAP CODE
#
###############################################################################










###############################################################################
#
# S01
# 
# ENUMERATIONS
#
###############################################################################

#//////////////////////////////////////////////////////////////////////////////
#
# GAME STATE PRIMARY
#
# SPLASH SCREEN A
#    THE FIRST SPLASH SCREEN THAT'S SHOWN TO THE PLAYER - ENTIRELY DECORATIVE.
#
# SPLASH SCREEN B
#    THE SECOND SPLASH SCREEN THAT'S SHOWN TO THE PLAYER - ENTIRELY DECORATIVE.
#
# TITLE SCREEN
#    THE TITLE SCREEN, SHOWS THE ELDORIA NAME.
#
# PLAYER SETUP SCREEN
#    SHOWS THE PLAYER SETUP PROCESS.
#
# GAME PLAY SCREEN
#    TERRIBLE NAME, THE SCREEN THE PLAYER NAVIGATES THE WORLD WITH.
#
# INVENTORY SCREEN
#    THE SCREEN THE PLAYER INTERACTS WITH THEIR ITEM INVENTORY IN.
#
# BATTLE SCREEN
#    THE SCREEN USED FOR THE BATTLE PROGRAM.
#
# PLAYER STATUS SCREEN
#    SHOWS THE STATUS OF THE PLAYER, ALLOWS EQUIPMENT CHANGING.
#
# CLEANUP
#    REMOVE GAME RESOURCES.
#
#//////////////////////////////////////////////////////////////////////////////

Enum GameStatePrimary {
    SplashScreenA
    SplashScreenB
    TitleScreen
    PlayerSetupScreen
    GamePlayScreen
    InventoryScreen
    BattleScreen
    PlayerStatusScreen
    Cleanup
}


#//////////////////////////////////////////////////////////////////////////////
#
# STAT NUMBER STATE
#
# NORMAL
#    THE NUMBER IS WITHIN NORMAL TOLERANCES.
#
# CAUTION
#    THE NUMBER IS BELOW NORMAL BUT ABOVE CRITICAL TOLERANCES.
#
# DANGER
#    THE NUMBER IS BELOW CRITICAL TOLERANCES.
#
# NOTE THAT THIS ENUMERATION MAKE NO OPINION ON WHAT DEFINES SAID TOLERANCES.
# THIS IS LEFT TO THE IMPLEMENTATION.
#
#//////////////////////////////////////////////////////////////////////////////

Enum StatNumberState {
    Normal
    Caution
    Danger
}


#//////////////////////////////////////////////////////////////////////////////
#
# ITEM REMOVAL STATUS
#
# SUCCESS
#    THE ITEM WAS SUCCESSFULLY REMOVED FROM THE ITEM INVENTORY.
#
# FAIL GENERAL
#    THE ITEM FAILED TO BE REMOVED FROM THE ITEM INVENTORY FOR AN UNSPECIFIC REASON.
#
# FAIL KEY ITEM
#    THE ITEM FAILED TO BE REMOVED FROM THE ITEM INVENTORY BECAUSE IT'S A KEY ITEM.
#
#//////////////////////////////////////////////////////////////////////////////

Enum ItemRemovalStatus {
    Success
    FailGeneral
    FailKeyItem
}


#//////////////////////////////////////////////////////////////////////////////
#
# ACTION INV REMOVAL STATUS
#
# SUCCESS
#    THE ACTION WAS SUCCESSFULLY REMOVED FROM THE ACTION INVENTORY.
#
# FAIL
#    THE ACTION FAILED TO BE REMOVED FROM THE ACTION INVENTORY FOR AN UNSPECIFIC REASON.
#
#//////////////////////////////////////////////////////////////////////////////

Enum ActionInvRemovalStatus {
    Success
    Fail
}


#//////////////////////////////////////////////////////////////////////////////
#
# BATTLE ACTION TYPE
#
# PHYSICAL
#    ATTACKS THAT DON'T HAVE A SPECIFIC ELEMENTAL AFFINITY.
#
# ELEMENTAL FIRE
#    ATTACKS THAT HAVE A FIRE-BASED ELEMENTAL AFFINITY.
#
# ELEMENTAL WATER
#    ATTACKS THAT HAVE A WATER-BASED ELEMENTAL AFFINITY.
#
# ELEMENTAL EARTH
#    ATTACKS THAT HAVE AN EARTH-BASED ELEMENTAL AFFINITY.
#
# ELEMENTAL WIND
#    ATTACKS THAT HAVE A WIND-BASED ELEMENTAL AFFINITY.
#
# ELEMENTAL LIGHT
#    ATTACKS THAT HAVE A HOLY-BASED ELEMENTAL AFFINITY.
#
# ELEMENTAL DARK
#    ATTACKS THAT HAVE A HELL-BASED ELEMENTAL AFFINITY.
#
# ELEMENTAL ICE
#    ATTACKS THAT HAVE A AN ICE-BASED ELEMENTAL AFFINITY.
#
# MAGIC POISON
#    ATTACKS THAT HAVE A CHANCE TO POISON THE ENEMY.
#
# MAGIC CONFUSE
#    ATTACKS THAT HAVE A CHANCE TO CONFUSE THE ENEMY.
#
# MAGIC SLEEP
#    ATTACKS THAT HAVE A CHANCE TO PUT THE ENEMY TO SLEEP.
#
# MAGIC AGING
#    ATTACKS THAT HAVE A CHANCE TO INFLICT AGING ON THE ENEMY.
#
# MAGIC HEALING
#    ATTACKS THAT CAN HEAL THE ENEMY OR PLAYER.
#
# MAGIC STAT AUGMENT
#    ATTACKS THAT CAN PROVIDE A TEMPORARY BUFF TO A SPECIFIC STAT.
#
# NONE
#    A PLACEHOLDER FOR BASE CASE EVALUATIONS.
#
#//////////////////////////////////////////////////////////////////////////////

Enum BattleActionType {
    Physical
    ElementalFire
    ElementalWater
    ElementalEarth
    ElementalWind
    ElementalLight
    ElementalDark
    ElementalIce
    MagicPoison
    MagicConfuse
    MagicSleep
    MagicAging
    MagicHealing
    MagicStatAugment
    None
}


#//////////////////////////////////////////////////////////////////////////////
#
# STAT ID
#
# THESE ARE ALL SELF EXPLANATORY. NO NEED TO DISSECT THEM.
#
#//////////////////////////////////////////////////////////////////////////////

Enum StatId {
    HitPoints
    MagicPoints
    Attack
    Defense
    MagicAttack
    MagicDefense
    Speed
    Luck
    Accuracy
}


#//////////////////////////////////////////////////////////////////////////////
#
# ACTION SLOT
#
# EQUIPPABLE SLOTS FOR ACTION ITEMS. SELF EXPLANATORY, REALLY.
#
# NONE
#    A PLACEHOLDER FOR BASE CASE EVALUATIONS.
#
#//////////////////////////////////////////////////////////////////////////////

Enum ActionSlot {
    A
    B
    C
    D
    None
}


#//////////////////////////////////////////////////////////////////////////////
#
# BATTLE MANAGER STATE
#
# EXPRESSES THE INTERNAL STATES OF THE BATTLE MANAGER. REFER TO THE BATTLE
# MANAGER CLASS FOR FURTHER DOCUMENTATION OF EACH STATE.
#
#//////////////////////////////////////////////////////////////////////////////

Enum BattleManagerState {
    HealthCheck
    TurnIncrement
    PhaseOrdering
    PhaseAExecution
    PhaseBExecution
    Calculation
    BattleWon
    BattleLost
}


#//////////////////////////////////////////////////////////////////////////////
#
# BATTLE ACTION RESULT TYPE
#
# SUMMARIZES THE KINDS OF RESULTS THAT CAN OCCUR FROM EXECUTING A BATTLE ACTION.
#
# SUCCESS
#    THE ACTION WAS SUCCESSFULLY EXECUTED.
#
# SUCCESS WITH CRITICAL
#    THE ACTION WAS SUCCESSFULLY EXECUTED AND GAINED A CRITICAL BONUS.
#
# SUCCESSS WITH AFFINITY BONUS
#    THE ACTION WAS SUCCESSFULLY EXECUTED AND GAINED AN AFFINITY BONUS.
#
# SUCCESS WITH CRIT AND AFFINITY BONUS
#    THE ACTION WAS SUCCESSFULLY EXECUTED AND GAINED BOTH A CRITICAL AND AFFINITY BONUS.
#
# FAILED ATTACK MISSED
#    THE ACTION FAILED BECAUSE THE ATTACK MISSED.
#
# FAILED ATTACK FAILED
#    THE ACTION FAILED BECAUSE THE USER FAILED TO EXECUTE IT CORRECTLY.
#
# (DEPRECATED) FAILED NO USES REMAINING
#    THE ACTION FAILED BECAUSE THERE ARE NO REMAINING USES.
#
# FAILED NOT ENOUGH MP
#    THE ACTION FAILED BECUASE THE USER DOESN'T HAVE ENOUGH MP.
#
#//////////////////////////////////////////////////////////////////////////////

Enum BattleActionResultType {
    Success
    SuccessWithCritical
    SuccessWithAffinityBonus
    SuccessWithCritAndAffinityBonus
    FailedAttackMissed
    FailedAttackFailed
    FailedElementalMatch
    FailedNoUsesRemaining
    FailedNotEnoughMp
}


#//////////////////////////////////////////////////////////////////////////////
#
# STATUS SCREEN MODE
#
# EXPRESSES THE INTERNAL STATE OF THE STATUS SCREEN.
#
# EQUIPPED TECH SELECTION
#    THE STATUS SCREEN IS SHOWING AND FOCUSED ON THE CURRENTLY EQUIPPED TECHNIQUES.
#
# TECH INVENTORY SELECTION
#    THE STATUS SCREEN IS SHOWING AND FOCUSED ON THE TECH INVENTORY SUB-WINDOW.
#
#//////////////////////////////////////////////////////////////////////////////

Enum StatusScreenMode {
    EquippedTechSelection
    TechInventorySelection
}


#//////////////////////////////////////////////////////////////////////////////
#
# FNL NOISE TYPE
#
# AN ENUMERATION PEGGED TO THE FAST NOISE LITE IMPLEMENTATION.
#
# DEFINES THE TYPE OF NOISE TO GENERATE. I'M NOT GOING TO CLAIM THAT I UNDERSTAND
# ALL OF THEM TO ANY SIGNIFICANT DEGREE.
#
#//////////////////////////////////////////////////////////////////////////////

Enum FnlNoiseType {
    OpenSimplex2
    OpenSimplex2S
    Cellular
    Perlin
    ValueCubic
    Value
}


#//////////////////////////////////////////////////////////////////////////////
#
# FNL ROTATION TYPE 3D
#
# AN ENUMERATION PEGGED TO THE FAST NOISE LITE IMPLEMENTATION.
#
# DEFINES THE KINDS OF 3D ROTATIONS THAT CAN OCCUR DURING EVALUATION.
#
#//////////////////////////////////////////////////////////////////////////////

Enum FnlRotationType3D {
    None
    ImproveXYPlanes
    ImproveXZPlanes
}


#//////////////////////////////////////////////////////////////////////////////
#
# FNL FRACTAL TYPE
#
# AN ENUMERATION PEGGED TO THE FAST NOISE LITE IMPLEMENTATION.
#
# SPECIFIES THE TYPE OF FRACTAL TO EVALUATE.
#
#//////////////////////////////////////////////////////////////////////////////

Enum FnlFractalType {
    None
    FBm
    Ridged
    PingPong
    DomainWarpProgressive
    DomainWarpIndependent
}


#//////////////////////////////////////////////////////////////////////////////
#
# FNL CELLULAR DISTANCE FUNCTION
#
# AN ENUMERATION PEGGED TO THE FAST NOISE LITE IMPLEMENTATION.
#
# SPECIFIES THE TYPE OF CELLULAR DISTANCE FUNCTION TO USE DURING EVALUATION.
#
#//////////////////////////////////////////////////////////////////////////////

Enum FnlCellularDistanceFunction {
    Euclidean
    EuclideanSq
    Manhattan
    Hybrid
}


#//////////////////////////////////////////////////////////////////////////////
#
# FNL CELLULAR RETURN TYPE
#
# AN ENUMERATION PEGGED TO THE FAST NOISE LITE IMPLEMENTATION.
#
# SPECIFIES THE TYPE OF CELLULAR RETURN WHEN EVALUATING CELL-RELATED EXPRESSIONS.
#
#//////////////////////////////////////////////////////////////////////////////

Enum FnlCellularReturnType {
    CellValue
    Distance
    Distance2
    Distance2Add
    Distance2Sub
    Distance2Mul
    Distance2Div
}


#//////////////////////////////////////////////////////////////////////////////
#
# FNL DOMAIN WARP TYPE
#
# AN ENUMERATION PEGGED TO THE FAST NOISE LITE IMPLEMENTATION.
#
# SPECIFIES THE TYPE OF DOMAIN WARP TO USE DURING EVALUATION.
#
#//////////////////////////////////////////////////////////////////////////////

Enum FnlDomainWarpType {
    OpenSimplex2
    OpenSimplex2Reduced
    BasicGrid
}


#//////////////////////////////////////////////////////////////////////////////
#
# FNL TRANSFORM TYPE 3D
#
# AN ENUMERATION PEGGED TO THE FAST NOISE LITE IMPLEMENTATION.
#
# SPECIFIES THE TYPE OF 3D TRANSFORM TO USE DURING EVALUATION.
#
#//////////////////////////////////////////////////////////////////////////////

Enum FnlTransformType3D {
    None
    ImproveXYPlanes
    ImproveXZPlanes
    DefaultOpenSimplex2
}


#//////////////////////////////////////////////////////////////////////////////
#
# WINDOW BORDER PART
#
# AN ENUMERATION INSPIRED BY SPECTRE CONSOLE AND PWSHSPECTRECONSOLE.
# THANKS TO SHAWN LAWRIE AND TRACKD!
#
# SPECIFIES THE COMPONENTS OF A WINDOW'S BORDER. EACH REFERS TO A SPECIFIC CHARACTER
# USED TO CREATE THAT PORTION.
#
#//////////////////////////////////////////////////////////////////////////////

Enum WindowBorderPart {
    LeftTop
    Top
    RightTop
    Right
    RightBottom
    Bottom
    LeftBottom
    Left
}


#//////////////////////////////////////////////////////////////////////////////
#
# WINDOW BORDER PART DIRTY
#
# IN SPITE OF WINDOW BORDER PART, WINDOW BORDERS DON'T DRAW THEIR PARTS INDIVIDUALLY.
# RATHER, THEY'RE DRAWN AS FOUR PIECES, EACH PEICE BEING A COMPOSITION OF PARTS.
# SOME OF THE MOTIVATION BEHIND THIS IS SIMPLICITY IN RENDERING, OTHERWISE I'D NEED
# TO MAINTAIN THE COORDINATES OF THE FAR CORNERS WHICH ISN'T DESIRABLE, AND
# BECAUSE THE LEGACY CODE ALREADY RENDERED EACH FACE WITH NO ISSUES EVEN BEFORE
# CONVERTING THEM TO A COMPOSITION.
#
# THE ADDED BENEFIT OF USING THIS ENUMERATION IS THAT IT REMOVES A HANDFUL OF STATIC
# MEMBERS FROM EACH WINDOW CLASS.
#
#//////////////////////////////////////////////////////////////////////////////

Enum WindowBorderPartDirty {
    Top
    Bottom
    Left
    Right
}


#//////////////////////////////////////////////////////////////////////////////
#
# UI ELEMENT (UIE) LAYOUT
#
# THIS IS A VESTIGE FROM AN ATTEMPT TO CREATE A USER INTERFACE LIBRARY. THIS
# ISN'T USED.
#
#//////////////////////////////////////////////////////////////////////////////

Enum UIELayout {
    Horizontal
    Vertical
}


#//////////////////////////////////////////////////////////////////////////////
#
# TTY SPEED
#
# FRAME-RATE UNBOUND TIMEOUTS FOR PER-CHARACTER RENDERING. THESE HAVE BEEN TESTED
# ON A GOOD NUMBER OF NON-QUANTUM COMPUTERS SO THIS SHOULD BE SAFE... I HOPE.
#
#//////////////////////////////////////////////////////////////////////////////

Enum TtySpeed {
    SuperSlow = 1000000
    Slow      = 750000
    Normal    = 100000
    Moderate  = 75000
    Quick     = 65000
    Fast      = 50000
    SuperFast = 25000
}


#//////////////////////////////////////////////////////////////////////////////
#
# GENDER
#
# SIMPLE ENOUGH. WHEN CREATING A NEW CHARACTER, THE PLAYER CAN CHOOSE TO BE EITHER
# MALE OR FEMALE. THIS HAS SEVERAL EFFECTS THROUGHOUT THE ENGINE, NOT LEAST OF
# WHICH IS WHAT KINDS OF ARMOR CAN THE PLAYER EQUIP, HENCE THE INCLUSION OF
# UNISEX, WHICH IS PREDOMINANTLY USED FOR SPECIFYING THAT A PIECE OF EQUIPMENT CAN
# BE USED BY EITHER MALE OR FEMALE.
#
#//////////////////////////////////////////////////////////////////////////////

Enum Gender {
    Male
    Female
    Unisex # INTENDED FOR EQUIPMENT PURPOSES
}


#//////////////////////////////////////////////////////////////////////////////
#
# PLAYER SETUP SCREEN STATES
#
# THE STATES THAT THE PLAYER SETUP SCREEN GOES THROUGH.
#
#//////////////////////////////////////////////////////////////////////////////

Enum PlayerSetupScreenStates {
    PlayerSetupSetup
    PlayerSetupNameEntry
    PlayerSetupGenderSelection
    PlayerSetupPointAllocate
    PlayerSetupAffinitySelect
    PlayerSetupProfileSelect
    PlayerSetupConfirmation
}


#//////////////////////////////////////////////////////////////////////////////
#
# PS BONUS POINT ALLOC STATE
#
# THE STATES THAT THE PS BONUS POINT ALLOC WINDOW GOES THROUGH.
#
#//////////////////////////////////////////////////////////////////////////////

Enum PSBonusPointAllocState {
    AtkPointsMod
    DefPointsMod
    MatPointsMod
    MdfPointsMod
    SpdPointsMod
    AccPointsMod
    LckPointsMod
}











###############################################################################
#
# S02
#
# GLOBAL VARIABLE DECLARATIONS/DEFINITIONS
#
# YEAH, I KNOW, THE GET-LOCATION USES ARE PROBLEMATIC. SHOOT ME. I'LL FIX IT LATER.
# THERE'S A LOT OF THESE THINGS, BUT I'LL DOCUMENT THEM ALL AS BEST I CAN WITHOUT
# LOSING MY SANITY.
#
###############################################################################

Write-Progress -Activity 'Setting up Globals' -Id 1 -PercentComplete -1

#//////////////////////////////////////////////////////////////////////////////
#
# SCENE IMAGES TO LOAD
#    THIS IS THE TOTAL NUMBER OF SCENE IMAGES DETECTED IN THE IMAGE DATA DIRECTORY.
#
# SCENE IMAGES LOADED
#    THIS IS THE TOTAL NUMBER OF IMAGES CURRENTLY LOADED INTO MEMORY.
#
# MAX WIDTH
#    THIS IS THE MAX WIDTH IN BUFFER CELLS THAT ELDORIA CAN OCCUPY. NOT A HARD
#    LIMIT, BUT IT'S THE MAX WIDTH THAT THE BUFFER MANAGER WILL FORMALLY GRAB.
#
# SSAPECOUNTER
#    THIS IS USED AS A COUNTER FOR THE LINE DRAW DELIMITER FOR THE FIGLET.
#
# SSAPETIMEOUT
#    THIS IS THE COUNTER TIMEOUT FOR THE LINE DRAW DELIMITER FOR THE FIGLET.
#    WHEN SSAPECOUNTER REACHES OR EXCEEDS THIS, THE COUNTER IS RESET.
#
# SFX UI CHEVRON MOVE
#    THE WAV FILE THAT'S PLAYED WHEN A UI CHEVRON IS MOVED BY THE PLAYER.
#
# SFX UI SELECTION VALID
#    THE WAV FILE THAT'S PLAYED WHEN A UI CHEVRON SELECTION IS VALID.
#
# SFX BA PHYSICAL STRIKE A
#    THE WAV FILE PLAYED WHEN USING A BATTLE ACTION THAT'S PHYSICAL.
#
# SFX BA MISS FAIL
#    THE WAV FILE PLAYED WHEN AN ATTACK IS MISSED OF THE FAIL KIND.
#
# SFX BA ACTION DISABLED
#    THE WAV FILE PLAYED WHEN ATTEMPTING TO USE AN ACTION THAT'S DISABLED.
#
# SFX BA FIRE STRIKE A
#    THE WAV FILE PLAYED WHEN USING A BATTLE ACTION THAT'S FIRE ELEMENTAL.
#
# SFX BATTLE INTRO
#    THE WAV FILE PLAYED WHEN ENCOUNTERING A BATTLE SCENARIO.
#
# SFX BATTLE PLAYER WIN
#    THE WAV FILE PLAYED WHEN THE PLAYER WINS A BATTLE SCENARIO.
#
# SFX BATTLE PLAYER LOSE
#    THE WAV FILE PLAYED WHEN THE PLAYER LOSES A BATTLE SCENARIO.
#
# BGM BATTLE THEME A
#    THE WAV FILE PLAYED AS THE BACKGROUND MUSIC FOR THE BATTLE SECNARIO.
#
# SFX BATTLE NEM
#    I DON'T REMEMBER WHAT THIS WAS FOR. IT'S LIKELY UNUSED.
#
# BGM TITLE THEME A
#    ONE OF THE POSSIBLE WAV FILES THAT PLAYS DURING THE TITLE SEQUENCE.
#
# BGM TITLE THEME B
#    ONE OF THE POSSIBLE WAV FILES THAT PLAYS DURING THE TITLE SEQUENCE.
#
# THE GAME SUBTITLE
#    THE STRING DISPLAYED UNDER THE GAME TITLE FIGLET.
#
# SPECTRE BBP ROUNDED
#    CHARACTERS USED TO CREATE A ROUNDED BORDER WINDOW, TAKEN FROM SPECTRE CONSOLE.
#
# SPECTRE BBP SQUARE
#    CHARACTERS USED TO CREATE A SQUARE BORDER WINDOW, TAKEN FROM SPECTRE CONSOLE.
#
# CURRENT WINDOW DESIGN
#    AN INDIRECTION LAYER FOR WINDOWS TO TOGGLE BETWEEN VARIOUS SPECTRE CONSOLE BORDER DESIGNS.
#
# BAD COMMAND RETORTS
#    AN ARRAY OF RETORTS TO RETURN TO THE PLAYER WHEN THEY GIVE A BAD COMMAND.
#    ONE IS RANDOMLY SELECTED EACH TIME A BAD COMMAND IS ISSUED.
#
# THE STATUS WINDOW
#    THE SINGLE INSTANCE OF THE STATUS WINDOW CLASS. THIS IS THE WINDOW SHOWN
#    IN THE TOP-LEFT AREA OF THE BUFFER THAT SHOWS THE PLAYER NAME, HP, MP,
#    AND CURRENT GOLD.
#
# THE COMMAND WINDOW
#    THE SINGLE INSTANCE OF THE COMMAND WINDOW CLASS. THIS IS THE WINDOW SHOWN
#    DIRECTLY BENEATH THE STATUS WINDOW AND IS WHERE THE PLAYER WILL ENTER
#    COMMANDS INTO.
#
# THE SCENE WINDOW
#    THE SINGLE INSTANCE OF THE SCENE WINDOW CLASS. THIS IS THE WINDOW SHOWN ON
#    THE FAR RIGHT AND DISPLAYS AN "IMAGE" OF-SORTS WHEN THE PLAYER MOVES TO
#    DIFFERENT LOCATIONS IN THE CURRENT MAP.
#
# THE MESSAGE WINDOW
#    THE SINGLE INSTANCE OF THE MESSAGE WINDOW CLASS. THIS IS THE WINDOW SHOWN
#    ON THE VERY BOTTOM OF THE NAVIGATION SCREEN. IT PROVIDES FEEDBACK ABOUT
#    COMMANDS THAT THE PLAYER HAS ENTERED IN THE COMMAND WINDOW.
#
# THE INVENTORY WINDOW
#    THE SINGLE INSTANCE OF THE INVENTORY WINDOW. THIS WAS AN OVERARCHING
#    EXPERIMENTAL WINDOW THAT BECAME SOMETHING BIGGER. THE PLAYER'S ITEM
#    INVENTORY IS MANAGED THROUGH HERE.
#
# DEFAULT CURSOR COORDINATES
#    THIS WAS INTENDED TO BE USED AS A DEFAULT LANDING SPACE FOR THE CURSOR,
#    BUT THAT WAS BACK SEVERAL YEARS AGO WHEN THE GAME WAS ONLY INTENDED TO HAVE
#    A SINGLE SCREEN. THIS LIKELY ISN'T USED ANY LONGER.
#
# THE PLAYER BATTLE STAT WINDOW
#    AN INSTANCE OF THE BATTLE ENTITY STATUS WINDOW CLASS INTENDED TO SHOW
#    BATTLE INFORMATION ABOUT THE PLAYER.
#
# THE ENEMY BATTLE STAT WINDOW
#    AN INSTANCE OF THE BATTLE ENTITY STATUS WINDOW CLASS INTENDED TO SHOW
#    BATTLE INFORMATION ABOUT THE ENEMY.
#
# THE PLAYER BATTLE ACTION WINDOW
#    THE SINGLE INSTANCE OF THE BATTLE PLAYER ACTION WINDOW CLASS THAT ALLOWS
#    THE PLAYER TO SELECT A BATTLE ACTION TO EXECUTE IN BATTLE WHEN IT'S THEIR
#    PHASE.
#
# THE BATTLE STATUS MESSAGE WINDOW
#    THE SINGLE INSTANCE OF THE BATTLE STATUS MESSAGE WINDOW CLASS THAT SHOWS
#    FEEDBACK OF THE BATTLE PROGRESSION.
#
# THE BATTLE PHASE INDICATOR
#    THE SINGLE INSTANCE OF THE BATTLE PHASE INDICATOR CLASS. IT SHOWS,
#    TEXTUALLY, WHO HAS THE CURRENT PHASE IN THE CURRENT TURN.
#
# THE STATUS HUD WINDOW
#    THE SINGLE INSTANCE OF THE STATUS HUD WINDOW CLASS. IT SHOWS THE CURRENT
#    STATUS OF THE PLAYER IN THE STATUS SCREEN.
#
# THE STATUS TECH SELECTION WINDOW
#    THE SINGLE INSTANCE OF THE STATUS TECHNIQUE SELECTION WINDOW. THIS ALLOWS
#    THE PLAYER TO SELECT ONE OF THEIR CURRENTLY EQUIPPED ACTIONS TO REPLACE
#    WITH ANOTHER.
#
# THE STATUS TECH INVENTORY WINDOW
#    THE SINGLE INSTANCE OF THE STATUS TECHNIQUE INVENTORY WINDOW. THIS IS A
#    MINIATURE VERSION OF THE INVENTORY WINDOW THAT ALLOWS THE PLAYER TO BROWSE
#    THEIR ACTION INVENTORY AND SWAP AN EQUIPPED ACTION WITH ANOTHER ONE.
#
# THE BUFFER MANAGER
#    THE SINGLE INSTANCE OF THE BUFFER MANAGER CLASS. THIS IS PRIMARILY
#    USED FOR BUFFER SWAPPING.
#
# THE GAME CORE
#    THE SINGLE INSTNACE OF THE GAME CORE CLASS. THIS IS USED TO BOOTSTRAP
#    THE GAME LOOP.
#
# THE CURRENT ENEMY
#    AN INSTANCE OF ENEMY BATTLE ENTITY THAT REFERENCES THE CURRENT ENEMY
#    THE PLAYER IS FIGHTING AGAINST IN A BATTLE SCENARIO.
#
# THE BATTLE MANAGER
#    THE SINGLE INSTANCE OF THE BATTLE MANAGER CLASS. THIS CLASS IS RESPONSIBLE
#    FOR THE ENTIRE BATTLE PROGRAM SUBSYSTEM.
#
# THE SFX MACHINE
#    A VESTIGE THAT IS NO LONGER USED.
#
# THE BGM MACHINE
#    A VESTIGE THAT IS NO LONGER USED.
#
# IS BATTLE BGM PLAYING
#    A FLAG THAT PREVENTS THE BATTLE BGM FROM PLAYING REPEATEDLY AFTER ALREADY
#    HAVING BEEN STARTED.
#
# HAS BATTLE INTRO PLAYED
#    A FLAG THAT PREVENTS THE BATTLE INTRO FROM PLAYING REPEATEDLY AFTER
#    ALREADY HAVING BEEN STARTED.
#
# HAS BATTLE WON CHIME PLAYED
#    A FLAG THAT PREVENTS THE BATTLE WON CHIME FROM PLAYING REPEATEDLY AFTER
#    ALREADY HAVING BEEN STARTED.
#
# HAS BATTLE LOST CHIME PLAYED
#    A FLAG THAT PREVENTS THE BATTLE LOST CHIME FROM PLAYING REPEATEDLY AFTER
#    ALREADY HAVING BEEN STARTED.
#
# GPS RESTORED FROM INV BACKUP
#    I HAVE NO IDEA WHAT THE HELL I DID WITH THIS. IT DOES SOMETHING.
#
# GPS RESTORED FROM BAT BACKUP
#    I HAVE NO IDEA WHAT THE HELL I DID WITH THIS. IT DOES SOMETHING.
#
# GPS RESTORED FROM STA BACKUP
#    I HAVE NO IDEA WHAT THE HELL I DID WITH THIS. IT DOES SOMETHING.
#
# BATTLE CURSOR VISIBLE
#    IS THE CHEVRON FOR THE BATTLE ACTION SELECTION WINDOW VISIBLE
#
# HAS TITLE BGM STARTED
#    A FLAG THAT PREVENTS THE TITLE BGM FROM PLAYING REPEATEDLY AFTER ALREADY
#    HAVING BEEN STARTED.
#
# HAS SUBTITLE BEEN WRITTEN
#    A FLAG THAT PREVENTS THE SUBTITLE STRING FROM BEING WRITTEN REPEATEDLY
#    AFTER IT HAS ALREADY BEEN WRITTEN.
#
# HAS SUBTITLE BEEN COLORED
#    A FLAG THAT PREVENTS THE SUBTITLE STRING FROM HAVING THE RAINBOW EFFECT
#    APPLIED REPEATEDLY AFTER IT HAS ALREADY BEEN WRITTEN.
#
# HAS SSA PRESS ENTER SHOWN
#    A FLAG INDICATING THAT THE "PRESS ENTER" PROMPT HAS BEEN SHOWN.
#
# HAS SSA PRESS ENTER TOGGLED
#    A VESTIGE FROM TESTING. LIKELY TO BE REMOVED.
#
# HAS SSA SETUP RUNSPACE
#    A FLAG INDICATING IF THE INPUT MONITOR RUNSPACE HAS BEEN SETUP OR NOT.
#
# EEI BAT 
#    THE SINGLE INSTANCE OF THE EEIBAT CLASS. THIS IS THE IMAGE OF THE BAT.
#
# EEI NIGHTWING
#    THE SINGLE INSTANCE OF THE EEINIGHTWING CLASS. THIS IS THE IMAGE OF THE
#    NIGHTWING.
#
# EEI WINGBLIGHT
#    THE SINGLE INSTANCE OF THE EEIWINGBLIGHT CLASS. THIS IS THE IMAGE OF THE
#    WINGBLIGHT.
#
# EEI DARKFANG
#    THE SINGLE INSTANCE OF THE EEIDARKFANG CLASS. THIS IS THE IMAGE OF THE
#    DARKFANG.
#
# EEI NOCTURNA
#    THE SINGLE INSTANCE OF THE EEINOCTURNA CLASS. THIS IS THE IMAGE OF THE
#    NOCTURNA.
#
# EEI BLOODSWOOP
#    THE SINGLE INSTANCE OF THE EEI BLOODSWOOP CLASS. THIS IS THE IMAGE OF THE
#    BLOODSWOOP.
#
# EEI DUSKBANE
#    THE SINGLE INSTANCE OF THE EEI DUSKBANE CLASS. THIS IS THE IMAGE OF THE
#    BLOODSWOOP.
#
# THE SFX MPLAYER
#    AN INSTANCE OF SYSTEM.WINDOWS.MEDIA.MEDIAPLAYER INTENDED TO PLAY SOUND
#    EFFECTS.
#
# THE BGM MPLAYER
#    AN INSTANCE OF SYSTEM.WINDOWS.MEDIA.MEDIAPLAYER INTENDED TO PLAY
#    BACKGROUND MUSIC.
#
# AFFINITY MULT NEG
#    A HARD-CODED DAMAGE SCALAR FOR WHEN AFFINITIES MATCH.
#
# AFFINITY MULT POS
#    A HARD-CODED DAMAGE SCALAR FOR WHEN AFFINITIES DON'T MATCH.
#
# STATUS ES SELECTED SLOT
#    
#
#//////////////////////////////////////////////////////////////////////////////

[Int]                             $Script:SceneImagesToLoad            = $(Get-ChildItem "$(Get-Location)\Image Data").Count
[Int]                             $Script:SceneImagesLoaded            = 0
[Int]                             $Script:MaxWidth                     = 80
[Int]                             $Script:SSAPECounter                 = 0
[Int]                             $Script:SSAPETimeout                 = 1000
[String]                          $Script:SfxUiChevronMove             = "$(Get-Location)\Assets\SFX\UI Chevron Move.wav"
[String]                          $Script:SfxUiSelectionValid          = "$(Get-Location)\Assets\SFX\UI Selection Valid.wav"
[String]                          $Script:SfxBaPhysicalStrikeA         = "$(Get-Location)\Assets\SFX\BA Physical Strike 0001.wav"
[String]                          $Script:SfxBaMissFail                = "$(Get-Location)\Assets\SFX\BA Miss Fail.wav"
[String]                          $Script:SfxBaActionDisabled          = "$(Get-Location)\Assets\SFX\BA Action Disabled.wav"
[String]                          $Script:SfxBaFireStrikeA             = "$(Get-Location)\Assets\SFX\BA Fire Strike 0001.wav"
[String]                          $Script:SfxBattleIntro               = "$(Get-Location)\Assets\SFX\Battle Intro.wav"
[String]                          $Script:SfxBattlePlayerWin           = "$(Get-Location)\Assets\SFX\Battle Player Win.wav"
[String]                          $Script:SfxBattlePlayerLose          = "$(Get-Location)\Assets\SFX\Battle Player Lose.wav"
[String]                          $Script:BgmBattleThemeA              = "$(Get-Location)\Assets\BGM\Battle Theme A.wav"
[String]                          $Script:SfxBattleNem                 = "$(Get-Location)\Assets\SFX\UI Selection NEM.wav"
[String]                          $Script:BgmTitleThemeA               = "$(Get-Location)\Assets\BGM\Title Theme A.wav"
[String]                          $Script:BgmTitleThemeB               = "$(Get-Location)\Assets\BGM\Title Theme B.wav"
[String]                          $Script:TheGameSubtitle              = 'A NOT GARY GAME'
[Hashtable]                       $Script:SpectreBBPRounded            = @{}
[Hashtable]                       $Script:SpectreBBPSquare             = @{}
[Hashtable]                       $Script:CurrentWindowDesign          = @{}
[String[]]                        $Script:BadCommandRetorts            = @()
[StatusWindow]                    $Script:TheStatusWindow              = [StatusWindow]::new()
[CommandWindow]                   $Script:TheCommandWindow             = [CommandWindow]::new()
[SceneWindow]                     $Script:TheSceneWindow               = [SceneWindow]::new()
[MessageWindow]                   $Script:TheMessageWindow             = [MessageWindow]::new()
[InventoryWindow]                 $Script:TheInventoryWindow           = $null
[ATCoordinatesDefault]            $Script:DefaultCursorCoordinates     = [ATCoordinatesDefault]::new()
[BattleEntityStatusWindow]        $Script:ThePlayerBattleStatWindow    = $null
[BattleEntityStatusWindow]        $Script:TheEnemyBattleStatWindow     = $null
[BattlePlayerActionWindow]        $Script:ThePlayerBattleActionWindow  = $null
[BattleStatusMessageWindow]       $Script:TheBattleStatusMessageWindow = $null
[BattleEnemyImageWindow]          $Script:TheBattleEnemyImageWindow    = $null
[BattlePhaseIndicator]            $Script:TheBattlePhaseIndicator      = $null
[StatusHudWindow]                 $Script:TheStatusHudWindow           = $null
[StatusTechniqueSelectionWindow]  $Script:TheStatusTechSelectionWindow = $null
[StatusTechniqueInventoryWindow]  $Script:TheStatusTechInventoryWindow = $null
[BufferManager]                   $Script:TheBufferManager             = [BufferManager]::new()
[GameCore]                        $Script:TheGameCore                  = [GameCore]::new()
[EnemyBattleEntity]               $Script:TheCurrentEnemy              = $null
[BattleManager]                   $Script:TheBattleManager             = $null
[SoundPlayer]                     $Script:TheSfxMachine                = [SoundPlayer]::new()
[SoundPlayer]                     $Script:TheBgmMachine                = [SoundPlayer]::new()
[Boolean]                         $Script:IsBattleBgmPlaying           = $false
[Boolean]                         $Script:HasBattleIntroPlayed         = $false
[Boolean]                         $Script:HasBattleWonChimePlayed      = $false
[Boolean]                         $Script:HasBattleLostChimePlayed     = $false
[Boolean]                         $Script:GpsRestoredFromInvBackup     = $true
[Boolean]                         $Script:GpsRestoredFromBatBackup     = $false
[Boolean]                         $Script:GpsRestoredFromStaBackup     = $false
[Boolean]                         $Script:BattleCursorVisible          = $false
[Boolean]                         $Script:HasTitleBgmStarted           = $false
[Boolean]                         $Script:HasSubtitleBeenWritten       = $false
[Boolean]                         $Script:HasSubtitleBeenColored       = $false
[Boolean]                         $Script:HasSSAPressEnterShown        = $false
[Boolean]                         $Script:HasSSAPressEnterToggled      = $false
[Boolean]                         $Script:HasSSASetupRunspace          = $false
[EEIBat]                          $Script:EeiBat                       = [EEIBat]::new()
[EEINightwing]                    $Script:EeiNightwing                 = [EEINightwing]::new()
[EEIWingblight]                   $Script:EeiWingblight                = [EEIWingblight]::new()
[EEIDarkfang]                     $Script:EeiDarkfang                  = [EEIDarkfang]::new()
[EEINocturna]                     $Script:EeiNocturna                  = [EEINocturna]::new()
[EEIBloodswoop]                   $Script:EeiBloodswoop                = [EEIBloodswoop]::new()
[EEIDuskbane]                     $Script:EeiDuskbane                  = [EEIDuskbane]::new()
[System.Windows.Media.MediaPlayer]$Script:TheSfxMPlayer                = [System.Windows.Media.MediaPlayer]::new()
[System.Windows.Media.MediaPlayer]$Script:TheBgmMPlayer                = [System.Windows.Media.MediaPlayer]::new()
[Double]                          $Script:AffinityMultNeg              = -0.75
[Double]                          $Script:AffinityMultPos              = 1.6
[ActionSlot]                      $Script:StatusEsSelectedSlot         = [ActionSlot]::None
[BattleAction]                    $Script:StatusIsSelected             = $null
[StatusScreenMode]                $Script:StatusScreenMode             = [StatusScreenMode]::EquippedTechSelection
[GameStatePrimary]                $Script:TheGlobalGameState           = [GameStatePrimary]::PlayerSetupScreen
[GameStatePrimary]                $Script:ThePreviousGlobalGameState   = $Script:TheGlobalGameState
[Map]                             $Script:SampleMap                    = $null
[Map]                             $Script:SampleWarpMap01              = $null
[Map]                             $Script:SampleWarpMap02              = $null
[Map]                             $Script:CurrentMap                   = $null
[Map]                             $Script:PreviousMap                  = $null
[SSAFiglet]                       $Script:TheTitleFiglet               = [SSAFiglet]::new()
[SSASubtitle]                     $Script:TheSubtitleFiglet            = [SSASubtitle]::new()
[SSAPressEnterPrompt]             $Script:TheSSAPressEnterPrompt       = [SSAPressEnterPrompt]::new()
[TtySpeed]                        $Script:TeletypeSpeed                = [TtySpeed]::Slow
[Runspace]                        $Script:TheOffThread                 = [RunspaceFactory]::CreateRunspace()
[PowerShell]                      $Script:TheOffShell                  = [PowerShell]::Create()
[IAsyncResult]                    $Script:SSAInputAsr                  = $null
[PlayerSetupScreenStates]         $Script:ThePssSubstate               = [PlayerSetupScreenStates]::new()
[PSNameEntryWindow]               $Script:ThePSNameEntryWindow         = $null
[PSGenderSelectionWindow]         $Script:ThePSGenderSelectionWindow   = $null
[PSBonusPointAllocWindow]         $Script:ThePSBonusPointAllocWindow   = $null
[PSAffinitySelectWindow]          $Script:ThePSAffinitySelectWindow    = $null
[PSProfileSelectWindow]           $Script:ThePSProfileSelectWindow     = $null
Write-Progress -Activity 'Setting up Globals' -Id 1 -PercentComplete -1 -Completed

[String]$Script:WomanProfileImageDataA = "`eP0;1q`"1;1;220;200#0;2;0;0;0#1;2;5;7;9#2;2;7;7;9#3;2;8;4;9#4;2;40;20;22#5;2;15;7;10#6;2;4;4;12#7;2;8;4;12#8;2;4;4;9#9;2;52;8;15#10;2;71;14;21#11;2;65;4;14#12;2;65;8;15#13;2;84;14;20#14;2;96;14;21#15;2;96;13;17#16;2;77;9;16#17;2;59;8;15#18;2;52;9;20#19;2;14;3;9#20;2;4;6;12#21;2;7;7;5#22;2;85;46;40#23;2;65;38;34#24;2;21;13;15#25;2;8;1;4#26;2;34;7;10#27;2;65;14;16#28;2;71;9;20#29;2;53;7;10#30;2;39;3;4#31;2;64;7;11#32;2;96;15;25#33;2;96;10;20#34;2;60;9;25#35;2;21;7;10#36;2;59;27;27#37;2;95;53;44#38;2;72;34;33#39;2;2;1;4#40;2;64;21;18#41;2;83;22;23#42;2;90;14;20#43;2;78;14;21#44;2;84;10;20#45;2;78;9;20#46;2;95;10;17#47;2;94;5;17#48;2;90;10;20#49;2;90;9;17#50;2;59;4;14#51;2;40;7;15#52;2;78;40;39#53;2;96;45;36#54;2;91;47;40#55;2;53;33;33#56;2;27;3;9#57;2;59;7;10#58;2;71;9;16#59;2;46;7;16#60;2;56;15;20#61;2;84;13;17#62;2;83;9;16#63;2;65;3;10#64;2;71;4;15#65;2;59;4;10#66;2;52;4;9#67;2;52;4;15#68;2;46;4;16#69;2;40;4;15#70;2;5;6;4#71;2;82;40;34#72;2;95;58;42#73;2;74;49;50#74;2;16;12;16#75;2;40;3;9#76;2;82;7;11#77;2;71;14;16#78;2;65;9;20#79;2;47;4;19#80;2;51;4;19#81;2;46;8;19#82;2;21;3;9#83;2;31;14;11#84;2;95;47;40#85;2;91;59;46#86;2;81;58;52#87;2;43;30;30#88;2;30;6;14#89;2;78;4;20#90;2;51;3;5#91;2;91;12;17#92;2;34;3;9#93;2;46;21;21#94;2;90;40;35#95;2;90;45;36#96;2;95;69;54#97;2;55;45;43#98;2;59;9;20#99;2;57;4;19#100;2;90;15;26#101;2;65;4;19#102;2;54;27;23#103;2;95;41;39#104;2;96;39;34#105;2;69;53;45#106;2;46;3;9#107;2;70;5;10#108;2;85;5;21#109;2;71;5;19#110;2;41;5;18#111;2;65;21;22#112;2;90;40;29#113;2;85;62;49#114;2;22;14;10#115;2;40;8;20#116;2;83;4;16#117;2;46;2;4#118;2;91;20;22#119;2;40;14;16#120;2;81;32;32#121;2;80;27;23#122;2;94;64;48#123;2;17;8;16#124;2;76;4;15#125;2;70;10;25#126;2;47;14;21#127;2;80;32;39#128;2;67;25;23#129;2;30;15;19#130;2;72;7;11#131;2;92;8;25#132;2;83;54;45#133;2;78;20;18#134;2;96;20;22#135;2;65;34;32#136;2;90;41;38#137;2;57;18;26#138;2;90;21;26#139;2;72;27;28#140;2;54;33;29#141;2;78;14;17#142;2;66;32;29#143;2;69;43;40#144;2;46;7;10#145;2;15;1;4#146;2;44;26;23#147;2;96;28;23#148;2;28;1;5#149;2;9;8;14#150;2;46;14;16#151;2;94;73;64#152;2;55;41;34#153;2;48;19;18#154;2;91;56;42#155;2;98;84;64#156;2;99;88;65#157;2;77;46;40#158;2;21;2;4#159;2;95;47;44#160;2;71;32;29#161;2;40;7;10#162;2;65;27;27#163;2;94;59;51#164;2;28;7;10#165;2;92;5;17#166;2;97;21;26#167;2;65;14;21#168;2;72;39;34#169;2;96;78;59#170;2;60;33;30#171;2;34;2;4#172;2;95;31;29#173;2;98;38;28#174;2;84;46;45#175;2;94;52;41#176;2;91;53;45#177;2;75;43;46#178;2;98;3;20#179;2;95;58;46#180;2;85;40;38#181;2;69;20;27#182;2;71;28;32#183;2;84;40;43#184;2;81;67;56#185;2;60;34;34#186;2;88;4;20#187;2;98;96;81#188;2;80;20;28#189;2;89;23;31#190;2;92;47;44#191;2;65;29;32#192;2;99;89;61#193;2;23;9;5#194;2;30;26;22#195;2;72;20;23#196;2;52;26;27#197;2;93;46;51#198;2;42;19;17#199;2;71;38;30#200;2;81;45;44#201;2;40;15;21#202;2;43;21;28#203;2;92;52;41#204;2;78;20;21#205;2;95;41;44#206;2;5;5;18#207;2;10;10;20#208;2;92;27;40#209;2;59;26;33#210;2;56;54;56#211;2;79;79;78#212;2;60;59;63#213;2;29;32;44#214;2;46;39;33#215;2;94;98;95#216;2;82;91;98#217;2;19;22;38#218;2;10;13;20#219;2;82;78;70#220;2;67;80;81#221;2;1;10;25#222;2;36;47;62#223;2;29;27;33#224;2;74;21;18#225;2;20;14;22#226;2;16;14;21#227;2;27;21;31#228;2;15;18;23#229;2;21;18;29#230;2;33;38;47#231;2;23;27;39#232;2;45;45;53#233;2;44;52;58#234;2;9;14;27#235;2;78;71;66#236;2;65;58;55#237;2;35;12;25#238;2;52;28;36#239;2;51;47;53#240;2;22;25;34#241;2;40;34;41#242;2;70;64;60#243;2;20;19;22#244;2;26;23;38#245;2;43;41;45#246;2;59;52;48#247;2;32;38;50#248;2;55;34;41#249;2;70;66;65#250;2;31;36;50#251;2;75;74;76#252;2;58;64;68#1!35@#2@#1!35@#3@#4@#5@#1!2@#6@#7@#6@#1!3@#6@#1@#8@#1@#8@#1!7@#6!2@#1@#8@#1@#2@#3@#2@#3@#9@#10@#11@#12@#13@#14!3@#15@#14@#16@#17!7@#18@#19@#7@#2@#1!4@#20@#1!16@#8@#1!72@#21@$#1!2A#20A#1!31A#2A#1!34A#2A#1A#5A#22A#23A#24A#8!3A#7A#8A#1A#20A#1A#6A#2A#6A#1A#20A#6A#7!2A#1!2A#8A#1!2A#8A#25A#26A#10A#27A#28A#29A#30A#31A#32!2A#14!6A#33!5A#14A#33!2A#14A#28A#34A#35A#7A#1A#20A#6A#1!6A#20A#1A#20A#2A#1!78A#20A#2A#21A$#1!70C#7C#21C#36C#37C#38C#4C#39C#8C#1C#8C#1!2C#20C#1!2C#20C#1!5C#8C#1C#8!3C#25C#40C#41C#42C#43!2C#44C#45C#13C#14!4C#32C#14!3C#46C#47C#33!5C#48C#49C#44C#45C#50C#51C#19C#3C#1!2C#8C#1C#20C#1!2C#20C#1C#20C#1!2C#20C#1!2C#8C#1!23C#2C#1!2C#2C#1C#2C#1C#2C#1!36C#8C#1C#20C#1C#20C#1!3C#21C$#1G#20G#1G#20G#1!7G#2G#1!23G#2G#1!4G#2G#1!28G#20G#1G#20G#5G#52G#53G#54G#55G#5G#1!2G#8G#20G#2G#6G#1!2G#20!3G#1!2G#8!3G#56G#57G#58G#10G#27G#59G#60G#9G#61G#33!4G#61G#62!2G#63!3G#64G#45G#63G#65G#50!2G#66G#50G#66G#50G#67!2G#68G#69G#56G#19!3G#8!3G#1G#20G#1!2G#20G#2G#1!4G#20G#1!2G#20G#1!27G#2G#1!2G#2G#1!35G#20G#1!4G#70G$#1!3O#20O#1!3O#2O#1!2O#2O#1!27O#2O#1!28O#20O#1!2O#20O#2O#1O#35O#71O#53O#72O#73O#74O#8O#2O#7O#1!2O#20O#8O#1O#20O#2O#6O#1O#8O#2O#51O#43O#33O#49O#50O#69O#75O#10O#48!3O#76O#16!2O#65O#43O#49O#43O#44O#16O#45O#13O#58!3O#77O#78O#58!2O#12O#29O#68O#75!2O#79O#29O#80O#81O#35O#82O#19O#1O#20O#1!3O#20O#1!31O#2O#1!2O#2O#1!42O#20O#1O#21O$#1!3_#2_#20_#2_#1!21_#20_#1!42_#7_#1!3_#83_#71_#84_#85_#86_#87_#8_#1_#6_#1!2_#20!2_#1!2_#8!2_#19_#88_#78_#89!2_#66_#75_#11_#62_#46_#33_#76_#31_#90_#77_#48_#42_#32_#33!3_#14_#15_#14_#46_#14_#33_#42_#91!2_#15_#46_#11!2_#78_#28_#78_#9_#81_#50_#69_#68_#92_#19_#8_#20_#1!3_#20_#6_#2_#1!29_#8_#2_#1!39_#20_#1_#20_#1!3_#21_$-#1!2@#2@#1@#2@#1@#2@#1!60@#20@#1!5@#20@#8@#93@#94@#95@#85@#96@#97@#19@#8@#6@#1!2@#20!2@#2@#8@#7@#88@#98@#99@#17@#59@#67@#50@#16!2@#61@#49@#76@#13@#42@#14@#33@#100@#13@#48@#91@#42@#46@#33!3@#42@#46@#42@#15!3@#14!3@#46@#33@#13@#50!3@#101@#12@#101@#59@#26@#82@#6@#2@#1@#2!2@#1!24@#2@#1!5@#2@#1!41@#20@#1!4@#70@$#2A#20A#2A#20!2A#2A#1!32A#2A#1!2A#2A#1!27A#20A#1!2A#20!2A#1A#2A#102A#103A#104A#71A#96A#105A#24A#2A#8A#20A#1A#20!2A#19A#88A#9A#99A#51A#56A#26A#98A#78A#106A#57A#49A#48A#15A#33A#46A#48A#61A#11A#107A#49A#48A#43A#58A#12A#31!2A#57A#65!2A#16A#49!2A#16A#76A#49A#62A#46!2A#13A#42!2A#100A#44A#108A#109A#50A#110A#56A#7A#20!2A#2A#20A#1!76A#21A$#2!3C#20C#21C#20!3C#1!19C#20C#2C#1!43C#2C#1C#2C#8C#24C#111C#104C#112C#22C#96C#113C#114C#8C#20C#1!2C#82C#115C#67C#81C#67C#56C#51C#80C#68C#66C#58C#42C#14C#15C#46C#45C#58C#65C#58C#16C#62C#107C#90!2C#66C#29C#58C#61C#116C#49C#45C#90C#117!2C#57C#31C#118C#42C#13C#45C#13C#89C#28C#57C#29C#28C#100C#45C#101C#110C#35C#7C#21C#20C#1!72C#20C#1!2C#20C#2C#21C$#2!2G#20G#21G#20G#1G#21G#20G#1!64G#6G#2G#1G#20G#6G#119G#103G#104G#120G#121G#122G#86G#114G#8!2G#123G#51G#99G#67G#51G#56G#88G#81G#69G#75G#58G#14!2G#61G#58G#78G#50G#67G#80G#59G#29G#66G#29G#58G#44G#46G#42G#14!2G#116G#63G#16G#124G#13G#42!3G#61G#31G#106G#30!5G#106!2G#17G#43G#125G#99G#67G#75G#56G#7G#1G#20G#1!26G#8G#1!44G#20G#1!2G#20G#21G$#2O#20O#21O#20O#1!2O#20O#1O#21O#20O#1!64O#2O#1O#21O#82O#126O#103O#104O#127O#128O#96O#86O#129O#35O#115O#9!2O#79O#51O#19O#51O#88O#75O#81O#9O#12O#99O#66O#79O#9O#81O#51O#56O#92O#26O#17O#42O#32O#33O#100O#58O#101O#58O#11O#65O#107O#116O#42O#49O#42O#130O#57!2O#13O#41O#118O#42O#118O#131O#118O#106O#56O#68O#98O#101!2O#99O#69O#56O#19O#20O#1!73O#20O#21!2O$#2!2_#20_#1!5_#20_#21_#20!7_#1!52_#20_#1!8_#129_#103_#104!2_#120_#111_#132_#122_#93_#9_#67!2_#79_#26_#7_#56_#115_#81_#79_#110_#79_#68!2_#80_#26_#92_#30_#29_#133_#13_#32!2_#42_#12_#66_#106_#57!2_#16_#48_#49!2_#42_#91!2_#61!2_#134_#14!2_#134_#14!2_#15_#33_#58_#11_#50_#59_#106_#78_#75_#56_#88!2_#19_#8_#1!2_#20_#1_#2_#1!16_#2_#1!48_#20_#1!2_#20_#21_$-#1@#20!2@#1!5@#2@#1@#20@#21@#1@#21@#1@#21@#1@#2@#1!2@#2@#1!2@#2@#1!51@#20@#2@#21@#35@#135@#136@#94@#104@#120@#60@#85@#113@#137@#69@#79@#59@#82@#39@#88@#81@#18@#80@#81@#79@#88@#26@#69@#75@#11@#138@#42@#14@#32!2@#42@#66!2@#58!2@#32@#42@#46!2@#48@#49!2@#42@#48@#14!3@#134!2@#14@#134@#15@#14@#33@#46@#49@#89@#106@#92@#68@#69@#19@#3@#82@#88@#19@#8@#20@#1!2@#20!2@#1!66@#20@#2@#21@$#1A#20A#1!10A#20A#1!2A#20A#21A#20!2A#2A#20!2A#2A#20!2A#2A#20A#2A#20A#2A#20A#2A#20A#2A#20A#2A#20A#1!37A#20A#2!2A#1!2A#5A#71A#104A#94A#104A#139A#40A#96!2A#140A#51A#56A#19A#3A#88A#80A#81A#80A#81A#69A#56A#88A#50A#101A#65A#50A#65A#44A#131A#29A#106A#58A#13A#14!2A#48A#46A#48A#33!2A#42A#14A#48A#15A#14!2A#134A#141!2A#77A#61A#91A#62!2A#31A#57!2A#50A#106A#92!2A#19A#8!2A#82!2A#123A#6A#21A#1!17A#2A#1!51A#2!2A#21A$#1C#2C#20C#1C#20C#1!2C#2C#1!3C#2C#1!4C#20C#1C#21C#20C#1!9C#20C#21C#20C#1!5C#20C#1!3C#20!6C#1C#20!4C#1!23C#20C#1C#20C#1C#5C#36C#94C#104C#94C#104C#120C#142C#122C#96C#143C#19C#88!2C#81C#9C#99C#81C#75C#69C#67C#99C#9C#50C#79!2C#9C#17C#106C#144C#77C#91C#46C#14C#48C#15C#91C#138C#42C#46!2C#33C#14!2C#42C#58C#57C#30C#31!3C#65C#58C#130C#58C#16C#99C#30C#92C#145C#19C#7C#19C#88C#68C#82C#35C#19C#6C#20C#1!5C#6C#1!9C#2C#1!52C#20C#2C#21C$#1G#20G#21G#20G#1!11G#2G#1!2G#20G#1!8G#20G#21G#20G#1!3G#20G#21G#20G#21G#20G#1!2G#20G#21G#2G#1G#21!2G#20G#21G#2G#1!25G#20G#1G#20!3G#1G#5G#38G#104!2G#136G#94G#60G#142G#96G#122G#146G#56G#69G#68G#79G#9G#110G#81G#79G#81!2G#68G#79!2G#69G#92G#9G#51G#31G#42G#15G#42G#46G#15!3G#147G#134G#15!2G#32G#42G#10G#30G#148G#57G#13G#42G#14G#91G#42G#14!2G#33G#46G#61G#98!2G#50G#79G#68G#60G#68G#50G#92G#82G#25G#3G#19G#35G#19G#1!67G#2!2G$#1O#2O#1O#20O#21O#1O#2O#1!4O#2O#1!2O#2O#1!17O#21O#20O#1!7O#20O#1!2O#20!2O#1O#20O#1!28O#20O#21O#2O#20O#149O#150O#120O#84O#136O#94O#120O#150O#128O#122O#151O#152O#59O#69O#68O#110O#79O#80O#67O#79!2O#68O#51O#88O#56O#51O#144O#9O#31O#46!2O#16O#49O#42O#14O#42!2O#46O#13O#42O#141O#29O#106O#144O#141O#42O#134O#15O#14!2O#134O#15O#14O#33O#16O#31O#12O#50O#49!2O#48O#43O#28O#58O#109O#12O#98O#17!2O#89O#18O#3O#1!2O#20O#1!59O#20O#2O#20O#2!2O#21O$#1!4_#20!2_#1!24_#21_#20_#2_#20_#1!41_#20_#1_#20!3_#21_#82_#153_#154_#95_#94!2_#128_#59_#142_#155_#156_#157_#51_#69!2_#18_#79_#80_#67_#68_#88_#56_#75_#81_#92_#30_#42_#33_#44_#109_#65_#10_#28_#12_#144_#66_#16!2_#106_#158_#30_#58_#61_#49_#14!2_#134_#15_#61_#31!2_#45_#61_#28_#17_#50_#11_#48_#47_#62_#65_#11_#16_#116_#14!2_#32_#33!2_#44_#82_#8_#1!63_#2_#20_#21_#2_$-#1@#20@#1!2@#20@#1@#20@#1!6@#2@#1!15@#20@#1!2@#21@#20@#1!9@#2!3@#1!20@#20@#1!2@#20@#1!2@#20@#1!2@#20@#2@#20!3@#21@#88@#92@#23@#159@#95@#53@#94@#160@#161@#162@#163@#156@#105@#119@#51@#81@#99@#68@#164@#56@#51@#69@#81@#92@#161@#10@#48@#45@#50@#9@#51@#69@#56@#161@#17@#58@#16@#57@#29@#17@#130@#14!4@#15@#77@#57@#31@#133@#138@#42@#62@#124@#116!2@#49@#165@#14@#147@#138@#14!3@#15@#14@#134@#166@#14@#166@#167@#119@#8@#1!63@#2!2@#21@$#1!11A#2A#1!14A#20A#1!4A#20A#1A#21A#1!8A#2A#1!3A#2A#1A#2A#1!4A#20A#1!11A#8A#1!9A#20A#1!3A#20A#1A#88A#67A#88A#168A#37A#84!2A#136A#128A#67A#137A#96A#151A#169A#170A#69A#80A#88A#19A#75A#110A#67A#75A#88A#98A#28A#50A#68A#9A#164A#3!2A#171A#45A#32A#10A#66!2A#16A#32A#42A#32A#14A#61A#77A#57A#31A#61A#14!3A#33A#49A#46A#134A#147A#134A#147A#172A#173A#147!2A#134A#147!2A#172!2A#147!3A#166A#167A#2A#8A#20A#1!6A#2A#1!55A#21!2A$#1!20C#20C#21C#20C#1!10C#20C#1!7C#2C#1!8C#20C#1!15C#20C#1!8C#20C#2C#1C#20!2C#21C#26C#51C#3C#146C#174C#175C#84!2C#95C#139C#81C#60C#176C#169C#163C#177C#51C#56!2C#79C#80C#26C#69C#81C#67C#110!2C#88C#123C#145C#88C#50C#16C#44C#17C#29C#12C#45C#44C#131C#48C#49C#13C#29C#30C#17C#42C#14!2C#46C#15C#14C#147C#172!3C#147C#173!3C#147!2C#173!3C#147!3C#166C#172C#134C#77C#7C#1!6C#2C#1!59C$#1!8G#20G#1!4G#2G#1!7G#20G#1!34G#20G#1!11G#20G#1!6G#20G#2G#1!2G#20G#123G#88G#25G#2G#25G#146G#132G#95G#53G#84G#136G#111G#126!2G#52G#169G#151G#23G#93G#51G#69G#79G#56G#81G#99G#68G#110G#51G#5G#19G#88G#68G#89G#178G#12G#92G#10G#100G#101G#50G#29G#50G#11G#75G#29G#10G#14G#42G#91G#48G#91G#134G#172G#147!2G#134G#14G#118G#147!3G#134G#147G#173!5G#172G#166G#14G#58G#75G#2G#8G#20!2G#1!5G#2G#1!56G#21G$#1!5O#20O#1!15O#21O#20O#21O#20O#21O#1!10O#20O#1!3O#2O#1!16O#20O#1O#20!3O#1!7O#20O#1!2O#20O#1!2O#20O#1O#20O#1!2O#8O#2O#8O#6!2O#39O#152O#179O#84!3O#180O#126O#167O#181O#111O#169O#156O#151O#150O#92O#69!2O#79!3O#110O#5O#3O#51O#67O#109O#108O#16O#17O#81O#99O#17O#75O#69O#92O#28O#59O#171O#43O#33O#46O#33O#42O#46O#42O#147!2O#15O#14O#91O#49O#91!2O#42O#49O#42O#173!3O#147!2O#134O#46O#49O#58O#29O#56O#19O#145O#20O#1!34O#2O#1!28O#21O$#1!6_#21_#20_#1!4_#2_#1!8_#20_#1!3_#20_#1!2_#20_#1!5_#2_#1!4_#2_#1!15_#20_#1!3_#21_#20_#21_#20_#1!5_#20_#1_#20_#1!2_#20_#1!3_#20_#1_#6_#2_#8!2_#21_#8_#6_#129_#143_#95_#84!2_#95_#120_#182_#125_#50_#60_#174_#169_#132_#36_#158_#92_#80_#79_#110_#88_#19_#51_#81_#50_#45_#89_#75_#69_#79_#50_#88_#82_#56_#79_#66_#9_#28_#33_#131_#42_#48_#15_#42!2_#46!2_#49_#48_#91!2_#49!4_#91_#147_#173_#147!2_#14_#15_#62_#50_#75_#106_#67_#75_#98_#56_#1_#20_#1!27_#2_#1!33_#21_$-#1@#2@#1!2@#20@#21@#20@#1!4@#2@#1!11@#20@#21@#1!2@#21@#20@#1!9@#2@#1!20@#20@#1@#20@#21@#20@#1!8@#8@#1@#6@#2@#6@#2@#8@#164@#3@#6!2@#1!3@#8@#129@#174@#122@#179!2@#37@#183@#125@#78@#68@#9@#22@#169@#184@#185@#150@#106@#110@#82@#39@#88@#81@#80@#99@#98@#67@#56@#88@#79@#81@#56!2@#79@#67@#75@#16@#33@#42@#46@#42@#91@#42@#48@#46@#91@#49@#42@#49@#48!2@#91@#49@#165@#49@#14@#172@#147@#134@#14!2@#91@#31@#148@#75@#89@#186@#50@#43@#51@#1@#20@#1!56@#20@#2@#1@#2@#21!2@$#1!3A#20A#21A#20!2A#1!2A#2A#1!11A#20A#1A#21A#20A#1!2A#2A#1!35A#20A#1!7A#8A#20A#2!2A#6A#2A#1A#123A#92A#7A#21A#20A#6!2A#1A#8A#5A#152A#187A#155A#169!2A#96A#139A#188A#99A#69A#50A#157A#156!2A#113A#102A#92A#145A#19A#115A#80!2A#99A#69A#158A#69A#67A#99A#82A#19A#67A#68A#66A#45A#46!2A#42A#49A#91A#58A#31A#91A#48A#91!4A#49!4A#48A#134A#147A#42A#15A#134!2A#13A#144A#29A#16A#48!2A#66A#92A#115A#19A#20A#1!7A#2A#1!50A#2A#1!2A#2A#21A$#1!3C#20!2C#21C#20C#1!16C#20C#1!37C#2C#1!12C#20C#2C#20C#6C#161C#59C#8!2C#1!2C#8C#1!2C#8C#114C#143C#156C#169!3C#163C#41C#120C#60C#75C#69C#38C#169!2C#96C#23C#158C#88C#110C#80!2C#81C#69!2C#79C#67C#51C#82C#110C#68!2C#50C#44C#46C#48C#44C#61C#45C#57C#130C#42C#15C#91!2C#48C#61C#58C#65C#49C#91C#134!2C#42C#116C#134!2C#118C#31C#144C#13C#14C#33C#44C#56C#25C#19C#8C#1!58C#20C#1!3C#2C#21C$#1!2G#20G#21G#2G#20G#1!2G#2G#1G#2G#1!2G#2G#1!3G#20G#2G#1!9G#20G#1!31G#2G#1!5G#20G#1!3G#20G#8G#1G#2G#6G#1G#8G#88G#17G#82G#6G#2G#8G#6!2G#1!2G#8G#6G#140G#169!3G#155G#96G#189G#190G#22G#181G#34G#9G#120G#122G#169!2G#23G#4G#92G#81!2G#88G#56G#80G#67G#88G#123G#115G#110G#79G#75G#17G#44G#46G#131G#13G#106G#66G#13G#14G#91G#48G#91G#48G#44G#66G#90G#116G#46G#14G#41G#49!2G#42G#134!2G#57G#17G#100G#13G#31G#14G#58G#56G#106G#34G#5G#1!61G#20G#2G#21G$#2!3O#20!2O#1!2O#2O#1!8O#2O#1!2O#20O#1!20O#2O#1!25O#20O#1!5O#20O#2O#1!3O#50O#12O#19O#82O#6O#1!2O#2O#6O#1O#6O#1O#5O#140O#169!2O#155O#96O#94O#136O#96O#37O#120O#34O#56O#191O#96O#169O#192O#96O#23O#81O#69O#82O#92O#80O#88O#19O#35O#80!2O#69O#17O#49O#46O#48O#58O#161O#59O#29O#9O#130O#42O#61O#58O#45O#57O#66O#109O#47O#62O#138O#61O#44O#62O#14O#134O#31O#161O#43O#14O#58O#90O#13O#75O#193O#68O#13O#164O#6O#2O#1O#6O#1!54O#20O#1!2O#20O#2O#21O$#1_#2_#20_#1!3_#2_#1!2_#2_#1!5_#2_#1!51_#20_#1!2_#20_#1!3_#20_#1_#8_#69_#68_#69_#56_#8_#1_#7_#123_#6!3_#21_#8_#194_#86_#169!3_#94_#190_#169_#155_#132_#195_#98_#92_#196_#169!4_#132_#119_#56_#110_#69_#3_#19_#69_#99_#81_#75_#63_#44_#11_#9_#26_#106_#43_#99_#81_#59_#65_#101_#57_#171_#148_#12_#64_#186_#58_#61_#44!2_#62_#49_#57_#26_#75_#48_#33_#58_#16_#50_#145!2_#56_#43_#50_#88_#1!57_#20_#1!2_#20_#2_#21_$-#1@#20@#21@#1@#2!2@#1!6@#2@#1!2@#20@#1!11@#21@#20@#1!36@#20@#1!6@#20@#1!3@#19@#50@#17@#11@#35@#7@#6@#82@#51@#70@#2!2@#8!2@#2@#129@#132@#169@#151@#94@#95@#169@#192@#96@#197@#181@#80@#35@#198@#157@#169!2@#155@#86@#196@#88@#82@#39@#19@#69!2@#92@#99@#109@#59@#145@#35@#92@#99@#50@#69@#81@#79@#51@#75@#79@#50@#29@#171@#50@#48@#49!2@#45!2@#49@#45@#51@#56@#12@#42!2@#9@#11@#56@#19@#68@#66!2@#89@#82@#1!3@#20@#1!53@#20@#2@#1@#20@#2@#70@$#20!3A#2A#1!4A#2A#1!2A#2A#1!3A#21A#1!10A#20A#1!13A#2A#1!23A#20A#1!2A#20A#1!4A#7A#6A#1A#7A#56A#124A#76A#31A#82A#6A#7A#69A#26A#19A#26A#56A#3A#6A#39A#5A#185A#169!2A#163A#54A#169A#155!2A#169A#139A#167A#82A#145A#119A#199A#96A#169A#155A#151A#4A#6A#25A#20A#123A#145A#69A#99A#56A#35A#88A#56A#79!3A#81A#110A#81A#88A#82A#68A#109A#65A#67A#43A#48A#49!2A#58A#57A#28A#51A#145A#26A#42A#14A#100A#29A#75A#35!2A#106A#64A#106A#13A#82A#8A#1!3A#20A#1!2A#20A#1!53A#2A#21A$#2C#1!14C#20C#1!9C#21C#20C#1!40C#20C#1!3C#20!2C#1!2C#7C#161C#62C#65C#51C#7!2C#88C#68C#82C#56C#68C#79C#68C#82C#1!2C#129C#96C#169!2C#132C#179C#155!2C#122C#195C#188C#34C#126C#110C#59C#142C#96C#169C#155C#151C#152C#25C#20C#19C#35C#80C#69C#3C#51C#79C#67!2C#79!2C#80C#81C#79C#106C#67C#50C#66C#17C#44C#46C#49C#91C#58C#17C#60C#30C#145C#19C#106C#131C#28C#26C#126C#88C#25C#7C#68C#65C#106C#131C#158C#1C#20C#1!3C#20C#1!21C#20C#1!11C#2C#1C#2C#1!2C#2C#1!2C#2C#1!2C#2C#1!10C#2C#21C$#20G#1!6G#2G#1!17G#20G#1!2G#2G#1!6G#2G#1!28G#20G#1!3G#20G#1!5G#20G#19G#12G#44G#68G#19G#7G#110G#66G#92G#3G#88G#79!2G#29G#35G#8!2G#7G#55G#169!3G#95G#96G#155G#132G#27G#28G#189G#181G#18G#126G#92G#38G#96G#169!2G#132G#5G#6!2G#88G#80G#56G#145G#69G#79G#67!2G#68G#67G#68G#56G#9G#45G#49G#58G#57G#43G#48!2G#91G#48G#17G#161!2G#148G#150G#56G#17G#48G#17G#5G#83G#123G#1G#7G#106G#12G#106G#100G#56G#8G#2G#20G#1!3G#20G#2G#1!32G#2G#1!19G#2!2G#21G$#1O#20O#1!3O#2O#1!20O#21O#1!4O#20O#1!2O#2O#1!5O#2O#1!3O#2O#1!9O#20O#1!8O#20O#1!3O#20O#1!3O#20O#1!2O#6O#144O#44O#101O#56O#19O#88O#79O#67O#82O#88O#51O#79O#68O#88O#19O#8O#20O#8O#24O#200O#169O#96O#95O#154O#96O#85O#98O#125O#189!2O#60!2O#115O#56O#157O#122O#169!2O#146O#24O#3O#88O#110O#56O#88O#68O#67O#79O#67!2O#68O#26O#30O#10O#48O#43O#9O#58O#178O#33O#61O#16O#78O#148!2O#144O#111O#99O#106O#64O#45O#30O#7O#8!2O#7!2O#29O#17O#75O#131O#56O#8O#1!2O#20O#1O#2O#1!21O#20O#2O#1!31O#20O#21!2O$#20_#1!25_#20_#1!5_#2_#1!6_#2_#1!13_#20_#2_#1!2_#2_#1!5_#20_#1!4_#20_#1!4_#8_#19_#10_#44_#75_#123_#19_#88_#80_#115_#82_#110_#81_#67_#79_#35_#8_#6_#8!3_#146_#122_#179_#54_#190_#22_#132_#60_#188_#189_#188_#34_#201_#19_#39_#150_#112_#169!2_#199_#202_#123_#88!2_#56_#68_#79_#29_#81_#67_#45_#29!2_#13_#131_#16_#75_#27_#42_#91!2_#58_#69_#92_#164_#137_#180_#38_#69_#50_#27_#30_#164_#19_#1!2_#20_#6_#56_#12_#29_#100_#92_#6_#2_#1!2_#20_#1!22_#2_#1!11_#2_#1!2_#2_#1!14_#20_#1!2_#20_#2_#21_$-#1!30@#20@#2@#1!3@#2@#1!2@#2@#1!21@#20@#1!2@#20@#1!2@#20@#1@#20@#1!2@#20@#1@#2@#9@#45@#101@#88@#3@#88@#80@#81@#35@#88@#79@#67@#81@#79@#35@#8@#6!2@#8!2@#5@#157@#122@#84@#203@#95@#174@#17@#188@#189@#188@#202@#7@#8!2@#82@#121@#96!2@#135@#25@#56@#18@#81@#92@#68@#79!2@#67@#50@#49@#48@#44@#165@#44@#17@#144@#42@#46@#43@#67@#81@#150@#139@#132@#151@#86@#137@#10@#17@#161!2@#9@#5@#8@#6@#2!2@#19@#10@#32@#166@#195@#19@#20!2@#2@#1!23@#20@#1!32@#20@#21!2@$#1!2A#20A#1!22A#21A#20A#2A#1A#2A#1A#20A#1!26A#20A#1!4A#20A#1A#20A#1A#20A#1A#20A#1!2A#20A#193A#118A#49A#106A#56A#82A#79A#80A#79A#88A#67A#79!2A#9A#81A#19A#8!3A#7A#5A#8A#35A#113A#96A#122A#96A#122A#27A#188!2A#137A#19A#8A#39!2A#129A#189A#120A#159A#93A#158A#80A#99A#11A#148A#51A#67A#81A#57A#45A#49A#116A#58A#48A#9A#106A#16A#44A#10A#30A#82A#164A#129A#36A#168A#157A#137A#30A#17A#106A#111A#188A#195A#19A#2A#6A#2A#8A#19A#11A#58A#134A#138A#5A#1A#20A#1A#20A#1!22A#2A#1!29A#20A#1!2A#20A#2A#21A$#1C#20!2C#1C#2C#1!19C#2C#20C#1!7C#149C#1!20C#20C#1!4C#20C#1!3C#20!2C#1!2C#20C#2!2C#20C#1C#8C#60C#32C#44C#161C#82C#79C#80C#79C#164C#88C#67!2C#81C#68C#110C#88C#123C#8C#25C#88C#81C#6C#8C#152C#155C#169C#155C#151C#27C#188!2C#83C#88C#149C#39!2C#162C#189C#172C#181C#158C#26C#9C#12C#17C#26C#79C#50C#58C#44C#33C#46C#17C#66C#9C#158C#59C#58C#161C#56C#161C#120C#182C#35C#25!2C#3C#102C#199C#38C#139C#121C#172C#128C#19C#1C#8C#6C#8C#82C#106C#66C#14C#121C#19C#20C#1!59C#2C#21C$#1!2G#20G#21G#1!27G#2G#1!22G#2G#20G#1!5G#20!2G#1!3G#21G#1G#2!2G#21G#1G#35G#61G#14G#43G#56!2G#80G#67G#75G#88G#79G#80G#79!2G#81!2G#26G#3G#25G#88G#68G#51G#19G#8G#24G#86G#169G#155G#169G#195G#188G#81G#82G#120G#83G#39G#8G#188G#172G#188G#24G#3G#59G#31G#108G#65G#92G#50G#13G#46!2G#44G#28G#29G#50G#81G#25G#35G#56G#19G#59G#204G#189G#205G#174G#137G#82G#39G#129G#96G#156G#85G#120G#172G#162G#25G#6G#1G#2G#8G#19G#66G#58G#166G#41G#19G#1G#20G#1G#20G#2G#1G#20G#2G#1!34G#2G#1!13G#20G#1!3G#2G#21G$#1!2O#20!2O#1!20O#20O#1!2O#2O#1O#2O#1!2O#20O#2O#1!20O#20O#2O#1!7O#20O#1!2O#2O#1!2O#8O#6O#3O#58O#14O#15O#161O#56O#68O#80O#69O#88O#68O#80O#79!3O#69O#82O#25!2O#88O#69O#81O#26O#7O#8O#39O#146O#96O#192O#151O#195O#188O#137O#128O#94O#59O#19O#25O#191O#189O#137O#25O#88O#59O#130O#32O#63O#106O#11O#13O#46O#45O#12O#75O#69O#99O#26O#39O#206O#8O#39O#3O#56O#51O#17O#120O#84O#180O#83O#39O#194O#184O#155O#154O#94O#128O#3O#2O#8!2O#2O#25O#88O#101O#16O#188O#19O#1O#20O#1O#2O#1!2O#2O#20!2O#1!32O#2O#1!18O#2O#21O$#1!2_#21_#20_#2_#1!2_#2_#1!12_#20_#21_#20_#21_#1!2_#2_#1!5_#2_#1_#149_#1!19_#2_#20_#1!4_#20_#1!3_#20_#1!3_#6_#2_#56_#9_#41_#15_#13_#26_#81_#66_#79_#92_#88_#99_#79!2_#59_#69_#123_#8_#70_#161_#98_#67_#59_#56_#7_#6_#8_#2_#105_#155_#169_#120_#195_#188_#120_#188_#182_#137_#82_#137_#153_#25!2_#17_#43_#48_#178_#58_#50_#42_#131_#42_#78_#83_#3_#56_#51_#25_#129_#39_#8_#39!3_#6_#123_#144_#128_#120_#139_#145_#39_#83_#113_#169_#122_#139_#25_#2_#8!3_#7_#56_#67_#64_#195_#19_#1_#20_#1!4_#20_#1!4_#2_#1!2_#2_#1!13_#20_#1!14_#2_#1!16_#2_#21_$-#1@#2@#20@#1!18@#20@#1!2@#2@#1!6@#2@#1!21@#20@#1!8@#20!2@#1@#20@#1@#2@#19@#75@#10@#27@#57@#14@#61@#51@#99@#80@#26@#88@#80!2@#81@#68@#88@#19@#25@#56@#78@#16@#11@#79@#51@#19@#6@#8@#3@#25@#146@#96@#169@#96@#38@#181@#182@#181@#182@#181@#110@#60@#119@#39@#82@#12@#116@#48@#62@#90@#31@#33@#131@#12@#26@#145@#25@#69!2@#82@#162@#35@#39@#6@#207@#8@#39!2@#8@#145@#17@#208@#146@#39!2@#143@#96@#72@#120@#2@#8!4@#19@#92@#81@#64@#195@#7@#1!2@#20@#1!2@#2@#20@#1!3@#20!3@#2@#20@#1!45@#2@#21@$#1A#20A#1!21A#2A#1!5A#2A#1!23A#2A#20A#1!5A#20A#1A#20A#1!4A#164A#27A#45A#17A#145A#144A#33A#91A#99A#67A#88A#75A#80A#79!3A#51A#82A#145A#144A#58A#46A#48A#31A#69!2A#8A#7A#6A#8!2A#145A#200A#155A#169A#96A#191A#99A#18A#34!3A#88A#3A#56A#27A#43A#48A#49A#16A#31A#44A#42A#44A#17A#19A#39A#82A#67A#99A#78A#208A#209A#39A#210A#211A#212A#213A#206A#39!2A#35A#98A#60A#19A#3A#4A#179!2A#38A#25A#8A#1!2A#8A#82A#56A#59A#50A#60A#19A#6A#1!2A#20A#2A#20A#1A#21A#20A#1!2A#21A#1!3A#20!4A#1!41A#2A#21A$#1!19C#2C#1!35C#20C#1!7C#20C#1C#70C#164C#181C#161C#82C#145!2C#31C#49C#66C#99C#68C#88C#79!2C#110C#81C#69C#92C#57C#13C#42C#14C#46C#16C#50C#51C#35C#8!4C#6C#8C#198C#122C#169!2C#96C#132C#168C#191C#181C#67C#92C#75C#56C#43C#46C#91C#49C#58C#45C#108C#13C#78C#26C#39C#19C#110C#69!2C#28C#179C#86C#25C#214C#215!2C#216C#217C#39!3C#59C#111C#162C#191C#162C#179C#22C#164C#8C#1C#8C#1!2C#56C#26C#161C#50C#59C#8C#1C#20C#1!4C#20C#1!4C#20C#21C#20C#1C#21C#1C#21C#20C#1!41C#2C#21C$#1G#2G#1G#20G#1!18G#2G#1!13G#218G#1!19G#20G#1G#20G#1!3G#2G#1G#21G#83G#133G#30G#8!3G#56G#48G#116G#68G#69G#88G#69G#110G#92!2G#75!2G#27G#118G#14!2G#33G#48G#31G#9G#35G#3G#7G#8!3G#19G#3G#25G#191G#96G#155!3G#169G#72G#94G#98G#78G#17G#30G#58G#33G#49G#58G#12G#44G#49G#16G#106G#25G#8G#88G#99G#75G#81G#120G#169!2G#146G#83G#219G#215G#220G#221!2G#8G#39G#164G#54G#37!4G#23G#39G#1!3G#8G#1G#51G#161G#59G#100G#9G#3G#1!2G#8G#1!2G#2G#21G#20G#1!9G#2G#1!2G#20G#1!32G#20G#1!5G#2!2G#21G$#1!20O#2O#1!4O#2O#1!31O#20O#1!4O#20O#21O#59O#27O#144O#19O#206O#6O#8O#88O#16O#101O#79O#69!3O#75O#43O#13O#45O#13O#100O#31O#61O#14!2O#16O#9O#88O#19!3O#149O#8O#19O#92O#19O#8O#35O#183O#169!2O#192O#169!2O#154O#172O#167O#30O#44O#33O#49O#130O#28O#16O#48O#16O#106O#119O#145O#82O#167O#119O#88O#111O#96O#169O#155O#132O#40O#194O#220O#222O#221O#222O#55O#198O#142O#163O#179!2O#37O#60O#19O#1!2O#8O#21O#1O#8O#26O#19O#158O#12O#28O#35O#8O#1!3O#2O#20!2O#1!4O#2O#1!9O#2O#20O#2O#1!19O#2O#1!2O#2O#1!9O#20O#1!2O#20O#2O#21O$#1!3_#20_#1!47_#20_#1!2_#20_#1_#20_#1!3_#20!2_#21_#17_#41_#56_#6_#1!2_#20_#6_#106_#65_#106_#69_#88_#92_#28_#13_#33_#14_#33_#14_#11_#64_#33_#32_#45_#29_#56_#3_#19_#6_#19_#123_#3_#56_#82_#3_#8!2_#24_#38_#179_#169!3_#84_#127_#144_#43_#178_#48_#44_#78_#44_#116_#131_#101_#75_#158_#25_#88_#189_#98_#60_#52_#169!4_#71_#161_#193_#20!2_#223_#139_#120_#175_#122_#179_#203_#83_#7_#8_#1!2_#6_#2_#1_#3_#59_#145_#137_#161_#69_#56_#6_#1_#20_#1!2_#2_#1_#21_#20_#1!11_#2_#1!2_#20!3_#1!27_#20_#1!2_#20_#1!2_#20_#2_#21_$-#2@#20!2@#1!27@#2@#1!9@#218@#1!8@#20@#1!5@#20@#1!5@#21@#161@#138@#144@#149@#6@#1@#6@#8@#92@#57@#66@#101@#75@#56@#28@#14@#46!2@#91@#13@#31@#66@#49@#33@#16@#59@#51@#7@#8@#3@#82@#123@#8@#35@#51@#7@#20@#1@#8!2@#5@#150@#71@#72@#95@#162@#51@#75@#44@#48@#44@#9!2@#89@#16@#66@#75@#69@#3@#25@#34@#167@#144@#120@#163@#169!2@#155@#169!2@#95@#27@#153@#202@#143@#71@#179@#122@#96@#179@#157@#2@#8@#1!2@#6@#2@#1!2@#2@#158!2@#167@#26@#88@#35@#6@#1!3@#20@#2@#20@#1!10@#2@#1!6@#21@#20@#21@#20@#1!26@#8@#20@#1!2@#20!2@#21!2@$#2!2A#1!2A#21A#1!2A#2A#1!2A#2A#1!14A#2A#1A#2A#1!10A#218A#21A#1!11A#20A#1!2A#20A#1!2A#20A#1!3A#83A#121A#224A#5A#8A#1A#6!2A#56A#41A#144A#57A#16A#66A#43A#46!2A#15A#13A#11A#59A#161A#109A#62A#45A#68A#56A#7A#8A#3A#82A#88A#6A#82A#88A#19A#6A#1A#8A#1!2A#8!2A#145A#119A#150A#56A#92A#50A#66A#17A#9!2A#50A#109A#78A#92A#158A#82A#3A#19A#18A#60A#181A#136A#96A#169!4A#155A#169A#22A#38A#153A#132A#169A#96A#122A#179!2A#185A#2A#8A#7A#20A#2A#1A#8!2A#6A#3A#9!2A#19A#82A#123A#8A#20A#1!3A#20A#21A#1!15A#2A#1A#20A#1A#20A#1!19A#2A#1!9A#20A#1!2A#20!2A#21A$#1C#20C#1C#20C#1!2C#20C#1!50C#20C#1!2C#8C#119C#104C#40C#2C#8C#20C#8C#82C#17C#29C#66C#77C#90C#58C#46C#14!2C#45C#59C#161C#68C#50!2C#69C#79C#82C#6C#39C#19C#123C#88C#7C#123C#88C#7C#6C#1!2C#8C#1C#6C#2!2C#19C#25C#56C#68C#79C#67C#68C#50C#101C#45!2C#28C#50C#110C#56C#3C#51C#137C#56C#60C#136C#190C#96C#169!8C#122C#96C#169C#96C#122C#96C#179C#23C#25C#8C#20C#6C#1!2C#2C#8C#2C#144C#27C#51C#149!2C#7C#8C#20C#1!2C#20C#21C#20C#1!12C#2C#1!3C#2C#1!29C#8C#1!3C#2C#1!2C#21!2C$#2G#20G#21G#1!3G#2G#1!53G#8G#153G#173G#161G#8G#1G#6G#56G#43G#31G#144G#16G#29G#9G#46G#15G#45G#11G#81G#69G#67!2G#69G#88G#19G#82G#3G#82G#88!3G#149G#19G#88G#56G#7G#8!2G#20G#1G#6G#8!2G#3G#88!2G#79G#67G#69G#67G#99G#28G#101!2G#69G#56G#82!2G#19G#115G#137!2G#153G#127G#54G#122G#169G#156!3G#155G#169!4G#155G#169!5G#96G#23G#8G#1!5G#6G#2G#30G#43G#26G#8G#21G#8G#2G#1!2G#20G#1G#20!2G#1!12G#2G#1!35G#20G#1G#20G#1!2G#20G#1G#21G$#20O#21O#20O#1!51O#20!2O#1!3O#8O#24O#121O#172O#161O#8!2O#7O#17O#57O#31O#58O#130O#29O#44O#33O#58O#9O#51O#81O#79O#69O#88O#19O#82O#123O#82O#110!2O#115O#123O#19O#88O#110O#82O#7O#6!2O#1O#6O#145O#123O#19O#8O#145O#115O#82!2O#56O#158O#81O#101O#50O#67O#26O#3O#8O#25O#35O#137O#188O#36O#26O#71O#95O#154O#96O#169O#155O#156!3O#155O#169!10O#143O#39O#6!2O#1!2O#8O#19O#161O#43O#30O#8O#1O#20O#1!7O#21O#20O#1!38O#2O#1!2O#2O#1!9O#21O#20O#21!2O$#1_#20_#1!9_#2_#1!27_#218_#1!12_#20_#1_#20_#1_#21_#20_#1_#8_#83_#172!2_#195_#3_#8_#161_#10_#30_#43_#16_#92_#31_#49_#12_#68_#79!2_#69!2_#56_#3_#19_#56_#115_#110_#69_#88_#56!2_#69_#88_#35_#19!2_#56_#19_#25_#35_#56_#82_#3_#88_#82_#19_#82_#26_#9!2_#99_#9_#99_#88_#25_#8_#25_#88_#38_#103_#111_#26_#191_#190_#203_#122_#155_#169!2_#155_#156!2_#155_#169!10_#113_#24_#8_#1_#6_#7_#1_#19_#81_#92_#19_#1_#2_#1!3_#20_#1!3_#20!2_#1!37_#2_#1!10_#8_#1_#20_#1!3_#21!2_$-#1!2@#21@#20@#1!30@#149@#1!2@#149@#1!16@#20@#1@#2@#20@#1@#8@#83@#147!2@#138@#148@#158@#60@#109@#11@#17@#106@#51@#64@#50@#68!4@#88!4@#110@#79!2@#69@#35@#82@#88@#79@#56@#7@#35@#88@#225@#19@#82@#88@#82@#7@#8@#39@#82@#56@#68@#50@#125@#101@#98@#50@#51@#56@#82@#123@#145@#51@#127@#94@#139@#161@#36@#175@#190@#154@#96@#169!4@#155@#151@#169!12@#93@#3@#8@#2@#20!2@#7@#2@#1!2@#20@#1!2@#2@#1@#20@#1!3@#2@#1!17@#2@#1!6@#20@#1!17@#2@#1!12@#2@#21@$#1A#2A#20A#1!48A#20A#1!2A#20A#1!4A#8A#88A#147A#172A#15A#61A#44A#144A#30A#31A#29A#75!2A#50A#110A#68!2A#69!2A#82A#19A#110A#80A#79A#67A#88A#19A#88!5A#19A#7!2A#3A#6A#3A#7A#8!2A#82A#69A#12A#11A#31A#50!2A#67A#80A#51A#19A#82A#88!2A#164A#139A#120A#60A#144A#162A#159A#84A#175A#37A#169!4A#151A#169!14A#163A#201A#2A#1!3A#20A#1A#20!2A#1A#2A#1!3A#2A#20A#1!2A#20A#1!6A#20A#1!33A#2A#1!10A#20A#1!3A#2A#21A$#1!2C#20C#1!8C#2C#1!2C#2C#1!20C#20C#1!13C#149C#1!4C#20C#1C#20C#1C#8!2C#164C#147C#134C#76C#130C#31C#65C#43C#58!2C#69!2C#80C#68!3C#88C#82C#19!2C#81C#79C#51C#56C#6C#35C#82C#8!2C#25C#19C#7C#6!2C#8!4C#7C#35C#17C#58C#45!2C#109!2C#50C#69C#56C#5C#19C#88!2C#82C#181C#205C#120C#75C#38C#175!3C#154C#163C#169!2C#151C#169C#155C#169!6C#155C#169C#155C#169!4C#155!2C#139C#92C#8C#1C#2C#7C#1!2C#2!2C#20C#1!10C#20!4C#1!49C#2C#21C$#1G#2G#20G#21G#1!43G#149G#1!6G#20G#21G#1!2G#8G#3G#150G#41G#16!2G#57G#58G#62G#130G#50G#75G#68G#99G#79G#68!2G#88G#19!2G#3G#88G#79G#68G#88G#7G#19G#123G#82!2G#3G#25G#3G#8!6G#3G#75G#28G#16G#50G#67G#66!3G#68G#56G#6G#25G#88G#110G#56G#69G#188G#167G#79G#128G#175G#37G#175G#176G#96G#169!2G#151G#155G#169!13G#155G#169!3G#96G#182G#19G#6G#7G#1!6G#20G#2G#1G#20G#1!5G#20G#1!4G#20G#1!10G#2G#1!30G#20G#1!2G#20G#1!4G#21G$#2O#20!2O#1!49O#20O#1O#20!2O#1!2O#6O#161O#121O#31!2O#91O#49!3O#17O#69O#110O#81O#79O#67O#68O#79O#82O#6O#8O#3O#69O#68O#88O#19!2O#123O#82O#88!2O#19!2O#88O#81O#68O#67O#9O#17O#78O#43O#16O#48!2O#16O#78O#89O#58O#17O#26O#3O#8O#56O#79O#68O#9O#10O#125O#67O#60O#54O#175O#84O#54O#96O#155O#169!8O#151O#169!4O#155O#96O#163!2O#96!2O#169!3O#163O#115O#6O#2O#1O#20!3O#8O#1!2O#20O#1!2O#20O#1!6O#20O#1!23O#20O#1!24O#20O#1!2O#2O#21O$#1_#20_#21_#1!8_#2_#1!34_#149_#1!5_#20!2_#1_#20_#1_#82_#51_#150_#144_#121_#42_#48_#46_#49!2_#67_#110_#80_#81!2_#59_#69_#88_#7_#6_#8_#3_#56_#69!2_#88!2_#92_#56_#92_#69_#88_#92!2_#12_#116_#32_#14_#32_#14!2_#61_#66_#61_#12_#30_#17_#75_#26_#19_#3_#56_#79_#88_#145_#60_#18_#81_#9_#71_#37_#175!3_#169!13_#155_#169!2_#96_#136_#120_#189_#127_#175_#37!2_#120_#81_#2_#8_#1!5_#20_#1!2_#20_#1!3_#20_#1!6_#20_#1!17_#2_#20_#1!30_#21!2_$-#1@#20!2@#1!46@#20@#1@#2@#20@#21@#20@#5@#26@#40@#31@#65@#195@#104@#134@#48!2@#49@#16@#67@#79@#59@#79@#59@#75@#35@#82@#56@#19@#56@#92@#106@#28@#100@#61@#46@#42@#100@#131@#32!2@#42@#100@#14@#33!2@#48@#16@#130@#63@#62@#59@#17@#60@#26@#67!2@#88@#19@#56@#79@#69@#145@#164@#126@#81@#51@#160@#175!3@#37@#163@#169!15@#155!2@#176@#34@#137@#144@#189@#172@#120@#92@#8@#2!2@#8@#20!2@#1!4@#20@#2@#1@#20@#1!6@#20@#1!13@#2@#1!5@#20@#1!32@#21@$#1!10A#2A#1!38A#20A#1!2A#2A#20A#21A#144A#13A#31A#27A#172A#104!2A#14A#48A#49!2A#75A#68A#79A#67A#59A#69A#88A#69A#29A#10A#78A#44A#33A#46A#32A#14A#33A#44A#48A#44A#45A#43A#28!2A#45!2A#16A#64A#65A#12A#40A#27!2A#148A#30A#67A#79A#50A#69A#3A#19A#56A#82A#3A#164A#127A#182A#60A#38A#159A#175!2A#159A#96A#169!15A#155A#151A#169A#151A#22A#190A#127A#60A#88!3A#6A#2!2A#8A#20A#1A#20A#1!4A#20A#1!3A#20A#1!3A#20A#1!3A#20A#1!16A#21A#20A#1!17A#2A#1!12A#2A#70A$#1C#20C#1!5C#2C#1!41C#20!2C#1!2C#25C#161C#121C#27C#160C#112C#172C#104!2C#32C#61C#57C#144C#92C#106C#68C#69C#92C#161C#12C#13C#28C#101C#58C#33!2C#131C#44C#11C#50C#67!2C#79C#59C#69!2C#68C#106C#68C#67!2C#92C#82C#19C#25C#145C#26C#67C#50C#110C#88C#3C#39C#82C#225C#7C#39C#88C#202C#126C#71C#175C#84C#37!2C#179C#169!3C#155C#169!11C#151C#169!5C#168C#115C#39C#2C#145C#110C#82C#8C#6C#2C#1C#20C#1!2C#20C#1!3C#20C#2C#1!2C#20C#1!3C#21C#20C#1!18C#20C#1!32C#21C$#1G#20G#1!43G#20G#1!3G#20G#1!2G#2G#150G#138G#57G#40G#104G#173G#104G#147G#141G#31G#144G#148G#27G#167G#92G#171G#67G#13G#42G#13G#12G#31G#13G#48G#44G#101G#65G#68G#106G#75G#69G#56G#82G#92G#28G#16!2G#17G#75G#19!2G#3G#7G#35G#88G#75G#81!2G#88G#149G#8!2G#3G#88!2G#19G#88G#115G#137G#22G#159G#84G#175G#37G#175G#122G#169!14G#155G#169G#155!3G#169G#155G#185G#8!3G#19G#26G#88G#2G#1!2G#2G#1G#20G#1!3G#20G#1!3G#20G#1!3G#20G#2G#20G#1G#20G#1!27G#2G#1!2G#2G#1!5G#8G#1!8G#20G#1!4G#21G$#1O#20O#1!8O#2O#1!2O#2O#1!37O#39O#150O#41O#29O#40O#172O#173O#172O#41O#141O#133O#77O#40O#10O#27O#106O#144O#10O#42O#14O#42O#45O#99O#28O#89O#12O#67O#69O#75O#88!2O#56O#35O#145O#51O#16O#178O#48O#28O#67O#82O#8!2O#3O#92O#80O#67O#68O#88O#123O#6O#39O#8O#82O#88O#69O#82O#81O#80O#51O#126O#163O#84O#190O#175O#37O#175O#122O#169!2O#155!2O#169!4O#151O#169!4O#155O#151O#169O#163!2O#132O#174O#176O#143O#19O#6O#8O#3O#69!2O#2O#6O#2O#20O#1O#20O#1!5O#20O#1!2O#20O#1!2O#2O#20O#1!4O#2O#1!44O#20O#2O#1!2O#21O$#1!33_#149_#1!7_#149_#1!2_#20_#1_#20!2_#1!2_#8_#193_#121_#27_#153_#173!2_#147!2_#77!3_#29_#17_#77_#10_#204_#147_#166_#14_#141_#17_#50_#99_#101_#59_#56!2_#88_#56_#25_#39!2_#92_#50_#44_#33_#45_#29_#56_#19_#56_#88_#81_#98_#101_#68_#56_#19_#3_#8!2_#19_#82_#35_#110_#80!2_#137!2_#51_#69_#182_#159_#84_#37!2_#154_#96_#169!12_#96_#191_#111_#98!2_#101_#64_#109_#64_#50_#70_#8_#6_#3_#56_#81_#3_#8_#2_#6_#20_#1!3_#8_#20_#1!5_#20_#2_#20_#1!8_#2_#1!31_#8_#1!8_#20_#1!3_#2_#21_$-#1!6@#20@#1!35@#20@#1@#83@#198@#70@#1@#6@#8@#6@#128@#60@#40@#173!4@#147@#173@#121@#60@#29@#224@#147@#173!2@#147@#42@#31@#50@#75@#81@#67@#59@#56@#82@#7@#19@#69@#19@#25@#92@#64@#44@#50@#9@#67@#88!3@#34@#28!2@#98@#67@#56@#8!2@#7@#82!2@#115@#35@#69@#98@#139@#22@#136@#127@#167@#18@#51@#162@#159@#203@#154@#37@#96@#169!5@#155@#151@#169!4@#155@#96@#150@#17@#67!2@#66@#80@#50@#80@#88@#6@#2!2@#6@#26@#30@#19@#1@#20@#2@#1@#8@#20@#1!2@#8@#1!2@#20@#1@#2@#1!10@#2@#1!36@#20@#1!9@#21@$#1!2A#20A#1!10A#2A#1!18A#149A#1!6A#149A#1!4A#114A#121A#128A#82A#7A#25A#161A#120A#29A#112A#173!3A#121A#128A#119A#171A#29A#41A#147A#173A#147A#138A#45A#63A#67A#69A#99A#51A#19!2A#2A#7!2A#3A#88A#82A#59A#89A#109A#75A#82A#88A#69A#80A#81A#56A#82A#88A#35A#3A#7A#19A#7A#19A#88A#110A#69A#56A#92A#181A#189A#190A#159A#175A#54A#181A#60A#75A#88A#191A#190A#37A#203A#179A#96A#169!3A#155A#169!8A#96A#182A#59A#17A#98A#92A#19A#7A#6A#8!3A#25A#60A#30A#60A#3A#2A#1!2A#20A#1A#8A#1!3A#8A#1!2A#20A#1A#20!2A#1!2A#2A#1A#2A#1!22A#20A#1!17A#8A#1!3A#20A#1!4A#21A$#1!34C#149C#1!8C#20C#2C#83C#121C#133C#41!2C#138C#147C#173!3C#112C#153C#158C#25!2C#27C#147C#172C#147!2C#61C#64C#99C#50C#88C#69C#80C#35C#8!4C#25C#56C#88C#82C#17C#11C#69C#88C#69C#79C#110C#51C#123C#3!4C#19C#56C#88C#69C#88C#82C#88C#150C#137C#120!2C#190C#203C#84C#175C#84C#120C#18C#60C#59C#92C#209C#190C#179C#154C#96C#169!3C#151C#169!8C#155C#199C#17C#138C#100C#188C#82C#8!5C#2C#77C#92C#45C#9C#8C#20!2C#1C#8C#20C#1C#6C#1!2C#8C#1!3C#2C#1C#20C#21C#1!42C#20C#1!9C#70C$#1!38G#149G#1!2G#149!2G#1!3G#35G#41G#43G#172G#147G#172G#147G#31G#121G#161G#39G#25G#8G#148G#13G#172G#147G#118G#58G#50!3G#35G#56G#79G#88G#7G#8G#6G#8G#123G#19G#51G#69G#81G#75G#56G#3G#82G#51G#88G#115G#19G#3!2G#8!2G#35G#110G#68G#88G#82G#3G#7G#123G#160G#159G#84!4G#203!2G#175G#71G#167G#60!2G#51G#145G#153G#205G#203G#85G#96G#169!8G#155G#169!3G#120G#181G#100G#118G#100G#88G#8!4G#7G#8G#27G#92G#45G#78G#2G#7!2G#8G#1!2G#6G#1G#8G#1!2G#8G#20G#1G#20G#1G#2G#20G#1!5G#2G#1!12G#2G#1G#2G#1!2G#2G#1G#2G#1!2G#20G#1!18G#20G#1!2G#20G#1G#21G$#1O#2O#1!31O#149O#1!12O#20O#5O#82O#193O#195O#172O#16O#31O#150O#145O#1O#39O#158O#43O#32O#14O#13O#50O#66O#67O#69O#82O#25O#51O#75O#6!4O#82O#26O#88O#69O#68O#88O#19O#35O#3O#82O#69O#88O#7O#8O#19O#82O#7O#123O#7O#19O#6O#8O#7O#226O#223O#227O#129O#142O#84!3O#203O#95O#84O#53!2O#111O#98O#34O#137O#115O#82O#119O#180O#159O#85O#96O#169O#155O#169!2O#155O#169!3O#155O#169O#71O#188O#182O#195O#100O#195O#82O#6O#8O#7O#6O#8O#19O#28O#57O#43O#75O#6O#1!3O#6O#1!3O#20O#1!7O#20O#1!5O#2O#1!8O#2O#1!2O#2O#1!12O#20O#1!22O#21O$#1_#20_#21_#20_#1!33_#149_#1!2_#149_#1!4_#20_#2_#20_#1_#19_#138_#41_#9_#150_#145_#8!2_#25_#17_#32_#61_#17_#68!2_#106_#69_#19_#8_#3_#56_#82_#8_#1!2_#19_#69_#145_#75_#79_#35_#82_#69_#110_#82_#110_#88_#7_#8_#39_#8_#25_#6_#7!3_#207_#228_#226_#206_#218_#227!2_#129_#162_#54_#175_#95_#54_#203_#54_#203_#139_#167_#34_#167_#60_#51_#145_#51_#71_#37_#163_#96_#169!5_#155_#169!3_#127_#181_#51_#88!2_#82_#6_#8!2_#7_#164_#7_#171_#131_#32_#161_#7_#21_#6_#1_#8_#1!2_#20_#1!3_#20_#1!2_#20_#1!2_#2_#20_#1_#2_#1!20_#2_#1!5_#2_#1!19_#20_#1_#20_#1_#21_$-#2!2@#20@#1!3@#20@#1!34@#20@#1!3@#20@#1!2@#8@#88@#138@#57@#119@#25@#8@#39@#25@#59@#48@#62@#59@#88@#81@#66@#92@#3@#8@#3@#82@#88@#6@#20@#1@#6@#19@#68@#56@#88@#82@#123@#79@#80@#88@#82@#88@#123@#6@#8!4@#6@#1@#6@#207@#227@#217@#227@#229@#206@#207@#229@#230@#129!2@#38@#175!2@#84@#53@#84@#120@#98@#137@#98@#137@#60@#201@#56@#26@#139@#54@#163@#169@#151@#169!2@#155@#169!2@#155@#169@#96@#182@#25@#8!5@#6@#2@#7@#56@#78@#58@#28@#19@#6!2@#2@#6@#1!2@#8@#1!2@#20@#1!4@#8@#1!2@#20@#21@#1!2@#20@#2@#1!15@#2@#1!5@#2@#1!4@#20@#1!18@#20@#1@#2!2@$#1A#2A#20A#1!2A#20A#1!2A#2A#1!24A#20A#1!4A#20A#1A#20A#1!4A#20A#1!2A#8A#26A#172A#40A#164A#39!2A#25A#150A#57A#42A#101A#59A#68A#51A#56A#7A#8!2A#3A#88A#19A#6A#8A#1A#8A#82A#67A#56A#19A#56A#110A#79A#110A#88A#82A#123A#6A#8!6A#6A#149A#229A#217A#229A#217A#229!2A#207A#6A#218A#230A#223A#4A#132A#37A#203!3A#71A#27A#98A#137!2A#60A#137!2A#115A#88A#120A#84A#179A#169!9A#157A#39A#1A#20A#8A#1A#8A#6A#2A#8A#171A#18A#56A#51A#39A#149A#6A#2A#1!2A#8A#1A#20A#1!3A#20A#1!6A#20!3A#1!10A#2A#1!3A#2A#1!7A#2A#1!3A#2A#1!2A#21A#20!3A#1!14A#20A#1!2A#21A$#1C#20C#21C#1!3C#2C#1!24C#20C#1!7C#20C#1!5C#20C#1C#7C#5C#144C#166C#9C#39C#19C#66C#12C#141C#49C#61C#50C#51C#106C#56C#7!2C#3C#7C#3C#69C#3C#6!2C#8C#6C#35C#92C#19C#56C#79C#68C#88C#51C#82C#7C#8!4C#7!2C#8!3C#20C#207C#229C#217C#227C#217C#229C#231C#226C#6C#218C#232C#223C#202C#200C#84C#190C#54!2C#111C#98C#34C#167C#18C#201C#88C#123C#19C#164C#36C#94C#85C#96C#169!2C#155C#169C#155C#169!2C#73C#8C#1C#8!2C#6!3C#2C#19C#88!2C#5C#26C#3C#2C#7C#1!2C#8C#20C#6C#2C#1C#20C#1!3C#20C#1C#8C#1!3C#20C#1C#20C#1!18C#2C#1!7C#2C#1!2C#20C#21C#1!15C#20C#1C#2C#21C$#2!2G#20G#1!2G#2G#1!27G#20G#1!2G#20G#1!2G#20G#1G#20G#1!2G#20G#1G#25G#60G#128G#120G#166G#51G#39G#27G#14G#134G#91G#61G#58G#69G#51G#26G#7G#3G#19G#35G#82G#19G#69G#6!2G#8G#20G#8G#56G#69G#75G#67!2G#69G#35G#82G#6G#19G#6G#8!3G#3G#8G#6G#7G#149G#123G#6!2G#226G#227G#217G#227G#233G#212G#213G#6G#229G#223G#229G#146G#22G#54G#84G#203G#120G#60G#137!2G#123G#3G#8G#6G#21G#8G#19G#93G#71G#179G#169!6G#96G#196G#8G#6G#7G#1!2G#2G#8G#3G#88G#123G#145G#88!2G#6G#20!2G#2G#1G#6G#2G#1G#8G#20G#1!2G#20G#1!26G#2G#1!7G#2G#1!6G#20G#1!15G#20G#1G#21G$#2O#20O#1!6O#2O#1!2O#2O#1!2O#2O#1!2O#2O#1!11O#20O#1!2O#20O#1!4O#20O#1!2O#20O#1!2O#20O#1O#83O#111O#112O#172O#161!2O#150O#119O#90O#138O#134O#14O#58O#50O#79O#51O#123O#7O#88O#69O#110O#19O#7O#92O#7O#8!3O#123O#79O#67O#80O#68O#69O#35O#7!2O#2O#7O#6O#2O#19O#88!2O#123O#129O#225O#123O#225O#129O#225O#74O#234O#223O#232O#235!2O#236O#229O#206O#218O#229!2O#201O#203O#54O#95O#136O#111O#88O#123O#25O#3O#7O#8O#6!2O#1O#25O#119O#182O#54O#169!2O#155O#169O#155O#163O#201O#2O#6!2O#8!4O#19O#51O#19O#56O#88O#19O#20O#2O#6O#2O#6O#1O#8!2O#1O#20O#1!4O#8O#1!2O#8O#1!4O#20O#1!21O#2O#1!27O#2O$#1!2_#2_#1!3_#20_#2_#1!22_#20!2_#1_#20_#1!4_#20_#1_#20_#1!3_#21_#139_#120_#60_#161_#35_#193_#150_#224_#172_#134_#42_#43_#50_#68_#69_#88_#19_#88_#68_#158_#6!2_#19_#35_#6!2_#7_#56_#79_#67_#99_#79_#82_#6_#3_#7_#8_#6_#24_#2_#6_#123_#19_#123_#82_#88_#123_#237_#238_#115_#201_#223_#207_#239_#219_#235!2_#212_#213_#218_#20_#149_#240_#226_#185_#54_#95_#94_#60_#8!5_#6_#2_#8!2_#20_#8_#158_#111_#52_#203_#96_#169_#96_#160_#82_#8_#1!3_#8!2_#6_#88_#67_#26_#88_#7_#6_#2_#1!2_#20_#2_#1_#20_#1_#7_#1_#20_#1_#8_#1!2_#8_#1!2_#8_#1_#20_#1!3_#20!3_#1!6_#2_#1!18_#20_#1!16_#20_#1!3_$-#1@#20@#1!3@#2@#1!15@#20@#1!2@#20@#1!2@#20@#1!3@#20@#1!2@#20!4@#1!2@#20@#2@#20@#21@#150@#27@#92@#145@#39@#70@#59@#121@#173@#104@#91@#63@#68!3@#164@#6@#123@#69@#56@#7@#6@#2@#3@#88@#8!2@#88@#79@#50@#51@#88@#19@#2@#8!3@#2@#25@#8@#3@#149@#123@#207@#123@#207@#20@#225@#238@#196@#209@#237@#129@#226@#241@#242@#235!2@#239@#229@#227@#225@#6@#7@#229@#74@#202@#126!2@#5@#8!4@#2@#8!3@#1@#8!3@#3@#56@#29@#102!3@#83@#6@#1@#20!2@#1!2@#8@#158@#106@#69@#35@#7@#1@#8@#7@#1@#20@#1@#8@#6@#8!2@#1@#20@#1@#8@#1@#8@#1!2@#8@#1!2@#8@#1!50@#20!2@#1@$#1A#21A#20A#1A#2A#1A#20A#1!7A#2A#1!10A#20A#1!3A#20A#1A#20A#1!6A#20!2A#1A#20A#2A#35A#164A#2A#8A#6A#3A#145A#195A#147A#166A#172A#65A#68A#69A#79A#51A#3A#19A#82A#19A#7A#3!2A#8!2A#7!2A#88A#79A#81A#164A#82A#8A#39A#8!3A#25A#8!3A#226A#225A#226A#229!2A#227A#225A#149A#74A#143A#200A#81A#201A#227A#229A#223A#210!2A#223A#229A#225!2A#24A#6A#7A#228A#240A#218A#206A#8!4A#2A#8A#6A#2A#8A#1A#8A#6A#8!2A#7A#69A#92A#35A#39A#8!2A#2A#7A#8A#39A#19A#69A#75!2A#56A#8A#6A#1A#8A#6A#8A#1A#8A#2A#1A#20A#2A#8A#1A#6A#1!3A#6!2A#1!2A#8A#1!2A#20A#1!2A#20A#1!33A#20A#1!10A#20A#1!2A#21A$#2C#20C#1C#2C#1!2C#2C#1!16C#20C#1!8C#20C#1C#20C#1C#20C#1!3C#20C#21C#164C#5C#8!4C#2C#30C#138C#134C#42C#107C#117C#69C#79!2C#88C#82C#123!2C#3C#6C#8!4C#3C#83C#68C#79C#56C#2C#8!7C#3C#8C#20C#149C#207!2C#123C#229!2C#217C#234C#229C#243C#191C#205C#195C#237C#217C#207C#239C#213C#240C#225!5C#8C#218C#234C#229!2C#8!5C#39C#8C#3C#19C#8C#6C#1C#8C#39C#82C#79C#67C#110C#7C#1C#6C#2C#7C#26C#51C#26C#92C#19C#7C#6C#1C#6C#1C#20C#1C#20C#8C#1C#6C#2C#8C#6C#1C#6C#1!2C#20C#1!2C#8C#1!4C#8C#1!3C#20C#21C#20C#1!6C#2C#1!38C#2C$#1G#2G#20G#1!21G#20G#1!13G#20G#1G#2G#5G#88G#2G#8G#6G#8!2G#164G#94G#138G#107G#42G#11G#75G#158G#110G#79G#56G#35!2G#82G#3G#6!2G#2G#7G#82G#88G#110G#69G#56G#19G#7!2G#8G#6G#3G#8!3G#20G#74G#226G#229G#225G#207G#20G#226G#225G#229G#244G#213G#218G#225G#160G#172G#181G#237G#229!2G#223G#123G#229G#225!4G#123G#21G#6G#218!2G#1G#8!2G#2G#8G#1G#8G#26G#115G#8G#1G#8!3G#35G#80G#81!2G#19G#8G#1G#7G#56G#88!2G#19!2G#6!3G#2G#1G#20G#6G#1G#8G#20G#2G#8!2G#20G#1G#8G#1G#20G#1G#8G#1!3G#8G#1!2G#8G#1!4G#2G#1!20G#2G#1!2G#2G#1!21G#20G#1!2G$#1!5O#2O#1!15O#20O#1O#20O#1!8O#20O#1!7O#20O#21O#2O#8!4O#19O#9O#172O#133O#58O#100O#50O#56O#7O#68O#69O#82O#123O#82O#7O#206O#3!2O#35O#56O#110O#50O#88O#19O#123!3O#25O#8O#123O#234O#228O#218O#225O#218O#7!2O#234O#229!2O#213O#227O#207O#123O#229O#241O#213O#228O#74O#191O#208O#182O#237O#7O#149O#229O#149O#123O#225!4O#123O#74O#8!3O#1O#8!3O#2O#8O#69O#88O#1O#20O#1O#19O#56O#19O#110O#79O#67O#164O#6O#8O#19O#88O#6O#2O#3O#69O#19O#1O#3O#21O#2O#6O#21O#6O#2O#8O#1O#20O#2O#8O#1O#6O#1O#8O#20!3O#1O#8O#1!2O#8O#1!5O#20O#1!47O#21O$#1!2_#20_#1_#2_#1!18_#20_#1!7_#20_#1!2_#20_#1_#20_#1!3_#20_#164_#35_#25_#83_#5_#7_#60_#100_#133_#31_#58_#57_#19_#8_#82_#80_#69_#8_#2_#8_#7_#8_#19_#82_#75_#59_#67_#68_#69_#5_#82_#6_#8_#39!2_#8!2_#7_#19_#226_#229_#223_#231_#240_#231_#228_#229_#227_#245_#246_#129_#225_#213_#230_#234_#5_#162_#121_#137_#123_#206_#229_#149_#6_#19_#225!2_#123_#225_#245_#6_#8!3_#1!2_#8!3_#51_#115_#8!3_#35_#88_#145_#51_#68!2_#51_#19_#6_#7_#19!2_#8_#2_#68_#3_#6_#2_#20_#1_#20_#8_#20_#1_#8_#6_#1_#8_#20_#8_#1_#20_#2!2_#1_#2_#24_#3_#8!2_#1!3_#8_#1!2_#2_#1!2_#20_#1!5_#2_#1!2_#2_#1!16_#20_#1!18_#21_$-#1!2@#21@#1!11@#2@#1!26@#164@#26@#25@#88@#19@#75@#100@#9@#92@#65@#13@#67@#39@#8@#123@#80@#69@#3@#8!2@#6@#8@#35!2@#56!2@#88@#82@#19@#3@#6@#8!2@#123@#129@#201@#35!2@#88@#145@#25!2@#149@#243@#231@#213!2@#227@#87@#242@#184@#246@#194@#213@#247@#228@#82@#209@#60@#123!2@#7@#229@#218@#149@#123!2@#225!2@#87@#7@#8@#1@#8@#1!3@#8@#2@#88@#51@#2@#8!2@#82@#51@#25@#88@#51@#79!2@#35@#8!2@#7@#82@#6@#3@#75@#19@#2@#20!3@#2@#20@#1@#6@#1!2@#6!2@#2@#1@#7@#1@#20@#1@#2@#19@#195@#30@#8@#1!7@#20@#1@#20@#21@#20@#2@#1!9@#2@#1!33@$#1A#20!2A#2A#1!27A#20A#1A#20A#1!3A#20A#1!3A#3A#106A#69A#164A#92A#45A#10A#26A#171A#101A#17A#51A#2A#8A#82A#80A#88A#25A#8!2A#6A#8!2A#3A#6!2A#8!5A#25A#19A#18A#137A#188A#209A#191A#127A#168A#191A#162A#150A#92A#158A#123A#243A#213A#223!2A#214A#151A#73A#227A#213!2A#234A#19A#24A#227A#225A#207A#229A#123A#8A#20A#218A#123!2A#206A#8A#1A#8!6A#2A#88A#110A#19!2A#8A#6A#60A#56A#82A#88A#110A#80A#69A#8A#6A#82A#69A#56A#19A#75A#88A#3A#7A#1A#20A#1!2A#8A#1A#20A#8A#2A#1A#8A#1A#8A#20A#2A#6A#2A#19A#181A#75A#8A#1A#20A#1A#8A#1A#20A#1A#2A#20A#2A#20!2A#1!31A#20A#1!11A#70A$#2C#21C#20C#1!25C#20C#1!2C#20C#1C#20C#1C#20!2C#1C#20C#1!2C#3C#58!2C#17C#45C#62C#80C#145C#68C#99C#148C#35C#25C#6C#82C#80C#56C#8!3C#2C#8C#3C#7C#8!5C#82C#126C#209C#52C#174C#179C#163C#96C#169!2C#96!2C#179C#163C#52C#168C#162C#82C#3C#225C#241!2C#227C#152C#245C#229C#231C#244C#218C#8C#218C#229!2C#223C#19C#129C#74C#7C#206C#227C#20C#1C#8C#1C#8C#1C#8C#1C#8!2C#88C#81C#67C#69C#8C#39C#98C#88C#82C#69!3C#115C#6C#2C#19C#56C#51C#193C#82C#158C#88C#7C#20C#2C#6C#2C#20C#1C#8C#2C#20C#8C#1C#20C#1!2C#20C#1C#20C#2C#59C#88C#1!3C#20C#1C#8C#1!3C#20C#1!7C#2C#1!4C#2C#1!19C#20C#1!2C#20C#1!7C#20C#1!2C#21C$#1G#20G#21G#20G#1!28G#20G#1!4G#21G#1!2G#3G#82G#29G#161G#10G#48G#50G#26G#158G#50G#9G#82G#123G#7G#8G#82G#79G#56G#8!3G#19!2G#35G#8G#6G#1G#8G#39G#35G#209G#127G#163G#96!3G#169!5G#96G#169!3G#163G#139!2G#135G#129G#5G#227G#240G#243G#213G#229G#231G#240G#227G#226G#7G#226G#244G#225G#5G#52G#129G#7!2G#243G#7G#8G#1G#8G#1G#8G#1G#8!2G#2G#88G#67!2G#88G#8!2G#81G#59G#148G#51!2G#75G#69G#56G#6G#2G#193G#60G#82G#8G#7G#82G#20G#1G#20G#2G#8G#1G#20G#1G#6G#1!2G#6G#1G#6G#8G#1!3G#2G#60G#88G#2G#1G#20G#1!3G#20G#1!13G#2G#1!3G#2G#1!2G#2G#1!10G#20G#1!4G#20G#1G#21G#20G#1!9G#21G$#1O#20!2O#1!11O#2O#1!14O#20O#1!2O#20O#1!2O#20O#21O#5O#74O#19O#59O#17O#82O#2O#144O#16O#68O#88O#56O#77O#50O#82O#3!2O#8O#82O#67O#56O#8O#3!2O#82!2O#19O#8O#6!3O#102O#71O#94O#95O#96O#169!6O#96O#169!4O#96O#169O#179O#136O#95O#38O#93O#164O#74O#240O#234O#229O#240O#223O#217O#244O#229O#3O#149O#225O#88O#137O#119O#88O#24O#8O#1!2O#8O#20O#8!2O#1O#8!3O#56O#79O#67O#88O#8O#39O#88O#45O#29O#82O#78O#89O#101O#69O#8!2O#88O#81O#88O#7O#1O#20!2O#2O#6O#8O#20O#1O#8!2O#1O#6O#1!2O#8O#1O#20O#2O#6O#8O#35O#181O#88O#1!3O#20O#1!38O#20O#21O#20!2O#1!5O#20O#1O#20O#1!3O$#2_#21_#20_#1!27_#20_#1!2_#20_#1_#20!2_#1_#19_#21_#7_#19_#1_#19_#195_#11_#69_#88_#26_#204_#50_#56_#8_#3!2_#82_#81_#19_#8!2_#7_#88_#82_#20!2_#6_#7_#153_#136_#84!2_#85_#169!5_#96_#169!9_#163_#22_#103_#197_#162_#19_#243_#244_#229!2_#225_#240_#227_#217_#229_#7_#149_#88_#201_#153_#137_#126_#7_#5_#20_#1!2_#20_#1_#8!2_#7_#3!2_#115_#79_#92_#8!2_#21_#101_#124_#30_#106_#131_#186_#98_#19_#8_#39_#161_#51_#7_#20!2_#2_#20_#2_#1_#8_#20_#1_#20_#1_#8_#20_#8_#20_#1!3_#2_#1_#82_#67_#19_#1_#20_#1!2_#20_#1!4_#20_#1!32_#20!2_#1!4_#20_#1!7_#21_$-#2@#20@#1!25@#20@#1!4@#20@#1@#20!2@#1@#20@#1@#20@#2@#1!2@#26@#42@#12@#88@#35@#119@#41@#79@#88@#8!2@#7@#19@#164@#56!2@#82!2@#35@#206@#1@#6!2@#119@#22@#95@#54@#72@#96@#169!2@#96@#169!12@#96@#163@#136@#54@#159@#150@#19@#225@#231@#244@#207@#226@#229!2@#227@#229@#2!2@#129@#126@#110@#201@#88@#237@#19@#6@#1!2@#8@#1@#8@#82@#19@#39@#3@#69@#88@#8!2@#39@#9@#108@#89@#65@#33@#178@#43@#145@#25@#19@#83@#106@#98@#3@#1@#20!2@#2@#6@#1@#8@#1@#8@#20@#1@#20@#1@#20@#1@#20@#1@#8@#149@#75@#126@#82@#20!2@#1@#20@#1!2@#20@#1!3@#20@#1!9@#2@#1!22@#2@#1!8@#20@#1!3@#2@$#1A#20A#1!26A#20A#1!3A#20A#1!4A#20!2A#1!3A#8A#161A#41A#28A#88!2A#69A#43A#99A#56A#8!3A#6A#7A#35A#56A#82A#5A#6A#8A#1A#7A#83A#168A#95!2A#203A#96A#169A#96A#169!8A#155A#169A#155A#169!4A#96A#85A#95A#159A#180A#102A#164A#226A#227A#244A#228A#218A#229!3A#226A#8A#19A#129A#237A#115A#88A#110A#19A#20!2A#1A#20A#1A#8A#7A#123A#8A#3A#110A#88A#8!3A#19A#50A#178A#48A#63A#108A#116A#101A#59A#19A#69A#92A#44A#59A#2A#1A#6A#1A#8A#20A#1A#20A#1A#8A#20A#1!3A#20A#1A#20A#1A#35A#67A#92A#6A#20!2A#1!9A#20A#1!29A#20A#1A#20A#1!5A#20A#1!3A#20A#1!2A#21A$#1C#21C#20C#1!21C#20C#1!3C#20!3C#1!2C#20C#1!2C#20C#1!4C#20C#1C#3C#30C#27C#110!2C#79C#65C#124C#75C#3C#8!4C#6!2C#8C#6C#88C#5C#6C#5C#52C#112C#54C#37C#175C#96C#169!5C#96C#169C#155C#156!7C#169!3C#96C#154C#190C#159!2C#191C#82C#20C#227C#244C#225C#218C#229!2C#225C#7C#8!2C#5C#225C#88C#225C#6C#8C#1C#6C#1C#8C#2C#25C#82C#8!2C#69C#88C#8!4C#88C#42C#48C#117C#31C#186!2C#28C#92!2C#69C#65C#100C#119C#3C#8!2C#2C#8C#1C#20C#8C#2C#1C#6C#1C#20C#1C#6C#1C#35C#75C#68C#26C#7C#20C#1C#20!2C#1!2C#20C#1!5C#20C#1!6C#2C#1!2C#2!2C#1!15C#20C#1!13C#20C#1!3C$#1G#20G#1!29G#20G#1!3G#20G#1!2G#20G#1!2G#20G#7G#1G#19G#67G#125G#106G#68G#75G#89G#16G#82G#39G#6G#8!2G#1G#8!2G#25G#201G#123G#39G#129G#180G#94G#54G#37G#85G#169!3G#151G#169!3G#155G#156!7G#155G#169!4G#122G#203G#84!2G#205G#38G#82G#7G#229G#231G#225G#207G#229G#225G#123G#7!2G#227G#123!2G#20G#6G#1G#8G#1!3G#82G#8!2G#164G#7G#88G#92G#6G#8!3G#2G#51G#131G#49G#90G#16!3G#58G#65G#92G#9G#32G#189G#59G#35G#8G#6G#2G#1G#20G#1G#20G#1G#20G#8G#1G#8G#21G#123G#68!2G#69G#82G#2G#20!2G#1!3G#8G#1!2G#20G#1!7G#20G#1!22G#20G#1!2G#20G#1!7G#20G#1!2G#20!2G#21!2G$#1!38O#20O#1O#20O#1O#20!2O#8O#59O#134O#49O#59O#26O#64O#48O#79O#3O#39O#8!2O#6O#8!2O#88O#5O#25O#5O#36O#95O#54O#37O#203O#122O#169O#151O#169!4O#155O#156O#155O#156!7O#155O#169!4O#96O#159O#175O#159!2O#191O#164O#7O#229O#244O#229O#207O#225O#229O#225O#149O#227O#228O#218O#123O#207O#1!2O#8O#20O#6O#82O#7O#8O#19O#7O#35O#75O#7O#8!4O#19O#28O#32O#16O#62O#49!3O#42O#67O#171O#75O#10O#138O#167O#56O#5O#1O#20O#8O#20O#1O#8O#1O#8O#6O#35O#88O#79O#81O#164O#26O#35O#1O#20!2O#2O#1O#20O#1!2O#20O#1!9O#21O#20!2O#1O#2O#1!15O#20O#1O#20O#1!3O#20O#1!5O#21O#20!3O#1O#20O#1O#21O$#1!32_#20_#1_#20_#1!3_#20!2_#1!2_#20_#1_#7_#26_#13_#141_#59_#51_#69_#63_#48_#17_#19_#25_#7_#19_#82_#35_#88_#19_#39_#153_#103_#22_#95_#203_#37_#122_#169!5_#155!2_#156!9_#155_#169!4_#85_#154_#203_#54_#84_#95_#182_#88_#5_#229_#223_#225_#149_#226_#243!2_#227_#223_#123_#226!2_#20!3_#1!2_#123_#164_#8_#7!2_#19_#51_#19_#6_#8!3_#3_#56_#12_#91_#130_#100_#42!3_#141_#12_#92!2_#58_#45_#10_#60_#164_#5_#82_#19_#82!3_#88_#115_#79_#99_#81_#69_#3_#69_#82_#20_#2_#20_#1!7_#20_#1!6_#20_#1_#21_#20_#21_#1!27_#20_#1_#2_#1!2_#20_#1!2_#21_$-#1@#20@#1!29@#20@#1!3@#20@#1!3@#20@#1!3@#20@#1@#7@#27@#12@#26@#81@#110@#50@#89@#45@#10@#68@#51!2@#119@#56@#6@#1@#5@#168@#136@#95!2@#84@#154@#122@#169!5@#155@#156!10@#155@#169!3@#96@#163@#203@#159@#203@#84@#190@#54@#180@#93@#35@#74@#244@#243@#123!2@#225@#229@#227!2@#207@#228@#226@#149@#20@#1@#8@#82@#123@#8!2@#5@#82@#149@#7@#8!4@#6@#2@#158@#77@#9@#16@#15@#42@#91@#14@#42@#45@#27@#69@#101!2@#50@#110@#80@#81!2@#79@#81@#115@#79@#80@#79@#51@#88@#19@#56@#81@#82@#20!4@#1!3@#20@#1!9@#21@#20@#1!2@#20@#1!25@#2@#1!2@#2@#1!6@#21@$#2A#21A#20A#1!29A#20A#1!4A#20A#1!2A#20A#2A#1!2A#20A#2A#59A#204A#161A#75A#110A#69A#68A#67!2A#80A#69A#145A#3A#6A#2A#39A#129A#190A#94A#84A#203A#154A#96!2A#169!5A#156!4A#155A#156!6A#169!5A#96A#154A#37A#190A#175A#53A#84A#54A#94A#52A#93A#24A#240A#229A#226A#245A#233A#227A#225!2A#7A#226A#229A#8A#1!2A#6A#88!2A#8A#6A#123!2A#19A#123A#1A#8!2A#2A#8A#3A#144A#77A#31A#16A#91!4A#42A#58A#59A#51A#9A#81A#99A#79A#50A#67A#80!3A#68A#69A#51A#56A#19A#164A#110A#35A#7A#20A#2!2A#20A#1!4A#2A#1!12A#21A#20A#1!17A#20A#1!3A#2A#1A#2A#1!11A$#1!30C#20C#1!2C#20C#1!2C#20C#1!2C#20C#1C#2C#20!3C#2C#149C#59C#17C#26C#51C#68C#69C#110C#51C#79C#69C#8!2C#2C#8C#25C#146C#37C#120C#94C#159C#37C#96C#169!6C#156C#155C#192C#155C#156!5C#155C#156C#155C#169C#96C#169!3C#122C#190C#175C#190C#203C#53C#84!2C#159C#136C#209C#164C#218C#232C#244C#229C#225!4C#7C#218C#149C#1!2C#2C#88C#79C#7C#8C#19C#26C#88C#25C#8!2C#2C#8C#25C#6C#25C#9C#58C#17C#61C#91C#42C#15C#42!2C#16C#75C#56C#88!2C#110C#69!2C#110C#69!2C#88C#82C#123C#88C#19C#88!2C#7C#20C#149C#2C#20C#1C#20C#1!15C#21C#20C#1!26C#2C#1!9C$#1!38G#20G#1!2G#20G#1G#20!2G#1!2G#2G#5!2G#35G#110G#79G#110!2G#79G#88G#3G#8G#3G#8G#5G#184G#179G#104G#54G#190G#85G#96G#169!6G#156G#155G#156!9G#169!6G#96G#85G#84!2G#54G#84!2G#54G#53G#95G#54G#52G#129G#5G#227G#223G#225G#123G#88G#225!2G#5G#229G#206G#1G#8G#7G#69G#88G#8G#39G#82G#68G#69G#3G#8!4G#56G#19G#82G#67G#17G#12G#13G#91!3G#61G#46G#28G#19G#6G#149G#7G#6G#3G#7G#82G#56G#88G#19G#145G#3G#82G#7!2G#6G#20G#1G#20!2G#1G#20G#1!2G#2G#1!9G#2G#1!3G#20G#1!17G#20G#1!5G#2G#1!11G#21G$#1!2O#20O#1!19O#20O#1!2O#20O#1!4O#20O#1!2O#20O#1O#20O#1O#20O#1!5O#21O#20O#1O#2O#20O#1O#8O#19O#110O#79O#68O#69O#81O#88O#8!2O#3O#8O#74O#151O#94O#172O#179O#163O#85O#96O#169!6O#155O#192O#155O#156O#155O#156!6O#169!4O#96O#169!2O#179O#203O#84!3O#203!2O#85O#175O#95O#136O#38O#196O#123O#227!3O#218O#225O#227O#123O#7O#227O#218O#1!2O#158O#51O#82O#8O#25O#92O#9O#88O#3O#8!3O#56O#82O#6O#19O#60O#29O#141O#91!2O#42O#91O#46O#13O#144O#145O#8O#2O#19!2O#56O#110O#69!2O#56O#6O#7O#123O#20O#1O#2O#1O#20O#2O#1O#20O#1!2O#2O#1!16O#2O#1!30O#20O#1O#2O#1O$#1_#2_#1!13_#2_#1!3_#2_#1!5_#20!4_#1!2_#20_#1!4_#20_#1!3_#20_#1_#20!2_#1_#2_#20!2_#1!2_#6_#82_#35_#82_#88_#110_#88_#8_#3_#8!2_#24_#151_#120_#112_#179_#163_#154_#96_#169!9_#156!7_#169!7_#96_#85_#84_#54_#175_#203_#154_#169!3_#163_#53_#84_#94_#102_#202_#229_#213_#227_#123_#225!2_#218_#226_#243_#8_#1_#8_#145_#126_#26_#25_#19_#88_#110_#88_#25_#123_#6_#82!2_#7_#6_#35_#12_#61_#31_#13_#48_#91_#42_#91_#61_#9_#82_#145_#56_#237_#79_#69_#82_#19_#7!2_#2_#6_#2_#6_#1_#6_#2_#1_#20_#1!3_#20!6_#1_#20!2_#1_#2_#1!4_#20_#21_#20_#1!32_#2_#1_$-#1@#20@#1!22@#20@#1!14@#20@#1!4@#20@#1!2@#20@#1@#20!2@#1@#20!2@#35@#81@#56@#8!2@#25@#2@#87@#151@#112@#120@#159@#176@#85@#96@#169!9@#156!7@#169!7@#96@#203@#175!2@#53@#54@#122@#169!4@#96@#179@#95@#159@#120@#198@#24@#223!2@#123@#229@#225@#5@#218@#8@#39@#8!2@#35@#34@#88@#19@#82@#67@#69@#19@#35@#5@#25@#88!2@#7!2@#56@#27@#31@#58@#61@#46@#91!4@#77@#51@#82@#19@#35@#19@#7@#6!2@#2@#7@#2!2@#1@#20@#2@#1!6@#2@#21@#20@#21!2@#20@#1@#21@#20@#21@#20@#1!4@#20@#1!21@#2@#1!10@#20@#1!2@#21@$#1!24A#20A#1!17A#20A#1A#20!2A#1!5A#20A#1A#8A#88A#69A#88A#8!3A#24A#151A#85A#120A#112A#159A#203A#37A#96A#169!9A#156!7A#169!7A#96A#154A#159A#175A#84A#203A#96A#169!6A#122A#95A#136A#84A#168A#24A#227A#223A#225A#226A#207A#7A#146A#202A#7A#8!2A#88A#34A#88A#35A#68!2A#82A#145A#24A#3A#56A#79A#88A#19A#8A#19A#81A#106!2A#31A#141A#46A#42A#46A#48A#100A#31A#56A#8A#6A#8!2A#1A#20A#1A#20A#1A#7A#1!6A#20A#2A#20A#2A#1A#20!2A#21A#20A#1A#20A#1A#20A#1!4A#21A#20A#1!35A$#1!2C#21C#20C#1C#2C#1!14C#2C#1!5C#20C#1!3C#20C#1!3C#20C#1!8C#20C#1C#2C#20C#1C#5C#149C#1!2C#20C#8C#82C#51C#56C#8!3C#114C#151C#71C#120!2C#37C#175C#154C#179C#169!6C#96C#169!2C#156!7C#169!5C#151C#169C#96C#85C#203C#84C#54C#122C#169!8C#179C#37C#136C#103C#127C#129C#243C#229C#74C#226C#5C#127C#54C#93C#2C#39C#8C#88C#167C#67C#69C#68C#69C#19!2C#123C#3C#69C#80C#88C#19C#7C#25C#129C#9C#17C#57C#13C#46C#42C#33C#14!2C#43C#69C#8C#6!2C#20C#1C#20C#1C#20C#1!9C#20C#1C#2C#1C#20!2C#1!2C#21C#20C#1C#21C#20C#1C#2C#20C#1!32C#20C#1C#2C#1C$#1G#20!2G#21G#1!29G#20G#1!4G#8!2G#1!4G#20!2G#1G#20G#164G#19G#1!3G#20G#123G#68G#35G#8!2G#2G#114G#96G#199G#172G#120G#175!3G#154G#96G#169!8G#156!6G#155G#169!7G#96G#163G#203G#54G#84G#122G#169!9G#96G#190G#95G#159G#183G#119G#149G#225G#123G#5G#38G#94G#84G#168G#19G#8G#25G#69G#125G#67G#68G#69G#35G#3G#123G#3G#35G#79G#68G#88G#35G#7G#3G#82G#68G#12G#11G#44G#46G#42G#33!2G#46G#45G#69G#39G#6G#8G#7G#1!2G#8G#20G#2G#20G#1!5G#2G#20G#1!3G#2G#1G#20!2G#1!3G#20G#21G#20G#1!35G#149G#1!2G$#1O#21O#20!2O#1!21O#20O#1!2O#20O#1!8O#3O#5O#6O#1!4O#20O#1!3O#164O#19O#1O#8O#1!2O#82O#68O#82O#6O#8O#6O#4O#122O#120!2O#71O#84O#203O#175O#179O#96O#169!8O#156!5O#155O#169!8O#122O#176O#154O#175O#154O#122O#169!5O#155O#169!4O#96O#163O#95!2O#190O#93O#74O#129O#164O#38O#94!2O#190O#143O#19O#8O#3O#81O#188O#17O#68O#69O#35O#145O#82O#19O#88O#69!2O#19O#8!3O#7O#19O#75O#79O#29O#10O#44O#42!2O#48O#43O#68O#164O#82!2O#7O#6O#1O#2O#20O#1!6O#20O#1O#21O#1!3O#20O#21O#20O#1!3O#2O#1!2O#20O#1!36O#21O$#1_#20_#21_#20_#1!26_#20_#1_#20_#1!2_#20_#8_#119_#111_#6_#20_#1_#20_#1!3_#20_#21_#164_#82_#1_#2_#1_#20_#88_#69_#8!3_#21_#184_#122_#120!3_#72_#175!3_#203_#96_#169_#96_#169!2_#96_#169!3_#156!2_#155_#156_#169!9_#122_#154_#203_#37_#203_#122_#169!12_#96_#203_#54_#174_#102_#143_#52_#120_#136!2_#120_#136_#23_#149_#25_#19_#98_#43_#34_#69_#88_#19_#7!2_#19_#110!2_#69_#19_#8!3_#6_#3_#88_#75_#92_#67_#58_#42_#46_#33_#13_#66_#88_#35_#88_#6!2_#1!2_#20_#1!2_#8_#1!4_#20_#1!3_#20!2_#1!3_#2_#1!2_#2_#1!2_#2_#1!2_#2_#1!28_#149_#1!2_#2_$-#1!3@#20@#1!20@#20@#1!3@#20@#1!4@#20@#1!3@#129@#111@#25@#6@#2@#6@#20@#1!2@#20@#1@#56@#82@#1!2@#6@#19@#26@#123@#6!2@#1@#21@#169@#132@#120!2@#71@#84@#72@#175!2@#72@#96@#169!11@#155@#169!9@#122@#176@#175!2@#203@#122@#169!13@#96@#103@#136!2@#127@#119@#38@#84@#136@#94!2@#163@#143@#3!2@#56@#188!2@#18@#88@#35@#19@#7@#123@#7@#88@#81@#51@#19@#82@#3@#8@#3@#7@#88@#81@#69@#66@#89@#42@#13@#49@#12@#99@#56@#82@#88@#3@#2@#20@#1!9@#20@#1@#2@#1!2@#2@#1@#2@#1!13@#2@#1!2@#2@#1!3@#2@#1!21@$#1!3A#20A#1!20A#20A#1!8A#20A#1A#20A#1A#35A#40A#119A#19A#1A#20A#1!2A#8A#20A#8A#119A#82A#8A#6A#35A#106A#88A#6A#2!2A#8A#6A#184A#176A#120!2A#71A#84A#203A#175!3A#154A#96A#169!19A#96A#154A#176A#203A#37A#203A#154A#85A#96A#169!4A#155A#169!6A#96A#176A#22A#190A#180A#162A#180A#136A#94A#136!2A#120A#197A#196A#25A#8A#126A#127A#125A#81A#69A#123A#82A#8!3A#19!2A#88A#80A#88!3A#2A#8A#56A#9A#66A#78A#44A#65A#9A#50A#99A#81A#88A#26A#56A#7A#1!13A#20A#1!39A#20A#1!2A#20A#1!3A$#1!3C#20C#1!20C#20C#1!7C#20C#1C#20C#1!2C#129C#172C#181C#7C#1!4C#20C#8C#56C#67C#75C#123C#19C#161C#67C#82C#8!4C#129C#169C#22C#120!2C#71C#175C#72C#175C#72C#175C#203C#122C#169C#151C#169!2C#96C#169!14C#96C#154C#176C#203C#175C#159C#37C#132C#96C#169!12C#96C#85C#190!2C#54C#95C#136!5C#95C#38C#83C#39C#19C#60C#189C#18C#68C#69C#123C#8C#1C#20C#8C#6C#19!3C#7C#19C#8C#3C#19C#88C#67C#109C#49C#89C#66C#69C#81C#67C#81C#75C#59C#83C#8C#20C#1!10C#20C#1C#20C#1C#2C#1!7C#2C#1!13C#2C#1!15C#20C#1!5C$#1G#20G#1G#20G#1!20G#20G#1!6G#20G#1!2G#20G#1!2G#129G#138G#141G#126G#19G#7G#1G#8G#20G#82G#99G#67G#51G#88!3G#19G#6G#8G#1G#7G#8G#129G#169G#71G#112G#120G#71G#203G#84G#175G#72G#154G#175G#154!2G#85G#169!14G#96G#169G#122G#113G#203G#154G#190G#203G#190G#175G#203G#179G#96G#169!12G#122G#203!2G#54G#95G#180G#136!2G#95G#94!2G#136G#199G#145G#39G#164G#127G#188G#79G#88G#82G#7!2G#1G#8G#20G#6G#1G#20G#8!3G#2G#3G#82G#56G#92G#31G#165G#16G#30G#115G#99G#50G#34G#92G#26G#88G#7G#8G#1!11G#20G#1!15G#2G#1!25G#20G#1!3G$#1!3O#20O#1!20O#20O#1!3O#20O#1!4O#20O#21O#20O#1O#83O#138O#118O#31O#88O#123O#19O#82!2O#88O#79O#69O#79O#50O#110O#88O#6O#8O#6O#8O#1O#8O#193O#169O#71O#120!3O#175O#72O#175O#203O#175O#203O#54O#203O#85O#169!3O#96O#169!11O#122O#132O#203!2O#159O#203!2O#54O#94O#154O#72O#85O#96O#169!3O#155O#169!8O#85O#203O#175O#54!2O#22O#180O#95O#180!2O#94O#136O#38O#3!2O#80O#208O#98O#92O#35O#82!2O#6!2O#8O#1O#8O#6!2O#20O#8!3O#123O#82O#19O#68O#16O#42O#77O#171O#51O#80O#67O#99O#144!2O#56O#1!9O#20!2O#21O#20O#2O#1!12O#2O#1!23O#20O#1O#20O#1!4O#21O$#1!5_#20_#1!18_#20_#1!7_#20_#2_#1!3_#19_#121_#14_#62_#65_#75_#69_#68_#9_#67_#68_#50_#67_#79_#68_#25_#8!2_#2_#6_#1_#20_#105_#155_#71_#120!2_#71_#175!2_#159_#203_#175_#203_#176_#203_#163_#96_#169!11_#96_#169_#96_#85_#176_#72_#203!2_#54!2_#136_#94_#54_#175_#72_#179_#169!6_#155_#169!5_#96_#154_#203_#154_#37_#203_#94_#136_#180_#95_#136_#94_#180_#193_#39_#56_#127_#125_#69_#82_#7_#123!2_#7_#8!2_#6_#8_#1!4_#8_#19_#88_#19_#88_#99_#100_#15_#12_#88_#51_#67_#99_#9_#150!2_#19_#8_#1_#20_#1_#20_#1_#20_#2_#20_#21_#20_#1!24_#2_#1!14_#149_#1!2_#2_#1_#2_#1_$-#1!4@#20@#1!28@#20@#1!3@#6@#119@#42@#14@#62@#43@#144@#106@#11@#28@#17@#68@#88@#82@#51@#82@#8!2@#6@#8!2@#5@#219@#132@#120!3@#71@#84@#175@#72@#154@#190@#84@#154@#203@#85@#169!14@#85@#154!2@#203@#175!2@#180@#120@#94@#136@#95@#154@#175@#179@#169!4@#155@#169@#151@#169!6@#96@#203@#37@#159@#85@#175@#190@#180@#94@#95@#136@#190@#191@#83@#145@#60@#188@#92@#56@#7@#19@#35@#6@#8@#1@#20@#1@#6@#1@#8!3@#82@#26@#82@#19@#69@#17@#62@#61@#75@#67@#12@#28@#141@#57@#17@#60@#19@#8@#7@#1!2@#20@#1@#21@#20!2@#1!42@#2@#149@#1!3@$#1!2A#20A#1A#20A#1!25A#20A#1!2A#20A#1!3A#8A#2A#150A#118A#134!2A#166A#32!2A#100A#78A#69A#82A#8A#19A#26A#88A#82A#6A#1A#20A#19A#184A#154A#120A#94A#120!2A#94A#54A#37A#175A#154A#84A#154A#175A#85A#169!13A#122A#72A#154A#37A#203A#37A#95A#195A#181A#94A#180A#203!3A#85A#169!6A#155A#169!7A#85A#154A#175A#154A#203A#175!2A#180!2A#95!2A#54A#120A#145A#80A#125A#69A#88A#7A#3A#123A#19A#20A#6A#1A#6A#1A#8A#1!2A#8!2A#88A#98A#145A#35A#81A#31A#116A#13A#12A#44A#15A#134A#61A#16A#141A#167A#6A#8A#1!3A#20!4A#1!12A#2A#1!32A#2A#21A$#1!4C#20C#1!31C#20C#1C#8C#3C#148C#77C#166C#14C#134C#42C#12C#56C#123C#19C#8!2C#7C#35C#88C#5C#8!2C#146C#113C#95C#120!2C#71C#94C#120C#54C#154C#37C#203C#154C#175C#154C#179C#169!11C#96!2C#122C#154!2C#175!2C#54C#120C#137C#120!2C#136C#203C#175!2C#154C#96C#169!6C#155C#169!6C#96C#179C#37!2C#203!2C#37C#175C#95C#84C#190C#136C#180C#164C#51C#10C#88C#3C#6C#1C#19C#123C#8C#20C#1C#20C#1C#8C#1C#8!3C#56C#12C#3C#8C#88C#50C#78C#13C#106C#17C#14C#91C#14C#62C#76C#61C#29C#119C#7C#20!3C#2!2C#20C#1C#20C#1!23C#2C#1!16C#149C#1!4C$#1!2G#20G#1!35G#6!3G#193G#51G#161!2G#26G#19G#6!3G#2G#20G#2G#8G#6G#8G#1G#2G#105G#122G#121G#120!4G#94G#54G#154G#203!5G#85G#169!9G#151G#96G#169G#122G#154!2G#159G#154G#203G#94G#137G#59G#120!2G#203G#175G#154G#37G#175G#122G#179G#122G#169!12G#72G#154!2G#37G#203!2G#175G#203G#175G#84G#54G#159G#36G#145G#98G#69G#8G#1G#20G#2G#123G#19G#1!2G#20G#1G#8!4G#7G#164G#99G#88G#8G#6G#88G#50G#43G#12G#92G#17G#141G#48!2G#15G#14!2G#118G#51G#5G#20G#2G#20G#1!2G#21G#20G#1!26G#2G#1!17G#2G$#1!3O#20O#1!23O#20O#1!7O#20O#1!2O#6O#2!2O#8O#1!2O#6!2O#1O#20O#2O#20!2O#2O#1O#2O#1!2O#8O#25O#152O#85O#120O#94O#120O#71O#120O#71O#95O#175O#203O#175O#37O#203O#154O#96O#169!8O#96O#179O#154!2O#203O#154O#84O#72O#159O#136O#139O#81O#56O#198O#160O#176O#203O#175O#154O#179!2O#175O#37O#122O#163O#37O#154O#179O#169!7O#179O#37O#176O#154O#159O#203O#84!2O#203O#54O#175O#159O#71O#83O#69O#110O#6O#1O#20O#1O#7O#82O#6O#1!2O#6O#1!2O#8O#1O#149O#19O#59O#69O#8!2O#19O#50O#116O#16O#59O#161O#13O#61O#57O#31O#32O#14O#15O#42O#204O#51O#2O#20O#2O#20!2O#21O#20O#1!24O#2O#1!15O#149O#1!2O#2O$#1!28_#20_#1!5_#20_#1!2_#20_#2!2_#1!9_#6_#21_#20_#6_#8_#1_#8!2_#194_#184_#190_#120!4_#94_#120_#136_#175_#37_#203!2_#37_#190_#179_#96_#169!4_#96!3_#190_#203_#159_#203!2_#175_#154_#84_#203_#120_#27_#51_#35_#26_#162_#190_#175_#179_#175_#37_#175_#37_#175_#203!2_#175_#159_#85_#37_#85_#96_#169_#96_#169!2_#163_#154_#159_#179_#203_#175!2_#203_#175_#84!2_#159_#37_#200_#82_#59_#19_#20_#1!3_#19_#164_#7_#1_#8_#1!2_#8_#1_#2_#6_#51_#99_#3_#39_#8_#92_#89_#63_#107_#66_#30_#9!2_#59_#61_#42_#14_#15!2_#133_#51_#19_#20!2_#2_#20!2_#1!3_#2_#1!18_#2_#1!18_#20_#1_#21_$-#1!36@#20@#2@#20@#1@#20!2@#2@#6@#20@#1@#8@#2!2@#1!5@#6@#1@#8@#87@#122@#112@#120!6@#84@#203@#175!2@#159@#154@#203@#154@#96!4@#122@#179@#154@#159@#37@#203@#54@#175@#84@#175!3@#104@#111@#26@#19@#26@#180@#84@#203@#154!2@#175!3@#37@#175@#154!2@#85@#72@#179@#175@#37@#179!2@#163@#96@#169@#85@#179@#37@#203!2@#72@#175@#203@#84@#53@#136@#53@#84@#37@#23@#56@#7@#1@#8@#1@#8@#1@#82@#123@#6@#1@#8@#1@#8!2@#1!2@#19@#27@#56@#39@#8@#3@#50@#186@#47@#62@#75!2@#92@#82@#56@#30@#43@#14@#91@#14@#138@#60@#5@#1!2@#20@#1@#2@#1@#2@#1!33@#20@#1!7@$#1!7A#20A#1!4A#20A#1!16A#20A#1!3A#20A#1A#6A#1A#20A#1A#20A#2A#8A#20A#1!2A#8A#1!2A#6A#2A#8!2A#20A#1A#20A#1A#8A#214A#122A#121A#120A#127A#120A#112A#120A#71A#84A#154!2A#175!2A#84A#72A#175A#122A#96A#72A#203A#154A#37A#154A#37A#175A#203A#175!3A#159A#154A#175A#120A#164A#39A#82A#38A#136A#159A#175A#37A#179A#72A#175A#179A#203A#85A#96!2A#169!2A#96A#169!7A#96!2A#120A#71A#175!2A#176A#203A#154A#175A#54A#53A#104A#175A#37A#170A#3A#8A#1!2A#8A#20A#6A#56A#35A#2A#8A#6A#8A#1A#8A#1A#2A#75A#79A#19A#8!2A#92A#64A#186A#131A#66A#99A#69A#19A#6A#2A#60A#204A#42A#14!3A#119A#8A#1!2A#20A#1!37A#2A#1!5A#2A$#1!9C#20C#1!22C#8C#1C#6C#1C#20C#1C#20C#1C#7C#1!2C#20C#1!2C#8C#1!4C#6C#1C#6C#1C#6C#8C#140C#85C#71C#120!6C#54C#175C#37C#203C#175!2C#72C#175!4C#37C#203C#175!2C#37C#203C#175C#154C#84C#159C#154C#84C#203C#198C#8C#25C#137C#205C#54C#179C#72C#179C#203C#154C#179C#72C#154C#96C#169!14C#179C#38C#71C#175C#203!2C#176!2C#175C#190C#95C#136!2C#163C#153C#19C#8C#1C#6C#8C#1C#7C#35C#82C#20C#2C#6C#1!3C#6C#19C#99C#56C#8!2C#19C#51C#16C#47C#101C#80C#64C#69C#2C#8C#25C#82C#195C#42C#14C#134C#13C#82C#8C#1C#20!2C#1!21C#2C#1!2C#2C#1!10C#20C#1!7C$#1G#2G#1!4G#20G#1!27G#20G#1G#8G#1G#8G#20G#1G#6G#1G#8G#1G#8G#1!2G#20G#1G#6G#1G#20G#2G#1G#8G#97G#169G#132G#121G#120!5G#94G#136G#175G#37G#175G#37G#203G#175!2G#72G#175!2G#203G#154G#175G#154G#175!3G#203!2G#175G#54G#175G#135G#145G#39G#164G#181G#94G#84G#203G#175!2G#72G#175G#154G#85G#96G#169!3G#96G#169G#96G#169!8G#96G#169G#163G#182G#139G#203G#154G#203G#176G#154G#203!2G#84G#136G#53G#197G#102G#158G#8!2G#1!2G#8G#6G#88G#5G#6G#1G#6G#1!2G#6!2G#158G#9G#164G#6G#1G#82G#78G#165G#58G#92G#69G#106G#56G#8!3G#5G#164G#77G#14!2G#27G#26G#3G#2G#21G#20G#1!42G$#2O#1!4O#20O#21O#20O#1!21O#20O#1!3O#8O#1O#6O#1O#20O#1O#8O#1!2O#6O#1O#20O#1!3O#8O#1!6O#8O#105O#122O#71O#120!2O#94O#127O#120!3O#54O#175!2O#154O#203!3O#175!2O#203!2O#72O#175!2O#203O#154O#37O#84O#190O#175!2O#203O#54O#198O#39!2O#137O#125O#188O#159O#54O#203O#72O#154O#175O#154O#85O#169!6O#155O#169O#155!5O#169!5O#163O#38O#121O#22O#203O#154O#203!3O#175O#84O#95O#84O#136O#197O#202O#70O#8!2O#1O#8O#7O#19O#35O#7O#6O#2O#6O#21O#8!2O#19O#81O#69O#39O#8O#29O#45O#108O#99O#69O#17O#9O#6O#1O#6O#8O#1O#19O#60O#134O#166O#100O#26O#8O#20O#1!23O#2O#1!11O#20O#1!7O$#1!3_#20_#1_#2_#20_#1!29_#6_#1_#6_#1_#6_#8_#1_#20_#1!3_#20_#2_#8_#20_#6!2_#8!2_#39_#105_#112_#120!8_#84_#159_#37_#190_#203_#179_#176_#154_#175_#37_#175_#203_#154_#203!2_#175_#84_#154_#175_#203!3_#120_#119_#8_#39_#88_#209_#181_#136_#84!2_#72_#154_#72_#175_#122_#169!6_#192_#156!5_#192!2_#156_#155_#96_#169!2_#122_#27_#167_#95_#154_#203_#175_#203_#84_#175_#84!3_#95_#176_#185_#19_#8!3_#20_#6_#35_#88_#82_#8_#21_#6_#20_#8!2_#145_#26_#88_#164_#56_#50_#116!2_#43_#30_#60_#161_#8_#6_#1_#20!2_#7_#164_#161_#133_#167_#19_#1_#20_#2_#1!19_#2_#1!20_#2_$-#1!4@#2@#20@#1!5@#2@#1!2@#2@#1!2@#2@#1!12@#20!2@#1!3@#8@#1!6@#6@#1!2@#20@#1!3@#8!3@#5@#83@#237@#87@#170@#139@#120!6@#94@#120@#94@#84@#190@#95@#38@#201!2@#23@#135@#23@#168@#154@#84@#154@#84@#54@#203@#154@#84@#203!2@#54@#137@#19@#8@#39@#7@#81@#10@#188@#175@#84@#203!2@#175@#154@#96@#169!5@#156!2@#192@#156!7@#192!2@#169!3@#132@#40@#128@#112@#54@#175!2@#159@#84@#54@#84@#95@#54@#136@#95@#127@#146@#25@#8!3@#70@#82@#88@#26@#19@#8@#1@#8@#19!2@#8@#51@#27@#99@#89@#76!2@#11@#57@#67@#9@#19@#1!2@#6@#1@#8@#2@#51@#66@#12@#150@#2@#20!2@#1@#20@#1!31@#20@#1!7@$#1!2A#20A#2A#20A#1!3A#21A#1!25A#20A#1!2A#8A#20A#1!3A#7A#1!2A#8A#20A#8A#6A#24A#4A#185!2A#191A#197A#143A#74A#237!2A#36A#120!2A#127A#120!3A#181A#196A#146A#88A#123A#129A#241A#194A#87A#146A#83A#143A#37A#84A#190A#203!2A#84A#203A#175!2A#71A#35A#39!2A#8A#39A#35A#181!2A#54A#203!2A#72A#203!2A#96A#169!5A#156A#192A#156!11A#169!3A#176A#128A#167A#22A#84!2A#37A#203A#154!2A#203A#54A#136A#95A#53A#94A#191A#119A#5A#25A#6A#8A#25A#88!2A#3A#19A#3A#7A#88A#2A#8A#82A#101A#11A#50A#12A#99A#131A#171A#17A#51A#6A#1A#6A#8!2A#6A#26A#29A#17A#161A#5A#1A#20!2A#1!2A#20A#1!2A#2A#1!34A$#1!2C#20C#1!5C#20C#1!7C#2C#1!4C#2C#1!2C#2C#1!4C#20C#1C#20C#1!7C#20C#1!2C#6C#1!2C#2C#20C#5C#87C#73C#177C#202C#150C#137C#132C#238C#228C#229C#243C#237C#182C#60C#126C#150C#51C#202C#119C#6C#8C#20C#74C#210C#219C#235!2C#184C#152C#123C#146C#22C#203C#54C#175C#203C#175C#203C#159C#191C#3C#8C#123C#88C#3C#19C#126C#167C#120C#84C#154C#175C#72C#85C#169!6C#156!2C#192C#155C#156!9C#169!4C#176C#60C#71C#203!2C#84C#85C#169!2C#96!3C#37C#179C#190C#95C#54C#127C#35C#149C#39C#6C#39C#19C#35C#88C#5C#6C#88C#56C#8!2C#26C#110C#51C#98C#99C#44C#106C#50C#124C#82C#6C#1C#6C#20C#2!2C#30C#27C#92C#129C#6C#21C#2C#20C#1!31C#20C#1C#20C#1!3C#2!2C$#1!14G#2G#1!20G#20G#8G#1!3G#20G#1G#20G#1G#20!2G#1G#214G#73G#248G#158G#191G#197!3G#248G#225G#129G#229G#129G#201G#119G#237G#129G#6G#3G#8!2G#6G#20G#239G#219G#211G#210G#245G#249G#246G#218G#123G#129G#170G#175G#84G#175!2G#84G#136G#198G#39G#35G#81G#18G#126G#237G#56G#60G#139G#175G#84G#203!3G#96G#169!6G#155G#156!5G#192G#156!7G#155G#169!2G#132G#40G#71G#84G#203G#122G#169G#151G#169!5G#96!4G#190G#162G#88G#8G#6!2G#7!2G#6G#1G#19G#115G#19G#7G#149G#88G#51G#125G#67G#11G#10G#90G#116G#75G#8G#1G#8G#6G#1G#3G#56G#16G#50G#56G#5G#20G#1!3G#2!2G#1!32G#20G#1G#2G#1G$#1!30O#20O#1O#20O#1!5O#20O#1!6O#20O#6O#21O#227O#177O#200O#127O#126O#98O#183O#238O#225!3O#229O#5O#123O#7O#6!2O#8!2O#6O#2O#74O#223O#239!2O#250O#213O#239O#245O#225O#123O#5O#194O#142O#22O#175!2O#95O#71O#19O#25O#115O#137O#34!2O#18O#81O#161O#111O#103O#203O#175!2O#154O#96O#169!8O#156!12O#155O#169O#155O#169O#113O#160O#120O#94O#154O#169!11O#96!2O#52O#88O#8O#6O#8!2O#1O#8!2O#88!2O#25O#19O#88O#56O#125O#80O#50O#45O#171O#65O#43O#51O#6O#1O#20O#6O#19O#158O#17O#58O#92O#5O#7O#1!2O#20O#1!30O#20O#1!7O$#1!20_#2_#1!16_#8_#1!2_#20_#1!4_#2_#1_#20_#218_#207_#194_#143_#157_#196_#129_#194_#225!2_#229_#123_#149_#74_#8_#6!2_#8!2_#6_#7_#229_#234_#231_#213!4_#231_#225_#123_#74_#7_#123_#170_#54_#84_#203_#146_#39_#88_#137_#18_#60!2_#34_#126_#82_#111_#120_#84_#175!3_#96_#169!8_#155!2_#156!3_#187_#156!8_#169!3_#96_#127_#120_#54_#96_#169_#155_#169!10_#96_#132_#201_#3_#8!2_#6_#8!2_#35_#80_#82_#35_#19_#82_#125_#99_#68_#109_#106!2_#165_#89_#82_#6_#20_#1!2_#88_#161_#66_#167_#9_#88_#8_#1_#20!2_#1!32_#20_#1_#149_#1_#2_$-#1!14@#2@#1!6@#2@#1!14@#8@#1@#20@#1!3@#20@#1!3@#228@#226@#229@#228@#234@#5@#194@#214@#55@#97@#194@#5@#74@#149@#2@#1@#7@#8!2@#74!3@#226@#243@#223@#194@#226@#240@#231@#213@#227@#228@#218@#5@#123!2@#35@#93@#203@#102@#25@#3@#201@#34@#60@#18@#137@#127@#181@#26@#161@#120@#84@#154@#175!2@#154@#122@#169!6@#155@#169@#155@#156!3@#155@#156!8@#169!5@#22@#120@#179@#169!8@#155@#169!5@#163@#142@#19@#8!2@#6@#8@#7@#51@#59@#51@#19@#82@#125@#67@#75@#101@#34@#92@#16@#49@#75@#6@#20!3@#35@#19@#25@#78@#100@#50@#3@#8@#1@#20@#1!2@#20@#1!26@#20@#1!6@#21@$#1!32A#20A#1!8A#6A#1!3A#228A#249A#240A#229A#217A#227A#229A#207A#8!2A#7A#6A#8!3A#7A#6A#20A#7A#218A#225!3A#74A#243A#246A#236A#245A#123A#74A#20!2A#149A#6A#8A#206A#74A#123A#35A#201A#119A#25A#88A#81A#18!4A#188!2A#126A#26A#60A#136A#203A#175A#203!2A#154A#96A#169!6A#96A#151A#156A#192!2A#169A#152A#219A#184A#156!6A#155A#169!3A#151A#136A#121A#163A#169!5A#96A#192!4A#169!3A#96!2A#162A#3A#8!3A#2A#164A#81A#68A#19A#56A#125A#69!2A#79!2A#68A#65A#49A#9A#6!2A#20!2A#1A#8A#1A#82A#78A#44A#106A#25A#2A#1!17A#2A#1!18A#2A#21A$#1!30C#20C#1!2C#20C#1!3C#8C#1!6C#8C#207C#239C#244C#228C#227C#229!3C#207C#8!5C#20C#149C#123C#74C#225C#243C#74C#7!2C#243C#123C#7C#74!3C#149C#6C#225C#217C#229C#217C#226C#20C#207C#225C#7C#25C#3C#115C#18!2C#137C#18C#60C#182C#188C#182C#181C#29C#127C#175C#54C#84C#175C#154!2C#96C#169C#155!2C#169C#184C#225C#87C#97C#152C#97C#214C#87C#214C#87C#242C#156C#155!2C#156!2C#155!2C#169!4C#190C#120C#122C#169!5C#156!2C#192C#156C#192!2C#96C#169C#96C#37C#198C#8!4C#3C#51C#79C#19C#82C#110C#82C#88C#69C#79C#34C#50C#62C#58C#29C#5C#7C#1C#6C#1C#8!2C#82C#58C#16C#56C#8C#1!30C#20C#1!3C#20C#1!3C$#1!10G#20G#1!20G#20G#1!4G#8G#1!3G#20G#1!2G#8G#21G#60G#120G#248G#229!2G#240G#229!2G#207G#1G#8!2G#1G#8G#20G#226G#123G#206G#8!3G#149G#35G#129!2G#227!2G#226G#207!2G#217G#227G#217G#244G#213G#229G#218G#149G#6G#7G#8G#88G#126G#18!2G#81G#34G#181!2G#188G#181!2G#98G#139G#84G#203!2G#175!2G#53G#37G#176G#184G#87!3G#230G#239G#236!4G#242G#235G#184G#214!2G#184G#156!2G#155G#156G#155G#169G#155G#169!3G#180G#71G#122G#169!4G#155G#192G#156!3G#192G#155G#169G#96G#163G#200G#7G#8G#6G#8G#6G#51G#68G#19G#35!2G#19G#35G#88G#110!2G#50G#28G#48G#131G#59G#2G#8G#2G#8G#1!2G#8G#75G#44G#12G#2G#8G#1!3G#20G#1!26G#20G#1!3G#2!2G#21G$#1!34O#20O#1!7O#6O#8O#193O#128O#181O#177O#238O#226!2O#229O#225O#226O#8!2O#6O#20!2O#5O#218O#225O#226O#218O#2O#25O#119O#177O#88O#164O#123O#244O#213O#229O#207O#217O#229!2O#244O#229O#225!2O#74O#8!2O#206O#88O#126O#80O#34O#81O#18O#181O#182O#188O#182O#188O#181O#167O#54O#203O#54O#84O#175O#54O#142O#129O#223O#213O#210O#236O#251O#236O#214O#241O#223O#194!2O#97O#242O#235O#246O#87O#210O#156!3O#155O#169!2O#155O#169O#155O#96O#120O#174O#96O#169!3O#96O#156!4O#192O#156!2O#96!2O#120O#129O#213O#1O#8!2O#35O#51O#19O#69O#110O#123O#3O#19O#69!2O#81O#58O#48O#47O#45O#82O#1O#8O#20!2O#1O#20O#7O#9O#204O#56O#1!5O#20O#1!7O#20O#1!24O$#1!3_#20_#1!30_#20_#1!5_#8_#1_#39_#194_#184_#151_#24_#83_#4_#241_#223_#123_#225!4_#123_#225_#229_#123_#207_#5_#207_#6_#2_#7_#201_#137_#196!2_#82_#244_#213!2_#217_#123_#206_#218_#225!3_#74_#149_#123_#8!2_#19_#88_#18!3_#60_#195_#120_#181_#188!2_#181_#60_#120_#84!2_#175_#135_#87_#123_#223_#212_#242_#212_#232_#241_#213_#223_#214!2_#245_#194_#228_#243_#245_#235_#236_#214_#245_#184_#156_#192_#156_#192_#169!2_#151_#96_#94_#38_#85_#169!5_#155_#156!5_#169_#179_#71_#129_#239_#74!2_#39_#5_#26_#17_#80_#110_#82_#8!2_#88_#79_#69_#81_#89_#47_#44_#56_#2_#8!2_#20_#8_#1_#2_#82_#58_#29_#8!2_#1!12_#20_#1!21_#2_#21_$-#1@#2@#1!2@#20@#1!5@#20@#1!30@#8@#228@#242@#187@#219@#87@#228@#149@#24@#123@#229!2@#225!3@#149@#123@#206@#20!2@#8!4@#149@#88!2@#129@#82@#149@#231@#213!3@#229@#217@#229@#207@#123@#225@#218@#74@#123!2@#7@#8@#19@#237@#18@#139@#84!2@#159@#94@#181@#188@#181@#18@#38@#159@#22@#146@#194@#225@#229@#240@#227!2@#226!2@#228@#245@#252@#249@#235@#219@#235@#242@#210@#228@#194@#97@#219@#236@#194@#184@#155@#156@#155@#169!4@#37@#139@#120@#96@#169!5@#155@#156!4@#169@#96@#120@#194@#252@#240@#218@#2@#164@#51@#109@#80@#115@#123@#6!2@#35@#68@#69@#51@#78@#46@#33@#10@#56@#6@#8@#1!2@#8@#1@#2@#90@#167@#19@#7@#1!5@#20@#1!4@#20@#2@#1@#149@#1@#2@#1@#149@#1!2@#2@#1!15@$#1!11A#21A#1!20A#20A#1!8A#6A#236A#212A#246A#214A#228A#243A#229A#2A#218A#229A#225A#226A#7A#8A#6A#8!2A#1A#6A#8!2A#6A#218A#123A#218A#129A#82A#123A#207A#227A#213!2A#231A#244A#240A#227A#229A#207!2A#123A#218A#123A#207A#20A#225A#5A#88A#18A#182A#175A#84!2A#205A#188A#181A#182A#34A#137A#201A#129A#123!2A#225A#123A#20A#207A#228A#223A#213!3A#231A#213!2A#245A#249A#235!2A#212A#213A#243A#214A#242A#219A#194A#97A#219A#156A#155!2A#169!2A#163A#120!2A#176A#169A#96A#169!5A#156!3A#169A#96A#180A#202A#233A#244A#7A#226A#19A#81A#125A#67A#51A#82A#1A#8A#19A#69A#75A#51A#17A#62A#178A#33A#106A#8A#6A#8A#20!2A#2A#39A#51A#9A#6A#1!33A#20A#1!3A$#1!10C#20!2C#1!23C#20C#1!4C#8C#20C#232C#223C#240C#228!2C#240C#229C#217C#244C#227!2C#225!2C#123C#149C#20C#8!4C#206C#74C#227C#225C#8C#25C#88C#238C#24C#6C#207C#244C#213C#231C#217C#229C#217C#227C#207C#7C#123C#149C#7!2C#5C#6C#81C#34C#120C#175C#84!2C#175C#94C#188C#181C#51C#123!2C#229C#225C#123C#149C#229!2C#227C#231C#250!2C#247C#250C#213C#250!3C#210C#249C#219C#235!2C#245C#8C#74C#242C#235C#97C#194C#105C#156C#169!3C#96C#190C#121C#120C#96C#169!6C#155!2C#169C#96C#179C#36C#213C#241C#229C#207C#74C#2C#51C#98C#67C#51C#7C#6C#1C#6C#92C#69C#75C#69C#99C#44C#33C#61C#9C#7C#2C#8!4C#59C#119C#8C#2C#1C#20C#1!5C#20C#1!3C#2C#1!7C#2C#1!3C#2C#1!6C#20C#1!5C$#1!12G#2G#1!2G#2G#1!16G#20G#1!8G#21G#210G#213G#231G#244!7G#229G#225!4G#123G#207!3G#226G#229G#243G#123G#3G#206!2G#74G#129!2G#229G#149G#207G#227G#213!2G#229!2G#231G#227G#225G#207G#7G#2G#20G#123G#119G#99!2G#38G#84!2G#175G#84!2G#60G#237G#123!2G#229G#74G#149G#226G#229!3G#213G#250G#213!2G#250!3G#213G#250!2G#230G#232G#249!2G#235G#242G#210G#194G#218G#214G#235G#246G#214G#236G#169!3G#96G#37G#180G#188G#190G#169!9G#96G#22G#119G#239G#230G#218G#226G#225G#8G#56G#81G#68G#115G#35G#8!2G#6G#69!2G#88G#51!2G#16G#47G#33G#44G#75G#8G#2!2G#1G#8G#59G#164G#8!2G#20G#1!4G#20G#1!11G#2G#1!8G#20G#1!5G#20G#1!3G$#1!11O#20O#1!7O#2O#1!20O#8!2O#245O#230O#244O#213O#244O#231!2O#244!2O#227O#225!6O#229!2O#225O#227O#123O#19O#8O#7O#74O#207O#1O#8O#206O#227O#223O#5O#226O#244O#213!2O#217O#225O#244!2O#229O#149O#7O#8O#82O#18O#98O#34O#120O#72O#84O#95O#139O#196O#123O#225O#243O#229O#218O#226O#229!3O#217O#244O#250!5O#213O#250!3O#230O#213!3O#210O#235!3O#242O#245O#207O#228O#245O#242O#129O#97O#156O#169O#85O#179O#136O#120O#71O#179O#169!8O#154O#160O#246O#239O#229O#226O#227O#225!2O#5O#26O#69!2O#82O#6O#8!2O#35O#69O#56O#88O#51O#99O#33O#130O#66O#59O#7O#1O#20O#6O#2O#126O#35O#8O#20O#2O#1O#20O#1!21O#20O#1O#20O#1!5O#149O#1!3O$#1!14_#2_#1!5_#2_#1!2_#2_#1!2_#2_#20_#1!4_#20_#1!9_#206_#227_#213_#244_#213_#244!3_#129_#229_#225!5_#123_#225!3_#7_#35_#237_#88_#149_#8!2_#207_#226_#218_#74_#225_#240_#149_#207_#231!2_#213_#217_#229_#227_#244_#217_#234_#8!2_#88_#60_#35_#23_#157_#71_#146_#19_#123_#225!2_#123_#7_#149_#229!2_#227_#229_#217_#230_#213_#250!9_#230!2_#213_#230_#212_#249_#235_#210_#232_#213_#234_#218_#245_#239_#194_#105_#169_#179_#72_#54_#103_#120_#22_#169!7_#96_#182_#196_#249_#241_#149_#226_#229!2_#227_#228_#145_#79!2_#82_#6_#8!2_#19_#110_#69_#25_#35_#75_#108_#44_#26_#2_#6_#20_#2!2_#6_#88_#123_#8_#20_#1!23_#2_#1!12_$-#1!12@#2@#1!9@#2@#1!5@#20@#1!10@#8@#1!3@#20@#229!2@#217@#244!2@#225!2@#226@#225!2@#123@#19!2@#123@#225@#123!2@#35@#88@#225@#82@#7@#74@#7@#229@#218@#7@#229@#207@#218@#227@#20@#149@#227@#213!2@#217@#229@#244!2@#229@#6@#8@#7!2@#8@#19@#7@#19@#123@#225!3@#8@#7@#218@#225@#229@#227@#217@#227@#231@#227@#240@#213@#250@#213@#250!5@#247@#250!3@#230@#213@#245@#230!2@#247!2@#230@#229@#207@#245@#232@#129@#86@#72@#154@#190@#120@#41@#180@#163@#169!5@#96@#84@#153@#87@#235@#223@#226@#229!2@#237@#229@#240@#3@#79@#110@#82@#8!3@#6@#88@#81@#145@#3@#115@#50@#131@#57@#6!2@#1@#20@#2@#7@#149@#70@#1@#20@#2@#20@#2@#1!2@#20@#1@#20@#1!24@#149@#1!3@$#1!10A#20A#21A#20A#1!6A#2A#1A#2A#1!20A#20A#1A#20!2A#6A#243A#225A#123!2A#149A#7A#3A#7A#6A#226A#225A#123!2A#88A#129A#225A#8!2A#123A#226A#149A#229A#218A#123A#229A#226A#20A#218A#243A#207!2A#231A#223A#213!2A#244A#231A#227A#6A#39A#8A#39A#8A#19A#123A#74!2A#207A#123A#6A#206A#225A#123A#225A#129A#227!2A#229A#227A#229A#227A#244A#213A#250!11A#230A#213!3A#250A#213A#247!2A#217A#207A#245A#223A#87A#122A#72A#54A#188A#12A#22A#54A#96A#169A#96!3A#163A#71A#23A#212A#245A#229A#231A#244A#229!2A#225A#244A#123A#69A#110A#35A#8!3A#2A#145A#115A#82A#39A#19A#88A#28A#27A#7!2A#20!2A#7A#5A#19A#88A#82A#2A#20A#2A#1!3A#20A#1A#21A#1!6A#20A#1!20A#2A$#1!10C#20!2C#1!8C#2C#1!5C#2C#1!18C#2C#6C#149C#8C#229C#223C#39C#8!2C#7C#225C#123C#19C#24C#82C#149C#5C#7C#6C#123!2C#226C#149C#229!2C#8C#123C#227!2C#149C#207C#218C#149C#206C#218C#234C#229C#226!2C#234C#207C#8!2C#39C#123C#119C#123C#7C#8!2C#39C#7C#24C#225C#123C#225!3C#229C#225C#229C#227C#229!2C#231C#250!7C#213C#230C#250!2C#213C#230C#247!2C#250C#247C#213C#250C#213C#234C#229C#245C#194C#143C#72C#95C#188C#167C#136C#203C#154C#179C#175C#179C#37C#22C#146C#242C#210C#240C#229C#250C#213C#227C#229C#225C#244C#149C#69C#68C#82C#8!5C#35C#88C#6C#8C#7C#59C#28C#88C#6C#1C#2!2C#82C#19C#56C#51C#82C#20C#1C#20C#1!3C#21C#20C#1!24C#20C#1!3C$#1!9G#20G#21G#20G#1G#2G#1!2G#2G#1!2G#2G#1!5G#2G#1!6G#20!2G#1!6G#8G#1G#20G#1G#20G#1!2G#8G#1G#2G#228G#8G#7G#74G#225!2G#88G#225G#5G#8!3G#39G#3G#123!2G#226G#7G#227G#244G#226G#123G#88G#237!2G#6G#149G#207G#8G#7G#2G#39G#20!2G#6G#8!4G#7G#5G#6G#8!3G#20G#74G#123!2G#225G#123!2G#225!2G#229!2G#227G#229G#217G#227G#231G#213G#250!4G#230G#250!7G#213G#247!3G#250!2G#213G#234G#231G#245G#129G#203G#120G#138G#17G#139G#136G#190G#72G#175G#159G#95G#140G#241G#232G#213G#218G#247G#213G#231G#227G#229G#225G#227G#5G#51G#79G#82G#8G#6G#1G#8G#7G#88G#110G#88G#7G#70G#69G#89G#88G#7G#1G#7G#35G#69G#88G#35G#110G#82G#1!5G#20!2G#1!2G#2G#1!3G#20G#1!8G#20G#1!13G$#2O#1!8O#2O#20O#1!9O#2O#1!3O#2O#1!7O#20O#1!13O#2O#1!3O#7O#225O#229O#225!2O#123O#207O#8!3O#39O#8O#3!2O#123O#218O#123O#206O#217O#227O#229O#218O#225O#237O#129O#225O#19O#2O#6O#8!2O#6O#7O#149O#2O#8!3O#7O#8!6O#2O#123!3O#225O#123!2O#218O#225!2O#229!4O#227O#229O#213!4O#250!4O#213O#250O#230O#250!3O#247O#213O#250!4O#231O#149O#230O#223O#71O#120O#138O#17O#111O#54O#84!2O#37!2O#142O#225O#233O#213O#227O#223O#222O#250O#213O#229O#225!2O#229O#244O#79O#68O#82O#6O#8!2O#1O#6O#88!2O#110O#19O#8O#69O#89O#9O#82O#20O#82O#35O#82O#88O#69O#51O#5O#20O#1!5O#21O#20O#2O#1!17O#20O#1!3O#20O#1!2O#149O#1O#21O$#1!8_#2_#20_#1!5_#2_#1!14_#20_#1_#20_#1!8_#8_#1!2_#20_#1!3_#8_#20_#225!3_#74_#5_#2_#8!3_#39_#8_#6_#88!2_#225_#19_#149_#123_#227_#217_#229_#123_#7_#237_#88_#225_#123_#5_#20_#6_#207_#2!2_#8_#6_#8_#1_#8_#20_#8!2_#6_#8!4_#74_#123_#225_#123_#225!2_#123_#225_#123_#225_#229_#237_#229!3_#217_#244_#231!2_#250!9_#213!2_#247_#250!2_#247!3_#223_#228_#239_#87_#128_#138_#98_#125_#22_#159_#37_#175_#95_#129_#230_#227_#74_#20_#230_#245_#230_#223_#229!2_#225_#229_#202_#69_#110_#35_#6_#1!2_#8_#7_#56_#88_#110_#19_#8_#56_#28_#50_#88_#1_#20_#7_#6_#82_#110_#69_#82_#20!2_#1!4_#20!2_#1!19_#20_#1!2_#20_#1!4_#21_$-#1!6@#2@#1@#20@#1!4@#2@#1!31@#20@#1!2@#2@#1@#149@#5@#2@#74@#8@#206@#218!2@#8!4@#225@#123!3@#7@#207@#227@#229@#227@#229@#8@#5@#225@#82@#225@#123@#6@#2@#8@#20@#6@#2!2@#8@#2@#8@#2@#8@#6@#123@#3@#8!4@#123!6@#74@#225@#123@#225!2@#229@#244@#227@#229@#227@#217@#223@#250!6@#213@#250@#247!3@#250!2@#213@#250@#247@#217@#225@#123@#223!2@#12@#100@#9@#98@#139@#175!3@#135@#227@#231@#243@#207@#229@#227@#217@#227@#229!2@#225!2@#227@#202@#69@#88@#123@#8@#6@#1@#8@#19@#82@#88@#237@#19@#39@#56@#43@#11@#69@#2@#20@#6@#8@#7@#69@#110@#5@#1@#20@#1!5@#21@#1!17@#149@#1!2@#20@#1!2@#20@#1!3@#21@$#1!7A#20A#1!12A#2A#1!7A#20A#1!14A#8A#1!4A#8A#1A#20A#207A#74A#8A#74A#218A#207A#20A#8!3A#39A#7A#225!2A#123A#225A#226A#229A#227A#229!2A#225A#149A#24A#129A#88A#123A#3A#2A#7A#2A#6A#2A#8A#1A#20A#1A#8A#20A#1A#19!2A#8!4A#20A#123!2A#225A#123A#74A#123A#226A#123A#225A#123A#225A#241A#229A#244!3A#231!3A#250A#213A#250!2A#230A#250!8A#244A#229A#225A#123A#218A#241A#60A#204A#98A#167A#181A#139A#180A#162A#129A#213A#228A#207A#226A#229A#227A#229A#227A#229!2A#225!2A#229A#227A#79A#82A#8A#6A#1A#20A#1A#6A#35A#110!2A#82A#123A#193A#28A#64A#67A#7A#1A#20A#1A#8A#88A#68A#19A#1A#20A#1!3A#20A#21A#20A#1!22A#20A#1!4A#21A$#1C#2C#1!5C#20C#21C#20C#1!4C#2C#1!14C#20C#1C#20C#1!13C#8C#1!2C#218C#24C#207C#149C#1C#8C#149!2C#8C#1C#8C#20C#234C#8!2C#123!2C#225!4C#229!3C#227C#123C#6C#88C#7C#123C#82C#6C#7C#2!2C#8C#1C#20C#1!3C#149C#5C#20!2C#8!4C#1C#20C#5C#123C#7!2C#123!4C#225!2C#123!2C#226C#240C#229C#217C#231!3C#250C#213C#250!4C#213C#250C#213!2C#250C#213C#227C#74C#123C#225C#123C#240C#129C#195C#181!2C#167C#34C#160C#129C#240C#229C#149C#226C#227C#229C#217C#227C#217C#229C#129C#229C#225C#244C#202C#110C#82C#6C#1!2C#6C#1C#8C#35C#110C#81C#88C#126C#150C#67C#99C#75C#7C#20C#1C#20C#8C#35C#110C#149C#1!6C#20!2C#1!18C#149C#1C#20C#1!2C#20C#1!2C#2C#21C$#1G#20G#1!5G#20!2G#1!3G#2G#1!17G#2G#1G#2G#1!11G#8G#1!2G#8G#87G#97G#227G#2G#8G#20G#8G#6G#1G#8G#206G#226G#229G#207G#39G#8G#6G#7G#237!2G#225!3G#229!3G#149G#7G#225G#19G#225G#7G#2G#6G#8G#1G#6G#1G#8G#1!2G#149G#74G#6G#19!2G#2G#8!2G#6G#1G#20G#8G#2G#20G#74G#226G#123G#226G#123G#226G#123G#225G#74G#123G#228G#229G#231!3G#217G#231G#213!3G#223G#231!2G#223G#231G#240G#243G#228G#123G#225G#123G#7G#225!2G#248G#188G#137G#125G#137G#119G#227!2G#207G#218G#229!3G#227G#229!2G#225!3G#227G#231G#244G#82G#6G#1G#8!2G#1G#8G#6!2G#88G#110G#88G#51G#161G#17G#101G#69G#8G#20G#1!2G#82G#79G#56G#20G#2G#1G#20G#1!5G#2G#1!21G#20G#1!2G#149G#1G#21G$#1!2O#20O#8O#1!7O#20!2O#1!17O#20O#2O#20O#1!12O#20O#1O#39O#246!2O#225O#1O#6O#8!4O#6O#226O#229!2O#225O#218O#234O#6O#20O#24O#237O#137!2O#81O#237!2O#229O#123O#8O#7!2O#5O#7O#8O#1O#6!2O#2O#1!2O#20O#1O#20O#123O#20O#7O#56O#35O#7O#1O#8O#6O#2O#1O#20!2O#7O#74O#123O#226O#123!3O#226O#123O#226O#218O#226O#229!2O#231O#240!2O#229!4O#243O#225O#229O#225O#74O#225O#123!6O#149O#88O#137O#125O#137O#60O#25O#226!2O#206O#243O#229!4O#225!5O#227O#213O#227O#3O#1O#8O#1!2O#6O#1O#8O#1O#88O#110O#81O#29O#81O#17O#50O#75O#19O#149O#6O#3O#56O#69O#82O#20!4O#1!3O#20O#21O#20O#1!19O#20O#1!6O#21O$#1!34_#20!2_#1!6_#8_#1!3_#6_#129_#97_#194_#2_#6!2_#8!4_#234_#229!4_#240_#217_#227_#240_#225_#82_#201_#137_#182_#137_#129_#123_#229_#7_#8_#149_#19_#123_#149_#8_#1_#8!3_#1!3_#20_#123!2_#8_#149_#51_#82_#8_#2_#6_#2_#1_#6_#2!2_#6_#149_#123_#225_#226_#123!4_#225_#74_#123_#226_#229!2_#227_#240_#229!2_#225!3_#123_#225_#123!3_#225_#123_#225_#123_#206_#213_#5_#60_#137_#60_#126_#226_#231_#207_#123_#229_#225!8_#229_#213_#244_#225_#8!2_#1_#8_#1!2_#8_#20_#8_#82_#115_#81_#79_#51_#29_#75_#110!3_#88!2_#69_#19_#7_#20!2_#21_#20_#1!4_#20_#1!13_#20_#1!8_#20_#1_#20_#1!2_#21_$-#1!2@#20@#1!8@#21@#1@#2@#1!18@#20@#2@#1@#20@#1!4@#8@#1!2@#8@#1@#8@#5@#202@#24@#2@#8@#1@#8!5@#207@#74@#226!2@#229@#217@#227!2@#244@#217@#207@#123@#88@#110@#18@#115@#225@#129@#123@#8!2@#7@#5@#7@#2@#8@#1!2@#6@#1!2@#20@#2@#123@#207@#6@#8@#88!2@#20@#1!3@#6@#2!2@#1!2@#7@#20@#123!2@#226!2@#123@#225@#123@#225@#123!3@#226@#225@#123@#243@#225@#123!2@#225@#123!3@#225@#123!3@#226@#123@#207@#210@#123@#60@#137!2@#88@#231@#213@#234@#225@#226@#225@#123!2@#225@#123@#225!2@#229@#244@#213@#207@#6@#8!2@#1!3@#8@#1!3@#5@#51!2@#69@#75@#98@#158@#82@#56@#79@#69@#7@#19@#20!2@#2!2@#20@#21@#20@#1!4@#2@#1!19@#20@#1!2@#20@#1@#149@#1@#21@$#1!3A#20A#1!3A#20A#1!3A#20!2A#1!20A#20A#1A#20A#1!9A#2A#24A#4A#7A#6!2A#1!2A#8!2A#2A#7!2A#149A#225A#123A#229A#227A#244A#231A#227A#217A#123!2A#129A#225A#129A#88A#82A#3A#82A#19A#7A#8A#20!2A#2A#20A#8!2A#1A#20A#1!3A#207A#123A#7!2A#123A#35A#123A#19A#6!2A#1A#20A#1A#20A#1A#20A#6A#20A#123!3A#226A#123!3A#226A#123!4A#225A#123A#225A#123!9A#74A#7A#8A#218A#230A#227A#201A#88A#126A#225A#231A#234A#7A#225A#123!2A#226A#123!2A#225A#229A#227A#244A#213A#217A#6A#8!2A#1!5A#20A#1!2A#6A#115A#51A#69A#50A#80A#69A#51A#25A#69A#68A#6A#1!2A#20A#2A#20!2A#1!5A#2A#1!13A#20A#1!8A#20A#1!4A#21A$#1C#20C#1!31C#2C#1!7C#8C#2C#1!2C#7C#129C#74C#20C#1!2C#6C#8C#6C#19!2C#123C#88C#19C#88C#123!2C#225C#218C#225C#229!2C#227C#226C#19C#123C#35C#88!2C#35C#88C#123C#7C#8C#20C#2C#7C#1!2C#8C#20C#8C#1C#6C#8!2C#7C#88!2C#19!2C#88C#35C#7C#1!3C#6C#20C#8C#1C#2!2C#20C#218C#19C#123!2C#218C#123C#225C#226C#123C#74C#226C#225C#123!3C#225C#123!3C#225C#74C#123C#5C#8!2C#39C#240C#231C#225!2C#88C#115C#123C#231C#8!2C#7C#123C#225C#123!4C#225C#244C#250C#229C#206C#8!2C#1!7C#20!2C#8C#82C#26C#80!2C#69!2C#99C#145C#56C#50C#6C#2C#20C#1C#20C#1C#21C#20C#1!27C#20C#1!4C#21C$#1!7G#20G#1!4G#20G#1!19G#20G#1!10G#6G#1G#123G#88G#20G#1!2G#6G#8G#7G#19G#123!2G#35G#225G#5G#123G#69!2G#18G#137G#123G#7G#229G#243G#229G#225G#123G#82G#225G#88!2G#225G#7G#8G#7!2G#20G#2G#8G#1G#8G#1G#20G#1!2G#6G#7G#123!3G#7G#123G#35G#88G#82G#7G#1G#8G#6G#1G#6G#1G#20G#8G#74!2G#20G#7G#74G#123!2G#207G#226G#123!5G#218G#123!3G#74G#123G#7G#149!2G#8!3G#240G#213G#240G#1G#19G#88G#201G#225G#244G#6G#39G#7G#123!6G#229G#213G#229G#6!2G#1!6G#20G#1!2G#8G#123G#19G#3G#51G#80G#51G#56G#68G#67G#35G#56G#80G#6G#2G#20!3G#1G#20G#1!19G#20G#1!8G#20G#1!4G#2G$#1!2O#20O#1!29O#2O#20O#1!2O#20O#1!5O#2!2O#1O#5O#129O#8O#20!2O#8O#6O#123O#164O#82O#123!3O#7!2O#88O#110O#81O#181O#9O#115O#88O#218O#225!4O#19O#123O#237O#82O#6O#8O#123O#74O#8O#1O#20O#8O#20O#1O#8!2O#7O#19O#35O#123O#3O#7O#123O#82O#7O#35O#110O#35O#8O#20!2O#8O#2O#1O#8O#6O#7!2O#6O#8!2O#6O#20O#123O#7O#206!2O#207O#149O#123O#149!2O#7!2O#6O#2O#8O#2O#39O#8!2O#240O#250O#234O#39O#218O#39O#88O#237O#7O#231O#234O#39O#8!2O#6O#218O#123O#149!2O#229!2O#8!3O#1O#8O#1!3O#8O#20O#1O#8O#3O#88O#92O#75O#81O#51O#35O#88O#110O#79O#69O#75O#67O#3O#2O#1!2O#2O#20O#1!28O#20O#1!3O#20O#1O#21O$#1!3_#2_#1!3_#20_#1!29_#20_#1!6_#8_#1_#7_#20!2_#1!2_#2_#3_#2_#8_#6_#2_#3_#7_#6_#19_#88_#35_#18_#181!2_#81_#123_#225_#237_#88_#225_#82_#19_#7_#82_#8!2_#207_#6!2_#1!2_#8_#1_#8_#6_#19_#83_#123_#82_#7_#2_#123_#7_#8_#123_#149_#19_#88_#123_#19_#20_#1_#6_#8_#1_#8_#1_#6_#1!2_#8!2_#6_#20_#7_#2_#21_#2_#6_#7_#74_#7_#8_#1_#8!3_#39_#8_#207_#240_#231_#234_#1_#228_#232_#229_#20_#7_#25_#229_#217_#207_#39_#8!5_#218_#240_#6_#8_#1!2_#8_#1!4_#8_#1_#8_#88_#69_#68_#79!2_#88_#82_#3_#164_#69_#79!2_#92_#80_#8_#1!2_#20_#1_#21_#20_#1!23_#20_#1!9_#2_$-#1!2@#20@#2@#1!40@#20!2@#1@#20@#218@#1!3@#20@#2!2@#149@#7@#207@#229@#225@#149@#207@#123@#225@#126@#181@#167@#110@#19@#225@#88@#225@#123@#225@#3@#8!2@#39@#228@#234@#2@#8@#1@#20@#8@#7@#88!2@#123!2@#6@#2@#8@#149!2@#8@#226@#123@#206@#82@#88@#35@#3@#8@#6@#20@#1@#6@#8@#1@#8!3@#6@#21@#8@#6@#2@#8!2@#21@#7@#20@#2@#8@#1!4@#8@#74@#231@#243@#20@#8@#226@#229@#250@#241@#149!2@#226@#207@#231@#213@#234@#6@#39!2@#8@#234@#226@#218@#1!5@#8@#1!2@#8@#20@#8@#20@#7@#88@#69!2@#88@#3@#6@#8@#82@#88@#79@#68@#69@#110@#8@#20@#1!2@#20!2@#1!31@#20@#1!3@$#1A#2!2A#20!3A#1!7A#20A#1!18A#2A#1!10A#2A#20A#1A#20A#2A#225A#6A#1!3A#8!2A#207A#7!2A#229!2A#218A#7A#218A#225A#82A#129A#60A#18A#88A#82A#123A#88A#237A#123A#225A#3A#6A#8A#226A#228A#8A#1!2A#8A#1A#19A#88!2A#123A#3A#2A#8A#2!2A#7A#20A#218A#225A#7A#6A#7A#82!2A#7A#6A#8!2A#1A#8A#1A#8A#1!2A#2A#8A#6A#2A#8!3A#1!2A#20A#8A#1A#20A#1A#6A#19A#5A#74A#207A#8!2A#234A#227A#229!2A#227A#226A#207A#225A#123A#20A#230A#250A#217A#20A#206A#234A#240A#1!2A#20A#1A#8A#1A#8A#1!2A#8A#1!2A#20A#1A#2A#56A#88A#19A#8A#6!2A#1A#6A#88A#68A#79!2A#35A#8A#1A#20!2A#1!2A#21A#20A#1!24A#20!2A#1!7A$#1!2C#20C#21C#20C#21C#20C#1!33C#20C#1!2C#20C#1C#20!2C#2C#74C#149C#8C#1C#20C#1!3C#20C#74C#218C#149C#226C#227C#225!2C#226C#19C#129C#81C#126C#237C#3C#123!2C#88C#123C#19C#8C#7C#228C#207C#1!2C#20C#1!3C#149C#5C#3C#2!2C#8!2C#1C#7C#20C#7C#225C#123C#6C#8C#6C#7C#123C#19!2C#5C#3C#6C#8C#1C#20!2C#8C#1C#8C#1C#8C#6C#1C#8!2C#6!2C#7C#5C#19!2C#7C#6!2C#39C#8C#207C#229C#227!2C#229C#244C#207C#206C#225C#229C#6C#240C#213C#250C#213!3C#240C#1!4C#20C#1C#8C#1!3C#20C#1C#8!2C#6!2C#8C#20!2C#2!2C#8C#2C#82C#69C#79C#68C#19C#20C#1!2C#20C#1!2C#20C#1!33C#21C$#1G#20G#2G#20G#1G#20G#1!7G#20G#1!27G#20G#1G#2G#20G#1G#20G#149G#123G#2G#1!3G#20G#8G#1G#207G#226G#218G#7G#226G#229!4G#226G#19G#129G#115G#123G#7G#19G#225G#88G#123G#149G#6G#149G#228G#20!2G#1!2G#20G#1G#8!2G#21G#6G#2G#8!2G#1!2G#2G#20G#2G#7G#123G#6!2G#20G#206G#2G#6G#123G#164G#35G#123G#82G#19!2G#149G#7G#19!2G#7G#19G#145G#19G#35G#88G#35G#88G#82G#19G#149G#8G#7!2G#8!2G#218G#227G#217G#227G#229G#227G#226G#7G#123G#229!2G#149G#207!2G#218G#234!2G#218G#1!2G#8G#1!3G#8G#1!4G#8G#20G#1!2G#6G#21G#8G#20G#2G#20G#6!2G#8G#82G#115G#110!2G#82G#20!3G#1!34G#149G#1!3G$#1O#2!3O#1!40O#20O#2O#20O#74!2O#20O#1O#20O#1O#8O#1O#8!3O#74O#229O#149O#123O#229!2O#225!2O#123O#225!2O#123O#74O#6O#7O#123!2O#7O#1O#2O#226O#20O#1O#20O#1!4O#8O#1O#8!3O#1O#8O#1O#20O#2O#207O#2O#123O#20!2O#1O#8!2O#1O#8O#25O#19O#82O#35O#88!2O#56O#35O#88O#82O#35O#82!2O#35O#82O#19!2O#7O#6O#207O#123O#207O#206O#226O#218O#8O#234O#227!2O#229O#227O#229O#225O#217O#225!4O#8O#39O#8O#228!2O#8O#1!4O#8O#1!3O#8O#1O#20O#1O#8O#20O#8O#1O#6O#149O#6O#2!2O#1!2O#8!2O#88O#110!2O#123O#1!30O#20O#1!8O#2!2O$#1_#2_#20_#1!2_#2_#1!2_#20_#1!2_#20_#1_#21_#20_#1!27_#20!2_#1!2_#2_#207_#1!2_#20_#8_#1!2_#8!2_#6_#2_#8_#207_#229_#218_#149_#229_#225!3_#123!2_#225_#82_#6_#8_#149_#7_#20!2_#2_#226_#20_#1!4_#20_#1!2_#8_#1_#8_#1!3_#8_#1_#8_#6_#8_#218_#7_#6!2_#2_#3_#19_#82_#88_#7_#123_#82_#6_#3_#7_#3_#206_#7!4_#149_#206!2_#229_#226_#225_#229!3_#149_#20_#229_#123_#7_#225_#217_#227_#229_#227_#244_#241_#227_#225_#229_#226_#149_#234_#8_#234_#228_#8!2_#1_#20_#1_#20_#1_#8_#1!2_#8_#1_#20_#1_#8_#20_#2_#19_#2_#21_#7_#8_#1!2_#8!2_#88_#110_#88_#7_#20_#1_#20_#1!32_#2!2_#1!2_#2_#21_$-#2@#20@#1!10@#2@#20@#1!29@#21@#20!3@#1!4@#20@#1!3@#2@#207@#149@#7@#8@#149@#225@#149@#226@#225!4@#123!3@#20@#8@#6!2@#20@#1@#149@#218@#6@#1@#20@#1!6@#8!2@#1@#8!2@#1!3@#2@#6@#19@#88@#69!2@#88@#69@#56@#237@#88@#7@#8@#6@#39@#6@#123!2@#226@#229@#226@#225@#229@#227@#244@#229!2@#225!2@#229@#225!2@#229@#123@#218@#229@#228@#7@#229!2@#227!2@#229@#213@#225!2@#226@#7@#229@#228@#6@#234!2@#8@#1@#8@#1!2@#8@#1!2@#8!2@#1@#8@#1@#6@#1@#149@#7@#5@#6@#8!2@#6!2@#1@#8!2@#82@#88@#19@#2@#20@#1!29@#20@#1!5@#149@#1@#2!2@#21@$#1A#21A#20A#1A#2A#1!7A#20A#1!28A#20A#1A#20A#1A#20A#1!5A#20A#1!3A#20A#74A#228A#74A#207A#7A#206A#226A#7A#226A#225!2A#123A#225A#123A#206A#1A#20A#8A#20A#2A#7A#207A#149A#20!2A#1A#20A#1!3A#8A#1!3A#8!2A#1A#8A#1!2A#20A#123A#88!5A#82A#7!3A#8!3A#7!2A#25A#123A#229A#123A#229A#218A#227A#244!3A#229!2A#225!2A#229A#227A#229!2A#123A#226A#229A#218A#7A#225A#227!3A#241A#229A#225A#19A#20A#213A#234A#1A#207!2A#1A#8A#1!4A#8A#1!3A#8!2A#1A#6A#7!2A#5!2A#6A#8A#88A#119A#25A#8!2A#6A#88A#110A#20A#2A#20A#1!2A#21A#20A#21A#2A#1!4A#2A#1!27A#2!2A$#1!3C#2C#1!5C#20C#1!40C#20C#1C#20C#1!2C#20C#207C#74C#218C#74C#228C#7!2C#218C#3C#123C#225!3C#7C#6!2C#2C#20C#6C#149C#218C#149C#74C#218C#1C#20C#1C#20C#1!6C#8C#1C#6!2C#2C#6C#7C#2C#123C#88C#7!5C#8!2C#3C#19C#88C#237C#35C#123C#3C#6C#74C#225C#229C#244!5C#229!2C#227C#225C#229C#225!2C#218C#123C#229C#225C#123C#229!2C#227!2C#244C#225C#226C#6C#217C#250C#218C#207C#234C#8C#1C#8C#1C#8C#1!3C#8C#1C#8C#20C#1C#8C#7C#74C#123C#35C#149C#1C#8C#115C#9C#6C#8!2C#19C#69C#88C#5C#20C#21C#20C#21C#20C#1C#2C#1!4C#2C#1!3C#2C#1!2C#2C#1!17C#2C#1!3C#2C#21C$#1!2G#20G#1!48G#20G#1!4G#2G#6G#207G#74G#225G#218G#7G#149G#7!2G#123!2G#7G#3G#6G#2G#1G#6G#149G#5G#149G#2G#149G#218G#2G#20G#1!2G#20G#1!2G#20G#1G#20G#1G#7G#75G#88G#56!2G#88G#7G#2G#226G#149G#7G#6G#8G#6G#3G#8G#7G#115!2G#110!2G#201G#88G#145G#19G#74G#229G#244!2G#231G#244!3G#229!2G#225G#229!2G#227G#226G#123G#226G#229G#149G#123G#227G#229!2G#225!2G#226G#207G#217G#240G#218G#228G#207G#1G#8G#1!3G#8G#1G#8G#1!3G#8G#7G#19G#123G#19G#88G#123G#8!3G#88G#17G#3G#8G#5G#35G#69G#82G#6G#20G#1G#20!2G#1G#2G#1!4G#2G#1!24G#2G#1!3G#2!2G#21G$#1!2O#21O#20O#1!39O#20O#1!2O#20O#1!5O#20O#1!5O#7O#218!2O#225O#218O#6!2O#74O#149!2O#7O#8O#6O#2O#1O#21O#7O#149O#1O#8O#5O#226O#20O#1O#20O#1!2O#20O#1!4O#8O#2O#110O#79O#88O#19O#82O#20O#1O#74!2O#6O#7O#8!2O#6!2O#7O#88O#237O#110!3O#69O#126O#237O#88O#35O#226O#217O#244!4O#229!3O#129O#229O#225!2O#206O#218O#229O#225O#229O#123O#229!2O#225!2O#206O#229O#240O#234O#240O#218O#1!2O#20O#1!3O#8!2O#1O#8!2O#5O#7O#82O#123O#82O#88O#123O#149O#8!2O#82O#81O#51O#145O#6O#35O#88O#82O#7O#1O#21O#20O#21O#20O#1!13O#2O#1!18O#20O#2O#1!2O#2O#21O$#1!3_#20!2_#1!43_#20_#1!4_#20_#1!3_#20_#1_#2_#6_#5_#207_#2_#6!2_#7_#6_#8_#20_#1!3_#20_#2_#1!2_#8_#218!2_#20!2_#2_#20_#1!3_#20_#1_#20_#1_#6_#19_#123_#8!2_#1!2_#20_#206_#149_#6_#1_#8_#7!2_#8_#1_#8_#82_#115_#110!2_#51_#79_#110_#18_#137_#237_#19_#226_#244_#217_#244_#229!6_#225_#218_#74_#225!2_#123_#206_#225_#217_#226_#207_#7_#229_#240!2_#1!4_#20_#1_#8!2_#7_#123_#19!2_#123_#35_#123_#19!2_#88_#110_#82_#8!2_#19_#78_#98_#69_#88_#35_#88_#19_#206_#8_#2_#1_#2_#20_#1!6_#2_#1!25_#2!2_#1!3_#2!2_$-#1!3@#2@#20@#1!49@#20@#1!2@#20@#1!2@#2!2@#6@#21@#2@#1@#6@#1!2@#20@#1@#20@#1@#20@#1@#20@#1@#8@#207@#218@#228@#1!4@#20@#1!3@#8@#20@#1!2@#8!2@#1@#20@#1@#20@#2@#149!2@#8@#1@#7@#225@#20!2@#8@#39@#82@#88@#115@#51@#81!2@#110@#68@#98@#137@#82@#207@#229@#227@#229!2@#225@#229@#225@#229@#129@#218@#7@#229@#225@#123@#8@#206@#225@#123@#206@#207@#231@#234@#218@#1!8@#123@#35@#123@#82!2@#8@#19@#88!2@#110!2@#19@#39@#5@#106@#98@#69@#5@#88@#35@#19@#6@#1@#2@#1!2@#20@#1!3@#2@#1!32@#2@#149@#1@#21@$#1A#20!3A#1!46A#20A#1!7A#20A#8A#1A#8A#1!2A#20A#1A#2A#6A#2A#6A#2A#1A#20A#1A#20A#1A#20A#207A#1A#228!2A#20A#1A#20A#1!3A#20A#1!5A#8A#1!3A#20A#1!2A#20A#74A#6A#8A#7A#123A#225A#123!2A#6A#8A#7A#88!2A#115A#51A#81A#119A#68A#78A#139A#88A#7A#226A#227A#229!3A#237A#225A#229A#226A#7A#225A#226!2A#6!2A#7A#3A#206A#231A#240!2A#1!6A#20A#1A#8!4A#1!2A#8A#123A#110!2A#88A#82A#6A#82A#81A#78A#81A#19A#1A#6A#8A#6A#20A#1A#21A#1!2A#20A#1!34A#2A#1!4A#21A$#1C#20C#1C#20C#1!42C#2C#1!9C#8C#1!2C#20C#1C#20C#1!5C#74C#123C#1C#20C#1C#20C#1!2C#6C#1C#218C#1C#20C#218C#1!2C#8C#1!4C#20C#1!2C#20C#1!2C#6C#8!2C#2C#6C#1C#7C#74C#7C#2C#6C#123C#225!2C#123C#225C#123C#19C#3!2C#19C#88C#126C#81C#110C#81C#167C#127C#150C#3C#123C#207C#229C#225C#229!2C#225!2C#149C#226C#225C#123C#6C#2C#74C#8C#240!2C#218C#228C#1!2C#5C#82C#1C#20C#1!9C#88C#110C#88C#69C#82C#88C#81C#26C#88C#83C#6C#1C#6C#2C#1C#20C#2C#20C#1!43C$#1!2G#20G#1!44G#2G#1!9G#8G#1!2G#8G#1!3G#8G#1G#6G#74G#226G#2G#20G#1G#20G#1!6G#20G#1!2G#20G#1!3G#20G#1!5G#20G#8G#1G#20G#2G#1G#8G#20G#6G#123G#5G#6G#5G#123G#225G#123G#225!2G#123!4G#6G#3G#88G#115G#81!2G#68G#9G#181G#137G#115G#164G#123G#225G#229G#237G#229G#225G#149G#7G#225G#123G#8!2G#207G#226G#231G#218G#228G#20!2G#1G#149G#82G#7G#1G#6G#1G#8G#6G#8!3G#5G#129G#110!3G#79G#110G#115!2G#82G#8!2G#1!2G#2G#20G#1!2G#20G#1!41G#20G#1G#21G$#1O#20O#1!3O#20O#1!40O#2O#1!3O#20O#1!4O#20O#1!3O#8O#1!3O#20O#1!2O#20O#149O#74O#20O#2O#20O#1!8O#20O#1!3O#20O#1O#8O#1!3O#20O#1!2O#20O#8O#1O#6!2O#2O#8O#6O#123O#5O#149O#7O#74O#123O#225O#123O#88O#225!2O#123O#88O#225O#123O#25O#3O#115O#81!2O#51O#181!2O#167O#137O#82O#123O#225!2O#229!2O#225O#7O#225O#123O#218O#8O#206O#213O#223O#218O#20!2O#1!3O#7O#88O#7O#2O#8!2O#6O#19O#88!2O#75O#88O#69O#79O#110O#88O#82O#7O#6O#1O#2!2O#1O#20O#1!3O#2O#1!39O#20O#1!4O#21O$#1!3_#20_#1_#2_#20_#1!44_#20_#1!15_#8_#7_#218_#6_#1_#20_#1!20_#20_#1_#6_#2_#1_#6_#21_#8_#5_#123!2_#8_#123!2_#225_#123_#88_#225_#88_#225_#88_#225!3_#82_#8_#35_#201_#81_#126_#51_#88_#115_#81_#137_#237_#123_#225_#129_#226_#149_#218_#225_#19_#207_#240_#228!2_#20!2_#1!2_#20_#1!2_#7_#88_#35_#88_#35_#56_#88_#68_#69_#56_#88_#110_#69_#56_#19_#6_#2!3_#20_#1!4_#2_#1!4_#20_#1!39_#149_#1_#21_$-#1!2@#20@#1@#21@#20@#1@#2@#1!40@#2@#1@#20@#1!3@#20@#1!7@#20@#1!3@#20@#1!2@#207@#149@#20@#1!12@#20@#1!5@#20@#1!2@#8@#1@#8@#20@#6@#21@#1@#6@#123!2@#7@#8@#123@#225@#123@#24@#225!3@#123@#225@#88@#225@#88@#123@#7@#2@#82@#225@#19@#7@#5@#35@#137!2@#18@#201@#35@#207@#123@#206@#74@#123@#5@#228@#245@#207@#20!2@#1!3@#20@#1!3@#7@#35@#88@#110!2@#51@#68@#88@#82@#88@#56@#7@#206@#7@#2@#1@#20!4@#2@#20@#1!12@#20@#1!35@#2@$#1!4A#20A#1A#2A#1!39A#2A#1!4A#20!2A#1!7A#20A#1!6A#20A#1A#2A#20A#1!8A#20A#1!11A#8A#1A#8A#20A#1!2A#8A#6A#1A#8A#7A#74A#123A#8A#7A#225A#123!3A#88A#123A#225A#88A#123A#35A#123A#225A#123A#7A#6A#3A#7A#6A#25A#88A#115!3A#34A#137A#123!2A#7A#225A#123A#74A#207A#229A#20A#1A#20!3A#1!6A#6!2A#2A#7A#19A#164A#88A#92A#7!2A#3A#8A#20A#1A#20A#1A#20A#1A#20A#1!2A#20A#1A#20!2A#1!39A#20A#1!2A#20A#1A#21A$#1C#2C#20C#1!16C#20C#1!30C#20C#1!2C#20C#2C#1!11C#2!2C#1!2C#20C#1!9C#20C#1C#20C#1!6C#20C#1!2C#20C#228C#20!2C#8C#2!2C#8!2C#5C#123C#19C#8C#123!2C#225C#123C#88C#123!2C#225C#123!2C#225C#123C#225C#123!2C#7C#123C#225!2C#6C#82C#201C#115!2C#126C#115C#123!2C#7C#74C#123C#149C#226C#234C#20!2C#1!6C#20C#1!2C#2C#1!3C#8C#35C#110C#56C#6C#8C#6C#20C#1C#20C#2C#1!2C#20C#1!5C#21C#20C#1!37C#20C#1!4C#20C#1C#21C$#2G#20G#1!18G#149G#1!30G#20G#1G#21G#20!3G#1!24G#8G#1!2G#20G#1G#8G#20G#1!3G#8G#7G#229G#20G#2G#20G#6G#83G#19G#3!2G#19G#88G#6G#123!2G#225G#123G#225G#123!4G#225G#35G#123!2G#225G#7G#6G#123G#225G#129G#123G#7G#129G#115G#81G#115G#123G#225!2G#6G#74G#123G#218G#229G#218G#20G#1!7G#20G#1!2G#20G#1!3G#8G#56G#88G#19G#6G#20G#1G#20G#1G#20G#1!8G#20G#1!41G#20G#1!3G#2G#21G$#1!5O#2O#1!2O#2O#1!43O#2O#20O#1O#21O#20O#1!22O#20O#1!2O#8O#1!10O#228O#20O#2O#1O#123O#202O#51O#129O#88O#115O#88O#19O#129O#123O#82O#19!2O#123!5O#225!2O#123!2O#7!2O#74O#225!2O#227O#7!2O#88O#237O#201O#225O#35O#225O#6O#123!2O#226O#229O#1!3O#20O#1!3O#20O#1O#20O#1!3O#20O#6O#1O#6O#26O#88O#206O#20O#1O#20O#1!3O#20O#1!3O#20O#1!7O#20O#1!8O#20O#1!25O#149O#1!5O#149O#1O#21O$#20_#21_#20_#1!16_#20_#1!61_#6_#1!11_#207_#149_#20_#2_#74_#225_#19!2_#88_#129_#201_#119_#123_#126_#60_#137_#60_#88!2_#123!5_#226_#7_#74_#225_#7_#123_#229_#225_#227_#226_#149_#123_#225_#88_#225_#123_#6_#123_#149_#229_#7_#20_#1!3_#20_#1_#20_#1!3_#20!2_#1!2_#2_#1_#3_#88!2_#7_#20_#1_#20_#1!5_#20_#1!7_#2_#1!2_#20_#1!5_#20_#1!3_#2_#1!2_#2_#1!2_#2_#1!2_#2_#1!2_#2_#1!2_#2_#1!16_#21_$-#2!2@#20@#1!17@#2@#1!30@#20@#1!4@#2@#20@#1!20@#20@#1!11@#20@#1!2@#20@#228@#2@#20@#8!3@#20@#1@#19@#82!2@#88@#188!4@#181@#126@#115@#88@#225@#35@#19@#7@#123@#229!2@#225@#7@#226@#229!3@#225@#6@#7@#74@#123@#225@#6@#7@#74@#218@#2@#20@#1!4@#20@#1!2@#20@#2@#1@#2@#20!2@#1!2@#3@#35!2@#123@#8@#20@#1!8@#20@#21@#20@#21@#2@#1!6@#20@#1@#20@#1!2@#21@#20@#1!26@#20@#1!5@#2@#21@$#2A#1!7A#2A#1!2A#2A#1!2A#2A#1!4A#20A#1!35A#2A#1!2A#20A#1!18A#20A#1!2A#8A#20A#1!11A#20!4A#1!2A#2A#8A#1A#218A#8A#123A#35A#201A#137A#191A#188!2A#41!2A#81A#126A#137A#201A#3A#226A#225!2A#229!2A#123A#217A#227A#229A#225A#218A#7A#123A#225A#123A#20A#7A#20A#243A#1A#20A#1!5A#20A#1!2A#2A#1!2A#20A#1!4A#25A#82A#88A#6A#8A#1A#20A#1!8A#2A#20A#1!3A#20A#1A#20A#1!6A#20A#21A#1!6A#2A#1!8A#2A#1!12A#149A#1!4A#21A$#20C#2C#1!17C#2C#1!39C#21C#20!2C#1!14C#20C#1!2C#20C#1!3C#20C#1!2C#20C#1!2C#20C#1!7C#20C#1!4C#20C#2!2C#7C#218C#7C#82C#115C#60C#181C#188!2C#195C#17C#51C#25C#226C#225C#229C#226C#207C#229C#226C#207C#206C#123C#226!3C#123!2C#20C#7C#149C#207C#1C#20C#1!3C#20!2C#1!2C#20C#1!3C#2C#1!4C#20C#19C#88C#7C#1!4C#20C#1!4C#2C#1!3C#20C#1!3C#20C#1!13C#2C#1!6C#2C#1!14C#20C#1!5C#2C#1C$#2G#1!9G#2G#1!7G#2G#20G#1!38G#2G#1G#20G#21G#20G#1!14G#2G#1!3G#20G#1!13G#20G#1!6G#6G#2G#6!2G#19G#206G#20!2G#19!2G#88G#126G#195G#167G#26G#19G#229!2G#225G#207G#225G#229G#123G#229G#225G#229G#225G#226!2G#149G#7G#149G#2G#149G#2G#1G#20G#1!3G#20G#1!7G#20G#1!2G#20G#2G#20G#2G#35G#19G#20G#8G#20G#2G#1G#20G#2G#1!30G#2G#1!7G#149G#1!12G#149G#1G#21G$#20O#2O#1!6O#2O#1!6O#2O#1!8O#20O#1O#20O#1!3O#20O#1!24O#2O#1!5O#20O#1!16O#20O#1!22O#8O#1O#2O#8O#20O#228O#123O#206O#7O#20O#218O#207O#3O#123O#129O#88O#123O#226O#229O#206O#226!2O#206O#229O#225O#229O#225O#229O#225O#226O#7O#20O#2O#149O#2O#149O#1O#20O#1!3O#20O#1O#20O#1!5O#20O#1!3O#20O#21O#2O#35O#88O#6O#8O#1!6O#2O#1!3O#20O#21O#20O#1!38O#20O#1O#20O#1!4O#21O$#1_#20_#2_#1!18_#20_#1!3_#149_#1!2_#2_#1_#2_#1!29_#2_#1!3_#20_#1!15_#20_#1!15_#20_#1!5_#8_#1_#8_#20_#218_#229!2_#228_#226_#218_#149_#225_#227!2_#229_#149_#7_#206_#123_#229_#123_#226_#218_#149!4_#206_#149_#20_#2!4_#1!16_#21_#20_#1_#20!2_#7_#88_#164_#7_#6_#2_#1_#20!2_#2_#20!2_#1_#20_#21_#20_#1!2_#2_#1!41_#149_#1!2_$-#20@#21@#1!11@#2@#1!5@#2@#1@#2@#20@#1!4@#20@#1!2@#20@#1@#149@#1!24@#2@#1!5@#21@#20@#1!13@#20@#1!2@#20@#1!21@#8@#20@#74@#218@#229@#227!2@#217@#229@#225!2@#229@#226@#225@#218@#225@#229@#226@#218@#225@#234@#123@#7@#123!3@#7@#1!2@#20@#1@#20@#1!5@#20!2@#1@#20@#1!6@#20@#2@#20@#1!2@#20@#1@#2@#19@#123@#82@#19@#2@#1!2@#2@#20@#1!2@#21@#20@#1!3@#2@#1!30@#20@#1!8@#20@#1!4@#21@$#2A#20A#1!6A#2A#1!2A#2A#1!11A#149A#1!2A#20A#2A#1!2A#2A#1!5A#20A#1!18A#2A#1!6A#2A#1A#20A#1!14A#20A#1!21A#20A#1!2A#226A#218A#226!4A#225A#218A#149A#229A#207A#218A#7A#229A#225A#234A#218A#207A#226A#207A#218A#7A#206A#149A#20A#1!2A#2A#1!6A#20A#1!2A#20A#1!8A#20A#1!4A#2A#1A#20A#1!3A#5A#6A#1!5A#20A#21A#20A#1!2A#2A#1!43A#149A#1A#21A$#1!2C#20C#1!23C#2C#1!2C#20C#1!30C#2C#1!3C#2C#1C#20C#21C#1!2C#2C#1!8C#2C#20C#1!25C#207C#229!2C#217C#225C#123C#226C#229!2C#123C#225C#229C#207C#2C#226C#227C#229C#227C#229C#206C#2C#1C#2C#1C#2C#1!2C#20C#1!21C#149C#1!2C#20C#1!12C#2C#1!33C#20C#1!9C#20C#1!4C$#1G#20G#1!8G#2G#1!16G#20G#2G#1G#20G#1!2G#20G#1!2G#20G#1!30G#20!2G#2G#20!2G#2G#1!2G#2G#1!2G#2G#20G#1!24G#20G#1G#20G#207!2G#229G#226!2G#225G#226G#123G#226G#229G#149G#8!2G#20G#149!4G#2G#20!2G#1!7G#20G#1!2G#20G#1!10G#20G#1!13G#2G#1!8G#2G#1!2G#2G#1!6G#20G#1!23G#20G#1!11G#2G#21G$#2!2O#20O#1!3O#20O#2O#1!17O#2O#1!5O#20O#1!19O#2O#1!7O#2O#1!8O#21O#20O#1!2O#20O#1O#2O#20!2O#2O#20O#1!29O#20O#226O#149O#229O#226O#206O#225O#226O#123O#206O#2O#1O#8O#6!2O#2O#1!3O#20O#1!16O#20O#1!14O#20O#1!9O#20O#1!7O#20O#1!21O#149O#1!14O#20O#1!3O#2O#1O$#1_#20_#1_#20_#1!2_#2_#1!16_#2_#1!30_#2_#1!2_#2_#1!11_#20_#1_#21_#20_#21_#20_#1!33_#149_#207_#218_#229_#149_#123_#229_#218_#6_#2_#20!2_#1_#2_#1!2_#8_#1!6_#20_#1!6_#20_#1!62_#20_#1!17_#21_$-#1@#20@#21@#20@#2@#1!25@#20@#1!4@#20@#1!17@#2@#1!17@#20@#1@#20@#1!2@#2@#20@#1!30@#2@#207@#225@#149@#207@#218@#149@#7@#2@#1@#2@#20@#1!3@#20@#1!16@#20@#1!36@#20@#1!6@#2@#1!12@#149@#1!2@#20@#1!18@#21@$#1A#21A#20A#1!48A#2A#1!11A#2A#1!4A#2A#1!6A#2A#1!28A#20A#1!2A#20A#207!2A#20A#149A#2A#20A#149A#2A#1A#20A#2A#1!2A#20A#1!3A#8A#1!12A#20A#1!5A#20A#1!13A#20A#1A#20A#1!14A#20A#1!7A#21A#1!2A#20A#1!12A#20A#1!6A#20A#1!13A$-\"
[String]$Script:ManProfileImageDataA = "`eP0;1q`"1;1;220;200#0;2;0;0;0#1;2;71;70;53#2;2;64;67;53#3;2;65;69;54#4;2;46;53;47#5;2;39;47;45#6;2;41;50;47#7;2;60;64;52#8;2;44;48;45#9;2;53;59;51#10;2;36;45;44#11;2;39;45;42#12;2;47;51;42#13;2;34;41;40#14;2;36;44;41#15;2;34;43;35#16;2;30;38;38#17;2;24;35;38#18;2;23;32;34#19;2;27;32;29#20;2;26;28;32#21;2;29;35;38#22;2;46;46;40#23;2;21;29;32#24;2;18;28;31#25;2;17;27;29#26;2;73;77;69#27;2;17;19;17#28;2;14;19;23#29;2;21;21;28#30;2;86;80;69#31;2;78;76;59#32;2;85;82;60#33;2;80;75;49#34;2;91;89;71#35;2;96;89;65#36;2;92;88;65#37;2;40;39;30#38;2;20;27;30#39;2;16;20;25#40;2;35;31;23#41;2;34;21;20#42;2;58;54;44#43;2;57;54;50#44;2;71;71;58#45;2;20;25;22#46;2;32;36;34#47;2;14;15;21#48;2;10;18;17#49;2;98;92;76#50;2;91;84;64#51;2;84;72;52#52;2;78;67;52#53;2;90;78;58#54;2;90;77;53#55;2;95;85;64#56;2;84;70;47#57;2;85;76;53#58;2;83;66;46#59;2;79;70;48#60;2;79;63;41#61;2;78;64;45#62;2;73;58;40#63;2;77;60;45#64;2;71;54;39#65;2;77;59;40#66;2;82;65;41#67;2;65;59;46#68;2;28;26;23#69;2;10;13;17#70;2;11;15;20#71;2;10;19;23#72;2;55;62;52#73;2;47;54;51#74;2;64;67;57#75;2;52;58;48#76;2;41;44;36#77;2;42;50;43#78;2;30;37;35#79;2;39;41;40#80;2;58;61;51#81;2;78;79;69#82;2;84;83;70#83;2;98;94;71#84;2;99;95;67#85;2;95;84;60#86;2;97;91;60#87;2;80;81;62#88;2;59;58;47#89;2;53;46;34#90;2;58;40;28#91;2;48;32;23#92;2;60;45;33#93;2;72;60;45#94;2;70;65;57#95;2;34;32;28#96;2;15;13;16#97;2;78;78;65#98;2;84;72;57#99;2;91;83;60#100;2;95;86;70#101;2;84;77;58#102;2;96;83;54#103;2;89;71;48#104;2;91;76;48#105;2;67;50;30#106;2;54;47;39#107;2;23;19;17#108;2;21;20;21#109;2;48;56;48#110;2;67;70;58#111;2;55;56;43#112;2;35;42;44#113;2;28;35;34#114;2;71;76;64#115;2;76;74;64#116;2;69;72;63#117;2;32;35;38#118;2;99;96;77#119;2;97;91;70#120;2;88;81;55#121;2;72;54;45#122;2;47;38;29#123;2;66;52;39#124;2;59;63;49#125;2;52;58;58#126;2;24;31;29#127;2;40;40;34#128;2;53;52;41#129;2;46;45;35#130;2;69;64;47#131;2;73;57;36#132;2;90;71;52#133;2;83;63;36#134;2;87;77;47#135;2;70;51;29#136;2;70;52;35#137;2;59;51;36#138;2;66;50;34#139;2;77;56;35#140;2;66;45;32#141;2;22;14;16#142;2;44;48;50#143;2;34;38;30#144;2;85;83;65#145;2;99;98;83#146;2;94;79;58#147;2;40;33;27#148;2;60;57;41#149;2;78;70;43#150;2;85;69;42#151;2;60;44;29#152;2;52;32;23#153;2;47;32;26#154;2;40;32;23#155;2;34;26;22#156;2;53;40;32#157;2;78;52;39#158;2;5;18;21#159;2;47;41;38#160;2;32;38;35#161;2;58;64;59#162;2;78;71;52#163;2;54;32;27#164;2;54;38;27#165;2;40;26;21#166;2;89;64;47#167;2;52;54;45#168;2;91;91;78#169;2;65;60;51#170;2;72;62;50#171;2;71;66;52#172;2;90;78;63#173;2;89;84;70#174;2;59;41;32#175;2;29;25;17#176;2;47;39;33#177;2;84;58;41#178;2;41;25;17#179;2;34;20;16#180;2;27;14;10#181;2;29;19;17#182;2;34;27;26#183;2;16;17;25#184;2;83;66;52#185;2;56;38;23#186;2;36;25;17#187;2;45;35;32#188;2;32;16;16#189;2;22;13;10#190;2;68;47;38#191;2;59;52;40#192;2;65;58;41#193;2;16;9;9#194;2;17;10;14#195;2;45;28;22#196;2;23;23;31#197;2;94;79;63#198;2;94;78;53#199;2;48;31;17#200;2;6;5;10#201;2;38;29;31#202;2;27;16;19#203;2;46;29;25#204;2;27;10;15#205;2;27;15;16#206;2;6;7;14#207;2;78;82;71#208;2;41;22;20#209;2;65;53;44#210;2;41;28;25#211;2;65;38;22#212;2;37;20;9#213;2;21;15;19#214;2;49;45;29#215;2;78;60;50#216;2;28;20;20#217;2;33;16;19#218;2;83;79;64#219;2;85;60;45#220;2;10;19;25#221;2;27;27;28#222;2;25;11;10#223;2;78;54;45#224;2;40;35;32#225;2;77;72;58#226;2;74;75;57#227;2;76;45;35#228;2;46;27;18#229;2;65;34;30#230;2;83;54;45#231;2;88;60;45#232;2;82;53;40#233;2;78;47;38#234;2;80;75;55#235;2;52;23;25#236;2;52;23;22#237;2;85;66;56#238;2;46;23;25#239;2;27;23;28#240;2;39;41;45#241;2;89;66;40#242;2;94;73;44#243;2;92;72;40#244;2;15;18;31#245;2;90;56;36#246;2;32;29;32#247;2;20;18;26#248;2;100;89;47#249;2;50;54;53#250;2;56;61;60#251;2;52;54;58#252;2;56;63;62#253;2;55;63;61#254;2;54;58;63#255;2;90;66;33#1@#2@#3@#2@#3@#2@#4@#5@#6!2@#7@#3!3@#2!4@#7@#6@#5@#6@#8@#9!2@#4!2@#6!2@#10@#5@#10@#11@#12@#11@#13@#14!2@#13!6@#14@#13!4@#14@#13@#14!2@#13@#14@#13@#14@#13@#14@#13@#15@#13@#16@#17@#18!2@#19@#18!9@#20@#18!2@#20@#18!2@#20@#21@#16@#13@#22@#12@#15@#14@#13!2@#16@#23@#24@#25@#23!2@#24@#15@#26@#8@#27@#28@#29@#22@#30@#31@#32@#33@#32@#34@#35@#36@#37@#38@#39!2@#28@#25@#39@#37@#40@#41@#42@#43!2@#44@#11@#38@#25@#38@#25!2@#38!3@#24@#38@#25!4@#45@#46@#27@#47@#48@#44@#49@#50@#51@#52@#49@#35@#53@#54@#55@#35@#54@#56@#51@#57@#56!2@#58@#56@#59@#58@#59@#58@#60@#61@#62@#63@#60@#63@#64@#65@#66@#58@#67@#68@#69@#70!8@#71@#70!12@#47@#70@#47@#70@#47@#70@#47@#70!3@#48@#28!4@$#1A#3A#2A#3A#2A#3A#72A#5A#6!2A#73A#3A#2A#74A#2!5A#75A#5A#6!3A#4!2A#6!4A#5A#14A#11A#10A#8A#10A#14A#10A#22A#76A#13!6A#14A#13!6A#14A#13A#14A#13!3A#15A#13A#14A#16A#18!2A#21A#18!2A#20A#18A#38A#20A#18A#38A#20A#18!2A#20A#18!2A#20A#18!3A#46A#13!3A#14A#13A#15A#13A#16A#15A#73A#77A#78A#38A#6A#74A#79A#19A#80A#81A#82A#36A#83!2A#84!3A#36A#85A#86A#35A#87A#7!2A#3A#44!2A#3A#67A#88A#89A#90A#91A#92A#93A#94A#95A#39A#25!4A#39A#25!2A#39A#25!2A#39A#38A#22A#95A#28A#96A#97A#98A#99A#59A#100A#55A#101A#54A#102A#103A#60A#103A#85!2A#99A#102A#53A#104A#103A#56!5A#58!2A#60A#93A#62!2A#105A#90A#62A#103A#52A#106A#107A#70!3A#48A#47A#71A#70A#71!3A#70A#71A#70A#71A#70A#48A#47A#48A#47A#71A#70A#71A#70A#71A#70A#71A#70A#71A#70A#28A#70A#71A#28!2A#108A$#3C#2C#3C#2!3C#3C#73C#6!3C#109C#110C#2C#3C#2!2C#3C#2C#72C#4C#6C#11C#6!2C#4!2C#6C#4C#6C#5C#14C#10!2C#11C#77C#10!2C#22C#111C#13!4C#15C#13!3C#14C#13C#14C#13!3C#14C#13!3C#15C#79C#13C#14C#112C#13C#18C#20C#21C#18C#113C#20C#18!3C#20C#18!2C#38C#20C#18C#20C#18C#20!2C#13C#16!2C#13!2C#14C#13C#15C#77C#74C#114C#74C#72C#80C#115C#116C#117C#22C#82C#118!4C#85!2C#53C#104C#57C#59C#58C#85!2C#36C#84C#119C#83C#119C#55C#120C#35C#49C#30C#121C#92C#89C#122C#123C#124C#12C#45C#39C#28C#38C#77C#2C#124C#125C#126C#25!2C#39C#71C#127C#128C#129C#130C#131C#56C#50C#132C#66C#99C#59C#66C#56C#120C#85C#56!3C#133C#62C#134C#66C#135!2C#131C#135C#105C#135C#136C#92!2C#137C#138C#123C#139C#105C#140C#136C#56C#89C#141C#69C#70C#71C#47C#70C#71C#70C#28C#70C#71C#96C#48C#70!2C#71C#70!2C#48C#47C#70!2C#48C#70!3C#48C#70!3C#48C#28C#71C#28!2C$#3!2G#2!6G#6G#5G#142G#73G#80G#2!6G#3G#7G#77G#5!4G#6G#8!2G#4!2G#6!2G#11G#14G#11G#10!2G#5G#11G#14G#13!2G#14!2G#13!2G#14G#13!4G#14G#13!4G#14G#13G#22G#79G#13!3G#117G#18!5G#20G#18G#20G#18G#20G#18G#20G#18!2G#38G#20G#18!2G#113G#46!2G#16G#143G#46G#80G#26!2G#9G#14G#20G#143G#74G#49G#144G#82G#145G#100G#50G#99G#50G#85G#104G#54G#85G#84G#54G#146G#54G#86!2G#35G#51G#102G#35G#86G#51G#58G#59G#49G#130G#22G#127G#37G#19G#68G#147G#1G#31G#80G#127G#1G#129G#68G#19G#111G#110G#79G#27G#25G#39G#45G#111G#148G#149G#136G#33G#85G#66G#150G#56G#103G#53G#119G#85G#132G#66G#139G#136!2G#120G#84G#57G#146G#85G#36G#85G#58G#66!2G#151G#152G#153G#154G#155G#153G#154G#156G#91G#157G#132G#106G#108G#70!2G#71G#70G#28G#96G#71G#96G#48G#47G#71G#70!3G#48G#47G#158G#70G#48G#47!2G#48G#47G#48G#47G#70G#48G#28G#70!2G#28!2G#108G$#2!7O#7O#77O#6O#142O#5O#77O#7O#2!7O#7O#5!4O#6O#7O#88O#77O#73O#4O#8O#6!2O#14O#5O#10O#14O#10O#14!2O#13!3O#14O#13!8O#15O#14O#13!2O#76O#159O#13!5O#21O#18O#113O#20O#113O#20!2O#18O#20O#38O#18O#20O#25O#29O#19O#160!2O#79O#117O#22O#72O#74!2O#110O#44O#160O#143O#161O#9O#26O#34O#49O#83!2O#84O#50O#120O#132!2O#36O#84O#35O#84O#118O#36O#66O#150O#103O#104O#54O#120O#51O#54O#104O#120O#36O#146O#103O#54O#57O#124O#129O#76O#22O#88O#101O#99O#49O#83O#118O#34O#80O#88O#128O#22O#68O#12O#9O#45O#28!2O#7O#35O#56O#136O#162O#35O#133O#54O#119!2O#118O#146O#66O#136!2O#105O#163O#136O#35O#118O#119!2O#35!2O#119O#35O#103O#62O#140O#151!2O#164O#165O#70O#69O#48O#108O#41O#62O#166O#122O#28O#70!2O#71O#70O#71!2O#70O#71O#70!2O#48O#47O#48O#47!2O#70O#47O#158O#47O#158O#70O#47!2O#71O#70O#47O#70O#48O#28!3O#108O$#2_#3_#2!6_#9_#6_#5_#6!2_#77_#72_#2!7_#9_#77_#5!2_#6_#167_#7_#9_#4!3_#109_#4!2_#11_#10_#11_#5_#14!2_#13!9_#14_#13!2_#14_#13!2_#14_#13!2_#15_#14_#13!2_#14_#21_#18_#113_#18_#113_#18!2_#19_#18!2_#45_#117_#8_#167_#114_#168_#81_#44_#144_#97_#144_#119_#145_#82_#74_#169_#115_#118!3_#84_#85_#51_#58_#51_#132_#85_#132_#57_#84!2_#85_#146_#54_#103_#53_#35!2_#53_#85_#83!2_#55_#99_#53!2_#120_#85!2_#53_#101_#34!2_#49!2_#102_#58_#54_#35!3_#57_#149_#101_#34_#74_#155_#111_#2_#39_#71_#67_#35_#62_#170_#93_#171_#172_#173_#168_#49_#172_#131_#135_#131_#140_#90_#61_#85_#119_#103_#58!2_#150_#103_#51_#57!2_#65_#62_#140_#151_#174!2_#40_#70!2_#39!2_#175_#58_#51_#176_#96_#71!2_#47_#96_#71_#70_#71_#96_#48_#47_#70_#47_#71_#158_#70_#48_#47_#70!2_#48_#47_#71_#70!2_#48_#47!2_#48_#39_#47_#28_$-#3!2@#2!3@#124@#2@#124@#3@#109@#6!2@#142@#6@#9@#2!5@#124@#2@#3@#9@#11@#6@#10@#77@#80@#74@#7@#9@#109@#4@#109!2@#6@#77@#10@#11@#10@#5@#10@#13!4@#14@#13!8@#14@#13@#14@#13@#14!3@#13!2@#14@#113@#20@#18@#20@#18!3@#20@#46@#80@#74!2@#43@#167@#76@#67@#130@#34@#118!2@#119@#118@#83@#118!3@#84!2@#35@#104@#103@#139@#136@#66@#65@#60@#56@#53@#85@#104@#150@#66@#65@#149@#84@#99@#84@#55@#36@#83@#84@#83@#119@#84@#83@#84@#102@#57@#54@#53@#102@#55@#120@#119@#55@#53@#177@#103@#86@#51@#136@#138@#92!2@#170@#52@#106@#42@#68@#38@#44@#101@#178@#179@#180!2@#181@#107@#182@#63@#135@#136@#62@#92@#90@#66@#57@#132@#56@#58@#66!3@#60@#62@#139@#136@#105@#135@#93@#90@#151!2@#174@#176@#108@#183@#28@#70@#122@#103@#122@#127@#69@#70@#71!2@#96@#71@#70@#71@#70@#71@#70@#48@#70!3@#47@#48@#47@#48@#47@#71@#70@#48@#70!2@#48@#47@#71@#28@#70@#28@$#2A#130A#2A#3!3A#124A#1A#2A#72A#6!4A#5A#7A#2!2A#124A#2!4A#74A#9A#6!3A#77A#7A#2!3A#109A#73A#109A#73A#6A#5A#10A#5A#14A#5A#14A#13!11A#15A#13A#14A#13A#14A#13!5A#14A#13A#18!2A#20A#19A#18A#19A#167A#9A#79A#19A#38!2A#44A#101A#173A#49A#118!2A#85A#35A#83A#35A#36A#85A#50A#36A#54A#99A#103A#133A#136A#139A#60A#57A#86A#84A#55A#66A#60A#65A#56A#54A#51A#56A#62A#63A#51A#58A#57A#55!3A#53!2A#103A#58A#133A#65!2A#131A#136A#65A#99A#85A#53A#56A#53A#52A#139A#184A#64A#90!2A#185A#136A#162A#186A#52A#22A#187A#155A#41A#165A#138A#140A#153A#188A#189A#186A#190A#90A#154A#91A#138A#60A#136A#131A#135A#131!4A#62A#60A#66A#58!2A#59A#58A#136A#174!2A#151!2A#174A#95A#70A#28A#27A#93A#191A#68!2A#69A#70A#71A#70A#71A#70A#28A#70A#71A#70A#71A#70A#71A#70A#48A#47A#71A#158A#70!2A#48A#28A#70!2A#47A#48A#47A#28!2A#183A$#2!2C#3!5C#124C#2!2C#6!5C#4C#7C#2!8C#4C#5!2C#142C#4C#2!4C#9C#4!2C#73C#6C#11C#10C#11C#10C#11C#14C#13!10C#14!2C#13C#14C#13!7C#79C#13C#20C#18!2C#46C#7C#76C#19C#13C#15C#4C#114C#119C#35C#120C#83C#50C#35C#50C#101C#59C#120C#36!2C#84C#35C#54C#53C#66C#135C#65C#51C#35C#119C#53C#58C#60!2C#53C#99C#51C#54C#66C#60C#58C#135C#136!3C#135C#136!2C#135C#136C#105C#140C#138C#136!2C#192C#62!2C#65C#64C#135C#57C#61C#139C#103C#62C#90C#140C#121C#138C#60C#64C#98C#52C#181C#193!2C#194C#189C#176C#165C#179C#195C#179C#193C#107C#193C#154C#63C#62C#65C#136!4C#140C#138C#136C#137C#105C#138C#105C#138C#63C#51C#54C#61C#140C#151C#140C#151!2C#156C#39C#69C#106C#170C#155C#129C#96C#70!2C#28C#70C#28C#96C#71C#70C#71C#70C#71C#96C#71C#70!4C#71C#70C#28C#70!2C#48C#47!2C#71C#47C#28C#71C$#3G#2G#3!4G#124G#1G#2G#3G#72G#6G#5G#6!3G#9G#2!9G#4G#5!2G#10G#9G#2G#7G#74G#72G#109!4G#6G#10G#5G#10G#11G#10G#14G#13!4G#14G#13!2G#15G#14G#13!4G#14G#13G#14G#13!2G#14G#13!3G#113G#38G#196G#73G#11G#143G#7G#12!2G#31G#145G#119!3G#120G#53G#51!2G#120G#35G#99G#83G#99G#51G#49G#103G#139G#135G#56G#85G#84G#53G#133G#65G#58!2G#59G#53G#146G#102G#85G#99G#36G#119G#53G#102G#119G#85G#65G#140G#139G#63G#58!2G#66G#58G#60G#103G#99G#50G#99G#197G#100G#51G#135G#58G#198G#132G#131G#62G#152G#199G#91G#199G#91G#164G#62G#171G#169G#128G#155G#194!4G#193G#141G#181G#141G#200G#181G#164G#174G#138G#140!4G#131!2G#61G#60!3G#58!2G#139G#136G#61G#53G#56G#136G#151G#174G#140!2G#138G#201G#155G#162G#189G#176G#19G#70!3G#28G#70G#71!2G#27G#70G#71G#70G#71G#70!2G#48G#28G#70!5G#28G#70G#48G#158G#70G#71G#70G#28G$#3O#2O#3!5O#2!4O#109O#6!3O#142O#77O#72O#2!2O#124O#2!5O#9O#5!2O#6!2O#7O#3O#74!2O#72O#4O#109O#4!2O#6O#10O#11O#10O#5O#14O#13!6O#14!2O#13O#14O#13O#15O#14O#13!7O#15O#13O#77O#74O#80O#74O#45O#115O#145O#88O#34O#118!2O#84O#58O#136O#60O#57O#60O#99O#85O#57O#132O#103O#99O#35O#99O#65O#131O#103O#35O#36O#103O#149O#57O#55O#85O#86O#83O#119!2O#84O#35O#86O#55O#86O#84O#35O#85O#35!2O#54O#58O#63O#105O#90O#151O#105O#151O#136O#64O#136O#62O#52O#55O#65!2O#198O#58O#60O#63O#85O#33O#52O#130O#93O#121O#156O#101O#162O#122O#153O#121O#176O#200!2O#96O#202O#203O#204O#205O#206O#200O#165O#41O#179O#154O#164O#156O#90O#151!3O#136O#62O#66!2O#58O#56O#58O#136O#65O#54O#57O#58O#151!2O#90O#140O#62O#59O#162O#27O#155O#40O#158O#70O#47O#71O#27O#70!2O#71O#70O#96O#71O#96O#48O#28O#70!3O#48O#70O#71O#70O#48O#47O#70!2O#71O#70O#28O#71O$#3!9_#2_#3_#7_#6!5_#77_#7_#2!3_#124_#2!4_#4_#5!2_#6_#7_#2_#74_#2_#74_#75_#6_#109!2_#4_#77_#5_#10_#5!2_#10_#14_#13!3_#14_#13!4_#14_#13_#14_#13_#15_#14_#13_#15_#117_#143_#74_#116!2_#124_#88_#207_#124_#173_#97_#122_#50_#118_#119_#58_#138!2_#58_#62_#54_#86_#54_#65_#66_#58_#83_#50_#139_#131_#57_#84_#57_#103_#58_#54_#85_#57_#58_#56_#119_#85_#53_#54_#132_#51_#54!2_#85_#35!3_#54_#92_#164!4_#62_#99_#58_#57_#63_#65_#60_#66_#58_#65_#132_#62_#90_#105_#62!2_#52_#56_#55!2_#101_#53_#52!2_#93_#154_#208_#209_#137_#189_#200_#194_#182_#204_#141!2_#206_#194_#182_#154_#210_#180_#181_#91_#195!2_#152_#90_#211_#136_#56_#60_#58!2_#103_#65_#131_#66_#132_#56_#140_#151_#90_#105_#62_#59_#155_#154_#147_#70!4_#71_#96_#71_#27_#48_#28_#70_#48_#47!3_#70!3_#71_#96_#48_#70_#48_#47_#71_#47_#28!3_$-#3@#110@#2@#3!5@#2@#3!3@#75@#6!5@#4@#7@#2!6@#3@#7@#11@#6@#5@#4@#2!2@#74@#2@#74@#109!4@#4@#6@#10@#6@#10@#11@#14@#13!2@#14@#13!3@#14@#13@#14@#13!4@#14!3@#4@#110@#125@#127@#8@#126@#38@#110@#145@#118@#137@#101@#118@#83@#51@#138@#105@#58@#66@#56@#83@#84@#54@#65@#103@#36@#99@#136!2@#66@#85@#51@#61@#62@#136@#139@#131@#66@#53@#146@#56@#66@#65@#66@#54@#36@#86@#51@#65@#146@#119!2@#58@#90@#92@#138@#136@#58@#62@#60@#62@#60!2@#63@#65@#60@#135@#56@#138@#151@#135@#64@#138@#140@#51@#53@#55@#53@#51@#136@#185@#164@#52@#164@#155@#212@#64@#123@#96@#206@#194@#141@#204@#213@#206@#193@#141@#41@#40@#156@#138!2@#64@#138@#62@#65@#60!2@#61!3@#60@#58@#61@#63@#60@#62@#103@#56@#138@#90@#151@#140@#66@#214@#138@#130@#27@#70!2@#71@#70@#71@#70@#47!2@#70!2@#47@#71@#158@#70@#48@#47@#48@#70!2@#48@#47!2@#48@#70@#71@#47@#71@#47@$#3!13A#109A#6!5A#9A#3A#2!6A#3A#4A#6A#5!2A#9A#2A#74A#2!2A#72A#4A#109!3A#4A#5A#10A#77A#5A#11A#14A#13!2A#15A#13A#14A#15A#13!2A#15A#14A#13A#14A#13!2A#8A#161A#9A#78A#16A#13A#16A#68A#7A#173A#34A#144A#119A#84A#99A#65A#135A#60A#103A#66A#57A#54!2A#103A#58A#60A#62A#136!2A#66A#58A#131A#138A#140A#135A#136A#62A#157A#62A#65A#61A#132A#102A#35A#120A#58A#104A#132A#65A#57A#55A#35!2A#85A#60A#63A#150A#58A#66A#59A#53!2A#184A#209A#62A#64A#138A#61A#139A#131A#135A#65A#58A#63A#66A#103A#61A#93A#64A#58A#132A#54A#103A#138!2A#89A#186A#179A#123A#174A#200!2A#194A#141A#194A#206!2A#41A#165A#41A#179A#186!2A#178A#138A#64A#138!2A#92A#138A#151!2A#138A#105!2A#136A#54A#103A#62A#57A#51A#151A#90!2A#151A#132A#164A#122!2A#96A#70A#47!2A#28A#71A#48A#70A#48A#47A#71A#70!3A#47A#48A#47A#48A#47!2A#71A#70A#47A#71!2A#28A#47A#28A$#44C#3!3C#2C#3!7C#2C#72C#77C#6!5C#75C#2!6C#3C#72C#5C#6!2C#4C#2!4C#7C#72C#4C#109!3C#4C#5!2C#6C#5C#10C#11C#128C#11C#13C#14C#13!3C#14C#13C#14C#13C#15C#7C#116C#22C#13C#11C#72C#15C#167C#31C#144C#52C#173C#83!2C#57C#135C#139C#104C#54C#56C#35C#99C#54C#51C#132C#57C#136C#140!2C#211C#60C#57C#135C#58C#62C#65C#57C#132C#56C#150C#103C#150C#146C#35C#83!2C#132C#66C#133C#139C#102C#99C#150C#66C#61C#139C#138C#62C#53C#57C#60C#99C#52C#164C#185C#164C#163C#185C#151C#138C#60C#215C#64C#151C#58C#123C#92C#90C#65C#140C#151C#138!2C#62C#65C#139C#151C#90C#203C#181C#153C#202C#206!2C#96C#194C#206C#200C#96C#210C#156C#164!3C#163C#164C#90C#138C#62!3C#58!2C#60C#58C#61C#136C#131C#54!2C#56C#146C#58C#151C#90C#151C#62C#130C#179C#192C#176C#96!2C#71C#27C#70!2C#48C#47C#158C#70!2C#71C#70C#71C#47C#158C#47C#158C#70!3C#48C#70C#28C#47C#39C#71C$#3!5G#2G#3!3G#2G#3!4G#109G#6!2G#9G#111G#77G#5G#75G#2G#74G#2!2G#3!3G#109G#10G#11!2G#109G#2G#7G#74G#2G#7G#4G#109G#73G#109!2G#6G#5G#10G#6G#77G#12G#59G#128G#13!2G#14!2G#13!4G#15G#74G#116G#12G#114G#31G#144G#49G#34!2G#118G#35!2G#118G#84G#53G#60G#136G#66G#62G#136G#62G#60G#58G#56G#65G#131G#136G#138G#105G#136G#62G#61G#35G#62G#63G#136G#140G#105G#65G#54G#146G#104G#103G#51G#57G#84G#86G#103G#139G#66G#65G#139G#150G#58G#150G#103G#51G#57G#35G#132G#62G#57G#99G#90G#137G#151G#90G#151G#185G#164G#178G#212G#92G#138G#90G#195G#178G#164G#62G#66G#157G#62G#138G#90G#185G#140G#138G#140G#164G#92G#154G#181G#107G#96G#206G#194G#206!4G#141G#155G#210G#163G#174!2G#151!3G#185G#163G#185G#139G#65G#136G#64G#60G#62G#136G#61G#54G#104G#57G#55G#64G#164G#174G#90G#215G#122G#180G#67G#214G#48G#96G#70!2G#28G#70G#71G#70!2G#71G#70!2G#47!2G#70!4G#48G#47!2G#71G#70G#28!2G#47G$#110O#3!3O#2O#3!3O#2!3O#3!3O#2O#109O#6O#167O#88O#12O#5O#6O#75O#3!4O#2O#3O#7O#6!3O#5O#9O#2O#7O#74!2O#9O#6!2O#109!3O#5!2O#10O#77O#8O#76O#79O#13!6O#15O#117O#9O#116O#13O#128O#119O#83!2O#119O#118O#84O#55O#35O#83O#53O#102O#136O#140O#138O#136!2O#65O#132O#54O#55O#54O#120O#54O#56O#62O#103O#120O#55!3O#62O#140O#60O#58O#101O#53O#65O#56O#132O#65O#151O#138O#139O#138O#90O#136O#104!2O#132O#62O#135O#138O#136O#138O#146O#101O#136O#54O#132O#90O#153O#90O#138O#151!2O#152O#185O#195O#153O#90O#164!2O#136O#93O#190O#62O#90!2O#151O#64O#58O#174O#164!2O#195!3O#64O#164O#181O#202O#194O#200O#206!4O#194O#141O#194O#141O#107O#205O#210O#153O#163O#174O#65O#92O#138O#151!2O#174O#140O#151!2O#90O#62O#132O#103O#132O#53O#138O#90!2O#151O#64O#107O#175O#171O#214O#27O#70O#71O#96O#70!2O#71O#96O#71O#70O#71O#70!2O#48O#70O#48O#47!2O#71O#70O#71O#27O#70O#28!2O$#3!3_#2_#3!4_#2!2_#3!6_#6_#77_#6!2_#5_#6!2_#109_#3_#2_#3!2_#2_#74_#4_#5!2_#6_#8_#7!2_#2!2_#7_#109_#5_#6!2_#109_#6_#5_#11!2_#10!2_#13!5_#14!2_#13!2_#74_#11_#72_#168_#118_#119_#49!2_#83_#36_#54_#85_#103_#65_#56_#149_#60_#57_#119_#102_#84_#99!2_#56_#54_#35_#59_#62_#58_#35_#54_#58_#51_#55_#139_#62_#35_#85_#54_#57_#151_#90_#151!2_#140_#90_#164_#163_#164_#51_#104_#62_#105_#138_#136_#140_#105_#60_#132_#131_#62_#98_#90_#153_#164_#153_#91_#152_#90_#62!2_#151_#90_#164_#90_#65_#62_#140_#163_#199_#185_#90!2_#185_#190_#90_#163!2_#90_#140_#91_#151_#52_#89_#41_#189_#200_#206!4_#194!2_#216_#202_#155_#208_#186_#41_#205_#195_#164_#178_#186_#165_#164!2_#174_#140_#151_#90!2_#151_#58_#103_#57!2_#140_#151_#174_#136_#147_#96_#175_#148_#154_#70!2_#48_#28_#70!3_#71_#70!2_#71_#70!3_#47_#71_#158_#70_#48_#70_#71_#28_#47_#28_$-#3@#2@#3@#2@#3@#2!2@#3@#2@#3@#2!3@#3!3@#7@#6!2@#5@#6!4@#109@#7@#3!4@#72@#5!2@#11@#6@#4@#7!2@#2@#7@#72@#5!3@#6@#109@#77@#5@#77@#5@#10@#15@#14@#13!6@#11@#81@#12@#34@#118@#119@#49@#118@#119@#83@#84@#99@#132@#55@#85@#36@#84!5@#55@#58@#60@#58@#99@#131@#140@#136@#138@#103@#55@#53@#85!2@#135@#62@#118@#34@#66!2@#62@#136@#139@#140@#151@#140@#164!2@#163@#135@#62@#138!2@#136!2@#138@#64@#35@#57@#120@#119@#65@#64@#138!3@#136!2@#138@#61@#63@#138@#151@#138@#62@#151@#152!2@#163@#90@#64@#151@#140@#131@#174@#140@#90@#140@#90@#164@#90@#151@#91@#179@#154@#202@#194@#96@#206!4@#194@#213@#202!2@#203@#164@#195@#41@#181@#205@#181@#217@#179@#188@#41@#165@#152@#138!2@#90@#185@#138@#58@#103@#104@#56@#151!2@#140@#156@#27@#69@#96@#191@#41@#70@#47@#70!2@#47!2@#96@#71@#47@#70@#71@#70@#48@#70!3@#48@#28@#70@#71@#28!3@$#3!3A#2!2A#3A#2!2A#3!7A#2!2A#4A#77A#6A#142!2A#6!2A#5A#4A#7A#3!3A#74A#6!2A#10A#6A#11A#109A#2!3A#161A#72A#6A#10A#5A#6!2A#5!3A#10A#13!8A#76A#97A#82A#118A#49A#119A#49A#118A#119A#118A#83A#35A#36A#83!2A#84A#102A#55!2A#99A#54A#56A#103A#140A#104A#60A#164A#62!2A#58!2A#50A#102A#57A#99A#140!2A#99A#83A#98A#105A#138A#166A#58A#62A#65A#93A#163A#152A#58!2A#138A#90A#164A#174A#151A#90!2A#98A#55A#99A#65A#136A#65!2A#63A#66A#65A#62!2A#136!5A#62A#65A#90A#152A#151A#135A#121A#195A#164A#157A#90A#152A#91A#195A#155A#203A#64A#164A#179A#41A#179A#182A#205A#202A#206!2A#200A#206A#194!2A#202A#107A#41A#153A#163A#174A#210A#41!2A#165A#153A#203!2A#178A#210A#203A#164A#138A#90A#164A#151A#60A#51A#56A#66A#140A#174A#92A#108A#47A#158A#108A#156A#47A#70!4A#71A#70A#71A#70A#71A#70!2A#47A#48A#70A#48A#47!2A#71A#28A#96A#71A#28A$#3!3C#2!2C#74C#3C#74C#2C#3C#2C#1C#149C#2C#3C#2!2C#3C#109C#6!8C#7C#3!3C#72C#5C#6C#5C#6C#77C#75C#2C#72C#2C#72!2C#6!2C#5C#6C#5C#6C#77!2C#10C#14C#13!3C#14C#13!2C#11C#116C#87C#118C#83C#49C#83!2C#99C#57C#120C#99C#53C#35C#83C#55C#98C#51C#98C#101C#57C#54C#56C#138C#62C#91C#137C#60C#138C#99C#119C#84C#55C#85C#132C#140C#211C#62C#85C#83C#55C#51C#105C#90!2C#152!2C#164C#91C#151C#164C#185C#164C#138C#151C#138C#62C#136C#52C#119C#93C#140C#138!2C#174C#92C#138!2C#65C#139C#136C#62C#136!2C#58C#138C#164C#65C#62!2C#174C#164C#178C#164C#140C#195C#203C#165C#195C#178C#92C#140C#91C#180C#181C#186C#165C#189C#41C#206!5C#202C#41C#203C#165C#154C#179C#210C#163C#203C#186C#165C#195C#174C#92C#195C#203C#91!2C#164C#138C#174C#163C#138C#103!2C#56C#60C#151!2C#95C#69C#47C#70C#40C#156C#70!4C#47C#71C#47C#71C#47C#70C#71C#70C#47C#71C#47C#71C#70C#71!2C#28!2C#27C$#3!2G#2!3G#3G#2!3G#3!2G#1!2G#2!2G#3G#2!2G#74G#73G#5G#6G#10G#6!3G#5G#4G#7G#3G#2G#74G#6G#10G#5!2G#10G#4G#7!3G#72!3G#6G#5!2G#6G#77G#5G#6!2G#5G#10G#14G#13!4G#109G#31G#218G#83!3G#55G#51G#58G#103G#55!2G#53G#103G#55G#83G#119G#51G#56G#61G#62G#92G#138G#140G#123G#151G#62G#135G#136G#62G#66G#184G#56G#54G#58G#151G#140G#90G#184G#57G#65G#140G#185G#151G#140G#92G#64G#57G#103!2G#51G#103G#58G#60G#150G#58G#60G#36G#49G#101G#61G#58G#184G#98G#58G#62G#131G#65!2G#90G#185G#90!2G#152G#92G#140G#90G#136G#135G#174G#165G#179G#208G#203!2G#91G#165G#163G#136G#138G#62G#105G#90G#154G#153!2G#202G#141G#41G#194!4G#206G#200G#141G#203G#165G#195G#163G#154G#208G#153G#152G#41G#165G#203G#90G#164G#152G#138G#174G#153G#174G#164!2G#163G#92G#61G#58G#66G#65G#140G#40G#158G#47!2G#39G#122G#68G#69G#71G#96G#71G#70!2G#71G#70G#71G#70G#48G#47G#158G#70!2G#48G#70G#28G#70G#71G#47G$#3O#2O#3O#2!2O#3O#74O#3O#74O#3!3O#74O#2!6O#74O#9O#5O#6!6O#109O#161O#3O#2O#7O#77O#6O#10O#6O#11O#72O#7O#72!2O#7!2O#72O#6!2O#5O#6O#5O#6O#5O#6!3O#11O#15O#4O#218O#144O#34O#35O#83O#99O#58O#60O#56O#55O#49O#119O#99O#54O#61O#177O#120O#84!2O#85O#132O#63O#151O#56O#151O#153O#174O#60O#92O#140O#151O#185O#152O#62O#53O#131O#140O#185O#151O#138O#140O#136O#66O#219O#66O#62O#190O#105O#61!2O#58O#66!2O#60O#136O#60!2O#51O#118O#59O#138O#140O#105O#92O#62!2O#101O#90O#152O#185!2O#140O#164O#195O#152O#90O#136O#65O#64O#153O#208O#179O#186O#41O#179O#154O#195O#105O#66O#62O#60O#58O#138O#92O#90O#186O#181O#202O#155O#41!3O#202O#194!5O#217O#154O#208O#163O#91O#208O#195O#203O#186O#179O#163O#174O#151O#174O#64O#90O#163O#164!4O#90O#60O#61O#65O#139O#153O#158O#220O#158O#70O#95O#187O#96O#70O#48O#28O#70O#71O#47O#70!3O#47O#71O#70!2O#48O#28O#70!2O#28!3O$#2_#3!2_#2_#74_#3_#74_#2!2_#3_#74_#3!2_#2!7_#74_#9_#5!2_#6_#5_#6!3_#109_#74_#3!2_#4_#5_#11_#77_#10_#75_#7!2_#72_#80_#72!3_#6_#5!2_#6_#5_#6_#5_#6_#5_#73_#74_#31_#84_#56_#36_#99_#54_#139_#66_#85!2_#54_#57_#103!3_#132_#56_#66_#65_#55_#35_#119_#35_#85_#99_#103_#92_#138_#140_#92_#90_#164!3_#62_#52_#136_#140_#92_#140!2_#136!2_#151_#90_#164_#195_#152_#151_#138_#211_#138_#62_#60_#56_#53_#102_#50_#53_#61_#58!2_#61_#63_#62_#101_#61_#62_#151!2_#90_#164_#179_#212_#164_#140_#136_#139_#64_#174_#178_#186_#203_#165!2_#186_#195_#90_#60_#140_#164_#105_#58_#138_#151_#92_#156_#181!2_#210_#205_#186_#217_#213_#194_#206!3_#194_#200_#41_#210_#195_#91_#164_#91_#195!2_#41_#165_#174_#185_#203_#190_#139_#174_#163_#153_#163_#164!2_#174_#62_#61_#66_#123_#68_#70_#47!2_#108_#176_#108_#70!3_#71_#96_#71_#70_#71_#70_#48_#70!6_#39_#70!2_#28_$-#2@#3!2@#2!6@#3@#2!4@#3@#2!6@#74@#109@#6@#5@#6!5@#109@#3!2@#72@#6@#10@#5@#11@#12!2@#80@#9@#72!2@#7@#72@#9@#6!3@#5@#6@#5!2@#9@#207@#44@#144@#35@#84@#86@#131@#62@#60@#54@#56@#103@#54@#86@#84@#35@#84@#85@#53@#65@#150@#55@#85@#86@#53@#132@#60@#54@#57@#101@#184@#51!3@#58!3@#62@#90@#151!2@#62@#138@#90@#152@#163!2@#91!2@#58@#66@#177@#51@#55@#99@#60@#136@#62@#36@#61@#90@#163@#185@#164@#185@#164@#185@#121@#151@#152@#91@#203@#179@#178@#151!2@#138!2@#90@#138@#152@#195!2@#203@#210@#208@#186@#195@#90@#62@#92@#164!2@#138@#63!2@#92@#203@#165@#202@#165@#195@#41@#203@#41@#141@#194!3@#206@#194!2@#206@#181@#210@#195@#203@#138@#163@#186@#165@#178@#203@#140@#195@#164@#136@#131@#174@#164!4@#174@#90@#60@#139@#58@#121@#28@#69@#158@#69@#122@#221@#69@#48@#28@#70!8@#48@#70@#48@#28@#70@#71!2@#28@#96@$#8A#110A#2!6A#3A#2A#3A#2A#3A#2!9A#3A#72A#6A#5A#6A#5A#6A#5A#73A#2A#3A#74A#6A#5!2A#10A#4A#9A#167A#125A#124A#9A#72A#7A#72A#109A#5A#6!4A#9A#97A#12A#80A#50A#35A#83A#57A#60A#56A#131A#139A#149A#102A#53A#99A#58A#65A#93A#131A#139A#58A#65!2A#62A#190A#138A#63A#132A#54A#151A#137A#151!3A#164A#151A#58A#62A#164A#185A#163A#190A#140A#185A#163A#152A#164A#64A#60A#65A#138A#90A#151A#60A#136A#140!2A#65A#103A#99A#60A#64A#140A#90A#163A#152!2A#91A#152!2A#185A#154A#179A#178A#123A#60A#151A#185A#164A#195A#64A#123A#90A#164A#178!4A#90A#62A#140A#152A#185A#90A#164A#174A#90A#188A#222A#141A#208A#153A#41A#179A#210A#205!2A#194A#213A#194!6A#41A#165!2A#164A#209A#164A#178A#165A#208A#140A#164A#195A#138A#140A#223A#90A#164A#163A#164A#140A#90A#140A#60A#65!2A#137A#19A#69!2A#155A#224A#69A#70!6A#71A#70!7A#71A#47A#28!2A#71A$#10C#80C#3C#2C#3C#2!2C#3C#2!2C#3!2C#2C#3C#2C#3!2C#2!7C#72C#6C#5C#6!2C#5C#6C#9C#2C#3C#124C#10C#5!2C#11C#4C#9C#124C#80C#72C#161C#7!2C#125C#6!4C#77C#82C#124C#12C#225C#130C#34C#84C#36C#50C#135C#139C#57C#119C#57C#58C#66C#192C#135C#136C#60C#64C#92C#90C#153C#164C#176C#164!2C#151C#60C#65!2C#62C#136C#65C#140C#58C#66C#140C#164C#92C#62C#123C#195C#208C#163C#92!2C#140C#105C#174C#90!2C#123C#152C#91C#60C#53C#62C#63C#53C#123C#138C#136C#164C#91C#152C#91C#185C#164!5C#62C#136C#90!2C#185C#90C#163C#151C#64C#62C#140C#174C#90!2C#138C#64C#90C#151C#90!2C#164!2C#140C#195C#165C#155C#208C#91C#165C#141C#165C#186C#194C#179C#194!2C#213!4C#141C#96C#194C#186C#195C#165C#90C#62C#203C#165C#186C#203C#92C#195C#190C#90C#62C#136C#185C#164!2C#90C#138C#164C#138C#65!2C#66C#123C#68C#69C#155C#106C#69C#70!3C#69C#48C#70!3C#71C#69C#48C#70C#48C#28C#70C#71C#28!2C#47C$#112G#4G#74G#2!3G#3G#2G#3G#2!2G#3!2G#2!3G#74G#2!2G#3G#2!3G#3G#2G#72G#4G#5!3G#6G#5G#9G#2G#3G#109G#5!3G#6G#125G#3G#124G#80G#72!2G#7G#2G#6!2G#5!2G#6G#97G#12G#75G#218G#130G#119G#36G#102G#62G#65G#99G#85G#57G#35G#99G#85G#118G#55G#138!2G#92G#174G#92G#174G#151G#190!2G#136G#151!2G#136G#64G#190G#136G#62G#150G#103G#138G#174G#156G#92G#156G#195!2G#163G#153G#164G#163G#153G#163G#91G#164G#185G#103G#56!2G#61G#138G#211G#138G#99G#132G#66G#58G#65G#139G#62!2G#90G#164G#91G#152G#92G#60G#136G#140!2G#164G#203!3G#195!4G#164G#195G#90G#61G#151G#195G#90G#58G#138G#185G#174!2G#203!2G#153!3G#205G#181G#203!2G#107G#202G#194G#96G#141G#194!2G#202G#205G#202G#96G#141G#210G#208G#203G#92G#136G#164G#186G#208G#89G#92G#90G#140G#90G#58G#64G#151G#164!2G#138G#174G#90G#136G#62G#65!2G#191G#68G#189G#156G#96G#158G#96G#70!5G#96G#48G#70G#71G#70G#28!2G#71G#28!4G$#5O#10O#9O#2!3O#3!3O#2O#3O#2!7O#3O#74O#2!2O#3O#2!2O#3O#2O#72O#6!3O#5O#6O#109O#3O#74O#109O#10O#5O#6O#73O#9O#1O#3O#7O#80O#7O#50O#1O#116O#125O#12O#4O#114O#4O#12O#87O#34O#99O#55O#52O#135O#53O#36O#58O#150O#58O#60O#58O#85!2O#55O#98O#153O#164O#90O#164O#163O#185O#164O#152O#140!2O#199O#90O#62O#65O#166O#103O#164O#178O#202O#217O#179O#178O#208O#203O#174O#164!6O#90O#136O#57O#54O#102O#60O#56O#103O#132O#134O#58O#56O#139O#65!2O#136O#90O#91O#164O#90O#140O#65O#138O#140O#151O#195O#91O#174O#90O#195O#164O#163O#195!2O#91O#151O#64O#92O#151O#185O#138O#140O#174O#64O#138O#195O#203O#154O#91O#153O#41O#205O#210O#152O#41O#205O#194O#206O#194O#213O#141!2O#205O#213O#202O#205O#189O#165!2O#208O#153O#60O#62O#154O#186O#165O#151O#92O#64O#152O#92O#60O#190O#140O#164O#90O#138O#174O#140O#164!2O#60O#65O#136O#92O#90O#96O#70!2O#158O#96O#70O#48O#70O#48O#47O#48O#47O#48O#47O#70O#71O#28O#47O#28O#27O$#10_#142_#5_#7_#3_#2!2_#1_#124_#3_#2_#3!2_#74_#2!3_#74_#2!3_#3_#2!5_#3_#72_#6_#5_#6_#5_#6_#9_#74_#2_#6_#5!2_#73!2_#9_#1_#110_#2_#114_#1!2_#2_#1_#87_#44_#1_#111_#12_#1_#119_#61_#99_#62_#61_#85_#65_#66_#146_#56_#58_#174_#90_#51_#83_#35_#61_#164_#179_#164_#153_#164_#153!2_#163_#105_#64_#62_#150_#65_#90_#138_#164_#186_#153_#154_#195_#90_#154_#178_#195_#62_#60_#56_#58_#65_#66_#99!2_#58_#60_#65_#60_#61_#62_#136_#65_#61_#62_#140_#151_#90!2_#151!3_#62!2_#140!2_#154_#178_#203_#174_#164_#178_#195_#164_#203_#195_#152_#151_#65_#136_#92_#90_#174_#151_#152_#164_#152_#164_#195_#203_#195_#163_#203_#205_#179_#153_#203_#188_#205_#96_#69_#194_#141_#202!3_#216_#107_#41_#202_#107_#195!2_#203_#151_#62!2_#195_#178_#203_#164_#121_#90_#174_#64_#138_#65_#140_#90_#190_#90_#151_#174_#107_#224_#139_#133!2_#151_#156_#27_#69_#70!2_#69_#70!3_#47_#70!2_#47_#71!2_#47_#28_#71_#47_#39_$-#112@#10@#5@#4@#2!4@#3!2@#2!3@#3!4@#2@#3@#2!4@#3@#2!3@#3!2@#9@#5!2@#6!3@#9@#3@#7@#73@#5@#73!2@#109@#226@#144@#101@#162@#33@#57@#59@#31@#36@#31@#144@#34@#144@#87@#53@#59@#55@#136@#53@#54@#135@#53@#150@#56@#140@#178@#91@#138@#56@#118@#49@#99@#152@#195@#163@#164@#163@#185@#92!2@#138@#174@#138@#64@#90@#195!2@#164!2@#90@#163@#164@#151@#92@#138@#93@#58!2@#60@#66@#58@#36@#57@#62@#65@#60@#140@#90!2@#151@#164@#185@#151@#65@#139@#136@#151@#90@#151@#190@#138@#151@#203@#179!2@#208@#92@#164@#188@#165@#91@#203@#91@#136@#62@#66@#131@#138@#90@#151@#90@#195@#90@#190@#174@#178@#41@#164@#163@#40@#179@#205@#154@#163@#41@#179@#189@#216@#213@#194!2@#202@#181@#141@#217@#202@#107@#205@#107@#41@#210@#165@#203@#136@#60@#138@#165@#186@#90@#151@#138@#195@#138@#140@#139@#65@#105@#64@#90@#151@#174@#68@#69@#154@#64@#135@#227@#164@#147@#96@#158@#70@#96@#48@#70@#48@#70@#158@#70!3@#71!2@#70@#71@#28@#70@$#10A#112A#6!2A#75A#2!2A#3A#2A#3A#2!9A#3A#2!5A#3A#2A#3!2A#2A#6A#5!2A#6A#77A#4A#7A#3A#161A#6!3A#87A#35A#52A#192A#62A#192A#93A#62A#130A#93A#130A#36A#118A#84A#119A#51A#101A#173A#139A#102A#65A#58A#60A#105A#140A#185A#138A#60A#58A#140A#55A#119A#103A#136A#151A#140A#91A#151!2A#152A#164A#151A#90!2A#163A#91!2A#164A#153A#164!3A#90A#105A#136!2A#65A#60A#63A#120A#35A#84A#53A#66A#139A#131A#66A#62A#164!3A#105A#64A#138A#190A#151!2A#90A#140A#92A#90A#228A#179A#188A#41A#186A#90A#164A#180A#203A#154A#91A#138A#62A#60!2A#62A#105A#90!2A#64A#163A#164!2A#152A#153A#203A#91A#156A#203A#41A#141A#186A#203A#195A#155A#41A#141A#216A#202A#141!3A#205A#202A#205A#41A#213A#202A#205A#141A#195A#208A#165A#153A#62A#66A#92A#208A#186A#203A#140A#91A#92A#62A#185A#65A#140A#121A#90!2A#174A#41A#70!2A#216A#92A#136A#163A#176A#70!3A#48A#71A#70!5A#48A#70!2A#71A#27A#70A#28!2A$#112C#14!2C#5C#4C#3C#2!2C#3C#2!3C#3!2C#2!2C#3C#2!4C#3C#2!2C#3C#2C#3C#2!3C#9C#6!2C#10C#6C#4C#75C#72C#3C#6C#109C#87C#32C#130C#128C#42C#31C#101C#130C#101!2C#32C#120!2C#58C#62C#59C#53C#36C#53C#131C#103C#62C#103C#131C#174C#178C#174C#60C#90!2C#152C#130C#85C#58C#66C#164C#123C#57C#56C#58C#138C#195C#188!2C#178!2C#195C#92C#90!2C#140C#151C#105!2C#138C#136C#135C#138C#105C#64C#55C#53C#55C#119C#173C#53C#57C#60C#138C#105C#62C#65C#92C#199C#186C#195C#90C#138C#90C#178!2C#179C#186C#41C#186C#153C#64C#136C#151C#195C#135C#138C#64C#60!5C#136C#138C#64C#140C#185C#90C#164C#91C#152C#164C#140C#154C#41C#205C#179C#203C#165!3C#186C#181C#179C#41C#96C#205C#141C#202C#181C#202C#181C#41C#141C#41C#205C#203C#154C#165C#203C#185C#65C#66C#92C#186C#210C#62C#90C#163C#62!2C#58C#136C#138C#140C#90C#174C#40C#70C#28C#158C#68C#136C#90C#163C#108C#158C#28!2C#71C#70C#48C#28C#70!3C#71C#70C#71C#47C#28!2C#27C$#14G#10G#112G#5G#77G#9G#3G#2!2G#3!3G#2!3G#3G#7G#3G#2!4G#3G#2!3G#3G#2!3G#3G#4G#6!3G#5G#109G#4G#72G#124G#31G#173G#130G#167!2G#12G#97G#144G#120G#173G#36!2G#84G#83G#120G#52G#65G#51G#99G#83G#120G#140G#103G#131G#90G#91G#154G#157G#151G#164G#90G#91G#164G#55G#56!2G#90G#91G#64G#136G#62G#61G#192G#92G#140G#123G#65!2G#131G#62G#131!3G#139!2G#65!2G#139G#138G#60G#99G#63G#92G#34G#51G#64G#123G#64G#62!2G#103G#66G#105G#64G#174G#164!4G#199G#151G#138G#174G#140G#64G#138G#62G#151G#152G#163G#131G#60G#62G#64G#138!2G#136G#131G#105G#152G#203!2G#178G#153G#174G#163!2G#164G#174G#153G#165G#186G#179G#153G#210G#188G#203G#165G#208G#153G#41G#122G#189G#141G#202G#213G#41G#107G#202G#41G#202G#205G#41G#181G#203G#210G#195!2G#140G#60G#65G#174G#208G#174G#138G#165G#138G#58G#140G#58G#140G#138G#151!2G#156G#108G#70G#47G#158G#95G#64G#90G#122G#27G#47G#71G#28G#71G#70!3G#71G#70!2G#28G#96G#71G#28!3G$#14O#10O#14O#10O#5O#4O#7O#2O#3O#2!6O#3!2O#74O#3O#2!4O#3O#2!2O#3O#2!4O#7O#6O#10O#6O#5O#6O#5O#77O#31O#34O#124O#4O#9O#4O#80O#101O#99O#85O#57O#66O#60O#58O#57O#119O#55O#57O#53!2O#172O#99O#151O#59O#66O#91O#185O#121O#138O#140O#65O#156O#153O#178O#62O#64O#63O#52O#178O#152O#136O#138O#163O#164O#151O#138O#62O#65O#139O#131O#136!2O#62O#65!2O#138O#152O#151O#138O#131O#120O#61O#92O#98O#55O#138O#140O#62O#103O#51O#66O#151!2O#140!2O#92O#140O#138O#151!2O#90!2O#151O#140O#151O#152O#91O#164O#185O#138O#60O#62O#164O#153O#152O#164O#151O#135O#62O#164O#203!2O#195O#91O#174O#164O#178O#164O#174O#90O#152O#164O#195O#152O#165O#180O#41O#203O#210O#179O#208O#186O#174O#217O#96O#205O#141!2O#41O#141O#41!2O#202O#205O#181O#154O#195O#165O#203O#164O#60O#66O#65O#153O#195O#138O#152O#91O#136O#58O#62O#61O#138O#90O#164O#92O#68O#70O#71O#28O#70O#156O#138O#140O#122O#28O#71!2O#28!2O#48O#28O#70O#71O#96O#71!3O#28O#47O#71O$#14_#112_#11_#10!2_#142_#109_#74_#2_#3!4_#2!3_#3_#2!2_#7_#3!2_#2!2_#3_#2_#3_#2_#3_#2!2_#3_#109_#142_#5!3_#10_#109_#110_#109!2_#6_#73_#116_#34_#101_#56_#58_#66_#58_#56_#51_#63_#135_#62_#60_#56_#53_#54_#58_#136_#62_#92_#51_#92_#91_#138_#58_#163_#179_#188!2_#138_#52_#164_#61_#228_#195!2_#138!3_#92_#140_#151_#105_#62!2_#136_#62_#131_#135_#131_#135_#62_#103_#151_#61!2_#164!2_#56_#57_#136_#62_#136_#90_#163_#195_#208!2_#188_#195_#91_#90_#151_#140_#90_#151_#90_#136_#60_#65_#90_#174_#65_#66_#61_#62_#164_#91_#164_#90_#151_#136_#131_#90_#203_#195_#91_#178_#90_#174_#195_#151_#140_#138_#90_#164_#203_#165_#204_#41_#155_#208_#195!2_#188_#41_#210_#174_#155_#194_#202_#107_#141_#41_#205_#181_#155_#41_#202_#205_#181_#153_#165!2_#203_#138_#66_#65_#60_#122_#121_#151_#165_#151_#56_#60_#65_#61_#92_#174_#92_#40_#70!2_#28_#47_#68_#92_#135_#123_#108_#71_#28_#71_#28_#47_#70_#71_#70_#71_#28_#96_#28!4_$-#6@#14@#79@#10!2@#5!2@#9@#2!10@#3!2@#2@#7@#3!2@#2@#3@#124@#3@#2!2@#3!2@#74@#8@#6@#5!3@#109@#3@#5@#73!2@#114@#36@#101!2@#99@#120!2@#57@#66@#65@#66@#131@#136@#62@#58@#54!2@#65@#138@#136@#212@#101@#123@#185@#138@#151@#179!3@#188@#154@#52@#152@#51@#164@#178@#179@#186@#165@#174@#92@#136@#58@#53@#85@#53@#60@#61@#58@#103@#58!2@#65@#105@#136@#63@#152@#163@#90@#59@#92@#90@#91@#178!2@#186!2@#179!2@#195@#92@#62@#136!4@#64@#140@#151@#140@#65@#58@#66!2@#62@#131@#140!2@#65!2@#62@#139@#136@#190@#153@#186@#178@#208@#203@#92@#140!2@#90@#91@#208@#179!2@#208@#154@#195@#203@#163@#186@#153@#203@#186@#153@#165@#90@#165@#194@#205@#141!3@#41@#202@#41@#182@#179@#202!2@#165@#203@#179@#203@#164@#60@#66@#60@#62@#92@#123@#195@#90@#136@#62@#61@#62@#65@#92@#164@#92@#156@#155@#108!3@#156@#151@#136@#156@#28@#71@#28@#220@#71!2@#70@#28!2@#70@#71!2@#28@#47@#28@$#9A#4A#10!4A#5A#77A#7A#2!4A#124A#3A#2!6A#3A#7A#3A#2A#3!2A#2!2A#3A#74A#2A#3A#72A#8A#5!2A#14A#4A#110A#5!2A#72A#144A#120A#36A#84A#57!2A#85A#132A#104A#54A#104A#53A#65A#62A#136A#103A#54A#139A#138A#90A#91A#138A#50A#63A#195A#208A#178A#188!2A#208A#164A#63A#140A#60A#140A#195A#178A#41A#203A#178A#208A#178A#140A#66!2A#58A#62A#105A#90A#151!3A#185A#90A#63A#164A#91A#152A#59A#123A#195A#91A#208!2A#210A#195A#210A#153A#90A#105A#140!3A#138A#140!2A#139A#58A#66!2A#60!2A#66A#62A#136A#131!2A#190A#163A#91A#208A#164A#138A#186A#188A#203A#92A#151A#136A#140A#152A#91A#165A#208A#165A#210A#165A#208A#165!2A#208A#153A#203A#205A#41A#195A#153A#208A#90A#41A#194A#202A#141!3A#216A#155A#205A#165!2A#181A#205A#217A#187A#186!2A#152A#64A#60A#66A#60A#62A#66A#153A#164A#136A#138A#65A#62A#66A#62A#92A#151A#155A#95A#224A#153A#187A#195A#151A#139A#92A#108A#71A#28!4A#71A#27A#70A#28!3A#47A#28A#27A$#75C#9C#77C#10!3C#5!2C#9C#2C#124C#3C#2C#3C#124C#3C#2!6C#3C#7C#3C#2!5C#3C#2C#3!2C#7C#5C#77C#11C#75C#110C#5C#6C#116C#32C#86C#99C#66C#60C#54C#103C#62C#65C#58C#51C#132C#58C#136C#140C#90C#60C#133C#138C#91C#152C#140C#52C#123C#178C#208C#186C#164!2C#163C#90C#65C#62C#138C#52C#163C#178C#41C#90C#195C#164C#140C#163C#138C#136!2C#58C#66!2C#136C#135C#139C#62C#65C#151C#195C#178C#184C#93C#164C#152C#178C#179C#165C#195C#208C#195C#185C#136C#139C#65!3C#133C#66!2C#133C#66C#150C#66C#133C#60C#136C#140C#138C#164C#195C#186C#181C#205C#179C#163C#210C#188C#153C#138!3C#140C#154C#195!3C#203!2C#186C#203C#153C#203C#165C#195C#153C#186C#179C#41C#195C#179C#91C#90C#202C#96C#213C#141C#213C#141!2C#195C#205C#179C#210C#165C#202C#107C#165C#164C#179C#195C#105C#66!2C#60!3C#92C#164C#65C#140C#136C#58C#62C#136!2C#123C#68C#69!2C#27C#108C#175C#140C#185C#138C#68C#220C#71!3C#28C#71C#70C#71C#70C#28C#96C#71C#28C#47C$#4G#9G#125G#8G#5G#10!2G#11G#6G#72G#3G#2!2G#124G#3G#124G#3G#2!4G#3G#7G#3G#2G#3G#33G#1G#3G#2G#3G#2!4G#75G#77G#8G#2G#114G#5G#6G#109G#32G#85G#62G#58G#104G#61G#135G#138G#211G#151G#90G#151G#56G#54G#62G#151G#90G#136G#135G#195G#91G#152G#62G#218G#195G#208G#163G#174G#90G#163G#174G#223G#59G#185G#63G#135G#151G#91G#195G#140G#65G#56G#105G#178G#179G#154G#90G#163G#151G#138!2G#61G#64G#164G#195G#164G#137G#64G#195!2G#165G#163G#153G#208G#179G#195G#90G#140G#62G#131G#65G#66G#60!4G#66!2G#135G#136G#60G#65G#151G#90G#203G#179G#41!2G#188G#179G#210G#208G#179G#152G#140!2G#138G#140!2G#138G#90G#178G#180G#181G#180G#210G#203G#179!2G#203G#164G#208G#181G#179G#186G#153G#152G#90G#195G#194G#213G#141!5G#203G#41G#181G#210G#165G#208G#141G#179G#153G#163G#174G#138G#62G#66!2G#60G#56G#131G#185G#138G#63G#131G#62G#66G#60G#138G#64G#92G#108G#69G#47G#69G#108G#138G#199G#156!2G#71!2G#28!2G#71G#28G#71G#28!2G#71!2G#27G#47G#28G$#5O#9O#75O#9O#5O#11O#5O#11O#6O#109O#2!4O#3O#2!7O#3O#7O#3!2O#149O#3O#2!2O#3O#2!5O#124O#72O#2O#114O#6!2O#74O#86O#52O#59O#120O#132O#63O#136O#140!2O#138O#105O#136O#65!2O#60!2O#151!2O#138O#195O#228O#138O#121O#53O#164O#152O#164O#229O#90O#229O#90!2O#58!2O#121O#61O#105O#92O#152O#61O#150O#139O#63O#138O#164O#195O#179O#165O#156O#90O#138O#52O#90O#140O#121O#123O#184O#192O#90O#152O#164!2O#179O#165O#163O#138O#90O#185O#164O#163O#185O#151O#138O#65O#66!2O#60O#62O#92O#151O#65O#105O#163O#203O#181O#205!2O#179O#210O#154O#41O#188O#153O#92O#152O#178O#152O#185O#140O#164O#186O#165O#203O#153O#164O#165O#195!2O#164O#163O#186O#179O#41O#203O#156O#164O#176O#195O#165O#141O#213O#141!3O#202!2O#210O#178O#202O#208O#195O#41O#180O#205O#153O#164O#208O#174O#131O#66!4O#58O#62O#92O#62!2O#136O#62O#52O#62O#138O#62O#89O#27O#69O#158O#27O#92O#68O#216O#123O#224O#27O#71!2O#28O#39O#71O#27O#70O#47O#28O#47O#28!2O$#14_#6_#72_#75_#109_#10_#5_#10_#5!2_#9_#74_#2!10_#3_#2!5_#3!2_#2!7_#75_#77_#116_#161_#6_#3_#99_#52_#35_#101_#135!2_#60_#93_#162_#59_#64_#211_#151_#62_#103_#136!2_#140_#90_#228_#152_#98_#151_#172_#230_#219_#157_#229_#90_#229_#163!2_#223_#58_#164_#62_#64!2_#92_#174_#65!3_#177_#65_#164!2_#90_#174!2_#138_#190_#90_#174_#153_#178_#90_#105_#151_#140_#164_#178_#179_#164_#185_#195_#152!2_#91_#152_#185_#90!2_#151_#62_#65_#62_#92_#174_#64_#138_#90_#153_#203_#165_#210!2_#179_#41_#204_#188_#203_#90_#163_#91_#92_#138_#92_#153_#186_#174_#156_#203_#178_#203_#91_#164_#154_#91_#186_#208_#203_#164_#163_#164_#195_#91_#210_#155_#181_#213_#141!2_#194_#202_#179_#165_#195_#186_#41_#186_#154_#41_#213_#41_#185_#178_#91_#63_#66_#60!4_#56_#62_#151_#62!3_#65_#58_#140!2_#62_#106_#213_#96_#213_#174_#68_#47_#175_#192_#216_#48_#71_#220_#71_#28!3_#71_#47_#28_#71_#28_$-#73@#4@#109@#75@#109@#6@#5!4@#6@#74@#2!5@#3@#2!7@#3@#2@#3@#2!4@#72@#124@#7@#2@#124@#2@#109@#4@#87@#3@#31@#120@#162@#35@#131@#61@#54@#59@#54@#57@#50@#184@#136@#151@#136@#65!2@#138!2@#140@#195@#185@#63@#132@#100@#132@#166@#231@#227@#229@#90@#229@#90@#190@#132@#65@#151@#63!2@#140@#195@#138@#60@#65@#60@#139@#151@#163@#92@#164@#203@#165@#208!2@#179@#195@#174@#140@#90@#140@#90@#188@#208!3@#179@#152@#63@#61@#123@#140@#136!2@#123@#65!2@#140@#91@#152@#140@#64@#92@#153@#164@#165@#41@#179@#153@#195@#179@#41@#178@#140@#90@#151@#62@#138@#164@#186@#154@#92@#153@#208@#41@#153@#203@#195@#152@#203@#163!2@#122@#164@#195@#210@#195!3@#41@#141@#181@#202!2@#213!2@#107@#41@#188@#153!2@#210!2@#208@#41@#141@#179@#156@#91@#208@#151@#58@#60!3@#58@#60@#149@#62@#140@#60@#62!2@#65@#62@#151@#140@#65@#156@#107@#156!2@#216@#70@#47@#191!2@#39@#48@#220@#71!3@#28@#70@#71@#28@#47@#39@$#77A#6A#8A#75A#9!2A#5!5A#72A#3!2A#7A#2!4A#3A#2!8A#3A#2A#72A#2A#124A#7A#124!2A#72A#2A#7A#3A#226A#36A#86A#32A#101A#120A#62A#99A#51A#57A#51A#138A#58A#51A#103A#184A#105A#62A#157A#190A#135A#146A#58A#211A#230A#56A#53A#132A#166!2A#230A#229!4A#90A#131A#150A#64A#140A#138A#58A#164A#163A#136A#140A#138A#92A#154A#208A#41A#91A#123A#138A#136A#138A#140A#123A#136A#140A#90!2A#179!2A#208A#41A#154A#164A#185A#90A#151A#64A#121A#62A#64A#62A#174A#152A#199A#165A#90A#123A#92A#153A#205A#186A#179A#181A#179A#203A#91!2A#163A#140!3A#62A#174A#91A#208A#153A#174A#153A#41A#186A#165A#164A#195A#203A#154A#210!2A#203A#195A#210A#208A#147A#91A#195A#203A#181A#41!2A#155A#141!4A#188A#41A#181A#195A#153A#195A#203A#195A#205A#189A#179A#163A#228A#178A#62A#58!2A#105A#151A#62A#138A#61A#62A#136A#65A#62A#139A#65A#138A#164A#151A#60A#92A#178A#92A#155A#28A#70A#181A#62A#175A#28A#71!2A#39A#71A#28!2A#70A#28A#71A#28A$#5!2C#77C#9C#109!2C#4C#10C#5!3C#6C#7C#3!2C#2!2C#124C#2C#3!2C#2!6C#124C#3C#2C#124!2C#2C#124!5C#226C#32C#3C#124C#162C#50C#36C#59!2C#49C#85C#62C#61C#85C#58C#62C#64C#61C#65C#140C#151C#103C#146C#55!2C#132C#177C#232C#172C#132C#166!2C#231C#233C#90C#229C#90C#163C#138C#66C#58C#131C#174C#64C#63C#164C#152C#93C#178!2C#41C#165C#178C#208!2C#195C#91C#163C#90C#163C#195C#90C#164C#178C#179C#208C#188C#208C#203C#152C#195C#165C#195C#178!3C#228C#178C#179C#178C#208C#179C#174C#91C#179C#186C#41C#208C#203C#210C#91C#164C#195C#152C#163C#92C#136C#138C#90C#164C#195C#164C#91C#208C#188C#41!3C#188C#179C#40C#188C#222C#193C#181C#195C#165C#195C#152C#203C#154C#203C#205!2C#210C#165C#141C#213C#141C#213C#141C#41C#181!2C#195C#203C#178C#156C#164C#156C#153C#163C#195C#178C#92C#60C#61C#138C#151C#60C#151!2C#61C#136C#138C#139C#65C#62C#65C#90C#164C#140C#157C#89C#136C#155C#47C#220C#28C#148C#93C#47C#71!2C#220C#25C#71C#28C#71C#47C#27C#183C$#6!2G#11G#8G#9G#109!2G#77G#5!2G#11G#77G#72G#74G#2!3G#3G#2!2G#3G#2!2G#3G#124G#3G#2!3G#72G#2G#124!6G#7G#1!2G#2G#234G#36G#119G#35G#101G#144G#36G#66G#58G#35G#61G#140G#135G#140G#151G#136G#90G#61G#99!2G#55G#172G#132G#103G#177G#172G#53G#231G#166!2G#230G#140G#229!3G#152G#136G#177G#58G#65G#140G#136G#92G#91G#153G#156G#179G#210G#195G#165G#178G#186G#179G#205!2G#40G#154G#179G#163G#195G#178G#179!2G#178G#164G#140!2G#92!2G#140G#138G#64!2G#136G#138G#151!2G#90G#152G#90G#186G#41G#179G#203!2G#179G#212G#156G#164G#91G#163G#174G#140G#164G#90G#163G#152G#151G#195G#208G#217G#186G#208G#41!2G#141G#208G#132G#64G#41G#202G#205G#41G#179G#153!2G#203G#91G#165G#222G#216G#155G#210G#141G#194G#141G#202G#141G#202G#41G#179G#181G#91G#186G#195G#140G#92G#154G#195G#203G#210G#179G#138G#60G#61G#90G#151G#121G#164G#174G#62!2G#136G#62!2G#65G#136G#91G#163G#60G#138G#140G#154G#69G#220G#28G#68G#92G#224G#48G#71!3G#28!3G#70G#47G#28G$#5!2O#11O#77O#109!4O#10O#5O#77O#6O#4O#7O#2!3O#3!3O#226O#1!2O#226O#1O#3O#124O#3O#124O#2O#7!3O#2O#124!2O#7O#124!2O#2!2O#1O#226O#87O#57O#36O#118O#56O#57O#35O#58O#136O#62O#131O#185O#90O#227O#140O#144O#119O#197O#100O#146O#198O#132!2O#49O#197O#231O#166!3O#230O#229!2O#90O#235O#163O#90O#136O#56O#58O#135O#62O#138O#208O#203O#164O#205O#180O#188O#205!4O#188O#208!3O#152O#90O#195O#208O#228O#140O#164O#199O#91O#90O#136O#152O#123O#62!2O#136O#62O#139O#138!2O#174O#203O#156O#153O#90O#164O#203O#153O#156O#174O#91O#163O#151O#90O#164!2O#90O#91O#151O#163O#179!2O#41O#165O#205O#165O#195O#233!4O#188O#222O#155O#208O#203O#153O#91O#195O#91O#205O#141O#155O#165O#210O#205O#141!2O#216O#107O#141O#181O#155O#141O#41O#210O#155O#203O#195O#179O#165O#195O#91O#178O#154O#62O#58O#138O#90O#62O#90O#164O#151O#64O#135O#136O#62O#65!2O#164O#195O#90O#139O#62O#156O#127O#70O#158O#47O#153O#108O#220O#28O#220O#71O#28O#71O#28O#71O#70!2O$#5!2_#6_#5_#77_#9_#109!2_#6_#77_#5_#6_#77_#72_#2_#124_#3_#124_#3!2_#1_#226_#33_#226_#162_#33!2_#124_#2_#124_#2_#124!3_#7_#124!2_#7_#124_#1_#44_#80_#88_#144_#35_#83!2_#50_#83_#104_#136_#62_#177_#151_#90_#140_#195_#59_#49_#119_#85!2_#146!2_#132_#103_#100_#53_#132_#166!2_#231_#166_#232_#229!2_#185_#152_#90!2_#185_#62_#59_#51_#61_#64_#154_#164_#138_#195_#217_#179_#188_#179!3_#188_#179!2_#153_#164_#90_#195!3_#174_#92_#136!2_#62_#136_#138_#140_#90_#151_#163_#203_#165_#178!2_#186_#210_#164_#195_#205_#186_#164!2_#163_#185_#138_#91!3_#163_#91_#138_#164_#179_#208_#179_#202_#204_#174_#190_#227_#163_#235_#227_#188_#179_#210_#165!2_#91_#152_#203_#152_#203_#205_#41_#188_#210_#165!2_#141_#194_#205_#181_#213_#202_#41_#165_#141_#202_#181_#210_#91_#186_#165_#195!2_#153_#178_#152_#63_#62_#90_#136_#138_#164_#185_#174_#63_#135_#62!2_#65_#190_#228_#164_#62_#65_#122_#210_#176_#95_#68_#95_#45_#71_#28_#71!5_#48_#71_#70_$-#5@#6@#5!3@#4@#109!3@#6@#10@#5!2@#109@#7@#3@#2@#3@#2@#124@#2@#3@#1@#234@#162@#33@#134@#33@#162!2@#33@#1@#2@#124@#2@#7!3@#124@#226@#3@#124@#101@#49@#83@#55@#120@#83@#85@#136@#131@#66@#136@#90@#139@#236@#92@#55@#119@#100@#35@#100@#146!2@#53@#132@#100@#132@#197@#237@#231@#166!2@#219@#229!3@#90@#98@#121@#164@#90@#136!2@#58@#103@#58@#184@#93@#178@#208!2@#203@#153@#203@#179@#208!2@#178@#153@#164@#92@#64@#90@#195@#152@#136@#62@#65@#62@#64@#90!3@#203@#186@#180@#154@#203!3@#152@#163@#208!2@#154@#195@#165@#208@#164@#195!2@#90@#163@#138@#90@#91@#179@#41@#179@#208@#203@#233!2@#229@#236@#188@#236@#235@#188@#153@#165@#208@#154@#164@#91@#164@#153@#179@#41!2@#179@#210@#179@#41@#141!3@#155@#217@#141@#205@#182@#41@#216@#107@#165@#203!2@#186@#195!2@#164@#153@#195@#140@#103@#90@#136@#131@#174@#164@#90@#174@#62@#136@#131@#65!2@#90@#228@#140@#65@#106@#108@#107@#155@#38@#108@#48@#220@#28@#71!3@#158@#48@#28@#48!2@$#10A#5A#10A#11A#77A#6A#9A#109!3A#5!3A#6A#72A#2A#124A#2!4A#124A#3A#1!2A#162A#1A#171!4A#162A#101A#1A#67A#124!2A#2A#7A#130A#31A#173A#83A#84A#35A#59A#184A#83A#55A#51A#63A#103A#105A#140!2A#178A#170A#118A#55A#119!2A#49A#119A#132A#197A#146A#119A#166A#55A#197A#166!3A#230A#140A#229A#211A#163A#140A#138A#151A#90A#164!2A#138A#136A#138A#90A#92A#209A#92A#154A#179A#164A#92A#123A#64A#123A#121A#62!2A#138A#91A#62A#123A#138A#90A#164A#185A#174A#140A#90A#153A#181A#41A#189A#210A#165A#205A#180A#181A#203A#195A#186A#153A#163A#178A#210A#90A#190A#136A#62A#131A#190A#164A#208A#188!2A#238A#195A#233A#230A#227A#236A#217A#188!2A#229A#236A#165A#208A#195A#152A#163A#203A#195A#164A#179A#205A#210A#188A#181A#203A#181A#41A#202A#141A#213A#202A#208A#216A#107A#41A#40A#41A#141A#41A#195A#203A#208A#165A#203A#163A#152A#164!2A#62!2A#90A#65A#138A#164A#229A#90A#140A#190A#62A#65A#60A#140A#195A#174A#131A#92A#28!5A#220A#71!4A#28A#71!3A#28!2A$#16C#5!4C#77C#4C#75C#109!2C#6C#5!3C#109C#7C#3C#2C#72C#2!3C#124C#7C#3!2C#2C#3C#2!3C#124C#171C#162C#57C#2C#88C#1C#50C#144C#99C#101C#84C#120C#61C#170C#99C#35!2C#53C#65C#58C#135C#211C#195C#152C#57C#119C#35C#119C#118C#119C#85C#132!2C#198C#119C#132!2C#53C#132C#166!2C#219C#227C#140C#229C#163C#190C#138C#140C#138!2C#151C#90C#152C#60C#138C#228C#164C#174C#64!2C#186C#208C#154C#91!2C#152C#164C#153C#195C#174!2C#138C#66C#93C#62C#140C#91C#195C#186C#205!2C#180C#41C#153C#180C#205C#107C#41C#203C#212C#153C#203C#91C#174C#140C#135C#140C#105C#140C#152C#165C#179!2C#208C#140C#223C#230C#229C#236C#217C#188C#217!2C#229C#236C#188C#152C#203C#91C#164C#165C#186C#203C#186C#141C#180C#203C#179C#165C#153C#181C#41C#204C#216C#202C#141C#154C#155C#141C#202C#165!2C#202C#141C#165C#154!2C#208C#165C#91C#154C#164C#152C#174C#58C#151C#62!2C#164C#174C#164C#185C#140C#136C#139C#65!2C#152C#195C#63C#64C#224C#70C#71C#70C#71C#28C#71C#48C#220C#28C#71C#28!2C#71C#25C#71C$#18G#112G#5!4G#4G#109!4G#5!3G#6G#7G#2!3G#7G#2!2G#7!2G#74G#2!7G#124G#2!2G#171G#32G#36G#99G#53G#162G#50G#55G#170G#192G#101G#36G#84G#55G#177G#66G#135G#136G#151G#152G#137G#83G#35G#119!2G#49G#146G#132G#198G#103G#198G#49G#132G#232G#172G#232G#231!2G#166G#177G#232G#229!3G#63G#164G#140G#62!2G#66G#62!2G#61G#63G#174G#91G#151G#138G#63G#92G#203G#179!2G#186G#188!2G#212G#180G#179G#152G#164G#90G#164!2G#203G#165G#178G#186G#208G#41G#153G#179G#205!2G#165G#163G#91G#153G#92G#152G#140G#151G#140!3G#164G#208G#186G#178G#163G#174G#219G#230G#163G#208G#188G#217G#236G#235G#229G#212G#235G#236G#238G#91G#195G#163G#208G#186G#210G#165G#205G#141G#155G#41G#181G#203G#179G#181G#41G#205G#107G#205G#141G#210G#41G#204G#205G#202G#165G#41G#141G#41G#195G#203G#186G#178G#164G#153G#152G#156G#163G#140G#65G#63!2G#140G#185G#164!2G#151G#62!2G#139G#60G#140G#91G#62G#140G#155G#27G#47G#48G#70G#71G#28G#71G#28G#71!3G#25G#71!2G#28G$#21!2O#6O#10O#6O#5O#6O#4O#109!3O#6O#5!2O#77O#109O#7O#2O#7O#3O#7O#2O#74!2O#2!6O#124!2O#1!2O#234O#36O#86O#101O#171O#162O#36O#86O#130O#62O#32O#102O#119!2O#51O#139O#103O#135O#140O#185O#228O#123O#49O#119O#83O#119O#55O#53O#132O#198O#132O#197O#146O#166O#135O#184O#53O#190O#157O#219!2O#157O#233O#229O#90O#140O#157O#152!2O#90O#138O#151O#90O#151O#64O#62O#51O#136O#164O#138O#58O#66O#138O#91O#164O#92O#151O#92O#90O#195O#179O#188O#186O#203O#180!3O#41O#179O#186O#176O#165O#205O#180O#165O#90O#164O#90O#136O#178!2O#195!2O#152O#91O#228O#178!2O#157O#190O#232!2O#229O#208O#217O#208O#188O#236O#229!2O#235O#229O#235O#188O#163!3O#179!2O#203O#195O#179!2O#155O#41O#141O#179O#203O#179O#181O#165O#205O#141O#181O#141O#165O#195O#41O#202O#141O#41O#165O#202O#107O#208O#203O#154O#208O#203O#152O#153O#163!2O#185O#64O#135O#61O#63O#123O#164O#90O#185O#190O#139O#93O#60!2O#185O#138!2O#155O#69O#71O#47O#71!3O#70O#48O#28O#71!4O#39O#71O$#21!2_#8_#10_#6_#10_#6_#8_#109!3_#9_#6_#5!2_#77_#7!2_#3_#7_#3_#7!2_#74_#2!5_#124_#226_#32_#36_#84_#85_#57_#130_#148_#101_#36_#53_#162_#170_#32_#98_#52_#93_#56_#65_#134_#136_#140!2_#90_#195_#62_#49_#35_#83_#119_#99_#132_#198!2_#146_#119_#231_#230_#233_#157_#197_#219_#230_#157!2_#233_#157_#233_#229_#90_#64!2_#91!3_#164_#90_#138_#90_#164_#151!2_#64_#151_#164_#65_#58!2_#61_#92_#90_#174_#123_#136_#92_#151!2_#92_#153_#154_#165_#205_#208_#174_#203_#188_#179_#153_#174_#90_#195!2_#90_#195_#203_#208_#165_#188_#178_#90_#157_#219!2_#190_#238_#212_#217_#235_#229!2_#235_#236_#229!2_#236!3_#195!2_#178_#41_#165!2_#210_#195_#165_#155_#179_#204_#141_#210_#203_#181_#202_#210_#155_#194_#202_#107_#217_#163_#186_#41_#205_#181_#182_#41_#141_#41_#165_#153_#210_#165_#164_#163_#63_#90_#164_#138_#64_#138_#58_#63_#140_#185_#90_#190_#65_#139_#60_#149_#64_#140_#139_#153_#71!5_#48_#37_#45_#71!2_#25_#71_#25_#71!2_$-#18!2@#8@#10@#6@#8@#10@#6@#4@#75@#109!2@#4@#5!2@#6@#109@#9@#72@#7@#3!2@#74@#2!5@#124@#1@#34@#118@#120@#59@#61@#148@#2@#101@#86@#56@#42@#88@#218@#62@#98@#59@#51@#99@#56@#105@#151@#65@#164@#152!2@#184@#118@#119!3@#146@#132!2@#198@#146@#197@#139@#233@#232@#233@#177@#237@#157@#233@#157@#232!2@#227@#229!2@#163@#140@#61!2@#130@#60@#138@#140!2@#174!2@#138@#131@#151@#91@#163@#138@#60@#136!2@#164@#195!2@#151@#190@#64@#90@#195@#165@#178@#195@#164@#92@#153@#195@#152@#174@#140@#90@#163@#41@#165@#41@#208@#179@#180@#188@#208@#121@#166@#232@#190@#208@#188@#204@#235!2@#229!3@#236@#238@#229@#235@#236@#229@#222@#217@#205@#141!2@#210@#208@#210@#179@#205@#141@#205!3@#178@#195@#205@#181@#195@#41@#222@#213@#202@#141@#195@#210@#41@#181!2@#165@#41@#204@#181@#165@#210@#195!2@#91@#185@#151@#164!3@#62@#136@#64@#61@#151@#163@#90@#140@#62@#60@#62@#60@#61@#140!2@#40@#71!4@#220@#47@#214@#68@#220@#71!2@#220@#71@#220@#25@$#18!2A#13A#10A#8A#10A#5A#10A#6A#9A#109A#9A#109A#6A#5!2A#6A#109A#9!2A#2A#1A#2!6A#1A#35A#99A#59A#121A#62A#67A#111A#225A#86A#130A#192A#106A#1!2A#61A#57A#51A#53A#135A#90A#105A#65A#139A#163A#153A#174A#35A#119A#83A#119A#55A#53A#132A#146A#35A#85A#132A#233!2A#227!2A#233A#98A#230A#131A#232!2A#233A#227A#90A#229!2A#163A#90A#140A#138A#93A#63A#138A#135A#65!2A#136A#140A#138A#140A#195!2A#153A#174A#64A#60A#63A#151A#152A#178A#165A#195A#152A#164A#136A#123A#92A#178A#91A#62A#138A#140!2A#90A#41!2A#205!2A#41A#205A#208A#123A#215A#230A#233A#236A#212A#208A#236A#217A#235!2A#229!3A#235!2A#229A#236A#235A#236A#179A#238A#165!4A#186A#203A#186A#210A#182A#165A#181A#208A#195A#153A#41A#205A#195A#188A#202A#213A#202A#141A#195!2A#205A#41!3A#208A#41A#202A#41A#208A#154A#208A#195A#164A#195A#164A#90A#164A#174A#63A#140A#61A#136A#90!2A#151A#121A#65A#62A#65A#58A#65A#123A#29A#71!2A#220A#47A#220A#71A#214A#19A#71A#39A#220A#25A#220!2A#39A$#18!2C#21C#5C#10C#5!2C#142C#5C#6C#9C#109!2C#73C#5!2C#6C#4C#72C#75C#124C#149C#124C#3C#2C#124C#3C#226C#84C#99C#66C#209C#111!2C#7C#124C#101C#56C#148C#106C#124C#218C#93C#120C#98C#120C#61C#105C#65C#58C#135C#174C#164C#163C#90C#36C#83C#119C#83C#172C#146C#100C#35C#197C#53C#232C#177C#231C#232C#227!2C#65C#197C#157C#233C#232!2C#190C#163C#229C#90C#229!2C#91C#228C#164C#61C#62C#60C#90!2C#140C#138C#64C#123C#174C#164C#91C#208C#178C#163C#52C#56C#62C#138C#92C#151C#138C#185C#121C#152C#178C#140C#121C#138!2C#174C#208C#186C#165C#217C#181C#164C#174C#165C#121C#219C#227C#229C#236C#217!2C#235C#229C#208C#235!3C#229!2C#235C#229!2C#236C#229C#222C#210C#203C#195C#210C#179C#155C#179C#195C#41C#179C#188C#205C#180C#154C#203C#178C#208C#165C#203C#205!2C#108C#41C#141C#195C#152C#205C#181C#41C#179C#181C#41C#205C#202C#41C#165C#152C#165C#91C#164!2C#90C#164C#90C#62C#65C#136C#58C#151C#90!2C#92C#65!2C#139C#58C#56C#187C#70C#220C#71C#220C#28C#71C#220C#176C#19C#71C#220!2C#71C#25C#220C#25C$#18!3G#10G#5G#10G#5G#10G#5G#6G#73G#9G#109G#9G#6G#5G#6G#77G#109G#75G#88G#124!2G#3G#2G#3!2G#99G#57G#136G#191G#128G#167G#72G#7G#162G#54G#149G#106G#128G#226G#170G#101!2G#57G#51G#105G#65G#131G#64G#140G#163G#164G#152G#92G#84G#119G#83G#119G#55G#119!2G#35G#53!2G#237G#166!3G#219G#177G#219G#237G#166G#233G#232G#233G#227G#163G#229!2G#90G#229G#163!3G#164G#121G#93G#64G#138G#164G#152G#91G#152!2G#92G#138G#164G#174G#90G#185G#90G#138G#64G#62!2G#138G#90G#61G#62G#136G#64G#90G#91G#165G#178G#179G#210G#174G#195G#203G#140G#136G#166G#230G#229G#235G#212G#208G#217G#235G#229G#235G#236G#235!2G#229!5G#236G#235G#236G#188G#152G#195G#203G#195G#165G#155G#195!2G#210G#188G#141G#165G#153!2G#179!2G#153G#203G#91G#205G#216G#205G#202G#205G#41G#164G#179G#202G#41!2G#179G#41!2G#205G#181G#208G#203G#91G#195G#163G#164G#90G#164G#151G#62G#64G#140G#61G#140G#90G#185G#151G#62G#65G#139G#60G#59G#156G#108G#71G#220!3G#47G#69G#176G#68G#220G#39G#25G#71!2G#25G#71G$#23O#18!2O#13O#10O#5!5O#73O#109!4O#5O#10O#6O#4O#75!2O#88O#124O#2!3O#120O#33O#138O#191O#111O#80O#124O#7O#124O#99O#132O#67O#22O#1O#50O#101O#85O#101O#54O#138O#65O#157O#138!2O#163O#153O#164O#90O#64O#119O#35O#83O#35O#83O#119O#83O#146!2O#197O#146O#166!2O#132O#166O#177O#232O#157O#132O#219O#157O#233O#157O#227O#90O#229O#163O#229O#90O#229O#195!2O#154O#123O#50O#62O#93!2O#64O#123O#156O#179O#208O#90!2O#140O#90O#185O#152O#91O#152O#199O#152O#62O#66O#90O#164O#91O#178!3O#195O#90!2O#163O#90O#66O#219O#231O#190O#163O#238O#188O#217O#238O#217O#236!2O#238O#236O#235!2O#229O#227O#229!2O#236O#235O#229O#204!2O#205!3O#41O#205O#165O#203O#210O#188O#165O#203!2O#195O#208O#41!2O#195!2O#186O#189O#216O#213O#181O#205O#208O#163O#208O#205O#41O#179O#41!3O#205O#181O#41O#186O#164!2O#152O#164O#174O#90O#140O#62O#136!2O#64O#63O#164O#90O#174O#139O#65O#62O#65O#66O#62O#107O#220!2O#28O#71O#158O#40O#176O#71O#28O#71!2O#28O#25O#71O#28O$#38_#18!2_#21_#5!2_#10_#5!3_#6_#9_#109_#9_#109_#6_#5!2_#77_#75!2_#109_#88_#124_#2_#1_#57_#93_#148_#88_#7!2_#124_#75_#97_#55_#54_#88_#1_#101_#57_#56_#149_#58_#62_#135_#58_#140!2_#152_#164_#151_#190_#151_#138_#83_#119!5_#83_#35_#53_#172_#132_#166!3_#230_#157_#232_#233_#219_#166_#230_#136_#233_#227_#229!3_#90_#163_#211_#164_#203_#195_#91_#190_#164_#205_#186_#208_#186_#179!3_#178_#203_#195_#164_#163!3_#152_#90_#62_#63_#64_#199_#165_#195_#185_#174_#90!2_#163_#178_#195_#232_#219_#157_#229!2_#208_#204_#217!2_#235!2_#229!3_#235!3_#229_#227_#229_#235!2_#227_#188_#222_#41_#179_#205_#181_#154_#153_#163_#203_#178_#210!2_#203_#165_#41_#186_#154_#91!2_#208_#141_#155_#216_#141_#179_#181_#41_#195!2_#179_#181_#41!2_#179_#41_#188_#205_#41!2_#195_#152_#90_#174_#90_#164_#140_#62!2_#140_#138_#62_#140!2_#185_#65_#60_#139_#65_#60_#65_#40_#220!2_#47_#28_#153_#214_#27_#28!2_#220_#28_#220_#28!2_#25_$-#20@#126@#18!2@#13@#5!6@#6@#9@#109!3@#5!2@#77@#109@#75!3@#3@#2@#33@#57@#148@#88@#124@#72!2@#7@#124@#31@#102@#98@#111@#34@#83@#58@#93@#53@#58@#131@#62@#136@#135@#164!2@#138@#190@#90@#91@#61@#49@#119!4@#83@#55@#146@#53@#132@#166@#197@#146@#197@#198@#219@#232@#230@#157@#232@#166@#219@#140@#229!2@#140@#229!2@#163!2@#229!2@#153!2@#140@#138@#153@#181@#154@#164@#91@#163@#154@#208@#165@#188@#195@#152@#91@#185@#151@#65@#174@#140@#62@#156@#90@#174@#90@#164@#195@#186!2@#138@#223@#230@#190@#229@#235@#188@#217@#235!3@#229@#236@#235@#229!2@#235!2@#229!2@#227@#235!2@#229@#235@#204@#188@#181@#205@#217@#203@#164@#163@#165@#179@#205@#179!2@#186@#154@#153!2@#195@#165@#208@#205@#41@#141@#96@#202@#41@#202@#188@#165@#164@#208@#41!3@#188@#186@#41@#181@#41@#155@#186@#164@#174@#140@#152@#91@#164@#140@#62@#140!2@#151@#90@#64!2@#60!2@#65!3@#135@#156@#70@#28@#68@#214@#122@#27@#71@#28@#71@#28!2@#71@#25@#71!2@$#10A#17A#23A#18A#16A#5!6A#6A#4A#109!2A#9A#6A#14A#5A#109!2A#9!2A#75A#171A#120A#61A#148A#72!3A#124A#72A#2A#35A#36A#2A#31A#118A#162A#149A#99A#58A#65A#139A#136A#138A#92A#164A#140!2A#164A#154A#208A#225A#83A#119!5A#146A#54A#132A#166A#132A#166A#66A#237A#219A#140A#90A#156A#174A#164A#157A#219A#166A#211A#90A#229!6A#90!2A#176A#163A#174A#64A#156A#208A#174A#140A#153A#91!2A#195A#90A#138A#135A#64A#138A#90!2A#91A#163A#62A#91A#195A#208A#186A#208A#205A#188A#93A#215A#233A#229A#163A#235A#188A#204A#235A#229!3A#227A#235!2A#229!2A#235!2A#229A#227A#229A#236A#229!2A#204A#179A#155A#41A#155A#203A#153A#195A#203A#186A#208A#203!2A#153!3A#195A#210A#41!3A#216A#141!2A#96A#202A#181A#202A#41A#179A#152A#186A#179A#41A#179A#41A#203A#195A#179A#41A#165A#208A#154A#151A#140A#152A#164A#195A#140A#62A#138A#174A#62A#185A#195A#140A#174A#138A#136A#131A#65!2A#62A#191A#106A#176A#40A#48A#220A#28A#71!3A#28A#71!2A#48A#28A$#14C#10C#18!2C#21C#10C#5C#10!2C#5!2C#10C#6C#75C#109!3C#5C#14C#6C#9C#109!2C#75C#225C#58C#148C#111C#7C#72C#124C#72C#80C#31C#50C#130C#1C#35C#53C#234C#120C#84C#62C#60C#62C#135C#140C#153C#140C#136C#164C#151C#138C#92C#53C#118C#119!2C#83C#119C#55C#198!2C#231C#166C#231C#140C#227C#163C#208C#187C#204C#193!2C#222C#41C#92C#215C#184C#233C#229C#140C#229C#211C#90C#229!3C#140C#154C#203C#90C#62C#64C#155C#212C#62C#61C#65C#64C#190C#140C#164C#163C#195C#208C#41C#165C#210C#92C#195C#180C#205C#188C#205C#186C#209C#219C#230C#229!2C#235C#204!3C#188C#235C#229C#227!2C#229!2C#235!2C#163C#229!3C#235C#229C#227C#217C#204C#188C#205C#217C#153!4C#195C#203C#165C#178C#165C#155!2C#208C#41C#181C#41C#181C#202C#141C#47C#108C#202C#189C#216C#181C#202C#179C#164C#163C#179C#181C#41C#208C#199C#186C#179C#41!2C#208C#178C#62C#151C#140C#164C#152C#164C#62C#64C#90C#65C#140C#153!2C#208C#156C#90C#151C#140C#138C#140C#151C#175C#108C#71!2C#28C#220C#71C#28C#71!2C#28!2C#25C#71C$#13G#5G#10G#18!2G#16G#5!3G#10G#5G#6G#11G#109!4G#5G#14G#77G#9G#109G#73G#74G#162G#136G#130G#80G#75G#124G#72G#124!2G#32G#149G#130G#55G#99G#120G#57G#99G#130!2G#150G#65G#64G#151G#140G#136G#174G#92G#123!2G#162G#119!3G#83G#119!2G#146G#103G#132G#231G#157G#163G#235G#208G#204G#193G#188G#203G#195G#163G#153G#208G#217G#236G#140G#223G#64G#140G#229!3G#174!2G#229G#90G#163G#152G#203G#174G#62G#60G#62G#61G#138G#165G#91G#195G#199G#164G#195G#178G#40G#210G#179G#180G#178G#123G#178G#154G#153G#179G#123G#231G#230G#227G#229G#235G#217G#194G#202G#238G#208!2G#235G#227!5G#236G#229!3G#235G#236G#229G#235G#204G#217G#179G#208G#165G#41G#179!2G#41G#179G#202G#141G#205G#154G#210G#194!3G#213G#141G#96G#194G#213G#141G#204G#213G#216G#141G#181G#41G#188G#154G#164G#41!2G#179G#155G#195G#203G#41G#203G#208G#155G#152G#63G#105G#92G#151G#152!2G#138G#131G#140G#62G#92G#163!2G#208G#203G#90G#163G#195G#151G#164G#90G#224G#71!2G#220!2G#28G#220G#71G#28!2G#25G#48G#71G#25G$#13O#14O#8O#112O#18O#21O#10!2O#5!5O#6O#109!3O#77!2O#5O#109!2O#4O#110O#162O#89O#130O#7O#80O#75O#72O#75O#226O#33O#1O#120O#55O#162O#36O#130O#52O#42O#192O#66O#133O#138O#140O#136O#138O#164O#123O#122O#224O#171O#118O#119O#83O#119O#83O#53O#198O#132O#227O#163O#188!2O#204O#200O#193O#179O#229O#157O#233O#190O#227!2O#233!2O#229O#163O#229!5O#90O#190O#157O#223O#157O#190O#140O#163O#164O#92O#138!2O#62O#178O#164O#136O#60O#138O#164O#90O#151O#90!2O#174O#164O#152O#195O#178O#188O#123O#197O#232!2O#235O#229O#217O#205O#194!2O#217O#235O#236!2O#235O#227!4O#229O#235O#229!2O#236O#229!2O#217O#208O#179O#188O#179O#204O#205O#204O#205O#141!3O#205O#165!2O#202O#194O#213O#194!2O#141!2O#213O#141O#213O#141!2O#202O#108O#141O#205O#41O#179O#163O#208O#181O#179O#165O#91!2O#178O#164O#165O#203O#195O#138O#140!2O#62O#163O#153O#151O#62O#90O#65O#92O#152O#91O#178O#165O#174O#90!2O#140O#90!3O#70O#220O#28O#71!7O#25O#71O#28O$#13!2_#14_#10_#112_#18_#13_#5_#10_#5!2_#6_#11_#6_#77_#109!2_#77_#5!2_#109!3_#110_#52_#89_#42_#44_#7_#72_#9_#72_#1_#59_#99_#36_#99_#32_#59_#67_#169_#88_#192_#58_#139_#62_#136_#105_#138_#92_#137_#147_#22_#53_#83_#84_#49_#119!2_#104_#132_#90_#179_#204!2_#141_#204_#217_#163_#229_#140_#190_#227_#229!2_#227_#229!5_#163_#229_#163_#229!2_#140_#121_#190_#229_#140_#121_#156_#138_#191_#106_#123_#162_#51_#192_#60_#123_#228_#199_#154_#208_#195!6_#165_#174_#237_#232!2_#229_#236_#235_#222_#153_#205_#194_#204_#188_#208_#236!2_#235_#227!2_#229!4_#235_#229_#227_#235_#204_#152_#163_#187_#203_#179_#205!4_#217_#179_#210_#155_#141_#194!3_#96_#194_#213!2_#194!3_#47_#205_#141_#216!2_#204_#205_#208_#152_#41!2_#179_#208_#163_#91_#178_#90_#154_#165_#91_#138_#140_#152_#64_#90_#163_#90_#64_#185_#190_#92_#152_#164_#165!2_#195_#138_#92_#138_#140_#151_#62_#239_#220_#71!3_#48_#28_#71_#25_#48_#220_#25_#71_$-#15@#13@#14@#79@#10@#16@#21@#10@#6@#5@#10@#6!2@#10@#11@#109!3@#5@#6@#109@#9@#109@#110@#170@#130@#148@#171@#72@#75@#9@#124@#31@#173@#32@#57@#101@#170@#2@#42@#169@#162@#192@#58@#136@#135@#65@#62!2@#138@#129@#22@#171@#83@#119!2@#118@#119@#99@#66@#233@#208@#141@#222@#216@#217!2@#163@#229!2@#235@#229!2@#227@#229@#235@#163@#235@#229@#163@#229@#163@#229!9@#195@#163@#140@#122@#192@#154@#178@#40@#181@#189@#181@#203!2@#195@#153@#164@#185@#90!2@#152!2@#174@#237@#157@#233@#229@#163@#229@#188@#193@#164@#179@#217!3@#204@#217@#235!3@#227!2@#229!2@#235@#236@#229@#235@#204@#202@#41@#210@#195@#165@#210!2@#186@#210@#165!2@#41@#107@#193@#194!5@#213@#141@#213@#141@#202@#213@#141@#205@#213@#141@#202@#41@#205@#41@#153@#186@#181@#179@#186@#91@#185@#195!2@#164@#178@#90@#136@#90@#164@#90@#138@#91@#90@#121@#151@#136@#92@#153@#92@#195!2@#165@#90@#136@#105@#151@#90@#65@#45@#71!2@#220@#71!5@#25@#71!2@#25@$#10A#13!2A#14A#112A#10A#21A#13A#5!2A#6A#10A#6A#77!2A#6A#4A#109A#5A#6A#109!3A#74A#170A#148A#9A#167A#7A#75A#72A#124A#144A#32A#85A#54A#130A#7A#67A#9A#124A#234A#62A#65A#136A#62A#65A#64A#156A#191A#88A#7A#218A#83A#49A#118A#36A#56A#227A#152A#41A#202A#194!2A#217A#208A#229A#235!2A#229A#235!5A#229A#235A#229A#163A#229!2A#227A#140A#229!2A#136A#227!3A#229A#163A#235A#163A#156A#217A#156A#178A#176A#205A#107A#194A#205A#155A#179A#165!2A#186A#156A#152A#203A#208A#195A#140A#166A#230A#229A#235A#229A#235A#205A#193A#229A#203A#238A#208!2A#217A#204A#217A#236A#235A#227!2A#229!2A#235A#229!2A#208A#193A#202A#217A#41!2A#203A#195A#203A#41A#205A#141!2A#194A#193A#194!2A#141A#213A#108A#141A#202A#141!2A#202A#205A#202A#141A#205A#141A#213A#141A#202A#41!2A#153A#41!2A#179A#165A#152!2A#91A#178A#156A#203A#92A#62A#164A#153A#163A#140A#90A#164A#138A#64A#140A#123A#92A#195A#164A#165A#195A#203A#138A#62A#136A#140A#60A#176A#158A#71!8A#28!3A$#11!2C#13C#11C#10!2C#112C#21C#5C#10C#6C#5C#6C#10C#6C#5C#77C#109C#77C#6C#109C#9C#109C#3C#2C#4C#167C#109C#75!2C#72C#1C#101C#50C#99C#101C#130C#7C#75C#9C#67C#62C#59C#133C#66C#58C#138C#164C#89C#148C#75C#167C#55C#35C#99C#172C#64C#229C#208C#141C#200!2C#204C#208C#217C#238!2C#236C#235C#236!2C#235!2C#163C#235C#229C#163C#229C#235C#229C#235C#227C#229!2C#140C#157C#140C#233C#227C#229!2C#174C#229C#153C#186C#90C#135C#92C#181C#179C#203C#165C#180C#41C#165C#174C#156C#195C#180C#212C#140C#174C#138C#98C#230C#229C#236!2C#189C#194!2C#229C#208C#189C#188C#217C#235C#236C#217C#208C#235C#227!3C#236C#229C#227C#235C#204C#200C#193C#213C#216C#217C#202C#41C#205C#155C#41C#155!2C#210C#182C#208C#155C#41C#213C#141C#213C#141!2C#216C#41!2C#107C#141C#181C#202C#107C#141C#204C#41C#188C#163C#186C#202C#41C#186C#91C#164C#152C#91C#164C#91C#140C#138C#208C#153C#164C#90C#92C#152C#64C#138C#174C#64C#90C#178C#153C#164C#208C#165C#90C#136!2C#139C#65C#89C#70C#71C#48C#71!5C#28C#71C#28C#71C$#11!2G#13!2G#14G#112G#5G#16G#13G#6G#5G#6G#10G#6G#5G#6G#5G#4G#6G#109!3G#73G#74G#2G#109!2G#9G#6G#2G#144G#87G#99G#84G#57G#130G#80G#7G#106G#67G#62G#151G#66G#59G#149G#58G#123G#137G#192G#111G#167G#43G#32G#36G#132G#164G#204G#194!2G#206G#193G#217G#238G#217G#204G#194G#200G#193G#200G#204G#193G#204G#188G#208G#235!3G#236!2G#235G#227G#229G#157!2G#232G#157G#227G#190G#140G#229G#227G#229G#174G#138G#190G#164G#140!2G#186G#41G#154G#90G#165G#208G#188!2G#208G#165G#140G#62G#64G#152G#230G#233G#229!2G#236G#238G#193G#194!2G#90G#208G#193G#194G#204G#235G#238G#208G#217G#227!3G#229G#235G#227G#229G#217G#193G#141G#194!2G#141G#213G#205G#202G#181G#216!2G#41!2G#181G#41G#205G#202G#141G#194!2G#213G#202G#141!2G#41G#155G#141!2G#41G#202G#213G#202G#205G#202G#175G#203G#179G#41G#179G#41G#91G#185G#164G#203G#164!2G#63G#92G#208G#91G#185G#164G#174G#185G#174G#65G#140G#138G#92G#195G#165G#90G#164G#178G#203G#64G#131G#139!2G#123G#221G#158G#71G#220G#71!4G#28G#25G#71G#28G$#14!3O#160O#13O#14O#10!2O#16O#10O#6O#5O#6O#5!2O#6O#5O#6O#77O#109!3O#4O#2O#72O#4O#9O#109O#124O#226O#2O#9O#101O#85O#192O#67O#7O#148O#89O#60O#138O#140O#66O#123O#191O#61O#58O#139O#136O#167O#75O#2O#101O#184O#121O#203O#141O#206O#200O#204O#238O#236O#204O#200O#194!7O#217O#204!4O#222O#238O#229!2O#227O#233O#223O#232O#65O#227O#135O#233O#229!2O#90O#190O#223O#140O#229O#210O#90O#139O#164O#205O#210O#174O#229O#90O#195O#165O#186O#174O#157O#140O#208O#229!2O#163O#236!3O#208O#194!3O#229O#208O#217O#194O#204O#235O#229O#163O#229O#227O#229O#227O#229O#235O#229O#208O#194O#217!2O#194O#216O#202O#181O#108O#141!2O#213O#194O#47O#194O#205O#156O#209O#216O#141O#213O#194!2O#216O#202O#141O#217O#182O#141!2O#181!2O#202O#141O#202O#141O#205O#153O#163O#41O#216O#41O#153O#152!2O#164O#91O#138O#63O#164O#179O#203O#164!2O#174O#140O#185O#62O#64!2O#136O#165O#195O#90O#64O#91O#165O#164O#64O#136!2O#60O#52O#38O#70O#220O#71!2O#220O#25O#71!2O#28O#25O$#14!2_#79_#13!2_#15_#10_#5_#112_#16_#5!2_#6_#5!3_#6!3_#109_#4_#109_#6_#109_#9_#3_#67_#1_#2_#167_#4_#3_#86_#53_#67_#80_#128_#123_#60_#138_#90_#138_#58_#192_#93_#138_#102_#139_#89_#109_#4_#9_#171_#53_#63_#208_#155_#193_#217_#238_#208_#217_#194_#206_#200_#206!4_#47_#200_#206_#193_#194_#200_#204_#208_#235_#227!2_#230_#219_#177_#232!2_#139_#227_#233_#223_#190_#157_#121_#229_#163!2_#203_#190_#135_#90_#203_#208_#164_#90_#174_#140!3_#64_#174_#179!2_#229!2_#163_#235!3_#208_#193_#141_#193_#90_#202_#194_#204_#194_#238_#229!4_#235_#227_#229_#227_#235_#204_#194_#141_#217_#216_#194_#202_#181_#41!2_#181_#202_#141_#204_#205!2_#41_#181_#141!2_#194_#141!2_#213_#202!2_#141_#165_#217_#213_#181_#202!2_#141_#205_#107_#205_#203_#153_#179!2_#41_#153_#152_#164!2_#210_#63_#92_#163_#208_#154_#185_#163_#90_#140_#90_#60_#61_#63_#140_#203_#195_#91_#138_#136_#195!2_#164_#64_#136!2_#65_#93_#108_#158_#71!7_#28_$-#112@#14!2@#13!3@#79@#10@#5@#13@#5!2@#10@#5!3@#10@#6@#77@#4!2@#109@#4@#72@#167@#80@#148@#167@#109@#73@#9@#226@#36@#162@#42@#130@#62@#60@#136@#151@#138@#131@#149@#192@#130@#105@#104@#135@#12@#4!2@#167@#106@#227@#132@#237@#229@#238!2@#208@#236@#193!3@#200@#206@#47@#117@#42@#169@#41@#187@#41@#193!2@#204@#238@#140@#227@#232@#219@#166@#219@#232@#157@#190@#177@#121@#190@#140!2@#229@#163@#229!2@#203@#163@#135@#138@#140@#195@#152@#174@#140!4@#163@#205@#41!2@#163@#229@#235@#163@#235@#236@#228@#163@#229@#203@#163@#194!4@#204@#229!5@#233!2@#229@#217@#204@#217@#194@#202@#210@#202@#96@#202@#213@#202!4@#181@#216@#202@#213@#141!2@#213@#194@#216@#141!2@#204@#202@#205@#165@#217@#213@#41@#181@#141@#202@#213@#141@#107@#186@#164@#179@#155@#179@#154@#152!3@#164@#61@#90@#163@#41@#208@#164!2@#185@#174!2@#64@#123@#151@#136@#91@#203@#195@#140!2@#90@#153@#163@#174@#64!2@#136@#150@#209@#108@#70@#71!4@#25@#71@#28@$#10A#112A#14A#13A#160A#13A#14!2A#10!2A#112A#6!2A#5!3A#77A#5A#6A#77A#74A#75A#6A#7A#109A#4A#6A#73!3A#72A#226A#55A#1A#170A#62A#138A#137A#138A#62A#192A#89A#130A#192A#52A#136A#139A#138A#22A#4A#109!2A#167A#174A#211A#132A#65A#236A#238A#236A#208A#204!2A#194!2A#206!2A#194A#89A#148A#101A#98A#238A#217A#235A#227A#233A#230A#231!3A#177A#232!3A#227A#223A#233A#229!3A#233A#229A#163!3A#195A#66A#190A#195A#92A#178A#208A#152A#90A#174A#153A#181A#41!2A#188A#208A#163A#229!2A#235A#228A#217A#163A#229A#153A#163A#204!4A#235A#229!3A#236A#229A#230A#235A#236A#204A#208!2A#141A#202A#141A#155A#205A#141A#213A#141!2A#205A#141A#213A#141!3A#213A#222A#202A#194A#189A#216A#202A#141A#41A#188A#155A#210A#205A#202A#41A#202A#107A#141A#205A#141A#41A#163A#186A#156A#179A#203A#152A#91A#164A#184A#209A#152A#163A#195A#41A#163A#164!2A#90A#140!2A#121A#90A#138A#164A#203!2A#174A#138A#92A#91A#164!2A#138A#65A#123A#136A#103A#191A#68A#158A#71!2A#158A#28A#25A#220A$#112!2C#14!2C#160!2C#14!2C#10C#6C#5!2C#6C#5!4C#6!2C#77C#44C#88C#4C#72C#73!2C#109!4C#3C#1C#55C#51C#101C#136C#138C#136C#62C#137C#22C#167C#130C#67C#52C#62C#123C#148C#12C#4!3C#109C#111C#174C#211C#177C#229C#236C#235C#217C#188C#204!3C#182C#95C#193C#89C#234C#209C#152C#238C#235C#229C#233C#219C#230C#177!2C#231C#132C#177C#232C#233C#190C#229C#227!2C#233!2C#190C#229!2C#163C#229C#163C#62C#66C#195C#64C#123C#163C#203C#41C#179C#208C#155C#186C#153C#188C#208C#235C#229C#233C#229C#217C#193!2C#153C#238C#163C#194!2C#204C#208C#229C#190C#229C#235!2C#227C#229C#236C#194C#204C#203C#238C#141!2C#202C#41C#182C#205C#141C#204C#202C#141C#205C#202C#205!2C#141C#204C#202C#181C#141C#213C#41C#202C#141C#41C#205C#208C#195C#165C#141C#181C#41C#141C#205!3C#181C#153C#178C#203C#179C#165C#164C#152C#138C#121C#90C#185C#152C#178C#155C#203C#90!2C#164C#140C#90C#62C#90C#140C#90C#178C#91C#174!2C#64C#140C#154C#203C#90C#64!2C#136C#135C#132C#92C#28C#71!2C#28C#71!2C#220C$#112G#10G#14!2G#13G#16G#13G#14!2G#10G#142G#5!5G#6G#5G#6G#77G#9G#4G#73G#4G#73!2G#4!2G#73G#109G#44G#31G#101G#105!2G#136G#62G#138G#214G#22G#42G#44G#1G#67G#130G#135G#137G#159G#6G#4!5G#167G#191G#53G#219G#229G#236G#235!2G#208G#204!2G#202G#107G#122!2G#154G#208G#235!2G#229G#121G#219G#166!2G#132!2G#231G#166G#231G#233G#190G#219G#140!2G#227G#229!2G#163!2G#229G#163G#229G#163G#153G#166G#138G#179G#92G#138G#41G#179G#195!2G#208G#165G#203G#181G#208G#236G#229G#227G#229G#235G#141G#194G#163G#165G#238G#194!2G#204G#229!2G#236G#208G#235G#230G#229G#235G#204G#193G#141G#203G#152G#141G#213G#202!2G#208G#210G#41G#181G#202G#41G#217G#41G#181G#155G#41G#181G#41G#216G#194G#202G#208G#205G#213G#41!2G#195G#153G#203G#40G#205G#68G#205!2G#213G#205G#41G#153G#41G#154G#208G#165G#164!2G#138G#152G#164G#90G#199G#165G#186G#165G#185G#163G#152G#153G#174G#136G#151G#138G#136G#137G#92G#90!2G#140G#138G#140G#154G#165G#164G#64G#190G#136G#150G#166G#92G#39G#71!2G#220!2G#71G$#112!2O#14!2O#13!4O#240O#5O#6!2O#5!4O#6O#5O#6O#9O#77O#6O#73O#6O#73O#4O#73O#109O#73O#109O#44O#101O#51O#140!2O#211O#156!2O#43O#169O#167O#171O#80O#130O#60O#136O#89O#12O#73O#4O#109!2O#4O#109O#4O#43O#101O#65O#229O#235O#236O#235O#236O#217O#188O#190O#210O#208!2O#238O#235!2O#190O#232O#157O#230O#232O#58O#132O#166!2O#231O#232O#227O#140O#190O#227O#190O#229!2O#163!4O#229!2O#140O#203O#60O#90O#179O#164O#65O#153O#179O#90O#195O#210O#208O#195O#41O#208O#163O#235O#229!2O#236O#193O#141O#217O#202O#194O#141O#204O#235O#229O#208O#217O#163O#227O#229O#235O#217O#193O#204O#202O#203O#163O#41O#141O#202!2O#141O#165O#187O#186O#41O#205!2O#141!3O#41O#165O#141!2O#213O#202O#203O#41O#213O#205O#165O#210O#195!3O#165O#202O#165O#205!2O#107O#204O#153O#210O#41O#165O#41O#163O#138O#151O#91O#164O#91O#186O#165!2O#208O#203O#174O#91O#164!2O#92O#62O#90O#185O#62O#164O#163O#90!2O#179O#92O#63O#164O#195O#174O#135O#136!2O#241O#150O#95O#71O#48O#71O#39O#220O$#10_#14!2_#13_#14_#13_#46_#14!3_#5_#6!4_#5!3_#77_#116_#77_#4_#6_#73_#6!2_#109_#73!2_#109_#31_#34_#59_#140!2_#164_#156_#9_#2_#9_#2_#1_#12_#31_#60_#157_#92_#4!2_#109_#4!2_#109_#4_#8_#111_#219!2_#229!3_#236_#235_#229!2_#238_#208!2_#236_#235_#229_#232_#157!3_#232!2_#132_#198_#219_#231_#232_#227_#229!2_#227_#229!3_#163!5_#235_#163_#140_#64_#54_#135_#174_#210_#65_#140_#208_#203!3_#165_#208_#164_#235_#163_#236_#229_#190_#188_#193_#206_#194_#193_#141_#208_#163!2_#208_#217_#227_#230_#233_#236_#217_#193_#217_#216_#217_#163_#152_#165_#141_#202!3_#141_#41_#153_#122_#210_#40_#165!2_#208_#155_#141!2_#213!2_#205_#203_#41_#141_#180_#154_#208_#163_#164_#195_#153_#41!2_#155_#141_#205!2_#41_#153_#179_#154_#179_#151_#164_#91_#163_#91_#154_#195_#165_#41_#165_#203_#140_#92_#123_#164_#90_#131_#152_#138_#62_#153_#164_#90_#140_#210_#205_#174_#131_#163_#153_#92_#64_#135_#242_#150_#107_#71!3_#220!2_$-#112@#14@#13@#14@#13!2@#16@#13!2@#10!2@#6@#5!6@#77@#110@#6!2@#109@#114@#75@#73!3@#109!2@#87@#99@#58@#90@#140@#138@#7@#2@#7@#124@#171@#7@#167@#226@#149@#135@#174@#12@#4!2@#109@#4!2@#109@#4@#130@#98@#132@#230@#227@#229!2@#235@#229@#231@#227@#208@#235@#229@#227@#233@#232@#157!2@#177@#56@#132@#232@#132@#166@#177@#157@#227@#229@#174@#229!3@#163!3@#229@#235@#229@#163@#229@#235@#185@#136@#230@#91@#212@#92@#64@#210@#203@#153@#178@#153@#208@#163@#235@#229@#235@#163@#204@#193@#216@#193@#204@#195@#229!2@#235@#238@#235@#229@#233@#227@#235@#217@#204@#217@#155@#141@#217@#203@#91@#195@#141!2@#202@#141@#202@#141@#205!2@#188@#165@#41@#165@#41@#217@#213@#202@#41@#213@#141@#203@#180@#155@#122@#165@#208@#91@#164!2@#91@#163@#205@#41@#165@#204@#107@#208@#91@#41@#203@#90@#156@#195@#91@#152!2@#154@#165@#210@#208!2@#178@#174@#92@#174@#163!2@#65@#151@#123@#136@#92@#195@#164@#90@#91@#205@#41@#174@#64@#164@#90@#190@#135@#241@#243@#192@#28@#71@#28@#220@#39@$#14A#13!3A#14!2A#13A#21A#14!2A#10A#5!2A#6A#5A#6!2A#5!2A#109A#6!2A#4A#7A#44A#6!2A#109A#6A#2A#35A#86A#66A#140A#136A#94A#3A#7A#74A#88A#9!2A#75A#88A#52A#151A#156A#4A#109A#73!3A#109A#6A#4A#51A#166!2A#233!3A#227A#229!2A#227A#166A#219A#227!2A#157A#139A#232A#103A#85A#55A#85!2A#166!2A#232A#227A#157A#139A#229!3A#140A#163!2A#235A#229A#235A#163A#235A#229A#163A#235A#163A#190A#62A#164A#165A#203A#135A#165!3A#178A#164A#195A#152A#163A#229!2A#217A#206A#194A#193A#208A#229A#174A#229A#235!2A#90A#229A#227A#229A#235A#217A#194A#193A#141!2A#193A#200A#193A#179A#203A#205!2A#202A#141A#205A#213!2A#202A#141A#204A#141A#202A#141!2A#41A#210A#179A#205A#141A#203A#179A#41A#210A#179A#154A#163!2A#90A#163!2A#91A#41A#208A#155A#141A#41A#195A#208A#40A#164A#178A#154A#153A#91A#152A#163A#208A#195A#154A#41A#208A#174!2A#152A#154A#163A#151A#138A#61A#151A#62A#163A#164A#90!2A#140A#155A#176A#156A#164A#92A#138!2A#227A#139A#131A#48A#71A#220!2A#39A$#14C#240C#14C#13!6C#10C#14C#5!4C#6!3C#124C#4C#6C#73C#6C#8C#3C#226C#124C#7C#2C#99C#86C#66C#65C#133C#65C#88C#74C#124C#7!2C#67C#80C#75C#111C#215C#138C#123C#167C#124C#88C#42C#111C#167!2C#130C#54C#232C#166C#233C#227C#229!5C#166C#119C#57C#166C#150C#132C#85C#119C#83C#119C#55C#146C#58C#232C#157C#227C#140C#229!5C#163C#229C#163!3C#229C#235C#163C#229C#163C#229C#215C#136C#152C#195C#174C#90C#164C#174C#208C#156C#91!2C#229C#235C#229C#238C#194!2C#188C#235!2C#236C#238C#236C#163C#227C#229C#163C#235C#238C#217C#193C#194C#216C#202C#141C#202C#153C#205!2C#203C#179C#141C#202C#141C#107C#141C#205C#141C#202C#141!3C#188C#208!2C#181C#141!2C#205C#210C#181C#205C#41C#208C#203C#152!2C#164C#185C#164C#90C#203C#179C#41C#165C#205C#163C#179C#210C#164C#41C#195C#91C#152C#91!2C#195C#186C#203C#165C#41C#91C#140C#164C#153C#163C#164C#65C#66C#90C#60C#163!2C#90C#185C#174C#154C#147C#106C#164C#151C#227C#105C#140C#139C#151C#39!2C#71C#220C#244C$#14G#117G#79G#14G#13!4G#16G#13G#11G#14G#5!3G#6G#5G#4G#87G#80G#6!3G#73G#109G#171G#120G#101G#35G#120G#60G#105G#92G#60G#150G#148G#43G#124G#2G#7!2G#111G#75G#88G#151G#135G#93G#106G#130G#191G#138G#191!2G#89G#184G#166!2G#177G#232G#233G#230G#231G#245G#232G#227!2G#237G#83G#119G#35G#84G#119!4G#132G#219!2G#157G#233!2G#229!6G#163!2G#229G#235G#229G#235G#163G#229G#163G#229G#140G#58G#138G#195G#140G#136G#178G#203G#163G#186G#163G#195G#163!2G#236G#163G#229G#217G#208G#235G#163G#236G#163G#229!5G#235G#236G#217G#194!2G#204G#217G#204G#194G#189G#156G#175G#180G#203G#205G#216G#205G#202G#141G#205G#141G#213G#141G#205G#165!3G#155G#205!2G#213G#216!2G#195G#155G#41G#179G#41G#186G#153G#164G#91G#195G#164!3G#203G#179G#41!2G#164G#179G#210G#153G#208G#165G#91!2G#152G#91G#153G#41G#165G#153G#178G#186G#174!2G#163G#154G#164G#62G#66G#90G#63G#163G#152G#140G#151!2G#138G#141G#95G#92G#164G#174G#227G#140G#227G#135G#3G#28G#71G#48G#39G$#14O#79O#13O#14O#13O#11O#14O#13!2O#79O#11O#14O#10O#6O#5O#10O#6O#12O#93O#12O#6!6O#130O#171O#101O#57O#64O#106O#128O#123O#241O#93O#75O#7!3O#2O#7O#111O#89O#164O#174O#93O#127O#12!2O#128O#4O#167O#130O#132O#231O#230O#233!3O#245O#231!2O#166O#233O#227O#232O#85O#84O#119!5O#35O#166!2O#177O#140O#229!2O#140O#229!5O#163O#229O#163!2O#235O#163!2O#235O#229O#236O#190O#184O#190O#203O#151O#190O#90O#165O#203O#154O#195O#90O#174O#163O#235O#203O#235O#229O#235!2O#174O#230O#166!2O#230O#229O#235O#163O#238O#217O#206O#194O#208O#202O#41O#217O#140O#181O#193O#194O#217O#154O#41O#141O#41O#155O#41O#202!2O#205O#141!2O#155O#217O#205O#141!3O#202O#216O#141O#203O#210O#179O#155O#165O#208O#153O#164O#163O#165O#186O#203O#164!2O#203O#179O#41O#195O#208O#203O#195O#153O#91O#163O#91O#152O#91O#164O#208O#186O#195!2O#208O#164O#92O#90O#195O#152O#62O#63O#151O#58O#91O#164O#136O#123O#90O#65O#224O#69O#182O#92O#164O#138O#140O#135!2O#192O#45O#71O#28!2O$#10!2_#14_#13!6_#11_#76_#11_#14_#10_#6_#5!2_#8_#1_#12_#6!3_#73_#4_#73_#109_#42_#171_#57_#136_#128_#109_#128_#133_#139_#167_#4_#80_#2_#124_#75_#123_#164_#156_#92_#63_#89_#4_#109_#9_#4_#3_#197_#166_#231_#227!2_#232!2_#230_#231_#230_#231_#166_#230_#233_#230_#197_#35_#119!4_#146_#58_#166_#157_#229!9_#163_#235_#229!3_#235_#229_#236_#163_#229!2_#184_#105_#195_#164_#91_#236_#154_#164_#208_#90_#174_#229_#236!2_#235!3_#236_#229_#233_#166!2_#237_#227_#235_#229_#235_#204!2_#141_#204_#217_#208_#41_#205_#208_#210_#165_#189_#141_#203_#210_#107_#205_#188_#41_#155_#210_#165!3_#181_#141_#205_#141_#205_#165_#41_#202_#141_#210_#203_#205_#155_#165_#210_#203_#164_#153!2_#208!2_#203_#164!2_#195_#188_#154_#165_#153_#195_#164_#195_#153_#164_#91_#153_#164_#165_#41_#208_#163_#165_#163_#164_#140_#152_#203_#105_#61_#138_#61_#90_#185_#92_#140_#152_#136_#92_#70_#71_#68_#138!2_#140!2_#211_#150_#143_#28_#220_#183_$-#79@#14!3@#13!2@#14@#13@#15@#79@#14@#10@#11@#13@#10@#6@#5@#6@#42@#167@#6!3@#73@#6@#109@#73@#4@#173@#61@#123@#12@#6@#12@#136@#66@#64@#4@#9@#7@#124@#192@#151@#156!2@#140@#63@#191@#12@#9@#4@#9@#100@#132@#231@#232@#227@#233!2@#230@#231!4@#166@#146@#197@#132@#166@#173@#119@#35@#119!2@#132@#232@#231@#227@#229@#227@#229!3@#227@#157@#164@#163@#229@#163@#235@#163@#229@#163@#235@#229@#236@#163@#229@#63@#229@#152@#215@#195!2@#203@#92@#151@#140@#164@#163@#195!2@#152@#235@#163@#229!2@#227!2@#233@#227@#229@#235@#236@#204@#194@#204@#141@#204@#202@#208@#164@#141@#205@#180@#193@#216@#189@#202@#203@#205@#155@#210@#204@#205@#141!2@#202@#205!2@#202!3@#155@#41@#141@#202@#141@#186@#153@#41@#205@#186@#154@#208@#153@#164!2@#203@#41@#178@#210@#164!2@#165@#203@#165@#90@#154@#152@#154@#153!2@#164@#91@#163@#203@#155@#41@#203@#91@#203@#91@#92@#90!3@#136@#63@#62@#152!2@#92@#138@#195@#138@#92@#28@#220@#71@#246@#89@#140!2@#135@#139@#122@#70@#47@#220@$#14A#13!2A#14A#13!4A#14A#13A#14!4A#13A#11A#6!2A#12A#169A#77A#73A#5A#6!2A#73A#6A#72A#172A#136A#89A#6!2A#109A#167A#133!2A#9!2A#7A#2A#51A#174A#164A#174A#128A#191A#170A#127A#73A#109A#74A#172A#230A#219A#233!4A#232A#177A#231!5A#35A#119A#55A#119!2A#35A#119A#146A#177A#231A#232A#233A#227A#229!2A#227A#229A#90A#227A#163A#235A#229A#235A#229A#235A#163A#235A#163!2A#229A#163A#230A#138A#174A#152A#140A#208A#163!2A#92A#140A#164A#163!2A#238A#229!2A#174A#229!3A#227A#190A#227A#229A#235A#229A#217A#193A#141A#204A#141A#217A#141A#205A#222A#193A#153A#123A#189A#194A#96A#141A#203A#154A#204A#205A#203A#165A#41!4A#202!2A#165!2A#202A#141A#217A#108A#141A#165A#203A#202A#181A#41A#165A#208A#154A#164A#163A#153!2A#179A#188A#195A#164A#152A#163A#208A#154A#165A#163A#210A#208A#153A#91A#153A#91!2A#178A#41A#186A#163A#91A#152A#151A#140!2A#105A#138A#58A#62A#195A#174A#92A#136A#90A#195A#90A#28A#183A#220A#47A#68A#140A#151!2A#135A#52A#71A#158A#28A$#13!2C#14C#13!4C#14C#13!5C#79C#13!2C#15C#8C#4C#124C#12C#5C#6C#5C#6!3C#226C#53C#130C#77C#4C#109C#9C#75C#123C#133C#192C#72!2C#1C#132C#151C#174C#106C#167C#12C#111C#77C#6C#167C#1C#197C#232C#233!3C#227!2C#230C#231!6C#166C#35C#119!2C#100C#119C#35C#166C#232!2C#233C#140C#227C#229!3C#227C#140!2C#235C#229C#163!2C#229C#235C#229C#163C#235C#229C#236C#90C#132C#90C#229C#152C#163C#195!2C#151C#140C#163!3C#91C#238C#163C#229!2C#174C#229C#140C#229!2C#227C#229C#163C#235C#194C#141C#217C#204C#217C#216C#205C#210C#203C#216C#194C#180C#96C#141C#217C#194C#205C#210!2C#107C#202C#210C#195C#165!3C#203C#208C#41C#202C#217C#216!2C#141C#213C#208C#154C#41C#213C#205C#179C#210C#153C#164!2C#152C#164C#195C#41!2C#210C#163C#164C#208C#154C#210C#195C#210C#153C#164C#91!2C#153C#163C#186!2C#165C#208C#91C#195C#163C#151C#140C#138C#63C#51C#190C#91C#164C#174C#136C#92C#179C#90C#28C#220!2C#47C#108C#105C#164C#90C#135C#230C#113C#158C#27C$#14G#112G#13!7G#14G#13!3G#14!2G#13G#14!2G#22G#167G#43G#11G#5G#6!3G#109G#97G#62G#106G#4G#6G#73G#72!2G#9G#192G#62G#2G#80G#59G#60G#90G#123G#191G#167G#4G#77G#167G#76G#167G#55G#53G#233!2G#227G#190G#233!3G#245G#231!6G#166G#85G#35!3G#85G#231!2G#232G#227G#233G#227G#140G#229!4G#190G#229!2G#163G#229G#235G#229G#163G#235G#229G#236G#211G#215!2G#152G#163!2G#140G#195G#174G#223G#185G#163G#152G#163!2G#236G#238G#163G#235G#163G#229G#163G#229G#227!2G#235!2G#188G#193G#204G#202G#217G#182G#208G#188G#222G#194G#193G#206G#193G#194G#210G#41G#189G#194G#205G#208G#203G#205G#141G#202G#210G#165G#188G#205G#202G#181G#205G#41G#216G#141G#202G#194G#208G#210G#181G#41G#141G#205G#195!2G#186G#164!4G#153G#179G#188G#186G#153G#203G#164G#195G#91G#195G#91G#164G#153!2G#91G#153G#203G#208G#41G#155G#195!2G#90!2G#105G#138G#60G#56G#140G#152G#151G#140G#64G#140G#164!2G#71!3G#220G#28G#153G#193G#122G#140G#58G#111G#48G#27G$#14O#13!2O#14O#13!3O#14O#13!2O#14O#13!3O#14!2O#13!3O#22O#4O#7O#75O#5O#6!2O#9O#53O#62O#12O#6O#4O#6O#72O#7O#72O#7O#148O#123O#93O#59O#61O#138O#92O#167O#4O#77O#4O#72O#15O#88O#53O#166O#233O#227O#140O#236O#229O#227!3O#232O#231!5O#166O#132O#146O#198O#53O#132O#231O#232O#227!3O#229!3O#190O#229O#163!2O#140O#190O#235O#163O#229O#163O#229O#235!2O#163O#64O#93O#140O#163!2O#138O#215O#91O#163O#64O#136O#163!3O#203O#236O#238!2O#235O#236!2O#238O#229!3O#163O#208O#193O#217!2O#202O#188O#203O#208O#41!2O#27O#206O#193O#96O#181O#210O#208O#194O#141O#216O#205O#179O#154O#182O#204O#205O#41O#165O#155!3O#41O#202O#213!2O#141O#205O#153O#165O#181O#41O#141!2O#186O#154O#41O#203O#195O#164O#163O#152O#91O#41!2O#203O#164O#185O#203O#164O#153O#195O#164O#163O#91O#163O#91O#154O#208O#155O#178O#186O#208O#90O#185O#140O#163O#131O#58O#164O#153O#151O#174O#140O#93O#62O#106O#183O#71O#220!2O#71O#164O#27O#45O#140O#64O#52O#108O#27O$#14_#13_#240_#13!5_#14_#13!2_#14_#13!3_#14_#13_#14_#13_#11!2_#128!2_#72!2_#9_#226_#103_#88_#6!2_#73_#6_#109_#72!2_#7_#80_#88_#62_#66_#89!2_#138_#167_#109_#9_#167_#75_#128_#225_#146_#166_#232_#229_#236_#229_#157_#233!2_#227!2_#232_#231!3_#166_#132_#166_#146!2_#132_#166!2_#227_#140_#229!3_#227_#229!2_#235_#229_#163_#235_#229!2_#163_#235_#229_#235_#163_#235_#140_#237_#190_#164_#163!2_#90_#223_#152_#163!2_#135_#229_#203_#164_#163_#235_#208_#205_#141_#202_#217!2_#165_#238_#217_#204!2_#193_#208_#165_#141_#205_#208_#154_#165_#210_#222_#200_#202!2_#155_#212_#203_#205_#213_#107_#68_#217_#205_#165_#153_#181_#194_#213_#202_#204_#213_#141_#27_#213_#141_#188_#203_#164_#208_#68_#202_#181_#107_#188_#203_#188_#122_#163_#203_#164_#152_#164_#153_#165_#179_#208_#164!2_#163_#208_#163_#164_#91_#153_#91!3_#165_#178_#41_#208!2_#91_#164_#92_#151_#60_#61_#154_#163_#164_#140_#92_#62_#65_#210_#70_#71_#28!3_#176_#108_#96_#187_#151_#103_#95_#70_$-#14@#13!2@#117@#14@#13@#14@#13!2@#14@#13!6@#14!4@#8@#14@#76@#4@#7@#226@#120@#148@#77@#73@#6@#73@#6!2@#73@#72@#7@#80@#7@#130@#66@#89@#191@#93@#22@#142@#167@#109@#128@#99@#146@#132@#245@#233@#190@#232@#166@#230@#231@#233@#227@#229@#232@#231!6@#166!3@#242@#219@#229@#227@#229!7@#163@#229!2@#163@#121@#190!2@#229@#174@#229@#63@#223@#140@#64@#235@#163!3@#90@#157@#138@#152@#174@#140@#163!3@#152@#165@#141@#194@#206@#194!2@#206!2@#194@#204@#202@#41@#195@#41@#141@#217@#165!2@#203@#208@#194!2@#205@#202@#41@#208@#163@#41@#141!2@#202@#208@#41@#189@#179@#154@#210@#41@#141@#213!3@#141@#204@#41@#153@#164@#195@#165@#107@#205@#155@#141@#202@#210@#41@#179@#210@#165@#164@#152@#164!2@#163@#41!2@#163@#174@#163@#186@#164!2@#163@#91!3@#153@#195@#208!2@#155@#186@#195@#203@#164@#135@#184@#123@#195@#163@#153@#92@#151@#135@#63@#89@#28@#220!3@#183@#224@#108@#70@#175@#92@#241@#40@#244@$#14!4A#13!7A#15A#14A#13!2A#160A#13A#14!2A#79A#14!2A#4A#114A#76A#2A#192A#12A#6!3A#4A#6A#73A#6A#75A#72A#7!2A#93A#65A#138A#137A#192A#22A#79A#43A#128A#162A#55A#132A#166A#233A#230A#132!2A#166!3A#242A#231A#227A#229A#231!4A#166A#231!2A#132A#166!3A#227A#229!2A#227A#229!4A#163!2A#235A#229A#235A#163!2A#237A#94A#237A#184A#123A#121A#190A#235A#152A#163!2A#236A#163A#174A#230A#185A#163A#229A#90A#163!2A#203A#208A#141A#204A#194A#217A#141A#204!2A#217!2A#202A#165A#195A#217A#202A#41A#210A#188A#208A#41A#141A#194!2A#202A#41!3A#174A#204A#213A#194A#179A#203A#186A#141!2A#210A#195A#41A#107A#141A#222A#216A#155A#153A#152!2A#195!2A#205A#107A#41A#188A#141A#41A#165A#41A#203A#179A#195A#153A#164A#152A#164A#122A#165A#164A#151A#174A#210A#203A#90A#153A#91!2A#164A#203A#154A#164A#165A#208A#165A#195!2A#185A#58A#123A#178A#210A#91A#163A#92!2A#174A#62A#66A#210A#220!3A#47A#214A#175A#158A#70A#176A#133A#154A#247A$#14!4C#13!2C#14C#13!2C#15C#14C#13C#14C#13!3C#117C#79C#14!2C#11!2C#12C#7C#192C#67C#128C#4C#73C#6C#4C#6C#109C#6!2C#109C#161C#7!2C#67C#131C#123C#62C#148C#142C#12!2C#169C#35C#132C#230C#233!4C#227C#233!5C#227C#229C#227C#231!2C#166C#230C#231!3C#166!3C#233C#227C#229!5C#163!2C#229C#163!2C#229C#163!2C#229C#185C#163!2C#90C#237C#184C#164C#163C#152C#163C#152C#163C#185C#140C#190C#163C#90C#174C#163!2C#235C#208C#194!2C#204!3C#217C#41C#217!3C#210C#195C#202C#41C#178C#188C#210C#178C#188C#165C#194!2C#202C#213C#41C#188C#203C#210C#141C#213C#141C#222C#41C#153C#41C#181C#179C#154C#203C#153C#210C#176C#203!3C#210C#203C#164C#153C#141C#205C#41C#205!2C#203C#41C#165!2C#217C#154C#90C#164C#153C#164C#163!2C#156C#90C#164C#195C#152C#164C#153!2C#91!2C#195C#178C#164C#195!2C#208C#152C#58C#64C#178C#208C#195C#153C#163C#164C#174C#164C#140C#66C#106C#28C#71!2C#220C#68!2C#70C#220C#239C#133C#140C#206C$#14G#13G#14G#13!5G#14G#13!2G#14G#13!3G#16G#13!2G#14!2G#79G#8G#22G#89G#67G#12G#77G#6G#77G#6G#4G#6!2G#4G#6G#4G#9G#7!2G#124G#65G#60G#123G#12G#8G#4G#12G#98G#54G#177G#233G#232G#227G#233G#227!7G#229!2G#233G#231!5G#166G#231G#166!4G#232G#227G#229!3G#163G#229G#235G#229G#235G#229G#235G#229G#157G#190G#163!2G#229G#164G#140G#164G#152G#163G#235G#163!4G#174G#121G#229G#185G#174G#163!3G#208G#194!2G#217!2G#202G#41G#217G#208G#217!2G#210G#195G#188G#155G#179G#210G#195G#41!2G#165G#222G#47G#213G#204G#217G#41G#208G#153G#179G#141!2G#194G#141G#41G#203G#186G#195G#165G#195!2G#208!5G#41G#179G#163G#165G#155G#141G#41!2G#141G#186G#210G#202G#163G#155G#217G#203G#164G#153G#164!2G#91G#203G#90G#174G#195G#153G#164G#163G#91G#153G#91G#195G#208G#210G#164G#195!2G#138G#62!2G#210G#178G#208G#153G#195G#164G#140G#92G#174G#136G#61G#95G#47G#71!2G#28G#153G#69G#220G#47G#136G#133G#183G$#10O#14O#13O#14!3O#13!6O#15O#14O#13O#160O#13O#21O#13O#22!2O#106O#22O#12O#22O#10!2O#6!3O#4!2O#6O#4!2O#6O#4O#72O#124O#130O#58O#62O#106O#8O#12O#6O#167O#215O#233!2O#229!5O#235O#229!6O#236O#229O#231!8O#166!2O#231O#219O#233O#229!2O#163O#229O#163O#229O#235O#229O#163!3O#233O#140O#163O#90O#163O#140O#215O#152O#163O#152O#163!2O#152!2O#229O#90O#140!2O#163O#174O#229O#152O#235O#41O#204O#194O#217O#238O#41O#208!2O#217O#41O#210O#208O#91O#165O#208O#179O#195O#163O#91O#155O#41O#210O#222O#213O#202O#141O#165O#178O#153!2O#204O#202O#216O#194O#213O#181O#210O#208O#165!2O#195!2O#91O#203O#186O#41!2O#179O#164!2O#92O#205O#216O#107O#205O#141O#210O#188O#41O#153O#41O#179O#155O#153O#164!4O#195O#164!2O#152O#91O#164O#91O#152O#91!2O#208!2O#165O#195O#138O#52O#165O#186O#165O#208O#186O#203O#163O#152O#151O#140O#90O#140O#58O#129O#28O#220O#71O#70O#122O#68O#220O#158O#164O#245O#176O$#14!3_#13!6_#15_#14!2_#13_#14_#13!2_#117_#16_#160!2_#117_#127_#79_#10!3_#11!2_#6_#4_#6_#109_#6_#4_#6_#4_#6_#72_#80_#1_#103_#138_#8_#6_#77_#6_#12_#156_#229_#235!2_#236_#235!2_#236!2_#235!2_#236_#235!4_#229_#166_#231!7_#166!2_#231_#166_#219_#233_#140_#163_#229_#235_#229!2_#163_#229_#163_#235_#164_#163_#90_#163!3_#90_#163!2_#235_#163_#152_#163!2_#164_#90_#190_#174_#90_#163_#152_#203_#163_#208_#194!2_#217_#235_#208_#217_#163_#195_#208_#174_#210_#164!2_#165_#41_#165_#195_#164_#179_#205_#153_#205_#202_#141!2_#188_#203_#188_#156_#155_#194_#213_#141_#213_#194_#202_#41_#195_#203_#154_#210_#186_#179_#202_#205!3_#154_#153_#163_#205!2_#202_#41_#141_#210_#165_#141_#203_#164_#165_#155_#41_#208_#203_#164!3_#91_#164!3_#163_#153_#91_#153!2_#165_#208!2_#153_#92_#164_#208_#165_#208_#186_#165_#186_#153_#164!2_#138!2_#164_#151_#61_#29_#158_#71_#70_#45_#40_#220!2_#181_#139_#103_$-#14!3@#13!3@#15@#14@#13@#14@#13!2@#14@#13@#14!2@#46@#16!3@#13@#160@#117@#11!4@#10@#14@#5@#6!2@#4@#6@#109@#6@#4@#109@#111@#144@#66@#137@#77@#6!2@#22@#77@#159@#236@#235@#229@#236!2@#235@#204!2@#193@#200@#193@#204@#235!4@#166@#231!6@#166@#231@#166!2@#231@#219@#233@#190@#235@#229@#163@#229!5@#235@#90@#163@#229@#163!2@#190@#174@#163!3@#152@#163@#164@#90!4@#174@#90@#163!3@#238@#217@#194@#141@#217@#235@#208@#238@#92@#64@#140@#164@#195@#90@#163@#195@#179@#208@#195@#153@#186@#165@#203@#153@#202@#141@#217@#180@#203!2@#90@#174@#202@#141!3@#202@#213@#189@#141@#205@#141!2@#194@#202@#216@#205@#107@#204@#188@#153@#216@#107@#216@#141@#41@#205@#213@#153@#41@#141@#203@#176@#203@#153@#203@#154@#195@#91@#163!3@#164!2@#153@#154@#164@#195@#152@#210@#208@#195@#138@#156@#41@#186@#165@#41@#210@#165!3@#153@#164@#140@#151@#164!2@#62@#106@#158@#47@#71@#69@#159@#183@#158@#216@#135@#86@$#14!2A#13A#14A#13A#14!2A#13!8A#79A#13A#16!6A#14A#10!5A#11A#77A#4!2A#6A#109A#6A#73A#6A#31A#36A#131A#62A#8A#6A#5A#6A#5A#6A#147A#238A#212A#208A#212A#235A#204!2A#217!2A#208A#204A#217A#236A#235A#233A#231!9A#166!2A#231A#219A#229A#227A#163A#229A#163A#229A#190A#227A#229A#90A#163!2A#164A#163A#164A#163A#140A#163A#90A#163!3A#174A#163A#164A#229A#164A#229A#140!2A#229A#203A#163A#203A#208A#204A#194A#238!2A#208!2A#238A#136A#65A#90A#195A#174A#140A#90A#208A#91A#153A#179A#165!2A#179A#153A#210A#222A#153A#92A#210A#179A#178A#163A#164A#141!2A#194A#213A#202A#210A#203A#210A#208A#179A#41A#107!2A#181A#165A#210A#153A#156A#181A#213A#181A#202A#41A#141!2A#41A#153A#141A#205A#195A#153A#165A#203!2A#153A#152A#164A#163A#91A#163A#185A#164A#178A#152!2A#195A#178A#105A#98A#92A#208A#165!4A#208!2A#155A#165A#195A#152A#140A#138A#163A#164A#185A#62A#46A#158A#71A#48A#108A#127A#70A#213A#139A#248A$#21C#14C#13C#14C#117C#15C#14C#13!3C#15C#14C#13!3C#22C#167C#46C#16!3C#160C#16C#13C#14C#10!2C#11!3C#6!2C#73C#6C#4C#6C#4C#75C#87C#58C#136C#131C#67C#6C#5!3C#10C#22C#187C#217!2C#236!2C#235!8C#140C#166C#230C#231!4C#166C#231!6C#177C#227C#229!2C#235C#229C#227C#233C#190C#229C#163C#156C#163!2C#164C#163C#90C#163!2C#229C#163!2C#174!2C#90C#163C#164C#90C#174C#140C#174C#229C#163!2C#235C#208C#204C#194C#238C#208C#235C#208!2C#190C#139C#138C#208C#174C#62C#90C#199C#174C#208C#205C#179C#188C#217C#195C#153C#181C#217C#195C#92C#164C#165C#195C#140C#210C#217C#181C#141C#202C#41!2C#208!2C#203!2C#179C#165C#210C#203!2C#123C#138C#181C#205C#216!2C#205C#141!3C#155C#203C#141C#41C#153C#163C#186C#195!2C#165C#228C#91C#138C#151C#164C#152C#186C#199C#91C#199C#93C#98C#62C#91C#210C#208C#155C#165!4C#208C#155C#195C#163C#105C#140C#90C#152C#163C#138C#137C#70C#71!2C#70C#224C#201C#206C#105C#248C$#46G#21G#13G#14!3G#13!4G#14G#117G#15G#11G#13G#160!2G#113G#16G#46!2G#16!2G#117G#14G#11!2G#14G#11G#10G#5G#6!2G#109G#4G#109G#6G#226G#101G#136!3G#170G#4G#11!2G#6G#11!2G#22G#159G#201G#238G#217!3G#208G#235!2G#229!3G#232G#231!13G#233G#140G#229!4G#233G#227G#140!2G#156G#163G#164G#163G#90G#163G#229G#174G#163!2G#164G#163G#174G#90G#163G#90G#229G#164G#140!3G#164G#163!2G#236G#208G#217G#193G#238!3G#208!2G#235G#65G#139G#174G#140!2G#211G#174G#152G#195G#217G#41!2G#208G#195G#153G#179G#202G#179G#163G#164G#163G#153G#195G#164G#205G#202G#155G#202G#213!2G#107G#141!3G#213G#202!2G#205G#180G#195G#210G#194G#141G#202!2G#96G#213G#141G#213G#141G#165G#210G#205G#41G#153G#154G#210G#154G#195G#165G#178G#94G#173G#97G#30G#81G#225!2G#30G#218G#164G#178G#203G#164G#210G#165!5G#208G#186G#164G#105G#135G#62G#138G#91G#153G#90G#64G#127G#69G#220G#71G#69G#159G#41G#136G#86G$#21!3O#117O#14O#13!6O#14!2O#13!3O#46O#18O#16O#143O#117O#160O#16O#78O#79O#10!2O#11O#14O#10O#11O#6!2O#73O#6O#109O#77O#31O#33O#136O#64O#62O#130O#80O#8O#5O#8O#6O#22O#10O#142O#10O#5O#8O#201O#217!2O#208O#235O#229O#227O#229O#232O#231!9O#166O#231!2O#177O#227O#229O#227O#235O#229O#190O#233O#227O#64O#140O#229O#163O#90O#163!2O#90O#174O#163O#90!2O#174O#229O#90!3O#229O#164O#174O#140!2O#174O#229O#152O#163O#203O#238O#217O#194O#238O#208O#238O#236O#238!2O#164O#139O#131O#140O#174O#190O#185O#195O#164O#165O#205O#208O#188O#165O#164O#153O#217!2O#41O#195O#203O#188O#204O#91O#153O#222O#141O#107O#193O#206O#194O#69!2O#206O#194O#206O#194O#96O#41O#181O#200O#206O#200O#206!3O#96O#194O#108O#141!2O#210!2O#205O#179O#164O#153O#203O#91O#153O#195O#203O#176O#106!3O#92O#89O#122O#203O#178O#165O#195O#164!2O#208O#165O#155O#208O#165O#41O#165O#154O#151O#90O#151!2O#164O#163O#152O#138O#191O#71O#220O#71!2O#70O#186O#102O#84O$#16!4_#13!2_#15_#14_#13_#15_#14_#13!2_#15_#14_#46_#21_#16_#78_#46_#79_#160_#21_#16_#13_#10!2_#14_#10_#11_#10_#6!2_#4_#109_#6_#124_#171_#60_#192_#138_#192_#67_#124_#72_#77_#13_#167_#80_#10_#6_#5_#6!2_#142_#8_#188_#217_#235_#227_#229!2_#230_#231!4_#219_#231!7_#230_#140!3_#229!2_#227_#139_#233_#190_#227_#90!2_#163!2_#229_#163_#229_#163_#229_#140!3_#190_#140!2_#190_#140!4_#229_#163!3_#238_#208_#217_#194_#238!2_#228_#235_#208_#203_#236_#164_#232_#62_#105_#140_#185_#208_#153_#89_#179_#208_#205_#41_#208_#164_#203_#217_#202_#41_#165!2_#208_#217_#195_#156_#141_#193_#202_#107_#194!2_#206!4_#200_#194_#182_#141_#200_#206!2_#200_#206!2_#200_#206_#141_#202_#141!2_#210_#182_#205_#208_#153!2_#164_#153!2_#212_#41_#188!2_#165_#140_#153_#165_#178_#208_#165_#203_#195_#174_#164_#91_#153_#195_#203_#153_#165!2_#140_#163_#185_#140_#90_#153_#164_#152_#63_#13_#70_#71!3_#126_#137_#130_$-#46@#16@#46@#18@#160@#14!2@#13!2@#14@#13!2@#14!2@#13!2@#16@#18@#160@#46!3@#16!2@#13@#10!2@#11@#10!2@#11!2@#6@#73@#4@#6@#110@#149@#62@#192@#88@#62@#130@#7@#124@#75@#11@#9@#80@#10@#5!2@#8@#10@#77@#5@#106@#208@#235@#229@#190@#229@#219@#166@#231!4@#219@#231!6@#232@#229@#140!2@#229!2@#157@#233@#227@#64@#140!2@#174@#229@#163@#156@#163@#164@#90@#140!2@#190@#140!2@#190@#140!6@#163!4@#228@#238@#217@#193@#238@#208@#235@#163@#236@#208@#163@#152@#164@#177@#135@#140@#90@#195@#208@#140@#208@#165@#195@#238@#208@#236@#190@#188@#202!2@#141@#202@#217@#41@#217@#152@#203@#41@#189@#107@#213!2@#194@#206@#200@#206!2@#153@#141@#200@#206!3@#200@#206!3@#200@#206@#96@#180@#107@#222@#203@#165@#141@#41@#164@#203@#163@#153@#203@#154@#41@#188@#186@#92@#185@#208!3@#210@#203@#195@#152@#140@#163!2@#153@#90@#153@#208@#178@#151@#163@#164@#123@#91@#153@#185@#163@#136@#89@#69@#71@#158@#71!2@#69@#247@$#16!4A#46!2A#13!5A#15A#14A#13!2A#14A#13A#46!4A#160A#46A#16A#13A#14A#10!3A#11A#10!2A#6!2A#73A#109A#110A#149A#62A#192A#75A#192!2A#80A#72!2A#9A#167A#80A#14A#10A#6A#10A#142A#5!2A#42A#174A#215A#219A#230A#231!4A#219A#231A#219A#231A#219!3A#231A#230A#233A#136A#140!2A#229A#140!2A#233A#139A#190A#227A#138A#140A#229A#164A#163!2A#90A#163A#190A#140A#136A#140!6A#138A#140A#90!2A#163!3A#238A#208A#238A#217A#193A#238!2A#236A#163A#229A#238A#208A#174!2A#62A#136A#140A#163A#195A#208A#138A#165A#208A#203A#235A#195A#203A#190A#217!2A#202!2A#194A#96A#194!2A#202A#195A#163A#153A#189A#200!3A#206A#200A#107A#210A#141A#206!4A#200A#206!7A#47A#41A#141A#194A#203A#182A#205A#41A#163A#153A#152!2A#163A#203A#186A#179A#164A#140A#195A#155A#208!2A#195!3A#151A#164A#165A#163A#153A#91A#208!2A#151A#164A#203A#64A#154A#203A#164A#163A#140A#136A#39A#71A#48!2A#28A#220!2A$#16!2C#46!2C#18C#16!2C#13!2C#15C#14!3C#13C#14C#13!2C#16C#18C#16C#18C#160C#77C#15C#13C#11C#14C#11C#10C#77C#10C#11C#10C#6C#73C#77C#226C#149C#192C#2C#9C#128C#93C#169C#72!3C#8C#43C#7C#249C#10C#5!3C#11C#167C#100C#49C#132C#237C#231!5C#166C#219C#231C#219C#230!2C#233C#190C#140!2C#229C#227C#140!2C#227C#157C#227C#136C#227C#135C#140C#90C#163C#90C#163!2C#140!2C#190C#140!4C#138C#140C#227C#140!2C#229C#163!3C#203C#238C#208!2C#217C#204C#217C#238C#165C#235C#163C#235C#238!2C#131C#190C#152C#140!2C#165C#179C#229C#217!2C#152C#153C#238C#90C#190C#208C#188C#217C#208C#217C#216C#194C#206!2C#194C#141C#174C#92!2C#156C#164C#210C#187C#41C#141C#200C#206!3C#200C#206!9C#194C#217C#181C#141C#210!2C#194C#179C#153C#91C#152C#91C#164C#203C#154C#203C#174C#185C#208C#186C#210C#203!2C#195C#152C#174C#163C#186!2C#165C#155C#186C#138C#174C#163C#230C#147C#107C#164C#163!2C#65C#68C#158C#71!4C#220C$#16G#46G#16!2G#46!3G#16G#13!3G#14G#13!2G#14G#13!2G#15G#16G#46G#16G#46G#127G#113G#21G#14G#11G#10!4G#77G#10!2G#6G#2G#144G#130G#148G#8G#6G#12G#192G#80G#9G#72!2G#9G#80G#128G#12G#5!4G#11G#88G#100G#197G#219G#132!2G#166G#231G#219G#231G#166G#231G#230!2G#233!4G#140G#229G#140!2G#229G#140!2G#227G#136G#227G#64G#227G#140G#229G#163!3G#174G#190G#138!2G#140G#227G#105G#140!5G#90G#185G#163!3G#236G#208G#238G#208G#217G#204G#217G#238!2G#203G#163G#229G#152G#208G#140G#190G#185G#140G#65G#228G#203G#154G#205G#188G#203G#235G#163G#229G#190G#90G#217!6G#216G#206!3G#194G#141G#210!3G#179G#194G#200!2G#206!4G#200G#206!9G#200G#27G#153G#155G#205G#203G#41G#189G#179G#153G#164G#152G#91G#152G#163G#195G#91G#140G#153G#208G#165G#203G#195!2G#164G#90G#164G#203G#210G#165!3G#140G#174G#164G#64G#122G#69G#155G#153G#122G#136G#156G#70G#220G#71!3G#28G$#21O#16O#18O#16O#46O#18O#46O#19O#46O#13!4O#14!3O#13O#14O#13O#46O#18O#16O#46!4O#10!2O#11O#10O#11O#10!2O#11O#10O#110O#173O#61O#128O#6O#5O#6O#67O#9!3O#124O#9!2O#88O#167O#11O#5!3O#11O#171O#132O#231O#230O#233O#230O#132!2O#237O#231O#219!2O#157O#233!3O#227O#140O#227O#140!4O#229O#140O#233O#190O#139O#227O#140!2O#174O#163O#90O#163O#229O#138O#140!2O#138O#140!5O#190O#211O#164O#163!2O#152!2O#208O#238O#208O#217O#204!2O#203O#238O#208O#203O#163O#229O#90O#157O#91O#90O#140O#131O#190O#90O#174O#195!3O#152O#235O#163O#238O#140O#190O#188O#217!6O#141O#206!3O#200!5O#206O#200O#206!2O#200!3O#206!6O#200O#206!4O#194O#202O#195O#165O#205O#210O#41O#205O#179O#153O#152O#91O#153O#152O#203O#208O#151O#174O#165!2O#152O#153O#203O#153O#92O#90O#122O#208O#41O#165O#208O#92O#151O#164O#136O#176O#96!2O#147O#164O#151O#131O#48O#220!5O$#16!3_#113_#46!2_#18_#46_#18_#16_#14_#13_#15_#14_#13_#14!3_#13_#16!2_#46!3_#18_#16_#13_#10_#11!2_#10!2_#11_#5_#10_#12_#32_#58_#4_#6!3_#128_#67_#9_#7_#9_#7_#9!2_#111_#12_#14_#5_#6_#11_#170_#227_#229_#227!2_#229_#236_#227_#223_#230_#166_#230!2_#232_#140_#229_#140_#229_#140_#229_#140_#229_#227_#140!2_#233_#227_#136!2_#140!2_#163!3_#90_#140!2_#138_#140!8_#90!2_#235_#153_#163_#235_#165_#238_#217_#208_#217_#213_#238!3_#235_#163!2_#232_#164_#90_#229_#185_#190_#131_#140!2_#165_#208_#163_#203_#163!2_#235_#163_#140_#236_#217!3_#208_#217_#208_#217_#194_#200_#206!8_#200_#206!5_#70_#206!8_#194!2_#213_#141_#165!2_#181_#165_#155_#204_#178_#153_#164_#203_#91_#164_#41_#154_#135_#164_#208_#91_#164!2_#90!2_#151_#164_#203_#186_#165_#164_#138_#174_#164_#190_#89_#28_#69_#107_#153_#90_#136_#45_#71!4_#158_$-#16!4@#113@#46!2@#18@#16@#113@#160@#14!2@#13@#14!6@#46@#18@#46@#18@#13@#46@#16@#14@#10!2@#11!4@#15@#9@#55@#61@#12@#142@#6!2@#12@#169@#9@#72@#75@#72@#9@#75@#167@#4@#6@#10@#6@#10@#8@#229@#236!2@#208@#236@#208@#212@#236@#235@#229@#233@#232!2@#233@#140@#227@#140!7@#211@#140@#136@#227@#140!2@#229@#163!3@#90@#140!2@#138@#140@#135@#140!2@#138@#140@#90!2@#163@#90@#163!3@#238!2@#208!2@#204!2@#217@#238@#208@#203@#238@#163!2@#190@#228@#190@#140@#163@#62@#136!2@#90@#208@#195@#164@#163@#229!4@#140@#163@#238@#217!7@#206!6@#200@#206@#200@#206!4@#158@#70@#47@#70@#206!8@#194!2@#213@#141@#165@#155@#188@#210!2@#41@#208@#91!2@#195@#164@#154@#165@#229@#174@#153@#195@#152@#90@#151@#90!3@#164@#210@#208@#174@#138@#164@#163@#138@#92@#141@#69@#96@#68@#90@#65@#214@#158!2@#71!2@#158@$#16A#46A#113A#78A#113!2A#16A#113!2A#46A#18A#14A#13A#79A#13A#14A#13A#14!3A#13A#46A#16!2A#113A#46A#18A#13A#14!3A#11!2A#6A#79A#7A#35A#66A#12A#6A#142A#6A#4A#9A#80A#9A#72A#80A#72!2A#75A#8!2A#6A#10A#6A#11A#156A#236A#208A#217A#236A#217!2A#204!2A#222A#204A#208A#236A#229!2A#140!3A#229A#140A#211A#140!2A#227A#229A#136A#229A#140A#90A#229A#164A#229A#163!2A#190A#140!2A#138A#140!4A#229A#185A#229A#163!3A#235A#203A#238A#217A#238A#217A#213A#204A#208A#238A#195A#238!2A#236A#229!2A#235A#163A#229A#138A#136A#139A#136A#203A#186A#174A#238!2A#163!2A#229A#156A#229A#203A#208A#217!8A#206!8A#200A#206A#220A#47!3A#206!5A#200A#206A#200A#206!2A#47A#194!2A#202A#194A#210A#41A#165A#203A#186A#154A#91A#163A#195A#163!2A#182A#163A#151A#91A#163A#174A#164A#90!5A#164A#165A#174!2A#163A#122A#190A#136A#224A#28A#96A#47A#195A#135A#138A#39A#220A#158A#220!2A$#160C#16!2C#113!4C#46C#18C#16C#113C#160C#13C#14C#13C#14!2C#13C#14!2C#112C#16C#46!3C#16!3C#13C#10C#14!2C#11C#79C#13C#111C#50C#58C#8C#6!4C#77C#75C#72C#75C#72C#75C#72!2C#75C#6C#10C#6C#10C#5C#10C#156C#235C#204!2C#208C#236!2C#235C#238C#208C#222!3C#178C#140!6C#229C#140!5C#90C#229C#174C#90C#164C#229C#174C#140!2C#138C#140C#227C#140!2C#90C#163C#185C#163C#90C#163!2C#238!2C#208C#238C#217C#204!2C#239C#238!4C#195C#91C#230C#190C#229C#163C#90C#140!2C#190C#136C#179C#163C#203C#208C#238C#229C#163C#229C#156C#190C#235C#208C#217!8C#202C#206C#200C#206!3C#200C#206!2C#244C#47C#70C#206!6C#200C#206!4C#47C#206!2C#194C#213C#96C#205C#195C#186C#210C#179C#154C#152C#203C#153C#163C#164C#165C#90C#151C#152C#90C#140C#152C#90!5C#174C#164C#138C#90C#208C#154C#140C#139C#164C#95C#27C#47C#165C#211C#177C#19C#158C#71C#158C#220C$#13G#46!2G#16G#113!3G#46G#113!4G#16G#14G#13G#14!7G#16G#18G#16G#46G#18G#16!2G#14!5G#10G#11G#234G#56G#4G#6G#142G#6!3G#4G#72!2G#75G#72G#75G#9!2G#77G#5G#8G#10G#8G#10G#142G#22G#90G#229G#230!2G#231G#132G#230G#232G#233!2G#136G#233G#140G#227G#229G#140!2G#229G#140!4G#90G#229G#90!3G#229G#164!3G#90G#227G#140G#174G#140G#90G#211G#163G#90G#163!3G#235G#238G#165G#208!2G#217G#204!2G#202G#217G#238!2G#203G#238G#236G#152G#209G#211G#90G#235G#229G#174G#62G#131G#140G#164!2G#217G#238G#163!2G#229G#163G#140G#229G#153G#238G#217!4G#208G#217!4G#213G#194G#206G#200!2G#206G#244G#29G#47G#70G#206!6G#200G#206!9G#213G#141G#189G#41G#179G#154G#41G#217G#210G#152G#153G#164G#152G#154G#174G#140G#136G#90G#185G#174!2G#90!2G#174!2G#185G#140G#63G#90G#40G#195G#138G#139G#90G#181G#224G#141G#216G#163G#139G#151G#48G#220!3G$#18O#16O#46O#113!2O#16O#113O#46O#18O#46O#113!3O#160O#14!4O#13O#14O#13O#14!2O#21O#46!2O#16O#113!2O#13O#14!5O#10O#44O#51O#167O#6!3O#5!2O#73O#9O#75O#72!2O#75O#72O#9!2O#5O#10!2O#11O#8!2O#79O#237O#132O#230!2O#232O#233O#227!3O#233!2O#227O#174O#140!6O#229O#140!2O#229O#90!2O#229O#185O#163O#90O#229O#164O#90O#140!2O#90!2O#163O#185O#163!4O#238O#208O#238O#208O#217O#204!3O#217!3O#238!2O#228O#238O#203O#235O#174O#185O#233O#163!3O#190O#131O#163O#90O#91O#208O#203O#229O#163!3O#223O#163O#235O#165O#217!9O#202!2O#194O#206O#244O#183!2O#206!8O#200O#206!4O#47!2O#206!4O#194O#141!2O#216O#165O#41O#141O#155O#41O#154O#195O#164!2O#152O#151O#174O#140O#90O#174O#90O#190O#140O#90!2O#140O#174O#163O#151O#140O#210O#165O#164O#136O#157O#155O#175O#221O#181O#195O#135!2O#220!3O#244O$#46!3_#113!4_#46_#113!4_#46_#19_#13!2_#14_#13!2_#14!2_#13!3_#18_#16_#46_#18_#16_#113_#13_#14!2_#10_#11_#112_#12_#98_#167_#6_#142_#6_#77_#5!2_#109_#7_#9!2_#72_#9!2_#75_#77_#5_#10_#5_#14_#11_#22_#94_#219_#227!5_#229_#227!3_#174_#190_#229_#140!2_#229_#140!5_#90_#229_#185_#164_#229_#164_#229_#164_#90!4_#174_#229_#164_#229_#163!3_#238_#208!2_#217_#204!3_#217!2_#202_#217_#238!2_#208_#238!2_#195_#163!2_#227_#190_#163!2_#235_#90_#140_#152_#185_#163_#195_#235_#163!3_#190_#229_#152_#163_#208_#217!6_#204!2_#202!3_#247!2_#183_#206_#47!4_#206!9_#244_#183_#206!4_#200_#96_#202_#141!2_#210_#202_#205_#208_#179_#154_#91!2_#163_#152_#174_#138_#163_#208_#90_#164_#90_#190_#151_#164_#140_#64_#174!2_#140_#195_#186_#195_#140_#64_#154_#194_#213_#147_#195_#211_#58_#23_#220!3_$-#13@#46@#18@#16@#113!7@#18@#46@#18@#46@#112@#13!2@#14@#13!2@#14@#13@#14@#13@#46@#18@#13@#113@#46@#16@#13@#11!2@#112@#14@#11@#98@#120@#80@#6!6@#125@#75@#72@#75@#9!2@#72@#4@#5!2@#11@#5@#11@#22@#115@#232@#227!2@#229!3@#227@#229!2@#140@#229@#140!8@#211@#90!4@#229@#164!3@#229@#164@#229@#90!3@#163!3@#203@#238!2@#208@#217@#204@#193@#141@#202@#217@#204@#217!2@#238@#208@#238@#203@#238@#195@#238@#163@#229@#190@#236@#174@#190@#236@#163@#135@#90@#195@#190@#195!2@#163@#229@#190@#223@#203@#235@#163@#238@#217!8@#204@#247!2@#239@#247!2@#29@#183@#47@#206!8@#70@#206@#183!2@#47@#206!6@#213@#141@#204@#210@#205@#141@#216@#41@#165@#195@#152@#164@#152@#174@#140@#90@#41@#210@#164@#185@#90@#190@#90@#163@#190@#138@#140@#136@#174@#210@#208@#90@#138@#164@#182@#194@#96@#154@#211@#60@#38@#220!2@#70@$#13A#16A#46A#113!7A#18A#16A#113!2A#21A#16A#13A#15A#14!3A#13A#14A#13!2A#16!2A#46A#16A#46!3A#16A#10A#11A#14!2A#169A#184A#52A#4A#6A#5A#6A#5A#6A#4A#72A#75A#9!4A#75A#6A#10A#5A#10A#11A#8A#93A#227A#229A#236A#212A#217A#235A#229!2A#140A#229A#140!2A#174A#140!3A#211A#140!2A#229A#174A#229A#90A#229A#164A#229A#163A#90!3A#229A#174A#163!3A#235A#238!2A#208!2A#217A#193A#204!4A#217!4A#238!2A#208A#195A#238A#203A#235A#163!2A#90A#163A#190A#227A#164A#195A#174A#140A#91A#90A#140A#152A#140A#237A#190A#235A#163A#152A#235A#163A#217!8A#213A#217A#196!4A#206!3A#200A#206!5A#70A#206!2A#47A#183A#247A#69A#206!5A#141!3A#41A#182A#141A#205!2A#41A#178A#164A#152A#91A#164A#140!2A#138A#186A#41A#195A#90A#164A#151A#138A#164A#163A#174A#64A#140A#190A#163A#195!2A#140A#164A#147A#216A#96A#216A#164A#121A#39A#158A#28A#48A$#13C#15C#113!6C#19C#16C#46C#113!2C#160C#46C#143C#13C#14C#117C#14C#13!3C#14C#13C#14C#16C#18C#16C#18C#16C#46C#18C#10!2C#11C#15C#167C#209C#132C#169C#5C#6C#5C#6!3C#109C#72C#9C#75C#72C#9!2C#4C#10C#5!2C#10!2C#22C#203C#208C#217C#208C#236!2C#235C#229C#140!5C#229C#140!3C#229C#140C#90!3C#229C#163C#185C#163C#229C#90C#229C#164!2C#163C#203C#235!2C#238C#208!2C#217C#204C#194C#204!4C#217C#235C#238C#217C#208C#238C#195C#238!2C#195C#163C#235C#163C#152C#190C#223C#140C#90C#190C#163C#152C#64C#140C#136C#157C#164C#209C#121C#236C#163C#203C#235C#203C#235!2C#217!5C#202C#247C#239C#196!2C#29C#47C#206!12C#244C#183C#247C#183C#206!6C#217C#141C#205C#182C#204C#213!2C#141!2C#179C#163C#195C#152C#90C#174C#64C#174C#41C#208C#41C#163C#164C#163C#140C#138C#164!2C#174C#140!3C#164C#178C#151C#164C#41C#147C#70C#96C#153C#157C#28C#70C#71C#28C$#13!2G#95G#113!5G#46G#16!2G#113!2G#127G#93G#124G#79!3G#13!2G#14G#13!4G#14G#46G#16!2G#46G#16!2G#160G#11!2G#10G#8G#167G#149G#94G#6G#5G#77G#5G#6G#5G#6G#9!2G#75G#9G#75G#9G#75G#10!2G#5G#10G#5G#10G#22G#187G#163G#235!2G#203G#235G#140G#174G#229G#140!5G#229G#140!3G#90G#229G#164G#163G#140G#174G#229G#163G#156G#163!3G#235!2G#208!2G#238G#217G#204G#194G#204!2G#202G#217G#204G#217G#238G#203G#238G#217!2G#238G#203G#238G#195G#238G#152G#163G#235G#163!4G#236G#195G#208!2G#140G#103G#157G#90G#64G#208G#174G#152G#235G#163G#203G#235G#203G#163G#238G#217!2G#204G#217G#247G#239G#29G#183!2G#206!12G#244G#183G#247G#183G#244G#47G#206!5G#47G#213G#204G#182G#208G#205G#107G#141!2G#205G#186G#163G#91G#195G#138G#64G#140G#153G#165G#41G#208!2G#164!3G#138G#174G#185G#90G#140G#136!2G#138G#152G#163G#90G#155G#41G#216G#96G#208G#136G#22G#27G#69G#71G$#13!2O#113O#16O#113!3O#19O#18O#16!2O#46O#16O#127O#137O#149O#22O#76O#79!2O#13!2O#14O#13O#14O#13!3O#18O#16!2O#46O#16O#46O#16O#11O#14O#10O#11O#22O#52O#6O#5O#6!2O#5O#6!2O#77O#72O#9O#75!3O#72O#6O#10O#11O#5O#10O#5O#240O#79O#169O#215O#229O#163O#229!2O#140!3O#174O#229O#140!4O#90!2O#163O#229O#164O#90O#140O#90O#163!5O#203O#238!3O#41O#217O#204O#202O#204!5O#217O#238O#195O#238O#165O#208O#238!2O#165O#238O#208O#235!2O#203O#163!3O#235O#152O#203O#236!2O#174O#138O#140O#65O#64O#174O#163O#140O#203!2O#235O#163O#235O#163O#235O#203O#208O#202O#217O#247O#239O#247O#206!4O#200O#206!8O#244!2O#247O#29O#183!2O#206!8O#202O#155O#165O#204O#189O#213O#141!3O#180O#153O#163O#140O#92O#151!2O#164O#41O#165O#41!2O#165O#164!2O#90O#136O#90!2O#140O#64O#138O#140O#174O#163O#90O#182O#216O#187O#41O#203O#135O#237O#71O#48O#27O$#16!2_#78!2_#113!3_#46!2_#16!3_#160!3_#76_#79_#13_#15_#13!4_#14_#13!5_#46_#18_#16!2_#21_#16_#13_#76_#10_#11_#22_#52_#12_#5!3_#8_#167_#10_#5_#4_#9_#75_#72_#75!2_#109_#11_#5_#10_#11_#8_#15_#8_#22_#115_#237_#229!2_#140!2_#174_#140_#229_#140!2_#229_#140!2_#90_#229_#164_#229_#163_#90_#163!5_#238!2_#208!2_#41_#217_#204!3_#217_#204_#217_#202_#217_#208_#238!2_#210_#208_#238!3_#210_#238_#195_#203_#238_#163_#152_#235_#229!2_#90_#229_#163_#229_#190_#136!2_#228_#140_#136_#164_#203_#140_#235!2_#152_#203_#235_#152_#203_#235_#238_#202_#196_#239_#47_#206!6_#200_#206!6_#244_#247!2_#183_#247_#183_#70_#206!7_#200_#217_#210_#205_#141_#213_#141_#205!2_#41_#153_#92!2_#64_#151_#185_#174_#90_#165_#155_#41!2_#208_#154_#164_#163_#174_#140_#151_#90!2_#138_#64_#138_#164_#185_#153_#107_#41!2_#163_#151_#52_#70_#48_#71_$-#160@#13@#16@#78@#113!4@#18@#160@#16@#160@#16@#160!2@#13!3@#79@#13!2@#14@#13!3@#14@#13!4@#16@#46@#16@#46@#16!2@#106@#77@#11@#76@#93@#73@#5!2@#6@#77@#22@#6@#5@#6@#109@#9@#75!4@#5!3@#11@#10!3@#13@#67@#119@#172@#98@#190@#229@#140@#229@#140!5@#90!2@#163@#90@#163@#90@#229!2@#163!2@#238@#208!3@#217!3@#204!2@#217@#204@#213@#204@#202@#217!2@#165@#238!2@#195@#238@#203@#238@#210@#208@#238!4@#152@#235@#163@#229@#156@#163@#229!2@#163@#229@#163@#140@#195@#203@#140@#164@#208@#152@#203@#235@#203@#235@#152@#235@#203@#235@#203@#239@#247@#47@#206!7@#70@#47@#206!3@#244@#183@#247!2@#183!2@#70!2@#206!7@#47@#155!2@#204@#205!4@#41@#210@#154@#174@#90@#151@#195!2@#174@#90@#156@#203@#208@#41@#186@#41@#165@#164!2@#185@#190@#90!4@#140@#190@#140@#90@#164@#68@#213@#41@#152@#140@#162@#96@#70@#48@$#16A#13A#16A#78A#113!3A#46!2A#16!5A#46A#21A#13A#14!2A#112A#13!12A#117A#13A#16A#78A#89A#22A#11A#14A#12A#43A#8A#5A#10A#5!3A#6A#5A#77A#75A#9A#75A#9A#109A#4A#10A#5A#10!2A#11!3A#88A#49!2A#197A#132A#166A#140!3A#90A#140A#90A#229A#90A#229A#163A#229A#90A#229A#152!2A#195!2A#238!2A#208A#217!2A#204!7A#202A#217A#238!3A#210A#238A#165A#238A#203A#238A#208A#195A#238A#195A#238A#195A#163A#203A#229A#163A#229A#163A#229A#163A#229A#163A#235A#164A#64A#195A#152A#151A#163A#203!2A#163A#235A#152A#203A#235!2A#203A#182A#196A#47A#206!5A#200A#47!2A#206!4A#183!2A#247A#183A#47A#70!3A#206!9A#194A#141!2A#216A#41A#210A#165A#181A#180A#141A#208A#152A#164A#165A#195A#90A#151A#153A#208A#154A#210A#208A#155A#178A#165A#164!2A#140!2A#90A#174A#90!2A#174A#64A#92A#163A#195A#41!2A#152A#140A#191A#69A#28A#71A$#13C#46C#16C#143C#18C#113!2C#18C#113!2C#16!5C#160C#21C#14C#13!2C#112C#13!10C#14C#13!2C#46C#16C#15C#14C#11C#79C#240C#148C#130C#8C#5!2C#6C#5C#142C#5C#6!2C#72C#67C#75C#9C#109C#10!2C#5C#11C#10C#5C#79C#88C#49C#102C#132!2C#166C#231C#233C#140C#229C#140C#229C#140C#185C#163C#90!2C#163!3C#238!2C#208!3C#217C#204!5C#202C#204!4C#217C#238!2C#165C#238C#208C#235C#163!2C#238C#203C#238C#228C#238C#228C#238C#235C#163C#229C#163C#229!2C#163C#229C#163C#229C#203C#195C#136C#140C#178C#190C#140C#238C#235C#233C#235C#203C#235C#203!2C#182C#247!2C#206!3C#200C#206!2C#244C#247C#206C#47!2C#244C#183C#247!3C#183C#69C#47C#206!7C#200C#206C#200C#206!2C#200C#206C#107C#179C#205!3C#202C#141C#165C#153C#91C#165!2C#195C#140C#164C#41C#165C#203C#210C#208C#41C#208C#163C#164C#90C#64C#151C#174!2C#90C#174!2C#163C#164C#163C#153C#202C#165C#136C#80C#69C#71C#28C$#16!2G#13G#160!2G#46!3G#113!3G#16!4G#13G#46G#16G#112G#13G#14G#13!12G#16!3G#14!3G#10G#14G#11G#167G#170G#77G#6G#5G#6!3G#5G#9G#171G#67G#75G#73G#109G#4G#10G#5G#10!2G#8G#79G#169G#83G#53G#166G#231!2G#245G#231G#232G#190G#140G#90G#164G#229G#164G#229G#163!2G#235G#238!2G#208!2G#217G#204G#194G#204!4G#217G#204!4G#217G#238!2G#208G#238!2G#195G#163!3G#238G#208G#238!2G#195G#238G#236G#163!2G#229G#163G#229G#163G#229G#163G#229G#163G#229G#164G#91G#190G#151G#90G#195G#235G#203G#163G#235!2G#203G#208G#202G#247!2G#206!4G#47!2G#244G#196G#206G#183G#244G#183G#247!2G#183!6G#70G#206!13G#194G#204G#205!3G#202G#141G#179G#164G#154G#195G#178G#195G#151G#153G#165G#41G#208G#40G#208G#41G#186G#203G#90G#164G#174G#140G#90!2G#140G#90G#174G#178G#153G#164G#178G#208G#140G#151G#126G#48G#28!2G$#13!2O#16!2O#160O#46O#18O#46O#113!4O#46O#16O#46O#16!2O#13!3O#14O#13!2O#14O#13!6O#15O#14O#13!2O#16!2O#13!2O#14!3O#10O#11O#148O#52O#88O#5!2O#6O#4O#7O#1O#42O#75O#109!2O#9O#73O#5O#10O#6O#10O#11!2O#31O#99O#132O#166O#231!3O#245O#231O#232O#174O#163O#90O#163O#229O#164O#229O#235O#195O#238O#217!2O#204O#194O#202O#217!6O#204!4O#217O#238!3O#236O#152O#163!4O#238O#203O#238O#195O#208O#195O#203O#163!2O#229O#156O#229O#163O#229O#163O#229O#163!2O#140O#91O#90O#185O#236O#165O#238O#236!2O#203O#235O#208O#194O#183O#247O#47O#206!2O#47O#194O#206O#29O#196O#194O#47O#183!2O#247O#29O#247!3O#183!2O#69O#206!8O#200O#206!5O#200O#213O#205!2O#181O#155O#41O#165O#163O#176O#188O#208!2O#153O#174O#164O#41O#208O#41O#208O#186O#41!2O#178O#164O#90!2O#140!2O#90O#174!3O#195O#153O#164O#165O#203O#185O#137O#48O#71O#220O#28O$#16!2_#160!2_#16!2_#113!4_#18_#113_#18_#160_#16!2_#13_#21_#13_#16_#13_#14_#13!7_#15_#14_#13_#14_#13_#18_#78_#46_#14!2_#10!2_#11_#14_#11_#148_#93_#234_#44_#88_#169_#67_#12_#6_#4_#109!4_#4_#14_#11_#10_#8_#79_#226_#146_#231!5_#232_#233_#140_#163_#229_#163_#229_#163_#152_#195_#165_#217_#188_#204_#202_#217!8_#204_#217_#202_#204_#217_#238_#217_#238_#208_#163!5_#229_#238_#208_#238!4_#235_#163!2_#229_#163_#229_#163_#229_#163_#229_#163_#235_#190_#90!3_#195_#208_#195_#203!2_#238_#205_#194_#183!2_#70_#206_#96_#183_#47_#183_#196!2_#247_#47_#244_#247!2_#196_#247_#196_#244_#247_#28_#206!14_#200_#206!3_#141_#202!2_#205!2_#195_#151_#195_#208_#181_#41_#163_#90_#185_#210_#186_#41!2_#186!2_#165_#41_#203_#164_#156_#174_#138_#174_#90_#174_#90_#203_#164!2_#195!2_#154_#45_#28_#71_#220!2_$-#160@#13@#46@#16@#46@#143@#16@#113!2@#19@#18@#113@#46!2@#16@#46@#13@#46@#13@#21@#16@#13!4@#15@#13!2@#14@#13@#14@#13!3@#16@#18@#16!2@#14@#79@#10@#11@#14!3@#8@#42@#148@#130@#67@#4@#6@#5@#6@#73@#4@#75@#109!2@#6@#10@#6@#11!2@#225@#132@#231!3@#232@#227@#229!3@#163!4@#203@#238!2@#217@#204@#217!12@#238@#204@#217@#238@#217@#238@#208@#235@#163!5@#235!2@#203@#228@#238@#195!2@#152@#163@#229!2@#163@#229@#163@#229@#163!3@#229@#151@#228@#90@#140@#208!2@#236@#238@#41@#194@#206@#28@#183@#69@#206!2@#183@#244@#29!3@#183@#47@#183@#247!5@#29@#247@#70@#206!12@#200@#206!5@#96@#202@#141!3@#204@#210@#90@#165!2@#202@#41@#153@#164@#140@#163@#179@#208@#155@#41@#208@#155@#208@#186@#174@#164!2@#140!3@#90!2@#154@#152@#90@#208@#151@#203@#183@#71@#220!2@#71@$#13A#46A#16A#143A#16A#113A#78A#113!3A#46A#18A#46A#18A#160A#13A#46A#21A#13A#117A#16!2A#13!3A#14A#13!2A#14A#13!5A#113A#16A#113A#16A#13A#10!4A#11A#10A#5A#11A#8A#124A#88A#8A#6!2A#5A#4A#109!4A#73A#11!2A#8A#14A#42A#227A#233A#232A#227A#229!3A#90A#229A#163A#229A#195A#238!2A#208A#217A#204A#217!3A#188A#217!2A#188A#217!3A#204A#217!5A#208A#217A#208A#238A#203A#235A#163!2A#235A#229A#163!2A#238A#208A#238A#163A#238A#163A#229A#163A#229A#163!4A#229!2A#163!2A#152A#140A#195!2A#208A#179A#236A#208A#194A#69A#183!2A#206!2A#47!2A#244A#221A#196!2A#183A#206A#47A#247A#183A#196A#47A#96A#196A#247A#69A#206A#200A#206!16A#200A#206A#141!2A#204A#202A#213A#208A#90A#165A#208A#181!2A#203A#152A#164!2A#208A#41!2A#186A#208A#41A#155A#208A#153A#90A#164A#90A#140A#151A#90A#151A#153A#195A#164!2A#163A#147A#47A#220A#48A#220A#39A$#160!3C#16C#78!2C#95C#16C#113!3C#46C#18C#46C#113C#46C#21C#160!3C#16!3C#13!5C#14C#13!4C#160C#46C#78C#113C#16C#14!2C#10C#79C#10C#14!3C#11C#77C#5C#11C#77C#5!2C#6!2C#4C#109C#4C#75C#73C#6C#10C#8C#10C#159C#190C#227C#229!3C#140C#235C#163C#235C#203C#238C#208C#238C#188C#217C#204!6C#188C#217!2C#204C#217!5C#204C#217C#238C#217C#208C#238!2C#235C#163C#235C#229C#235C#163C#235C#163!2C#238!2C#163C#229C#163C#229C#163!2C#229!3C#163C#229C#163C#235C#90C#151C#203C#178C#228C#90C#188C#217C#194C#70C#47!2C#206!2C#47C#206C#96C#196!3C#183C#96C#47C#247C#183C#247C#183C#206C#183C#244C#69C#200C#206!12C#200C#206C#200C#206!5C#202C#217C#107C#205C#107C#208C#90C#154C#208C#41C#202C#155C#163C#91C#164!2C#195C#165C#208C#155C#208C#41C#208C#165C#90!4C#174C#90!2C#164!2C#153C#164C#186C#210C#27C#220C#71C#220C#71C$#13G#16G#160G#78G#95G#78!4G#113!2G#18G#160G#46G#18!2G#13G#117G#214!2G#160!2G#16G#78G#13!4G#15G#13!5G#46!4G#13G#10G#14!2G#10G#14G#10G#11G#14G#11G#5G#6G#5G#6G#5!3G#6G#109!3G#75G#4G#5!2G#6G#8G#163!2G#229!2G#203G#235G#236G#203G#236G#208!2G#217!3G#204G#141G#187G#201G#239!2G#201G#209G#217G#188G#204G#217!7G#238!2G#208!2G#228G#235G#163!2G#203G#163!3G#235G#163G#238!2G#163G#229G#163G#229!2G#163G#229G#163G#229G#163G#229G#235G#163G#164G#153G#210G#152G#139G#140G#188G#96G#206G#47G#183G#69G#206G#70G#47!2G#247G#20G#196G#27G#194G#69G#183G#247!2G#244G#96G#47G#247G#70G#200G#206!20G#200G#202G#217G#213G#141!2G#208G#91G#208G#41!2G#179G#205G#153G#164G#91G#152G#164G#165G#186G#208G#155!2G#186G#208G#195G#174G#90G#151G#90G#151G#90G#174G#153G#152G#163G#203G#122G#154G#220!2G#71G#220G$#13O#16O#160O#78!4O#113O#78!2O#160O#113O#46O#18O#16O#95O#18O#15O#52O#209O#46O#16O#143O#16!2O#13!3O#16O#13O#15O#8O#14O#13O#21O#18O#16O#46O#13O#112O#10O#14!2O#10O#14!2O#10O#11O#5!3O#6!2O#5!2O#6O#4O#109O#4O#109!2O#4O#10O#5O#6O#8O#187O#238!5O#208O#217O#202O#217O#41O#239O#8!2O#11O#4O#73O#77O#4O#169O#60O#92O#156O#217!2O#204O#217!4O#208!3O#238O#236O#235O#163O#235O#163O#235O#163O#235O#163O#187O#235O#203O#235O#229O#140O#229O#156O#229O#163O#229O#156O#229!2O#163!2O#203O#238O#195O#210O#195O#152O#140O#165O#206O#183O#213O#70!3O#47!2O#247O#20O#196O#108O#47O#70O#183O#244O#247O#196O#96O#206O#247O#206O#200O#206!14O#200O#206!2O#200O#206!4O#213O#217O#216O#107O#141O#155O#195O#208O#179O#40O#41O#188O#41O#164O#163!2O#195O#91O#178O#155O#208O#41O#208O#155O#195O#174!2O#90!3O#174O#151O#164O#195O#164O#163O#107O#153O#48O#220!3O$#13_#160_#16_#143_#16_#78_#143_#113_#78_#95_#16_#46!4_#113!2_#46_#127!2_#46_#13_#46_#16!2_#160_#13!4_#14!2_#11_#16_#76!2_#113_#16!2_#13_#14!4_#10_#14_#10_#14_#5!5_#6_#5_#10_#6_#109_#75_#109!3_#6_#11_#8_#10_#142_#79_#187_#210_#217!2_#141_#41_#68_#167_#240_#8_#77_#6_#142_#8_#4_#6_#8_#93_#65_#191_#106_#89_#165_#204_#217!4_#235_#229_#177_#135_#236!2_#163_#152!2_#163!2_#235_#163_#235_#163_#238_#203_#163_#229!2_#163!2_#229_#163_#229_#163!3_#235!2_#92_#64_#179_#152_#164_#152_#203_#194_#247_#47_#70_#47!2_#206_#183_#196!2_#247_#70_#69!2_#247_#29_#108_#47_#69_#183_#47_#206!24_#213_#141_#41_#205_#141_#205_#203_#186_#179_#208_#41_#181_#179_#203_#195_#153_#164_#153_#164_#203_#186_#165_#186_#165_#208_#154_#174_#151_#140_#90!2_#151_#90_#195_#163_#90_#181_#89_#68_#220!2_#71_$-#160@#13@#16@#78!3@#113@#78!4@#16@#46@#18@#46!2@#21@#46@#21@#117@#46!2@#16@#160@#16!2@#13!2@#14@#10!2@#11@#14@#15@#31@#226@#127@#113@#46@#14@#112@#10@#14!3@#79@#10!2@#11@#8@#10@#6@#5!5@#73@#4@#109@#73@#109@#4@#5!2@#142@#6!2@#5@#240@#79@#22!2@#142@#43@#249@#11@#6!2@#8@#77@#6!2@#8@#2@#132@#64@#106!2@#89@#106@#217!2@#204@#217@#238@#163@#227@#103@#58@#163!2@#203@#235@#163@#235@#163!3@#203@#235@#208@#203@#163!3@#229!3@#156@#229!2@#163@#235@#163@#187@#174@#230@#178@#164@#64@#163@#155@#96@#183@#69@#70@#206@#183@#47@#29@#196@#47@#183@#206@#96@#247!3@#183@#69@#183@#70@#206!8@#200@#206!5@#200@#206!5@#200@#206@#200@#206!2@#194@#205!2@#155@#41@#222@#41@#154@#180@#41@#165@#181@#188@#91@#210@#208@#164@#165@#91@#174@#90@#164@#165!3@#208@#164!2@#90!2@#174@#151@#174@#156@#164!2@#181@#147@#40@#47@#71@#220@$#16A#160A#78A#143A#78A#95A#78A#113!2A#78A#113A#78A#16A#143A#129!2A#46A#18A#46A#18A#13A#46A#16!2A#160A#46A#13!2A#10A#11A#14A#10A#11A#14A#76A#11A#143A#21A#46A#16A#14!5A#10A#14A#10A#14A#11A#5!3A#10A#6A#5!3A#109!5A#6A#5!2A#6A#8A#5A#8A#6A#8A#5A#77A#8A#80A#10A#6!5A#8!2A#57A#103A#62A#88A#67!2A#92A#203A#217!2A#238!2A#236A#235A#236A#91A#163A#235A#163!4A#235A#163A#235A#163!2A#235A#203A#163!2A#229A#163A#156A#163A#229A#163A#229A#235A#163A#235A#203A#90A#140A#179A#203A#93A#178A#41A#239A#183A#69A#183A#247A#183A#247A#196A#47!2A#206!2A#247A#244A#247A#39A#47A#206!29A#216A#202A#205A#41A#108A#141A#165A#41A#205A#210A#179A#205A#203A#210A#181A#165A#164A#165A#186A#153A#90A#164A#208A#41!2A#208A#203A#164A#151A#190A#140A#185A#164A#90!2A#210A#141A#42A#27A#220A#183A$#16C#160C#78!3C#113C#78!3C#95C#16C#78C#143C#16C#128!2C#95C#16C#46!2C#21C#16!2C#160C#21C#160C#13C#14!3C#10C#11C#14!2C#16!2C#46C#21C#46!3C#16C#14!4C#11C#14C#11C#22C#5!3C#6C#10C#5!2C#10C#73!2C#4C#109C#4!2C#6C#8C#5!2C#6C#8C#11C#5C#6C#77C#9C#10C#5C#6C#11C#6C#11C#8C#10C#124C#53C#66C#209C#2C#67C#148C#89C#92C#203C#165C#238C#208C#238!2C#208C#235C#229C#163C#235C#163C#235C#163!2C#235C#163C#235C#195C#235!2C#163C#235C#229C#156C#229C#163C#229C#235C#187C#235C#187C#235C#156C#140C#164C#188C#155C#140C#203C#106C#205C#206C#47C#247!2C#196!2C#183!2C#47C#206C#247C#244C#29C#183C#96C#206!14C#200C#206!5C#200C#206!8C#70C#194C#206C#194C#213C#155C#205C#179C#195C#205C#202C#182C#188C#208C#153C#208C#181C#165C#153C#203C#186C#203C#90C#164C#208C#41C#186C#208C#186C#163C#151C#140C#90C#229C#164C#185C#153C#193C#122C#216C#220C#244C$#113G#16G#78!3G#143G#113!4G#78!2G#16G#143!2G#46G#113G#18!2G#16G#18G#160G#16G#160G#13G#46G#14!4G#5G#10G#11G#5G#13G#113G#46G#18G#16G#46G#18G#160G#13G#14!2G#11G#14G#10G#11G#22G#10G#5!2G#6G#10G#5!2G#10!2G#4!2G#109G#167G#109G#5!3G#6G#5!2G#6G#5G#6G#9G#4G#5!2G#6G#8G#5G#6G#11G#80G#162G#146G#60G#67G#2G#191G#58G#64G#92G#164G#208G#217G#238!3G#165G#208G#203G#163!8G#203G#238G#208G#203G#235G#163G#235G#163G#229G#235G#163G#235G#163!3G#238G#210!2G#204G#164G#90G#62G#195G#164G#181G#155G#29!4G#247G#183G#47G#206G#247G#244G#108G#47G#247G#69G#206!8G#200G#206!10G#47G#206!14G#194G#181G#217G#41G#141G#189G#41G#186G#179G#152G#195G#181G#41G#165G#163G#195G#178G#195G#90G#164G#208G#41G#208!2G#41G#195G#92G#140G#164!2G#185G#164G#68G#154G#159G#69G#220G$#18O#46O#78!2O#113O#78O#113!2O#78!2O#143O#113O#78O#16O#21!2O#18O#16O#18O#160O#16!2O#46O#117O#46O#13O#79O#6O#14!3O#11O#10!2O#13O#113O#46!2O#18O#13O#46O#13O#16O#13O#14!2O#10O#11O#8O#22O#5!5O#6O#5!4O#73O#109!3O#6!3O#142O#5!2O#6!2O#73O#171O#6O#5O#6O#11O#77O#11O#4O#6O#130O#85O#103O#62O#130O#167O#137O#103O#138O#92O#174O#64O#190O#208O#238O#208O#165O#238!4O#163O#235O#163O#235O#163!2O#238!2O#208O#238!2O#235O#163!2O#235O#163O#235O#163!2O#235!2O#187!2O#165O#193O#165O#140O#58O#151O#209O#164O#224O#247!2O#29!3O#183O#206O#247!3O#29O#70O#96O#206!10O#200O#206O#200O#206!3O#213O#156O#141O#96O#206O#47O#206!15O#216O#141!2O#96O#189O#41!3O#91O#179O#217O#181O#41O#152O#164O#195!2O#164O#153O#165O#41O#186O#165O#208O#203O#164O#154O#164O#163O#90O#154O#179O#40O#69O#158O$#23_#18_#78!6_#113_#78_#113_#78!5_#113_#16_#46_#18_#46!2_#16_#46!2_#16_#13_#14_#8_#14!2_#10_#5_#10!2_#16!2_#18_#160_#46_#18_#160_#78_#160_#112_#14_#11_#14_#8_#6_#10_#5_#6_#5_#10_#5!6_#4_#109!2_#4_#6_#5!2_#142_#5!3_#80_#88_#11_#77_#5!2_#8_#9_#10_#12_#144_#146_#56_#130_#12_#224_#93_#104_#92_#137_#92_#65_#131_#217_#238!2_#208_#238!2_#208_#165_#208_#163!5_#238_#208_#238_#41_#238_#187_#235!2_#163_#235_#163!2_#235_#163!2_#208_#202_#156_#69_#205_#179_#65_#140!2_#122_#108_#29_#108_#244_#29_#183_#206_#247_#196_#247_#183_#69_#206!17_#200_#194_#205_#213_#183_#206_#47_#206!16_#194!2_#213!3_#141_#181_#122_#41!2_#181_#108_#179_#91_#90_#153_#163_#90_#195_#210!2_#208_#41_#186_#178_#208_#195_#90_#185_#195_#154_#140_#28_#47_$-#23@#18@#19@#16@#113@#16@#78@#143@#113!2@#78!6@#113!2@#18@#160@#46@#18@#13@#46@#21@#46!2@#13@#14@#5@#14!2@#10@#11@#5@#16@#78@#16@#46@#16!2@#46!2@#16!2@#10@#11@#77!2@#10@#6@#5!2@#4!2@#12@#10@#5!3@#10@#6@#4@#109@#4@#6@#5!2@#6!4@#2@#88@#5!2@#6@#5@#6@#4@#12@#31@#53@#58@#130@#22@#240@#22@#59@#104@#138@#174@#106@#123@#209@#42@#159@#41@#238@#208@#238@#208!3@#235@#163!2@#235!2@#238@#165@#208@#238@#208@#235@#163@#235@#163@#187@#235@#163@#235@#163@#201@#194@#96@#187@#194@#68@#154@#151@#135@#123@#184@#187@#29@#247@#29@#96@#206@#247@#244@#183!3@#69@#206!12@#200@#206!2@#158@#47!2@#206@#183@#47@#206@#70@#206!16@#200@#206@#194@#47@#141@#107@#141!2@#153@#154@#202@#41!2@#181@#217@#165@#91@#164@#174!2@#165@#208@#154@#210!2@#208!2@#186@#152@#90!2@#92@#62@#47@#244@$#18!3A#13A#113A#78A#113!2A#78A#143A#113A#78A#143A#113A#46!2A#18A#16A#113A#18A#16A#46!3A#21A#13A#46A#21A#117A#11A#4A#11A#14!2A#5A#13A#113!2A#46A#18A#16!2A#113!2A#127A#13!2A#88A#148A#124A#12A#10A#8A#43A#62A#167A#5A#10A#5A#10A#5!2A#6A#73A#109A#6!2A#5!4A#4A#226A#6A#5!2A#11A#6A#5A#4A#87A#57A#60A#62A#167A#160A#76A#106A#104A#56A#92A#106A#209A#169A#80A#4A#240A#182A#208A#238A#208A#238!3A#165A#238A#235A#156A#235A#210A#238A#41A#208A#238A#203A#163A#235A#163A#235!2A#163A#187A#208A#213A#247A#216A#106A#40A#193A#156A#140A#163A#131A#103A#123A#213A#183A#70A#69A#196A#29A#183A#47A#183A#47A#194A#206!11A#200A#206A#158A#183!2A#194A#47!3A#200A#206!20A#200A#206!2A#194A#206!2A#205A#156A#141A#96A#194A#216!2A#202A#179A#41A#203A#90A#164A#186A#165A#195!2A#186A#203!2A#208A#163A#138A#164A#138A#68A#220A$#18C#20C#21C#113C#46C#78!3C#113!2C#78!2C#113C#78C#16!3C#113!2C#46C#18C#46C#18C#16C#46!2C#21C#16C#160C#13!2C#4C#79C#10C#14C#13C#113C#46C#16!2C#46C#16C#113C#19C#16C#160C#22C#106C#123C#120C#130C#8C#6C#77C#11C#8C#10C#5C#142C#10C#5!3C#77C#109C#6!3C#5C#6!2C#7C#9C#5C#6!2C#10!2C#12C#171C#57C#62C#138C#148C#11C#79!2C#209C#66C#136C#42C#74!2C#142C#117C#239C#20C#29C#41C#238C#210C#208C#165C#238!3C#235C#163C#203C#238!3C#41C#238C#235C#203C#163C#235C#163!2C#210C#239C#194C#247!2C#194C#213C#156C#41C#193C#178C#152C#212C#62C#103C#92C#96C#206C#244C#247!2C#183!2C#47C#183C#206!10C#200C#206!2C#220C#247C#183!2C#47C#206C#47C#206!28C#194C#164C#147C#206!3C#96C#216C#202C#181!2C#165C#174C#164C#165!2C#155C#165C#195C#164C#178!2C#138C#92C#209C#41C#70C$#18G#21G#17G#18G#143G#160G#78G#113G#78!2G#95G#113G#78!3G#113!3G#18G#16G#46G#18G#16G#46!2G#21G#46G#16!3G#160G#10G#4G#10G#13G#16G#18G#113!4G#16G#113G#15G#167G#191G#106G#6G#12G#128G#167G#8G#10G#5!5G#10G#5!5G#73!2G#5!2G#6G#11G#9G#44G#77G#6G#5G#4G#72G#124G#234G#101G#62G#137G#209G#106G#76G#22G#156G#63G#61G#169G#74G#161G#250G#22G#20!2G#196G#20G#47G#213G#165G#238!3G#41G#208G#163G#235G#203G#238G#217G#208G#238!2G#163G#235G#163G#235G#201G#202G#247G#246G#247!2G#206G#47G#206G#183G#213G#193G#107G#153G#205G#153G#65G#241G#147G#47G#29G#247G#39G#183!2G#96G#206!13G#183!3G#47G#183G#47!2G#194G#206!6G#200G#206!6G#70G#206!11G#194!3G#206G#188G#185G#156G#194G#206!3G#213G#216G#202!2G#165G#156G#195G#165!3G#195G#185G#203G#208G#153G#62!2G#176G#69G$#113O#21!3O#160!2O#78!2O#113O#78!7O#113O#16O#18O#46O#18O#16O#113!2O#18O#16O#46O#16O#113O#16O#160O#13O#79O#73O#15O#16O#79O#76O#22O#128O#89O#88O#42O#129O#22O#76O#79O#6O#10O#6O#10!2O#6O#10O#5!2O#10O#5!6O#6!2O#73O#6!2O#5O#11O#2O#1O#148O#124O#130!2O#67O#33O#102O#60O#209O#191O#148O#22O#11O#159O#89O#52O#130O#74O#10O#251O#161O#19O#239O#20O#196O#29O#47O#96O#187O#238!2O#208O#238!2O#203O#235O#238!3O#208!3O#152O#235O#203O#182O#213O#20O#247O#70O#69O#206O#70O#206!4O#202O#206O#141O#47O#206O#164O#133O#177O#153O#96O#220O#70O#47!2O#206!10O#200O#206!3O#183!2O#247O#47!2O#206O#194O#47O#206!3O#200O#206!5O#47O#70O#244O#206!2O#70O#206O#194O#239O#204O#200O#206O#96O#206!2O#194O#213O#194O#96O#194O#206O#193O#156O#187O#213O#206!2O#194O#216O#202O#141O#205O#154O#174O#195O#165!3O#195O#164O#210O#91O#151O#51O#162O#68O$#21_#20_#17_#46_#160_#46_#78_#143_#16_#78!3_#95_#113_#143_#78!2_#113_#16_#113_#46_#113!4_#46!2_#113_#78_#16_#46_#21_#14!2_#9_#167_#169_#2_#67_#1_#191_#143_#113_#46_#113_#13_#10_#8_#10_#8_#10_#6_#10_#6_#5!7_#6_#5_#142_#5_#73_#4_#142_#6_#8_#124_#67_#59_#61_#192_#42_#129_#162_#50_#130_#89_#137_#52_#79_#11_#106_#148_#169_#161_#125_#10_#240_#73_#246_#20_#196_#29_#196_#247_#206_#187!2_#238!2_#208!2_#203_#235_#208!4_#238_#208_#217_#216_#201_#117_#196_#70_#206!3_#47_#206!5_#217_#206!2_#221_#108_#193_#91_#133_#66_#95_#206!5_#200_#206!12_#244_#183!3_#206!2_#47_#206!7_#244_#70_#47_#206!3_#194!3_#70_#206_#204_#217_#194_#96_#202_#194!2_#200_#206_#200_#213_#194!3_#200_#96_#201_#213_#69_#213_#202!4_#204_#154_#174_#165!2_#208!2_#152_#90_#164!2_#64_#146_#192_$-#21!2@#18@#21@#16@#78@#143@#16@#113@#78@#113@#78!3@#143@#78!3@#113!4@#19@#113!2@#18@#16@#78!2@#46@#16@#46@#13@#117@#79@#160@#113!6@#78@#113@#46@#16@#13@#5@#10@#5@#10@#6@#10@#142@#5!5@#6@#5!2@#6@#5!2@#6@#4@#6@#5@#75@#31@#137@#148@#42@#167@#106@#3@#36@#130@#191@#89@#191@#63@#129@#79@#125@#252!3@#251@#21@#28@#70@#20@#196!2@#194@#206!2@#200@#246@#176@#235@#208@#238!3@#208!3@#238@#208@#217@#194@#239@#117@#196@#47@#206!3@#96@#206!6@#69@#41@#247@#206!2@#224@#128@#92@#90@#135@#64@#47@#206!2@#200@#206!13@#220@#247@#183!2@#206!3@#194@#206!3@#47@#244@#47!2@#206!3@#194@#213@#194@#202@#194@#213@#194!3@#202@#41@#194@#96@#194@#47@#194@#193@#141!2@#213@#194@#96@#47@#200!2@#96@#194@#213@#202!2@#213@#202@#205!2@#91@#152@#155@#165@#41@#178@#164@#90@#164@#90@#60@#118@$#21!3A#18A#46A#16!2A#78!2A#143A#16A#78!8A#113A#18A#46A#18A#46A#113!4A#16A#46A#16A#46!2A#160A#16A#46!4A#113A#16A#46A#18A#160A#46!2A#16A#14A#5!2A#10A#6A#10A#5!13A#73A#6!2A#8A#67A#234A#1A#167A#22A#2A#85A#234A#137A#192A#191A#174A#138A#191A#22A#251A#252!2A#125A#18A#28A#96A#29A#239A#20A#196A#206!2A#200A#206A#70A#210A#163A#238A#208!4A#236A#208A#217A#194A#47A#20!2A#183A#69A#206!4A#96A#206!2A#200A#206A#158A#70A#206A#194A#201A#70A#69A#206A#213A#155A#136A#65A#66A#174A#200A#206!14A#47A#183!2A#70A#206!3A#194A#206A#47A#206A#183A#47A#70A#206!2A#194A#247A#216A#217A#202A#194!4A#204A#202A#200!2A#68A#41A#194!2A#204A#141A#202A#96A#141A#202A#213A#194!2A#141A#213A#194A#200A#194A#213A#202A#205A#216A#202A#205A#195A#164A#208A#165!3A#195A#185A#90!2A#105A#118A$#18!2C#21!2C#18C#16C#78C#113C#16!2C#78C#46C#95C#78C#95C#78C#143C#113C#160C#46!2C#18C#16C#113!3C#19C#46C#18C#16C#46!2C#18C#160C#113C#16C#18C#16C#46C#113!2C#46C#16C#18C#16C#46C#16C#13C#10C#5C#10C#8C#5!14C#6C#167C#75C#12C#88C#128C#12C#148C#130C#87C#162C#148C#209C#62C#106C#123C#58C#132C#167C#125C#161C#125C#25C#47C#69C#247C#196C#20C#196C#247C#206!4C#200C#247C#163C#238C#208C#238C#208!2C#217C#204C#213C#29C#196C#183C#69C#206!9C#47!3C#239C#201C#206C#70C#29C#183C#96C#206!2C#194C#212C#138C#93C#47C#200C#206!12C#220C#183C#29C#70C#200C#206C#69C#206C#47C#247C#183!2C#47C#206!2C#194C#201C#176C#210C#193C#204C#202C#217C#41C#165C#216C#141C#217C#210C#194!2C#200C#216C#217!2C#205C#202C#107C#213C#141C#107C#194C#206!2C#194!2C#213C#206C#194C#213C#202!2C#213C#202C#41C#164C#195C#210C#165!2C#186C#203C#90C#163C#164C#30C$#18G#21G#18!2G#21G#18G#160G#16G#78!2G#95G#16G#78G#113G#78!4G#16!3G#113!5G#18G#46!2G#16G#46G#16G#46G#113!2G#16!2G#113G#18G#16G#46!2G#16G#160G#46G#18G#16G#46G#13G#10!3G#5!9G#6G#5!3G#6G#88G#61G#57G#67G#57G#162!2G#120G#99G#54G#130G#42G#192G#123!2G#57G#104G#57G#2G#161G#253G#46G#29G#28G#47!2G#247G#20G#247G#183G#206!3G#200G#206G#202G#163G#235G#165G#238G#208G#217G#213G#247G#29G#247G#70G#206!5G#69G#96G#206G#47G#70G#47G#244G#206!3G#187G#213G#183G#70G#183G#247G#183G#69G#206G#96G#222G#64G#147G#200G#206G#200G#206!8G#47G#183!3G#206!3G#69G#206G#47G#247G#194G#47!2G#206!2G#217G#156G#163G#205G#193G#217G#165!2G#204G#205G#41G#217G#41G#194G#141G#165G#217G#194G#202G#194!2G#107G#193G#141G#41G#68G#216G#183G#206!3G#96G#213G#194G#206G#193G#141G#213G#205G#141!2G#163G#152G#165G#186G#165!2G#210G#152G#90G#185G#61G$#23O#17O#19O#17O#18O#21O#16O#78O#113O#78!3O#143O#113!2O#78!2O#113O#143O#160!2O#113!3O#19O#113O#46O#18O#113O#46O#18O#13O#46O#16O#78O#113O#18O#160O#16O#113O#46O#18O#160O#46O#18O#160O#46!2O#16O#13O#8O#14O#5!3O#10O#6O#5!7O#167O#52O#132O#58O#61O#51O#120O#57O#59O#171O#51O#33O#111O#128O#93O#123O#59O#56O#33O#162O#80O#161O#125O#18O#113O#183O#96O#70O#47O#239O#247O#96O#200O#206O#200O#206!2O#47O#163!2O#238O#247O#213O#247O#244O#29O#96O#206O#69O#96O#206O#194O#96O#47O#194O#206!5O#200O#206!2O#200O#41O#213O#183!2O#213O#108O#183O#247O#194O#206O#216O#65O#89O#206O#200O#206!7O#70O#244O#183!2O#220O#206!3O#47O#206!2O#47O#213O#247O#47O#206O#141O#187O#163O#217O#141O#208O#41O#179O#141O#204O#202!2O#213O#141O#217O#41O#204O#213O#203O#153O#41O#182O#141O#204O#202O#194O#206!3O#200O#206O#194O#206!2O#194!2O#96O#206!2O#194O#213O#202O#216O#41O#164!2O#210O#208O#165!2O#195O#90!2O#140O$#39_#18_#17_#18_#21_#18_#113!2_#78!3_#113!2_#78!2_#143_#78!2_#16_#160_#13_#113!4_#19_#18_#46_#18_#46_#113_#16!3_#13_#16!2_#113_#46!2_#16!6_#113_#16_#113_#13_#14_#10_#5_#10_#5!9_#148_#63_#93_#58_#54_#36_#57_#171_#130_#52_#57_#130_#106_#76_#191_#192_#61_#162_#33_#59_#67_#9_#125_#10_#196_#29_#240_#39_#47!2_#108_#29_#69_#206_#200_#206_#200!2_#206_#201_#239_#202_#213_#196_#247!2_#206_#69_#70_#206_#47_#247_#239_#47_#206!4_#70_#47_#206!2_#47!2_#247_#20_#239_#183_#247!2_#183_#47_#206!2_#200_#182_#164_#174_#69_#200!2_#206!2_#70_#206_#244!3_#183!2_#206!4_#70_#206_#70_#206_#246_#201_#206_#194_#165_#174_#203_#204_#205_#188_#205_#204_#188_#217_#41_#217_#202_#188_#202_#204_#217_#202_#141!2_#210_#222_#154_#156_#189_#194_#206_#96_#213_#47_#202_#213_#107_#194_#206!2_#200_#206!4_#96_#213!2_#141_#208_#156_#185_#203_#208_#165_#178_#91_#90!2_$-#25!2@#18!3@#21@#18@#143@#16@#113@#78!2@#143@#113@#78@#143@#113@#78@#143@#160!3@#113!3@#46@#18@#113@#46!2@#18@#16@#143@#160@#13@#16@#78@#113@#16@#18@#160@#16!2@#160@#16@#46@#16@#113@#46!2@#13@#5@#10@#5@#10@#5!5@#10@#72@#59@#66!2@#54@#120@#32@#88@#111@#148@#59@#57@#130@#12@#11@#22@#192@#93@#33@#56@#57@#171@#124@#4@#13@#247@#244@#28@#117@#240@#29@#47@#96@#206!2@#200@#206!3@#200@#206@#247@#239@#247@#196@#247@#69!2@#206@#96@#206@#194@#183@#96@#206!5@#47@#194@#70@#206@#183@#196!3@#29@#213@#47@#39@#183@#96@#206!3@#200@#68@#122@#165@#206@#200@#206!4@#244!2@#183!2@#206!8@#213@#201@#127@#246@#194@#163@#156@#208@#204@#194@#179@#188@#205@#41@#202@#217!2@#205@#217@#202@#217@#202@#217@#205@#213@#200@#41@#141@#165!2@#195@#194@#206!4@#96@#194@#41@#203@#189@#206!7@#194@#141@#181@#202@#41@#164@#174@#153@#186@#165@#238@#164@#90@$#23A#24A#18!4A#46A#18A#16A#143A#113A#78!3A#113!2A#78A#16A#46A#128A#129A#46A#113!4A#46A#113A#18A#16A#113A#127A#88A#76A#13!2A#16!7A#160!3A#16A#113A#46A#113A#16A#15A#5A#11!2A#5A#10!3A#5A#11A#149A#243A#60A#33A#54A#67A#109A#128A#130A#101A#98A#42A#79!2A#159A#148A#192A#59A#51A#234!2A#2A#7A#117A#20!2A#244A#183A#47A#240A#142A#240A#183A#206!2A#200A#206A#200A#206A#70A#247A#196!3A#183A#70A#69A#206A#70A#213A#239A#246A#96A#206!5A#70A#47A#206A#47A#29!2A#196A#29A#196A#239A#106A#187A#206!2A#47A#206!3A#200A#202A#92A#153A#206!5A#244A#183A#47A#69A#206!5A#158A#206A#47A#246A#239A#216A#193A#89A#174A#152A#188A#193!2A#178A#208A#152A#208A#188A#205A#195A#208A#179!2A#204A#213A#189A#194!2A#222A#181A#202A#194!2A#222A#201A#194A#206!7A#178A#187A#206!4A#200A#206!4A#202A#216A#41!2A#203A#140A#164A#195A#165A#163A#105A$#23!3C#19C#18C#46C#21C#18C#143C#16C#78!2C#113C#78!3C#143C#78C#143C#127C#143C#18C#113!3C#19C#18C#113!5C#76C#160C#13!2C#16!4C#78C#16!2C#160C#16C#160!3C#16!2C#113C#13C#11C#5!3C#10C#6C#12C#88C#162C#150!2C#120C#104C#54C#130C#124C#130C#101C#93C#128C#76C#11!2C#128C#130C#149C#98C#234C#7C#43C#12C#11C#117C#20C#196!2C#247C#69C#244C#4C#249C#8C#117C#183C#200!2C#206C#244C#196C#246C#23C#196C#247C#69C#206!3C#183C#196C#239C#96C#70C#206!5C#247C#206C#244C#247C#183C#247C#20!2C#221C#196C#41C#181C#194C#141C#194C#206!2C#200C#206C#181C#59C#192C#200C#206!7C#200C#206!5C#200C#213C#201C#202C#194C#200C#186C#157C#165C#204C#217C#195!2C#238C#195C#238C#236C#152C#163C#152C#91C#208C#203C#222C#194!3C#205C#203C#210C#213C#200C#206!6C#200C#206!2C#200C#206C#193C#187C#194C#206!10C#216C#181C#41C#165C#136C#227C#195C#203C#140C$#23G#24!2G#117G#46G#18!2G#46G#16G#78!2G#143G#78!2G#143G#46G#16G#78G#113!2G#46!2G#19G#46G#18G#46!2G#113!3G#19G#18G#113!2G#160G#13!3G#16G#78G#46G#16G#160G#13G#46G#16G#13G#46G#16G#113G#143G#160G#14!3G#12G#2G#120!2G#54G#51G#98G#103G#54!3G#104G#57G#149G#129G#111G#12G#77G#15G#22G#93G#60G#56G#1G#88G#4G#142G#8G#240G#20!2G#196G#29G#206!3G#240G#249G#142G#251G#240G#70!2G#196!4G#29G#47G#69G#206!2G#96G#183G#29G#182G#94G#27G#206!5G#47G#206G#213G#29G#108G#196!4G#108G#96G#181G#41G#189G#213G#206!4G#194G#181G#192G#209G#200G#206!12G#96G#70G#213G#141G#193G#181G#153G#164G#163G#180G#165!2G#208G#238G#228G#195G#152G#91G#152!2G#236G#195G#41G#141G#194G#141G#195G#203G#202G#217G#202G#96G#200G#206!2G#200G#206!2G#200G#206!6G#210G#47!2G#206!4G#200G#206!4G#200G#96G#213G#155G#91G#157G#64G#152G#211G$#23!3O#18O#19O#18!3O#113O#78!4O#16!3O#113O#78!2O#113O#46O#18O#46O#19O#18O#46O#19O#18O#113!6O#46!2O#16O#13!2O#160O#13O#16!3O#160O#117O#46O#16O#143O#16O#18O#19O#127O#2O#101O#120O#104O#66O#93O#22O#127O#160O#127O#129O#22O#129O#22O#159O#79O#127O#106O#80O#22O#106O#171O#56O#104O#54O#67O#249O#142O#127O#247O#196O#20O#183!2O#70O#206!3O#247O#142O#251O#142!2O#240O#246O#20O#196O#20O#244O#96O#206O#200!2O#47O#244O#196!2O#239O#95O#194O#206!2O#69O#70O#206!2O#247O#29O#67O#191O#29O#247O#108O#70O#194O#210O#203O#141O#96O#206!5O#194O#89O#176O#187O#107O#200O#206!9O#96O#201O#106O#141O#193O#194O#174O#195!2O#208!2O#203O#208O#238O#208!2O#185O#163O#236O#163O#236O#163O#210O#179!2O#208O#203O#153O#165O#202O#213O#47O#206O#194!2O#206!3O#200O#206!8O#165O#194O#206!7O#200O#206!2O#200O#206!2O#216O#41O#203O#232O#245O#227O$#23!4_#18!2_#46_#18_#113!2_#78_#113_#78_#113_#78!3_#143_#113_#78!3_#113_#18_#46_#18_#46_#113!8_#18_#13!4_#160!2_#16!3_#160_#16_#160_#46_#113_#76_#9_#57_#85_#104_#60_#209_#22_#160_#13_#117_#16_#17!3_#18_#160!2_#22_#130!2_#42_#106_#93_#243_#134_#58_#148_#43_#142_#113_#183_#29!2_#47_#200_#206_#69_#200_#206_#200!2_#29_#249_#8_#240_#113_#29!3_#39_#206!4_#244_#239_#29_#108_#196_#47_#200_#206_#69_#206!3_#47_#29_#196_#239_#95_#182_#108_#39_#96_#194_#153_#210_#194!3_#200_#206!4_#90_#184_#68_#200_#147_#239_#206!4_#200!4_#182_#209_#210_#141!2_#190_#195_#180_#141_#208_#179_#228_#238_#208!2_#238!2_#208!4_#228_#238_#41_#222_#203_#195!2_#41_#194_#206!2_#200!2_#206_#202_#247_#206!8_#200!2_#194_#41_#206_#200_#206!8_#200_#206!3_#200_#194_#155_#152_#241_#102_$-#23!2@#38!2@#23@#21@#18!2@#19@#18@#143@#16@#78!2@#113@#78@#95@#16@#113!2@#78@#113!5@#19@#18@#113!5@#19@#113@#46!2@#13@#16@#13!3@#46@#16!3@#78@#113@#19@#143@#31@#84@#102@#62@#89@#12@#22!2@#10@#8@#10!2@#240@#4@#67@#162@#52@#61@#191@#106@#137@#89@#130@#103@#149@#67@#106@#12@#142@#20@#247@#183@#196@#69@#206@#200@#206!4@#20@#240@#142@#240@#117@#247@#183@#29@#183@#96@#200@#206!2@#183@#196!2@#29@#183@#29@#194@#206@#200@#183@#29@#206!2@#47@#196!3@#183!2@#69@#70@#194@#96@#216@#203@#193@#194!2@#206!3@#200@#206@#194@#156@#179@#27@#200@#27@#209@#156@#200!2@#206!2@#158@#47@#106@#223@#179@#200!2@#179@#131@#64@#89@#193@#41@#208@#238@#228@#236@#208!3@#165@#208!4@#205@#222@#165@#163@#208@#141@#194@#206!2@#200@#206!2@#69@#206@#194@#141@#204@#194@#206!6@#194!3@#200@#206!11@#200!4@#206@#204@#190@#119@$#23A#24A#23!2A#24A#18!4A#46A#18A#160A#113A#143A#78A#113!3A#78!4A#113!3A#19A#46A#113!8A#18!2A#16A#13!5A#16A#143A#16A#113A#127A#124A#85A#86A#51A#148A#67A#97A#74A#9A#110A#44!2A#110A#3A#52A#184A#62A#137A#138A#191A#123A#106A#209A#130!2A#42A#128A#167A#142A#8A#20A#247!3A#70A#206!5A#117A#249!2A#117A#221A#247!3A#29A#247A#69A#206!2A#200A#47A#247A#108A#183!2A#29A#96A#206A#200A#247A#20A#96A#206A#183A#96A#206!5A#200A#193A#41A#153A#141A#194!2A#206A#194A#206!4A#200A#68A#153A#182A#141A#206!2A#147A#153A#47A#244A#183A#244A#196A#182A#223A#208A#193A#194A#91A#203A#140A#62A#103A#90A#180A#179A#238A#208A#62A#174A#195A#208A#205A#222A#41A#205A#180A#208A#163A#165A#204A#213A#194A#206!3A#70A#206!3A#70A#206A#194A#216A#217A#202A#213A#194A#206!16A#200A#206A#200A#206A#200A#206!4A#153A$#18C#23C#24C#23C#24C#18!2C#21C#18!2C#46C#16!2C#113C#78!2C#113C#78!3C#143C#113C#143C#46C#18C#46C#18C#46C#19C#113!6C#46!2C#113C#16C#13!4C#78C#16C#78C#76C#171C#85C#102C#93C#129C#12C#22C#77C#8C#11!2C#22C#76!2C#11C#22C#76C#22C#13C#14C#12!2C#8C#22C#79C#117C#22!2C#117C#246C#196C#247C#183C#247C#28C#69C#70!2C#206C#183C#251!2C#221C#183!2C#29C#247C#29C#183!2C#206!4C#47C#244C#247C#39C#247C#108C#69C#206!2C#244C#108C#69C#200C#183C#70C#206C#47C#70C#47!2C#206C#141C#210C#238C#202C#206!2C#200C#206!3C#200C#206!3C#187C#179C#68C#108C#47C#213C#183C#196C#20C#196C#23C#29C#182C#157C#203C#193C#141C#140C#174C#200C#193C#163C#190C#140C#65C#153C#189C#203C#90C#91C#228C#179C#165C#194C#193C#208C#152C#195C#179C#222C#194C#206C#200C#206!4C#70C#206C#70C#206!2C#70C#206C#70C#194C#183!3C#47!3C#206!6C#200C#206!6C#200C#206!7C#200C$#24G#18G#24G#23G#25G#23G#18!2G#113G#18!2G#113!4G#78G#113G#78!5G#113G#16G#113G#46G#18G#46G#18G#113!6G#18G#46!2G#113G#160G#13G#15G#13!3G#127G#130G#86G#102G#130G#76G#15G#13!2G#14G#11G#14G#112G#14G#112G#14!4G#10G#14G#15G#14G#11G#125G#10G#38G#20G#196G#246G#29G#47G#246G#247G#70G#69!2G#47G#206G#70G#196G#240!2G#108G#29G#216G#247G#28G#69!2G#200!3G#206G#183G#196G#244G#108G#183G#247G#70G#206!2G#183G#196G#239G#206G#96G#47G#183!2G#247G#213G#183G#213G#217G#210G#217G#204G#206!3G#200G#206!5G#200!2G#206G#155G#191G#189G#108G#38G#29G#247G#39G#70G#196!2G#216G#123G#164G#200G#180G#140!2G#212G#222G#216G#194G#41G#195!2G#174G#179G#181G#178G#208!2G#41G#193G#222G#203G#140G#208G#202G#194G#206!4G#183G#47!4G#206!3G#70G#206G#47G#206!2G#70G#47G#244G#29G#247!2G#183G#206!6G#47G#206!4G#200G#206!9G$#24O#23O#24O#23O#24O#23O#18!2O#21O#18!3O#19O#46O#113!2O#78O#143O#113O#78!5O#113!3O#46!2O#113!7O#46O#18O#16O#46O#13!4O#16O#148O#86!2O#67O#15O#14O#13O#79O#112O#14!2O#10!3O#14!2O#10O#14!2O#13O#11O#14!2O#8O#253O#240O#38O#247O#221O#196O#108O#183O#18O#240O#5O#20O#183!2O#244O#117O#142O#20O#183O#29!2O#247!3O#183!2O#28O#183O#47O#183O#244O#108O#183!3O#69!2O#183O#108O#239O#183O#206O#47O#247O#183O#28O#183O#47O#213O#182O#41!2O#202O#217O#213O#206O#200O#206O#200O#206!2O#200O#206!2O#200O#206!2O#183O#153!2O#47O#183!2O#69!2O#206O#183O#216O#209O#210O#193O#179O#140O#174O#179O#188O#90O#41O#200O#193O#41O#208O#238O#164O#91O#193O#217O#179O#204O#41O#155O#208O#165O#194O#96O#206!3O#220O#183!4O#47O#194O#70O#47O#206!2O#70O#206!5O#247O#196O#29!2O#244O#196O#29!2O#196!2O#244O#196O#244O#47O#206!4O#200O#206!7O$#23!3_#24_#23_#24_#23_#18!2_#21_#18!3_#78!2_#113!4_#78!2_#143_#16_#46_#78_#143_#46_#18_#113!8_#46!5_#21_#13_#16_#76_#99_#86_#88_#127_#14_#13_#240_#10_#14!3_#10!2_#14!8_#79_#14_#6_#161_#252_#251_#79_#196_#70_#13_#142!2_#125_#254_#142_#20!2_#240!2_#29_#247_#216_#29_#247!2_#29_#108_#247!2_#29_#247!3_#183_#27_#183_#96_#69_#206_#183_#47_#247_#47_#206_#47_#183!2_#70_#183!2_#206_#194_#204_#179_#217_#194!2_#206!9_#200_#206_#244_#247_#196_#108_#224_#47_#206!4_#70_#141_#93_#154_#222_#179_#174!2_#41_#155_#156_#41_#194_#202_#194_#193_#202_#208_#163_#152_#164_#193_#200_#165_#208_#41_#202_#206_#200_#206!3_#183!2_#47_#183!2_#47_#206!4_#47_#206!7_#247_#244_#29!2_#247!2_#29!2_#247_#244_#247_#29_#247_#244_#47_#200_#206!4_#200_#206!5_$-#18@#23!3@#25@#23@#38@#18@#17@#21@#18@#21@#113@#19@#113!4@#78@#143@#16@#113@#78@#46@#16!2@#46@#95@#46@#19@#113!6@#19@#18@#46@#18@#46!2@#78@#127@#234@#54@#42@#160@#13!3@#14!17@#73@#252@#250!2@#254@#160@#79@#254@#251@#125@#254@#142@#13@#21@#117@#20@#196@#29!2@#196@#244@#108!2@#247!5@#108@#39@#47@#70@#194@#69@#200@#206@#183@#47@#29@#47@#69@#47@#183@#27@#213@#183@#47@#27@#213@#194@#141@#217@#69@#206!10@#200@#206@#244@#247@#196!2@#20!2@#221@#96@#200!2@#206@#47@#170@#153@#193@#188@#179@#180@#193@#195@#52@#41@#107@#217@#141@#189@#204@#193@#96@#208@#203@#92@#186@#189@#179@#217@#107@#206!5@#183!2@#47!2@#194@#206!2@#70@#206@#47!2@#206!12@#47@#70@#206@#47@#247!2@#29!4@#247@#47@#206@#200@#206@#200@#206!6@$#23A#18A#23!2A#24A#38A#25!2A#18A#21!2A#18!3A#113!3A#78A#113A#78A#113A#78!2A#15A#46A#78A#129A#59A#127A#21A#113!6A#46!2A#18A#46!2A#18A#113A#130A#53A#192A#143A#13!5A#14!2A#112A#14!12A#79A#249A#125A#5A#8A#142A#254A#250A#125!2A#254A#14A#18A#20A#117!2A#196A#29!4A#216A#196A#29A#247A#29A#39!2A#70!2A#69A#206!5A#47A#247A#196A#183A#206A#96!2A#47!3A#96A#206!2A#165A#141A#205A#202A#200A#206!11A#244A#29A#196!4A#247A#47A#96A#183A#29A#68A#215A#176A#189A#153!2A#193A#41A#190A#153A#186A#200A#205A#189A#193A#213A#204A#194A#200!2A#155A#152A#65A#164A#217A#194A#200A#206!2A#69A#47A#183A#47A#206A#194A#206!2A#47A#70A#183A#47!2A#206A#47A#206!17A#183A#247A#29A#247A#196A#29A#244A#206!6A#200A#206!2A$#18C#23!2C#24C#23C#38C#23!3C#21C#18!3C#16C#18C#113!2C#78!6C#143C#78!2C#127C#191C#224C#18C#113!6C#18C#46C#18C#46C#18C#143C#46C#52C#62C#127C#17C#46C#21C#13!4C#14!12C#79C#14C#10C#6C#5C#196C#18C#113C#142C#125C#10C#240C#13C#117!3C#20C#29C#247C#29!2C#239C#29C#196C#247C#39C#28C#69!2C#206C#96C#206!4C#69C#206C#183C#29C#196C#183C#206C#96C#69C#70C#194C#206!3C#194C#141C#153C#193C#216C#194C#206!3C#47C#183!2C#206C#70C#206!3C#196!3C#29C#183C#47C#183!2C#244C#196!2C#108C#237C#65C#194!2C#179C#41C#193C#174C#140C#205C#193C#180C#205C#189C#195C#188C#200C#96C#194C#206C#193C#141C#163C#92C#141C#200C#206C#200C#206C#183C#47C#206!3C#70C#47C#244C#47C#183C#70C#206!16C#200C#206!4C#200C#206C#96C#47C#69C#183!2C#247C#47C#206!7C$#23!2G#24G#23G#25G#18G#38G#19G#187G#174G#209G#127G#18G#113G#19G#17G#113G#78G#143G#113G#78!2G#143G#113G#78G#143G#113G#19G#21G#46G#113!6G#46!2G#18G#160G#46G#17G#127G#52G#37G#113G#46G#18G#160G#46G#21G#13!4G#112G#14!7G#79G#10G#14G#4G#142G#117!2G#196!3G#20G#38G#196G#244G#196G#117G#246G#196!3G#29G#239G#196!2G#216G#29G#39G#96G#206G#47G#96G#206!5G#96G#70G#183G#29G#196G#69G#206G#69G#206G#70G#206!3G#194!2G#201G#195G#204G#200G#194G#206!3G#244G#247G#47G#183G#70G#206!3G#196!2G#183G#70G#206!2G#70G#196G#20G#196!2G#108G#164G#90G#140G#222G#228G#186G#193G#165G#174G#205G#193G#205G#203G#178G#152G#238G#179G#205G#141G#194!2G#200G#96G#208G#151G#141G#206!4G#47G#206G#47G#183!2G#47!2G#206!21G#200G#206!4G#200G#206G#200!2G#206!2G#70G#183G#47G#200G#206G#200G#206!3G$#38!3O#24O#126O#25O#20O#138O#243O#242O#166O#127O#18!4O#113O#16O#113O#78!6O#143O#46O#18O#46O#19O#46O#18O#113!4O#18O#46O#113!3O#143O#128O#191O#19O#113!2O#46!2O#18O#46!2O#16O#13!3O#14!6O#79O#10O#14O#142O#6O#10O#109O#240O#183O#29!3O#247O#29O#239O#108O#29!2O#196O#246O#196O#29O#213O#183!3O#70!2O#96O#70!2O#206!4O#194O#70O#47O#29!2O#183O#206!6O#70!2O#47O#247O#41O#205O#195O#194O#206!4O#183!2O#47!2O#206!4O#47O#244O#206!3O#47O#244O#196!2O#239O#29!2O#141O#123O#211O#208O#212O#177O#163O#181O#156O#41O#194O#205O#195O#91!2O#236O#165O#141O#92O#190O#153O#222O#200O#193O#165O#203O#141O#200O#206!2O#47!2O#244O#47O#70O#206!21O#200O#206!4O#200O#206!10O#29O#70O#200O#206!4O$#38!2_#25!2_#24_#25_#20_#164_#241_#133_#176_#18_#21_#18!2_#46_#18!2_#16_#143_#113_#78!4_#16!2_#113!2_#18_#46_#113!5_#46_#18_#113!2_#19_#129_#67_#19_#18_#113!3_#46_#21_#46_#18_#46_#21_#16_#13!2_#14!6_#10_#249_#73_#10_#73_#142_#73_#20_#247!2_#196_#29_#108_#29!3_#182_#7_#128_#108_#47_#69_#96_#69_#47_#206_#96_#70_#206!5_#47_#206_#183_#29_#183_#206!8_#47_#206_#204_#165_#203_#141!2_#206!4_#183!3_#206!4_#200_#206_#70_#206!2_#70!2_#69_#183_#96!3_#69_#107_#205_#189_#152_#195_#188_#163_#180_#92_#178_#193_#179_#165!2_#236_#185_#164_#41_#200_#193_#222_#203_#41_#208_#222_#206_#194_#206!2_#69_#183!2_#47_#70_#206!12_#47_#206!2_#244_#206!2_#47_#206_#47_#206_#70_#206!2_#200_#206!4_#200_#206!2_#200_#206!6_#247_#69_#206!4_$-#38!2@#126@#24@#25@#38@#24@#19@#187@#20@#19@#18@#21@#18!2@#21@#18!2@#113@#16@#113@#78!5@#143@#46@#18@#46@#18@#19!2@#113!8@#106@#169@#113!2@#19@#113@#18@#46@#18@#16@#46@#18@#46!3@#21@#13@#117@#14@#117@#11@#9@#252!2@#73@#8@#142@#9@#73@#6@#39@#183!2@#108@#247@#29@#108@#29!2@#182@#216@#183!2@#47@#70!2@#47@#206!8@#183@#247@#183@#206!5@#200@#206!2@#70@#47!2@#213@#202@#41@#193@#194!2@#206@#200@#194@#183!2@#47@#206!10@#70!2@#47@#194@#206@#200@#69@#194@#164@#210@#200@#180@#195@#188@#186@#193@#194@#193@#194@#178@#152!2@#153!2@#217@#200@#222@#216@#194@#200@#193@#217@#213@#200@#206@#200@#69@#196@#183@#70@#206!8@#70@#47@#70@#47!4@#244@#70@#206@#47!2@#244@#47@#244@#47!2@#206@#70@#206@#70@#206@#244@#206@#47@#206@#47@#206!8@#69@#206!4@$#38!2A#25A#24!2A#126A#25A#24A#25A#23!2A#17A#18A#46A#21A#18A#21A#18!3A#78!3A#143A#78!2A#16A#46!2A#19A#18A#113A#19!2A#18A#113!3A#46A#113A#76A#22A#19A#113A#19A#113!3A#46!2A#113!4A#18A#46!2A#16A#14A#117A#15A#251A#252A#250A#249A#6A#251A#125A#249A#73!2A#29A#183A#47A#183!2A#70A#183!3A#47!2A#183A#47A#206A#47A#206A#70A#206!6A#183!3A#69A#206!4A#200A#206!2A#47A#244A#183A#47A#217!2A#202A#194!2A#69A#206A#194A#183!2A#47A#206!5A#200!2A#206!4A#47!4A#206!2A#200A#193A#153A#238A#180A#179A#193A#186A#164A#208A#41!2A#178A#152A#90A#163A#238A#141A#222A#41A#195A#91A#195A#194A#200A#206!4A#200A#206!2A#70A#206!7A#70!3A#206A#47A#206A#47A#206A#47A#206A#47!6A#206A#47A#206A#244A#47!6A#244A#183!2A#47A#244A#47A#206!4A#200A#206!6A$#25C#38C#126C#25!3C#24C#38C#25C#24!2C#18!2C#21C#18C#21C#18C#21C#18!2C#113!2C#78!5C#16C#113!2C#19!3C#18C#113!6C#12C#128C#19C#113!4C#19C#18C#46C#113C#19C#18C#46C#18C#46C#18C#160!2C#14C#10C#9C#251C#142C#112C#117C#79C#5C#251C#249C#73C#113C#29C#183C#47!5C#183C#47!3C#96C#70C#206!7C#70C#47C#244C#206!8C#183C#244C#183C#69C#213C#217C#202C#194!2C#96C#69C#206!2C#183!2C#206!12C#244!2C#47C#70C#206!2C#247C#141C#156C#208C#180C#208C#165C#181C#187C#195!2C#236C#152!2C#163C#208C#205C#193C#141C#179C#153C#163C#208C#194C#200C#206!3C#200C#206!6C#244C#47!2C#183C#244C#196C#29C#244C#183C#244C#47C#183C#47!12C#183C#47C#206!6C#47!3C#244C#47C#183C#47C#206!10C$#18G#38G#25!2G#18G#25G#24G#25!2G#24G#25G#23G#18!2G#17G#18G#21G#18!2G#46G#18G#113!2G#78G#15G#143G#78!2G#113!3G#18G#19G#113G#19!3G#113G#46G#113G#159G#43G#20G#19G#113!2G#19G#21G#46G#18G#46G#18G#46G#113!2G#46!2G#18G#46G#13G#240G#13G#21G#20!3G#247G#29G#38G#21G#240G#196G#246G#108G#47G#183!2G#47G#183G#96G#183G#47G#206!9G#47!3G#206!5G#200G#206G#183G#29G#183G#47G#96!2G#217G#202G#194G#69G#70G#47G#70G#206G#183G#70G#206!10G#200G#206G#244G#69G#47G#206G#200G#194G#68G#165G#203G#195G#179G#208G#238G#222G#156G#153G#188G#210G#154G#178G#179G#141G#193G#181G#164G#174G#210G#194G#193G#200G#206!10G#70G#47G#247G#196!3G#29!2G#196G#239G#247!2G#196G#247!3G#244G#247G#244G#247G#183G#47!2G#244G#47G#206!4G#47G#244G#206G#47G#206!2G#47!2G#206G#183G#47G#183!2G#47G#206!2G#200G#206!5G$#112O#21O#25O#38O#25O#24!2O#18O#25O#38O#25O#23O#18O#21O#18O#21O#18O#21!2O#18O#21O#18O#113!2O#78O#113O#78O#143O#78O#143O#46O#113O#19!3O#18O#113O#19O#113!2O#167O#127O#126O#18O#113!2O#18O#46O#18O#113O#46O#18O#113!4O#18O#160O#46O#18O#14O#13O#38O#47O#247O#29O#38O#196O#70!2O#247O#183O#247O#29O#183O#70O#96O#47O#96O#70O#206!19O#183!3O#47O#69O#216O#155O#187O#222O#194O#47O#70O#69O#206!2O#47O#206!10O#200O#206O#70O#244O#69O#70O#206!2O#205O#169O#92O#208O#179O#208!2O#238O#188O#210O#52O#186O#193O#194!3O#193O#189O#188O#174O#195O#41O#206!2O#200!2O#206O#69O#206O#200!2O#206!2O#69O#183O#244O#196O#239O#187O#156O#239O#196O#29O#196O#29!2O#196O#29!3O#196O#239!2O#196O#239O#29O#247O#244O#47O#206O#47O#244O#206O#47O#206!10O#47O#183!4O#244O#70O#206!6O$#18_#16_#17_#126_#25_#24!2_#25_#38_#24_#38_#23_#38_#18_#21_#18_#21_#18!2_#21_#18!3_#46_#16_#78!3_#113_#127_#143_#46_#18_#19_#18_#113_#19!3_#16_#97_#46_#18_#113!5_#46_#113!5_#18_#46!2_#18_#160_#46!2_#240_#79_#45_#70_#69_#206!4_#200!2_#206!4_#200_#206_#200_#206!2_#70_#247_#206_#69_#206!4_#244_#206!8_#183!3_#206_#239_#217_#182_#208_#141_#96_#183_#213_#206!2_#194_#206!14_#47_#206_#70_#206_#200_#210_#209_#210_#208!3_#217_#179_#188!2_#138_#164_#165_#164_#91!2_#195_#163_#174_#90_#203_#222_#206!2_#200_#206_#183_#70_#206!2_#69_#247_#183_#196_#29_#196_#182_#123_#58_#103_#121_#239_#196_#29_#239_#29_#196_#216_#196_#29_#239_#247_#239_#247_#239_#247_#196!3_#247_#244_#194_#206_#183_#47!2_#206!12_#47!2_#183!2_#244_#183!2_#206!3_$-#23!2@#18!3@#24!2@#23@#24@#38@#25@#23@#38@#23@#18@#17@#18@#21@#18!2@#113@#21@#18!2@#46@#16@#78!3@#143@#111@#15@#113!3@#19@#18!2@#113@#16@#26@#95@#18@#113!2@#19@#18@#46@#18@#113!3@#19@#46!2@#18@#46@#18@#46!4@#13@#10@#19@#200!3@#206@#200@#206!3@#200@#206@#200@#206!2@#183!2@#196@#247@#206@#69@#47@#206!11@#47!2@#70@#206@#200@#246@#174@#205@#41@#194@#213@#69@#206!17@#183@#47@#206!3@#200@#41@#64@#203@#141@#222@#208!2@#178@#62@#92@#180@#190@#186@#179!2@#152@#163@#236@#153@#208@#204@#193@#200@#206!2@#70@#183@#206!2@#183@#196!6@#29@#182@#140@#164@#195@#239@#196@#29@#196@#29@#239@#247@#29!10@#196!2@#247@#183@#70@#47@#206@#47!2@#244@#206!13@#47@#183@#247!2@#183!2@#206!2@$#17A#23!2A#24A#17A#18A#23A#24!2A#25A#24A#25A#23!2A#18!2A#21A#18A#21A#113A#18A#21A#18A#113A#18A#16A#143A#78A#143A#46A#76A#46A#113!3A#19A#18A#113A#19A#46A#26A#143A#19A#113!4A#46!2A#18A#46A#18A#46A#18A#46A#18A#16A#46A#18A#46!4A#13A#113A#29A#206A#200!3A#206!6A#29A#112A#29A#18A#247A#206A#70A#69A#200!2A#206!8A#70A#206!3A#47A#70A#213A#187A#203A#194A#141A#216A#206!5A#70A#206!11A#244A#70A#206!4A#194A#159A#92A#203A#141A#179A#154A#189!2A#164A#219A#91A#179A#90A#205A#200A#189A#194A#193A#194!2A#200!2A#206!4A#47A#206A#183A#244A#196A#29!2A#196A#29!2A#196!3A#239A#196!3A#29A#239!2A#196A#29A#247A#196A#29!7A#247!2A#194A#47A#194A#70A#47!6A#200A#206!7A#200A#206A#200A#206!5A#183!2A#29A#244A#183A$#18!2C#23!3C#21C#18C#24C#25C#23C#24!2C#38!2C#23C#18!2C#46!2C#113!2C#21!3C#18C#46C#16!2C#113C#160C#113C#46C#113C#95C#18C#113C#19C#113C#19C#113C#80C#46C#19C#113!3C#19C#18C#46C#18C#46!2C#18C#46C#18C#160C#113C#46!2C#18C#16C#113C#46C#13C#8C#13C#70C#206!7C#196C#10C#13C#20!2C#183C#206C#70C#96C#200C#206C#201C#96C#206!2C#200C#206!6C#47C#244C#239C#247C#216!2C#194!2C#141C#69C#206!15C#70C#206C#69C#206!3C#47C#206C#210C#190C#91C#222C#141C#154C#138C#165C#92C#164C#178C#222C#203C#140C#188C#193C#203C#41C#200C#206!2C#200C#206!4C#183C#47C#247C#196!2C#216C#196C#29C#196C#29C#239C#29C#239C#29C#239C#196C#216C#196!3C#29!2C#196!2C#239C#196C#29C#216C#247C#183C#47C#194C#96C#70!2C#47C#70C#206C#47!2C#206C#244C#206!14C#200C#206!5C#47C#247C#29C$#24G#23!3G#24G#18G#16G#18G#25!2G#126G#24!2G#126!2G#19G#106G#65G#156G#18G#21G#18!2G#21G#18!2G#16G#78G#143G#46G#113!3G#46!2G#113G#18G#113!2G#19G#43G#9G#19G#113!2G#20G#113!5G#46G#18G#16G#113!2G#46G#113!3G#143G#37G#15G#117G#240G#113G#183!2G#70G#69G#206!2G#220G#117G#254G#240G#117G#20G#69G#206G#96G#206G#200G#194G#190G#174G#165G#200!2G#206!5G#220G#47!2G#206G#70G#194!2G#213G#206!2G#200G#206G#70G#206!12G#158G#70G#206G#47G#206!2G#47G#206G#47G#209G#164G#188G#180G#141G#208G#180G#210G#163G#203G#208G#188G#193G#165G#188G#189G#154G#152G#141G#206G#200G#206!3G#70G#183G#196G#183G#196!5G#29G#196G#239G#29!4G#239G#29G#196G#244G#239G#29G#196G#239G#196G#216G#196G#29G#183!3G#96G#206G#96G#70!2G#47!2G#206!2G#47G#206!15G#200!2G#206!4G#200G#206!2G#200G#206!2G$#18O#23!4O#24O#18O#16O#18O#38O#24!4O#18O#129O#132O#62O#76O#18O#21O#18O#21O#18O#21O#18!2O#160O#46O#16!2O#113!2O#18O#46O#113O#46O#113!2O#126O#22O#167O#19!2O#113!16O#129O#67O#79O#246O#29O#108O#244O#70O#69O#206O#244O#5O#251!2O#23O#20O#244O#206O#47O#206O#69O#200O#194O#106O#163O#178O#189O#182O#202O#206!11O#194O#206!4O#183O#206!12O#70O#206!4O#70O#240O#251O#240O#210O#219O#178O#189O#205O#165O#217O#222O#202O#208O#188O#217O#222O#210O#179O#180O#153O#165O#222O#206!4O#220O#29O#196!2O#29O#196!2O#29!2O#196O#29O#196O#216O#196!2O#239O#29O#239O#29!2O#47O#96O#196O#29O#239O#247!2O#39O#70O#96!2O#69O#206O#96O#47!2O#206O#47O#239O#246O#206!5O#47O#206O#47!4O#220O#47O#70!2O#206!2O#200O#206!7O#200O#206!4O$#18_#23!2_#17_#23!2_#24_#18_#13_#18_#38_#24_#23_#38_#113_#62_#191_#13_#46_#18_#21_#18_#21_#18!2_#21_#18_#46_#16_#113_#78_#113!3_#18_#113!3_#19_#18_#79_#115_#127_#19!2_#113_#19_#113!10_#46_#18_#16_#18_#19_#20_#112_#196_#39_#69_#247_#240_#251_#142_#251_#117_#20_#183!2_#206_#69_#206!2_#200_#141_#106_#208_#205_#193_#203_#140_#195_#194_#200_#206!6_#200_#206_#194!2_#206!2_#47_#70_#206!17_#47_#117_#142_#22_#106_#156_#180_#178_#91_#179_#208!2_#41_#208_#188!2_#222_#165_#153_#179_#174_#208_#194_#206!3_#183_#29_#196!2_#29!2_#196!2_#239_#196_#29_#239_#29_#196!2_#68!2_#196!2_#29_#39_#69!2_#247_#29_#247!2_#39_#28_#69_#206_#183_#206_#47!2_#206_#47!4_#194_#96_#206!2_#47!3_#70_#47_#206!6_#244_#206_#47_#206!6_#200_#206_#200_#206!5_$-#18@#23!6@#18!2@#46@#18@#25@#23@#38@#160@#224@#20@#18@#46@#18!2@#21@#18!2@#46@#18@#21@#18!2@#160@#78!2@#46@#113!5@#46@#18@#22@#82@#167@#20@#46@#19!4@#46@#19@#46@#113!4@#19@#46@#113!3@#4@#142@#29@#38@#117@#8@#142@#8@#117@#196@#247@#39@#183!2@#70@#206@#70@#206!2@#108@#106@#174@#179@#193@#200@#180@#163!2@#195@#194@#206@#246@#194!2@#159@#206!2@#194@#206!3@#183@#206!18@#244@#196@#20@#201@#91@#235@#188@#186@#90@#229@#163@#208@#41@#208@#217!2@#90@#174@#208@#179@#152@#217@#194@#206@#200@#206@#70@#196!3@#29@#239@#196@#29@#196!2@#29@#239@#196!2@#29@#108@#106@#159@#196@#183@#96@#206@#70@#183@#47@#70!2@#183@#69@#206@#96@#29!3@#247@#183@#47@#206@#47@#206@#47@#194@#70@#47!2@#206!3@#183@#47!5@#206!4@#47@#244@#70!2@#206@#200@#206@#200@#206!2@#200@#206!4@$#18!2A#23A#17A#24A#23!2A#24A#18A#16A#18A#23A#25A#23A#18A#38A#126A#23A#18A#17A#18A#21A#18!3A#16A#18!2A#16A#78A#113A#46A#160A#46!2A#19A#18A#113!2A#46A#19A#130A#87A#127A#20A#113A#19!2A#18!2A#46A#17A#113!3A#46A#113A#18A#113A#143A#80A#116A#79A#240!2A#79A#117A#246A#183A#244A#29!2A#183A#70A#206A#47A#206!2A#200A#206A#174A#229A#141A#193A#204A#179A#193A#204A#195A#152A#155A#188A#64A#203A#187A#213A#200A#206!4A#47A#70A#206!17A#244A#20A#196A#246A#209A#165A#212A#210A#185A#90A#211A#163A#152A#208!3A#163A#236A#180A#165A#203A#179A#194A#200A#206A#200A#206A#196!6A#239A#196A#216A#196A#29A#196!2A#29A#221A#29A#216A#213A#206!3A#183A#96A#69A#47A#96A#69A#206A#47A#244A#196A#29!2A#196A#29!2A#196A#47!3A#206A#47!2A#206A#47A#183A#247A#29A#196!2A#247!2A#47!3A#206!6A#47!2A#206A#200A#206!8A$#18C#23!2C#24!2C#23!2C#18C#23C#18!3C#38!3C#23C#24C#23C#18!4C#16C#18C#46C#16!2C#46C#18C#76C#148C#214C#143C#16C#46C#18C#46C#113!2C#18C#46!2C#94C#144C#129C#126!2C#113!2C#46C#113!3C#19C#18C#113!2C#16C#19C#171C#148C#167C#142C#239C#196C#29C#247C#244C#29C#196C#39C#96C#206C#47C#70C#206!2C#200!2C#210C#203C#141C#193C#205C#188C#91C#153C#189C#193C#205C#179C#205C#180C#222C#193!2C#206!3C#47C#183C#206!18C#244C#23C#20C#95C#209C#156C#180C#153C#90C#163C#211C#152C#211C#163C#164C#195C#188C#205C#189C#153C#195C#179C#141C#206C#200!2C#206C#244C#196!4C#239C#29!2C#196!2C#29C#196C#29C#196C#108C#183C#47C#70C#206!2C#69C#47C#70!2C#194C#69C#206C#47C#183C#196!2C#239C#196C#29C#216C#196C#29!2C#47!4C#70C#206C#244C#247C#29!2C#196C#239C#247C#196!2C#47C#206C#47!4C#206!4C#216C#159C#224C#206!8C$#18G#23G#17G#24!2G#23!2G#24!2G#23G#38G#23G#38!2G#23G#38G#23G#38!2G#18!4G#16!2G#46G#21G#16G#113G#176G#58G#192G#143G#21G#160!2G#113!6G#127G#31G#36G#2G#22G#160G#113G#19G#18!2G#46!2G#16G#113!2G#19G#12G#99G#192G#40G#29!4G#244G#239G#29G#183G#96G#70G#47G#206!4G#200G#187G#203G#217G#193G#181G#122G#180G#208G#165G#179G#68G#194G#189G#208G#163G#154G#93G#165G#41G#208G#194G#47G#206!13G#70G#206!3G#244G#23G#20G#196G#246G#203G#163G#180G#163!4G#152G#163G#164G#152G#205G#188G#141G#205G#174G#163G#179G#194G#200!2G#206!2G#47G#196!2G#29G#196G#239G#29G#196G#239G#29G#196G#29!2G#183G#47G#70G#96G#206!3G#47!2G#70G#206G#183!3G#29G#196!2G#29G#196G#29G#239G#29G#196G#29!2G#183G#194G#47G#206G#47G#206G#247!3G#196G#247!2G#196G#239G#196G#247G#196G#247G#47G#206G#47!2G#244G#206G#47G#206G#194G#201!2G#206!8G$#24O#23O#24O#18O#24O#18O#24!2O#18O#38O#25!2O#38O#23O#24O#23O#38O#18O#38O#18!3O#46O#18O#16!3O#113O#143O#46!2O#160!2O#16O#46O#113O#46O#113!4O#19O#113O#143O#167O#218O#225O#97O#76O#113O#46!2O#113!5O#12O#52O#61O#86O#138O#213O#196O#29O#239O#29!2O#70O#69!2O#70O#206!5O#187O#163O#141O#194O#188O#210O#189O#193O#194O#205O#194O#165O#41O#193O#189O#208O#180O#154O#195O#91O#62O#195O#206!11O#200O#194O#47O#206!2O#47O#196!2O#20O#196O#239O#152O#217O#222O#195O#152O#199O#236O#228O#163O#156O#163O#195O#210O#165O#205O#174O#203O#141O#194O#200O#206!2O#244O#29O#196!3O#29!2O#196O#239O#29!2O#183O#47O#96O#69O#96!2O#206!5O#47!2O#244O#247O#196O#247O#196!3O#29O#196O#29O#196!2O#29!3O#247O#183O#47O#244O#247!3O#29O#239O#247O#29!3O#247!2O#29O#196!2O#29!2O#244O#47O#206O#47O#206!4O#200!2O#206!7O#200O$#23!2_#18_#25_#18_#24!2_#18_#24_#18_#25!3_#23_#25_#23_#38!2_#18_#38_#19_#18!2_#16!2_#46_#16_#46!2_#16_#113_#143_#16_#95_#113_#78_#113_#46_#18_#113_#20_#113_#19_#21_#18_#113_#79_#225_#97_#22_#126_#18_#113!2_#19_#113_#42_#173_#63_#151_#62_#136_#41_#183!3_#70_#47_#96_#70_#47_#206!5_#217_#163_#204_#205_#193_#194_#205_#189_#91_#209_#180_#165_#41_#193_#154_#122_#194_#193_#194_#205_#180_#164_#182_#194_#206!3_#200_#206!4_#200_#217_#182!2_#204_#47!2_#244_#39_#244_#29_#239_#203_#210_#205_#153_#91_#195_#91_#228_#164_#106_#178_#195!2_#181_#180_#174_#165_#194_#193_#206!3_#196!3_#29_#196_#29_#239_#196_#29_#247_#96_#69_#206_#69_#206_#47_#70_#206!5_#244!2_#196_#239_#247_#29!5_#196!3_#239_#29_#108_#196_#247_#70_#47_#70_#183_#247!2_#196_#247_#196_#29!4_#213_#47!2_#213_#47!2_#183_#247!2_#183_#206!15_$-#23!4@#24@#18@#24!3@#126@#24!2@#25@#23@#25@#23@#18@#25@#38@#18@#23@#18@#19@#18@#160@#16@#113@#16@#46@#113@#46!2@#16@#113@#78@#113!2@#46!2@#19@#46@#19@#46@#18@#113!3@#224@#80@#115@#7@#76@#19!2@#16@#7@#225@#138@#66@#65@#174@#229@#164@#213@#69@#96!2@#47@#69@#47@#206!3@#194@#246@#217@#163@#194!2@#205@#40@#222@#205@#41@#164@#178@#205@#96@#180@#153@#186@#138@#194@#206@#200@#174@#40@#179!2@#140@#156@#200@#206!4@#141@#155@#210@#213@#194@#200@#206!2@#194@#70@#206@#183@#216@#147@#153@#222@#189@#188@#195!2@#228@#174@#163@#179@#212@#208@#202@#189@#153@#203@#141@#205@#69@#200@#158@#196!4@#29@#239@#196@#247@#96@#206@#69!2@#206@#47!3@#206!3@#200@#206@#244@#247@#29!7@#239@#196@#29@#239@#29@#196@#29@#239@#196!2@#244@#29@#247!2@#29!2@#244@#29!2@#247@#29!5@#196@#247@#183@#70@#206!3@#47!2@#183@#206!3@#200!3@#206!8@$#23!3A#18A#24A#126A#24A#126A#24!2A#18A#25!3A#23A#25A#38A#23A#38A#18A#38A#23A#18A#16!4A#46A#16!2A#18A#16A#46A#16A#113A#78A#113!2A#46A#18A#46A#18!2A#113!4A#20A#68A#167A#169A#97A#44A#225A#31A#171A#65A#59A#132A#138A#90!3A#216A#206A#70A#47!2A#206A#47A#206!2A#200A#203A#190A#153A#222A#194A#205A#194A#193A#181A#165A#194A#193A#205!2A#141A#164A#208A#194A#205A#154A#155A#40A#190A#174A#68A#155A#64A#121A#205A#141A#41A#208A#41A#202A#194!2A#206A#194A#206A#194A#206A#158A#206A#47A#246A#176A#217A#222A#164A#203A#193A#208A#179A#174A#92A#217A#208A#179A#193A#204A#174A#203A#194A#107A#96A#200A#206A#196!3A#239A#196A#247A#96A#206A#70A#206A#183A#70A#47!3A#206!3A#200!2A#47A#244A#196A#29!3A#196A#29A#239A#29A#196A#29!2A#196!3A#68A#106A#176A#106A#224A#29A#196A#29!3A#196A#29!2A#196A#29A#196A#29!2A#247!2A#47A#206!2A#47A#183A#244A#47A#206!4A#70A#206!12A$#23C#18C#24!6C#18C#25C#38C#23!2C#25!2C#23C#24C#38C#25C#23C#18C#23C#18C#19C#18C#160C#46C#16C#18C#143C#16C#113C#78C#113!3C#143C#46C#16C#78C#46!3C#113C#19C#113!4C#19C#95C#22C#122C#176C#192C#140C#58C#103C#151C#90C#164C#229C#164C#147C#221C#206C#70C#47C#206C#47C#206C#200C#204C#165C#204C#205C#222C#156C#152C#41C#194C#179C#41C#194C#193C#41C#154C#222C#208C#180C#205C#155C#120C#61C#123C#62C#154C#193C#189C#212C#121C#179C#194C#193C#200C#194C#206C#47!2C#183C#206!3C#244C#206C#47C#247C#165C#41C#205C#203C#208C#189C#205C#188C#179C#176C#188C#179C#188!2C#204C#210C#153C#202C#194C#69C#200C#70C#47C#206C#47!4C#206!2C#244C#70!2C#206C#70C#206!4C#200!2C#206C#183C#244C#29!4C#196C#216C#29!4C#196C#29C#196C#29!2C#239C#106C#153C#246C#29!2C#247!2C#196C#29C#247C#29!2C#247!2C#183C#194C#47C#206C#96C#70!3C#206!5C#244C#206!9C#200C#206!5C$#18G#23G#18G#25G#18G#38G#18G#24G#126G#25G#23G#25G#38G#25!2G#38!2G#25G#23G#38G#18G#23!2G#18!2G#16G#78!2G#16G#46G#113G#78G#113G#37!2G#143G#18G#160G#113G#16G#78G#113G#78G#113!3G#19G#113!3G#19!3G#40G#89G#59G#57G#140G#164G#90G#140G#139G#92G#239G#19G#183G#206G#47!2G#206!2G#194G#163G#210G#205G#193G#41G#235G#178G#194G#205G#181G#202G#179G#210G#193G#154G#153G#204G#205G#209G#178G#59G#56G#136G#131G#104G#178G#141!2G#140G#89G#193G#194G#141G#193G#183G#194G#69G#206!2G#158G#206!2G#47G#210G#153G#41G#222G#179G#180G#193G#141G#179G#205G#153G#188!2G#208G#204G#188G#153G#165G#194G#200!2G#206!2G#20G#247G#70G#47!4G#70!2G#206!2G#70G#206!5G#200G#206!2G#183G#196G#29!2G#239G#29G#216G#196!2G#239G#29G#196G#29!2G#196G#29!2G#196G#29!3G#183!3G#70G#247G#29G#183G#247G#47G#206!3G#200G#206G#69G#183G#47!2G#244G#183G#70G#206!3G#47!2G#183G#47G#206!5G#200G#206!3G#200G#206!3G$#23O#18O#24!3O#38!2O#24!3O#126O#24O#23O#25!2O#38O#23!2O#24O#23!2O#18!3O#19O#18O#16O#78O#113O#16O#46O#78O#143O#89O#192O#143O#16O#46O#113O#16O#113!2O#78O#113!3O#20O#113!2O#19!2O#176O#192O#52!2O#57O#140O#90O#135O#104O#51O#65O#137O#159O#113O#213O#206!5O#194O#141O#208O#203O#193O#210O#178O#204O#194O#181O#205O#189O#193O#205O#189O#194O#205!2O#41O#187O#179O#90O#63O#164O#212O#60O#92O#194!2O#62O#121O#193O#205O#92O#182O#213O#206!7O#41O#163O#217O#204O#217O#179O#203O#181O#202O#41O#141O#193O#188O#41O#194O#41O#182O#205O#194O#141O#196O#108O#194O#247O#206!2O#47!3O#206!3O#70O#206!10O#244O#196O#29!4O#196!2O#29O#216O#29O#196O#29O#239O#29O#216O#196!2O#29O#247O#183O#47!3O#96O#247O#196O#96O#206!8O#200O#206!6O#47O#206!4O#70O#183O#47O#200!2O#206O#200O#206!2O#200O#206!5O$#24!2_#18_#24_#18_#24_#126_#24_#126_#24_#25_#23_#38_#23_#244_#38_#25_#38_#20_#25_#18_#23_#18_#38_#18_#126_#46_#16_#113_#46_#113_#143_#16_#15_#37_#46_#16_#78_#46_#78_#113_#78_#95_#46_#113_#19_#113_#19!2_#76_#67_#225_#62_#92_#60_#62_#131_#58_#53_#104_#65_#89_#106_#240_#183_#47_#247_#69_#206!3_#200!2_#195_#164_#208_#180_#181_#141_#194_#41_#176_#189_#182_#205_#180_#141_#205_#41_#193_#154_#191_#178_#205_#141_#194_#175_#153_#41_#222_#179_#190_#186_#205_#195_#181_#206!7_#213_#246_#41_#202_#216_#217_#205_#41_#189_#205_#194_#193_#141_#41_#222_#202_#165_#205_#194_#200_#96_#213_#239_#182_#239_#244_#239_#196!2_#244_#206!11_#47_#244_#247_#239_#29_#247_#29!2_#247_#29_#247!2_#244_#239_#29!4_#244_#108_#183_#47_#70_#183!2_#96_#70_#183_#196_#47_#206!4_#200_#206!2_#200_#206!3_#200_#206_#200_#206!8_#183_#247_#244_#206_#200_#206_#200_#206!7_$-#18!2@#24!2@#18@#25@#18@#24!3@#23@#25@#23@#25@#23@#25!2@#24@#126@#25@#23@#18!3@#126@#18!2@#113@#143@#16@#113@#46@#78@#113!2@#46!2@#16@#113@#78!2@#113@#78@#46@#113@#19@#113@#19@#42@#101@#184@#92@#214@#59@#85@#120@#85@#146@#56@#135@#209@#128@#79@#244@#47@#39@#240@#20@#206!6@#41@#195@#203@#194@#200@#141@#40@#187@#189@#41@#208@#179@#205!2@#193@#214@#64@#52@#147@#193!2@#194@#189@#222@#194@#205@#194@#178@#153@#179@#138@#122@#206!6@#247@#163@#194@#202@#217@#188@#202@#141@#189@#205@#217@#141@#204@#202@#193@#155@#210@#205@#96@#206!7@#69@#206!11@#244@#47@#244@#196!5@#183!5@#213@#183!2@#27@#69@#47@#183@#27@#239@#47@#96@#47!2@#183!2@#96@#244@#247!2@#244@#69@#200@#206!7@#200@#206!15@#47@#183@#206!2@#200@#206!7@$#18A#24A#18A#24A#18A#24A#25A#24A#18A#25A#23A#24A#23A#25!4A#18A#38A#18A#23A#18!4A#20A#126A#18A#16A#113A#16A#113A#78A#113A#143A#16A#46A#16A#78A#46A#113A#143A#18A#113!3A#19A#148A#98A#123A#164A#137A#85A#84A#53A#102A#58A#139!2A#191A#128A#8A#244A#47A#20A#117A#240A#47A#206A#200A#206!2A#220A#206A#194A#210A#195A#194A#193!2A#202A#141A#205A#188A#179A#194A#41A#193A#141A#195!2A#188A#193A#194A#208A#195A#163A#205A#194A#205A#194A#193A#181A#216A#178A#140A#195A#206!4A#213A#208A#203A#208A#202A#205A#217A#205A#202A#41A#179A#208A#179A#217A#222A#155A#195A#202A#96A#200A#206!7A#200A#206!12A#47A#244A#183A#244A#196!2A#29!4A#196!4A#29A#108A#183A#47A#96A#247A#221A#96A#47A#183A#247A#47A#183A#247A#196A#183A#47A#206!4A#200A#206!2A#200A#206!6A#200A#206A#200A#206A#200A#206!5A#200A#206A#200A#206A#244A#206A#200A#206A#200A#206!5A$#23!2C#24C#18C#25C#18C#25C#18C#25C#24C#18C#24!2C#18C#25!2C#20C#122C#151C#199C#20C#18!8C#78C#143C#46!3C#21C#16C#21C#16C#113C#78C#113C#19C#78C#113C#95C#19C#128C#101C#151C#185C#149C#85C#146C#58C#64C#139!2C#131C#129C#8C#4C#246C#38C#117C#20C#18C#183C#200C#206!2C#70C#244C#200C#206C#200C#194C#204C#188C#156C#205C#200C#181C#41!2C#213C#189C#202C#194C#203C#208C#205C#206!2C#194C#41C#204C#141C#180C#40C#189C#154C#203C#165C#58C#153C#195C#121C#96C#206!2C#69C#187C#141C#193C#205C#188C#217C#202C#217C#202C#217C#204C#217C#202C#204C#205C#153C#202C#194C#206!20C#70C#206!4C#213C#244C#29!4C#216C#29C#196C#239!2C#29C#196!2C#247C#183!2C#96C#47C#244C#247C#47C#247C#244C#247C#47C#206!13C#200C#206C#200C#206!2C#200C#206C#200C#206!10C#244C#206C#200C#206!6C$#23G#18G#24!3G#18G#25G#24!2G#18G#25G#24!3G#18G#25G#68G#93G#86G#255G#164G#23G#18!5G#126G#23G#113!2G#16G#113G#16G#46!2G#16G#46G#113!2G#78G#113!4G#78G#101G#136G#151G#120G#102G#103G#65G#135G#136G#138G#89G#76G#240G#4G#117G#20G#113G#196G#240G#221G#200G#206!2G#70G#183G#206!5G#213G#208G#236G#179G#189G#193G#194G#217G#194G#108G#205G#165G#90G#210G#193G#200!2G#194G#96G#193G#182G#190G#163G#194G#205G#179G#154G#208G#179G#175G#141G#206!3G#202G#204G#194G#205G#41G#205!2G#217G#205G#188G#217G#202G#188G#204G#41G#210G#202G#194G#200G#206!6G#70G#206!12G#244G#206G#244G#247!3G#196G#29!4G#196!2G#29!3G#196G#29G#239G#29G#196!3G#29G#196!2G#213G#196G#244G#47G#206G#200G#206G#200G#206!5G#200G#206!14G#200G#206G#200G#206!2G#200G#206G#200!3G#158G#206!7G$#18O#24O#18O#24O#126O#24O#18O#24O#126O#24!2O#18O#24!2O#25O#18O#25O#105O#84O#248O#211O#18!2O#23O#18!5O#38O#113!2O#46O#113!2O#78O#95O#16O#143O#113!3O#95O#126O#19O#3O#66O#60O#102O#54O#66O#139O#62O#138O#89O#76O#46O#79O#142O#79O#246O#196O#246O#240O#117O#70O#206!2O#220O#183O#206!7O#141O#217O#179O#195O#165O#200O#107O#202O#141!2O#165O#208O#205O#193O#217O#194!2O#107O#193O#194O#189O#193O#141O#194!2O#193O#194O#61O#58O#180O#206O#200O#217O#41O#205O#202O#188O#208O#210O#181O#141O#188O#202O#217!2O#205O#180O#208O#205O#194O#206!21O#244O#247!2O#239O#247O#29O#247O#183O#194O#47O#96O#206O#69O#206O#47O#194O#69O#183O#196O#29O#196!4O#239O#196!3O#108O#206!2O#200O#206O#96O#200O#206O#200O#206!9O#244O#183!2O#206O#200O#206O#200O#206!4O#200O#206!14O$#18!2_#24!3_#126_#24!4_#18_#25_#18_#24!2_#25_#126_#154_#133_#243_#185_#38_#18_#17_#18!6_#20_#18_#16_#113!6_#19!3_#143_#128_#234_#36_#99_#86_#132_#133_#131_#123_#147_#15_#117_#14_#4_#125_#8_#18_#113_#112_#142_#117_#200!2_#206_#183_#244_#69_#206!7_#200_#194_#155_#41_#155_#202_#193_#210_#181_#193_#210_#208_#194_#193_#217_#205_#189_#187_#141_#205_#107_#41_#210_#189_#41_#164_#147_#189_#138_#190_#194_#155_#179_#194!2_#141_#194_#141!2_#179_#189_#217!2_#204!2_#194_#208_#41_#108_#194_#206!12_#158_#47_#206!8_#96!2_#206!5_#200_#206!3_#200_#206_#200_#206!4_#96_#247_#29_#239_#29_#247_#29!4_#247_#96_#206_#194_#216_#213_#96_#206!4_#200_#206!5_#200_#206!5_#200_#206_#200_#206!4_#200_#206!12_$-#23@#18@#24@#18@#24!2@#18@#24@#18@#24!4@#126@#24!3@#23@#45@#40@#38@#25@#23!2@#18!6@#126@#23@#18@#113!4@#126@#113@#143@#12@#89@#1@#103@#54@#86@#53@#66@#138@#92@#147@#46!2@#16@#21@#4@#142@#117@#20!2@#142!2@#20@#206!2@#183@#244@#247@#206!12@#193!2@#202@#179@#153@#41@#194@#179@#204@#107@#194@#141@#194!2@#153@#141@#41@#141@#180@#152@#178@#195@#138@#165@#176@#138@#136@#212@#188@#205@#193!3@#194@#193@#181@#92@#202!2@#205@#141@#189@#41@#217@#213@#194@#200@#206!16@#244@#206@#244@#47!3@#206!6@#200@#206!2@#200!2@#206@#47@#70@#206@#47@#194@#70@#206@#69@#96@#206@#70@#96@#47@#183!2@#70@#183@#47@#247@#183@#213@#47@#96@#200@#206@#200@#206!3@#200@#206!2@#200@#206!3@#200@#206!3@#200@#206!3@#200@#206!3@#200@#206!4@#200@#206!5@$#18!3A#24A#126A#24A#126A#24!2A#18A#24A#18A#24!2A#18A#24A#23A#25!5A#24A#18A#23A#18A#23A#18A#20A#18!2A#38A#20A#126!2A#19A#76A#22A#127A#214A#99A#102!2A#134A#120A#58A#140!2A#106A#46!2A#16!2A#117A#6A#125A#4A#29A#20A#5A#246A#183A#206A#69A#244A#247A#69!2A#200A#206!9A#200A#206!2A#96A#217A#182A#195A#165A#194A#206A#194A#206A#96A#193A#179A#180A#141A#194A#193!2A#164A#152A#195!2A#188A#193A#208A#90A#136A#140A#205A#193A#41A#156A#164A#156A#68A#193A#204A#193A#141A#204A#193A#41A#208A#213A#206!29A#200A#206!15A#70!2A#183A#69A#206A#200!3A#206!4A#96A#206!6A#200A#206!6A#200A#206!3A#200A#206A#200A#206A#200A#206!6A#200A#206!4A#200A#206!4A$-\"
[String]$Script:Plakira = "`eP0;1q`"1;1;220;260#0;2;0;0;0#1;2;13;13;16#2;2;13;11;13#3;2;7;7;7#4;2;8;9;9#5;2;10;10;11#6;2;11;12;11#7;2;17;16;14#8;2;20;18;17#9;2;23;21;20#10;2;26;22;20#11;2;27;25;22#12;2;29;25;23#13;2;32;28;27#14;2;35;28;27#15;2;39;31;26#16;2;41;33;33#17;2;46;37;32#18;2;51;41;39#19;2;54;44;43#20;2;60;50;49#21;2;64;53;51#22;2;67;53;52#23;2;70;57;56#24;2;73;59;56#25;2;76;60;58#26;2;77;62;60#27;2;79;63;61#28;2;80;63;63#29;2;82;64;63#30;2;83;66;64#31;2;85;66;64#32;2;83;65;66#33;2;88;67;66#34;2;89;69;69#35;2;91;71;70#36;2;92;72;70#37;2;94;72;69#38;2;94;71;67#39;2;94;70;64#40;2;91;69;61#41;2;90;68;61#42;2;88;65;58#43;2;87;65;56#44;2;83;61;53#45;2;83;62;54#46;2;80;60;51#47;2;76;59;51#48;2;77;58;49#49;2;71;53;47#50;2;69;50;43#51;2;67;50;42#52;2;64;47;41#53;2;58;44;36#54;2;57;41;35#55;2;53;38;29#56;2;46;33;29#57;2;22;19;17#58;2;10;11;13#59;2;14;15;13#60;2;18;18;20#61;2;34;25;22#62;2;36;31;30#63;2;45;37;36#64;2;51;43;42#65;2;57;48;46#66;2;67;56;54#67;2;74;60;58#68;2;91;69;66#69;2;91;69;63#70;2;90;68;63#71;2;87;65;59#72;2;87;65;58#73;2;84;62;54#74;2;73;56;48#75;2;24;18;14#76;2;16;14;16#77;2;43;34;30#78;2;70;56;54#79;2;71;54;52#80;2;81;61;52#81;2;61;47;45#82;2;72;56;55#83;2;76;58;59#84;2;86;67;66#85;2;76;60;54#86;2;48;38;35#87;2;74;56;51#88;2;11;12;16#89;2;47;39;39#90;2;79;60;54#91;2;75;54;49#92;2;73;60;60#93;2;43;37;36#94;2;71;55;56#95;2;85;63;55#96;2;76;63;63#97;2;85;63;59#98;2;50;34;30#99;2;55;43;39#100;2;17;16;16#101;2;49;43;43#102;2;89;69;67#103;2;44;30;23#104;2;29;26;27#105;2;42;37;38#106;2;89;66;61#107;2;78;58;50#108;2;23;22;23#109;2;35;32;33#110;2;89;67;63#111;2;74;62;63#112;2;80;64;65#113;2;80;62;57#114;2;19;17;16#115;2;25;20;20#116;2;71;59;58#117;2;23;20;20#118;2;26;23;22#119;2;30;29;31#120;2;19;14;16#121;2;34;30;31#122;2;20;17;19#123;2;54;45;45#124;2;36;34;37#125;2;48;38;32#126;2;82;65;65#127;2;32;26;25#128;2;52;39;35#129;2;70;60;60#130;2;29;23;23#131;2;61;56;55#132;2;14;12;11#133;2;18;12;13#134;2;84;65;63#135;2;35;29;29#136;2;39;31;30#137;2;65;57;58#138;2;25;20;22#139;2;79;60;58#140;2;14;10;10#141;2;30;21;21#142;2;81;61;59#143;2;78;58;57#144;2;76;57;54#145;2;79;61;61#146;2;66;51;51#147;2;66;50;48#148;2;64;47;47#149;2;60;50;51#150;2;64;54;54#151;2;61;45;44#152;2;60;45;41#153;2;57;47;48#154;2;61;56;56#155;2;54;41;41#156;2;58;41;40#157;2;54;41;38#158;2;41;32;29#159;2;54;48;50#160;2;61;45;47#161;2;55;39;41#162;2;52;36;38#163;2;47;34;33#164;2;51;35;34#165;2;50;39;41#166;2;49;41;43#167;2;60;42;44#168;2;46;30;32#169;2;44;29;27#170;2;40;30;31#171;2;49;44;44#172;2;78;61;62#173;2;67;53;54#174;2;40;29;27#175;2;38;24;25#176;2;26;16;15#177;2;46;36;38#178;2;36;27;28#179;2;35;26;26#180;2;38;24;22#181;2;33;23;21#182;2;10;8;9#183;2;33;24;25#184;2;32;20;17#185;2;23;14;13#186;2;60;49;50#187;2;66;55;56#188;2;70;58;60#189;2;73;61;62#190;2;73;58;59#191;2;41;32;27#192;2;22;17;16#193;2;32;27;28#194;2;53;42;44#195;2;57;45;45#196;2;75;56;56#197;2;64;49;50#198;2;12;13;18#199;2;42;36;37#200;2;66;52;53#201;2;70;48;51#202;2;64;51;53#203;2;57;45;47#204;2;56;36;36#205;2;61;54;56#206;2;63;42;45#207;2;20;19;22#208;2;15;7;4#209;2;27;23;25#210;2;69;48;47#211;2;20;10;8#212;2;15;15;19#213;2;28;18;18#214;2;23;22;25#215;2;63;42;41#216;2;11;11;16#217;2;23;20;22#218;2;75;55;52#219;2;57;36;39#220;2;78;58;54#221;2;28;20;16#222;2;10;7;7#223;2;5;5;6#224;2;21;13;10#225;2;10;9;8#226;2;8;6;5#227;2;7;3;2#228;2;3;2;3#229;2;29;22;20#230;2;19;14;13#231;2;38;26;23#232;2;31;18;15#233;2;25;14;10#234;2;12;5;2#235;2;23;16;13#236;2;8;5;6#237;2;32;29;29#238;2;8;8;9#239;2;20;16;14#240;2;29;20;19#1!9@#2@#3@#4@#5@#6@#2@#7@#8!2@#9@#10@#11@#12@#13@#14@#15@#16@#17@#18@#19@#20@#21@#22@#23@#24!5@#25!8@#26!2@#27!3@#28@#27@#29@#28@#29!2@#30!2@#31@#32!3@#33@#32@#33!2@#34@#33@#34@#33@#35@#34@#35!6@#36!11@#37@#36@#37!2@#38!9@#37!2@#39@#37@#38!8@#39@#38@#39!34@#40@#39@#40@#39@#41!7@#42@#41@#42@#41@#42!6@#43!10@#44@#43@#44@#45!8@#46!3@#47@#48!2@#49!2@#50!2@#51!2@#52@#53!3@#54@#55!4@#56@#57@#58@#1!3@$#1!9A#58A#4!2A#5A#6A#59A#7A#8A#60A#9!2A#12!2A#61A#13A#62!2A#63A#18A#64A#65A#20A#66!2A#23!3A#24!2A#23A#24!5A#67!2A#25!2A#26!4A#27!5A#28A#29!2A#30A#31A#30A#31A#32!4A#33A#32A#33!5A#34!8A#33A#35A#34!4A#38A#34A#38A#34A#39A#68A#34!2A#39A#68A#34A#39A#68A#39A#69A#39A#69A#39A#70A#39A#70A#34A#69A#39A#69!2A#39A#70A#39A#70A#39A#70A#39A#70A#39A#70A#39A#70A#39A#70A#39A#70A#39A#41A#40!12A#41!5A#71A#41!3A#71A#41A#71A#41A#72!2A#43!12A#73A#43A#44A#43A#44!2A#73A#44!5A#46A#44A#46A#44A#46!2A#44A#46!2A#47!2A#48A#74A#49!3A#50!2A#51!2A#53A#51A#53!3A#55!5A#56A#75A#58A#1!3A$#1!8C#76C#2C#4C#5C#6C#2C#59C#7C#8!2C#9C#11!2C#12C#13C#14C#15C#77C#63C#18C#19C#65C#21C#22C#78!3C#24C#79C#24!8C#25C#67C#25C#26!4C#27C#26C#27!2C#28C#27C#29!3C#30!2C#31!2C#33C#31C#33C#32C#33!2C#34C#33C#34!2C#32C#34!7C#35C#33C#34!2C#38C#68C#34C#39C#68!3C#34C#39C#69C#68C#39C#69C#68C#34C#69C#39C#70C#39C#70!2C#69C#68C#69!7C#41C#69!10C#41C#69C#41!2C#39C#41C#40!8C#41!3C#40C#41!5C#71C#41C#71C#41C#72!5C#71C#72!3C#43!2C#73C#43C#73C#43C#44C#43C#44!4C#73!2C#44!4C#80C#44!2C#46C#44C#46C#44C#46C#44C#47C#46C#47C#48C#74!3C#49C#50!3C#51!2C#53C#51C#53!4C#55!4C#56C#8C#58C#76C#1!2C$#1!8G#76G#58G#4G#6!2G#59!2G#7G#8G#9!2G#11!2G#61G#13G#14G#62G#77G#63G#18G#19G#81G#21!2G#78!3G#24G#23G#82G#24!5G#83G#24G#67G#25G#67G#26!3G#27G#26G#28G#27!3G#29!3G#30!4G#84G#31G#32G#33!5G#34G#84G#33G#34!6G#33G#35G#33G#34!6G#68!5G#34G#39G#68!2G#39G#69G#39G#68!2G#69G#70G#69G#39G#70G#39G#69!8G#39G#41!2G#69G#41!2G#69G#41!2G#69G#39G#41G#39G#41!2G#40!8G#41!6G#42G#41G#71G#41G#71G#41G#71!6G#72!4G#43G#72G#73G#43G#73G#43G#73G#43G#44G#43G#44G#43G#44!3G#73G#44!4G#46G#44G#46!3G#44!2G#85G#46G#47!2G#48G#74!2G#49!2G#50!3G#51!2G#53G#51G#53!3G#55G#53G#55!3G#56G#57G#58G#76!2G#1G$#1!9O#2O#6!2O#59!3O#8!2O#9!2O#11!2O#13O#61O#62!2O#77O#86O#18O#19O#65O#21O#22O#66O#78!3O#87O#23!2O#24!4O#83O#24O#26O#67O#25!2O#26!3O#27!4O#29O#28O#29!3O#30!4O#32O#31O#33O#84O#33O#84O#32O#33O#84O#34!2O#33O#34!5O#33O#35O#34!2O#39O#68O#34O#39O#68!4O#34O#39O#68!2O#69O#68!2O#69O#68O#69!6O#70O#69O#39O#70O#39O#70O#69!2O#41O#70O#39O#41O#39O#69!2O#41O#39O#69O#41O#70O#41!2O#40!9O#41O#40O#41!6O#42O#41!3O#71O#41O#71!5O#72!3O#43O#45O#43!2O#73O#43O#73O#43O#44!3O#73O#44!2O#73O#44!5O#80O#44O#46O#80O#46O#44O#47O#46!2O#44O#47!2O#48O#74O#49!3O#50!2O#51!2O#52!2O#53!5O#55!4O#56O#57O#59O#88O#59O#1O$#1!8_#76_#59_#6!2_#59!3_#8!3_#9_#11!2_#61_#13_#15_#77!2_#89_#18_#19_#81_#21!2_#78!3_#24_#23_#24!4_#83_#24_#83_#67!2_#25_#67_#26!4_#28_#27!2_#28_#27_#29!3_#30!4_#32_#31_#33_#30_#33_#32_#33!2_#32_#34_#32_#34!2_#33_#34!3_#35_#33_#34!3_#68!8_#69_#68!3_#69!2_#68_#69!2_#68_#69!2_#39_#70_#69_#39_#70!4_#39_#70_#39_#70!2_#41_#69_#41_#69_#40_#69_#70_#41_#39_#41_#40!10_#41!2_#40_#41!2_#42_#40_#42_#41!2_#71!2_#41_#71!7_#72_#43_#72_#43_#72_#44_#72_#73!2_#43_#44_#73_#43_#44!3_#73_#44_#73_#44_#73_#44_#80!2_#46_#80_#46_#90_#46_#44!2_#47!4_#91_#48_#49!2_#50!3_#51_#52!2_#53_#51_#53!3_#55_#53_#55!4_#57_#58_#76_#1!2_$-#1!9@#58@#6@#59!3@#7@#59@#8@#9!2@#11@#13!3@#62!2@#77@#86@#64@#19@#65@#21!2@#78!4@#87@#23@#24!5@#83@#67!2@#25@#26@#92@#26!3@#27!2@#28!2@#29!3@#30!4@#32@#31@#33@#84@#30@#33@#32@#33@#32@#33!2@#34@#33@#34!4@#33@#35@#34!2@#39@#33@#34@#33@#34!2@#68!6@#69@#68!2@#69!2@#68@#69!7@#70@#69!2@#39@#70!4@#69!2@#39@#70@#39@#41@#39@#70@#40@#69@#41@#39@#41@#40!8@#41!4@#40@#41!2@#42@#40@#42@#41@#71@#41@#71!6@#43@#71@#72!2@#45@#72@#73@#43@#44@#43@#44@#73!2@#44!2@#73!2@#44!2@#73@#44!3@#80!6@#46@#90@#46@#47@#44@#47!3@#74!2@#49@#74@#50!3@#51!2@#53@#51@#53!5@#55!5@#8@#59@#88@#59@#1@$#1!8A#76A#2A#59A#6A#7A#59A#7A#8!2A#9!2A#11A#13A#12A#62A#15A#77A#93A#63A#64A#19A#81A#21!2A#78!3A#23A#24A#82A#24A#94A#24A#83A#24A#92A#67A#25A#67!2A#26!4A#27A#28!2A#27A#29!3A#30!4A#31A#32A#84A#30A#33A#30A#84!3A#32A#34A#84A#34!6A#33A#34!2A#33A#34!3A#39A#33A#34A#69A#68!5A#69A#68!2A#69!8A#39A#70A#39A#70!2A#69!5A#70A#41A#70A#41A#70!2A#41A#39A#41A#70A#41!2A#39A#41A#40!7A#41!4A#42A#40A#41A#42A#41A#71A#42A#71A#41A#71A#42!2A#71!3A#43A#72A#43A#95!2A#43A#44A#43A#44A#73!2A#43A#44!3A#73A#44!6A#80!4A#46!2A#90A#80A#46A#90A#47A#46A#47A#91A#48A#74A#49!2A#50!2A#51!3A#53A#51A#53A#51A#53A#55!2A#53A#55!4A#8A#58A#76A#88A#1A$#1!8C#76C#59C#2C#7C#59C#7C#8!3C#9!2C#12!2C#13!2C#62!2C#77C#18!2C#19C#20C#21!2C#87C#23C#78C#24C#79C#24!5C#25C#67C#25C#67C#25C#26C#25C#26!3C#96C#28C#27C#30C#27C#29!2C#30!3C#32!2C#84!4C#30C#84!7C#33C#34!4C#35C#34C#39C#33C#34C#39C#33!2C#34C#39C#33C#68C#34C#69C#68!3C#39C#68C#69C#39C#69!2C#39C#69!4C#70!2C#69!7C#70C#69!4C#41C#69C#70!2C#41!2C#69C#41!2C#39C#41C#40!4C#41!6C#42C#41C#42C#41C#42C#41C#71!3C#42!3C#43!2C#97C#72C#97C#43C#73C#95C#73!3C#43C#44!3C#73C#44!8C#80!6C#46!2C#90C#46C#47!3C#48C#74!2C#49C#74C#50!2C#51!3C#53C#51C#53!4C#55C#53C#55!3C#98C#8C#58C#76!2C#1C$#1!7G#76G#88G#76G#59!2G#8G#59G#8G#59G#9!2G#11G#12!2G#13G#15G#62G#77G#93G#63G#64G#99G#65G#21!2G#78!2G#87G#23G#24G#79G#24!4G#83G#67!2G#25!2G#26G#25G#26!2G#27!3G#28G#27G#30G#29!2G#30!2G#84!2G#31G#84!3G#30G#31G#30!5G#33!3G#34G#33G#34!3G#33!2G#34!2G#33G#34G#39G#33!2G#34G#39G#69G#68!2G#69G#68G#69G#68G#69!7G#68G#69G#68G#39G#70G#69!5G#70!3G#41G#70G#41G#69G#70G#41!2G#70G#41!3G#70G#41!11G#42G#41G#42G#41G#42!2G#41G#71!2G#42!2G#97!3G#43!2G#97G#45G#72G#44G#72G#73!2G#44!14G#80!3G#90G#80G#46G#90G#46!4G#47G#48G#74!2G#49G#74G#50!3G#51!3G#53G#51G#53!4G#55!2G#53G#55!3G#8G#58G#59G#88G#76G$#1!7O#76!2O#59!2O#76O#8O#59O#8O#60O#8O#9!2O#12O#13!2O#15O#62O#16O#93O#86O#18O#19O#65O#21!2O#78!2O#23O#78O#23O#24O#79O#24!4O#25O#67!2O#25!2O#26!4O#28O#27O#29!2O#27O#29!3O#30!5O#84O#29O#30O#71O#30O#29O#30!3O#84O#33O#84O#33O#34O#33O#34!3O#35O#69O#33O#34O#69O#33O#34O#39O#69O#68!2O#69O#68!3O#69O#68O#69!10O#70!2O#69O#70!6O#41O#70O#41O#70O#41!2O#70O#41!20O#42O#41O#72!2O#71!3O#43O#42O#97O#42O#43!2O#97O#45O#72O#44!2O#43O#44!11O#80O#46O#44O#46O#44O#80!2O#46!6O#47!3O#48!2O#74!2O#50O#74O#50O#51!3O#53O#51O#53!6O#55!5O#8O#58O#1O#76O#88O$#1!8_#88_#76!2_#59_#76_#100_#59_#8!2_#9_#12!2_#13!2_#62!2_#16_#77_#89_#101_#19_#81_#21!2_#78!3_#87_#23!2_#24!3_#83_#67!3_#25!2_#26_#25_#26!4_#27_#29_#27_#29!4_#84_#29_#84!2_#30_#84!2_#30_#84_#30_#71_#84_#30!3_#33!3_#34_#84_#34_#102_#34_#33!2_#34_#33!2_#34_#39_#33!2_#69_#68!2_#69_#68!2_#69!16_#70!6_#41_#70_#41_#70!2_#41!5_#70_#41!11_#71_#41_#43_#41_#72!4_#71!3_#43!2_#97!2_#43_#27_#43_#97_#45_#43_#44!2_#45_#44!8_#80!3_#44_#80!2_#46_#44_#46_#80_#46!4_#47_#46_#47_#48_#47_#74!3_#49_#50!2_#51!3_#53_#51_#53!5_#55!3_#53_#55_#103_#57_#58_#59_#1_#2_$-#1!5@#76@#1@#76@#1@#76!3@#8@#100@#8!3@#9@#11@#104@#13!2@#62!2@#16@#105@#89@#64@#99@#65@#21!2@#78!3@#23@#87@#23@#24!5@#26@#67!2@#25!2@#26!4@#28@#26@#29@#27@#29!2@#30!2@#29@#30@#84@#30@#84@#30@#84@#30!2@#84!2@#29@#84@#41@#84@#33!2@#34@#84@#33@#34@#33@#34!3@#69@#33@#34@#69@#33!2@#34@#69@#68@#33@#69@#68@#69@#68@#69!15@#70!4@#41!2@#70!3@#41@#70@#41@#70!2@#41@#106@#41!2@#71@#70@#41@#71@#41!3@#71@#41@#71@#41@#71@#41@#72@#71@#43@#71@#43@#72!3@#43@#29@#43!4@#97@#45!2@#44@#97@#44@#45@#44!6@#46@#44@#46@#80@#46@#80!2@#46@#80@#107@#80@#107@#46!5@#48@#47@#48!2@#74!2@#49!2@#50@#51!3@#53@#51@#53@#51@#53!3@#55@#53@#55!5@#75@#59@#1@#76!2@$#1!7A#76A#88A#59A#76!2A#59A#8A#59A#8A#9A#108A#11A#104A#12A#62!2A#109A#105A#93A#89A#64A#99A#65A#21!2A#78A#74A#23!2A#24!2A#82A#24A#83!2A#67!4A#25!2A#26!5A#27!3A#29A#96A#30A#29A#30!2A#84!2A#30A#84!2A#30A#84A#30A#84A#30A#84!3A#33!3A#34A#33A#34!2A#102!2A#33A#34!2A#39A#33!2A#39A#70A#68A#69A#68A#70A#33A#69A#68A#69A#68A#69!4A#41A#69A#110A#69A#106A#68A#106A#69A#106A#70!3A#71A#70!2A#106A#70A#41A#106A#70!2A#106!2A#70A#71A#70!2A#41A#71A#70!2A#41A#71A#41!2A#71A#41!2A#71!3A#41A#71!3A#72!3A#97A#71A#95A#43A#29A#45!2A#72A#97A#73A#44A#45!2A#44!6A#46!2A#44A#46A#80A#46A#80!2A#46!7A#48A#47A#48A#47A#48A#74!3A#49A#50A#74A#51!4A#53A#51A#53!6A#55!3A#53A#55A#75A#58A#1!3A$#1!4C#76C#1!2C#76C#1C#76!2C#100C#8C#76C#8!2C#60C#9C#11C#104C#13!2C#62C#109C#93C#17C#89C#64C#19C#65C#21C#22C#78!4C#87C#23C#24!4C#26C#24C#25!5C#26!2C#96C#26C#29C#27C#29!2C#30!3C#29C#32C#29C#32C#84!3C#30C#69C#84C#30C#69C#84!2C#33!3C#34C#84C#33C#34C#33C#34C#102C#34C#69C#33!5C#68C#33C#69C#33C#68C#69C#68C#69C#68C#69!4C#41C#106C#69!2C#110C#68C#110C#68C#110C#69C#70C#106C#70!3C#106C#70C#106!2C#70C#106C#70C#106C#70!2C#41C#71C#70C#41C#70C#71C#70C#41!2C#71C#41C#71!2C#41C#43C#41C#72!2C#71C#43C#71C#72!4C#97C#71C#95C#43C#97C#45C#72C#44C#43C#44C#45!2C#44!6C#46C#80C#46C#80!3C#46C#80C#48!2C#80C#48C#80C#48C#46!2C#48!3C#47C#74!3C#49C#50!2C#51!3C#53!2C#51C#53!4C#55C#53C#55C#53C#55!3C#8C#58C#76C#1!2C$#1!5G#76G#1!2G#76G#1G#76G#7G#76G#8G#100G#8G#9G#108G#11G#104G#13G#62!2G#16!2G#93G#89G#64G#19G#81G#20G#21G#66G#79G#78G#23!2G#24!3G#83G#24!2G#92G#67G#25!2G#111G#26G#25G#26!3G#27G#96G#29G#27G#30G#112G#30!3G#32G#84!9G#33!4G#84!2G#34G#33!2G#34G#33G#34G#33!2G#34!2G#69G#33G#39G#70G#33G#69!2G#106G#68G#106G#68G#106G#68G#106G#69G#106G#110G#69G#106G#110G#69G#106G#69G#106G#68G#106!2G#110G#106!5G#70G#106!4G#70G#106!3G#70G#71G#70G#71G#70G#71G#41G#71G#70G#71G#41G#71!8G#72!3G#97G#72G#45G#71G#43!2G#113G#72G#45G#72G#44!2G#45!2G#44!3G#46G#44G#46G#80!2G#46!2G#80!2G#48!2G#80G#48G#80G#48!5G#46G#48!3G#74!3G#49G#50G#51!3G#53G#51!2G#53!7G#55G#53G#55G#53G#55G#75G#58G#1G#76G#1G$#1!3O#76O#1!2O#76O#88O#59O#76!2O#100!2O#7O#8!2O#9!2O#11O#104O#13O#62!2O#109O#93!2O#18O#101O#19O#65O#21O#22O#21O#78!2O#87O#23O#24O#82O#24!2O#83O#24O#25O#67O#25!3O#26O#25O#27O#26!2O#29O#27!2O#30O#27O#30!3O#29O#84O#30O#84!3O#30O#31O#33!4O#84O#34O#84O#34O#33!2O#34O#33!2O#34O#33O#34!2O#69O#33!5O#69O#33O#68O#110!2O#68O#110O#68O#110O#69O#106O#110!13O#106O#110!3O#106O#110O#106O#110O#106!7O#70O#71O#70O#41O#71O#70O#71O#41O#71O#106O#71O#106O#71!3O#43O#71O#43O#71O#72!3O#97O#72O#97!2O#45O#97O#45O#72O#44O#73O#97O#44O#45O#44!3O#46O#44O#46O#80!3O#46O#80O#48O#80!2O#48O#80O#48O#80O#48!9O#74O#49O#50O#74O#51!4O#53O#51O#53!5O#55O#53!2O#55!4O#57O#58O#1!3O$#1!4_#76_#88_#59_#1_#88_#76_#100!2_#114_#100_#8!2_#60_#108_#11_#12_#13_#62!2_#109_#93!2_#18_#64_#19_#65_#21_#22_#21_#78!3_#87_#23_#24!4_#92_#24_#67_#25!2_#26!3_#111_#26!2_#27!2_#30_#27_#30!7_#84!3_#33!2_#84!4_#33_#84_#33!5_#34_#33_#34_#33_#102_#69_#33!2_#69_#33_#39_#33_#69_#70_#110_#68_#110!2_#68_#106_#110!7_#70_#110_#70_#110_#70_#110!12_#106!2_#110_#106_#110_#106!2_#70_#106_#70_#71_#70_#71_#70_#71_#70_#71_#106_#71!7_#72_#95_#72!2_#45_#72_#45_#97_#45_#43_#97_#44_#73_#44!7_#46_#80!2_#46_#80_#48_#80_#48_#80!2_#48_#80_#48_#80_#48_#80_#48_#80_#48!6_#74_#50_#74_#50_#51!4_#53_#51_#53_#51_#53!4_#55_#53_#55_#53_#55!2_#115_#58_#1_#76_#1_$-#1!2@#76@#1!2@#76@#1!2@#76!2@#100@#7@#100!3@#60@#9@#11!2@#104@#13@#62!2@#109@#93!2@#89@#64@#19@#65@#20@#22@#74@#66@#74@#23!2@#24!5@#83@#67@#25!3@#116@#26!4@#27!4@#30!2@#112@#27@#30!3@#84@#30@#84!2@#30@#84!4@#33!6@#34@#33@#34@#84@#34@#33@#34@#33!7@#68@#110@#33@#110@#68@#110!11@#70@#110@#70@#110!11@#106@#110!2@#106!3@#110@#106@#110@#106!2@#70@#106@#70@#71@#70@#71!2@#106@#71!6@#43@#71@#72@#95@#72@#95@#71@#97@#43@#45@#72@#45!2@#97@#44@#73@#44!5@#46@#80!13@#48@#80@#48!4@#80@#48!3@#74!3@#50!2@#51!3@#65@#51@#53!9@#55!2@#53@#55@#115@#58@#2@#76@#1@$#1!3A#76A#88A#59A#1!3A#76A#7A#100A#114!2A#8A#57A#117A#9A#11A#104A#13A#62!2A#16!2A#93A#101A#64A#99A#81A#20A#21A#66A#79A#66A#78A#87A#23A#24!4A#25A#67!2A#25!2A#26!5A#27!3A#30A#27!2A#30!6A#84!6A#33!3A#30A#33A#30A#34A#30A#34A#33!2A#34A#33A#34A#33A#34A#102!3A#69!2A#33A#68A#110!2A#68A#106A#68A#110!6A#68A#110A#70A#110!5A#70A#110A#70A#110!5A#106!2A#110A#106A#110!2A#106A#110A#106!2A#33A#106A#70A#106!2A#31A#41A#71A#70A#71A#106A#71!7A#72!2A#95A#71!2A#95A#72A#97A#45A#97A#45A#73A#44A#95A#44!6A#80!3A#46A#80A#48A#80!2A#48A#80A#48!2A#80A#48A#80A#48A#80A#48A#80A#48!5A#74!4A#50A#74A#51!3A#53A#51A#53!5A#55A#53A#55A#53A#55A#53A#55A#75A#58A#76A#1A#76A$#1!3C#76C#1!2C#76C#1!2C#76C#100C#7!2C#114!2C#60C#117C#118C#11C#104C#13C#119C#16!2C#93!2C#89C#64C#19C#20C#21!3C#78C#74C#78!2C#24!4C#83C#67!3C#25!2C#26C#24C#26!4C#27!4C#30!5C#84C#30C#84C#30!4C#33C#84C#30C#33!5C#34C#33C#34C#33C#84C#34C#33C#102!4C#69C#84C#69C#33C#68C#110C#68C#106C#33C#110!10C#70C#110C#70C#110C#70C#110C#70C#110!4C#106C#110!3C#106C#110!4C#106C#110C#106!2C#70C#106!2C#70C#71C#41C#71C#31C#41C#71C#106C#71!4C#43C#71C#72C#95C#71C#97C#95C#72C#73C#72C#44C#72C#44C#72C#44!2C#95C#44!5C#80!7C#48C#80!5C#48C#80C#48!10C#74!2C#50!2C#51!3C#53C#51C#53C#51C#53!5C#55C#53!2C#55C#53C#55C#57C#58C#76C#88C#59C$#1!3G#76G#1!2G#76G#88G#59G#1G#7!2G#120G#7G#114G#57G#117G#108G#11!2G#13!2G#62G#16G#109G#17G#101G#64G#19G#65G#21G#22G#21G#74G#22G#78G#87G#23G#24!4G#67!2G#25!2G#26!2G#116G#26!4G#27!3G#30G#27!3G#84G#27G#84G#30!2G#84G#30G#34G#30!2G#33G#84G#30G#33G#30G#34G#30G#33G#30G#34G#84G#33!2G#34G#102!3G#84G#69!2G#33G#70G#33!2G#110!25G#106G#110!3G#106G#110G#106G#110!2G#106G#33G#106G#110G#106!2G#31G#41G#106G#31G#41G#71!8G#72!2G#97G#71G#72G#95G#71G#73G#97G#44G#95G#73G#44G#95G#73G#44G#95G#44!4G#80!6G#48G#80!3G#48G#80!2G#48G#80G#48G#80G#48G#80G#48!6G#74!3G#50G#51!4G#53G#51G#53!7G#55G#53!2G#55!2G#115G#58G#76G#1!2G$#1!3O#76O#1!2O#76O#1!2O#76O#100O#7!3O#114!2O#117O#10O#118O#13!2O#62!2O#109O#93!2O#89O#64O#65O#81O#20O#21O#66!2O#78!2O#23O#87O#23O#24!2O#67!3O#25!2O#116O#26!6O#27!3O#30!3O#27O#30!6O#33O#30O#34O#30O#84!2O#33!2O#34O#30O#34O#84O#34O#84!2O#34O#33!3O#102O#41O#84!2O#69O#32O#68O#70O#110!3O#102O#110O#102O#110!21O#106O#110!9O#106O#70O#106O#70O#106!2O#31O#41O#71O#41O#71!2O#41O#71!4O#72O#95O#71O#95O#71O#95O#97O#95O#72O#73O#72O#44O#95O#73O#44O#95O#44O#73O#44!2O#80!12O#48O#80!2O#48!3O#80O#48!3O#80O#48!2O#74!2O#50O#74O#50O#51!3O#53O#51O#53!6O#55O#53O#55O#53O#55O#53O#55O#57O#58O#76O#1!2O$#1!3_#76_#1!2_#76_#1!2_#76_#7!4_#114!2_#117_#118!2_#104_#13_#121_#62_#16!2_#93_#18_#99_#19_#20_#21!2_#74_#22_#66_#74_#23_#24!3_#67!4_#25!2_#26_#24_#26!5_#27!2_#30_#27_#30!3_#27_#30!3_#33_#30_#33_#30_#31_#33_#84!2_#30!2_#34_#84!4_#34_#84_#33!2_#102_#33_#102_#84_#69_#84_#69_#70_#33_#110!3_#102_#110!10_#68_#110!3_#68_#110!4_#70_#110!4_#69!4_#110_#69_#106_#69_#106_#69_#106!3_#31_#70_#106_#70_#71!3_#31_#41_#71!4_#72_#71!2_#95_#71_#95_#97_#72_#95_#72_#44_#95!5_#44_#73_#44!2_#80!14_#48!2_#80_#48!3_#80_#48!4_#74!3_#50!2_#74_#51!4_#53_#51_#53!7_#55_#53_#55_#53_#55_#57_#58_#76_#1!2_$-#1!3@#76@#1!2@#76@#88@#59@#1@#100@#7!3@#120@#57@#117@#118@#11@#104@#13@#121@#62@#16@#93!2@#18@#64@#65@#20!2@#21@#66!2@#74@#66@#78@#24@#23@#24@#67!4@#24@#25@#116@#26!2@#24@#26!3@#27@#30@#26@#30@#26@#30!9@#34@#30@#84!4@#34@#30@#34@#84@#33!2@#84@#33!3@#102@#33@#102@#69@#33@#69@#32@#33@#70@#110!2@#102@#110!2@#102@#110@#68@#110@#68@#110@#68@#110!4@#68@#110!4@#68@#110!2@#70@#110@#39@#110!2@#69@#106@#70!4@#106@#70@#106@#70@#106@#33@#106!2@#70@#106!3@#31@#43@#71!6@#72!2@#97@#95@#71@#95!2@#72@#73@#72@#95!5@#73@#44@#73@#44!3@#80!12@#48@#80@#48!2@#80@#48!2@#80@#48!5@#50@#48@#50!2@#51!3@#53@#51@#53!6@#55@#53!2@#55@#53!2@#55@#117@#58@#1@#76@#1@$#1!3A#76A#1!2A#76A#1!2A#76A#7!4A#120A#114A#117A#108A#118A#13!3A#16!2A#93!2A#18A#99A#65A#20A#21!2A#74A#66!2A#78!3A#24!3A#67A#24A#25!3A#26A#24A#26!6A#30A#26A#27A#30A#27A#30!5A#33A#30A#33A#30A#34A#30A#84!4A#34A#84!3A#33!5A#102!2A#69A#33!3A#70A#32A#33A#110A#102A#110!2A#102A#110!2A#102A#110!2A#102A#110A#102A#110!9A#69A#110!2A#69A#110!2A#69A#106A#68A#106A#70!2A#110A#33A#70A#106A#70A#106A#70A#106!3A#31A#106!2A#70A#106!2A#71!4A#72!2A#95A#71!2A#95A#71!2A#95A#72!2A#95!6A#73!2A#44!2A#73!2A#80A#73A#80!7A#48!2A#80A#48!2A#80A#48A#80A#48!2A#80A#48!3A#74A#48A#74A#50A#74A#51!3A#53A#51A#53A#51A#53!5A#55A#53!2A#55A#53A#55A#117A#58A#1A#76A#1A$#1!3C#76C#1!2C#76C#1!2C#76C#7!4C#114C#122C#117C#10C#11!2C#13C#62!2C#16C#93!2C#101C#64C#65C#20!2C#66C#22C#66C#74C#66C#78C#24!3C#67C#24C#67C#25C#116C#24C#26!5C#113C#26C#30C#26C#30C#27C#30C#27C#30!7C#33C#30!2C#84!2C#33C#84!4C#33C#34C#33!10C#32C#70C#33C#68C#110!3C#102C#110!3C#68!7C#110!9C#69C#110!5C#69C#106C#33C#110C#106C#33C#70C#106C#33C#106C#70C#106!2C#32C#70C#106!6C#29C#71!6C#95C#71C#97C#72C#95C#72C#97C#43C#72C#95C#97C#95!3C#73!2C#44!2C#73C#80C#73C#80!8C#48C#80!2C#48C#80C#48C#80C#48C#80C#48!5C#50C#48C#50C#74C#51C#50C#51!2C#53C#51C#53!10C#55C#53C#55C#9C#58C#1!3C$#1!3G#76G#1!2G#76G#88G#59G#1G#7!2G#120G#7G#120G#57G#117G#118G#11G#13!2G#62G#16!2G#93G#17G#99G#123G#65G#20G#21!3G#78G#22G#78!3G#24!4G#116G#24G#26G#116G#26G#24G#26G#24G#26!4G#27!4G#30!2G#113G#30!3G#33G#30!2G#33G#30!2G#34G#30G#84!2G#33!3G#84G#33!5G#34G#84G#33!5G#70G#110!6G#102G#68G#110!5G#31G#110G#68G#110!7G#68G#110G#69G#110G#69G#110G#69G#106G#33G#106G#33G#70G#106G#33G#70G#106G#33G#106G#32G#70!2G#106!3G#31G#106G#29G#71!5G#72!2G#71G#97G#95G#71G#72G#95G#72G#73G#72G#73G#72G#95!5G#73G#44!2G#73G#80!10G#48G#80G#48!3G#80G#48G#80G#48!7G#50G#74G#50!2G#51!3G#53G#51G#53!9G#55G#53!2G#55G#60G#58G#76G#1!2G$#1!3O#76O#1!2O#76O#1!2O#76O#100O#114O#7O#120O#114!2O#117O#108O#118O#12O#13!2O#16O#124O#93O#101!2O#123O#20!2O#21!2O#74O#66O#74O#66O#78O#24O#78O#24O#67!2O#24O#25O#116O#24O#26!7O#30O#113O#27!2O#30O#27O#30!6O#33O#30O#33O#30O#34O#30O#33!2O#84O#33O#84O#33O#84O#33!2O#34O#33!2O#84O#69O#33!3O#70O#32O#33O#110O#102O#110O#102O#110O#102O#110!16O#68O#110!3O#69O#110O#69O#110O#68O#110O#68O#106O#33O#69O#106O#110O#33O#106O#33O#70O#106!3O#31O#106!6O#71!4O#72!3O#71O#72!2O#71O#72!2O#97O#72O#73O#72O#95O#97O#95!2O#73!2O#44O#73O#80!11O#48O#80O#48O#80O#48O#80O#48!2O#80O#48!4O#50O#48O#50O#74O#51!4O#53!2O#51O#53!6O#55O#53!4O#125O#9O#58O#76O#1!2O$#1!3_#76_#1!2_#76_#1!2_#76_#7_#114_#120_#114!2_#117!2_#10_#12_#104_#13_#62_#16_#77_#93_#101_#18_#65!2_#20_#21!2_#66_#22_#66_#78!3_#24!3_#67_#116_#24_#26!2_#24_#26_#24_#26!5_#27_#30_#27_#30_#27_#30_#27_#30!6_#33_#30!3_#33!2_#84_#33_#84_#33_#34_#84_#33!2_#34_#84_#34_#33!8_#110!2_#102_#110!4_#84_#110_#84_#110_#84_#68_#110!10_#69_#106_#68_#106_#110!2_#106_#33_#110_#68_#106_#110_#33_#70_#106_#110_#106!2_#110_#106_#110_#106_#31_#106_#126_#106_#29_#71!5_#72!6_#97_#72!2_#97_#43_#72_#73_#95!4_#73!2_#44_#80_#73_#80!2_#43_#80!6_#48_#80_#48!2_#80_#48!9_#50_#48_#50!4_#51_#53_#51_#53!2_#51_#53!8_#55_#53_#125_#10_#58_#1_#76_#1_$-#1!3@#76@#1!2@#76@#88@#59@#1@#114!5@#57@#117@#118@#11@#104@#13@#15@#109@#93!2@#101@#18@#65@#20!2@#21@#66@#21@#78@#79@#78!2@#24!3@#67@#24@#25@#24@#26@#24@#26!5@#27@#30@#26@#27!3@#30@#27@#30!5@#40@#33@#30@#33!5@#30@#34@#33!2@#34@#84@#33@#34@#33@#84@#69@#33!9@#110@#102@#110@#102@#68@#84@#68@#110@#33@#68@#110!3@#84@#110@#84@#102@#110!4@#68@#110!2@#68@#106@#33@#68@#110@#68@#106@#68@#106@#33@#69@#106@#110!6@#106@#31@#106!7@#71!5@#97@#72@#97@#72!3@#97@#43@#97@#43@#73@#72@#95@#97@#95@#73@#44@#73@#44@#80@#73@#80!9@#48@#80@#48!4@#80@#48!5@#91@#48@#91!2@#74@#50!2@#51!2@#53@#51@#53@#51@#53!7@#55@#53!3@#125@#9@#58@#1@#76@#1@$#1!3A#76A#1!2A#76A#1!2A#100A#114!2A#122A#57A#114A#117!2A#118A#12A#127A#13A#62A#16A#77A#93A#18A#64A#65A#20!2A#21!2A#66A#21A#78!4A#24!2A#67A#24A#25A#116A#26A#24A#26A#116A#26!4A#27!2A#30!8A#33A#30!2A#33A#30A#34A#30A#33A#30A#34A#33!2A#34A#30A#34A#84A#34A#33!2A#34A#33!9A#68A#110A#102A#110A#84A#68!2A#110!2A#84A#68A#110A#84A#68A#110A#33A#68!2A#110!2A#102A#110!2A#68A#110!2A#68A#106A#110A#33A#106A#33A#110A#33A#110!2A#33A#70A#106A#110A#106A#110!2A#106A#110!2A#106A#31A#106!2A#29A#71!6A#72A#97A#72A#97A#72A#97A#72A#97A#43A#97!3A#95!2A#73A#95A#44!4A#80A#73!2A#80!2A#73A#80!4A#48!2A#80A#48A#80A#48!8A#49A#91A#50!4A#51!4A#53!9A#99A#53!3A#128A#9A#58A#2A#76A#1A$#1!3C#76C#1!2C#76C#1!2C#76C#114C#117C#114C#57C#114C#57C#117C#10C#12C#13!2C#62C#16C#93!2C#101C#64C#65C#20C#21!3C#78C#21C#78!4C#24!4C#116C#25C#116C#26!4C#27!3C#30C#26!4C#30C#26C#30!5C#34C#30!2C#33C#30C#34C#30C#34C#30C#34!3C#84C#34C#84C#34C#33!12C#68C#102!2C#68C#110!2C#84C#33!2C#84C#68C#110C#84C#68C#110!3C#84C#110C#102C#110C#102C#110!2C#68C#110C#33C#68C#106C#68C#110C#68C#106C#68C#106C#33C#106C#33C#106C#33C#106C#110C#106C#31C#106!2C#31C#106!5C#29C#71!2C#72!2C#97C#72C#97C#71C#95C#43C#97C#45C#72C#45C#72C#73C#97C#73!3C#44!4C#80C#73!2C#80!5C#48C#80C#48!11C#91C#48C#91C#74!2C#50!2C#51!2C#53C#51C#53!7C#99C#53!2C#55C#99C#53C#125C#9C#58C#76C#1C#76C$#1!3G#76G#1!2G#76G#88G#2G#76G#114!6G#117G#10G#118G#13G#62!2G#16G#93!2G#101G#65!2G#20G#21!2G#66G#21G#78!5G#24!3G#129G#25!2G#26G#116G#26!3G#111G#27!2G#26G#30!3G#26G#30!5G#34G#30!2G#34!2G#30G#34G#30G#34G#30G#34!2G#30G#34G#30G#34G#84G#33G#34G#84G#34G#33!9G#110!3G#84!2G#33!4G#68G#110G#84G#68G#110!2G#84G#68G#110G#68!3G#110!7G#33G#110G#33G#110G#33G#106G#33G#110G#33G#106G#110!2G#106G#110!2G#106G#31G#106!3G#29G#106G#29G#71!5G#72!2G#97G#72G#97G#43G#29G#43G#97!5G#73!2G#29G#44G#73G#44!4G#80!7G#48G#80!2G#48!7G#107G#48!2G#91!2G#49G#50G#74G#50!2G#51!3G#53G#51G#53!2G#65G#53!3G#99G#53!2G#99G#53!2G#128G#9G#58G#76G#1!2G$#1!3O#76O#1!2O#76!4O#7O#114!5O#57O#117O#118O#104O#13O#62O#77O#93O#17O#101O#65O#20!2O#21!3O#66O#21O#78!3O#24!2O#129O#67O#25O#116!2O#26!2O#116O#26!2O#27O#111O#30O#111O#26!3O#30!2O#96O#30!2O#112O#30O#112O#34O#30!2O#34O#30O#34O#30O#34O#112O#34!2O#30O#34!2O#84O#33!3O#84O#33!10O#102!2O#110O#84O#33!3O#110!3O#84O#33O#110O#84O#68O#110!6O#102!2O#110O#102O#110O#33O#110O#33O#110O#68O#106O#33!2O#70O#110!4O#33O#106O#31O#106O#31O#106O#31O#106!6O#29O#72O#71O#29O#72!2O#97O#71O#43O#97!3O#45O#97O#45O#97!2O#44O#73O#113O#97O#44O#113O#44O#45O#80!2O#44O#80!4O#48!2O#80O#48!6O#107O#48O#91O#48O#91O#74!3O#50O#74O#50!2O#51!2O#53O#51O#53!6O#99O#55O#99O#53O#99O#53O#125O#9O#58O#1!2O#76O$#1!3_#76_#1!2_#76_#88_#1_#59_#7!4_#120!2_#114_#10_#130_#127_#62!2_#77_#93_#101_#18_#65_#20_#131_#21!2_#66!2_#74_#66_#78_#23_#24!4_#116_#25!2_#116_#26!4_#111_#26_#27_#30_#26_#30_#26_#30_#96_#30!2_#112_#30_#34_#30_#112_#34_#30_#112_#30!2_#34_#30_#34!2_#30_#34!2_#84_#33_#34_#33!2_#34_#33!10_#110_#31_#102_#110_#33!7_#110_#84_#33_#84_#110_#84!2_#110_#84_#110!4_#102_#110_#33!2_#68_#33!4_#70_#110_#32_#70_#32_#70_#106_#32_#70_#106_#31_#106!2_#31_#106!3_#29_#71!4_#72!3_#97!2_#29_#71_#97_#43_#97!3_#45_#97_#113_#97_#44_#113!2_#45_#44_#113_#45_#46_#80!3_#46!2_#80!2_#48!2_#107!4_#48_#107_#91_#48_#91_#74!2_#91_#49_#74_#50!3_#51!3_#53_#51_#53!9_#55_#53_#128_#9_#58_#59_#1_#76_$-#1!3@#76@#1!2@#76@#59@#88@#1@#132@#133@#7@#133@#7!2@#57@#117@#118@#12@#14@#62@#16@#93@#101@#18@#65@#20!2@#21!2@#66!3@#78@#24@#23!2@#24@#129@#25@#116@#25@#116@#26@#116@#26@#116@#111@#26!2@#111@#26!2@#96@#30@#96@#30!3@#112@#30@#112@#34@#30!2@#112@#34@#30!2@#32!2@#34@#30@#34@#30@#34!2@#84@#33@#34@#84@#69@#33!2@#34@#33!7@#110@#102@#31@#102@#84@#33!2@#110!3@#84@#33!4@#110@#84@#110@#84@#110@#102@#84@#102@#110@#84@#110@#102@#33@#70@#33@#70@#33@#70@#31@#33@#70@#33@#70@#32@#70!2@#106@#32@#70@#106@#31@#106@#31@#106!2@#134@#106!3@#29@#72@#29@#72@#71@#29@#43@#97!3@#113@#43@#113@#97@#113!7@#44!5@#47@#80!2@#46!3@#107!2@#48!4@#91@#48!2@#91@#74!4@#49@#50@#74@#50!2@#51!2@#53@#51@#53@#51@#53!3@#99@#53@#99@#53!2@#99@#53@#125@#9@#58@#1!3@$#1!3A#76A#1!4A#76A#2!2A#132!3A#133!2A#7A#117A#130A#127A#135A#62A#16A#93A#17A#123A#65A#20A#131A#66!4A#78!2A#24A#23A#24!3A#129A#25A#111A#116A#26!2A#116A#26!3A#27!2A#96A#30A#26A#96A#30A#96A#30A#112A#30A#112A#30!2A#112A#34A#30A#112A#34A#30A#34!2A#30A#34A#30A#34!2A#32A#34A#33!4A#34A#33!5A#32A#33!2A#32A#33A#110A#102A#110A#84A#33!3A#84!2A#33!2A#110A#33A#84A#33A#84A#68A#110A#102A#84A#110A#31A#102A#110A#102A#31A#33!3A#32A#70A#32A#70A#33A#31A#70A#31A#70A#31A#32A#70A#31!3A#106A#31A#106A#126A#106A#134A#106A#29A#71!4A#29A#72A#97!3A#113A#97A#113!2A#27A#113!7A#44A#25A#44A#25A#85A#46A#85A#47A#46!3A#47A#46A#48A#107!2A#48A#91A#48A#91!2A#74!4A#91A#74!2A#50A#49A#50A#51!3A#53A#51A#53!2A#65A#53!4A#99A#55A#99A#53A#125A#9A#58A#59A#1A#76A$#1!3C#76C#1C#76C#1!2C#76C#2!2C#132!4C#133C#7C#117C#118C#104C#14C#136C#93!2C#18C#123C#20C#131C#21!2C#66!3C#78!2C#116C#24C#116C#129C#116!4C#26C#116C#26C#116C#26!3C#111!3C#26C#96!3C#30C#96C#30C#112C#30C#112!4C#30!2C#32!4C#34C#32C#34!2C#30C#34C#32C#34C#33!2C#34C#32C#33C#34C#32C#33C#32C#33!4C#32C#33C#31C#102C#110C#84C#33C#84C#33C#110!2C#84!2C#110C#84C#68C#110!2C#32C#110!2C#84C#110C#84C#31C#102C#33!3C#70C#32C#70C#32C#70C#31C#70C#106C#32C#31C#70C#31C#70C#31!3C#106!2C#126C#106!2C#134!2C#97C#134C#97C#29C#71C#29C#97C#113C#27C#97C#113C#27C#113C#97C#113!2C#44C#113!3C#44C#25C#113C#44C#85C#113C#47C#44C#47C#44C#24C#46C#47!4C#48C#74C#48!2C#74C#48C#74C#48C#91C#74!2C#49C#74C#50C#74C#50!3C#51!3C#53C#65C#51C#53!6C#99C#55C#53C#125C#9C#58C#59C#1C#76C$#1!3G#76G#88G#59G#1!3G#2G#7G#132!2G#2G#132G#133G#7G#117G#10G#127G#14G#136G#77G#93G#18G#64G#20!2G#131G#66G#21G#66G#74G#116G#66G#24G#137G#24!2G#129G#25G#116!4G#26G#116G#26G#116G#111G#26G#27G#111G#27G#96G#30G#96!2G#30G#96G#112!4G#30G#34G#112G#30G#32!2G#34G#32G#34G#32G#34G#32G#34!3G#33G#34G#32G#33G#34G#33G#32G#33!5G#32G#33!2G#110G#84G#31G#84G#110G#84G#110G#84!3G#110G#84G#110G#84G#110G#126G#110G#84G#110G#32G#110G#84G#31G#110G#31G#110G#31G#32G#70G#32G#70G#31!2G#70G#29G#32G#70G#106G#31G#106G#31!2G#41G#106G#29G#106!2G#29G#134!2G#97G#134G#97!4G#73G#26G#97G#113!5G#85G#44G#25G#85G#25G#85G#25G#85!9G#47!2G#46G#47!3G#48G#87G#47G#74!8G#49G#74!2G#50G#49!2G#50!2G#51!4G#53!6G#99G#53!2G#99G#53G#125G#9G#58G#59G#1!2G$#1!3O#76O#1!2O#76O#1O#76O#2!2O#133O#132O#2O#132O#133O#7O#117O#138O#127O#135O#136O#93O#17O#101O#65O#20O#131O#21O#66!5O#24O#116O#24O#116O#24!2O#129O#116!2O#26O#116!4O#111O#25O#111!2O#26O#111!3O#30O#111O#96!2O#30O#96O#112!2O#30O#96O#112O#30O#32!4O#34O#32O#34!2O#84!4O#34O#33O#34O#33!2O#34O#32O#33!7O#32O#102O#110O#84!3O#33O#110O#84O#110O#84O#110O#84!2O#110!2O#84O#110O#84O#110O#84O#110O#31!3O#102O#31O#110O#31O#70O#106O#32O#31O#106!3O#126O#29O#106O#126O#31O#71O#29O#106O#29!2O#106O#29O#134O#97O#134O#97!2O#29O#26O#97O#26O#73O#139O#26O#113O#25O#85O#25O#85!15O#47O#85O#47!5O#24O#74O#48O#74O#87O#74O#48O#74!5O#49O#74O#49!2O#74O#50!2O#51O#20O#53O#51O#65O#53O#51O#53!3O#99O#53O#125O#53!2O#17O#9O#58O#59O#1O#76O$#1!3_#76_#1!2_#76_#88_#76_#59_#2!2_#133_#132_#140_#132_#120_#57_#141_#127_#14_#62_#77_#89_#64_#19_#20_#21!3_#66!3_#78_#66_#24_#137_#23_#116_#129_#116!7_#25_#116_#26_#116_#111_#26_#111_#27_#111!2_#112_#111_#30_#96_#112_#30_#112!3_#34_#112!2_#32!3_#34_#32_#34_#32_#34!2_#84_#34_#84!2_#34_#32_#33_#32_#33_#102_#32_#33!6_#110_#84!2_#68_#110_#84_#110_#84!2_#110_#84!2_#110!2_#126_#110_#126_#110_#84!3_#110_#31!9_#106_#126!2_#29_#106_#126_#29_#106_#29!4_#106_#29!3_#97!2_#139_#29_#139!2_#142_#143!2_#83_#143_#90_#144!4_#24!2_#87_#24!2_#87_#24_#87_#24_#87_#24_#47_#87_#47_#85!2_#47_#85!2_#47_#24_#48!4_#74_#48_#74!6_#49_#74_#49!3_#50!2_#74_#51!4_#53_#51_#53_#65_#53!5_#125_#53_#17_#9_#58_#59_#1!2_$-#1!3@#76@#1!2@#76@#59@#88@#1@#7!2@#132!2@#140@#132@#7@#57@#10@#127@#14@#16@#77@#89@#64@#65@#20@#131@#66!2@#21@#66!2@#74@#116@#66@#23@#116@#66@#116!4@#66@#116!6@#25@#116@#111@#26@#111!6@#30@#111@#112@#96@#112@#96!2@#112!2@#32!2@#34@#112@#32@#34@#32@#34@#32@#34@#84!3@#34@#32@#34@#33@#34@#33!3@#84@#33@#32@#33@#32@#110@#102@#110@#32@#84!3@#110@#84!2@#110@#84@#110@#126@#110!2@#126@#31!3@#134@#84@#31!6@#29!5@#106@#28@#29!6@#71@#28@#29@#26@#97@#145!3@#26@#143!3@#83@#144@#83@#144@#24@#82@#24@#82@#87@#79!4@#74@#79!3@#78@#74@#79@#74@#79@#78@#74@#87@#24@#47!2@#24@#47@#48@#24@#48@#74@#78@#48@#74@#78@#74!5@#49!4@#74!2@#50!2@#51!3@#20@#51@#53@#65@#53!6@#125@#53@#17@#9@#6@#59@#1@#76@$#1!3A#76A#1!4A#76A#2A#7A#133A#132!2A#2A#140A#133A#114A#10A#130A#135A#62A#63A#89A#64A#65A#20A#21!2A#66A#21A#74A#131A#66!9A#21A#131A#66A#21A#116A#21A#116!2A#129A#116!2A#129A#111A#26A#116A#111!5A#96!2A#112A#111A#112!4A#32A#112A#34A#32!2A#34A#32A#34A#32A#34!2A#84!2A#34A#32A#33A#32A#33A#84A#102A#84A#102A#32A#33A#102A#31A#84!3A#110A#84!6A#110A#126A#110A#126A#110!3A#134A#31A#134!3A#31A#106A#126A#29A#106A#29!5A#27A#29!4A#27A#29A#97A#26A#97A#145!3A#26!3A#143!2A#144A#24A#82!2A#79!3A#74A#146A#49A#22!2A#147A#22A#147!3A#22A#147!2A#22A#147!3A#49A#74A#79A#87!2A#24A#47!2A#24A#48A#47A#48A#74!3A#48A#74!4A#49!5A#50!2A#74!2A#51A#21A#51!4A#53A#51A#53!3A#99A#55A#53A#55!2A#8A#59A#1!3A$#1!3C#76C#1C#76C#1C#76C#88C#100C#7!2C#1C#133C#2C#140C#133C#114C#10C#130C#135C#62C#17C#18C#64C#65C#21!7C#78C#66C#78C#66!3C#21C#66C#21C#66C#22C#21!3C#66!4C#116!4C#129C#116C#129C#26C#111!7C#112C#111C#112!3C#32C#112C#32!3C#34C#32!2C#34C#112C#34C#32C#84C#34C#32C#102C#84!5C#102C#31C#102C#84!2C#102C#84!8C#110C#84C#110C#126C#110C#126C#110C#29C#134!4C#29C#126C#106C#126C#29!5C#27C#97C#26!2C#113C#26C#113C#26!7C#139C#143C#83C#144C#82C#79C#146C#79C#49C#146C#147!6C#65C#147C#52C#148!4C#51C#148C#51C#81C#51C#148C#21C#147C#22C#74C#78C#24C#48C#24C#47C#24C#48C#78C#47C#74!6C#147C#49!3C#74C#50C#74C#50!4C#51!3C#65C#53C#65C#53!4C#99C#53C#125C#99C#17C#9C#58C#59C#1!2C$#1!3G#76G#88G#59G#1!2G#76G#1G#7!2G#1G#2G#140G#2G#132G#120G#10G#130G#14G#62G#63G#18G#19G#65G#20G#21!5G#74G#21G#66G#22G#21!4G#149G#21G#20!2G#21G#149G#21!2G#149G#131G#21G#131!2G#150G#66G#137G#116!4G#129G#111!7G#112G#111G#112!4G#32G#112G#32!4G#34G#112G#34G#32!2G#34G#84!18G#110G#84G#126G#110G#126G#110G#126G#110G#126G#134!4G#29G#134G#29!2G#145G#29!3G#27G#29G#113G#26G#139!2G#26G#139G#83G#143G#139G#83G#143G#83G#143G#83G#94G#24G#79!2G#146G#22G#147G#21G#147G#65G#147G#151!4G#152G#65G#152G#65G#152G#65!2G#152G#65G#152G#65G#152G#65G#152G#51!2G#21G#74!2G#78G#74G#24G#48!2G#24G#48G#74!4G#21G#49!2G#74G#49!2G#50!2G#74G#50G#74!3G#51G#21G#51!4G#53G#51G#53!4G#125G#55G#53G#17G#9G#6G#1!2G#76G$#1!3O#76O#1!6O#114O#120!2O#133O#140!2O#133O#120O#117O#130O#14O#62O#63O#18O#19O#20!2O#21!11O#20!3O#153!2O#20O#153!6O#149O#153O#21O#149O#131O#21O#150O#66O#154O#137O#116O#137O#129!3O#111!4O#112O#111O#112!3O#32O#112!2O#32!3O#112O#34O#112O#32O#84O#32O#84!12O#32O#84!6O#126O#110O#126O#84O#126O#110O#126O#134O#110O#126O#29!3O#145O#29O#97O#28O#27!4O#26!2O#139O#92O#83!4O#24!2O#94O#24O#82O#79O#146O#79O#146!2O#21O#52O#147O#151!3O#152O#155!2O#99!3O#155O#156O#99O#156O#155O#156!2O#99!3O#157!2O#53O#156O#65O#152O#148O#147O#74!2O#78O#74O#24O#48O#74!4O#78O#74O#48O#49O#74O#49O#74O#50O#74O#50!2O#74O#50!2O#74O#51O#50O#51!2O#20O#53O#51O#53!3O#99O#53!2O#125O#55O#17O#9O#58O#1!3O$#1!3_#76_#1_#76_#1_#76_#1!2_#114_#7_#1_#133_#5_#132!2_#120_#10_#130_#14_#158_#63_#18_#65_#20_#21!9_#20!3_#65_#151_#123!2_#19_#123_#19!2_#123_#64_#123!6_#151_#159_#153_#149!2_#131!2_#150_#66_#154_#129!3_#111!6_#112_#111_#112!2_#32!4_#112_#34_#112_#32_#84!13_#102_#84!6_#110_#126_#84_#110_#126!2_#110_#126_#29!4_#142_#29_#97_#92_#29_#26!3_#113_#26_#83_#26_#83_#24!2_#82!2_#79!2_#146!2_#147!2_#160_#151!2_#152_#155!2_#161_#18!2_#162!3_#125_#86_#163!2_#86_#164_#162_#18_#162_#18!2_#162_#18_#128_#162_#18!2_#157_#53_#152!2_#148!2_#22_#49_#74_#78_#24_#48_#78_#74!7_#50_#74_#50_#74_#50_#74_#50_#74!2_#51_#74_#51_#21_#51!3_#53_#51_#53!4_#125_#99_#53_#17_#9_#6_#59_#1!2_$-#1!3@#76@#88@#59@#1!2@#76@#1@#120!2@#7@#133@#132@#140@#132@#120@#57@#141@#13@#62@#63@#64@#123@#20!2@#21@#20@#21@#81!3@#153@#20!2@#65@#151@#64!3@#18@#165@#18@#165@#89!2@#63!4@#89@#162@#89!2@#18@#166@#64@#123!2@#153@#149@#131!3@#154@#129!3@#111!6@#112@#111@#112!3@#32@#112!2@#34@#32@#84!3@#34@#32@#34@#32@#84!12@#126@#84!2@#126@#110@#126@#110@#126@#29!3@#142@#29@#145!4@#26!3@#113@#83!3@#24@#94@#79!2@#146!2@#147@#160@#148@#167@#156@#155@#161@#18@#164@#86!2@#163@#56@#168@#56@#158!2@#56@#158@#169@#158!2@#168@#158@#56!2@#86@#163!2@#125@#163@#125!2@#128!2@#162@#18@#99@#156@#152@#81@#51@#21@#74!3@#78@#74!3@#66@#74!5@#50!2@#74@#50@#74!2@#51@#74@#21@#50@#74@#51!3@#20@#53!4@#99@#53!2@#17@#53@#17@#9@#6@#88@#59@#1@$#1!3A#76A#1!4A#76!2A#122A#7!2A#132A#2A#140!2A#120A#57A#130A#14A#77A#89A#64A#65A#20!3A#21A#20!2A#65!3A#151!2A#123A#64!2A#89!2A#18A#89!2A#63!2A#158!4A#170A#16A#170A#16!2A#158A#63!2A#162A#89A#64A#171A#123A#159A#21A#131!2A#154A#137A#129!4A#111!3A#112A#111A#112!4A#32A#112!2A#84A#112A#84!2A#32!4A#84A#32A#84!5A#32A#84!4A#126A#84A#126A#84A#126!3A#29A#134A#142A#126A#29A#142A#145A#172A#83!4A#24!3A#82A#79A#173A#146A#21A#160A#148A#167A#156A#161!2A#164A#86A#163!2A#168A#158A#169A#174!2A#175A#174!2A#175A#174A#175A#174A#175!2A#174A#169A#158!2A#168A#56!3A#163!5A#125A#164A#162A#54A#156A#152!2A#148!2A#22A#21A#74!2A#66A#74!3A#21A#74A#21A#74!2A#50A#74A#50A#74A#50A#74A#50A#74A#50A#74A#51A#21A#51!2A#53A#51A#53!3A#99A#55A#53A#55A#17A#8A#58A#59A#1!2A$#1!3C#76C#1C#76C#1!3C#76C#122C#100!2C#2C#140!2C#132C#120C#176C#130C#135C#158C#89C#64C#65C#20C#21!2C#20!2C#65!2C#152C#19!3C#64C#18C#89C#18C#86C#177C#86C#63C#56C#16C#170C#135C#178!2C#179!2C#178C#179C#135C#170!3C#16C#93!2C#162C#166C#64!2C#159C#20C#21C#131C#66C#137C#129!2C#116C#129C#111!5C#112!3C#32!2C#112C#84C#112C#34C#112C#32!6C#84C#32C#84!2C#32C#84C#32!3C#84C#126C#110C#126!2C#134C#126C#134C#142C#126C#142!2C#172C#83!4C#24!2C#82C#94C#79C#173C#146C#147C#151!2C#167C#156C#161C#18C#164C#163C#168!2C#174!3C#175!2C#180!2C#181!2C#180!6C#175C#180C#175!2C#174!3C#158!2C#168C#56C#77C#163!2C#56C#163C#128!2C#18C#54C#65C#152C#21C#51C#74C#22C#74!2C#21C#74C#49C#74C#49C#74C#50C#74!2C#50C#74!3C#21C#74C#50C#74C#21C#50C#51!3C#53!5C#99C#55C#101C#55C#17C#9C#6C#59C#1!2C$#1!3G#76G#88G#59G#1!3G#76G#122G#100G#7G#133G#182G#140!2G#120G#10G#130G#170G#77G#18G#123G#153G#21G#20G#21G#20!2G#65G#19G#99G#18!5G#89G#86G#89G#177G#63!2G#16G#170G#179!2G#183G#130G#183!3G#127G#179G#127G#14G#135!2G#170G#16!2G#93G#89G#171G#64G#159G#153G#20G#21!2G#150G#66G#137G#24G#129!2G#111G#96G#112G#111G#112!6G#84G#112G#84G#112G#32!8G#84G#32!3G#84G#126G#84G#126!3G#110G#126G#29G#142G#126G#142!2G#172G#83G#139G#83G#24G#82G#79!3G#173G#146G#21G#151!2G#156G#155G#161G#162G#164G#163G#168!2G#174!2G#175!4G#180G#183G#181!3G#184G#181!2G#180G#181G#180G#181G#180G#181G#180!3G#175!2G#174G#169G#56!2G#168G#56!5G#128!2G#156G#152!2G#148G#21G#147!2G#21G#74G#49G#21G#74G#49G#74!2G#50G#74G#50G#74G#51G#74G#50G#74!2G#51G#74G#51G#21G#51!3G#53G#51G#53!2G#55G#53G#55G#53G#17G#9G#58G#59G#1G#76G$#1!3O#76O#1!2O#76O#1O#2O#76O#60O#122O#7O#132O#140O#182O#140O#185O#10O#183O#135O#93O#18O#123O#20!2O#21!2O#20O#81O#19O#99O#89O#164O#89O#86O#162O#89!5O#63O#158O#170O#178O#127O#183O#141!3O#130O#183!2O#127O#179!3O#178!2O#135O#16!2O#93O#162O#89O#166O#64O#123O#153O#186O#149O#21O#150O#187O#23O#188O#189!2O#111!3O#112O#111O#112!6O#32!3O#112O#32!6O#84O#32!2O#126O#84O#126!2O#110O#126O#145O#126O#142O#126O#142O#145O#172!2O#83!2O#190O#94O#82O#79O#173!2O#146O#147O#151!2O#155O#161O#162!2O#164O#163O#168!2O#174O#175!5O#180!3O#181!2O#180O#181O#180!2O#181O#180O#183O#180!2O#183O#180O#183O#175!2O#174!2O#169O#158O#168O#191O#168O#169O#168O#56!2O#164O#128!2O#156O#152!2O#51O#148O#51O#49O#147O#49!4O#51O#74!2O#50O#74!4O#50O#74!2O#21O#50O#74O#50O#51!3O#53!5O#99!2O#53O#17O#9O#6O#59O#1!2O$#1!3_#76_#1!2_#76!2_#1_#76_#60_#114_#7_#2_#140!3_#192_#115_#183_#62_#63_#166_#65_#20_#21!2_#20!2_#65_#19_#162_#125_#63_#163_#56_#63_#86_#162_#89!2_#177_#63_#16_#170_#127_#183_#141!4_#183!2_#175_#127_#179_#193_#179_#178_#135_#178_#135_#170_#16!2_#177!2_#89_#64_#194_#151_#153_#186!2_#150_#173_#137_#188!2_#189_#96_#111_#96_#112!12_#32_#112_#32!6_#126!4_#145_#126!2_#142_#126_#142_#172!2_#83!4_#94!2_#82_#79_#173_#146_#147_#20_#151_#155_#161_#162_#128_#163!2_#56_#168_#169_#175_#169_#175!5_#180_#175_#180!2_#181_#175!2_#183_#175!2_#174_#175_#174_#175!2_#174_#175_#174_#169_#168!2_#56!5_#169_#56!2_#163_#164_#128!2_#156!2_#65_#152_#148_#51_#147!2_#49_#50_#74!2_#50_#74!2_#50_#74_#51_#74!2_#51_#74!2_#50_#74_#51_#21_#51!3_#53!4_#55_#53_#55_#17_#9_#6_#59_#1!2_$-#1!3@#76@#1!3@#76@#88@#100@#122@#114@#120@#2@#140!2@#133@#192@#141@#127@#16@#63@#19@#65@#20@#21@#20!2@#81@#19@#64@#125@#56!2@#168@#56@#177@#63@#162@#89@#162@#177@#16@#158@#170@#178@#127@#183!3@#175@#183@#178@#193@#179@#178@#175@#193@#178!3@#170@#135@#170@#16!2@#177@#162@#89@#165@#194@#195@#153@#20@#186@#150@#173@#187@#188!2@#189@#96@#111@#96@#111@#96@#112!10@#126@#112@#126!2@#32@#112@#32@#126!2@#29@#110@#126@#142@#145@#126@#142@#172@#83@#172@#83!3@#94@#196@#82@#79@#173@#146@#197@#147@#167@#156!2@#162@#125@#86@#164@#163@#168!2@#169!2@#175!6@#179@#175!5@#168!3@#177@#168@#177@#56@#163!7@#164!2@#162!2@#164!3@#163@#164@#56@#98@#164@#128@#18@#54@#156@#152@#52@#81@#51!2@#21@#49@#50!2@#74@#50@#74@#50@#74!3@#21@#74@#50@#74!2@#21@#50!2@#51!3@#53@#51@#53@#99@#53@#101@#53@#17@#9@#58@#59@#198@#76@$#1!3A#76A#1A#76A#88A#59A#88A#100A#122A#114A#120A#133A#140!2A#133A#192A#138A#14A#77A#18A#123A#65A#21A#20A#21A#20A#65A#99A#18A#163A#56A#168A#158A#16A#177!2A#63A#162A#105A#89A#63A#16!2A#170!4A#62A#170!2A#16A#170!2A#178!2A#174A#178!3A#135A#170!2A#16A#177A#16A#162A#177A#165A#194!2A#195A#153A#186!2A#150A#187A#94A#188A#83A#189!2A#172A#96!5A#112!3A#172A#112A#145A#112A#145A#126!5A#84A#145A#126A#29A#142A#145A#126A#145!4A#172A#83!2A#196A#94A#196A#94A#79!2A#173A#197A#147A#160A#151A#195A#161A#162A#164!2A#163A#168A#56A#168A#169A#175!2A#169A#175!2A#174!2A#175A#174A#169A#170A#168A#177A#168A#162A#89A#18A#165A#161!2A#165A#161!4A#99A#155!2A#152A#155A#156A#99!2A#161A#164!3A#163!2A#164A#128!2A#157A#53A#156A#152A#81A#51!3A#74A#50A#74A#50A#74!2A#51A#74A#51A#74A#50A#74!2A#50A#74A#50A#74A#51!4A#53!4A#55A#53A#17A#9A#6A#59A#1!2A$#1!3C#76C#88C#59C#1!2C#2C#76C#122C#100C#7C#132C#2C#140C#133C#176C#130C#135C#16C#101C#123C#20!2C#21C#20!2C#65C#99C#162C#63C#177C#158C#177!2C#163C#86C#162C#89!3C#162C#177!2C#89C#177C#89C#177C#89!3C#177!2C#199C#177C#170!7C#168C#16C#170C#177!3C#165!2C#194!2C#195C#160C#149C#150!2C#173C#187C#188C#83!2C#189C#172C#92C#112C#96C#112C#92C#112C#172C#145C#112C#145C#112C#145C#112C#145C#126C#29!2C#145C#84C#145C#126C#145C#126C#145!4C#172C#83!3C#196!2C#94C#79!2C#200C#197C#147C#160C#151!2C#156C#161C#162C#164C#163C#164C#163C#168C#169!2C#175C#169C#175C#169!2C#174C#169C#168!2C#177!2C#163C#162C#171C#194C#195C#151C#153C#151C#153C#20C#151C#153C#20C#151C#20C#148C#20C#65C#147C#65C#151!2C#152C#155C#99C#164C#128C#164!2C#55C#164C#128!2C#157C#53C#152!2C#51!2C#21C#74C#50C#74C#50C#74!8C#21C#74C#50C#74C#51!4C#53C#51C#53!4C#17C#9C#6C#59C#1!2C$#1!3G#76G#1!2G#76!2G#1G#76G#122G#100G#7G#133G#2G#140G#133G#192G#130G#135G#93G#64G#65G#20G#21!2G#20G#81G#65G#99G#18G#86!3G#162!2G#165G#89G#64G#165G#171!3G#194G#123G#194G#123G#153G#159G#153G#159G#123G#159G#194G#171G#165G#89G#177G#199G#16G#170G#16G#170G#16G#177!2G#199G#177G#162G#177G#194G#165G#194G#167G#153G#186G#197!2G#150G#187G#94G#188!2G#83!2G#189G#92G#145G#112G#92G#112G#145G#96G#172G#145G#112G#145G#112G#145!2G#29G#145G#126G#145G#126G#145G#126G#142G#172G#145!2G#172G#83!3G#196!2G#94G#79!2G#200G#197G#148G#160!2G#148G#156!2G#161G#162G#164!2G#168!4G#169!2G#168G#169!2G#168!2G#56G#177G#86G#162G#161G#155G#151!2G#20!2G#197G#21!7G#146G#21!2G#146!5G#21G#20G#151G#152G#155G#128!3G#164!2G#128G#55G#164G#128G#54G#152!2G#51!2G#50G#74!2G#50G#74G#51G#74G#51G#74G#50G#74G#21G#74G#49G#74G#50G#74G#51!2G#65G#51G#53!2G#99G#53!2G#17G#9G#58G#59G#1!2G$#1!3O#76O#1!3O#76O#58O#76O#122O#100O#7O#2O#140!2O#133O#117O#141O#135O#89O#64O#153O#20O#21O#20O#21O#20O#152O#155O#18!2O#162O#155O#64O#123O#194O#151O#123!2O#153O#160O#20O#186O#149!2O#150O#149O#187O#150!4O#186!2O#159O#153O#195O#194O#177O#162O#177!2O#199O#177!2O#162O#177O#162O#194O#162O#194!2O#195O#167O#159O#186O#197O#150O#173!2O#94O#23O#188O#83O#92!2O#145O#96O#145O#112O#172O#145O#96O#92O#145O#92O#112O#145O#112O#145O#112O#145O#172O#126O#145O#126O#172!5O#83!3O#196O#94O#79!2O#201O#146O#148!4O#167!2O#156O#161!2O#164O#162O#164O#163O#168!6O#163!2O#162!2O#18O#155O#151!2O#153O#20O#197O#21O#146O#150O#146O#173!4O#79O#173!2O#79O#173O#79O#173O#23O#173O#22O#146O#147O#21O#151!2O#152O#156O#161O#128!2O#164!3O#128!2O#54O#53O#52O#51O#21O#74O#50O#74O#50O#74O#50O#74!3O#49O#74!2O#49O#74O#21O#49O#21O#50O#51!3O#53!4O#17O#9O#6O#198O#59O#1O$#1!3_#76_#1_#76_#88_#76_#1_#76_#60_#100_#7_#2_#140!2_#133_#192_#130_#170_#105_#19_#153_#20_#21!2_#20!2_#65_#152_#155!2_#151_#123_#160_#20!2_#186!4_#149_#150!3_#187!5_#137_#187!4_#150_#186!2_#159_#153_#195_#171_#194_#162_#165_#162_#165_#194_#177_#194!4_#195_#167_#186!3_#197_#150_#173_#187_#94_#83_#188_#83_#92!2_#145_#92!2_#112_#172_#92_#112_#145!7_#112_#145!3_#172!4_#83!4_#196!2_#79_#196_#201_#173_#197!2_#148!2_#167!3_#156_#161!2_#164_#162_#164!3_#163_#164_#163_#164_#162!2_#161_#155_#195!2_#151_#20_#186_#197_#21_#146_#173!3_#137_#79_#187_#23_#94_#187_#23!9_#79_#173_#146!2_#21_#151_#65_#152_#156!2_#128!2_#164_#55_#164_#55_#54_#152_#52_#51_#50!2_#74_#50_#74!2_#50_#74!3_#49_#74!4_#49!2_#50_#51!3_#65_#53!3_#17_#9_#6_#59_#1!2_$-#1!3@#76@#88@#59@#1@#76@#58@#76@#60@#122@#7@#2@#182@#140!2@#192@#141@#135@#89@#123@#20!2@#21!3@#81@#20@#151@#123@#151!2@#153@#20@#21@#186@#149!2@#21@#150!3@#187@#137!7@#188@#137!3@#187@#137@#150@#202@#186@#159@#160@#195!3@#194!7@#167@#195@#203@#160@#186!2@#197@#150@#173@#94!2@#23@#83!2@#26@#92!2@#112@#172!6@#92@#145@#92@#112@#92@#145!6@#172@#83!2@#172@#83!2@#196!3@#79!2@#201@#146@#201@#148@#160@#148@#167@#151!2@#156!2@#161!2@#162!7@#161!2@#155@#195!2@#151@#147@#186@#21@#197@#146@#173!4@#23@#79@#137@#23@#79@#23!9@#24@#79@#23!2@#79@#22@#21@#147!2@#52@#65@#152@#156@#54@#204@#164!2@#204@#55@#53@#52@#51!2@#74@#51@#74@#51@#74!3@#50@#74@#49@#74!3@#49@#74@#49!2@#50@#51!2@#53!4@#17@#9@#58@#59@#1!2@$#1!3A#76A#1!3A#76A#1A#76A#60A#122A#7A#133A#140A#182A#133A#192A#141A#16A#89A#64A#20A#21!2A#20A#21A#20A#65!2A#151A#153A#20A#21!3A#150!6A#187A#137A#173A#137!2A#187A#137A#187!3A#137!2A#187!2A#150A#137A#205A#150A#186!3A#159!2A#186A#167A#123A#167A#195A#167A#195!2A#203A#160A#159A#186A#197A#21A#197A#173A#187A#94A#23!2A#83!2A#92!2A#172!2A#83!5A#92A#145!4A#92A#112A#172!3A#83!5A#196A#83A#196!2A#79A#201A#94A#79A#201A#146A#148!2A#206A#151!2A#167!2A#156A#161!8A#155!2A#156A#151!2A#20!2A#197A#21A#197A#173!4A#79A#137A#23!3A#94A#137A#23!7A#24A#23!2A#24A#23!3A#79A#22!3A#146A#21A#52A#151A#156!2A#128!2A#55A#54A#161A#53A#52A#51!3A#74A#50A#74A#50A#74!2A#49A#74A#49A#74A#49A#74A#49!3A#50A#51!3A#53!3A#125A#9A#6A#59A#1!2A$#1!3C#76C#1C#76C#1C#76C#88C#76C#60!2C#120C#2!2C#140!2C#185C#130C#62C#89C#123C#153C#21!5C#52C#20!3C#147C#186C#21C#150C#146C#150C#21C#150C#173!2C#137!3C#173C#137C#187!6C#150C#187!5C#205C#202C#205C#186C#197C#186!2C#159C#186C#159!2C#160!2C#203!2C#186!2C#197C#186C#197C#150C#173C#94!3C#188!2C#83C#172!2C#83C#189C#83C#172C#83C#92C#145C#92C#145C#92C#145!3C#172C#83!2C#139C#172C#139C#83!2C#143C#83C#196!2C#79C#196C#79!2C#201C#146C#148!3C#151C#148C#167C#151!2C#167C#156!8C#195C#167C#151C#153C#160C#147C#197!2C#146C#173!3C#79C#173C#23!4C#79C#23!5C#24!3C#94C#23C#24C#83C#23C#24!2C#23!2C#79C#22!3C#147!2C#21C#52C#152C#156C#54C#204C#54!2C#53C#152C#51!3C#74C#50C#74!4C#49C#74C#49C#74!2C#49C#74C#49!2C#50C#51!3C#65C#53!2C#55C#9C#88C#198C#59C#1C$#1!3G#76G#88G#59G#88G#76G#59G#76G#207G#60G#122G#133G#140G#182G#133G#185G#130G#16G#89G#123G#21G#20G#21G#20G#21G#65G#147G#20G#160G#147G#186G#146!3G#173!4G#187G#173G#137G#173G#137G#66G#173G#187G#150!10G#187G#202G#187G#202!3G#186G#202G#186G#197!2G#186!2G#159G#186!3G#197G#186G#197G#150G#200G#187G#173G#94!2G#23G#83G#188G#83!4G#189G#83G#92G#83G#26G#83G#145!2G#92G#145G#172!2G#83G#145G#83!3G#139G#83G#196G#143G#196!2G#79!3G#201G#146G#148G#197G#148!2G#167G#151G#148G#167G#152G#167!3G#195G#167G#195!2G#167!2G#151!2G#160G#20G#147G#186G#146!2G#173G#146G#173G#79G#173G#23G#173G#23!6G#24G#94G#24G#94G#188G#94G#24G#83G#23G#24G#83G#23G#24G#23!4G#78!3G#22G#147G#21G#52G#152G#156!2G#54G#161G#53G#152G#52G#51!3G#74!3G#21G#48G#49G#74G#49G#74!2G#49G#74G#49!3G#50G#51!2G#53!3G#101G#8G#6G#59G#1!2G$#1!3O#76O#1!2O#76O#88O#1O#76O#60!2O#114O#7O#2O#208O#140O#192O#209O#16O#166O#123O#20O#21O#20O#21!3O#147O#20O#147O#197!2O#21O#146O#173O#150O#173O#187!3O#137O#66O#137O#173O#187O#150!3O#21O#149!2O#197O#149O#150!2O#197O#150O#202!7O#186O#202O#186!3O#197!2O#202O#197O#202!4O#200!3O#94O#187O#94!2O#83O#190O#83!6O#172O#83!2O#26O#172!4O#83!2O#145O#83O#139O#83!4O#196!2O#94O#196O#79!3O#201O#146O#201O#210O#148O#206O#148O#167O#152O#148O#167O#151!2O#167!5O#151!3O#160!2O#147O#186O#197O#146!2O#22!2O#173!3O#79O#23O#79O#66O#79O#23O#79O#23O#94O#23O#94O#23O#94O#24O#94O#23O#83O#23!2O#83O#23O#24O#23O#24O#79O#23O#78!3O#74O#21O#148O#147O#152!2O#156O#53O#167O#152!2O#51O#21O#50O#21O#74O#49O#74O#49O#74O#49O#74!2O#49O#74O#49O#74O#50O#49O#50O#51!3O#65O#53O#55O#9O#59O#88O#59O#1O$#1!3_#76_#1!2_#76!2_#88_#100_#60_#122_#120_#1_#182!2_#140_#192_#183_#158_#64_#65_#20!2_#21!3_#147_#20_#147_#186_#197_#21_#146_#21_#173_#146_#173_#187_#79_#137_#79_#173_#150!4_#149_#186_#149!6_#205_#197_#205_#197_#205_#202!3_#149_#202_#186_#202_#186_#202_#186_#202_#186!2_#202_#197_#202_#197_#202!2_#200!2_#187_#94!3_#188_#94_#83_#188_#83!6_#26_#83!5_#145_#83_#26_#83!2_#139_#83!3_#94_#196_#82_#79!3_#201_#146_#49_#148_#147_#148!2_#167_#148!2_#167_#148_#167_#151_#148_#167_#148_#167_#151!2_#160!3_#147_#160_#197_#146!2_#21_#146!4_#173_#22_#173!2_#79_#66_#79_#137_#79!2_#23!2_#79_#23_#94_#24_#94_#23_#24_#23!2_#24_#79_#23_#79_#23_#78!3_#79_#22_#79_#146_#21_#52_#65_#52_#167_#152!2_#52!2_#51_#49!3_#74_#49_#74_#49_#74_#49_#74_#49_#74_#91_#49_#74_#49_#21_#50_#51!2_#53!3_#8_#58_#59_#1!2_$-#1!3@#76@#1!3@#76@#58@#122!4@#133@#2@#182@#211@#192@#183@#16@#64@#153@#20@#21@#20@#21@#20@#147@#197!2@#21@#146!4@#150@#173!2@#187@#173!2@#187@#150@#21@#149!2@#186@#149!4@#186@#149@#205@#186@#205@#186@#205@#186@#202!2@#149!3@#186!7@#202@#186@#202@#186@#197@#202@#197@#202@#200!3@#94!4@#83@#188@#94@#83!4@#92@#83!2@#92@#26@#139@#92@#26@#83@#145@#83@#26@#83!4@#196@#144@#94@#196@#82@#79!2@#201@#146@#201@#148@#160!2@#148!2@#167@#148@#167@#148@#151!7@#160@#148@#160!2@#147@#160@#197@#147@#197@#21@#197@#146@#21@#146@#21@#146!2@#22@#146@#173@#22@#79@#173@#79@#173@#79@#23@#79@#23@#94@#23!3@#24@#79@#23!2@#78!4@#87@#23@#78!2@#79@#22@#147@#21@#52!2@#152@#52!3@#148@#51@#147@#49@#74@#49@#74@#49@#74@#49@#74@#50@#74@#91@#49@#74@#49@#74@#50!2@#51!2@#53@#51@#125@#9@#58@#59@#1!2@$#1!3A#76A#1A#76A#88A#76!3A#60A#207A#7A#2A#182A#208A#140A#192A#183A#199A#64A#153A#20A#21!3A#147A#20A#21!2A#197A#146!2A#21A#146!2A#173!3A#150!2A#21A#186!3A#20A#153A#186!4A#149A#186A#149A#186A#149!2A#186A#202A#186A#149A#202A#186!11A#197A#186!2A#197!3A#200!3A#94A#187A#94A#190A#94A#83A#24A#83A#188A#83!3A#92A#26A#83A#172A#83A#145A#83A#26A#83!6A#196A#24A#94A#196A#82A#79!2A#201A#79A#201A#147A#148!3A#206A#148!2A#167A#148A#167A#148!2A#151A#160!2A#148A#160A#148A#160A#148A#160!2A#147A#160A#197A#147!9A#197A#21A#147A#21A#146!2A#22A#79A#173A#79A#23A#79!2A#23A#79A#23A#79A#23A#79A#78A#79!4A#66A#79A#78A#79A#22A#74A#147!4A#52A#65A#52A#148A#147!2A#49!3A#74A#49A#74A#49A#74!3A#49A#74A#91A#49A#74A#50A#74A#50A#51!3A#53A#55A#9A#58A#59A#1A#76A$#1!3C#76C#88C#59C#1!2C#88C#76C#207!2C#122C#132C#140C#208C#133C#122C#178C#177C#123C#20!2C#21C#148C#21C#20C#21C#147C#197C#146!2C#21C#146C#173C#21!2C#150C#21!2C#197C#20!2C#153C#151C#123!4C#159!5C#149C#186!5C#159!2C#186C#159C#186C#159C#186C#203C#186C#203C#186C#160C#186C#160C#186C#160C#186C#197C#202C#197C#200!3C#94!4C#190!2C#94C#83C#188C#83C#92C#83!4C#92C#26C#139C#172C#83C#26C#83!3C#144C#83C#196C#144C#82C#79!3C#201C#49C#148C#197C#148!4C#206C#148C#206C#148C#151!2C#148C#206C#160C#148C#151C#160!2C#148C#160!2C#147C#160C#197C#20C#160C#197C#186C#197C#186C#197C#20C#197C#147C#20C#160C#147!3C#21C#147C#146C#22!2C#146C#173C#79C#173C#23C#79C#23C#79C#66C#79C#22C#66C#79C#22C#78C#79C#78!2C#22!3C#147!2C#21C#147!4C#51C#49C#21C#74C#49!2C#74C#50C#74C#50C#74C#49C#74C#91C#50C#74!2C#49!2C#50C#51!2C#65C#51C#125C#9C#58C#59C#1!2C$#1!3G#76G#1!2G#76G#1G#59G#212G#207!2G#122G#2G#140G#182G#133G#213G#178G#177G#123G#20G#21!4G#147!2G#21G#146!4G#21G#197G#146G#197!3G#186G#160G#151G#194!2G#171G#194G#165G#171G#166G#64!3G#159!2G#123!2G#159G#123G#159G#203G#159G#186G#159G#186G#160G#203!7G#160!3G#186G#160G#186G#197!2G#200!2G#94G#200G#94!4G#24G#83G#23G#83G#92G#83G#26G#83G#92G#26G#139G#172G#83!6G#24G#83G#82!2G#94G#196G#79G#201!2G#146G#148G#201G#148G#201G#206G#210G#148G#167G#148G#167G#148!3G#160!2G#148G#160!2G#148G#167G#160G#147G#160G#197G#147G#197!4G#21G#148G#146!2G#197G#21G#147G#197G#147!2G#160G#147!2G#197G#21G#148G#146!2G#22!6G#79G#22!2G#79G#22!2G#74G#22G#79G#22G#74G#22G#79G#74G#22!2G#147!5G#49!7G#74!3G#49G#74G#91G#74!3G#49G#50G#74G#50!2G#51G#53G#51G#55G#9G#58G#59G#1G#76G$#1!3O#76O#1!2O#76O#88O#2O#60O#108O#207O#122O#2!2O#208O#133O#138O#178O#89O#153O#20O#21O#20O#21!3O#147O#21O#146O#22O#146!4O#21O#197!2O#20O#167O#195O#161O#165O#162!2O#177O#162O#89!2O#166O#101O#64O#123O#171!4O#194!2O#159O#160O#159O#160O#159O#186O#160O#203!3O#167O#194O#203O#167O#203!2O#160!2O#186O#197!2O#202O#200!3O#94!5O#23O#83O#24O#83O#26O#83O#26!2O#139O#172O#83!2O#26O#83O#25O#83!2O#144O#94O#83O#196O#82O#79!2O#146O#49O#148O#201O#210O#52O#147O#148O#151O#148O#206O#152O#148O#167O#148O#167O#160O#148O#206O#160O#206O#160!4O#197!3O#21O#197O#146!3O#173O#146O#22O#146O#173O#146!2O#21O#197O#21O#147O#20O#147!2O#21O#147O#21!3O#147O#22O#74O#146O#22!4O#74O#146O#22!4O#79O#22!4O#147!4O#49O#22O#49O#22O#49!7O#74O#49!2O#74O#91O#50O#48O#74!2O#50O#49O#50O#51!2O#53!2O#9O#58O#1!3O$#1!3_#76_#1!2_#76!2_#58_#60_#108!2_#122_#1_#140_#182_#133_#138_#170_#89_#153_#20_#21!4_#147_#21_#146!2_#173_#22_#146_#21_#147_#197_#147_#160_#151_#194_#18_#162_#86_#56_#16!2_#93_#177_#89_#166_#171_#123_#171!2_#123_#101_#166_#101_#194!2_#159!2_#186_#159_#186_#160_#159_#203!3_#194_#167_#203_#167!2_#203_#160!3_#197!2_#202_#200!3_#94_#187_#94!3_#24_#83!3_#26_#83_#26_#83_#172_#83_#26_#83_#26_#83!4_#144_#82!2_#79!3_#201_#148!2_#52_#160_#148_#206_#151_#148_#167_#148_#206_#148_#151_#148!3_#160!2_#148_#160_#151_#160!2_#197!2_#21_#197_#150_#146_#173!3_#22_#173!2_#79_#187_#79_#94_#173!2_#146_#21_#197_#147!5_#148_#52_#147_#21_#147_#21_#147!4_#22_#147_#22!2_#74_#22!2_#74_#22!2_#74_#22_#49_#147!3_#49!3_#74!2_#49!4_#74_#50_#74_#91_#50_#48_#74_#91_#50_#74_#50_#49_#50_#51!2_#53!2_#8_#59_#1!2_#76_$-#1!3@#76@#1!2@#76@#1@#58@#60@#108!2@#122@#1@#140@#182@#133@#141@#170@#89@#153@#20@#21!5@#146@#22!3@#21@#146!2@#197@#147@#20@#151@#155@#161@#163@#177@#158@#168@#170@#158@#177@#89@#171@#64@#159!3@#171@#166@#105@#89@#177@#166!2@#195@#203@#159@#197@#202@#159@#203!11@#160!2@#186@#197!2@#200!3@#94@#187@#94!3@#83@#188@#83!2@#26@#83@#26@#83@#26@#83@#26@#83@#26@#83@#25@#144@#24!2@#82@#79!2@#201@#49@#147@#148!3@#206@#148@#152@#148@#167@#206@#52@#167@#151@#148@#167@#148@#167@#148@#151@#160!4@#197@#186@#197!2@#150@#173@#150!2@#173@#150@#173!3@#66@#94@#137@#23!3@#173!2@#22@#21!2@#197@#147@#20@#147!5@#52@#146@#147!2@#22@#21@#147!4@#22@#147@#22!2@#147@#22@#147!3@#49@#147!2@#74@#147@#74@#147@#74@#49!3@#74@#49@#74@#91@#74@#91!2@#50@#74@#50@#74@#50!2@#51!3@#128@#9@#58@#1!2@#76@$#1!3A#76A#1!2A#76!2A#58A#60A#214A#108A#122A#1A#140!2A#133A#141A#170A#171A#153A#20A#21!4A#147A#22A#21A#22!2A#146!2A#21A#197A#147A#160A#195A#161A#86A#168!2A#169A#170A#158A#177A#89A#123A#159A#131A#159!3A#166A#105A#199!4A#177A#166A#171A#159A#186A#205A#202A#149A#186A#159A#203!6A#167A#203A#160A#186A#197!3A#200!4A#201A#94A#79A#94!2A#83!3A#92A#26A#83A#26!3A#83A#26A#83A#25!3A#83A#82!2A#79!2A#146A#148!3A#215A#167!3A#215A#167A#148A#167!2A#148A#167!2A#215A#151A#148A#167A#160A#206A#160!3A#186A#197A#186A#150A#197A#150A#197A#150A#197A#150A#21!2A#150A#173!3A#137A#79A#137A#23A#173!3A#22A#21A#147!2A#20A#151A#52A#20A#148A#147!2A#21A#52A#21A#210A#21A#147A#22A#147A#22!2A#147A#74A#22A#147A#49A#147!3A#49A#147A#74A#49!4A#74A#49A#50A#74A#50A#74A#49A#91A#50A#48A#74A#91A#74A#50!3A#51!2A#53!2A#8A#59A#1!3A$#1!3C#76C#1!2C#76!2C#58C#60C#214!2C#122C#7C#133C#182C#133C#141C#170C#171C#153C#20C#21!4C#22!4C#173!2C#146!2C#21C#160C#151C#155C#161C#164C#56C#168!2C#158C#177C#165C#123C#149C#131C#205C#154C#159C#171C#89C#105C#16!3C#170C#16C#199C#177C#195C#159C#205!3C#149C#205C#186!3C#203!4C#160C#203C#160C#186C#202!2C#200!3C#94C#187!2C#94!3C#23C#83C#92C#26C#83C#92C#145C#26C#83C#26C#25C#26C#25C#26C#83C#144C#24C#79!2C#49C#197C#148!2C#215C#151C#52C#167!2C#152C#167C#215C#206C#152C#206C#167C#52C#167!3C#148C#167C#160!3C#197C#160C#186C#150C#186C#149!2C#186C#149C#186!5C#149!2C#21!2C#150!2C#21C#150C#22C#21C#22C#146C#21C#147!2C#160C#147C#148C#151C#52C#151C#52C#147C#52C#21C#210C#148C#147!4C#22C#147!2C#49C#22C#147C#49C#147!2C#49C#147C#49C#146C#74C#49!5C#74C#91C#50C#48!2C#91C#50C#74C#50C#74C#50C#74C#51!3C#54C#9C#58C#1!2C#76C$#1!3G#76G#1!3G#76G#58G#60G#214!2G#207G#120G#216G#140G#120G#183G#199G#64G#20G#149G#21!3G#22G#21G#22!2G#173G#22G#173G#22G#146G#148G#197G#65G#167G#161G#164G#163G#177!2G#162G#64G#123G#186G#131G#205G#154G#131G#159G#166G#105G#199!2G#105!2G#199G#16!2G#199G#89G#171G#159G#186G#205!2G#187G#205G#202G#186!3G#203!2G#160!3G#197!2G#200!7G#94G#79G#188G#83!3G#26G#92G#145G#26!3G#25!2G#113G#26G#83G#25G#83G#82G#79G#146!2G#201G#52G#148G#167G#53G#167G#53G#215G#167G#52G#167G#151G#206G#151G#167G#206G#167G#148G#167!3G#160!3G#153G#186!4G#149G#202G#186!2G#159G#186G#159G#153!7G#20G#153G#20!3G#21G#147!2G#20G#160G#52G#160G#52G#160G#52G#160G#52G#20G#147G#52G#21G#148!2G#22G#147!7G#50G#147!2G#49G#147G#74G#49G#146G#49!8G#74G#91!3G#74G#50G#48G#50G#74G#50G#51!3G#54G#8G#58G#76G#1!2G$#1!3O#76O#1O#76O#88O#76O#2O#60O#214!2O#217O#100O#133!2O#192O#183O#16O#171O#20!2O#21!4O#22!3O#173!2O#22!2O#146O#22O#147!2O#156O#155O#161O#18O#164O#18!2O#194O#153O#149O#187O#154O#187O#159O#64O#105!2O#93O#89!2O#166O#105O#199O#16O#199!2O#177O#194O#159O#137!4O#205!3O#202O#197O#159O#160O#159O#160O#186O#197O#202O#200O#94O#200O#94O#200O#94!5O#83O#92O#26!4O#83O#26O#113O#26O#83O#25O#113O#25O#144O#24O#79!2O#210!2O#152O#167O#215O#167O#53O#206O#167!3O#52O#206O#151O#148O#151O#167!4O#151O#160O#167O#160O#167O#186O#159O#186!3O#149O#159O#186O#159!4O#153O#123O#153O#123!8O#151O#123O#151O#65O#151O#147O#160O#147O#160O#52O#160O#151!4O#147O#52O#21O#52O#148!2O#147!4O#50O#147!2O#49O#147O#49O#147O#49!3O#79O#49!6O#91!2O#50O#48O#50O#48O#91O#50!5O#51O#53!2O#9O#58O#59O#1!2O$#1!3_#76_#88_#59_#1_#76_#58_#60_#104!2_#214_#100_#198_#133_#213_#183_#177_#194_#149_#21_#20_#21!2_#22_#21_#22_#173_#66_#22!2_#173_#22_#146_#21_#147_#160_#152_#156_#155!3_#195_#151_#186_#149_#131_#187_#131_#159_#171_#89_#16_#199!2_#105_#166_#177!2_#199_#170!2_#199_#166_#123_#205!2_#188!2_#137!2_#205_#202_#197_#186_#160!2_#186_#197!2_#200!4_#94!2_#200!2_#94!2_#24_#83!2_#26_#172_#26!3_#83_#26!3_#113_#83_#25_#83_#79!2_#201_#210_#52_#148_#53_#167_#215!3_#53_#215!2_#148_#167_#160_#148!3_#167_#148_#167!5_#159_#160_#186_#159_#186_#205_#149_#159_#205_#159!2_#186_#159_#186!2_#159_#186_#159_#123!3_#171_#64!2_#18_#64_#155!2_#152_#151!3_#20_#151!4_#52_#151_#65_#52_#147_#52_#148_#21_#51!3_#147!2_#51_#147_#51_#147_#50_#49_#148_#49!10_#74_#48_#91!2_#50_#74_#50_#74!2_#50!2_#51!2_#54_#9_#58_#1!2_#76_$-#1!3@#76@#1!2@#76@#1@#59@#60@#104@#119@#214@#207@#120@#133@#138@#193@#177@#123@#153@#21!5@#22!4@#66@#79@#22@#173@#146!2@#147@#20@#160@#151!3@#152@#151@#159@#20@#149@#150@#131@#149@#159@#101@#177@#16!3@#199!3@#170@#16@#170@#16@#199@#177@#194@#149@#137!2@#129@#137!2@#187@#205@#197@#186!2@#160@#197@#160@#186@#200!3@#94@#200!2@#94@#200@#94!3@#83@#26@#83@#26!5@#139@#26@#143@#26@#83!2@#144@#82@#49@#147@#52@#148@#215!2@#53@#215@#161@#215@#167!2@#148@#167@#148!2@#160@#206@#167@#206@#167!2@#160@#167@#153@#167@#186!2@#202!2@#205@#149@#205@#159!3@#123!3@#159!2@#186@#149@#186@#149@#159!2@#123@#171@#64@#89@#18@#89@#18!3@#155@#156@#151@#148@#167@#152@#167!2@#52@#148!2@#151@#52@#148@#51@#52@#148@#147@#51@#147@#51@#147@#49@#147!2@#49!3@#201@#49!7@#91@#50@#48@#91@#50@#48@#50@#74@#50!4@#51!2@#55@#9@#58@#59@#1@#76@$#1!3A#76A#1!2A#76A#88A#58A#60A#119!2A#104A#217A#120!2A#138A#178A#89A#123A#149A#20A#21!2A#22A#21A#22A#66A#22!2A#173A#22A#173A#22!2A#146A#21A#147!2A#20A#151!2A#153A#65!2A#20A#197A#149A#150A#186A#123A#194A#177A#199A#170!2A#178!3A#170!4A#16A#177A#123A#149A#137!2A#129A#137!2A#187!2A#186!2A#197!3A#186A#202A#200A#187A#94A#200A#94!2A#200A#201A#94!2A#83!3A#92A#26A#145A#26!6A#143A#113A#83A#144A#79A#146A#49A#148!2A#215!2A#167A#215A#53A#215A#206A#148A#206A#148!2A#160A#206A#160A#148A#167A#160A#167A#160!3A#186!2A#187A#205!4A#159!3A#171A#166!2A#171A#194A#159!2A#205A#159A#205!2A#131A#149A#159A#19A#64A#89A#86!2A#163A#164A#162A#161A#156!2A#167!2A#53A#167A#53A#167A#52A#148A#52!2A#65A#147A#51A#148A#51A#147A#51A#147A#52A#50A#49A#210A#147A#49!2A#201A#49!3A#50A#49!3A#91!3A#74A#91A#50A#91A#50A#74A#50A#49A#51!2A#53A#9A#5A#76A#1A#88A$#1!3C#76C#1!2C#76!2C#58C#60C#119!3C#214C#217C#192C#141C#121C#177C#153C#20!2C#21!3C#22C#66C#22C#66C#79C#66C#22!2C#79C#22C#146!2C#147!3C#20!2C#151C#147C#20C#147C#186C#21C#186!2C#153C#165C#177C#199C#170C#16C#170C#178!2C#193C#170!3C#199C#177C#159C#186C#205C#137!3C#205C#202C#197C#186C#197!2C#159C#197!2C#202C#201C#187C#94!2C#200C#94C#200C#190C#94!3C#83C#26!3C#145!2C#29C#97C#139C#97C#26!2C#143C#83C#144C#79!2C#201C#52C#206C#52C#215!4C#148C#215C#148!4C#206!2C#148C#215C#167!3C#160!2C#197C#150C#187C#188!3C#205!2C#159!2C#166C#105C#199!3C#105C#166!2C#123C#159C#205C#154!3C#131C#159!2C#123C#64C#86C#63C#77C#163!2C#204C#161C#156C#53C#215C#161C#215C#167C#53C#148C#151C#52!4C#147C#51C#52C#147C#51C#49C#210C#51C#49!2C#210C#49!2C#147C#50C#49!4C#91C#49C#74C#50C#48C#50C#48C#50C#74C#50C#74C#50C#51!2C#55C#10C#58C#88C#59C#1C$#1!3G#76G#1!3G#76G#1G#122G#214G#119!2G#209G#217G#192G#138G#178G#166G#159G#20G#21G#20G#21!2G#22!2G#66!3G#22G#23G#22!4G#146!2G#147G#20G#147!2G#20G#160G#147G#20G#147G#186G#21G#186G#153G#194G#165G#162G#199G#168G#170!4G#178G#170G#16G#177G#165G#194G#149G#205!2G#187G#202G#197G#202G#197G#186!2G#160G#197!2G#201G#187!2G#94G#187G#94!3G#200G#94G#201G#196G#83G#24G#83G#26G#145!7G#97G#26!2G#143G#144G#218G#49!2G#210G#52G#206G#52G#215G#52G#215G#148G#206!2G#210G#148!3G#167G#215G#161!2G#167G#160G#197!2G#187G#94G#188!2G#129G#137G#205G#159!2G#166G#105!3G#124G#170G#124G#16G#177G#166G#171G#159G#154!2G#137G#154!2G#149G#159G#123G#18G#86G#56G#163G#168G#56G#204!3G#54G#219G#54G#215G#167G#52G#152G#52!2G#147G#52!2G#148G#147G#52G#49G#52G#147G#49G#210G#49!2G#210G#49!8G#74G#91G#74G#48G#91!2G#50G#48G#50!3G#51!2G#53G#10G#58G#1G#76G#1G$#1!3O#76O#1O#76O#88O#59O#88O#100O#214!2O#104!2O#217O#192O#141O#178O#89O#153O#20!2O#21!4O#22O#78O#22O#78O#66O#22O#79O#22!3O#146!2O#21O#147O#20O#147!2O#20O#147O#197O#147O#186O#197O#186O#20O#153O#161O#89O#162O#177O#199O#168!2O#16O#168!2O#177!2O#165O#203O#159O#202!4O#186!4O#197!3O#202O#205O#201O#187O#94!2O#200O#94O#200O#94!2O#190O#94!2O#83O#26!3O#29O#28O#27O#145O#29O#145!2O#97O#26O#143O#144O#82O#79O#201O#210O#52!2O#215O#52O#206O#52O#215O#210!2O#52O#148!3O#167O#161O#215O#161O#215O#167O#186O#200!2O#188!2O#189O#129O#137O#205O#159O#166O#105O#166!2O#177O#199O#170!2O#16O#199!2O#166O#123O#159O#154O#129O#137O#154!2O#131O#159O#64O#18O#86O#163O#56O#164O#98O#164O#204!2O#54O#215O#54O#53O#215O#52O#151O#52O#148!2O#210O#52O#147O#52O#210O#49O#210O#147O#49!9O#91O#49O#91O#50O#48O#50O#48O#50O#48O#91!3O#50O#74O#51!2O#53O#9O#58O#1!3O$#1!3_#76_#88_#59_#1!2_#2_#212_#60_#214_#104_#214_#138_#217_#138_#170_#89_#159_#20_#21_#20_#21!2_#22_#21_#78_#66_#78_#79_#66_#22_#173_#22!2_#146_#147!6_#197_#21_#147_#21_#197_#21_#197_#147_#160_#153_#194!2_#162_#165!2_#177_#162_#165!2_#177_#161_#203!2_#186!2_#202_#186_#202_#186!2_#197_#186!2_#202_#205_#201_#187!2_#94_#187_#94!2_#200_#94!2_#201_#200_#196!2_#83_#26!2_#97_#145_#29!6_#97_#26_#73_#83_#218_#49!2_#210!2_#206_#50_#52_#215_#210_#52_#206_#148_#201_#148!2_#206_#215!2_#219_#161!2_#160_#206_#200!2_#188!2_#129_#188_#205_#159_#166_#177_#166_#177_#166!2_#177!3_#170_#199_#16_#199_#101_#159_#131_#154_#137_#154!2_#131_#21_#20_#64_#18_#162_#163_#56_#164!3_#54_#204_#54_#215_#53_#167_#52_#152_#52!4_#210_#51_#147_#50_#147_#50_#49!9_#91_#49_#91_#49_#74_#91!3_#74_#91_#50!2_#74_#50!2_#51!2_#53_#10_#5_#76_#1!2_$-#1!3@#76@#1!2@#76!4@#212@#214@#104@#214@#138@#192@#141@#178@#166@#65@#20!2@#21!2@#147@#21@#78@#66@#78@#66@#23@#79@#66@#79@#22!3@#146!3@#21@#147@#21@#147@#21@#197@#21!2@#148@#21@#197@#186@#20@#160@#195@#167@#195@#194@#167@#194!2@#161@#194!2@#203@#186!2@#202@#186!3@#197@#202@#197!2@#202@#201!2@#187@#94!4@#187@#94@#201@#94!2@#200@#196@#190@#24@#83@#26!2@#145@#29@#26@#29@#73@#29@#97@#26@#97@#26@#139@#90@#196@#218@#49!2@#210!2@#50@#206@#50@#215@#210!4@#148@#201@#210@#151@#195@#161@#215@#161@#167@#160@#197@#200@#187@#188@#137!2@#202@#194@#166@#177@#199@#177@#166!3@#177@#199!2@#170@#199!2@#177@#171@#159@#131@#154@#129@#137@#154@#131@#149@#20@#99@#18@#128@#56@#164@#98@#164@#204!2@#54!2@#215@#54@#52@#215@#52!2@#148@#52@#210@#51@#49@#52@#49!11@#91@#49@#91!2@#50@#48@#50@#48@#91@#50@#48@#50@#74@#50!3@#51@#53@#10@#5@#1@#76@#1@$#1!3A#76A#1!4A#58A#76A#60A#214A#104!2A#217!2A#138A#170A#166A#123A#20A#21A#20A#21!3A#78A#66A#78!2A#66A#23A#22A#173A#79A#22!3A#146A#147A#146!6A#147A#146!4A#21A#147A#186!4A#160!2A#203A#186!2A#160A#186A#160A#186A#197A#186A#197!3A#202A#197A#200A#202A#187!4A#94A#187A#94!2A#201A#187A#94A#201A#94!3A#196A#83!2A#26A#29A#97A#26A#71A#29!2A#97A#29!2A#97!2A#139A#143A#46A#79A#91A#49!2A#210!2A#50A#210A#50A#52A#206A#147A#49A#148A#147A#148!4A#167!2A#151!2A#160A#197A#200A#187A#188A#197A#186A#194A#177!3A#199A#170A#199A#170A#199A#170A#168A#199A#170A#177!2A#166A#123A#131A#154A#137A#154!3A#131A#20A#65A#99A#18A#128A#164!2A#204!2A#55A#215A#204A#54A#215A#52A#152A#52!2A#210A#52A#147A#49A#147A#49!3A#147A#49!6A#91!4A#49A#91!3A#74A#91A#50A#48A#91A#50!4A#51A#50A#53A#10A#58A#1!3A$#1!3C#76C#1C#76C#88C#76!2C#212C#207C#214C#119C#104C#207C#192C#209C#62C#166C#65C#20!2C#21!4C#78C#66C#78!3C#79C#23C#22!2C#79C#22!9C#146C#22C#146C#22!2C#146!2C#21C#146C#197!5C#202C#197!8C#202!2C#197C#202!2C#200C#202C#201C#187C#94!2C#187C#94!2C#187C#188C#94!6C#196C#83C#139C#145C#139C#145C#29C#97!2C#29!3C#97!2C#26C#73C#143C#90C#218C#91C#79C#91C#210!3C#50C#210!2C#50C#210C#148C#49C#146!3C#201C#210C#52C#148C#167C#151C#160!2C#200!3C#187C#186C#194C#177!2C#170C#168C#170C#178C#170C#178C#170C#199C#170C#168C#199C#177C#89C#123C#159C#154C#137C#154C#129C#131C#21C#20!2C#65C#156!2C#54!7C#215C#53C#52!3C#210C#52C#49!2C#147C#49!9C#91C#49C#91!2C#49C#91!3C#50C#48C#50C#48C#91!2C#50C#74C#49C#50!2C#51C#50C#53C#10C#58C#2C#76C#1C$#1!3G#76G#88G#59G#1G#76G#58G#212G#214G#119!2G#104G#217G#192G#141G#178G#64G#159G#20!2G#21!4G#78G#74G#66G#23G#78G#66G#79G#23G#79G#173G#79G#22G#79G#22G#79G#22!2G#79G#22G#79G#22!2G#147G#22G#146!5G#21!2G#197!3G#202G#197!2G#186G#197!6G#202!2G#187G#200G#187!2G#94G#187G#94!7G#201G#94!2G#201G#190G#196G#83G#172G#145!2G#29!4G#97!3G#29G#97!2G#139!2G#90G#196G#218G#91!2G#49!2G#210!2G#50G#210G#206G#49G#210G#148G#146G#49G#146G#49G#21G#147G#52G#147G#151G#160G#147G#197!2G#202G#186G#203G#194G#162G#177G#168!2G#170G#178!2G#170!2G#168!2G#177!3G#166G#123G#149G#154G#137!2G#154G#131G#21!2G#51G#65G#152!2G#156!2G#161G#215G#161G#215G#53G#52G#215G#52!3G#49G#147G#49!4G#74G#49!2G#74G#49G#74G#49G#74G#49G#91!3G#74G#91G#49G#74G#91!4G#50G#74G#50G#91G#50!3G#51G#50G#53G#9G#58G#76G#1G#76G$#1!3O#76O#1!2O#76O#88O#58O#60O#119O#109!2O#104O#217O#122O#209O#170O#101O#153O#20!3O#21O#147O#21O#78O#66O#23O#78O#23!2O#78O#79O#173O#79O#173O#79O#173O#79O#173O#79!2O#173O#22!2O#79O#22!3O#146O#22O#146!4O#197!4O#202!2O#197!3O#202O#197O#205O#197O#202O#200O#201O#200!2O#201O#188O#94!10O#200O#94!3O#190O#83!2O#145!2O#29O#97O#29O#97O#29!2O#97O#29O#97O#29O#142O#139O#90O#107O#196O#91!3O#210O#49O#210!5O#147O#49O#201O#49O#147O#146O#201O#148!2O#147O#160O#148O#147O#197!2O#200O#197O#160O#167O#162!2O#177!2O#168!2O#170O#168O#170O#168O#199O#168O#177O#165O#194O#123O#149O#66O#137O#66!3O#21O#51O#20!2O#81!2O#65O#52O#167O#152O#52O#215O#52!5O#49O#147O#49!2O#74O#49O#74O#49O#79O#74O#49O#74O#49O#91O#74O#91O#49O#91!2O#48O#49O#74O#91!2O#50O#48O#50O#48O#91O#50O#74O#50!3O#51O#50O#53O#10O#58O#1O#76O#88O$#1!3_#76_#1!2_#76!2_#58_#9_#119_#124!2_#104_#217!2_#141_#170_#171_#153_#20!2_#21!4_#78!2_#23_#78_#23_#78_#23!3_#78_#79_#66_#79_#23_#79_#173_#79!3_#22!2_#79_#146_#79_#22_#146_#79_#146!5_#150_#197!8_#201_#202_#200_#201_#187_#200!2_#187_#94_#201_#188_#94!8_#201_#94!3_#196_#83!2_#139_#145!2_#29_#145_#29_#134_#97_#134_#97_#29_#139_#142_#139_#220!2_#107_#91!2_#201_#91_#210_#49_#210_#50_#210_#50_#210!2_#147!2_#49_#147!2_#49_#147_#148_#147_#148_#147_#197!4_#160_#167_#194_#161_#219_#162!2_#168!4_#177!2_#165!3_#194_#186_#150!2_#66!2_#131_#66_#21!4_#148!2_#52!9_#49_#210_#49!4_#79!2_#74_#79_#91_#74_#49_#91_#74_#49_#91_#49_#91!3_#74_#91!3_#74_#91!2_#74_#50_#48_#50!2_#74_#50!2_#51_#50_#53_#9_#58_#76_#88_#59_$-#1!3@#76@#1!2@#76!2@#58@#60@#109@#124!2@#214!2@#192@#104@#199@#171@#153@#149@#20@#81@#21@#22!2@#79@#66@#23@#78@#24@#23@#87@#23@#78!2@#79@#23@#79!2@#173@#79@#173@#79@#173@#79!2@#22@#79@#22@#79@#22!2@#146@#22@#146!2@#197!3@#200@#197@#200@#197!3@#200!6@#187@#94!2@#188@#94@#188!2@#94@#188@#94!7@#201@#94@#83!2@#143@#145!3@#29@#142@#134@#97@#134!2@#29@#97@#142!3@#220!2@#218!2@#91!4@#210!2@#49@#210@#49@#210@#147@#52@#147!2@#49@#147!3@#146@#147@#146@#148@#146@#147@#197!2@#148@#197@#160!2@#167@#161!2@#165@#162@#177@#162!4@#161@#167@#186@#197@#150@#173@#66!3@#21!3@#51@#21@#51@#148@#21@#52@#148@#210@#52@#210@#148@#147@#49@#51@#49@#147@#74!2@#79@#91!2@#218@#91@#74@#91@#218@#74@#91@#74@#91!4@#74@#91!5@#50@#74@#50@#48@#91!2@#50!5@#51@#53@#10@#58@#88@#59@#1@$#1!3A#76A#1!3A#76A#58A#60A#119A#124!2A#119A#217A#207A#178A#199A#195A#186A#153A#149A#20A#21A#148A#66A#79A#23A#78A#23A#24!2A#23A#24A#79A#23!2A#79A#23A#79A#23A#79A#23A#79!2A#22A#79!2A#22A#79A#22A#79!2A#22A#146!5A#201A#200A#197!2A#201A#200!3A#94A#200A#94!5A#188A#94A#188!2A#94!3A#188A#94!4A#201A#94A#190A#196!2A#83A#142A#172A#145A#29A#142A#134A#29!3A#97A#134A#97!2A#142A#73A#220!3A#91!3A#201A#210A#91A#210A#49A#210A#49A#52A#49A#210A#147!3A#49A#147A#49A#146A#49A#197A#146A#49A#197A#147A#146A#197A#148A#197A#160A#186A#160A#167!2A#161!2A#194A#167A#203!3A#160A#197!2A#173A#21A#22!3A#74A#22A#147A#21A#51A#20A#148A#147!6A#49A#147A#49!2A#74!2A#49A#79A#48A#87!2A#74A#47A#79A#48A#74!2A#91A#79A#91A#74!2A#91!3A#48A#49!2A#74A#91A#50A#48A#50!2A#91A#50A#74A#50!4A#53A#10A#58A#2A#76A#1A$#1!3C#76C#1C#76C#88C#76C#58C#60C#119C#124C#119!2C#209C#138C#193C#177C#123C#186C#149C#20C#21!3C#22C#66C#78C#23C#24C#79C#24C#23C#24C#23C#82C#79C#23C#79C#23C#79!2C#173C#79C#173C#79C#22C#79!2C#173C#79C#173C#79!5C#173!2C#146C#79C#201C#94C#200C#94C#200C#94!7C#188C#190C#94C#190C#94C#190C#94!6C#201C#94!2C#201C#190C#83!3C#142!2C#145C#29!2C#142C#134C#97C#134C#97!3C#142!2C#220!2C#107C#220C#91!4C#210C#91C#210C#49C#210C#49C#210C#147C#51C#49C#148C#49C#146C#147C#49C#197C#49C#197!2C#148C#146C#148C#146!3C#197!4C#186!2C#160!3C#186C#197!3C#187C#173!2C#146!2C#22C#146C#21!2C#147C#148!2C#147C#21C#51C#147!3C#49C#147C#49!2C#74C#22C#49C#74C#79C#74C#79C#47C#87!3C#47C#74C#79C#91!3C#74C#91C#74!2C#91C#74!2C#91!2C#49C#50C#48C#91!2C#50!2C#74C#50!3C#51C#50C#53C#9C#58C#76C#1!2C$#1!3G#76G#88G#59G#1G#76G#88G#122G#214G#119G#109G#119G#214G#209G#178G#166G#123G#159G#149G#20!2G#147G#21G#147G#78!2G#23!2G#24!2G#94G#24G#94G#24G#79G#23G#79G#23G#79G#23G#94G#79G#23G#79!5G#23G#79!3G#173G#79G#173G#79G#173G#79G#187G#200G#94G#200G#94!8G#190!6G#94G#190G#94!3G#201G#188G#94G#201G#94G#190G#196!2G#83G#142G#172G#142G#145G#29G#142G#134G#97G#134G#97G#71G#142!4G#73G#220!2G#91!6G#210G#91G#210G#49G#210G#49G#210G#147G#49!2G#147G#49G#146G#147!2G#197G#49G#197G#201G#147G#146G#201G#147G#146G#147G#146!2G#197!9G#200!3G#146!4G#147!2G#210G#148G#147G#21G#51G#147!3G#49G#147G#49!2G#74G#22G#49G#74!4G#79G#48G#87G#47G#87!2G#79G#48!2G#91G#74G#91!3G#218G#74!2G#91G#74!2G#49G#91!2G#50!3G#48G#50!5G#51!2G#53G#10G#6G#88G#76G#1G$#1!3O#76O#1!3O#76O#58O#76O#207O#214O#119!2O#104!2O#109O#89O#159O#186O#149O#153O#20O#21!2O#22!2O#23O#24O#79O#23O#24O#94O#24O#94O#23O#24O#94O#23O#79O#23O#79O#23O#79O#23O#79O#23O#79O#23O#79!2O#23O#79O#94O#79O#94O#79!2O#94O#173O#94!3O#190!2O#94!2O#190!3O#188O#190!4O#188O#190!2O#94O#190O#94!4O#201O#94!3O#201O#94O#83!3O#142O#145O#142!2O#134O#97!3O#31O#71O#134O#71O#142!2O#220!2O#107!2O#91!3O#201O#91!2O#210O#49O#91O#210O#49!3O#148O#49O#146O#49!2O#146O#49O#197O#201O#147O#148!2O#147!2O#146O#148O#146O#147O#146!3O#197!6O#201O#173O#200O#197O#146!3O#147!3O#21O#147O#148O#147O#148O#147!2O#51O#147O#49O#147O#74O#22O#49O#74!2O#146O#79O#48O#74O#87!2O#47!4O#218O#87O#47O#91O#87O#74O#91O#74O#91O#74O#49O#91!3O#49O#50O#74O#91O#50O#91O#50O#91O#50!3O#51!2O#53O#10O#58O#59O#1!2O$#1!3_#76_#1_#76_#1_#76!2_#1_#60_#214_#119!3_#104_#170_#166_#123_#149!2_#20!2_#21!2_#22_#23_#79_#23!2_#24!2_#83_#94_#24_#94_#24_#94_#24_#94_#24_#94_#24_#79_#24_#79_#23!2_#79_#23!4_#79_#23_#79_#94!2_#79_#94!5_#190!6_#188_#190!6_#188_#94!8_#201_#94_#190_#94_#196_#145!4_#126_#142_#145_#97_#31!2_#142_#134_#142!2_#71_#142_#73_#220!2_#91_#107_#91!3_#210_#91!2_#210_#49!4_#147_#49!2_#146_#49_#146_#49_#197_#49_#147_#49_#146!2_#201_#148_#147_#148_#147!4_#197!2_#148_#197!5_#200_#197_#146!2_#147!2_#146_#148_#147_#210_#148_#147!2_#51_#147!2_#49_#147_#49!2_#22_#49_#74!4_#91_#79_#48_#87!2_#47_#218_#47_#218_#47!2_#74_#218_#48_#79_#48_#74_#79_#91!2_#74_#49!2_#91!2_#50!2_#48_#50_#91_#50!4_#51!2_#53_#10_#6_#1!3_$-#1!3@#76@#88@#59@#1@#88@#59@#198@#60@#214@#119!3@#193@#16@#166@#159!2@#20@#149@#21@#147@#21@#22!2@#23!2@#24@#94@#24@#94@#24@#94@#24@#94@#24@#94@#24@#94@#24@#94@#24@#94@#24@#82!2@#24@#82!5@#94!10@#83@#190!2@#94@#190!5@#189@#190!5@#94!4@#201!2@#94@#201@#94@#196@#94@#83!2@#145!4@#31@#97@#31@#142!2@#134@#71@#142@#71@#142!2@#220!2@#107@#218@#91!6@#210@#91!2@#49!3@#146@#79@#49@#146@#79@#49@#146!4@#201@#147@#49@#197@#146@#148@#146@#147!2@#160@#147!2@#148@#197@#148@#197@#148@#197!2@#148@#146@#49@#197@#148@#147@#148@#147@#52@#21@#52@#147!2@#51@#147@#51@#147@#49@#147@#49!2@#74!2@#49@#79@#74!2@#91@#87!2@#47@#79@#47!3@#218@#47@#218@#47@#74@#91!4@#74@#49@#91!2@#49@#91@#50@#91@#50@#91@#50!3@#74@#50!2@#51@#50@#53@#10@#5@#76@#1!2@$#1!3A#76A#1!3A#76A#88A#76A#60A#214A#119A#109A#119A#104A#16A#166A#123A#149!2A#20!2A#21A#146A#22A#23A#78A#23!2A#24A#190A#24!3A#94A#24A#94A#24A#94A#24A#190A#94A#24A#94!2A#24A#82!6A#79A#24A#94A#24A#94!3A#24A#94A#83A#94A#196A#190!8A#189A#190!3A#94A#190A#94!6A#201A#94!3A#196!2A#145!4A#31A#142A#145A#31A#142A#110A#134A#71A#31A#142!3A#73A#220!2A#107A#91!10A#79A#49A#91A#49A#146A#74A#49A#146A#79A#49A#79A#49A#146!2A#201A#49A#197A#148!2A#147!3A#160A#147A#197A#148A#197A#148A#197A#148!2A#146A#148A#197A#201A#147A#148A#147A#148!2A#210!2A#51A#210A#147!2A#49A#147A#49!5A#146A#74!2A#79A#48A#87!3A#47!3A#218A#47!2A#218A#48A#218A#47A#74A#218A#74A#49A#91A#49A#74A#49A#91A#49!2A#50!3A#74A#50!5A#51A#50A#53A#10A#6A#1!3A$#1!3C#76C#1C#76C#1!2C#2C#60C#214C#119C#124C#119!2C#104C#109C#89C#123C#159C#149C#20C#21!2C#146C#22C#23C#78C#24C#23C#94C#24C#94C#83C#94C#24C#94C#24!2C#83C#94C#24!2C#190C#83C#144C#94C#24C#94!3C#82C#94C#24C#94C#24C#94C#24C#94C#83C#82C#24C#196C#83!2C#94C#83C#196C#190!8C#94C#190C#94!4C#201C#94C#201C#94!2C#201C#94C#196C#83C#145!5C#31C#142C#110C#142C#134C#142C#71C#142C#71C#142!2C#220!3C#107C#218C#91!8C#49C#91C#79C#49C#79C#74C#79!2C#49C#79!2C#49C#146C#79!2C#201C#146C#49C#197C#146C#148C#147C#197C#147C#160C#148C#197C#148C#197C#148C#197C#148C#201C#148C#147C#148C#147C#148!2C#147C#210C#148!3C#147C#51C#210C#49C#210C#49C#147C#49C#74C#49C#79C#74C#79C#91C#74!2C#47C#74C#47C#218C#47!2C#218C#47C#218C#47C#91C#47C#74C#91C#218C#74C#49C#218C#91C#49C#91C#49C#50C#48C#49C#50C#91C#50!5C#51C#50C#53C#221C#58C#1C#76C#1C$#1!3G#76G#88G#59G#1G#76G#58G#60G#214G#124!2G#109G#119G#214G#170G#105G#159G#153G#149G#20G#147G#21G#146G#22G#23G#78G#23G#24!2G#94G#24!3G#190G#24G#94G#24!2G#83G#24G#190G#24G#94G#83G#24G#196G#83G#24G#196G#83G#24G#196G#24G#196G#24G#196G#83G#24G#196G#24G#83G#24G#83G#190G#83G#190!2G#94G#83G#190!7G#94!3G#201G#188G#94G#201G#94!3G#196G#94G#83G#145!2G#142G#145G#31G#142!3G#110G#142G#71G#31G#142!4G#73G#220!2G#91G#107G#91!8G#49!2G#218G#74G#79G#49G#79G#74G#79G#49G#79!3G#210G#146G#49G#201G#146G#201G#147G#197G#148G#147!2G#197G#148G#146G#148G#201G#148G#201G#147G#148G#146G#148!3G#147G#210G#52!2G#21G#52G#147!2G#51G#49G#210G#49!5G#146G#91G#74G#91G#48G#79G#48G#87!2G#47!2G#218G#47!2G#218G#47G#79G#48G#74G#218G#74G#91G#74G#49G#91G#49!3G#91G#50G#49G#50!8G#51!2G#53G#10G#58G#2G#76G#1G$#1!3O#76O#1!3O#76O#58O#60O#119O#124!2O#109O#119O#214O#62O#89O#123O#149O#153O#20!2O#21O#22O#79O#23!2O#24O#79O#23O#24O#190O#24O#190O#94O#24O#83O#24O#83!2O#24O#83!2O#24O#94O#83O#24O#94O#83O#24O#196O#24O#83O#94O#83O#24O#83O#82O#83O#24O#196O#83O#24O#83O#196O#190O#83O#196O#83O#190O#83O#190!5O#201O#190!2O#201O#190O#201O#94O#200O#94!2O#201O#94O#83!2O#143O#142O#145!2O#31O#142O#84O#142O#110O#142O#110O#142O#71O#142!3O#220!4O#91!10O#79O#91O#49O#218O#79O#74O#79O#49O#79!6O#146!3O#49O#197O#49O#197!2O#148O#197O#148O#197O#148O#146O#148O#147O#148O#146O#148O#146O#201O#147O#148O#147O#148O#147O#210!2O#147O#210O#147!2O#49O#210O#49!2O#146O#74!3O#79O#74O#79O#48O#87!2O#47O#79O#47!2O#218O#47O#91O#47O#48O#47O#91O#48O#79O#91O#218O#74O#49O#91!2O#49!2O#91O#50!2O#49O#50!6O#51!2O#53O#221O#58O#76O#1O#76O$#1!3_#76_#1_#76_#1_#76_#58_#60_#119_#124!2_#109_#104_#214_#62_#89_#123_#159_#153_#20_#21!2_#146_#66_#23!3_#24!3_#190_#24_#83_#24_#83_#24_#83_#23_#83!2_#23_#83!6_#144_#24_#83_#196_#83!4_#24_#83_#196_#83_#24!2_#83_#24_#83!3_#196_#83_#190_#83!2_#190!5_#201_#190_#201_#190_#201_#94_#201_#94!4_#83!2_#145!4_#31_#145_#142_#110_#142_#134_#71_#142_#110_#142!3_#73_#220!2_#91_#220_#91!8_#79_#91_#49_#218_#74_#79_#218_#79_#218_#79_#218_#79!7_#201_#146_#201_#147_#146_#201_#49_#197_#201_#147_#148_#146_#197_#146_#148_#201_#147_#148_#49_#148_#147!2_#148_#147!3_#49_#210_#49!3_#146_#79_#91_#79_#91_#74_#91_#218_#48_#79_#47!4_#218_#47_#218_#47!2_#91_#47_#91_#47_#79_#48_#74!2_#49_#91_#49!3_#50!2_#49_#50!3_#49_#50!3_#51!3_#53_#221_#58_#76_#88_#59_$-#1!3@#76@#88@#59@#1!2@#2@#60@#119@#124!2@#119@#104@#214@#170@#105@#123@#159@#20!3@#21@#146@#173@#23@#24!2@#94@#83@#23@#83@#24@#83!2@#23@#83@#24@#83@#24@#83!2@#24!2@#83@#24@#196@#24@#83@#196@#24@#83@#24@#83@#144@#24@#196@#24@#83@#24@#83!5@#24@#83@#190!3@#83!2@#190!7@#94!6@#201@#94@#196!2@#83!2@#142@#145!2@#31@#142@#110@#142@#110@#142@#110@#142!2@#71@#142!2@#220!2@#107@#220@#91!2@#218@#91!2@#218@#91!6@#79@#91@#79@#91@#218@#79@#218@#79@#218!3@#79@#91@#79!2@#49@#146!3@#49@#197@#201@#49@#147@#146!2@#49@#201@#146!5@#201@#49@#197@#49!2@#147@#49@#147@#49!3@#146@#79@#91@#218@#91@#47@#91@#218!2@#48@#47@#48@#47@#79@#47!3@#79@#48@#47@#79@#48@#47!2@#74@#48@#87@#218@#91@#74@#49!2@#91@#50@#91@#50@#49@#50!7@#51@#53@#50@#53@#221@#58@#1@#76@#88@$#1!3A#76A#1!3A#76A#88A#60A#214A#109A#124A#119A#104A#214A#62A#89A#123A#159A#153A#20A#147A#21A#146A#78A#23A#79A#24!2A#188A#24A#83A#188A#83A#24A#83A#24A#83!9A#24A#83A#24A#83!2A#196A#83A#24A#83!4A#144A#83!2A#24A#83A#24A#83!2A#190A#83A#190A#94A#83!2A#196A#190A#196A#94!2A#201A#190A#201A#94A#201A#94A#200A#201A#94!2A#196!2A#172A#83A#142A#145!2A#31A#142!2A#126A#142A#110A#142A#110A#142!3A#73!2A#196A#107A#220A#201A#220A#91A#218A#201A#91!5A#79A#91!2A#47A#79A#47A#218A#47A#218A#47A#82A#218A#79A#196A#79!7A#201A#146A#79A#201A#146A#79A#201A#146A#79A#201A#49A#201A#146A#79A#49A#197A#79A#201A#147A#146A#49A#146A#49A#146A#79A#218A#91A#218!2A#47A#218!2A#48A#47A#218A#47!4A#218A#47!5A#48A#47A#74A#218A#48A#79A#48A#74A#218A#74A#49!3A#50A#91A#50!10A#51A#50A#53A#10A#58A#2A#76!2A$#1!3C#76C#1C#76C#1C#76C#58C#60C#214C#119!3C#104C#214C#62C#105C#123C#159C#153C#20!2C#21C#146C#22C#23!2C#24C#83C#23C#24C#83C#24C#83!3C#24!2C#83C#92C#24C#92C#83C#92C#24C#83!3C#24C#196C#24C#83!3C#196C#83C#24C#83!2C#24C#83!8C#196C#83!4C#196C#190!2C#196C#190C#201C#190C#94!3C#201C#94!2C#201C#83C#196C#83!2C#142C#145!2C#31C#142C#110C#142C#31C#142C#110C#142C#71!2C#142C#143!2C#220!3C#91!2C#220C#91C#107C#218!2C#91!5C#74C#79C#48C#218C#79C#47C#196C#218!2C#196C#218!2C#196C#79C#218C#79!3C#49C#79!2C#49C#79!2C#49C#79!3C#146C#79C#146C#79!2C#146C#79C#49C#146C#218C#79!2C#49C#82C#218C#79C#218C#47C#79C#47C#218C#47C#218C#47C#218C#47!2C#218C#47C#46C#47C#218C#47C#218C#47C#218C#47C#218C#48C#47C#218C#48C#87C#48C#74C#49C#91C#49!2C#50!2C#49C#50!8C#51!3C#53C#221C#58C#76C#1C#88C$#1!3G#76G#88G#59G#1!2G#2G#212G#214G#119!3G#104G#214G#16G#105G#123G#159G#65G#20!2G#147G#21G#79G#23G#24G#94G#23G#24G#188G#24G#83!2G#24G#83!3G#67G#24G#92G#26G#24G#83G#26G#83G#24G#83!5G#24G#83!16G#190G#94G#83G#190G#83G#196G#190G#94G#190G#196G#201G#94!2G#201G#200G#94!2G#196G#83G#196G#83!2G#145G#29G#142G#145G#142G#126G#142G#110G#142G#110G#142!4G#73G#143G#220G#201G#220!2G#91G#201G#218G#201G#107G#218G#91G#218G#91!2G#218!2G#48G#79G#47G#218G#144G#47G#82G#144G#87G#24G#196G#218!2G#196G#218G#91G#79G#218G#79!9G#91G#79G#218G#79!2G#91G#79G#218G#79!2G#91G#79G#218G#79G#218G#47G#218G#144G#47G#144!2G#47G#144G#46G#144G#47G#90G#47G#218G#46G#47!2G#46G#47!2G#48G#218G#48G#47G#91G#48G#87G#74G#79G#91G#74G#49!5G#50!8G#51!3G#50G#53G#221G#58G#59G#1G#59G$#1!3O#76O#1!3O#76O#1O#76O#60O#214O#119O#104!2O#214O#170O#89O#64O#153!2O#20O#147O#186O#146O#173O#79O#23O#24!2O#94O#24O#83O#23O#83!2O#92O#24O#92O#83O#92O#83O#92O#26O#83!2O#26O#83!13O#25O#83O#143O#26O#143O#83!5O#172O#83O#196O#190!2O#196!3O#94!4O#201O#187O#94O#200O#94!2O#196O#83O#139!2O#145O#142O#145O#31O#142O#110O#31O#142O#110O#142O#110O#142!3O#143O#73O#220!2O#107O#220O#201O#220O#107O#91O#218O#201O#91O#218O#91O#218O#91O#79O#47O#218O#47O#218O#144!7O#24O#196O#79O#196!2O#79O#218!2O#79O#218!2O#79O#196O#91O#218O#196O#79O#196O#79O#196O#218O#196O#218O#82O#218!4O#47O#218O#144!4O#85O#144O#44O#144!2O#90O#46O#144O#46O#144O#46O#144O#47!2O#218O#46O#218O#47O#218O#48O#218O#47O#74!2O#218O#91!2O#74O#49!3O#50O#49O#50!9O#51!2O#50O#53O#221O#58O#1!3O$#1!3_#76_#1_#76_#1_#76_#88_#76_#60_#214!2_#104!2_#214_#109_#89_#64_#153_#20_#151_#20_#197_#22_#173_#23!3_#24_#83_#94_#83_#188_#92_#67_#24_#92_#24_#83!2_#25_#26_#83_#26_#83!2_#26_#83_#25!2_#83!5_#25!3_#113_#83_#26!2_#139_#92_#26_#139_#83_#139_#83_#196_#190_#196_#83_#196_#190_#94_#196_#94_#201!2_#94_#200_#94_#201_#94_#218_#196!2_#83!2_#139_#145_#126_#142_#145_#31_#142_#31_#142_#110_#142!2_#110_#142!2_#143_#220!2_#201_#220_#201_#107!2_#91_#218!2_#91_#107_#218_#91_#218!2_#47_#218_#47_#196_#47_#144!4_#85_#83_#144!6_#196!20_#144!6_#85_#44_#25_#44_#25_#44_#25_#46_#44_#144_#46_#144_#46_#144_#46_#90_#46_#47!3_#91_#46_#47_#91_#47_#91_#47_#74_#91_#74!2_#49!3_#50_#49_#50!2_#91_#50!5_#51!3_#50_#53_#221_#58_#76_#1!2_$-#1!3@#76@#88@#59@#88@#76@#1@#76@#212@#207@#214!2@#104@#130@#62@#105@#123@#159@#153@#20!2@#21@#146@#22@#23!2@#24@#94@#24!2@#83@#24@#67@#92@#83!3@#67@#25!2@#26@#83@#26@#83@#26@#83@#26@#83@#26@#83@#25!4@#26@#139@#26@#139@#26@#139@#172@#139@#145!4@#172@#83!4@#94@#190@#196!2@#94!4@#200@#94@#201@#94@#79@#94@#196@#83!4@#145!2@#126@#142@#31@#142@#110@#142@#110@#142@#110@#142!3@#143!2@#73@#220@#107@#220@#91!2@#201@#218@#91@#218!2@#91@#218!4@#47@#196@#47@#144!3@#85@#25@#90@#144@#25@#90@#83@#144!11@#83@#144@#83@#144@#83@#90@#83@#144@#83@#144!2@#90@#144!2@#85@#90@#85@#113@#25@#44@#25@#113@#44@#25@#44!2@#144@#44@#85@#44@#85@#46@#47!2@#144@#47!2@#46@#47@#218@#47@#48@#218@#47@#74@#218@#47@#79@#91@#49!3@#50!8@#51!4@#53@#50@#53@#221@#58@#76@#1!2@$#1!3A#76A#1!2A#76A#88A#59A#88A#1A#60A#108!3A#11A#62A#89A#64A#153!2A#20A#147!2A#21A#22A#79A#23A#24A#94A#24A#188A#24A#83A#24A#83A#67!2A#92A#25!4A#26A#83A#26A#83A#26A#83A#26A#143A#26A#139A#83A#26A#139!2A#172A#139A#145!3A#92A#145A#112A#172!4A#83!5A#94A#190A#196A#201A#94!2A#201A#94A#201A#94A#79A#94A#82A#94A#144A#83!2A#26A#139A#145!3A#31A#142A#126A#31A#142A#110A#142!4A#143A#220!2A#201A#220A#201A#220A#91A#220A#91A#218A#201A#107A#218A#91A#218!2A#47A#218A#47A#196A#90A#144A#44A#83A#90A#83A#44A#83A#90A#143A#113A#83!2A#143A#83A#143!4A#83A#90A#83A#90A#83A#143!2A#83A#90A#83A#90A#113A#83A#144A#113A#144A#113A#143A#113A#90A#113!3A#25A#113A#44A#143A#44A#85A#44A#144A#47!2A#85A#90A#47A#46A#47!5A#218A#47!2A#218A#47A#79A#48A#91A#74A#49!2A#210A#50A#49A#50!5A#51!6A#50A#53A#221A#58A#76A#1!2A$#1!3C#76C#1!2C#76C#1C#76C#58!2C#100C#60C#9!2C#118C#135C#105C#123C#65!2C#81C#153C#21!2C#22C#79C#23!2C#24C#94C#24C#83C#23C#92C#83C#24C#83!2C#67C#25C#26C#25!2C#26C#83C#26C#83C#26C#139C#26C#83C#26C#139C#145C#172C#83C#145C#92C#145C#112C#145!6C#172!2C#83C#172C#83C#190C#83C#94!2C#190C#94C#196C#201C#190C#200C#94C#79!3C#94C#83C#144C#83C#143C#26!2C#145C#29C#142C#31C#142!2C#31C#142!3C#71C#142!2C#143C#73C#201C#73C#107C#220C#91!2C#201C#220C#91!2C#218C#91C#218C#91C#218!2C#47C#196C#46C#144!2C#83C#90C#83C#44C#83C#113C#83C#113C#83C#90C#113C#83C#44C#83C#113C#83C#44C#83C#143!3C#113C#83C#44C#83C#143C#44C#83C#143C#44C#83C#44C#143C#113C#143C#113C#143C#113!3C#73C#113!3C#90C#44C#144C#85C#44C#144C#46C#144C#46C#144C#46C#47!2C#218C#47!2C#218C#47C#218C#47!2C#79C#91C#74C#49!3C#50C#49C#50C#210C#50!3C#51!3C#215C#51!3C#53C#221C#58C#76C#88C#59C$#1!3G#76G#1!2G#76G#88G#76G#59G#58G#59G#8G#60G#57G#10G#135G#105G#101G#65G#153G#20!2G#21G#147G#173G#23!2G#82G#94G#24G#94G#24!2G#83G#24G#83G#24!2G#26G#83G#25G#26G#83G#25G#26G#83G#26G#139G#26G#139G#145!3G#172G#139G#145!8G#96G#145G#172!2G#145G#172G#83!2G#190G#83G#196G#94!5G#200G#79G#201G#79!2G#94G#82G#24G#83G#144G#25G#26G#142G#145G#29G#142G#145G#31G#134G#142G#110G#142G#110G#142!2G#143!3G#73G#196G#201G#220G#201G#220G#107G#91G#201G#91G#218G#91!2G#218!2G#144G#218G#47G#196G#144G#90!2G#143G#113G#143G#113G#143G#113G#143G#113G#143G#113G#143G#26G#143G#113G#83G#113!4G#83G#113G#143G#25G#113G#25G#113!2G#143G#113G#143G#113!2G#143G#113!5G#97G#143G#113!2G#143G#44G#90G#44G#144G#85G#44G#144G#44G#144G#90G#47G#144G#46G#144G#46G#47!2G#218G#46G#218G#47!2G#218G#74G#49!3G#50!8G#51!6G#53G#10G#58G#59G#1!2G$#1!3O#76O#1!2O#76O#59O#1O#58O#4O#58O#7O#8!2O#9O#13O#105O#64O#65O#20!3O#21!2O#22O#79O#23O#79O#23O#24!2O#83O#23O#83!3O#24O#83!2O#25!4O#26O#139O#26O#139O#145O#26O#92O#145O#92O#145!4O#112O#145O#112O#145O#112O#145!5O#172!3O#83!3O#190!2O#94O#196!2O#94O#201O#94O#79!2O#187O#79!2O#82O#94O#83O#25O#143O#26O#142O#145O#29O#142O#31O#145O#134O#142!2O#110O#142!3O#143!2O#73O#220O#201O#73O#201O#107O#91!2O#218O#107O#201O#91O#218O#91O#218!3O#144!3O#90O#83O#90O#143!2O#113O#139O#26O#139O#26!4O#97O#139O#26O#113O#26O#143O#26O#139O#26O#73O#26O#113!2O#26O#73O#83O#113!4O#143O#73O#26O#73O#26O#73O#26O#73O#26O#73O#113O#73O#113O#143O#44O#144O#44O#144O#85O#44O#144O#46O#144O#90O#47O#144O#46O#144!2O#46O#144!2O#47O#218!2O#74O#79O#74O#49!2O#210O#50O#210O#50!4O#52O#51O#52!2O#53O#51!2O#53O#221O#58O#1!3O$#1!3_#76_#1!4_#76_#58_#4_#6_#2_#7_#8_#57_#13_#93_#99_#65_#20!2_#81_#21_#146_#22_#173_#23!5_#24!2_#83_#23_#92_#24_#83_#67_#25_#26_#25_#26_#83_#26_#139_#92_#145!4_#29_#145!2_#112_#145!2_#112_#145!5_#112_#145_#112_#172_#83_#172_#83!2_#190!2_#94_#83_#94_#201_#190_#94_#79!5_#94_#82_#144_#83!2_#113_#139_#145!3_#29_#142!2_#134_#31_#142!5_#143!2_#220!3_#107_#220_#91!2_#201_#220_#91!2_#107_#218_#91!2_#218!3_#144!3_#90_#83_#113_#143_#26_#142!2_#97_#142_#97_#142!2_#139_#97_#139_#29_#142_#97_#139_#97_#26_#97_#139_#97_#139_#97_#26_#97_#139_#97_#139_#97_#26_#73_#97!2_#139_#97!2_#26_#73_#26_#97_#143_#44_#113_#143_#44_#85_#44_#144_#44_#144_#44_#144_#90!2_#47_#144_#90_#47_#144!2_#47_#144_#47_#79_#48_#74_#49!2_#147_#50!6_#52_#50_#51!2_#50_#51_#53_#50_#53_#10_#58_#59_#1!2_$-#1!3@#76@#1@#76@#88@#59@#1@#58@#4!2@#6@#7!2@#57@#13@#93@#101@#65@#20!3@#21@#147@#173@#23@#79@#23!2@#24!3@#83!2@#67@#24@#83@#24@#67@#25!2@#26!3@#83@#145!4@#28@#145!2@#112@#145@#112@#145@#112@#145@#126@#145@#112@#145!4@#172@#145@#172@#83@#172@#190@#83@#196@#190@#196@#94!2@#79@#201@#94@#79@#173@#79@#94@#82!2@#24@#83!3@#26@#145@#29@#142@#145!2@#31@#142!3@#110@#142!3@#73@#143@#220!2@#196@#201@#220@#201@#220@#107@#201@#91@#201@#91!4@#218!3@#144!2@#90@#144@#143!2@#97@#143@#97@#139@#145@#142@#145@#97@#145@#29@#145@#29@#142!2@#26@#97@#26@#97@#139@#97@#139@#26@#142@#139@#97@#139@#26@#97@#113@#97@#139@#97@#139@#97@#26@#73@#97!2@#143@#73@#113!3@#44@#83@#44@#85@#44@#144@#85@#44@#47@#90@#46@#90@#144!2@#90@#144@#46@#144@#47@#218@#47@#79@#74@#49!3@#51@#50!2@#52@#49@#52@#50@#52!2@#51@#52@#51!3@#53@#10@#6@#1!3@$#1!3A#76A#88A#59A#1!2A#76A#58A#3A#222A#6A#132A#7A#75A#127A#93A#99A#65A#20!3A#21A#22!3A#23A#79A#23!2A#24A#23A#24A#188A#24A#83A#23A#83A#67A#26A#25!2A#26A#83A#26A#92A#145A#96!2A#28!2A#145A#28!2A#145A#126A#145A#29A#145!2A#112A#145A#112A#145A#172A#145A#83!3A#196A#83A#190A#196A#94!2A#201A#190A#201A#94A#79!5A#94!2A#83A#144A#25A#26A#139A#145!3A#126A#142A#145A#142A#110A#145A#142!5A#143A#220!3A#107A#220A#201A#91!5A#218A#91A#201A#91!3A#196A#218A#196A#90!2A#143!3A#139!2A#29A#145A#29A#142A#145!4A#142A#29A#142A#97A#145A#142A#29A#142A#145A#97A#139A#97A#139A#26A#97A#139A#73A#139A#97A#26A#73A#26A#97A#73A#26A#97A#143A#73A#26A#73A#113A#143A#44!2A#144A#44A#144A#44A#144A#44A#144!2A#90!2A#46A#144A#85A#90A#144A#47A#144A#47A#79A#91A#74A#49!2A#147A#50A#51!3A#52A#50A#52A#50A#52A#51A#52A#51A#53A#51A#53A#10A#6A#1!3A$#1!3C#76C#1!2C#76C#1C#76C#58C#3!2C#132C#140C#132C#114C#12C#93C#101C#65C#20!2C#21!3C#22!2C#23C#22C#23C#78C#24!2C#83C#24C#83C#23C#67!4C#26!2C#83C#26C#83C#145C#92C#27C#26C#145C#28!4C#145C#126C#145C#112C#145!5C#172!2C#83C#172C#190C#83C#190C#196C#190C#94!2C#201C#190C#79!3C#173C#79C#187C#79C#94C#82C#24C#196C#83!2C#26!2C#29C#145C#29C#145C#126C#31C#145C#142!6C#143!2C#220!2C#201C#107C#220C#201C#91!5C#201C#91!4C#218C#91C#218C#196C#218C#143!3C#113C#139C#142C#145C#142!2C#145C#29!2C#142C#29C#142!2C#145C#29C#142C#97C#142C#97C#139C#29C#142C#97!3C#139C#97C#26C#97C#73C#97!2C#73C#26C#97!2C#73C#97!2C#73C#26C#73C#113C#143C#44C#25C#44C#85!2C#44C#144C#44C#144C#46C#144!2C#44C#144!3C#47C#218C#47C#79C#48C#146C#74C#49C#147C#50C#147C#51C#50C#52C#50C#51!4C#52C#51!3C#53C#75C#58C#76C#1!2C$#1!3G#76G#1!2G#76G#88G#76G#6G#3!2G#4G#140G#132G#114G#61G#16G#64G#65G#149G#20!2G#21G#147G#22!3G#78G#79G#78G#23G#24!2G#188G#24!3G#83G#67G#92G#67G#26!2G#83G#26!3G#145!2G#28G#145G#28!3G#112G#145G#112G#145!2G#112G#145G#172!2G#83!4G#196G#190G#196!2G#94!2G#201G#190G#201G#94G#173G#79!3G#94G#79G#94G#82G#94G#83!2G#25G#139G#26G#142G#145!2G#29G#142!2G#145G#126G#142!5G#143!2G#73G#220!2G#201G#220G#91!4G#201G#91!2G#201G#91G#201G#91G#201G#91G#218!2G#220G#196G#90G#143G#139!2G#145G#142G#145!3G#29G#142G#29G#142G#29G#142G#134G#142!2G#29G#142G#97G#142G#97G#139G#26G#142G#97!2G#26G#95G#97G#139G#97G#143G#97G#73G#97G#139G#97G#26G#73G#26G#73!2G#113G#44G#143G#44G#144G#44G#85G#44G#85!2G#44G#144G#44G#144!2G#47G#144G#47G#144G#47G#79G#48G#79G#74G#49!2G#147G#51G#50G#52G#50G#51G#52G#50G#52G#51!2G#52G#51G#53G#51G#53G#10G#6G#76G#1!2G$#1!3O#76O#1!2O#76O#59O#1O#58O#223O#3O#4!2O#140O#224O#12O#93O#101O#65O#149O#20O#21!3O#22!3O#66O#78!2O#23!2O#24O#83!2O#188O#24O#83O#67O#25!3O#26!2O#83O#92O#145!4O#28!2O#145!2O#112O#145!4O#172O#83!6O#196O#190O#196O#94!2O#201O#190O#200O#79!2O#200O#79O#173O#79O#187O#79O#187O#82!2O#24O#83O#144O#26O#139O#145O#29!2O#145O#29O#142O#145O#142!7O#143!2O#220!2O#196O#220O#201O#107O#91O#201O#107O#201O#91O#201O#91O#210!3O#91!3O#196O#218O#90O#83O#143O#139!2O#145O#139O#145O#29O#142!3O#143O#29O#142!2O#145O#142!4O#29O#142O#29O#97!2O#139O#97O#139O#97!2O#143O#97O#113O#73O#26O#97O#113O#97O#113O#73O#97O#73O#26O#73O#143O#44O#113O#90O#44O#143O#44O#144O#85O#144!2O#47O#144!2O#85O#144O#47O#144O#47O#218O#47O#74!2O#79O#49!2O#147O#49O#51O#147O#52O#50O#51!3O#52O#51!2O#52O#51!2O#53O#57O#58O#59O#88O#76O$#1!3_#76_#1!4_#76_#58_#223_#3_#222_#225_#140_#224_#11_#16_#101_#20!3_#21_#148_#21_#22!4_#78!2_#23_#24!2_#23_#24_#83!2_#23_#26_#24_#26_#92_#26_#83_#26_#145_#92_#145_#96_#28_#145_#112_#28_#145_#112_#145_#112_#145!2_#172_#83!3_#196!3_#190_#94_#201_#94_#201_#190_#200_#201_#94_#173_#79_#201_#94_#173_#79_#94_#79_#94!3_#83!3_#26_#145_#29_#145!2_#29_#142_#31_#145_#126_#142!5_#143_#73_#201_#73_#201_#220_#107_#220_#201_#107_#91_#201_#91!2_#210!2_#91_#50_#91_#210_#91_#218_#196!2_#220_#143!2_#139!2_#145_#142!2_#145_#142_#29_#142!2_#29_#142!2_#29_#142_#97_#142_#97_#139_#97_#139_#97_#142_#97_#142_#139_#73_#97_#113_#97!2_#73_#26_#73_#97_#73_#26_#73_#97_#73_#113_#73_#143_#44_#143_#44_#143_#44_#85_#44_#144_#44_#144_#47!2_#90_#47_#144_#47_#218_#47_#79!2_#74_#49!3_#147_#51!2_#52_#50_#52_#51_#52_#51!2_#52_#51_#52_#53_#51_#55_#10_#58_#76_#1!2_$-#1!3@#76@#1@#76@#1@#76!2@#6@#3!3@#222@#140@#59@#11@#136@#99@#65!2@#20!2@#21!2@#147@#22!2@#66@#22@#78@#23@#24!2@#83@#188@#24@#83@#24@#83@#92@#26!2@#83@#26!2@#145!4@#92@#112@#145!2@#112@#145!4@#83@#172@#196@#83@#196!2@#190@#94@#201@#94@#201@#190@#200@#201@#94@#201@#79@#173!3@#79!2@#187@#79@#94@#79@#24!2@#83!2@#25@#26@#29@#139@#29!2@#142@#145@#31@#145@#142!6@#143!3@#220!2@#107@#201!2@#91!3@#201@#91@#210!2@#50!2@#210!3@#91@#201@#218!2@#196@#90@#196@#139!4@#145@#142@#143@#29@#142!8@#145@#97@#29@#139@#29@#142!2@#97@#142@#97@#26@#97@#73@#26@#73@#26@#95@#97@#26@#95@#97@#73@#26@#73@#113!3@#90@#44@#113@#90@#143@#85@#90@#144!3@#46@#144@#47@#144@#47@#196@#218!2@#91!2@#74@#79@#49!2@#147@#51@#147@#51@#52@#51!3@#52@#51!2@#53@#51@#52@#51@#53@#57@#4@#76@#1@#76@$#1!3A#76A#88A#59A#1!2A#76A#5A#3A#223A#3A#222A#225A#211A#11A#136A#101A#65A#20!3A#21!3A#22!3A#78A#79A#23!2A#24!3A#83A#23A#83A#129A#92A#26A#83A#26A#83A#92!2A#28A#92A#112A#145!2A#96A#145!2A#92A#145A#172A#83A#172A#196A#83A#196!2A#190A#201A#94A#201A#94A#201!2A#200A#201A#79A#173A#200A#201A#79A#173!2A#79!2A#187A#79A#94!3A#83!2A#113A#139A#145A#29A#145A#29A#142A#145!2A#142!3A#126A#145A#142A#143!3A#220!2A#196A#201A#73A#91!2A#201A#91A#201A#210A#91A#50A#210A#50A#210A#50A#210!2A#91A#79A#91A#196!2A#143A#196A#139A#83A#143A#142!3A#143A#142!5A#29A#142!11A#139A#73A#142!2A#73A#97A#139A#73A#142A#73!2A#113A#73!2A#26A#139A#44A#139!2A#90!2A#143A#44A#144A#44A#144A#44A#144!3A#47A#196A#47A#218A#47A#79A#48A#79A#49!4A#147A#50A#52A#50A#51A#52A#51A#52A#51A#52A#51!2A#52A#53A#51A#55A#9A#59A#1!3A$#1!3C#76C#1!4C#76C#58C#223C#3!2C#226C#225C#132C#10C#136C#101C#123C#65C#20C#21!2C#148C#21C#146C#22!3C#66C#78C#23!2C#24C#188C#24C#83C#23C#26C#24C#92C#26C#83C#92C#145C#92C#28C#145!2C#92C#112C#145C#92C#112C#145!2C#83C#172C#196C#190C#83C#196C#201C#196C#201C#94C#79!2C#200C#79C#201C#173!2C#200C#146C#79C#173C#79C#173C#79C#94C#79C#94C#79C#24C#94C#83!3C#26C#145!3C#29C#142C#126C#31C#145C#126C#142!2C#145C#143!2C#73C#143C#220C#201C#73C#107C#201C#91!6C#210!2C#50C#210C#50C#215C#50C#210!2C#91!2C#218C#196!2C#90C#143!2C#83C#143C#142!12C#97C#142C#97C#142C#97C#139C#97C#142C#97C#142C#73C#26C#139C#73C#97C#143C#73C#26C#73C#26C#73C#113C#139C#44C#139C#80C#139!2C#44C#90C#143C#44C#83C#144!2C#47C#144C#47C#196C#47C#218C#47C#79C#48C#79C#74C#49C#146C#49!2C#147C#50C#147C#52C#51C#52C#147C#51C#52C#51C#52C#51C#52C#53C#51C#53C#9C#58C#1!2C#76C$#1!3G#76G#1G#76G#1G#76G#1G#58G#3G#223G#3G#226G#225G#132G#10G#62G#18G#123G#20!3G#21!3G#22!3G#66G#79G#78G#23G#24G#94G#24G#83G#188G#24G#83!2G#92G#26!3G#92G#145!2G#92G#145G#112G#83G#145!2G#172!2G#83!2G#190G#83G#196!3G#94G#201G#94G#79G#201!3G#173G#201G#173G#201G#79!2G#173!2G#79G#173G#79G#173G#94!4G#83G#24G#83!2G#26G#145G#29G#145G#29G#142!2G#145G#142!4G#145G#142G#143G#196G#220!3G#201G#220!2G#201G#91!4G#201G#91!2G#210!2G#50G#215G#50G#215G#50G#210G#201G#91G#218G#196!2G#220G#143!3G#142G#83G#142!2G#145G#142!5G#29G#142!3G#139G#97G#139G#97G#139!2G#73G#139G#97G#139G#73G#26G#73G#26G#73!2G#97G#143G#73!2G#139G#73G#139G#80G#139G#80G#139G#80G#143G#144G#44G#144G#44G#144G#47G#144G#47G#218G#47G#79G#47G#218G#74G#79G#49!4G#210G#51!2G#210G#52G#51G#52G#51!2G#152G#51G#53G#51G#52G#53!2G#8G#58G#1!3G$#1!3O#76O#88O#59O#1!2O#76O#58O#223O#3O#226!2O#222O#208O#10O#15O#93O#123O#65O#20!2O#21O#148O#21O#22!4O#23O#22O#23!2O#24O#83O#24O#83!2O#24O#83O#24O#83O#26O#83O#92O#145O#92O#145O#92!2O#145O#92O#145O#83!4O#196!3O#201!2O#94O#79O#201!3O#173O#200!2O#201O#173O#146O#79O#173O#79O#173O#79!2O#173O#79O#94O#79O#94O#82O#94O#83!3O#26O#142O#145!2O#29O#142O#145O#31O#145O#142O#145O#142O#145O#142O#143O#73O#196!2O#220O#107O#220O#201O#107O#220O#91!5O#210O#50O#210O#215O#50O#215!2O#210!3O#91!2O#218!2O#196!2O#143O#83O#143O#142O#145!4O#142!5O#143O#142!3O#139O#142!3O#97O#139O#97O#143O#97O#143O#97O#143O#73O#26O#139O#73O#113!2O#143O#73O#143O#73O#143O#73O#143O#139O#90!3O#144!4O#46O#196O#47O#218O#47O#218!3O#74O#91O#49!3O#210O#147O#51O#210O#51O#52O#51O#52O#51!3O#53O#51O#53O#52O#51O#54O#9O#59!2O#1O#76O$#1!3_#76_#1!3_#76!2_#58_#223_#227_#223_#226!2_#140_#75_#62_#93_#65_#20!3_#21!3_#148_#22!3_#79_#23!2_#24_#94_#24_#83_#24_#83!4_#92_#83_#92_#145_#92_#145_#92_#145!2_#172_#83_#172_#83!4_#190_#201_#190_#201_#94_#79_#201!2_#173_#200_#201_#197_#201_#173_#146_#79!2_#173_#79_#94_#173_#94_#79_#187_#94!2_#79_#24_#94_#83!2_#143_#26_#145_#29_#145_#29_#142_#145!2_#142_#126_#142!2_#145_#143!3_#196_#220_#201_#220_#201_#107_#91!3_#201_#91_#201_#91!2_#210_#50_#210_#215!4_#210!3_#91_#79_#218!2_#196_#143!4_#145!3_#142!10_#97_#139_#97_#139!2_#142_#143_#73_#139_#73_#139_#73_#26_#142_#139_#73_#143_#73_#113_#143_#44_#143_#73_#143_#80_#143_#90!2_#144_#90_#47_#144_#47_#144_#47_#218_#47_#79_#47_#218_#79_#91_#79_#74_#49!2_#147_#50_#147_#51_#52_#51_#52_#51_#52_#51!4_#52_#53_#52_#55_#8_#58_#1!3_$-#1!3@#76@#1@#76@#88@#59@#76@#58@#223!2@#226@#227@#226@#225@#75@#62@#93@#65!2@#20!2@#21@#51@#21@#22!4@#66@#79@#23@#79@#24@#23@#24@#190@#24@#83@#24@#83!2@#92@#26@#83@#26@#172@#83!7@#196@#190@#94@#196@#94@#201@#94@#201!2@#200@#197@#201@#197@#201@#146!2@#79!3@#173@#94@#79@#94@#79@#187@#94@#79@#94!4@#24@#94@#83!2@#139@#145!2@#29@#142@#145@#31@#145@#142!2@#145!2@#143!3@#220!3@#107@#220!2@#91!4@#220@#91!5@#210!2@#215@#50@#215!2@#50@#215@#201!2@#91@#218@#196@#218@#196@#143!6@#142@#145!3@#143@#142@#143@#142!2@#139!2@#142@#139@#142@#139!2@#97@#139!4@#142@#139@#80@#139!2@#73@#143@#90@#44@#143@#44@#143@#90@#143@#90!3@#144!3@#47@#196@#47@#218@#47@#196@#47@#218!3@#74!2@#79@#49@#201@#49@#52@#147@#51@#52@#51@#52@#51@#52@#51@#152@#51@#53@#52!3@#54@#9@#58@#59@#1@#76@$#1!3A#76A#88A#59A#1!2A#76A#6A#223A#228A#227!2A#226A#225A#75A#13A#18A#64A#65A#20!2A#21!4A#147A#22A#173A#22A#23!3A#24A#190A#94A#83A#24A#94A#83A#24A#83!12A#24A#83A#94A#196A#94A#79A#94A#201A#173A#197A#201A#197A#201A#197A#146!2A#79A#201A#173A#79!2A#187A#79A#94!2A#79A#94!3A#79A#23A#94!2A#83!3A#26!2A#145!2A#29A#142A#145A#31A#145A#142A#145A#142A#143!3A#196A#220A#201A#220!2A#201A#220A#91!3A#201A#220A#201A#91!2A#201A#210A#50A#210A#215!4A#50A#210!2A#201A#91A#218A#196!2A#143!4A#142!2A#145A#143A#142A#143A#142!2A#143A#142!3A#139A#142A#139A#142A#139!2A#143A#139A#97A#143A#73A#139A#142A#139!2A#73A#143A#113A#90A#143A#44A#144A#90!5A#144A#90A#47A#90A#218A#47A#196A#47A#218A#47A#79A#218A#79A#91A#79A#91A#49!2A#147A#49A#147A#51A#147A#52A#51A#52!2A#51!3A#152A#51A#53A#52A#53A#54A#8A#59A#1!3A$#1!3C#76C#1!4C#76C#5C#223C#228C#223C#227!2C#225C#75C#13C#93C#123C#65C#20!2C#21C#148C#21!2C#146C#22!2C#66C#79!2C#23C#94C#24!2C#94C#83C#24!2C#83C#24C#83!11C#94C#83C#94C#79C#94C#79C#201C#146C#201C#146C#201C#148C#146C#201C#146!2C#79!2C#173C#79C#187C#79C#94C#187C#94!3C#79C#94!4C#83C#24C#83!2C#139C#145!2C#29C#142C#145C#31C#142C#145C#142C#145C#143!4C#201C#142C#220!2C#201C#91C#220C#201C#220C#91C#220C#91C#218!2C#91!3C#210C#215!7C#210C#201C#91C#201C#218!2C#196!2C#143!4C#142C#143C#142!2C#145C#143C#142C#143!2C#142C#139!2C#142C#143C#142C#139C#73C#139!2C#142C#139!5C#73C#143!2C#90!2C#143C#44C#144C#90!2C#196C#46C#196C#46C#196C#47C#144C#47C#218C#144C#47C#218C#47C#218C#47C#79C#91C#49C#146C#49!2C#210C#51C#147C#51C#52!2C#51C#52!2C#51C#52C#51C#53C#51C#53C#51C#55C#9C#58C#1!2C#76C$#1!3G#76G#1G#76G#1G#76!2G#6G#223G#228G#227G#228G#227G#222G#114G#61G#89G#64G#20!3G#21!2G#148G#21G#147G#22!3G#23G#66G#23!2G#94G#24!2G#94G#83G#94G#83!9G#24G#83G#23G#24G#94!3G#79!2G#201!2G#146G#197G#201G#147G#201G#146G#201G#146G#79G#201G#187G#79G#94G#79G#187G#94!6G#187G#94!2G#24G#94G#83G#144G#83G#26G#139G#145G#29G#142G#145!4G#142G#145G#143!4G#220G#201G#220G#201G#220G#91!4G#201G#220G#218!2G#201G#107G#91G#201G#91G#210G#215!3G#204G#215G#50G#210!3G#218!2G#196G#218G#196!2G#143!3G#145G#143G#145G#143!3G#142G#143G#142G#143G#142G#139!2G#142G#143G#97G#139!5G#97G#143G#73G#139G#143G#113G#90G#143G#90G#144!2G#90G#144!2G#46G#144G#47G#196G#47G#218G#90G#218G#144G#47G#196G#218!2G#79G#91G#74G#79G#49!3G#148G#147!2G#52G#51G#210G#51G#52G#51G#52G#51G#52G#51G#53G#51!2G#53G#128G#9G#58G#1!3G$#1!3O#76O#88O#59O#1!2O#76O#5O#223O#228!3O#227O#3O#114O#61O#93O#64O#65O#20!2O#21!2O#148O#22O#21O#22!2O#173O#79!2O#23!2O#24O#94O#24O#94O#24O#94O#24!3O#188O#24O#83O#23O#83O#23O#83O#24O#190O#94!2O#196O#79!3O#201O#173O#201O#148O#146O#148O#146!3O#201O#173O#79!2O#187O#200O#94O#79O#94O#79O#94!8O#24O#94O#83!2O#139O#145!3O#126O#142O#145O#31O#143O#145O#143!5O#220!2O#91O#220O#91!2O#196O#91O#220!2O#218!2O#107O#218!3O#91O#210O#50O#215!2O#54O#215!4O#50O#210O#201!2O#218O#201O#143O#107O#196O#143!4O#142O#143O#142O#143O#142O#143!2O#142O#143O#142O#139!7O#97O#143!2O#26O#143O#97O#83O#90O#143O#90O#144O#90O#144O#90O#144!3O#47O#218O#47O#218O#47O#196O#47O#218O#47O#218O#47O#79O#218O#74O#79O#49!3O#201O#49O#51O#49O#52O#147O#52O#148O#51O#52O#51O#52O#51O#152O#51O#53O#51O#53O#128O#9O#58O#1!2O#76O$#1!3_#76_#1!3_#76!2_#58_#223_#228!3_#227_#226_#224_#13_#105_#64_#65_#20!2_#21!4_#147_#22!3_#173_#23_#79!2_#23_#24_#94_#83_#94_#83_#82_#94_#24_#83_#190_#24_#83_#23_#24_#190_#94!2_#196_#82!2_#79_#201_#79_#200_#197!2_#49_#197_#201_#146_#197_#146!2_#79_#200_#201_#94_#79_#173_#94_#187_#94!2_#187_#94!4_#24_#94!2_#83!3_#26_#145_#29_#145_#29_#142_#145_#142_#145_#143_#145_#143!2_#196!3_#201_#220_#201_#220_#91!2_#220_#201_#220_#218_#201_#107_#218!2_#91!3_#210_#50_#215_#54_#215!4_#210!3_#91_#201_#218!2_#196!2_#143_#196_#143!3_#145_#143!3_#142_#143_#142_#83_#143_#142_#139!8_#143_#73_#139_#83_#90!2_#144_#143_#144_#90_#144_#47!3_#144_#218_#47_#218_#47_#218!4_#79_#47_#79_#91_#79_#49!3_#201_#49_#147!3_#52_#147_#52_#51_#52_#51_#52_#51_#152_#51_#52_#51_#53_#51_#53_#128_#8_#59_#1!2_#76_$-#1!3@#76@#1@#76@#1@#88@#76@#4@#223@#228!3@#227@#3@#59@#127@#93@#64@#65@#20!3@#21@#148@#22@#21@#22!3@#79@#22@#23!2@#79@#94@#24@#82!3@#94@#196@#94@#83@#94@#83@#94@#83@#94!2@#24@#94@#82@#79!3@#200@#201@#197@#201@#148@#197@#201@#147@#197@#146@#79@#201@#79@#187@#79@#173!2@#79@#187@#82@#94!2@#79@#94!6@#24@#94@#83!2@#139@#145!8@#143!4@#196@#220@#196@#220!2@#201@#220@#196@#201@#220@#107@#218@#107@#196@#218!5@#201@#210@#50@#215!2@#204@#54@#215!2@#50@#215@#210@#201@#91@#218@#201@#196!3@#143!7@#145@#143!3@#142@#143@#139@#83@#139!8@#83@#143!4@#90@#144!3@#47@#144!2@#218@#47@#79@#47@#79@#47@#79@#47@#218!3@#79@#91@#74@#49@#79@#49!2@#210@#147@#51@#49@#52@#49@#52@#147@#52@#51@#152@#51@#52@#51@#52@#53@#51@#53@#52@#53@#125@#9@#58@#1!3@$#1!3A#76A#88A#59A#1A#59A#76A#58A#228!5A#226A#211A#11A#17A#101A#65A#20!2A#21!2A#148A#21A#147A#22A#146A#22!2A#173A#79!2A#23A#79!2A#94A#82!2A#94A#24A#94!2A#24A#94A#24A#94A#24A#94!2A#82A#79!2A#200A#201A#173A#197A#201A#147A#197A#49A#197!2A#146!3A#79A#200A#79A#200A#94A#200A#94A#79A#187A#79A#187A#94A#187A#79A#94!4A#196A#83!3A#145!3A#126A#142A#145!2A#142A#145!2A#143!3A#196!2A#220A#196A#218A#220A#218!2A#220A#218!2A#201A#220A#218A#91A#218!3A#201A#91A#210A#215!3A#54A#215!4A#210!3A#201A#91A#218!3A#196A#218A#196A#143A#196A#143!7A#83!2A#139A#143A#83!2A#143A#83A#143A#139!2A#143!3A#90A#144A#90A#144!5A#47A#218A#47A#218A#47A#218A#47A#79A#218!2A#79!2A#91A#74A#79A#49A#79A#49A#201A#147!2A#50A#210A#52A#147A#210A#51A#52!3A#148A#51A#52A#51!2A#52!2A#53A#51A#53A#55A#9A#58A#1A#76A#1A$#1!3C#76C#1!4C#76C#58C#228!4C#227C#226C#59C#61C#16C#64C#65!2C#20!2C#21!3C#147C#21C#22!3C#79C#173!2C#23!2C#79C#94C#82!3C#94!2C#83C#94C#24C#94!4C#82C#79C#173!2C#201C#146C#201C#148C#146C#148C#197!3C#146!2C#79C#201C#79C#200C#79C#200C#201C#187C#173!2C#94!6C#187C#94!2C#24C#190C#24C#83!2C#26C#145!3C#126C#142C#145!2C#143!6C#196C#220C#196!2C#218!2C#107C#201C#220C#107C#218!5C#201C#91C#79C#91C#210C#50C#215!4C#54C#215!2C#210C#215C#210!2C#201!2C#196C#218C#196!4C#143C#196C#143!11C#139C#143!3C#139C#83C#143!4C#83C#144C#143C#144!2C#47C#218C#87!2C#79C#47C#79C#218C#79C#48C#74C#79C#91C#74C#79C#91C#49!3C#147C#49C#52C#210C#52C#210C#51C#147C#51C#52C#148C#51C#52!3C#51C#152C#51C#152C#51C#53!3C#55C#60C#58C#76C#1!2C$#1!3G#76G#1G#76G#1G#76!2G#4G#223G#228!4G#226G#132G#229G#16G#101G#19G#20!3G#21G#148G#21G#22G#146!2G#22G#146G#22G#79!3G#23!2G#82G#79!2G#94G#82!3G#94!3G#24G#94G#82G#79G#173G#201G#173G#197!3G#148G#197!2G#148G#197G#49G#197G#201G#146G#79G#200!3G#173!2G#79G#173G#200G#173!2G#94G#173G#94!4G#24G#94G#190G#83!3G#139G#145!3G#142G#145!5G#196G#145G#143!3G#196!2G#220G#196G#107G#196G#220G#218!4G#91!2G#201G#91G#218G#201G#49G#210!2G#215!3G#54G#215!4G#210!3G#201!2G#91G#201G#218!2G#196G#218G#196G#143G#196G#143G#196G#143G#83G#143G#83G#143G#83G#143!2G#83G#143!2G#83G#143!4G#144G#90G#144!5G#196G#47G#82G#47G#218!2G#47G#218G#74G#79G#218G#74G#79G#91G#79G#74G#79G#49!2G#210G#147G#51G#52G#147G#52!2G#147G#51G#148G#51G#52!2G#148G#51G#152G#51G#152G#51G#53G#51G#53!2G#55G#117G#58G#76G#1G#76G$#1!3O#76O#88O#59O#1O#88O#76O#58O#228O#227O#228!2O#227!2O#132O#10O#136O#18O#123O#65O#20!3O#21!3O#147O#22O#146O#22O#173!3O#23O#79!3O#94!2O#79O#94O#79O#94O#79O#94O#82O#79O#94O#79O#173O#79O#197O#146O#197O#148O#146O#148O#197O#148O#197!3O#146!2O#79O#197O#173O#200!2O#197O#173O#200!2O#79O#173O#79O#187O#94O#173O#94!2O#24O#94O#83O#94O#83!2O#92O#145!2O#112O#145O#126O#145!3O#143O#145!2O#143!4O#196O#220O#196!2O#107O#218!4O#91!2O#218O#201O#91O#79!2O#49O#210!2O#50O#51O#215!6O#50O#215O#210!4O#218O#79O#196O#218O#196!8O#143O#196O#143O#83O#196O#83O#196O#143O#83O#143!2O#83!2O#144O#143O#83!2O#144O#83O#144!2O#196O#87O#82O#218O#79O#47O#79!2O#48O#79O#91O#79O#74O#79O#74O#49O#79O#49!2O#147O#49O#210!2O#52!2O#147O#52!2O#148O#51O#65O#51O#52O#51O#152O#148O#51O#52!2O#53O#51O#53!2O#56O#57O#58O#76O#1O#76O$#1!3_#76_#1!3_#59_#76_#6_#228!5_#227_#132_#75_#62_#101_#99_#65_#20!2_#21!2_#148_#21!2_#146_#21_#146_#22_#79_#173_#79_#66_#79_#23_#79!2_#94_#79_#94_#79_#94_#79_#94_#79_#187_#79_#200_#197_#146_#197_#148_#197_#148_#197_#147!2_#197_#148_#197_#146!2_#173_#197_#79_#197_#79_#197_#146_#173_#197_#173_#200_#173!2_#79_#94!2_#23_#94_#24_#190_#83!2_#26_#145!5_#172_#142_#145!3_#196_#145_#196_#143!3_#196_#143!2_#107_#196_#218!3_#91_#218_#201!2_#91_#210_#49_#210!2_#49_#210!2_#215!7_#50_#215_#210!3_#201!3_#91_#201_#218_#201_#218_#196!8_#83_#143_#196!3_#143_#196_#143_#196_#143_#83_#144!3_#83_#196_#144_#196_#47_#82_#218_#87_#79_#218_#87_#79_#74_#79_#74!2_#79_#74_#79_#49!2_#146_#49!2_#210_#52_#51_#210_#52!2_#147_#51_#52_#148_#51_#52!2_#148_#51!2_#81_#52!2_#53_#51_#53!2_#56_#117_#58_#76_#88_#59_$-#1!3@#76@#1@#76@#1!2@#76@#58@#228!4@#227!2@#132@#57@#62@#93@#123@#65@#20!3@#21@#148@#21!2@#148@#146@#173@#146@#173@#79@#173@#23@#79!2@#23@#79@#94@#173@#79@#187@#79@#173@#79@#187@#79@#173@#146@#173@#197@#148@#197@#148@#197@#160!3@#197!2@#146!4@#79@#197@#146@#197@#173@#197!2@#146@#197@#173@#197@#173!3@#94!2@#23@#190!2@#83!3@#92@#145@#172@#145!2@#172@#142@#83@#145!3@#143@#145@#196@#143!3@#196@#220@#196@#218@#196@#218!2@#201@#91@#210@#49!2@#201@#49@#210@#49@#210@#52@#50@#215@#51@#215!5@#50@#215!2@#210@#206@#49@#201@#146@#201@#218@#201@#196@#218@#201@#196!11@#83@#196@#143@#196!2@#83@#144@#83!2@#144@#196@#144!2@#82@#196@#79@#144@#79@#47@#79!2@#91@#79@#74@#79@#49@#79@#49!2@#146@#79@#49@#201@#147!2@#51@#52@#148@#51@#52@#210@#52@#147@#52@#51@#52@#81@#51@#152@#51@#52!2@#53@#51@#53!3@#56@#57@#58@#76@#1!2@$#1!3A#76A#88A#59A#1!2A#76A#4A#228!5A#227A#132A#75A#14A#93A#123A#65A#20!4A#21!2A#147A#21A#146!2A#22!2A#173A#79A#173A#79A#94A#79A#173A#79A#173A#79!2A#173A#79A#173A#79A#173A#146!2A#197A#147A#197A#148A#197A#147A#160A#197A#148A#197!3A#146A#201A#146A#21A#197A#21A#197!3A#147A#197!3A#146A#197A#173A#79A#187A#94!3A#83!3A#92A#145A#92A#112A#145!2A#172A#145!5A#143!3A#83A#143A#196A#143A#218A#196A#218!4A#201A#49A#201A#210A#52A#50A#52A#210A#52A#206A#210A#52A#50A#215!2A#50A#215A#50A#215!3A#210A#52A#210!2A#201A#49A#201A#79!3A#201A#196A#218A#201A#196!12A#83A#196!2A#83A#196!2A#144!2A#196!2A#218A#82A#218!2A#79A#218A#79A#47A#74A#79A#49A#74A#146A#74A#79A#49!4A#147A#49A#147!2A#52A#51A#52A#210A#51A#52A#51A#52A#148A#51A#152A#51A#81!2A#52!3A#53A#51A#53A#55A#56A#57A#58A#76A#1!2A$#1!3C#76C#1!2C#76C#1C#76C#58C#228!4C#227!2C#4C#75C#13C#93C#64C#65C#20!3C#21!3C#147C#21!2C#197C#146!2C#173!2C#79C#173!2C#79C#187C#79C#173!3C#79C#173!2C#197C#146C#173C#197C#146C#148C#146C#147C#20C#160C#197C#148C#146C#197C#146C#197C#146!2C#197!3C#147C#186C#147C#160C#20C#160C#147C#160C#197!3C#173C#79C#94!2C#24C#83!2C#189C#92C#112C#145!4C#172C#145!5C#143C#145C#83C#143C#196C#143C#196C#143C#218C#196C#218C#79C#210C#49C#210C#52C#50C#52!5C#50C#206!2C#52C#50C#215!4C#50C#215C#210C#215C#206C#210C#52C#148C#201C#49C#201!2C#79!3C#201C#196!2C#201C#196C#201C#196!12C#144!2C#94C#144C#82C#218C#82C#218C#79C#218C#79C#218C#79C#74C#146C#74C#79C#49!4C#146C#79C#49!2C#147!2C#51C#147C#51C#52C#148C#51C#52C#148!2C#51C#81C#51C#81C#51C#81C#51C#52!2C#51C#52C#53!3C#103C#9C#58C#76C#1!2C$#1!3G#76G#1!2G#76G#88G#76G#58G#228!5G#227G#4G#75G#13G#63G#123G#65G#159G#20!2G#21!3G#147G#197G#146!3G#22G#173!3G#79G#94G#173G#79G#173G#79G#173!2G#146G#173G#197G#146!2G#197G#147G#197G#148G#197G#160G#197!2G#147G#197!2G#148G#146!2G#197!2G#148G#197G#147G#160!2G#167G#160G#151!3G#160G#151G#20G#197!2G#173!2G#94!2G#83!2G#92G#145G#92G#145!3G#172!2G#145!4G#143G#145G#196G#143G#196G#143!2G#196!2G#218G#79G#91G#210!3G#52G#206G#52G#215G#52G#215G#52G#215G#52!2G#210G#52G#206G#50G#52G#50G#215!2G#210G#215G#206G#210G#148G#210!2G#148!2G#146G#201!3G#79!3G#201G#196G#94G#196G#201G#196G#201G#196G#218G#196!6G#94G#196!3G#82G#196G#79G#218G#79G#218G#79!2G#74G#79G#49G#79G#49!2G#146G#49G#146G#49!3G#147G#49G#147G#49G#52G#147!2G#52G#147G#52G#148G#51!4G#152G#148G#81G#52!4G#53G#52!2G#53G#55G#103G#8G#58G#76G#1!2G$#1!3O#76O#1!2O#76!3O#4O#228!4O#227!2O#4O#114O#127O#105O#101O#65O#20!2O#21O#20O#21O#147O#186O#146O#21O#146!4O#173!4O#79O#173!3O#146O#79O#146!4O#148O#146O#148O#147!2O#160O#147O#160O#147O#186O#147O#197O#21O#148O#197O#148O#21O#147O#160O#153O#167O#151!2O#195O#156O#195!4O#167O#160O#147O#197O#173O#94!2O#188O#83O#189O#92O#112O#172!6O#145O#83O#145!2O#83O#143O#83O#196!2O#220O#218O#79!3O#201O#210O#52!3O#215O#52O#215!4O#52O#206O#52!2O#206O#52O#206!2O#210O#215O#210O#215O#206O#210O#52O#148!2O#210O#148O#201!2O#49O#146O#201O#79!3O#94O#201O#94!2O#196O#94O#196O#201O#94O#196O#79O#94!2O#196O#94O#196!2O#82!2O#79!2O#196O#79!4O#91O#79O#49O#79O#49O#146O#49!5O#146O#49!2O#148O#49O#210O#147O#51O#147O#51O#52O#147O#51O#148!2O#51O#81O#51O#81O#51O#52!3O#51O#52O#152O#53!2O#55O#103O#8O#58O#76!2O#1O$#1!3_#76_#1!4_#76_#58_#228!5_#227_#225_#230_#12_#77_#64_#159_#153_#20_#21_#20!2_#21_#147_#197!2_#21_#146!3_#173_#22_#79_#173!3_#146!2_#79_#21_#146_#197_#147!3_#160_#147_#160!2_#147_#160_#197_#160_#197!2_#147_#197!2_#147_#197_#160!2_#151!2_#195!2_#161!2_#156_#161!4_#156_#195_#160_#197!2_#173_#94_#188_#83_#172!2_#189_#83_#172_#83_#172!2_#83_#142_#83_#145_#83_#143_#83_#196!3_#218_#94_#79_#210!2_#52!3_#215!2_#54!4_#215!3_#52_#206_#210_#52_#210!2_#52_#206_#210_#52_#206_#52_#148_#52_#148_#52_#148_#210_#52_#197_#148_#146_#201!3_#79!2_#94_#218_#79_#201_#94!2_#196_#79!2_#196_#79_#196_#79_#196_#79!3_#82_#218_#79!3_#74_#79_#49_#79_#49_#79_#49_#146_#49_#146_#49_#201_#147_#49_#147_#49_#147!3_#51_#147_#51_#210_#51_#148_#51_#148_#51!2_#81_#148_#81_#51_#52!2_#51_#152_#51_#152_#51_#152_#53_#55_#231_#8_#58_#76_#1_#88_$-#1!3@#76@#1@#76@#88@#76!2@#58@#228!5@#227@#3@#132@#130@#16@#171@#159@#153@#20@#149@#20@#21@#147@#186@#21@#147!2@#21@#146!3@#173!2@#146!2@#79@#146@#173@#197@#146@#197@#147@#197@#160@#20@#160!6@#147@#20@#160@#197@#147@#160@#197@#147@#160@#151@#160@#195@#167@#161!5@#162!3@#161!2@#167@#195@#160@#197@#173@#94!2@#83@#188@#83!2@#172@#83@#172@#83@#172@#83!4@#145@#196!3@#218@#196@#79!2@#210!2@#52!2@#215!2@#54!3@#215!2@#54@#215!2@#52!3@#206@#210@#52@#148@#210@#52@#148!3@#52@#148@#206@#148!6@#201@#147@#49@#146@#79@#201@#79!2@#201@#94@#201@#196@#79!7@#94@#79!2@#94@#79!7@#49@#79!2@#49@#146@#49@#79@#49!3@#147@#49@#147@#49@#147!2@#49@#210@#147!2@#51@#148@#51@#148@#51@#148@#51@#148@#51!2@#81@#52@#81@#51@#152@#51@#152@#51@#152!2@#53@#55@#231@#8@#58@#76@#1@#59@$#1!3A#76A#88A#59A#1A#76A#1A#4A#228!6A#222A#132A#130A#16A#101A#123A#20A#149A#20A#21A#147A#186A#21A#197A#21A#197!2A#146!2A#173A#146A#79A#173A#146A#173A#146!4A#147A#197A#20A#160!2A#148A#151A#148A#151A#160!4A#148A#197A#160A#197A#160!2A#151!2A#195A#161A#156A#161!3A#162!4A#164A#162!2A#161A#156A#160A#197!2A#173A#94A#188A#190!2A#83A#190!3A#83A#190A#172A#83!3A#196A#83A#196A#218!2A#79A#201!2A#52A#215!2A#54!2A#204!6A#54!2A#215!2A#52!2A#206A#52A#210A#52A#148A#210A#148A#52A#206!2A#52A#148A#52A#148A#52A#206A#148!4A#197A#201A#197A#146A#201!2A#94A#79!2A#201A#79!5A#201A#196A#79A#94A#218A#79!6A#49A#79!2A#49A#146A#49A#79A#49!2A#146A#49A#148A#49A#147!3A#49A#147!2A#51A#147A#51A#147A#51A#148A#51A#148A#51A#81A#51A#81A#51A#81A#51!2A#152A#51A#65A#51A#152!2A#53A#54A#56A#184A#8A#59A#1!3A$#1!3C#76C#1!3C#76C#1C#58C#228!6C#226C#132C#9C#62C#166C#123C#153C#149C#20!2C#21C#197C#21C#197!2C#146!2C#21C#146C#173C#146C#173!2C#146!4C#21C#147C#20C#160!3C#148C#151!2C#160C#151!2C#160!3C#147C#160C#147C#160C#151C#160C#195C#156C#161!4C#162!2C#164C#162C#164C#177C#164C#177C#164C#162C#194C#195C#160C#197!2C#94!4C#83C#190!4C#196!2C#190C#83!2C#196!2C#218C#201C#79C#201C#206C#210C#53C#215C#164C#204!2C#55C#204C#54C#204C#54C#215!2C#54C#215!3C#52C#206C#210C#152C#210C#148C#52C#206C#210C#52C#210C#148C#215C#148C#206!2C#210!2C#148!2C#201C#148C#49C#197C#201C#146!2C#201!2C#79!2C#201!3C#79!2C#201C#94C#79!2C#201C#94C#79!5C#210C#79C#49C#146C#49C#79C#49C#201C#49C#146C#49C#146C#49C#147C#49C#147!2C#51C#147!2C#51C#147C#52C#147C#148!2C#51C#148C#51!2C#81C#51C#81C#52C#51C#65C#51C#52C#51!3C#65C#54C#103C#231C#224C#59C#88C#76C#88C$#1!3G#76G#1G#76G#88G#76!2G#58G#228!5G#227!2G#4G#115G#62G#89G#159G#153G#20G#21G#149G#21G#147G#197G#21!2G#197G#146!4G#173G#146!2G#173G#146!2G#21G#147G#186G#160G#147G#151!3G#153G#167G#151!2G#153G#151G#148G#151G#167G#160G#167G#151G#160G#167G#156G#167G#161!2G#162!4G#164G#177G#164!2G#168G#164G#162!3G#161G#195G#160G#197!2G#94!8G#190!2G#196!3G#79G#201!2G#79G#201G#148G#206G#215G#161G#204G#98!3G#204G#98G#204!3G#54G#204G#215!2G#54G#52G#215G#52!2G#147G#148!2G#52G#148G#52G#160G#52G#148!2G#52G#148G#52!2G#160G#210G#148G#210G#147G#148G#201G#147G#146G#201G#146!2G#201G#146G#79!3G#201G#79!2G#201G#79!2G#201G#94G#79!2G#201!2G#79G#49G#146G#79G#49G#146G#49G#146G#49G#146G#49G#201G#147!2G#49G#210G#147!3G#51G#147!2G#51G#147G#51G#147G#51G#148G#51G#81G#148G#51G#81G#51G#81G#51G#52G#51G#152G#65G#51G#53!2G#128G#103G#184G#7G#1!3G#59G$#1!3O#76O#88O#59O#1O#76O#1O#58O#228!2O#223O#228!3O#223O#140O#8O#13O#89O#123O#159O#20O#149O#20O#186O#197O#21O#147O#197O#146!5O#173!2O#22O#146!2O#21O#197!2O#160!2O#151O#160O#195O#167!2O#151O#195!2O#167!2O#195O#167O#151O#167O#151O#195O#167O#156O#161!2O#162!4O#163O#162O#163O#164O#168O#162O#168!3O#162!2O#219O#161O#195O#160O#197O#150O#173!2O#79O#187O#79O#94!4O#201O#190O#201!2O#94O#201O#197O#206!2O#52O#161O#204!2O#98!4O#204O#55O#204O#54O#204O#54!3O#215O#167O#215O#148O#52O#151O#52O#148O#210O#52O#148O#206O#52O#148O#206O#148O#52O#160O#206O#210O#148!3O#160O#148!2O#201O#148O#146O#49O#201O#146!2O#201O#197O#146O#79O#201O#79O#201!2O#94O#201O#79!3O#201O#79O#49O#146O#79O#210O#146O#49O#201O#49O#201O#49O#147!2O#49O#210O#148O#147!2O#50O#147!2O#51O#147O#51O#210O#51O#148O#51O#148O#51O#21O#51!2O#81O#51!2O#65O#52O#51!2O#152O#51O#65O#53!2O#103O#184O#8O#59O#88O#76O#1O$#1!3_#76_#1!3_#76_#1_#6_#228!3_#223_#228_#227!2_#4_#114_#104_#105_#64_#153_#149_#20_#21!2_#197_#21_#197_#146_#21_#146_#21_#146_#173_#146_#22_#173!2_#146!2_#197_#147_#160!2_#151_#195_#156_#195_#156_#195_#161_#167_#156_#195_#156_#195_#156!2_#195_#161_#156_#161!2_#162!3_#86_#163_#162_#168!2_#162_#168!2_#162_#168!3_#162!3_#167_#195_#160!2_#200!5_#173_#201_#79_#94_#201_#79_#200_#201!2_#148!3_#53_#215_#204_#164_#98_#204_#98!3_#204!2_#55_#204_#54_#204_#54_#215_#54_#215_#53_#167_#52_#206_#148_#52_#148!5_#52_#148!3_#206_#210_#152_#148!3_#206_#201_#148!2_#49_#197_#201_#147_#201_#49_#201_#146_#201_#146!2_#79!3_#201_#79_#201_#79_#201_#146_#79_#146_#79_#210_#49_#146_#49_#146_#49_#146_#148_#49_#147!6_#51_#49_#52_#147!2_#51_#148!2_#51_#148_#51!3_#152_#148_#51_#81_#51_#81_#51_#65_#51!2_#65_#53!2_#55_#103_#184_#59_#58_#59_#1!2_$-#1!3@#76@#1@#76@#88@#59@#76@#58@#228!2@#227@#228@#223@#228@#226@#222@#59@#12@#105@#64@#159@#20@#21@#149@#21@#197@#21@#197@#146@#197@#146!4@#22@#173@#146!4@#147@#20@#160@#151@#195@#161@#195@#161!2@#156!2@#194@#161@#156@#161!7@#18@#162!3@#86@#162@#168@#164@#168@#163@#168@#162@#168!4@#163@#168@#163@#162!2@#161@#167@#160!2@#197!4@#200!2@#197@#200!2@#197!3@#148@#160@#206@#215@#161@#204!2@#164@#98!4@#204@#98@#204!4@#54@#215@#204!2@#54@#215@#53@#167@#52@#215@#148@#215@#148@#52@#148@#215@#148@#215@#148@#215@#210@#148!2@#206@#148!2@#206@#210@#148!3@#201@#148!2@#146@#197@#147@#146!2@#79@#201!2@#197@#146@#79!2@#146!2@#79!2@#210@#79@#49@#146@#49@#201@#49@#197@#201@#49@#147@#49@#148@#147!3@#50@#147!2@#210@#147@#52@#147@#51@#148@#51@#148@#51@#148!2@#51@#148@#51!2@#81@#51!2@#81@#51@#152@#51!3@#65@#55@#103@#232@#59!2@#76@#1!2@$#1!3A#76A#88A#59A#1!2A#76A#58A#228!2A#223A#228!2A#223A#227A#222A#132A#10A#16A#101A#159A#153A#149!2A#21!2A#197A#146A#21A#146!2A#173A#146A#22A#173A#146A#79A#173A#146A#21A#197A#147A#160A#151A#156!2A#161!12A#164A#18A#204A#164A#162!3A#163A#162A#168A#162A#168A#162A#168!2A#162A#168A#163A#168!4A#163A#162!2A#161A#167A#160!3A#197!2A#160A#197!3A#160A#197A#160A#148!2A#167!2A#161!2A#204A#164A#98A#204A#98!4A#204A#98A#204A#55A#204!4A#55A#215A#161A#53A#215A#167!2A#52A#215A#148A#167A#52A#206A#148A#52A#206A#148A#152A#148A#52A#148!3A#52A#147A#160A#148!3A#201A#148A#201A#148A#146A#201!3A#147A#146A#79A#146A#201A#146A#79!2A#210A#79A#146A#49A#201A#49A#201A#147A#197A#49A#148A#49A#148A#147!4A#50A#147A#51A#147A#51A#147A#51A#210A#51A#148A#21A#51A#148A#51A#148A#51!2A#81A#51A#81A#51!2A#65A#52A#51A#65A#53A#152A#53A#17A#231A#233A#114A#2A#76A#88A#59A$#1!3C#76C#1!2C#76C#88C#76C#6C#223C#228!2C#223!2C#228!2C#222C#6C#10C#62C#166C#123C#153C#149C#21C#197C#21C#197C#21C#197C#146!2C#22!2C#173C#146C#173!4C#146C#197C#147C#160C#151C#195C#161!6C#164C#161C#164C#162!2C#164C#18C#162!5C#164C#162!3C#168C#162C#168!2C#162!2C#168C#162C#168!7C#162!2C#161C#167!2C#160!2C#206C#197C#160!2C#148C#160!2C#148C#167!3C#53C#215C#204!3C#164C#98!5C#204!5C#55C#204C#164C#204C#164C#54C#215C#161C#54C#215C#53C#167C#215!2C#167C#52C#167C#215C#52C#148C#52C#206C#148!2C#52C#160C#148C#160C#201C#210C#148!3C#147C#148C#147C#148C#49C#148C#146!3C#49C#146C#79C#201C#49C#201C#146C#49C#201C#146!3C#49C#148C#49C#148C#49C#148C#49C#148C#147C#210C#147C#210C#147C#52C#147C#52C#147C#51!2C#148C#51!3C#148C#51C#21C#51C#81C#51!2C#81C#20C#81C#51C#52C#51C#152C#51!2C#99C#56C#231C#233C#59!2C#88C#76C#1C$#1!3G#76G#1!2G#76G#59G#1G#5G#223G#228G#227G#228G#223G#226G#228G#222G#225G#57G#121G#89G#123G#149!2G#186G#21G#197G#21G#197G#146G#173G#146!2G#173G#146G#173!2G#22G#173G#146!2G#21G#20G#160G#151G#194G#161!2G#128G#161G#164G#161G#164G#162G#164G#162!5G#164G#162G#164G#162!2G#177G#162!3G#168G#162!2G#168G#162G#177G#164G#168!7G#162!3G#161G#167!2G#195G#160!2G#206G#160!3G#206!2G#167!2G#156G#161!2G#128G#204G#164!3G#98G#164!2G#98!3G#164!2G#204G#164!3G#55G#204!3G#54G#215G#161G#53G#167G#53G#167!2G#53G#206G#152G#167G#52G#167G#148!2G#206G#148G#206G#210G#52G#160G#210G#147!4G#148G#197G#148G#197G#201G#147G#49G#197G#201G#49G#197G#49G#197G#146G#49G#197G#49G#146G#49G#201G#147G#146G#148G#147G#148G#147G#148G#147G#210G#147G#51G#148G#147G#51G#147!2G#52G#148G#51G#81G#148!2G#51G#148G#51!2G#81G#51G#81G#51!4G#81G#51G#152G#51G#65!2G#55G#56G#184G#233G#59G#2G#76G#1!2G$#1!3O#76O#1!4O#76O#58O#223O#228!2O#223O#228!2O#223O#227O#225O#114O#104O#105O#123O#159O#153O#186!2O#21O#197O#21O#197O#146!3O#22O#173O#22O#79O#173!3O#146O#197!2O#160O#151O#195O#161!2O#162O#161O#18O#164O#162!2O#86O#164O#162O#164O#162!3O#163O#162O#177O#162!7O#168O#162!3O#168O#162O#168!7O#162!3O#219O#194O#167!3O#160O#206O#160!2O#148O#195O#167O#156!2O#161!2O#54O#164O#204O#164!2O#98O#168O#164!2O#204!3O#164!4O#204O#164!3O#55O#161O#54O#161O#215!2O#161O#53!2O#215O#167!2O#52O#167O#52O#206O#148O#52O#148!6O#160O#148O#160O#148!3O#201O#148O#147O#148O#197O#49O#197!2O#49O#197O#146O#49O#197O#49O#197O#49O#197O#147O#49O#148O#147!2O#148O#147O#210O#147O#210O#52O#147!3O#210O#52O#148O#51O#52O#148O#51O#148O#51O#148O#51O#81O#51O#81O#51!2O#81O#51O#81!2O#51!2O#65O#51O#152O#53O#18O#77O#184O#233O#132O#76O#88O#59O#1O$#1!3_#76_#1_#76_#1_#76!2_#4_#223_#228_#227_#228_#223_#228_#223!2_#4_#7_#10_#16_#101_#159_#153_#149_#186_#197_#21_#197_#146_#21_#146!2_#173_#146_#173!2_#79_#173!3_#146_#197_#20_#151_#156_#161!2_#18_#204_#162!3_#164_#162!4_#164_#162_#164_#162!2_#164_#162!2_#219_#162_#219_#162!7_#168_#162_#168!6_#162!3_#161_#219!2_#167!2_#195_#160_#206_#167!3_#195_#161!3_#204_#162_#204_#86_#164_#98_#164!3_#98_#168_#204_#164!4_#55_#164_#98_#164!2_#204_#164_#54_#204_#128_#54_#161_#215_#219_#161_#54_#53_#215_#167_#152_#148_#152_#160_#148_#52_#151_#148!4_#52_#148!5_#147_#148_#197_#148_#197_#49_#148_#197_#49_#197!2_#201_#147!2_#197_#49_#148_#146_#148_#49_#148_#147_#210_#52_#148!2_#21_#210_#52_#148_#51_#148_#51_#52_#21_#52_#148_#51_#81_#51_#81_#51_#81_#51_#81_#51_#81_#51_#81_#51_#152_#51_#152_#51_#65_#152_#128_#103_#184_#211_#59_#2_#76_#1!2_$-#1!3@#76@#88@#59@#1@#88@#76@#58@#228!3@#223@#228@#223@#228@#226@#3@#132@#117@#109@#101@#123@#153@#149!2@#197!2@#21@#197@#146!2@#173@#146@#173@#22@#173!5@#21@#197@#160!2@#195@#161!2@#162@#161@#18@#162@#161@#162!2@#164@#162!2@#18@#162!2@#177@#162!2@#219@#165@#194!3@#219@#165@#161@#165@#162!4@#168@#162@#168@#162@#168!2@#162@#168@#219@#162@#219@#167@#194@#167!3@#160!2@#167@#160@#167@#156@#195@#161!2@#204@#164!5@#168@#164@#168@#204@#164!6@#98@#164!2@#98@#164!2@#204!2@#128@#204@#54@#204@#128@#54@#204@#161!3@#53@#167@#52@#151@#148!5@#151@#148!2@#160@#148!5@#147@#148!2@#49@#148@#197@#147@#148@#146@#148@#49@#147@#148@#146@#147@#148@#146@#148@#147@#148@#147@#210@#148!3@#147@#52@#21@#147@#148!5@#51@#148@#51@#81@#51@#81@#51@#81@#51@#81@#51@#81@#51@#81@#51@#52@#51!2@#65@#52@#152@#53@#125@#191@#232@#208@#59@#76@#1@#76@#1@$#1!3A#76A#1!3A#59A#76A#4A#223A#228!2A#223A#228A#223A#228A#227A#223A#4A#114A#135A#105A#123A#159A#149A#20A#149!2A#21A#197A#21A#146A#21A#146A#173!2A#79A#173A#79A#173!3A#197!2A#160A#151A#156A#161!7A#18A#162A#165A#162!6A#219A#165A#195A#167!3A#194A#161!3A#219A#161A#219A#162!3A#168A#162A#168A#162A#168A#219!2A#167!5A#160A#167A#160A#167A#160A#167A#151A#195A#161!3A#164A#162A#164!2A#168A#164!3A#204A#168A#204A#164!2A#204A#164A#98!3A#164A#98A#164!4A#128A#204!6A#164A#54A#215A#161A#53A#167A#206A#152A#151!3A#148!2A#151A#148A#52A#160A#148A#52A#147!2A#148A#147!2A#160A#148A#147A#148A#146A#148A#146A#197A#148A#146A#148A#147!7A#148!2A#21A#51A#21A#210A#52A#148A#147A#51A#148A#51A#148A#51A#148A#51A#81A#51A#81A#148A#81A#51A#81A#51A#81A#51A#81A#51A#81A#52A#152A#51A#152A#65A#53A#125A#15A#233A#211A#6A#76A#1A#76A#88A$#1!3C#76C#1C#76C#1!2C#76C#58C#228!2C#223C#228C#223C#228C#223C#228C#223C#4C#7C#214C#105C#171C#159C#153C#149!2C#147C#186C#21C#146!2C#173C#146!2C#22C#173!5C#146C#21C#197C#20C#167C#195C#161!4C#156C#155!2C#161!5C#18C#162!2C#161C#165C#161C#195!2C#167!4C#194C#167C#161C#167C#161!2C#219C#162C#219C#162C#219!3C#161C#167!4C#160C#167C#197C#167C#160C#206C#160!3C#167!2C#161!2C#204C#164!8C#98C#164C#98C#164!3C#204C#164!3C#98C#164!3C#128C#164!2C#128C#164!4C#128C#204!2C#128C#215C#156C#152C#151C#148C#151C#148C#152C#151!2C#148C#151C#52C#160!2C#148C#151!2C#160C#147C#148!2C#147C#148C#147C#197C#49C#148C#146C#147!2C#148C#147C#148C#146C#148C#147!5C#52C#210C#52C#21C#210C#51C#148C#21C#51C#148!2C#51C#81C#148C#81C#51!2C#81!3C#51C#81C#51C#81C#51C#52!2C#65C#52C#51C#65C#53C#17C#231C#233C#225C#132C#76C#1!2C#59C$#1!3G#76G#88G#59G#1!2G#76G#58G#228!3G#223G#228G#223G#228G#223G#227G#223G#6G#118G#109G#101G#159G#149!2G#186G#149G#21G#197G#21!2G#197G#22G#146G#173G#22G#173!6G#197G#147G#160G#195G#156!3G#195!2G#167G#156G#195G#161G#155G#161!2G#162!2G#161G#162G#161!2G#167!4G#160G#167G#203G#167G#203G#167!2G#161!3G#219!2G#162G#161G#167!2G#206G#160!3G#201G#197G#160G#197G#160G#197!2G#160!3G#148G#215G#161!2G#162G#204G#164!3G#162G#168G#204G#164!2G#204G#164!6G#98G#164!2G#204G#55G#164G#204G#164!7G#55G#164G#204G#161!2G#167G#152!2G#151!6G#148G#151G#148!2G#152G#160G#148!3G#147!3G#148!2G#147G#148G#146G#148G#147!7G#148G#147G#148G#147G#148!2G#21G#52G#147G#52G#21G#52G#51G#148G#51G#148G#51G#81G#51!2G#65G#81G#51!2G#81!2G#51G#81G#51G#52G#81G#52G#51G#152!2G#65G#128G#17G#61G#224G#208G#6G#76G#1G#76G#88G$#1!3O#76O#1!2O#76O#1O#76O#58O#228!2O#223O#228O#223O#228O#223O#228!2O#222O#4O#117O#135O#166O#64O#159O#149!2O#186!2O#21O#147O#197O#21O#146!2O#173O#22O#173O#79O#173!3O#146O#21O#197O#20O#160O#195O#167!2O#153O#167O#160O#151O#195!2O#161O#195O#219O#161O#162!2O#161!4O#195!2O#160O#167O#160O#167O#160O#167!6O#161O#167!3O#206O#160!2O#201!2O#160O#201O#160O#201O#197!7O#160O#167!2O#161!2O#162!6O#204O#164O#168O#164!2O#204O#164O#204O#164!2O#204O#164!8O#55O#164O#55O#98O#164!5O#54O#161O#167!2O#152!2O#151O#152O#151O#152O#151!4O#148O#52O#151!2O#148O#151O#160O#148!3O#147O#148O#147!2O#148O#147O#148O#147O#148O#49O#148O#147!3O#148!2O#147O#148!2O#21O#52!2O#21O#52O#148!2O#51O#81O#148O#81!2O#51O#81!3O#52!3O#81O#52!4O#152O#51O#65O#53O#128O#77O#184O#224O#234O#6O#76O#1O#76O#1O$#1!3_#76_#1!2_#76_#88_#76_#6_#228!3_#223_#228_#223_#228_#223!2_#227_#4_#114_#104_#199_#171_#159_#149!3_#186_#197_#186_#21_#197_#146_#22_#146_#173!7_#146_#197!2_#160!2_#153_#160!2_#147_#160!2_#151_#167_#195_#167_#161!3_#165_#162_#161!4_#215_#167!2_#160_#167_#160!5_#167!5_#206_#160_#201_#197!2_#201!2_#197_#201_#197_#200_#201_#200_#201_#200_#201_#79_#197_#147_#151_#167!2_#161_#215_#162_#219!3_#162_#204!2_#98_#164_#204!4_#128_#204_#54_#204_#164_#204_#164!4_#98!3_#164_#168!2_#98_#168_#98_#204_#128_#54_#156!4_#167_#152_#167_#152_#151_#152_#151_#167_#151_#148_#152_#151_#52_#147!8_#21_#148_#147!3_#148_#147_#148_#147_#52_#147_#148!2_#147_#148_#52_#147_#210_#52!2_#148!3_#51_#81_#51_#81_#51_#81_#51_#81_#52_#81_#52!5_#152_#51_#65_#53_#65_#125_#191_#221_#211_#234_#6_#76_#1_#88_#59_$-#1!3@#76@#1!2@#76@#59@#1@#58@#223@#228!2@#223@#228@#223!2@#228@#223!2@#4@#7@#118@#109@#171@#159@#149!2@#186@#149@#21@#197@#21@#146@#21@#146@#173@#146@#173@#22@#173!5@#146@#21@#197@#147@#20@#160@#147@#160@#147@#20@#160!3@#195!3@#161!3@#219@#161@#162@#161@#219@#161@#167!4@#206@#160!2@#206!6@#160@#201@#197@#201@#197@#201@#197@#200!2@#94@#201@#200@#94@#200@#190@#94!2@#200!2@#197@#148!2@#167!4@#215@#161@#215@#162@#204@#162@#204!2@#162@#161!3@#54@#219@#128@#204!2@#164@#204@#55@#98!2@#204@#98@#168@#98@#169@#98@#169@#168@#98@#164@#204@#161!2@#156!7@#167@#152!2@#151@#152@#151@#148@#151@#160@#148@#151@#147!2@#20@#160@#148!2@#147@#148@#147!2@#146@#148@#147!5@#148!2@#147!2@#52@#147@#52@#21@#52@#148@#51@#81@#148@#51@#81@#51@#81!2@#52@#51@#52!2@#81@#51@#152@#51!2@#65@#53@#51@#128@#125@#103@#75@#208@#234@#6@#76@#1@#76@#1@$#1!3A#76A#1!4A#76A#4A#228!3A#223A#228A#223A#228A#223!3A#3A#4A#117A#62A#105A#159!2A#149!3A#186A#197A#147A#197A#21!2A#146A#173A#146A#173A#22!2A#173!4A#197A#146A#197!7A#160A#147A#160!3A#167A#160A#167A#195A#161A#167A#161!2A#167A#161A#219A#167!4A#160A#206A#160!2A#206A#160A#206A#160A#201A#160A#201A#197A#201A#197A#201!4A#200A#94A#201A#94A#200!2A#201A#94A#201A#197A#148!3A#206!2A#167A#206A#167!2A#215A#162A#219A#161!2A#215A#161A#53A#215!2A#161A#54A#204!2A#164A#98A#204A#98A#204A#98!2A#169!3A#103A#169A#98A#168A#164!2A#128!2A#161!2A#156A#161A#156A#161A#156!3A#151A#152A#151!4A#52A#20A#147A#160A#147A#160A#49A#197A#147!3A#148A#147A#148A#49A#148A#147A#210A#52A#21A#52A#147A#51A#52A#147A#52A#147A#52A#148A#51A#81A#148A#51A#81A#51A#81!2A#52!2A#65A#52!2A#51!3A#65A#53A#51A#152A#65A#128A#17A#61A#233A#208A#226A#132A#76A#1!3A$#1!3C#76C#1C#76C#1C#76!2C#58C#228!3C#223C#228!2C#223C#228C#223C#228C#222C#4C#114C#104C#199C#171C#159C#149!4C#21C#186C#21C#197C#146C#173C#146C#173C#22!2C#173!2C#79C#173!3C#21C#197C#21C#197!2C#21C#197!4C#160!5C#167C#160!2C#167!4C#161C#167C#161C#167!4C#206!2C#160C#201C#206C#197C#206C#197!3C#206C#197C#201C#197C#201C#197C#201!3C#200C#94C#201C#94C#200C#201!2C#197C#201C#206C#160C#206C#148!2C#167C#148C#167!3C#206C#167!3C#215C#206C#167!2C#53C#215C#204!3C#164C#98C#204C#164C#98C#168C#98C#169!6C#164!2C#204C#128C#161C#54C#161C#128C#161C#128C#161C#156!2C#167!2C#152C#151!3C#160C#52C#147!5C#148C#146C#148C#147C#146C#148C#49C#147C#148C#147C#21C#210C#52C#147C#52C#147C#52C#147C#52C#147C#52!2C#148!2C#51C#81!2C#51C#81C#51C#81C#52!3C#65C#152!2C#51C#65C#53C#51C#65C#53C#128C#17C#184C#224C#208C#234C#132C#1C#76C#1!2C$#1!3G#76G#88G#59G#1!2G#76G#58G#228!7G#223!2G#228G#227G#3G#132G#138G#109G#166G#159G#153G#149!3G#186G#21G#147G#21!3G#146G#173G#146G#173!6G#146G#173G#197!2G#146G#197!3G#21G#197G#147G#197!2G#147G#160!5G#206G#160G#167!3G#161G#167G#219G#161G#167!3G#206!5G#197G#206!2G#201G#197G#206!3G#201G#206G#197G#201G#197G#201!5G#200G#197G#201G#160G#148G#206!4G#148G#206G#148G#206G#151G#148G#167G#52G#206G#151G#148G#215!2G#167G#215G#219G#128G#204!3G#164!2G#98!2G#168G#169!2G#103G#175G#169!2G#98G#164!2G#161G#128G#161G#128G#204G#162G#128!2G#161G#156!2G#152G#151G#152G#151!2G#65G#147G#160G#20G#147!2G#197G#148G#147G#146G#148G#147!2G#148G#197G#147G#210G#52G#147G#52G#148G#147G#52G#147G#151G#52G#147G#52G#147G#65G#52G#81G#51G#81!3G#52G#81G#52G#81G#52!2G#51G#152!2G#53G#51G#65G#53G#152G#128G#191G#184G#224G#234G#227G#6G#1G#76G#1!2G$#1!3O#76O#1!3O#76!2O#58O#228!4O#223O#228!3O#223O#228O#223O#3O#140O#114O#135O#105O#123O#159O#149!4O#197O#186O#197!2O#21O#173O#21O#173!8O#146O#173O#146O#197O#146O#21O#197!10O#160O#197O#160!3O#167!2O#219O#161O#167O#161O#219O#167O#219O#167!2O#206!5O#197O#206O#201O#206O#201O#197O#201!2O#197!2O#201O#197O#201O#197O#201O#197O#201O#206O#148O#206!5O#167O#206!2O#52O#167O#148O#167O#215O#167O#206O#167O#215O#148O#167O#215!2O#161O#215O#204O#164O#204O#164O#98O#204O#168O#98O#169!2O#103!2O#169!2O#168O#98O#204O#128O#161O#54O#204O#162O#128O#204!2O#128O#156!2O#151O#156O#151!3O#148O#151O#147O#160O#147!3O#197O#147!4O#197O#49O#148O#147!3O#52O#148!2O#52O#147O#148!3O#152O#52!4O#65O#52O#51O#152O#51O#152O#81O#52!2O#152!2O#51O#65O#51O#152O#53O#152!2O#53O#125O#191O#221O#211O#234O#226O#6O#1O#76O#1!2O$#1!3_#76_#1_#76_#88_#59_#1_#58_#228!5_#223_#228!3_#223_#227!2_#3_#7_#118_#16_#171_#159!2_#149!2_#20_#149_#197_#21_#197_#21_#200_#173_#146_#173!8_#197_#173_#197!11_#147_#197!4_#206_#160!2_#167!3_#161_#167_#219_#167_#219_#167_#219_#167_#161_#167!2_#206!3_#201!2_#206_#201_#206_#160_#201_#206_#201_#206_#201_#197_#206_#160_#201_#206!2_#201_#206!3_#215_#206_#167_#206_#167_#206_#167!2_#215_#167!2_#215_#167!2_#215_#167!2_#215_#54_#215_#54_#204!3_#164_#98_#168_#169_#103_#169_#175_#169!2_#98!2_#162_#161_#54_#162_#128_#164!4_#128_#156!2_#151!5_#65_#52_#147!3_#197_#147!2_#146_#147_#146_#148_#49_#147_#148!4_#147_#148!2_#147_#151_#148_#152_#52!2_#147_#151_#147_#65_#210_#152_#52_#65_#52_#51_#152_#81_#52!2_#152!2_#53_#51_#53_#65_#53_#65_#18_#125_#15_#75_#211_#234_#226_#6_#1_#76_#1!2_$-#1!3@#76@#88@#59@#1!2@#76@#4@#223@#228!5@#223@#228!4@#223@#3@#132@#217@#121@#166@#159!2@#153@#149!3@#20@#197!2@#150@#197@#173!11@#197@#173@#197@#146@#197@#173@#197@#146@#21@#197@#21@#197!7@#206@#160@#167!2@#219@#167!3@#219@#167!2@#219@#167@#219!4@#206!4@#160@#201!2@#206@#201!3@#206@#197@#206@#201@#206@#160@#206!7@#215@#206@#167@#215@#167!2@#53@#215!2@#161@#215!6@#161@#215@#219!2@#54@#204@#164@#98!2@#169!7@#98!2@#204!2@#161@#54@#162@#204@#163@#164@#128@#161@#99@#156@#151@#19@#152@#151!2@#52@#197@#20@#147!3@#197@#146@#147!2@#146@#147@#197@#148@#147!3@#210@#52@#147@#52!2@#147@#52@#148!3@#152@#65@#52!7@#65@#52@#152@#52@#152@#51@#152!2@#53@#51@#65@#53@#152@#99@#17@#61@#224@#208@#234@#226@#132@#1@#76@#1!2@$#1!3A#76A#1!2A#76A#1A#76A#58A#228!3A#223A#228!3A#223A#228A#223A#228A#227A#3A#222A#114A#104A#105A#123A#159!2A#149!3A#186A#149A#21A#197A#150A#197A#150A#173!8A#200!2A#197A#146A#197A#146A#200A#197!2A#200A#197!10A#160!2A#167!9A#219!6A#167!3A#206!5A#160A#206A#201A#206!3A#201A#206A#201A#206!5A#215A#167A#215!3A#161A#215A#219A#161A#219!2A#54A#219!2A#161A#204A#161A#204!2A#54A#219A#204!2A#98!4A#169!6A#98A#164A#204A#128A#161A#128!2A#204A#164!2A#128!2A#161A#156A#152A#151!3A#65A#147A#160A#147!2A#186A#147A#21A#147A#146A#147A#146A#148A#49A#197A#147A#148A#147A#148A#147A#148!2A#147A#151A#148A#52!2A#151A#148A#52A#148A#152A#148A#151A#52A#20A#52!3A#152A#52A#152!2A#51A#53A#51A#18A#53A#152A#65A#125A#77A#184A#235A#208A#226A#227A#6A#1A#76A#1!2A$#1!3C#76C#1!2C#76C#88C#76C#58C#228!12C#3C#222C#7C#138C#16C#101C#159!2C#20C#153C#149!2C#197C#186C#197!2C#173C#197C#173C#150C#173!4C#200!4C#197C#173C#197!3C#173C#200C#197C#173!2C#200C#197!7C#160C#206C#160C#167!6C#206C#167!3C#219!2C#167C#219!4C#167C#219C#206!7C#201C#206!4C#201C#206!4C#215C#219C#215C#161C#219!2C#204C#162C#204!3C#219C#204!8C#98!5C#168C#169!2C#98C#169C#98C#169C#98!3C#204C#162C#161!2C#128C#164C#128C#204C#162C#161C#156!2C#151!4C#65C#148C#147C#20C#147!2C#197C#147C#146C#147C#146C#49C#197C#148C#147!3C#210C#148C#147C#210C#52!3C#148!2C#52!3C#151C#52C#148C#152C#52C#151C#52C#151C#52C#152C#52C#152C#52C#152C#53C#152C#65C#53C#51C#99!2C#125C#191C#221C#211C#234C#226C#227C#5C#76C#88C#59C#1C$#1!3G#76G#1!2G#76!3G#58G#228!3G#223G#228!2G#223G#228G#223G#228G#223G#228G#223G#3G#140G#114G#121G#105G#171G#159!2G#149!4G#21G#197G#150G#197G#150G#200!6G#173G#200!3G#197!3G#150G#197!2G#200!3G#197G#200!3G#197G#146G#197!4G#206G#160G#206G#167!2G#206G#167G#206!6G#167G#219G#206G#219!3G#206G#219G#167G#206!6G#167!2G#206!7G#219!4G#204!18G#98G#204G#168!2G#98!8G#204G#164G#162G#219G#54G#161G#128G#161G#128G#161G#128G#156!2G#151!2G#152G#151G#65G#148!2G#52G#197G#147G#21G#147!2G#22G#147G#146G#147!3G#148G#147G#52G#21G#210G#52G#21G#52G#147G#148!2G#152G#148G#151G#52G#151G#152G#52G#151G#148G#152G#148G#152G#52G#152!6G#53!2G#152G#65G#53G#18G#17G#15G#75G#208G#234G#228G#227G#6G#76G#1!3G$#1!3O#76O#1!4O#76O#4O#223O#228!10O#227!2O#223O#222O#133O#104O#16O#101O#159!2O#20O#149O#20O#186!2O#197!3O#150O#197O#173!2O#197O#187O#200!4O#197O#173O#197!4O#200O#197O#200!5O#197O#79O#200!2O#197O#201O#197!2O#206O#160O#206O#167O#206O#167O#206!4O#201O#206!6O#219!11O#206!3O#219O#206O#219!2O#206O#219!5O#204!2O#162O#204!4O#219!3O#204!7O#98O#204O#98!2O#204O#98O#204!6O#98O#204!2O#161!2O#54O#161O#54O#161O#128O#161O#156!2O#152O#151!3O#148O#151O#147O#20O#147!3O#21O#147!2O#146O#147O#146O#147!3O#21O#210O#52O#147O#52O#147O#160O#52O#148O#52O#148O#152O#52O#151O#52O#148O#152O#148O#152O#52O#152O#52O#152O#52O#152!3O#52O#53O#51O#65O#53!2O#64O#18O#17O#61O#224O#208O#234O#228O#227O#6O#76O#1O#76O#1O$#1!3_#76_#1_#76_#88_#59_#76_#58_#228!7_#223_#228_#223_#228!2_#223_#228_#3_#5_#117_#121_#105_#171_#159!2_#20_#149!2_#186!2_#21_#197!2_#150_#197_#150_#173_#197_#187_#197_#173_#197_#150_#197_#150_#197_#146_#197!2_#150_#197_#173_#200!5_#197_#201_#173_#197!4_#206_#197_#206_#167_#206!4_#201_#206_#201_#160_#201_#206!9_#167!2_#219_#206_#219!4_#206_#219_#206_#219!3_#206_#219!8_#206_#219_#215!2_#219_#215!2_#219_#54_#204!3_#219!3_#204!2_#219!4_#204!2_#219_#204_#161!2_#156!4_#161_#156!4_#152_#195_#152_#151!2_#65_#52_#147!3_#21_#147_#197_#146_#147!6_#52_#147_#52_#147_#52_#147_#148_#210_#52_#148!2_#152_#52_#65_#52_#151_#52_#151_#52_#152_#148_#152_#52_#152!2_#52_#152!2_#53_#152_#53!2_#65_#53!2_#125_#191_#221_#224_#234_#226_#227!2_#6_#76_#1!3_$-#1!3@#76@#88@#59@#1!2@#76@#58@#228!12@#227@#223@#227@#222@#7@#138@#16@#101@#123@#159@#149!3@#186@#197@#186@#150@#197@#150@#197@#173@#150@#173@#197@#187@#197@#173@#197!5@#150@#197!2@#173@#200!8@#197@#201@#197@#201@#197@#201@#167@#160@#206!4@#197@#206@#160@#197@#201@#206@#201@#206!11@#219@#206!3@#219@#206@#219!2@#206@#219@#206!2@#219@#206!5@#201@#206!3@#215!5@#219@#215!4@#219@#215!2@#219@#215@#219@#215!6@#156@#167@#53@#167@#152@#195@#167@#152@#156!2@#152@#195@#156@#195@#151!2@#65@#52@#147@#20@#147@#20@#148@#146@#147@#146@#147!2@#21@#52@#147!5@#160@#147@#151@#52!2@#147@#151@#52!2@#147@#148@#52@#151@#52@#151@#52@#152@#52@#152!2@#52@#152!3@#53@#52@#99@#152@#99@#152@#99@#101@#17@#15@#75@#208@#234@#226@#228@#227@#5@#76@#1@#76@#1@$#1!3A#76A#1!2A#76A#1A#76A#4A#228!9A#223A#228!4A#223!2A#140A#114A#104A#105A#101A#159!2A#153A#149!2A#186A#197A#186A#197!2A#150A#197A#150A#197A#187A#197A#150A#197A#150A#200A#197A#150A#197!2A#21A#197!2A#173A#200!7A#197A#79A#197!3A#160A#201A#160!2A#206!4A#201A#206A#201A#206A#201!8A#206A#201A#206!3A#201A#206!11A#201!6A#210A#206A#210A#206!3A#215!6A#219A#215!5A#52A#210A#215A#206A#148!2A#151!4A#65A#148A#151!2A#152A#151!3A#156A#195A#167A#152!2A#151A#52A#20A#160A#147!2A#197A#146A#147A#22A#147!6A#20A#148A#151A#52!2A#147A#52A#147A#151A#52!2A#147A#151A#52A#151A#52A#65A#148A#152A#52A#151A#152A#52A#167A#152!2A#53A#152!2A#53A#152!2A#65A#53A#18A#128A#191A#184A#235A#208A#226A#227!2A#228A#6A#76A#1!3A$#1!3C#76C#1!2C#76C#88C#76C#5C#228!15C#227C#223C#132C#10C#62C#166C#123C#159C#149C#153C#149!2C#186C#21C#186C#149C#150C#197C#150C#200C#197C#187C#197C#150C#200C#197!6C#150C#200C#197C#173C#200!3C#201C#173C#200C#197!2C#201C#200C#197!2C#201C#160C#201C#206!2C#197C#206!2C#160C#201!16C#206C#201C#206C#201C#206C#201!2C#206C#201!9C#148C#206C#210C#206C#215C#206!2C#215C#167C#206C#215C#206!3C#210C#215C#201C#206C#210C#206C#148C#210C#52C#147!2C#52C#147!2C#52C#147C#65C#52C#20C#151!4C#152C#151!3C#65C#52C#147!4C#21C#147!2C#22C#147!2C#21C#52C#147C#65C#206C#52C#147!2C#160C#65C#52C#147C#65C#52C#147C#151C#52C#147C#65C#52!3C#151C#152C#52C#152!6C#53C#152C#53C#152C#53!2C#99C#18C#17C#15C#75C#211C#234C#226C#227C#228C#227C#132C#1C#76C#1!2C$#1!3G#76G#1!2G#76!3G#58G#228!16G#223G#222G#120G#104G#105G#171G#159G#153G#149!2G#186!3G#150G#197!3G#150G#197G#150G#197G#173G#197!3G#150G#197!6G#150G#197G#173G#200G#173!2G#200!4G#197!5G#160!3G#206G#197G#206G#160G#206G#160G#206G#197G#201!31G#210G#215G#206G#215!2G#206G#215G#206!4G#210G#52G#210G#206G#210!3G#49G#148G#146!2G#147G#197!2G#147!2G#20G#160G#147!2G#151!2G#65G#152G#151!2G#65G#151G#52G#147G#20G#160G#147!2G#21G#148G#22G#147!2G#146G#147G#148G#21G#52G#148G#147G#52G#65G#148G#52!2G#147G#151G#52G#147G#151G#52G#147G#151G#52!2G#151G#52G#65G#52G#152G#151G#152!2G#52G#152G#53G#152!3G#53G#99G#65G#53G#99G#77G#231G#224G#208G#226G#234G#228G#227G#228G#132G#1!2G#76G#1G$#1!3O#76O#1!3O#76O#1O#58O#228!17O#236O#132O#10O#62O#166O#123O#159O#149O#153O#149!2O#197O#186!2O#150O#197!2O#150O#202!2O#197O#150O#197!5O#150O#197O#150O#197O#173O#200!6O#197O#200!3O#201O#200O#197O#201!2O#160O#201O#206O#197O#206O#201O#160O#201O#160O#201O#160O#201!20O#196O#201!7O#210O#206!5O#215O#206!2O#210O#206O#210!2O#206O#201O#210O#201O#210O#147O#201O#147O#146O#49O#146!2O#147!2O#146O#147!3O#20O#148O#151O#52!2O#20O#151O#52O#65O#52O#20O#148O#52O#197O#21O#147O#21O#147O#146!2O#22O#147!5O#52!2O#147O#148O#152O#52O#20O#52O#148O#65O#52!3O#65O#52!2O#147O#151O#65O#52!2O#151O#152O#52O#53!2O#152!2O#53O#152O#53O#152O#99!3O#17O#15O#229O#224O#208O#226O#227!3O#228O#5O#100O#1!3O$#1!3_#76_#1_#76_#88_#59_#76_#58_#228!17_#223_#222_#192_#104_#199_#171_#159!2_#186_#149_#186_#149!2_#197_#186_#150_#186_#197_#150_#197_#150_#197_#150_#197!2_#186_#197!5_#150_#197_#173_#200!5_#197_#201_#200!2_#197!4_#201_#160_#197_#206!3_#160_#206_#201_#206_#201!17_#190_#201_#196_#201_#196_#201_#196_#201!4_#206!2_#210!2_#215!2_#210_#206_#210_#206_#210!2_#206_#49_#201_#210!2_#49_#148_#49_#146_#79_#146!2_#79_#146_#79_#146_#147_#146_#21_#147_#148_#52_#20_#147_#151!2_#65_#52_#147_#151_#147!2_#197_#147_#21_#148_#146_#147_#22_#147!2_#21_#52_#147_#65_#52_#147_#160_#151!2_#52_#148_#151_#148_#52_#148_#52_#147_#151_#52_#147_#151_#65_#52!2_#167_#152!5_#167_#152_#53_#152_#53_#156_#99!2_#53_#18_#17_#15_#221_#211_#234!2_#227!2_#228_#227_#5_#1!2_#76_#1_$-#1!3@#76@#88@#59@#1!2@#76@#4@#228!17@#227@#222@#1@#141@#16@#166@#64@#159@#153@#186@#149@#186!3@#197@#186@#197@#150@#186@#197@#186@#197@#186@#197@#186@#150@#197@#186@#150@#197!2@#150@#200!7@#173@#200!2@#197@#200@#201@#200@#197!6@#160@#206@#201@#206@#160@#206!2@#201!13@#190@#201!2@#196@#201@#196@#201!6@#206@#201@#210@#206!5@#215@#210!2@#206@#201@#210@#201@#210@#49@#148@#201@#49@#201@#79@#49@#79!2@#49@#146@#79@#49@#146@#147@#148!2@#147!2@#151!2@#65@#52@#147@#151@#20@#52@#20@#147!3@#21@#147@#146@#147!3@#21@#148@#21@#52@#147@#160@#151@#52@#65@#148@#151@#148@#152!2@#148@#52@#151@#52@#65@#52@#151@#52!2@#151@#52@#152@#151@#152!5@#53@#152!2@#156@#152@#99!3@#17@#77@#229@#233@#208@#226@#227!3@#228@#227@#5@#100@#1!3@$#1!3A#76A#1!4A#76A#58A#228!17A#223A#222A#133A#117A#237A#199A#101A#123A#159A#186!8A#197A#186A#150A#186A#197A#149A#197!2A#186A#197A#186A#197A#186A#197!3A#173A#200!7A#201A#200!4A#201A#197A#201A#160A#197A#206A#201A#160!2A#206A#201A#206A#201A#160A#206A#201!21A#206A#201A#206!3A#210A#206A#210!4A#206A#210A#201A#210!2A#201A#49A#201A#49A#201A#146A#79A#210A#79!2A#146A#79!2A#49A#146!4A#147!2A#65A#52A#147A#148A#151!2A#52A#20A#160A#52A#197A#21A#147!2A#21A#147A#146A#147!2A#148A#147!2A#160A#52!2A#147A#151A#52!2A#151A#52A#151A#148A#152A#148A#152A#52!2A#160A#52A#151!2A#152A#151A#152!2A#52A#167A#152!4A#156A#53A#152A#99!2A#18!2A#17A#15A#221A#224A#234!2A#227!2A#228!2A#227A#5A#1!2A#76A#1A$#1!3C#76C#1C#76C#1C#76C#1C#4C#228!16C#3C#222!2C#132C#120C#104C#16C#166C#171C#159C#123C#159C#186C#153C#186!5C#197C#186C#197C#149C#197C#186C#149C#197C#186C#147C#186C#197C#21C#197C#150C#197C#173C#200!9C#201C#202C#197!3C#201C#197!2C#160C#201C#160C#201C#206C#201C#160C#201C#206C#201C#206C#201!18C#206C#201C#206!2C#201C#206!2C#210C#206!2C#201C#210C#201C#210!2C#201C#49C#201!2C#49C#201C#79C#49C#201C#79!2C#210C#79!2C#49C#79C#146!2C#49C#146C#147!3C#160C#151C#65C#52C#20C#148!2C#52C#197C#147!5C#21C#147C#21C#148C#147!2C#65C#210C#65C#52C#151!3C#167C#52C#151C#152C#52C#151C#52C#65C#148!2C#152C#151C#52C#151C#152C#151C#152!5C#53C#167C#53C#156!2C#99!3C#18C#125C#77C#61C#235C#208C#234C#227!4C#228!2C#5C#100C#1!3C$#1!3G#76G#88G#59G#1!2G#76G#58G#228!14G#223G#3!2G#132!2G#1G#120G#209G#237G#199G#165G#194G#159G#123G#186G#153!2G#186G#20G#186!9G#197G#186!4G#197!3G#21G#197G#200G#197G#173G#197G#200!8G#201G#197!5G#201G#160!3G#206!2G#201G#206G#201!19G#206!2G#201G#206G#201G#206G#201G#210!2G#201!2G#210!6G#49!2G#201G#49G#146G#79G#201G#79G#91G#79!4G#146G#79G#201G#49G#146G#147G#148G#147!2G#151G#52G#148G#151!3G#65G#147G#52G#20G#147G#20G#147!7G#65G#210G#65G#52G#160G#52G#151G#152G#151!2G#152G#148G#152G#148G#152G#52G#152G#148G#152G#151G#152!2G#151G#152!4G#167G#152G#167G#156!2G#152G#99!3G#18G#101G#17G#15G#75G#211G#208G#234G#227G#228!5G#132G#1!4G$#1!3O#76O#1!3O#76!2O#58O#228!11O#223O#3!2O#4!2O#5O#132O#1O#120O#114O#207O#183O#109O#105O#166O#159O#195O#159O#153!2O#186O#159O#20O#186O#20O#186O#20O#186!2O#197O#186O#20!3O#147O#186O#20O#197!3O#150O#197O#173O#200!2O#201O#173O#200O#201O#200!2O#201O#202O#197!4O#201O#197O#160O#197O#201!3O#160O#206O#201O#206O#201O#206!2O#201!13O#206O#201O#206O#201O#206O#201O#206!2O#210O#206O#201!2O#210O#201!2O#91O#201!2O#79O#201O#49O#201O#146O#79O#210O#91O#201O#79O#210O#91O#79!2O#49O#79O#146!2O#49O#148O#146O#147O#151O#147O#151O#65O#52!2O#65O#210O#65O#147!4O#20O#147O#20O#147!2O#20O#52O#147O#65O#210O#52O#151!2O#65O#52O#151O#152O#151O#152O#148O#152O#52O#151O#148O#152!3O#151O#152!4O#167O#152O#156O#152O#156O#152O#53O#99!4O#18O#125O#77O#61O#224O#208O#226O#227!4O#228!3O#5O#1!2O#76O#1O$#1!3_#76_#1_#76_#1_#88_#76_#4_#228!9_#223_#3_#238!2_#4_#58_#5_#2_#1_#7_#120_#122_#117_#209_#237_#199_#177_#171_#159_#195_#159_#153_#160_#186_#160_#186_#153_#186!2_#20!4_#160_#186_#160_#186_#20_#197_#20_#197_#21_#197_#146!2_#173_#197_#173_#197_#200!4_#202_#200!2_#201_#197_#202_#197!2_#201!2_#160!2_#201!3_#206_#201_#206_#201!2_#206_#201_#206_#201!2_#206_#201_#206_#201_#206!3_#201_#206_#201_#206_#201_#206_#201!2_#206_#201!3_#210_#201!4_#91_#210_#49_#201_#146_#49_#201_#49_#79!2_#49_#79!5_#201_#49_#146!2_#201_#147_#148_#147_#52_#147_#151_#52_#147_#151_#52_#151_#52_#147_#20_#147!5_#20_#160_#148_#147_#65_#210_#152_#65_#52_#148_#152_#148_#152_#52_#151_#148_#152_#151_#65_#52_#152_#151_#52_#151_#152!3_#156_#152_#156_#152_#156!2_#152_#99_#152_#99!2_#53_#18_#128_#17_#15_#221_#224_#208_#234_#227!2_#228!5_#132_#1!4_$-#1!3@#76@#88@#59@#1@#59@#1@#5@#228!8@#3@#238!2@#4@#58!3@#2@#76@#100!2@#122!2@#117@#207@#183@#109@#105@#166@#194@#159@#195@#159@#153!2@#186@#153@#160@#20@#160@#186@#160@#186@#160@#186@#160@#20!2@#160@#20!2@#197!2@#21!2@#197@#146@#173@#146@#173@#200!5@#201@#202!2@#201@#197@#201@#202@#186@#197@#201@#197@#160!2@#201@#160@#201@#206@#201!3@#206@#201@#206@#201!3@#206@#201!3@#206@#201@#206@#201!2@#206@#201!3@#210!2@#201!2@#210@#201@#210@#91@#210@#201!2@#79@#49@#201@#146@#79@#201@#210@#79@#201@#79@#210@#79@#210@#79!2@#146@#49@#146@#49@#148@#147!3@#151@#147@#151!3@#20@#52@#147@#160@#52@#160@#147@#20!2@#160@#148!2@#147@#52@#147@#151@#52@#148@#151@#152@#151@#152@#151!2@#152!2@#65@#52!2@#151@#148@#152!11@#156@#152@#99!2@#54@#64@#99@#125!2@#17@#15@#221@#224@#208@#234@#227!3@#228!4@#5@#7@#1!3@$#1!3A#76A#1!4A#76A#58A#228!5A#223A#3A#238!3A#58A#5A#58A#59A#76!4A#122!2A#114A#120A#207A#209A#178A#124A#177A#166A#159A#195A#123A#159A#153!2A#160A#186A#153A#186A#20A#153A#160A#153!3A#160A#153A#20A#160A#186!2A#147A#186A#197A#146A#150A#21A#197A#173A#197A#173A#200A#197!2A#200A#202A#197A#202A#197!6A#201A#197A#201A#160A#201A#206A#201A#206!2A#201!2A#206A#201!2A#206A#201A#206!3A#201A#206A#201!3A#206A#201!2A#206A#210A#206A#201!2A#210A#201A#91A#210!2A#201!2A#49A#201A#49A#146A#49A#201A#79A#49A#201A#79A#49A#79!3A#49A#146A#79A#146A#49A#197A#147A#148A#147A#151A#20A#151!2A#52A#65A#148A#151A#20A#52A#197A#147A#20A#148A#147!3A#52A#147A#160A#52A#20A#148A#151A#65A#148A#152A#148A#152A#52!2A#151A#52A#151!2A#152!2A#151A#152!4A#156!2A#152A#99A#156A#152A#99A#156A#99!2A#54!2A#99A#125!2A#17A#15A#184A#75A#211A#234A#226A#227A#228!5A#5A#1!4A$#1!3C#76C#1C#76C#1C#76!2C#58C#223!4C#238!3C#4C#58C#4C#58C#1!3C#76C#1!2C#76C#122!4C#192C#138C#104C#170C#105C#166!2C#159C#195C#123C#153!4C#20C#153C#160C#153C#20C#153C#160C#153!2C#160C#153C#20C#147C#186!2C#21!2C#197C#21C#197C#173C#197C#173C#197C#173C#200!5C#201C#197!3C#201C#197!2C#206C#186C#197C#201C#160C#201C#197C#201!2C#160C#201!2C#206C#201!2C#206C#201!3C#206C#201C#206C#201C#206C#201!7C#210!3C#201!3C#49C#201!2C#49C#201C#146C#79C#201C#49C#146C#79C#201C#146C#49C#201C#79C#146C#79C#210C#79C#148C#146C#49C#147!2C#148!2C#151C#52C#160C#148C#151C#52C#147C#20C#52C#147C#148!2C#52C#20C#160C#147C#20C#151C#147C#151C#65C#52!2C#148C#152!2C#151!2C#65C#148C#152C#151C#152C#151C#152C#151C#152!2C#156!2C#152C#99C#156!2C#99C#156!2C#99C#54C#99C#18!2C#125C#18C#17C#77C#15C#61C#75C#235C#208C#234C#227C#228!5C#5C#7C#1!3C$#1!3G#76G#88G#59G#1!3G#58G#238G#223G#238G#58G#238G#5!2G#216G#5G#88G#1!3G#76G#1G#100G#212!3G#100G#122!2G#192G#207G#209G#193G#124G#177G#166G#194G#159G#123G#159G#153G#160G#153G#160G#153G#20G#160G#153G#160G#151G#153G#151G#153G#20G#153G#20!2G#197G#186G#197G#21G#197G#150G#197G#150G#21G#200!6G#202!3G#201G#197!6G#201G#160G#201G#160G#201G#160G#201G#160G#206G#201G#206G#201G#206G#201G#206!2G#201G#206G#201!2G#206G#201!2G#206G#201!9G#147G#201G#147G#49G#197G#201G#49G#201G#49G#201G#146G#79G#49G#146G#79!2G#49G#146G#79G#49G#146G#49G#146G#201G#147!2G#151G#65G#148!2G#151G#148G#152G#52G#20G#151G#147G#160G#20G#52G#20G#147!2G#52G#160G#52G#147G#151G#52!2G#160G#151G#152G#148G#152G#151G#52G#152G#151G#152!2G#151G#152G#151G#152!4G#19G#156!3G#99G#156G#99!4G#157!2G#128G#125!2G#17G#77G#15G#61G#221G#75G#239G#140G#234G#228!5G#5G#1!4G$#1!3O#76O#1!3O#76!2O#58!3O#238O#216!2O#2O#88O#1!5O#76!2O#212O#76O#212O#76O#122!3O#120O#207O#115O#138O#183O#178O#199O#166O#101O#194O#159O#153O#123O#153!3O#160O#153!2O#167O#123O#153O#151O#123O#153O#151O#153O#160O#186O#20O#197O#21O#197O#21O#197O#21O#197O#173O#197O#173O#197O#187O#197O#200!2O#201O#202!2O#197!5O#160O#186O#201O#197!2O#160O#201O#160O#201!2O#160O#201O#186O#206O#201O#186O#201O#206O#201O#206O#201O#206O#201!3O#206O#201O#206O#201O#148O#201O#148O#49O#148O#146O#49O#197O#201O#49O#197O#49O#197O#146O#49O#146O#49O#201O#49O#146O#79O#201O#79O#49O#201O#146!2O#49O#148!2O#147!2O#148O#52O#151O#65O#52O#151!2O#148O#151O#52O#147O#151O#147O#160O#52O#20O#160O#147O#65O#52O#20O#160O#65O#52!2O#151O#152O#148O#152O#151!2O#152O#151O#152!4O#156O#152O#155O#156!5O#99O#156O#99O#157!3O#128O#157O#125O#157O#125O#17O#56O#15!2O#229O#221O#235O#239O#225O#234O#227O#228!3O#132O#1!4O$#1!3_#76_#1_#76_#1!2_#76_#58_#5_#216!3_#1_#216_#1_#2_#1!5_#198_#100_#212_#60_#212!2_#122!3_#117_#192_#138_#209_#193_#170_#105_#166_#194_#123_#195_#123_#153!4_#151_#123_#153!2_#195!2_#167_#123_#153_#160_#153_#20_#186!3_#21_#197_#21!3_#197_#150!2_#173_#200!3_#202!2_#197_#202_#197!7_#206_#186_#197!3_#160!2_#197_#160!2_#201_#160_#206_#201_#160_#201_#160_#201_#160_#197_#201_#206_#197_#201!2_#197_#148_#201_#147_#148_#146_#197_#201_#148_#146_#147_#197_#146!2_#49_#146!2_#79_#146!2_#79_#210_#79_#49_#201_#146!2_#49_#201_#146_#147_#148_#147_#151_#148_#151_#52_#148_#151_#52_#160_#151_#65_#148_#65_#52_#147_#65_#147_#148_#52_#160_#52_#160_#52_#148!2_#151_#65_#148_#152_#151_#152_#151_#152!3_#156!3_#152_#155_#156!3_#152_#54_#99!3_#54_#99_#157!2_#128_#18_#128!2_#125!2_#17_#77_#15!2_#229_#10_#75_#235_#239_#6_#225_#226_#228!2_#132_#1!2_#76_#1_$-#1!3@#76@#88@#59@#1!4@#5@#2@#88@#132@#216@#1@#2@#198@#1!4@#76@#212!2@#59@#212@#60@#76@#122!4@#207@#138!2@#209@#109@#199@#166@#101@#194@#123!4@#153@#123@#153!2@#195!2@#194@#153@#123@#151@#123@#153@#20@#160@#20@#147@#149@#197@#149@#21@#197@#150!2@#197@#173@#197@#150@#200@#202@#200@#202!2@#197@#202@#197!2@#186@#197!2@#186@#197!2@#201@#160@#201@#160@#201@#160@#201@#160!2@#201@#186@#160!3@#201@#160@#201@#206@#186@#197@#206@#197@#160@#197@#201@#148@#146@#201@#147!3@#146@#201@#147@#49@#201@#49@#197@#146@#49@#201@#49@#146!2@#79@#49@#146!3@#49@#146@#147!3@#148@#147@#65@#148@#151!2@#148@#151!2@#52@#151@#52@#148!2@#151@#65@#148@#151@#65@#148@#52@#20@#148@#151!2@#152@#52@#151@#152@#151@#152@#151@#152@#151@#167@#156!2@#152@#155@#156@#99@#156@#54!2@#99!3@#54@#99!2@#162@#128!5@#125@#128@#17!3@#77@#15@#12@#229@#9@#75@#8@#239@#6@#225@#222@#3@#132@#1!4@$#1!3A#76A#1!2A#76A#1A#76A#1A#88A#2A#216A#2A#216A#2A#198A#2A#88A#1A#88A#1A#76A#198A#60A#198A#60A#1A#60A#122!3A#117!2A#192A#138A#141A#183A#170A#199A#166A#101A#123!4A#153A#151A#123A#194A#151A#123A#195A#194!2A#151A#123A#151A#153A#20A#160A#186!2A#149A#21A#186A#21A#197A#21A#197A#150A#197A#187A#197A#200A#202!3A#197!2A#202A#197!2A#186A#160A#197!2A#160A#186A#160A#197!2A#186A#160!5A#206A#201A#160A#201A#160!3A#201A#206A#197A#160A#201A#197!2A#148A#197A#147!2A#148A#146A#148A#147!2A#197A#148A#146A#197A#49A#146A#49A#146!2A#49A#146A#49A#146!2A#49A#146!2A#201A#147!4A#52A#147A#151A#52A#151A#152A#148A#151!6A#52A#148A#151A#148A#52A#151!6A#65A#52A#151A#152A#65A#52A#152!2A#156A#152A#156!2A#99A#161A#157A#99A#157A#99!2A#157!3A#99A#128A#162A#157A#125A#157A#125A#128A#125!2A#17A#56A#17!2A#191A#15A#61A#229A#221A#9A#235A#8A#239A#59A#132A#140A#58A#76A#1A#76A#1A$#1!3C#76C#1!2C#76C#88C#59C#1C#216C#2C#198C#216C#2C#198C#2C#88C#1C#2C#1!2C#212C#76C#1C#60C#1C#60C#212C#76C#122C#207C#122C#207C#115C#207C#138C#130C#62C#199C#105C#101C#171!2C#194C#123!6C#194C#123C#195C#19C#123C#151C#123C#151C#153!2C#20!2C#147C#186C#21C#186C#21C#150!2C#197C#150C#197C#150C#202!6C#197C#186C#197!4C#186C#197!2C#160C#197C#160!11C#197!2C#201C#159C#197!2C#160C#201C#197C#148C#197C#148C#146C#148C#146C#148C#146C#148C#146C#148C#146C#49C#197C#201C#147C#146C#49C#197C#146!6C#49C#201C#147!2C#148C#147!2C#160C#151C#148C#151C#148C#152C#148C#152C#151C#65C#148C#152C#65C#148C#152C#148C#152C#151C#148C#151!2C#65C#52C#152C#151C#152!2C#148C#53C#167C#152C#156!3C#99C#128C#161C#128!3C#156C#157!5C#128C#157C#125C#157C#128!2C#163C#125C#128C#56C#128C#17!2C#56C#77C#15C#61C#11C#221C#9C#57C#8C#239!3C#59!2C#1!2C#76C#1C$#1!3G#76G#1!2G#76G#88G#1G#2G#1G#216G#2!2G#198G#216G#1G#2!2G#198G#1!2G#198G#212G#198G#76G#60G#198G#212G#122!4G#207G#115G#192G#138G#209G#183G#109G#177G#89G#101!2G#194G#123!4G#151G#123G#194G#156G#123G#155G#123!2G#151G#123G#153G#20!2G#186!3G#197G#21G#197!2G#150!5G#197G#202G#200G#202!2G#197G#202!2G#197!5G#186G#160G#186G#160!2G#197G#160G#206G#160!3G#201G#160G#197!2G#201G#160!2G#197G#206G#201G#197!3G#160G#197G#147G#148G#146G#147!3G#146G#148G#146G#148G#146G#147G#146G#49G#197G#146G#49G#201G#49G#146!2G#49G#201G#147!3G#146G#148G#147G#65G#52G#148G#152G#151G#152G#148G#152G#148G#152G#148G#152G#148G#152G#151!6G#65G#52G#215G#151!2G#152G#151G#152G#167G#152!2G#156!3G#128G#161G#128G#164G#128!2G#156G#128G#157!6G#128G#125!2G#128G#17G#55G#163G#125!2G#17G#55G#125G#17G#77G#15G#61G#12G#9G#75G#235G#8!3G#57G#8G#76!2G#1!3G$#1!3O#76O#88O#59O#88O#59O#1!2O#88O#132O#216!2O#2!2O#198O#216O#198O#2O#198O#1O#212O#76O#212!3O#60O#212!2O#122!2O#207O#117O#207O#192!2O#138O#183O#109O#199O#89O#166!2O#101O#171O#195O#194O#123O#171O#194O#123!2O#155O#123O#155O#19O#123O#151O#153!2O#20!3O#186O#21O#20O#21O#149O#21O#150O#197O#173O#150!2O#200O#202!2O#200O#202O#197O#202O#197!2O#202O#186O#197!4O#186O#201O#160!9O#197O#160O#197!4O#160O#197O#160O#197O#148!2O#146O#147O#148O#146O#148O#146O#148O#146O#147O#146O#148O#146O#49O#197O#146O#49O#197O#146!2O#49O#201O#146O#147O#146O#147O#148O#147!2O#160O#210O#65O#148O#151!4O#152O#151!2O#152O#151!6O#65O#152O#148O#152O#151!2O#152O#151O#152O#151O#152!2O#156!2O#152O#99O#161O#128O#164O#128!2O#204O#128!3O#157O#128!3O#125O#128O#18O#128!2O#17O#164O#125!4O#163O#125O#77O#125O#77O#15O#61O#229O#221O#9O#235O#8O#239!2O#8!2O#76O#1O#76O#88O#59O$#1!3_#76_#1!2_#76_#1_#76_#1_#88_#216_#2_#216!2_#198_#2_#1_#2_#198_#1_#198_#1_#212!6_#122_#212_#122!2_#207_#117_#192_#217_#138_#183_#109_#93_#199_#89!2_#101_#171!2_#195_#194_#123!2_#155!2_#171_#155_#19_#123!3_#151_#153!2_#160_#186_#20_#147_#186_#21_#197_#21_#197_#150_#197_#173_#197_#200!2_#202!7_#197!3_#186_#197_#160_#186_#160!2_#197_#160!4_#197_#160_#197!2_#160_#197!2_#206_#197_#160_#197!3_#147!3_#197_#21_#148_#146_#148_#147_#148_#147_#148_#146!2_#197_#49_#197_#146!2_#49_#197_#146_#147_#148_#146_#147!2_#21_#147_#160_#52_#147_#151!3_#152_#151_#152_#151!5_#152_#151!3_#152_#151!2_#152_#151_#152_#151_#152!2_#151_#152!4_#155_#99_#128!4_#164!2_#128_#162_#128!3_#157!3_#125_#157_#55_#125_#128_#56_#128_#125!3_#17_#125!3_#77_#17_#62_#61_#10_#221_#9_#8_#239_#59_#239_#8!2_#1!3_#76_#1_$-#1!3@#76@#1!2@#76@#88@#59@#1@#5@#1@#216!4@#2@#198@#2@#198!2@#1@#198@#212!5@#122@#212@#122!2@#207@#122!2@#192@#120@#138@#193@#170@#16@#89!3@#101@#165@#171@#123@#64@#194@#19@#64@#19@#155!4@#19@#123!2@#153@#160@#20!3@#186!2@#21@#149@#150!2@#197@#150@#197@#187@#197@#200!5@#197@#202@#197@#202@#197!4@#202@#197@#186!2@#197@#186@#197!3@#160@#197@#160!2@#186@#197@#160@#197!5@#160@#147@#186@#147!6@#197@#147@#148@#146@#201@#147@#49@#197@#146@#49@#201@#197@#49@#197@#146@#147@#148@#146@#147@#160@#148@#147@#20@#151@#148@#152@#151!2@#152@#151@#152@#151@#152@#151@#152@#151!2@#152@#151!2@#152@#151!2@#152@#151@#156@#195@#156!3@#19@#156@#155@#156@#161@#128!2@#204@#164@#128@#164@#128!2@#162@#157@#128!6@#125@#163@#125!5@#17@#55@#77@#125!2@#77!2@#15@#61@#10!2@#75@#57@#239@#59!3@#7@#59@#1!2@#76@#88@$#1!3A#76A#1!2A#76A#1!3A#88A#216!6A#198!2A#2A#198A#100A#198!2A#212!5A#122A#212A#60A#207A#122!3A#117A#138A#193A#16A#105A#199A#105A#166A#89A#166A#64A#171A#123A#19A#64A#123A#64!6A#123A#151A#123A#65A#153A#20!2A#186A#197A#149A#197!3A#150A#200A#150A#200A#173A#200!4A#202A#200A#202!3A#197!3A#205A#197A#186A#197A#186A#160A#197A#186A#160A#197A#186A#197!2A#186A#197!3A#160A#197!2A#160A#197A#147A#160A#147A#160A#197A#147!2A#186A#147!3A#197A#147!2A#146A#197A#49A#197A#201A#147A#146A#148A#49A#197A#148A#147!5A#151A#148A#151!4A#152A#151A#152A#151A#152A#151A#152A#151A#152!2A#151A#152!2A#151A#152!2A#194A#152A#195A#156A#152!2A#156!2A#152A#99A#128A#54A#161A#128!2A#164!2A#128A#164A#128!5A#125A#128A#125!6A#163A#17A#55A#163A#125!3A#17!2A#77A#15A#61A#10A#221A#57!2A#239!2A#59!4A#76A#88A#59A#1A$#1!3C#76C#1!2C#76C#1!3C#88C#216!6C#2C#198!4C#122C#198C#212!2C#122C#212!2C#60!2C#122!2C#207C#122!2C#117C#130C#62C#105C#199C#89!5C#64!3C#171C#155C#64C#155C#64!7C#123C#151C#153!2C#20!3C#197C#21C#150C#197C#173C#197C#173C#197C#187C#200!5C#202C#200C#197C#202C#200C#197!8C#186!2C#197!2C#186C#197C#160C#197C#186C#197!7C#160C#197C#147!3C#197C#147!3C#197C#148C#147C#146C#148C#146C#49C#197C#49C#146!2C#201C#147C#197C#148C#146C#147C#160C#147C#160C#147C#151C#65C#148C#151!2C#152C#151C#152C#151C#152C#151C#152C#151C#19C#152!2C#19C#152C#19C#152C#19C#156C#151C#155C#156C#152C#155C#156C#152C#99C#161C#156C#128!3C#204C#128!2C#164C#128!3C#164C#128!2C#125C#128C#163C#125C#163C#128C#56C#128C#17C#55C#125!6C#77C#125C#77C#15C#61C#10C#57!3C#8C#239C#59!2C#6C#2C#76C#1!3C$#1!3G#76G#1!2G#76G#1G#76G#88!2G#216!4G#88G#1G#198!3G#100G#198!2G#122G#212!4G#60G#212G#60!3G#122!2G#114G#117G#104G#109G#199G#105G#89G#105G#89!4G#64!7G#89G#18!2G#64!2G#155G#123!2G#151G#153!2G#20G#186G#197!2G#21G#197G#150G#200G#197G#173G#200!10G#202G#200!2G#197G#205G#201G#202!2G#197G#200G#197G#186!2G#197G#186G#200G#186G#201G#186G#197G#202G#197!5G#147G#197!3G#147G#197!3G#147G#146G#147G#146G#49G#197!2G#146G#197G#49G#148G#146G#148G#146G#148!2G#147!3G#20G#160G#147G#151G#148G#152G#151!2G#152G#151G#152G#151G#156G#152G#155G#152G#155G#156G#152G#155G#152G#156G#152G#156G#152G#156G#152G#155G#156G#99!2G#161G#157G#128G#156G#161G#128!2G#164G#128!2G#164G#128!4G#163G#128G#125G#128G#56G#17!4G#55G#163G#125!3G#128G#125!3G#17G#77G#15G#61G#229G#75!2G#235G#8G#239G#59G#132!2G#59G#88G#76!2G#1G$#1!3O#76O#1!2O#76O#88O#59O#1O#88O#216!3O#88O#2O#198O#1!2O#198!2O#122O#198O#212!4O#60O#212O#60O#212O#60!2O#122!3O#117O#193O#93O#89O#166O#89!2O#105O#63O#89!2O#166O#64!4O#18O#89O#18O#89O#18O#89O#64!3O#123!2O#151O#153O#160O#20O#186O#197O#150O#197O#173O#197O#173O#197O#200!4O#201O#200!4O#202O#200!2O#202O#200!2O#197O#202!2O#197!2O#200!2O#197O#200O#197O#200O#197O#202O#197O#201O#202O#197O#200O#197!2O#21O#197O#21O#147O#197O#21O#148O#146!5O#147O#146O#49O#197O#49O#197!2O#146O#49O#197O#201O#147O#197O#147!2O#160O#147O#151O#52O#160O#151!3O#156O#151O#156O#151O#155O#152O#156O#152O#156!2O#152O#155O#156!2O#152O#155O#152O#155O#19O#156!2O#99!2O#161O#54O#161O#54O#128!8O#164O#128!4O#56O#128O#56O#125O#56O#55O#56O#55O#163O#125!9O#77!2O#61O#10O#75O#57O#235O#8O#239O#59O#132O#225O#59O#1!4O$#1!3_#76_#1!2_#76_#1!3_#88_#216_#88!2_#1_#88_#198_#2_#198_#100_#198_#100_#198_#212!3_#60_#212!2_#60!5_#7_#122_#217_#121_#199_#166_#89_#166_#89_#86_#89_#63_#89!2_#18_#64_#165_#64_#89_#18_#89!3_#18_#166_#64_#155_#19_#123!2_#151_#153_#20_#186!2_#197_#150_#197_#150_#200_#173_#200!5_#94_#200!4_#201_#202_#200!2_#197!2_#205_#201_#202_#187_#197_#200!2_#197_#200_#197_#202_#200!2_#197_#200!3_#197_#146_#197_#146_#197_#146_#147_#146!3_#147_#146_#147_#146!3_#197_#49_#197_#146_#49_#197_#148_#146_#147!4_#20_#160_#147_#20_#151_#65_#151_#152_#151_#152_#151_#156_#152!2_#194_#156_#155_#152_#155_#156!2_#155_#156_#155_#99_#155_#156!2_#155_#156_#99_#161_#157_#128!2_#161_#128_#54_#128_#54_#204_#128!5_#164_#128_#56_#128_#56_#125_#56_#17_#56_#17!2_#55_#125!2_#128_#125!2_#128_#125!2_#86_#77!2_#61_#229_#75!2_#235_#8_#239_#59!2_#132_#2_#76_#1_#76_#88_$-#1!3@#76@#1!2@#76@#1!3@#58@#88!2@#1@#88@#198@#1@#198!3@#100@#212!3@#60@#212!3@#60@#212!2@#60@#207@#60@#100@#207@#138@#109@#89@#166@#101@#18!2@#89@#63@#89@#63@#18@#89@#18!2@#89!3@#86@#63@#86@#89!2@#64!3@#155@#123!2@#151@#153@#20@#197@#21@#197@#150@#200@#197@#200!5@#94@#200!8@#197@#200!2@#201@#205@#197@#202@#197@#200!3@#197@#200!3@#201@#187@#200@#197@#200@#197@#146!13@#49@#146@#147@#197@#49@#197!2@#147@#146@#148@#146@#147!2@#160@#147!2@#151@#52@#20@#148@#152@#151@#152@#151@#155@#152@#155@#152@#156@#152@#155@#156!2@#155@#156@#99@#155@#156@#99@#156@#155@#156@#99!2@#161@#157@#128@#54@#128@#54@#128@#162@#128@#204@#162@#128@#164@#128@#164@#128!2@#56@#128@#56@#125@#56!3@#17@#55@#56@#125!4@#128@#125!6@#77@#15@#229@#75@#235!2@#8@#57@#59!2@#132@#59@#88@#76@#1@#59@$#1!3A#76A#1!2A#76A#1A#76A#88!3A#2A#198A#1A#198!3A#100A#212!4A#198A#60A#212!2A#60A#212A#60!4A#207A#212A#207A#214A#16A#89A#101A#171A#166!2A#18A#89A#63A#89A#63A#18A#89A#18!2A#89A#63!5A#89!2A#64!2A#155A#123!2A#151A#153A#20!2A#186A#197A#150A#200A#173A#197A#200!6A#94A#200!8A#197A#205A#201A#205A#200!2A#187A#197A#187A#200!9A#146A#79A#146!15A#147A#197A#147A#146A#148A#146!2A#148!2A#197A#147A#160A#20A#160A#151!5A#19A#152A#156A#152A#156A#155A#156!3A#155A#156A#99!2A#161A#99!2A#161A#99!4A#161A#157A#128A#161A#128!2A#162A#128A#54A#204A#162A#128!5A#164A#128A#17A#55A#163A#55A#163A#56A#17A#56!2A#125!3A#128A#125!2A#128A#125A#162A#125A#89A#125A#77A#61A#229A#75A#235A#57A#8A#239!2A#59A#132A#59A#1A#76A#88A#1A$#1!3C#76C#1!2C#76C#88C#59C#1C#88C#216C#88C#198C#1C#198C#7C#198!2C#212!7C#60C#212!2C#60C#212C#60!2C#212C#120C#207C#130C#124C#166C#101!2C#166C#18C#166C#18C#89!7C#63!2C#77C#16C#158C#93C#63C#89C#18C#64!2C#155C#123!2C#151C#153C#186C#197C#21C#197!2C#150C#200!4C#94C#200C#94C#201C#200C#94C#200!9C#94C#200!11C#201C#200C#201C#173C#146C#173C#146!7C#49C#146C#49C#146!2C#49C#146!2C#147C#146C#49C#146C#201C#147!2C#197C#147C#20C#148!2C#151C#20C#152C#151C#156C#151C#156!2C#152C#155C#152C#156C#155C#156C#99!2C#161C#128C#156C#128C#161C#99C#161C#99C#161!2C#157C#128!5C#161C#128C#204C#162!2C#125C#128!3C#164C#128C#17C#164C#55C#163C#55C#56!4C#55C#56C#125C#128C#56C#128C#125C#128C#125C#162C#125!4C#17C#15C#229C#75C#235!2C#8C#57C#8C#7!2C#59C#1!2C#76C#1C$#1!3G#76G#1!2G#76G#1!3G#88G#1!2G#198G#1G#198!2G#100G#198!3G#212!4G#60G#212!2G#60G#212G#60!3G#207G#100G#207G#104G#16G#166G#101!2G#64!3G#166G#89G#86G#89G#63G#89G#18G#89!2G#63G#77G#16!2G#158G#93G#86G#89G#165G#64!2G#155G#123G#151G#153G#20G#186G#197G#150G#197G#200!3G#187G#200!3G#94G#200G#94G#200!2G#94G#200!13G#94G#200G#94G#200!2G#94G#200G#173!2G#146G#173G#146G#79G#146!12G#147G#146G#147G#197!2G#147!3G#197G#148G#147G#148G#151G#20G#148G#152G#151!3G#155G#156G#194G#156G#155!2G#156!2G#99G#161G#156G#99G#161G#99G#161G#157G#128G#99G#161G#157!3G#99G#161G#128G#161G#128!2G#164G#162G#128!3G#164G#128G#164G#128G#55G#164!2G#163G#55G#163G#56G#164G#56G#17G#56G#128G#56G#125G#128G#125G#162G#125!3G#157G#125G#99G#125G#93G#15G#61G#75G#235!2G#8G#235G#8G#7!2G#76G#1G#76G#88G#59G$#1!3O#76O#1!2O#76O#1!3O#88O#216O#1O#198!5O#100O#198O#100O#212!3O#60O#212!2O#60O#212O#60!3O#212!2O#122O#207O#104O#16O#101O#166O#101O#64!5O#89O#162O#89O#63O#18O#89O#93O#63O#158O#16O#135O#170O#158O#63O#89!2O#18O#64O#155!2O#123O#151O#153O#186!2O#197O#150O#197O#150O#200!4O#94O#201O#200!3O#94O#200!4O#94O#200!4O#94O#200O#94O#200!3O#94O#201O#200!4O#201O#173!2O#146O#79O#173O#146O#79!2O#146!2O#79O#49O#146!2O#49O#146!3O#147O#146O#147O#146O#147O#197O#147O#21O#52O#20O#147O#151!4O#195O#156!5O#155O#156!2O#99!2O#161O#156O#128O#156O#128O#161O#157!2O#99O#128O#99O#128O#99O#128O#161O#128!5O#162O#125O#128!2O#164O#128O#164O#55O#163O#164O#128O#56O#128O#56O#163O#55O#56!2O#55O#56O#55O#17O#128O#125O#128O#125O#18O#128O#125O#18O#125!3O#17O#15O#61O#75O#235!2O#8!3O#57O#7O#59O#1!2O#76O#1O$#1!3_#76_#1!2_#76_#1!4_#216_#88_#1_#198_#7_#198_#100_#198_#100_#212!5_#60_#212!2_#60_#212_#60!2_#207_#212_#100_#217_#104_#16_#101!2_#166_#64_#171_#194_#64_#165_#89!2_#63_#89_#18_#89_#18_#105_#158_#170_#14_#170_#62_#56_#63_#89!2_#18_#165_#19_#123_#151_#153_#20_#186!2_#197_#21_#197_#200!4_#94_#200_#187_#94_#200!3_#94_#200!3_#94_#200_#94_#200_#187_#94_#200_#94_#200!3_#187_#200_#94_#200!2_#94_#173_#79_#173!2_#146_#79_#173_#146_#79_#146!7_#147_#146_#147_#146_#147_#21_#147!3_#160_#147_#151_#160_#151_#65_#151_#152_#156_#195_#155!3_#99_#161_#157_#99_#161_#128_#156_#99_#161_#157_#99_#128!2_#161_#128_#161_#128_#161_#128_#161_#128_#161_#128_#161_#162!2_#128!2_#164_#125_#164_#163_#128_#163_#128_#56_#128_#56_#55_#56_#55_#56_#163_#55_#163_#17_#55_#163_#55_#125_#128_#125_#128!2_#125_#128!3_#125_#17_#15_#61_#75_#235!2_#8_#235_#8!2_#59_#76!2_#88_#59_#1_$-#1!3@#76@#1!2@#76@#1@#76@#88!3@#198@#1@#198@#1@#198@#100@#198@#212!7@#60@#212@#60@#212@#207@#212@#60@#212@#207!2@#104@#105@#166@#101!2@#64!2@#194@#171@#194@#64@#89!5@#63!2@#158@#135@#14@#179@#170@#16@#158@#86@#63@#18!2@#64@#155@#123@#151@#123@#20@#186!3@#197!2@#173@#200!10@#187@#94@#200!2@#187@#200@#94@#200!2@#187@#200@#94@#200@#94@#200!2@#201@#94@#200!2@#79@#173@#146@#79@#173!2@#22!2@#146!4@#49@#146!2@#147@#146@#147@#146@#147@#197@#147@#160@#147@#20@#52@#20@#151@#65@#151@#152@#151@#155@#156!2@#155@#99@#161@#128@#161@#128!2@#99@#161@#128@#161@#128@#161@#128@#161@#128!2@#161@#128@#161@#128@#161@#128!2@#161@#162@#128!3@#125@#128@#163@#128@#163@#55@#163@#55@#163@#55@#56@#128@#56@#164@#163@#56@#55@#56!2@#128@#56@#128@#125@#128@#125@#157@#125@#54@#125@#54@#125!2@#101@#17@#191@#61@#75!2@#239@#75@#8!3@#59@#100@#59@#88@#1!2@$#1!3A#76A#1!2A#76A#88A#59A#1A#88A#1!2A#198A#1A#198!3A#100A#198A#212!5A#207A#212!2A#60!2A#212A#207A#60A#122A#100A#207A#104A#16A#166A#101A#64!2A#171A#194!2A#155A#64A#18A#89A#86A#89!2A#63!2A#158A#170A#179A#61A#179A#170A#16A#158A#63A#86A#89A#165A#19!2A#123A#151A#123A#153A#20A#186A#197!2A#150A#200!2A#187A#200A#187A#94A#200!2A#187A#94A#200!2A#187A#94A#200!3A#187A#94A#200A#94A#200A#187A#200!2A#94A#200!2A#201A#173A#200A#173!2A#146A#173A#146A#79A#22!2A#146!5A#147A#146!2A#147A#21A#147!3A#20A#160A#147A#160A#151!4A#152A#155A#152A#155A#99A#161A#128A#161A#162A#128!2A#161A#162A#128!5A#161A#128A#161A#128!2A#161A#128!2A#157A#128A#99A#162A#128A#18A#128A#162A#128A#163A#128A#56A#128A#56A#164A#56A#128A#56A#128A#56A#125A#56A#55A#163A#56A#163A#128A#56A#128A#125A#128!5A#125A#54A#125A#128!2A#125A#17A#191A#61A#75!3A#8!2A#59A#8A#59A#100A#1!2A#76A#1A$#1!3C#76C#1!2C#76C#1!4C#216C#198C#1C#198C#1!2C#198!3C#212!7C#207C#212!2C#60C#212C#207C#212C#120C#207C#104C#105C#101C#171C#166C#64!2C#155C#123C#155C#64!2C#89!2C#86C#63!3C#158C#135C#179C#127!2C#61C#170C#158C#16C#63C#18!2C#64C#155C#171C#194C#151C#123C#160!2C#186!2C#197!3C#187C#200!3C#94C#200!3C#187C#200!3C#187C#94C#200!5C#94C#200!6C#173!2C#146C#79C#173C#146C#79C#173C#22C#173C#146C#79C#147C#146!4C#147C#146!2C#148C#197C#147C#20C#160C#52C#20C#151!3C#152C#151C#155C#156C#155C#161C#18C#164C#162C#128C#162!2C#128!2C#162!2C#128C#161C#162C#128C#162C#157C#128C#161C#128!2C#161C#128C#99C#161C#162C#157C#18C#128!3C#125C#128C#163C#128C#56C#128C#56C#164C#56C#128C#56C#128C#56C#164C#56!2C#128C#56C#17C#55C#125C#128C#125C#128C#125C#128!3C#125C#54C#125!2C#128C#17C#191C#61C#75!3C#8!4C#59!2C#1!2C#76C#88C$#1!3G#76G#1!2G#76G#1!3G#88G#198G#1!2G#198G#1G#198G#1G#198G#100G#198G#212!5G#207G#198G#212G#207G#212G#60G#212G#207G#122G#207G#104G#105G#101G#171G#64G#166G#64G#155G#64G#123G#64!2G#89!2G#18G#63!2G#93G#16G#179!2G#181G#183!2G#61G#170G#158G#63G#162G#89G#18G#64G#161G#64G#194!2G#151G#153G#160G#186G#197!2G#150G#200!2G#187G#200!3G#187G#200!2G#94G#200!4G#94G#200G#187G#94G#200!2G#187G#200G#94G#200!2G#201G#173!4G#146G#79G#173G#22G#173G#146G#79G#21G#146!2G#147G#146G#147G#146G#147G#146G#147G#21G#20G#160G#148G#147G#151!3G#152G#123G#156G#152G#155G#99G#162G#128G#162G#128G#163G#128G#56G#128G#163G#128G#164G#162G#125G#162!2G#125G#128G#161G#162G#157G#128G#162G#157G#162G#18G#128G#18G#128!4G#163G#164G#125G#163!2G#56G#128G#56G#55G#56G#17G#55G#56G#17G#164G#56G#17G#55G#163G#128G#163G#128!6G#54G#125G#54G#128G#125!3G#77G#61G#75!3G#239G#75G#8!3G#59G#1!3G#59G$#1!3O#76O#1!2O#76O#1O#76O#1!2O#198O#1O#198O#1!3O#198!3O#100O#212!6O#207O#212!3O#60O#212O#60O#100O#217O#135O#105O#101O#171O#166O#18O#64!2O#155O#171O#155O#64O#18!2O#63O#89O#63O#158O#16O#14O#127O#181O#141O#229O#127O#179O#170O#158O#177O#89O#86O#89O#18O#165O#155O#194O#123O#195O#153O#160O#20O#186O#197!2O#200!2O#187O#200!2O#94O#200!3O#187O#200O#94O#200!2O#187O#200!2O#187O#200!6O#173!3O#146O#79O#173!2O#146O#79O#146O#22O#146!4O#147O#146!2O#147O#146O#147!2O#160O#147O#52O#160O#151!3O#152O#195O#156!2O#155O#161!2O#162!2O#128O#163!3O#164O#56O#163O#164O#56O#128O#164O#128!2O#162O#18O#128!2O#162!2O#18O#128O#162O#128O#157O#162O#125O#128O#164O#128!2O#163O#164O#55O#163O#55O#56O#163O#125O#55O#163O#56O#164O#56O#17O#55O#56O#164O#55O#163O#128O#55O#128!7O#125O#99O#128O#125!2O#77O#61O#75!3O#8!4O#59O#100O#1!3O#76O$#1!3_#76_#1!2_#76_#88_#59_#1_#198_#1_#198_#2_#198_#216_#198_#1_#198!3_#212!5_#207_#198_#212!3_#60_#212_#60_#100_#214_#104_#105_#101!2_#166_#18_#166_#64_#155_#123_#155_#64!2_#18!2_#89_#63_#93_#170_#14_#61_#229_#141_#221_#181_#183_#14_#158_#63!2_#86!2_#162_#89_#64_#155_#194_#195!3_#160_#186_#197!3_#150_#200!3_#187_#200!2_#187_#200_#187_#200_#187_#200!2_#94_#200!2_#94_#200!5_#79_#173!4_#146!2_#173_#146_#22_#146!6_#147_#146_#21_#147!2_#20_#147_#151_#160_#65_#152_#151_#152_#195_#156_#155!2_#161_#162_#128!2_#163_#56_#163_#56!6_#163_#56_#163!2_#128!3_#164_#162_#18_#128_#162_#125_#157_#18_#128_#157_#162!2_#128_#163_#128_#56_#128_#56_#163_#56_#164_#55_#56_#163_#55_#163_#56_#55_#163_#56_#128_#56_#128_#55_#125_#128!6_#54_#128!5_#125_#77_#61_#75!3_#8_#75_#8!2_#59_#100_#59_#1!3_$-#1!3@#76@#1!2@#76@#1!4@#198@#1@#198!2@#1@#198@#1@#198@#100@#198@#100@#212!7@#207@#212@#60@#212@#60@#100@#214@#119@#105@#101!2@#166@#18!2@#64@#155@#64@#123@#64!2@#166@#18@#89@#63!2@#158@#170@#127@#183@#221@#176@#221@#181@#179@#170@#62@#56@#16@#177@#63@#86@#165@#155@#194!2@#195@#194@#167@#160@#186!2@#150@#197!2@#202!3@#200!4@#187@#200!2@#187@#94@#200!2@#94@#200!8@#146@#79@#146@#173@#146!2@#173@#146!5@#147@#21@#147@#197@#147@#160@#147@#160@#151@#20@#152@#151!2@#156!2@#155@#156@#99@#161@#162@#128@#163!2@#56!2@#168@#169!2@#168@#169@#168@#169@#56!3@#164@#163@#164@#162@#128!4@#18@#157@#162@#128@#162@#125@#157@#128@#125@#128@#163@#128@#56@#163@#55@#163@#56!2@#164@#56!2@#55@#163@#56@#55@#163@#55@#163@#128@#125@#128!7@#54@#128!4@#125!2@#77@#61@#75!3@#239@#8!3@#59@#100@#88@#1!2@#76@$#1!3A#76A#1!2A#76A#1!3A#198A#1A#198!3A#1A#198A#1A#198!3A#100A#212!9A#60!2A#212A#207!2A#135A#105A#166A#101A#166A#18A#166A#64!2A#155A#123A#155A#64!2A#101A#18A#89A#63A#93A#170A#14A#183A#141A#176A#115A#221A#181A#61A#170A#158A#168A#16A#158A#162A#89A#64A#161A#194A#155A#194A#153!2A#160A#186!2A#197!3A#202!3A#200!4A#187A#94A#200!3A#94A#200A#187A#94A#200A#94A#200A#94A#200A#79A#200A#197A#173A#197A#146!4A#21A#146A#147A#21A#147A#197A#147A#20A#147A#20A#160A#151A#65A#148A#167A#152A#156A#123A#156A#155A#161A#162A#128!2A#163A#56!2A#168A#169A#103A#174A#175A#103!2A#169!3A#56!2A#163A#164A#125A#162A#125A#162A#125A#162A#128!3A#18A#125A#157A#128A#163A#128A#163A#164A#56A#125A#163A#56A#164A#55A#56A#55A#163A#98A#56A#164A#56A#164A#56A#128A#55A#163A#128!6A#54A#128!2A#54A#125A#54A#128A#99A#17A#77A#61A#221A#75A#235A#8A#75A#8!2A#60A#59A#1!4A$#1!3C#76C#1!2C#76C#1C#76C#88C#76C#198!2C#1C#198!2C#1C#198C#1C#198C#100C#198C#212!9C#60C#212C#60C#122C#207C#119C#105C#101C#166C#101C#18!2C#64!2C#155C#64C#123!2C#64!3C#166C#89C#93C#77C#62C#61C#181C#115C#176!2C#141C#183C#61C#170!3C#158C#177C#89C#165C#64C#165C#194C#161C#194C#195C#153C#160C#20C#186!3C#197C#202!2C#187!2C#200!5C#187C#200C#187C#200!6C#187C#200!3C#146C#197C#21C#197!3C#21C#147!2C#197C#147C#20C#147C#160C#147C#160C#151C#160C#151!2C#156C#152C#194C#156C#155C#99C#161C#162C#128C#163!3C#56C#169C#175!4C#103C#175!2C#231C#175C#169!2C#56C#163!2C#162C#128C#86C#162!2C#128!2C#86C#162C#128C#162C#128C#163C#128C#163C#55C#163C#164C#56C#55C#163C#56C#163C#56C#163C#98C#56C#164C#56C#55C#56C#164C#56C#128!2C#55C#128!5C#54C#128C#54C#128C#54C#128!2C#125!2C#77C#61C#221C#75C#235C#239C#8!3C#59C#100C#1C#59C#1C#76C$#1!3G#76G#1!2G#76G#88G#59G#1G#212G#198G#212G#198G#100G#198!2G#1G#198!4G#100G#198G#212!7G#60!2G#100G#122G#207G#13G#124G#101!2G#166G#18G#166G#64G#155G#64G#123G#19!2G#123G#64!3G#18G#89G#93G#158G#170G#127G#221G#176!2G#221G#181G#183G#61G#14G#170G#158G#63G#162G#89G#165!2G#64G#165G#194!2G#151G#153G#160G#186!3G#150G#186G#202!4G#200!2G#187G#200!5G#94G#200!7G#197G#21G#197G#147!2G#20G#147G#160G#20G#160G#147G#160G#20G#160G#20G#160G#151G#20G#151!2G#152G#195G#156!2G#155G#161G#128G#162G#18G#128G#163G#56G#168G#169G#174G#175G#103G#231G#180!5G#103G#175G#169G#56!2G#164G#125G#162G#128G#125G#162G#125G#162G#128!2G#162G#125G#128G#125G#164G#163!2G#55G#163!2G#56!2G#98G#56G#98G#56!2G#98G#56!2G#164G#56G#55G#128G#55G#163G#128!4G#54G#128G#54!2G#128!2G#54G#128!2G#99G#17G#15G#61G#75G#235!2G#239G#8!4G#59G#1!3G#76G$#1!3O#76O#1!2O#76O#1!3O#212O#198O#76O#198!3O#1O#198O#1!2O#198!2O#120O#198!2O#212!7O#60O#212O#122O#60O#13O#124O#89O#101O#166O#18O#166O#64!2O#194O#19O#123O#19O#123!2O#64!2O#166O#18O#89O#93O#62O#14O#183O#115O#176!2O#141O#181O#180O#179O#170O#62O#158O#177O#89!3O#18O#165O#155!2O#194O#151O#123O#153O#186!3O#197O#186O#202!3O#200O#187O#202O#200!9O#187O#200!2O#197!3O#147O#160!3O#20O#160!2O#20O#151O#160O#151O#160O#151O#20O#151!2O#152O#195O#156O#155!3O#161O#128O#161O#128O#163!2O#56!2O#169O#174O#103O#180O#184O#180O#184O#180O#184O#180!3O#175O#169O#56O#163!2O#162O#125O#162O#128O#125O#162O#128O#163O#128O#125O#164O#125O#164O#125O#164O#163O#56!2O#55O#163O#56!4O#98O#56O#98O#56O#55O#56O#128O#56O#164O#128!6O#54O#55O#54O#128O#54O#128O#54O#128!2O#125!2O#77O#61O#75O#235O#59O#75O#8!2O#59O#8O#59O#1!4O$#1!3_#76_#1!2_#76_#1_#59_#1_#198_#212_#198_#212_#198_#7_#198_#1_#198!2_#1_#198!2_#120_#198_#212!2_#198_#212_#198_#212!2_#60_#212_#122_#60_#104_#109_#101!3_#166_#18_#64_#155_#123_#155_#123_#19_#123_#19_#123_#64!2_#166_#18_#63!2_#170_#61_#181_#10_#176!2_#141_#183_#127_#14_#158!2_#16_#63_#86!2_#162_#89_#165!2_#194!2_#123_#153!2_#186!2_#149_#197_#186_#197_#202!4_#200_#197_#187_#200!8_#197_#21_#197_#20_#160!2_#20_#151!11_#195!2_#156_#194_#156_#155_#161!2_#162!2_#128_#163_#164_#163_#56_#158_#174_#175_#180_#181_#180_#232!2_#184!3_#180!2_#103_#175_#56!2_#128_#125_#128_#125_#164_#162_#125_#128_#125_#164_#162_#125_#164_#125_#163_#164_#56_#164_#56_#163_#56_#164_#56!2_#98_#56_#98_#56_#163_#56_#55_#56_#55_#125_#55_#128_#55_#128!2_#54_#128_#54!2_#55_#54!2_#128_#54_#128_#55_#17_#15_#61_#75_#235!3_#59_#8!2_#60_#100_#1!2_#76_#1_$-#1!3@#76@#1!2@#76@#88@#1@#76@#212@#1@#212@#198@#212@#198!2@#1@#198@#1@#198@#2@#198!2@#212@#120@#198@#120@#198@#212!2@#60!2@#122@#212@#9@#104@#124@#101!2@#166@#18@#64!2@#194!2@#123@#19@#123!4@#64!3@#101@#166@#86@#93@#170@#127@#181@#141@#10@#141@#181@#180@#179@#170!2@#158@#16!2@#177@#63@#162@#89@#165@#64@#155@#194@#151@#123@#153@#186!5@#197@#202!4@#197@#187@#202@#200@#197@#187@#202@#197@#200@#197!3@#147@#160@#151!2@#195!4@#156@#151@#194@#151@#123@#156@#151@#194@#156@#195@#156@#194@#155@#161@#162!2@#125@#162@#125@#163!2@#56@#158@#174@#175!2@#180@#184@#232!6@#180!3@#169@#17@#163@#164@#86!2@#162@#125@#86@#164@#86@#162@#125@#163@#128@#163@#125@#164@#56@#128@#56@#55@#56!5@#98@#56@#98@#56@#55@#163@#56@#128@#56@#128!6@#54@#128@#55@#54!2@#204@#54@#128@#54@#55@#128@#125@#15@#184@#75@#59@#224@#59@#239@#8!2@#59!2@#1!4@$#1!3A#76A#1!2A#76!2A#1!2A#198A#212A#198A#76A#198!2A#1A#198A#1A#198A#1A#198A#120A#198!5A#212!3A#60!2A#122!2A#60A#11A#109A#105A#101A#64A#166A#64A#165A#194A#19A#123A#19A#123!6A#64!3A#166A#89A#158A#170A#127A#141A#213A#141!2A#183A#127A#179A#135A#170!2A#168A#16!2A#177A#89!2A#165A#64A#171A#194A#123A#153!2A#20A#186!5A#197A#186A#202!3A#197A#202!2A#197A#202A#197!2A#150A#197A#186A#20A#151A#123A#195A#161A#195A#161A#155!5A#156A#194A#156A#194A#156A#194A#156A#155A#18A#162A#18A#125A#162A#125A#163!2A#56A#158A#174A#175!2A#231A#184!2A#232!7A#180A#175A#56!2A#164A#125A#162A#125A#86A#164A#162A#125!3A#164A#125A#163A#128A#163A#17A#55A#56A#163A#56A#163A#98A#56!2A#98A#168A#56!2A#55A#56A#164A#56A#128!2A#55A#128!5A#54A#55A#161A#54A#204A#55A#54A#128A#55A#54A#125A#17A#15A#184A#75A#235A#224A#235A#59!2A#235A#8A#100A#59A#1!2A#76A$#1!3C#76C#1!3C#76C#88C#76C#88C#212C#1C#198C#212C#1C#198C#1C#198C#1C#198!4C#120C#198C#212C#120C#198C#212!2C#60!3C#122C#60C#108C#121C#105C#89C#101C#18C#64!2C#155C#123C#155C#123!2C#19C#123!5C#64!3C#166C#89C#16C#170C#61C#181C#141!2C#181C#183C#179!3C#178C#170C#16C#158C#177C#86C#162C#89!2C#165C#64C#194!2C#151C#123C#153!2C#186!4C#197C#186C#197C#186C#197!9C#20C#160C#195!2C#161C#156C#161!3C#155C#161C#99C#161C#155!4C#156C#194C#155C#165C#161C#162C#125C#163!2C#77C#163C#56C#158C#174!2C#175C#231C#184!2C#232!2C#233!2C#232!3C#180!2C#103C#56C#163C#86C#162C#125C#162C#128C#125C#86C#164C#162C#125C#163C#128C#163C#56C#128C#56C#163C#56C#55C#163C#56!6C#98C#56!2C#55C#163C#128C#55C#128!5C#54C#128C#54!2C#55C#54C#55C#54C#55C#54C#128!2C#55C#17C#15C#221C#75C#224!2C#235C#59C#235C#8C#59!2C#1!3C#76C$#1!3G#76G#1G#76G#88G#59G#1G#76G#1G#198!3G#1G#198!2G#1G#198!2G#1G#198G#2G#198!2G#100G#198!2G#120G#212G#60!4G#122G#60G#9G#119G#105G#89G#101G#166G#18G#64!2G#155G#123G#155G#123!9G#64!2G#166G#86G#16G#170G#183G#141G#221G#141G#181G#183!2G#179!3G#170G#158G#16G#177!3G#89!2G#18G#165G#64G#171G#123G#151G#123G#153!2G#160G#186!5G#197G#186!2G#197G#186G#150G#186!3G#160G#151G#194G#156G#161G#165G#161G#18G#161G#18!2G#162G#18G#161G#18G#161!2G#155!3G#18G#162G#86!2G#163G#56!3G#158G#169G#174G#180!2G#184!2G#221G#232G#233G#232G#233!2G#232!2G#184G#103!2G#77G#128G#125G#128G#125!2G#86G#164G#162G#125!2G#164G#125G#163G#164G#56!2G#128G#56G#163G#56!2G#55G#56!3G#98G#56!2G#55G#56G#164G#55G#163G#164G#128!5G#53G#157G#128G#54!4G#55G#54G#55G#128G#54G#125G#77G#231G#221G#75G#224G#59G#235G#239G#8G#59G#8G#1!5G$#1!3O#76O#88O#59O#1!3O#88O#1O#198!2O#1O#198!2O#1O#198O#1O#198O#1O#198!2O#100O#198O#100O#198O#212!4O#60!3O#122!2O#60O#104O#16O#89O#166O#18O#166O#165O#155O#64O#194O#123O#19O#123O#19O#123!7O#64!2O#89O#162O#16O#179O#183O#213!2O#141!2O#183!3O#179!2O#170O#16!2O#63O#177O#56O#177!2O#89!2O#64!2O#194!2O#151O#153O#167O#159O#160O#186!5O#197O#186!3O#197O#20!2O#151O#123O#156O#194O#165O#18O#162!2O#164!2O#162O#18O#164O#162!2O#18!7O#86O#77O#56O#158O#168O#170O#14O#174O#180O#181O#184O#221O#232O#176O#233!5O#232!2O#184O#231O#169O#163!2O#128O#125O#162O#128O#125O#162O#125O#128O#163O#125O#164O#163O#55O#163O#125O#56O#17O#55O#56!6O#98O#56!2O#98!2O#56O#164O#128!5O#54O#157O#128O#54!2O#128O#54O#164O#54O#204O#55O#54O#55!2O#125O#191O#61O#75O#233O#224O#235!2O#59O#8!2O#59O#100O#1!3O#76O$#1!3_#76_#1!2_#76_#1_#76!2_#1_#198_#212_#198_#1_#198_#100_#198!2_#1_#198!4_#100_#198_#212_#198_#212!2_#60_#212_#60!3_#122_#60_#104_#109_#105_#166_#18_#166_#64!2_#155_#123_#155_#123!2_#151_#123!6_#64_#123_#64_#171_#166_#63_#168_#127_#141_#176!3_#141!3_#183!2_#179_#170!3_#16_#158_#93_#63!2_#162_#89_#165_#64_#194!3_#153_#195_#167_#153_#167_#153_#160_#186_#160_#20!3_#160!2_#151_#123_#194_#165_#162!2_#86_#163_#86_#163_#162_#63_#163_#162_#86!3_#164_#18_#162_#18!2_#86!2_#56_#168_#170_#14_#103_#175_#61!2_#184_#221!2_#233!7_#232_#184_#180_#103_#158_#163_#125_#86_#162_#125_#86_#128_#163_#125_#163_#128_#163!2_#55_#163!2_#56_#55_#56!2_#163_#56!5_#98_#56!2_#98_#164_#128_#55_#164_#128_#125_#54_#157_#128_#53_#157!2_#54!2_#55_#54_#55_#54_#55_#128!2_#125!2_#191_#184_#221_#224!2_#59_#235_#59_#8_#59_#8_#59_#1!2_#76_#1_$-#1!3@#76@#1!2@#76@#88@#59@#88@#212@#1@#198@#1@#198!3@#100@#198!2@#1!2@#198!2@#100@#198@#212!5@#60!5@#122@#118@#62@#199@#89@#166@#18@#64!3@#155@#123@#19@#123@#64@#123!5@#159@#123!3@#171@#64@#89@#77@#178@#181@#10@#176!3@#213@#141!2@#229@#183!2@#179@#135@#170@#16@#158@#16@#63!2@#177@#89@#18@#165!2@#155@#194@#195@#194@#151@#123@#153!2@#151@#153@#160!2@#151@#153@#123!2@#155@#161@#18@#162@#63@#163@#177@#168@#56@#158@#163!2@#177@#163!2@#86@#163@#86@#162@#86!3@#56@#158!2@#14@#103@#61!2@#175@#184!2@#232@#233!2@#211!2@#233!3@#232!2@#180@#231@#169@#17@#56@#125@#86@#125@#162@#125!2@#162@#125@#128@#56@#128@#163!2@#56@#55@#163@#17@#56!7@#169@#56!3@#55@#56@#128@#164@#128!2@#157@#128@#53@#128@#54!7@#55!2@#54@#55@#128@#55@#17@#103@#184@#75@#224!2@#235!2@#59@#8@#7@#8@#1!5@$#1!3A#76A#1!2A#76A#1!2A#76A#88A#198!3A#7A#198A#100A#198!2A#7A#198!2A#7A#198!2A#100A#212!5A#60!3A#207!2A#122A#138A#193A#16A#89A#166A#18A#64!2A#155A#64A#123!5A#65A#123!7A#194A#155A#101A#177A#158A#179A#141A#115A#176!5A#213A#141A#229A#127A#179A#135A#170A#16!3A#63!3A#162A#177A#18!2A#165A#161A#194!2A#195!3A#194A#151A#123A#151A#123A#151A#155!3A#18A#162A#63A#163A#168A#158A#168!5A#158A#56A#177A#168A#177!2A#77A#89A#86A#63A#56A#158A#170A#175A#61!3A#181A#221!2A#233!2A#211!4A#233!2A#232A#184A#61A#231A#191A#17A#77A#128A#125A#86A#125A#162A#125A#163A#128A#56A#125A#56!2A#164A#56A#163A#56!11A#55A#56A#164A#128A#56A#125A#128!2A#53A#128A#54!4A#99A#54!6A#55A#54A#128A#125A#17A#103A#229A#75A#224A#59A#235A#59A#239A#8A#7A#100A#1A#59A#1A#59A#76A$#1!3C#76C#1!2C#76C#1!2C#76C#1C#198C#100C#198!4C#100C#198!5C#100C#198C#212!7C#207C#60!3C#122C#217C#193C#16C#105C#166!2C#64!2C#171C#194!2C#123C#19C#123!3C#65C#123C#153C#65C#123C#159C#123!4C#166C#63C#170C#183C#141C#176!3C#192C#176C#185C#176C#10C#141C#183C#179C#135C#170!2C#158C#16C#177C#158C#63C#177!2C#86C#162C#89C#64C#161C#155!2C#194!2C#151C#194C#123C#155C#64C#155C#18!2C#162C#63C#56C#177C#158C#169C#170!2C#14C#170!2C#158C#168!2C#158C#56!2C#86C#177C#56C#177C#158C#168C#14C#61C#175C#180C#184C#221!2C#233!2C#211!3C#233!3C#232C#184C#231!2C#191C#169C#17C#163C#125C#86C#125C#86C#125C#164C#125C#163C#164C#163!2C#56!15C#98C#55C#163C#128!4C#54C#157C#54!3C#99C#157C#54!4C#55C#54C#55C#54C#128C#55C#125C#56C#15C#75!2C#224!2C#235C#59C#235C#59C#7C#8C#1!2C#59C#1!2C$#1!3G#76G#1!2G#76G#1!2G#76G#88G#212G#1G#198G#100G#198G#100G#198!2G#100G#198G#7G#198!2G#100G#198!3G#212!4G#60G#207G#60G#207G#120G#217G#104G#16G#89!2G#64G#165G#155G#194G#123G#155G#123!2G#151G#123!2G#65G#159G#65G#159G#123!2G#153!2G#123!2G#171G#89G#16G#170G#183G#141G#176!2G#185!5G#176G#130G#183G#127G#179G#170!3G#158G#16G#168G#16G#168G#16G#177G#162G#89G#165!3G#155G#64!3G#155G#64G#18!2G#162G#63G#177G#56G#177G#169G#170G#169G#179G#174!4G#169G#170G#168!2G#158G#16G#56G#177G#158G#56G#16G#14G#175G#61G#181G#184G#221!2G#176G#233G#224G#211!4G#233G#232G#184G#231G#15G#103G#77!2G#17G#56G#125!2G#163G#125G#163G#125G#163G#56G#163G#56!8G#169!4G#56!3G#55G#56G#164!2G#55G#128!3G#54G#157G#128G#54!2G#99G#157G#53G#54!6G#55!2G#54G#128G#55G#77G#61G#221G#224!2G#59G#235G#59G#8G#239G#8G#100G#1!4G#76G$#1!3O#76O#1!2O#76O#1!3O#88O#198!6O#100O#198!2O#100O#198O#100O#198!3O#100O#198O#212!3O#60O#212O#207O#60!2O#207!2O#130O#62O#199O#89O#171O#64O#171O#155O#123!5O#159O#123!2O#153O#123O#153!7O#123O#64O#162O#16O#14O#183O#213O#176O#185!2O#133O#211O#185O#192O#176O#141O#181O#183O#127O#135O#170!3O#135O#170!2O#158O#16O#63O#86O#162O#89O#18O#86O#18O#162O#18O#162O#18O#86!2O#63O#163O#56O#168!2O#170O#174!2O#175O#180O#183O#180O#179O#174!2O#170O#62O#168O#158O#16O#158O#16O#158!2O#174O#127O#180O#221!3O#232O#224!2O#211!3O#233!2O#232O#184O#231!2O#103O#136O#77O#56O#17!2O#163O#125O#163O#125O#163!2O#55O#163O#56!4O#17O#56!2O#169!2O#17O#169O#56!2O#169O#56!2O#55O#163O#164O#128!4O#157O#128O#54!6O#157O#54!5O#55O#54O#128!2O#55O#17O#103O#61O#75!2O#224O#59O#235O#59O#239O#59!2O#100O#76O#1O#59O#1!2O$#1!3_#76_#1!2_#76_#1_#76_#1_#76_#198_#1_#198_#7_#198!3_#100_#198_#100_#198!2_#100_#198_#100_#212_#198_#100_#212!3_#60!2_#207_#212_#207_#117_#209_#237_#105_#166_#165_#171_#194!2_#123_#194_#151_#123!2_#151_#159_#65_#159_#153!8_#123_#64_#89_#63_#168_#179_#183_#213_#176_#185_#133!2_#211_#185!2_#176_#141_#130_#180_#127_#179!3_#174_#179_#170!2_#168_#158_#177_#16_#177_#56_#177!2_#63_#86_#63_#163!2_#177_#56_#170_#177_#170!2_#174_#175!2_#183!3_#180_#179!2_#174_#170_#158_#16_#168_#16_#170_#158_#170_#179_#61_#181_#221_#229_#221_#176_#233_#224_#211!4_#233!2_#184_#231_#103_#15_#77!2_#17_#77_#17!3_#163!3_#56_#163_#56!2_#17_#56_#169!5_#56_#169!2_#56_#169_#56!2_#55_#56_#164_#128!4_#125_#157_#128_#54!2_#99!2_#54!3_#53_#54!6_#55_#54_#125!2_#17_#103_#229_#75_#224_#235!2_#59_#235_#239_#7_#8_#100_#76_#1!3_#76_$-#1!3@#76@#1!2@#76@#88@#59@#88@#198@#76@#198!3@#100@#198@#100@#198@#100@#212@#198!6@#100@#212!4@#60@#212@#207@#60@#207!2@#138@#178@#199@#89@#101@#194@#171@#123@#155@#123!3@#159@#123!2@#159@#65!2@#159@#65@#153!5@#159@#64@#171@#89@#93@#16@#179@#181@#176@#185@#133@#211!3@#133@#176!2@#141!2@#183!2@#179!2@#175@#179!3@#170!2@#168@#158@#168@#158@#168@#158@#56@#168@#177@#168@#16@#168@#158@#168@#170@#169@#174!2@#175@#183@#181!3@#183@#180@#179@#178@#170@#14@#158@#170@#135@#170@#174@#179!2@#180@#229@#221!2@#232@#233!2@#211!5@#233@#184@#231@#103@#15@#77@#17@#77@#17@#158@#17@#56@#17@#56!3@#163@#56@#17@#56@#169!3@#56@#191@#169!3@#56@#169@#56!2@#55@#56@#17@#164@#128!6@#53@#128@#54@#99!2@#54@#99@#54@#99@#53@#157@#54!2@#128@#54!2@#128!3@#55@#17@#15@#221@#75@#224@#59@#224@#59@#239@#59@#7@#8@#76@#1!2@#59@#1@#76@$#1!3A#76A#1!2A#76A#1!2A#76A#88A#198A#1!2A#198!4A#100A#212A#198!2A#100A#198!2A#100A#198!2A#212!4A#60!3A#207A#212A#207A#138A#104A#170A#105A#101A#171A#155A#123!5A#151A#159A#65A#151A#159A#123A#153!5A#20A#159A#123A#159A#19A#64A#89A#63A#170A#183A#141A#185A#211!2A#208A#211A#133A#211A#176A#115A#141A#181A#183!5A#179!2A#174A#179A#135A#174A#178A#170A#179A#158A#178A#168A#170A#158!2A#170A#158A#174A#170A#179A#174A#175A#183A#181!2A#213A#181A#141A#183A#179A#174!2A#170A#14!3A#179A#61!2A#183A#141A#221!2A#176A#233!2A#211A#224A#211!3A#233A#221A#184A#15!2A#77A#17A#93A#17A#77A#17A#56A#17A#56A#17A#56A#17!2A#56!4A#191A#169A#191A#169A#103A#169A#56A#169A#56!4A#55A#125A#128A#55A#128!4A#54A#157A#54A#99A#157A#54!5A#53A#54!5A#55A#54A#55A#128A#17A#56A#231A#75!2A#224A#239!4A#7A#59A#76A#100A#1!5A$#1!3C#76C#1!2C#76C#1C#76C#88C#76C#88C#198C#1C#198C#100C#198C#100C#198!5C#100C#198!2C#100C#212!6C#60C#212C#207!2C#120C#217C#130C#109C#199C#89C#194!3C#123!5C#153C#123C#159C#123C#153!6C#159C#65C#153C#123!2C#64!2C#89C#63C#170C#183C#213C#185C#133C#211!3C#133C#185C#176C#213C#141C#181C#183!4C#180C#183!2C#175C#183C#175C#183!2C#180C#175!2C#179!2C#174!2C#179C#174C#179C#174C#179C#180C#183!2C#240C#232C#213!2C#181!2C#183C#61C#179!2C#14C#174C#61C#180C#183C#141C#221!2C#232C#176C#233!2C#224C#211!4C#233C#221C#184C#231C#15C#191C#93C#17!2C#77C#17C#56C#77C#56!7C#168C#191C#169!3C#103C#169!3C#56!4C#55C#56C#128C#55C#164C#162C#125C#157C#128C#54C#99C#125C#54!3C#99!2C#54C#99C#54!2C#53C#54!3C#128C#53C#55C#128C#55C#17C#103C#61C#75C#224C#235C#239!3C#59C#7!2C#8C#76!2C#1C#59C#1C#76C$#1!3G#76G#1!2G#76G#88G#59G#1G#88G#198G#1G#198G#1G#198G#100G#198!2G#100G#198G#100G#198!2G#100G#198!4G#212!3G#60G#212G#60G#212G#60G#207!2G#209G#193G#16G#89G#171G#194G#123G#194G#123!2G#153G#123G#153G#123G#65G#123G#153G#159G#153!3G#20G#159G#153G#159G#65G#159G#123!2G#171G#165G#63G#158G#178G#181G#176G#185G#211!3G#133G#176G#213G#141!3G#181!3G#141G#181G#141G#181G#141!2G#221G#181G#213G#141G#181G#183G#180G#183G#175G#179G#175G#179G#180G#175G#183G#181!2G#213!4G#221G#181!2G#180G#179!2G#180G#183!2G#141G#221!2G#176!2G#233!2G#230G#211G#233G#211G#233G#224G#233G#184!2G#231G#15G#191G#77!3G#17!2G#158G#17G#56G#158G#56!3G#158G#168G#191G#169!4G#103G#169G#103G#191G#169G#56!3G#55G#56G#128G#164G#128!2G#18G#128G#54G#157!3G#54G#99G#18G#54!5G#99G#54G#53G#54!4G#55G#54G#125!2G#56G#15G#221G#75G#224G#239!3G#59G#239G#59G#100G#59G#76!2G#1!2G#76G#1G$#1!3O#76O#1!2O#76O#1!3O#88O#1O#88O#198O#7O#198!2O#100O#198!2O#100O#198!2O#1O#198!2O#100O#198O#122O#212!4O#60O#212O#60O#212!2O#120O#207O#183O#16O#177O#171!2O#194O#123!5O#151O#123!2O#153O#123O#153!4O#159O#20O#65O#159O#123O#65O#123!3O#64O#171O#162O#16O#170O#175O#141O#176O#185O#133O#185!2O#176O#213O#141!6O#213O#141O#213!3O#176!3O#213!2O#221O#183O#181O#183O#181O#183O#181O#130O#181!2O#141O#221O#213O#176!3O#213O#221O#141O#183O#181O#183O#141O#229O#221!2O#176!2O#185O#233O#230O#211O#224!4O#233O#232O#184!2O#231O#15!2O#77!2O#17O#77O#17O#56!2O#158O#56!3O#158O#168O#169!5O#191O#169!5O#56!3O#55O#56O#164O#128O#17O#128!3O#54O#157!2O#54O#157!3O#53O#54O#99O#54O#99O#54!2O#99O#53O#54!3O#128O#54O#125O#54O#17O#191O#15O#184O#235!2O#211O#59O#239O#59O#7O#59O#100!2O#76!2O#1!4O$#1!3_#76_#1!2_#76_#1_#76_#88_#1_#88_#1_#198!2_#100_#198!3_#100_#198!2_#1_#198_#1_#198_#100_#198_#100_#212!5_#60_#212!2_#122_#120_#207_#209_#178_#105_#194_#171_#194!2_#123_#194_#151_#123!3_#159_#123_#153!5_#20_#159_#65_#153_#159_#123_#159_#123!4_#64_#101_#177_#199_#174_#141_#213_#176_#185!2_#176_#213!2_#141!2_#221_#141_#213!2_#176!5_#185_#176!2_#213!2_#221_#141_#221_#141_#221_#181_#221_#141_#213!3_#176!6_#221_#213_#141_#221_#141_#213!2_#176_#185!2_#233_#230_#211_#224_#211_#233!3_#221_#184_#229_#103_#15!3_#77!2_#17_#158_#56_#158_#56!2_#158_#56_#158_#169!6_#191_#169_#103_#169!4_#56_#55_#56_#164!2_#55_#164_#128!3_#157!3_#54_#99_#157_#54!2_#99_#54_#99!2_#54_#99_#53!4_#54_#128_#53_#128_#54_#125_#55_#15_#221_#75_#235_#211_#59_#239!2_#59_#7!3_#59_#76!2_#1!2_#59_#76_$-#1!3@#76@#1!2@#76@#88@#59@#1!3@#198@#1@#198!2@#100@#198@#122@#198!2@#1@#198@#7@#198!2@#100@#212!6@#198@#212!2@#60@#212!2@#192@#138@#237@#199@#89@#171@#194@#123@#194@#123@#64@#123!3@#153!2@#123@#153@#159@#153@#159@#65@#159@#65!2@#123!2@#65@#159@#153@#159!2@#123!2@#64@#194@#199@#170@#175@#141@#213@#176!2@#213!3@#141@#213!4@#176@#115@#176@#185!4@#176@#185@#176@#213@#176@#213!2@#176!7@#185!3@#233@#185@#176!8@#185@#176@#211@#185@#211@#233!4@#176@#232@#184@#231@#61@#15!2@#191@#77!2@#17@#191@#56!3@#158@#168@#169!4@#103@#169@#103@#191@#169!6@#56!3@#55@#163@#55@#164@#128!4@#54@#128@#54@#157@#54!2@#99@#54@#99@#156@#53@#156@#53@#156@#53@#54@#156@#53@#54@#53@#54@#128@#54@#55@#17@#77@#231@#184@#75@#235@#239!2@#59!3@#7@#2@#100@#2@#76!2@#1@#76@#1!2@$#1!3A#76A#1!2A#76A#1!3A#88A#198A#1A#198!2A#212A#198A#212A#1A#198A#100A#198!6A#100A#212!10A#122!2A#217A#104A#124A#177A#194A#171A#194A#123A#194A#123!5A#153!2A#65A#153!4A#65A#159A#65A#159A#123A#159A#65A#123A#153A#159!2A#123A#159A#123A#165A#177!2A#175A#178A#183A#141!3A#213A#141A#213A#221A#176!4A#185!4A#211A#176A#185A#176!6A#185A#176A#185A#176A#75A#185!3A#233A#120A#233A#185!2A#57A#176!3A#185A#233A#185A#233A#185A#211A#176A#233A#176!2A#232A#184A#181A#61A#231A#15A#169A#158!2A#17A#158A#56!2A#158A#56A#158A#168A#191A#169!5A#103A#169A#103A#169!4A#56!3A#55A#163A#164!3A#162A#128!3A#54A#128A#156A#157A#54A#99!2A#157A#99A#156A#54A#99A#53A#156A#53A#156A#53!2A#157A#53A#157A#54!2A#128A#125A#55A#191A#231A#221A#75A#59A#211A#59!3A#132A#7A#59A#7A#76!3A#1!4A$#1!3C#76C#1!2C#76C#1!4C#88C#198C#1C#198C#76C#212C#198C#212!2C#198C#1C#198C#7C#198C#100C#198!3C#212!7C#60C#212!2C#122C#217C#209C#170C#177C#166C#165C#171C#194C#123C#64C#123!3C#153C#159C#65C#159C#65C#153!2C#159C#65C#159C#65C#153!2C#65C#159C#153C#65C#123C#153!3C#123C#153C#171C#89C#177C#170!2C#175C#178C#180C#181C#141!2C#213!2C#176!3C#185!9C#75C#233C#120C#233C#185C#120C#233C#230C#211C#185C#233C#133C#211!2C#233C#120C#233C#185!3C#176C#185!2C#233C#133C#176C#211C#176!3C#232C#181!2C#231!2C#14C#191!2C#158C#56C#158C#168C#169C#158C#168C#158C#169!5C#103!2C#169C#175C#103C#169!3C#56!4C#164C#56C#164C#128!6C#54C#161C#54!3C#99C#157C#54C#156C#54C#99C#156C#152C#54C#156C#53!2C#99C#53C#54!2C#53C#157C#128C#54C#55C#17C#15C#229C#221C#224!2C#239!2C#59C#132C#7C#2C#100C#2C#59C#76C#1!3C#59C#76C$#1!3G#76G#1!2G#76G#1G#76G#88G#1G#198G#1G#198G#122G#198G#212!3G#198G#122G#198!5G#100G#198!2G#212!2G#198G#212G#198G#212!3G#60G#212G#122!2G#138G#237G#124G#177G#101G#171G#194G#123!7G#153!6G#159G#65G#159G#65G#153!3G#159G#65G#159G#65G#159G#151G#159G#123G#153G#194!2G#165G#89G#199G#170!3G#179G#183G#181G#213G#115G#176G#185!9G#233G#120G#211G#233G#133!2G#211!2G#233G#185G#133!2G#211G#233G#133!2G#211G#233G#120G#176G#185!2G#176G#185G#176G#185G#176!2G#232G#213G#180G#181G#180G#61G#175G#169!3G#158!3G#169!10G#231G#169G#174G#103G#169!5G#56!3G#164G#55G#164G#128G#164G#128!2G#54G#128G#54G#128G#54G#99!2G#156G#157G#54G#99G#156G#99G#53G#99G#53G#99G#53G#152G#53!2G#54G#53G#54G#157G#53G#128G#125!2G#56G#231G#184G#75!2G#59!2G#211G#59!2G#7G#59!2G#76G#59G#76!2G#1G#76G#1!2G$#1!3O#76O#1!2O#76O#88O#59O#1O#88O#1O#198!2O#212O#198O#212O#198O#122O#198O#1O#198O#100O#198O#1O#198!2O#100O#198!3O#212!6O#60O#212O#122O#207O#217O#193O#170O#105O#177O#171!2O#194O#123!4O#153O#159O#65O#159O#153!13O#123O#159O#65O#159O#153!2O#123O#153O#159O#123!2O#194O#64O#89O#93O#158O#170O#127O#181O#213O#176O#185!9O#233O#133O#233O#133O#211O#224O#233O#133!2O#211!2O#233O#230O#211O#233!2O#230O#185!2O#75O#176!5O#213!2O#221O#181O#180O#181O#61O#14O#169O#14O#169O#14O#169!3O#14O#169O#14O#169O#231O#169O#175O#169O#103O#14O#103O#169O#174O#103O#169!3O#191O#56!3O#55O#163O#164!3O#128!3O#156O#128O#156!2O#54O#156O#157O#54!2O#156!2O#54!2O#156O#99O#53O#156O#53O#156O#53O#156O#53O#54O#156O#54O#157O#128O#53O#125O#17O#191O#61O#221O#75O#224!2O#239O#59!2O#132O#7O#1O#7O#2O#100O#59O#1!4O#76O$#1!3_#76_#1!2_#76_#1!4_#198_#100_#198_#122_#198_#122_#212!4_#198!2_#100_#198_#1_#198!2_#1_#198_#212!2_#198_#212!2_#60_#212!2_#60_#212_#207_#217_#214_#121_#199_#177_#194_#171_#194_#123!6_#153_#151_#159_#153!11_#159_#153!2_#159_#65_#153!7_#123_#171_#194_#165_#89_#93_#168_#193_#181_#141_#213_#176!2_#185_#176!3_#185!3_#133_#211!4_#233_#133_#211_#233_#185_#230_#211_#185_#230_#233_#185_#75_#176!4_#115_#213_#141_#184_#181_#180!2_#179_#14_#191_#169_#14_#169_#231_#169_#14_#169_#14_#169!2_#103_#174_#231_#103_#231_#169_#175_#103_#169_#174_#169!4_#56!4_#163!2_#164!2_#128_#162_#128_#54_#128_#54_#156_#54_#99_#156_#157_#54_#156_#54_#99_#157_#156_#54_#152_#54_#156_#53_#152_#53_#152_#53!2_#54!2_#53_#157_#128!3_#55_#231_#184_#75!2_#224_#59!4_#7_#2_#7_#76!2_#59_#76!2_#1!4_$-#1!3@#76@#1!2@#76@#1@#76@#1@#198!3@#122@#88@#212!4@#198@#122@#198!5@#2@#198@#1!2@#198@#212!2@#198@#60@#212@#60@#212@#60!2@#122@#207@#209@#193@#109@#105@#166@#171@#123!5@#153@#123@#159!2@#65@#159@#65@#159@#65@#153!3@#20@#159@#153!2@#65@#159@#65@#153!3@#159@#153!7@#123@#64@#171@#89@#63@#158@#178!2@#181@#141!2@#213@#176@#115@#176!2@#75@#185@#233@#133@#233@#185!2@#120@#233@#185!3@#176!2@#185@#176@#57@#176!3@#10@#213@#141!2@#181!2@#183@#61@#179@#170@#14@#56@#169@#14@#169@#14@#169@#231@#169@#175@#169@#174@#175!2@#231@#169@#175@#169@#175@#103@#174!2@#169!3@#56!5@#163@#55@#163@#164@#128!4@#54@#161@#54@#156@#157@#54!2@#156@#54@#156@#54@#156@#53@#99@#53@#99@#53@#156@#53@#156@#53!3@#156@#54@#156@#54@#53@#128!2@#17@#191@#231@#221@#75@#235@#59@#224@#239@#59@#132@#7@#59@#7@#59@#76!2@#59@#1@#76@#1!2@#76@$#1!3A#76A#1!2A#76A#88A#59A#1!2A#212A#1A#198A#212!7A#198A#100A#198A#100A#198!2A#2A#198!2A#88A#198A#212!2A#198A#60A#212A#60!3A#212A#207A#217A#104A#178A#199A#177A#171A#194A#123!5A#153A#151A#159A#65A#153!6A#159A#153!3A#159A#65A#153!11A#159!3A#123!2A#64A#89!2A#93A#168A#178!2A#183!2A#141A#213A#115A#176!2A#185!5A#176!6A#57A#176!2A#115A#213A#141!3A#181A#141A#181!2A#183A#61A#14A#158A#170A#191A#158!3A#169A#14A#103A#174A#175A#231A#14A#103A#174A#103A#14A#103A#175A#103A#231A#169A#103A#174A#169!4A#56!3A#163!2A#98A#163A#164A#128!4A#54A#128A#156A#157!2A#54A#156!2A#54A#156!2A#53A#157A#53A#156A#53A#156A#53A#156A#53A#156A#53A#156A#53A#54A#53A#54A#157A#128A#54A#125A#17A#103A#61A#221A#75A#235A#59A#211A#59!3A#2A#7A#1A#100A#59A#76!2A#1A#76A#1A#76A#1A$#1!3C#76C#1!2C#76C#1!2C#76C#198C#1C#212!4C#122C#198C#60C#212!3C#100C#212C#198!2C#2C#198!2C#88C#198C#212C#198C#212!5C#60C#212C#60!2C#217C#214C#119C#109C#199C#166C#171C#123!4C#153C#123C#159C#151C#159C#153!3C#159C#153!4C#20C#159C#65C#159!2C#153C#159C#65C#159C#65C#159C#153C#159C#65C#159C#65C#153!2C#159C#123!2C#171C#64C#89!2C#93C#16C#170C#174C#178C#179C#183C#130C#141!2C#176C#141C#176C#10C#213C#10C#141!2C#10C#141!3C#183C#181C#183C#181C#127C#181C#183C#180C#127C#61C#174C#170C#14C#158!5C#14C#169C#14C#175C#231C#14C#103C#14C#175C#169C#175C#103C#14C#169!3C#231C#169!4C#56!3C#163!2C#55C#163C#164C#162C#128C#164C#128!3C#161C#128C#54C#157C#54C#156C#157C#54C#156C#53C#156C#54C#156C#53!2C#156C#53C#156C#53C#156C#53C#152C#53C#54C#156C#54C#156C#53C#157C#125!2C#56C#61C#229C#75C#235C#59C#224C#59!6C#2C#100C#2C#100C#76C#1!2C#76C#1!2C$#1!3G#76G#1!2G#76G#1!2G#76G#88G#212G#198G#212!10G#198!4G#216!2G#88!3G#212G#198G#212!2G#60!4G#212G#60G#207G#217G#104G#237G#16G#177G#101G#194G#123G#159G#123!2G#153G#159G#123G#159G#65G#159G#65G#153!5G#159G#65G#159G#65!2G#159G#65G#159G#65G#153!2G#159G#65G#159G#65G#153G#159G#65G#159G#123G#159G#123!2G#171!2G#165G#89G#177G#93G#158G#16G#170G#179!2G#127G#183!6G#181G#183!4G#127G#183G#179!3G#14!5G#158G#174G#170G#158!3G#169G#170G#169G#14G#169G#14G#103G#14G#175G#103G#174G#169G#175G#169!4G#14G#169!4G#56!4G#163G#55G#163G#164!3G#128!2G#162G#128G#161G#128!2G#156G#157G#54G#157G#54G#156G#53G#156!2G#53G#156G#53G#156G#54G#156G#53!2G#156G#53!3G#54G#152G#54!3G#157G#128G#125G#17G#191G#231G#75G#235!2G#211G#59G#239G#59G#6G#7G#2G#100G#76G#59G#100G#76!2G#1G#76G#88G#59G#88G$#1!3O#76O#1!2O#76O#1!2O#76O#198!2O#212!10O#198O#212O#198!2O#216O#198O#216O#198O#88O#198!2O#212O#198O#212!5O#60O#212!2O#207O#217O#104O#121O#105O#166O#171O#159O#123!2O#153O#123O#153!2O#65O#159O#65O#153!5O#20O#159O#65O#159!2O#65O#159O#65O#159O#65O#159O#153!5O#159O#65O#159O#65O#153O#159O#123!2O#153O#123O#64O#171O#64O#89!2O#177O#93O#63O#158!2O#16O#170!2O#135O#170O#179O#178O#179O#14!5O#170O#14O#170!2O#158!3O#174!3O#170O#174!4O#14O#169O#14O#169O#175O#231!3O#14O#174O#169O#191O#169!2O#15O#169O#56O#191O#56O#158O#56!2O#163O#56O#164O#163O#164!2O#163O#128O#125O#162!2O#157O#128!2O#54O#99O#128O#54O#99O#54O#99O#157O#156O#54O#156O#54O#156O#53O#156O#53!2O#156O#54O#152O#54O#152O#54O#53O#54O#53O#156O#54!2O#18O#17O#56O#231O#229O#235!2O#59O#239O#59!3O#132O#7O#59O#76!3O#59O#76!2O#1!2O#76O#88O#76O$#1!3_#76_#1!2_#76_#1_#2_#76_#198_#212_#198_#212!9_#198_#212_#198!3_#216!3_#88!2_#198_#212_#198_#212!9_#217_#209_#104_#199_#105_#171_#194_#159_#123!3_#153_#159_#65_#153!6_#159_#153_#20_#159_#65_#159_#65_#159_#65_#159_#65_#153!8_#159_#153_#159_#65_#159_#153_#123_#159_#123!3_#171!2_#64_#89!3_#177!2_#93_#77_#93_#158_#16!2_#158!5_#168_#170_#62_#158!2_#170!2_#174_#170!3_#174_#170_#14_#158_#174_#14_#169_#174_#231_#14_#169_#231_#169_#14_#169!3_#158!2_#56_#158_#56!3_#163!3_#164!2_#163_#128_#164!2_#162_#128_#162_#125_#157_#128_#157_#128_#161_#157_#54_#99_#54_#99_#156_#53_#99_#156_#53_#156_#53_#156_#53_#156_#53!4_#215_#54_#52_#54!3_#156_#54_#99_#125_#17_#15_#229_#221_#235_#224_#59!3_#132_#59_#7_#2_#76_#59_#76_#88_#59_#76!2_#1!2_#76!2_#1_$-#1!3@#76@#1!2@#76!2@#1!2@#198!2@#212@#198@#212!7@#198@#212@#198@#212@#198!2@#216@#198@#88@#198@#88@#198!2@#212@#198!2@#212!7@#122@#217@#214@#121@#199@#166@#101@#123!3@#159@#123!2@#153@#159@#65@#159@#153!4@#159@#65@#159@#65@#159@#65@#159@#65@#153!7@#159@#153@#159@#65@#159@#123@#159@#65@#123@#159@#153@#159@#123!2@#153@#194@#123@#171!2@#64@#166@#89!5@#177!3@#199!2@#177@#16@#158@#16@#56@#16@#158@#168@#16@#158@#168@#170!2@#14@#158@#169@#174@#158@#174!2@#14@#169@#231@#14@#169@#14@#169!2@#62@#56@#158@#56!2@#77@#163@#56@#86@#163!2@#164@#125@#128@#164@#128@#163@#162@#125@#162@#128@#157@#128@#157@#128@#99@#128@#54@#99@#128@#156@#54@#156@#99@#53@#156@#99@#156@#152@#53@#156@#53!3@#167@#54@#215@#54!2@#215@#54@#152@#54@#99@#18@#17@#191@#231@#229@#57@#239@#235@#59@#211@#59!2@#132@#7@#2@#76@#1@#59@#1!2@#76!2@#1!3@#76@#88@$#1!3A#76A#1!4A#59A#88A#212A#198!2A#212A#198A#212A#60A#212A#60A#212!2A#60A#198!2A#212A#198!2A#216!2A#88!2A#198A#88A#198!2A#212A#198A#212!3A#198A#212!3A#122A#207A#138A#193A#109A#105A#166A#194A#123!3A#153A#123!2A#153A#123A#153!2A#159A#153!3A#20A#65A#159A#65A#159A#65A#159A#153!2A#159A#153A#159A#153A#159A#153A#159A#65A#159A#123A#153A#159A#123A#153A#123!2A#153A#123!6A#194!2A#155A#64A#171A#64A#165A#166A#89!3A#177A#63A#177!2A#63A#177A#93A#199A#177A#16A#56A#16A#158!3A#168A#158A#168A#170A#158!4A#169A#158A#169A#191A#169A#158!2A#56!3A#63A#163!2A#164A#86A#163A#164A#86A#128A#163A#128A#125A#162A#18A#128A#18A#128A#157A#128!2A#99A#128A#99!2A#161A#54A#156!2A#157A#53A#156A#99A#156A#53A#156A#53A#156A#53A#152A#53!2A#215A#54A#215A#53A#54!3A#53A#54A#99A#125A#17A#231A#61A#75A#235A#224A#59!3A#120A#7!2A#2A#76A#59A#1!2A#2A#100A#76!2A#1A#76A#88A#59A#1A$#1!3C#76C#1C#76C#88C#76C#88C#76C#198!2C#212C#198C#60C#212!2C#60C#212!4C#198C#212C#198!4C#216C#198C#88!3C#198!3C#212!3C#198!2C#212!2C#207C#212C#207C#217C#209C#178C#124C#177C#166C#171C#123C#159C#123!2C#153C#123C#153!2C#123C#153!3C#159C#65C#159C#65C#159C#65C#159C#65C#153!3C#159C#153C#159C#153!2C#159C#123C#153C#159!2C#123C#153C#159C#153C#123!2C#159C#123C#159C#123!7C#194C#171C#194C#64!3C#89!4C#162C#177!2C#162C#177C#86C#177!2C#63C#177C#56C#177C#158C#168!2C#158C#168!3C#158C#56C#158C#56!2C#158C#56!3C#177C#163!3C#162C#125C#164C#86C#162C#164C#162!2C#128C#162C#128!2C#162C#128!2C#18C#128C#99C#128C#156C#128C#99C#157C#156C#157C#54C#156C#99C#54C#156C#54C#156C#53C#156C#53C#156C#53!2C#215C#54C#215C#53!2C#54C#215C#54C#156C#54C#99C#125C#17C#61C#229C#75C#224C#59C#224C#132C#120C#6C#7C#2C#76C#59C#76C#2C#76!2C#59C#76!2C#1!2C#76C#1!2C$#1!3G#76G#88G#59G#1G#76G#59G#88G#212G#198!2G#212G#198G#212!4G#198!2G#212!2G#198!4G#1G#198G#216G#88!4G#212G#198!2G#212!2G#198G#214G#198G#212!2G#207G#212G#207G#217G#209G#178G#199G#105G#166G#194G#123G#159G#123G#153G#123G#153!3G#159G#65G#159G#65G#159G#65G#159G#65G#159G#65G#153!3G#159G#153!4G#159G#65G#153G#159G#151G#159G#123G#153G#123G#153G#123G#159G#153G#123!7G#194G#64G#123G#194!2G#171G#155G#64!2G#165G#64G#89!8G#162G#86G#177!2G#56G#177G#56G#93G#56!2G#77G#163G#56G#177G#163G#77G#86G#163!3G#86G#163!2G#162G#125!2G#162G#86G#162G#125G#162G#125G#18G#128G#18G#128G#18G#128G#157!3G#128G#161G#99G#161G#99G#128G#156G#157G#53G#99G#54G#156!2G#54G#152G#54G#99G#152G#53!2G#152G#54!2G#215G#53G#54G#215G#53G#54G#53G#99G#54G#89G#17G#14G#61G#75G#239G#59G#230G#132G#7!3G#2G#100G#2G#76G#59G#76G#1!3G#59G#76G#1!2G#76G#1!2G$#1!3O#76O#1!5O#76O#198!2O#212O#198O#60O#198O#212!2O#198O#207O#212!3O#198O#212O#198!4O#216O#198O#88O#198O#88O#198O#212O#198O#212!2O#198!3O#212O#207O#212O#207O#212O#207O#138O#209O#121O#199O#177O#194O#123!3O#153O#159O#153O#159O#65O#159O#65O#153!5O#159O#65O#153!2O#20O#159O#65O#153!2O#159O#153!4O#159!2O#123O#153O#123O#153O#123O#159O#123O#153O#123!9O#194O#123!2O#194O#171O#194O#171O#155O#64!2O#165O#64O#165!3O#18!2O#162!2O#63O#163O#177O#163O#162O#177O#86!2O#163O#162O#86O#163O#86O#164O#86!2O#163O#86O#163O#164O#162O#125O#162!2O#18O#128O#162O#18!2O#125O#157O#128O#162O#128O#157!4O#128O#157!4O#156!2O#54O#156O#99O#156!2O#54O#156O#99!2O#152O#54O#152O#53O#152O#54O#215O#54!4O#53O#54!2O#156O#54O#18O#17O#77O#61O#221O#75O#224O#59O#230O#132O#7O#2O#7O#1O#76!2O#59O#1O#76O#2O#100O#1O#7O#1O#76O#1!2O#76O#1O$#1!3_#76_#1_#76_#1_#76_#58_#76_#198!3_#212_#198_#212!4_#198!3_#212!2_#198!4_#88_#198_#216_#88!2_#198!3_#212!3_#60_#198_#214_#198_#207_#212!2_#207_#212_#213_#209_#193_#121_#177_#166_#123!2_#159_#123_#153_#159_#65_#153!5_#20_#159_#20_#65_#153_#20_#159!2_#153!8_#159_#65_#159_#153_#123_#186_#123_#159_#153_#123_#159_#153_#123_#159_#153_#123!6_#194_#123!2_#194!3_#64_#171_#194_#64_#165_#64!2_#165!3_#89!2_#18_#162!3_#63_#86_#163_#162!2_#86_#164!2_#18_#86_#164!4_#162!2_#86_#162!2_#125_#162_#18_#125_#157_#162_#157_#18_#157_#18_#54_#157!7_#99_#161_#157_#156!2_#53_#156_#53_#99_#156_#152_#53_#152_#53_#99_#53_#156_#53_#152_#53!2_#215_#54_#215_#53_#54_#53_#157_#18_#125_#17_#231_#61_#57_#75_#59_#230_#132_#7!2_#1!2_#7_#2_#76!2_#2_#76!2_#2_#100_#1_#100_#1!3_#76_#1_$-#1!3@#76@#88@#59@#1@#76!2@#1@#198!2@#212@#198!3@#212!3@#60@#198@#60@#198@#212@#198@#212@#198!3@#88!4@#198!4@#212@#198!2@#60@#198@#207@#198@#207@#212!4@#138@#141@#193@#199!2@#171@#123@#153@#186@#153@#20@#149@#153@#149@#153@#21@#149@#20!3@#149!2@#20@#149@#20@#21@#149!7@#153@#149@#153@#149@#186@#159@#186!7@#153!7@#151@#159@#151@#123@#151@#123!3@#194!2@#123@#194!2@#123@#155@#123@#194!2@#155@#161@#64@#18!2@#162@#161@#162@#165@#161@#18@#161@#18@#162@#161!3@#18@#161@#162@#157@#18@#157@#18@#157!3@#99@#157!2@#54@#99@#157@#53@#99@#156!3@#99@#156!4@#152!2@#156@#152@#156@#152!6@#53@#152!4@#52@#53@#52@#215@#53!3@#215@#54@#152@#53@#128@#17@#77@#231@#75!2@#224!2@#59@#132!2@#7!2@#2@#76!2@#59@#76!2@#59@#76!6@#1!2@#76@#1@$#1!3A#76A#1!4A#76A#1!3A#198A#76A#212A#198A#60A#212A#198A#212!2A#198A#212A#198A#212A#198!2A#212A#88!6A#1A#212A#198!2A#212!2A#198!3A#207A#198!2A#212!2A#120A#212A#207A#138A#209A#178A#109A#16!2A#199!2A#93!2A#105!9A#93A#105A#93A#105!7A#199!4A#105A#199!4A#105A#199!2A#16A#105A#16A#105A#93!4A#16A#93A#16!4A#105A#16!12A#158A#16A#170!8A#135A#170!4A#15A#170A#14A#170!2A#15A#62A#170A#14A#158A#62A#158A#170A#62A#158A#62A#158!2A#62A#158!2A#136A#77!2A#136A#77A#158A#77A#158!2A#77!12A#17A#77A#17A#169A#17A#191A#169A#17A#56!3A#158!2A#62A#15A#61A#11A#10A#75A#7!2A#59A#132A#7!2A#132A#1A#7A#1!3A#59A#1A#76A#2A#76!4A#1A#76A#1!3A$-\"




#//////////////////////////////////////////////////////////////////////////////
#
# S02A
#
# THE SCENE IMAGES DEFINITION
#
#//////////////////////////////////////////////////////////////////////////////

Write-Progress -Activity 'Creating Scene Images' -Id 2 -PercentComplete 0
[Hashtable]$Script:TheSceneImages = @{
    'FieldPlainsNoRoad'                          = [SIFieldPlainsNoRoad]::new()
    'FieldPlainsRoadNorth'                       = [SIFieldPlainsRoadNorth]::new()
    'FieldPlainsRoadSouth'                       = [SIFieldPlainsRoadSouth]::new()
    'FieldPlainsRoadEast'                        = [SIFieldPlainsRoadEast]::new()
    'FieldPlainsRoadWest'                        = [SIFieldPlainsRoadWest]::new()
    'FieldPlainsRoadNorthEast'                   = [SIFieldPlainsRoadNorthEast]::new()
    'FieldPlainsRoadNorthWest'                   = [SIFieldPlainsRoadNorthWest]::new()
    'FieldPlainsRoadNorthSouth'                  = [SIFieldPlainsRoadNorthSouth]::new()
    'FieldPlainsRoadEastWest'                    = [SIFieldPlainsRoadEastWest]::new()
    'FieldPlainsRoadNorthSouthEast'              = [SIFieldPlainsRoadNorthSouthEast]::new()
    'FieldPlainsRoadNorthSouthEastWest'          = [SIFieldPlainsRoadNorthSouthEastWest]::new()
    'FieldPlainsRoadNorthSouthWest'              = [SIFieldPlainsRoadNorthSouthWest]::new()
    'RiverRoadSample'                            = [SIRiverRoadSample]::new()
    'RiverRoadEWNSSample'                        = [SIRiverRoadEWNSSample]::new()
    'RiverRoadEWSSSample'                        = [SIRiverRoadEWSSSample]::new()
    'Random'                                     = [SIRandomNoise]::new()
    'SIRiverOnEastAtNorth'                       = [SIRiverOnEastAtNorth]::new()
    'SIRiverOnEastAtSouth'                       = [SIRiverOnEastAtSouth]::new()
    'SIRiverOnEastWestAtNorth'                   = [SIRiverOnEastWestAtNorth]::new()
    'SIRiverOnEastWestAtNorthSouth'              = [SIRiverOnEastWestAtNorthSouth]::new()
    'SIRiverOnEastWestNorthSouthAtEast'          = [SIRiverOnEastWestNorthSouthAtEast]::new()
    'SIRiverOnEastWestNorthSouthAtEastWest'      = [SIRiverOnEastWestNorthSouthAtEastWest]::new()
    'SIRiverOnEastWestNorthSouthAtEastWestSouth' = [SIRiverOnEastWestNorthSouthAtEastWestSouth]::new()
    'SIRiverOnEastWestNorthSouthAtWest'          = [SIRiverOnEastWestNorthSouthAtWest]::new()
    'SIRiverOnNorthEastAtNorth'                  = [SIRiverOnNorthEastAtNorth]::new()
    'SIRiverOnNorthSouthAtEast'                  = [SIRiverOnNorthSouthAtEast]::new()
    'SIRiverOnNorthSouthAtWest'                  = [SIRiverOnNorthSouthAtWest]::new()
    'SIRiverOnNorthSouthEastAtEast'              = [SIRiverOnNorthSouthEastAtEast]::new()
    'SIRiverOnNorthSouthEastAtNorth'             = [SIRiverOnNorthSouthEastAtNorth]::new()
    'SIRiverOnSouthAtEast'                       = [SIRiverOnSouthAtEast]::new()
    'SIRiverOnSouthEastAtSouthEast'              = [SIRiverOnSouthEastAtSouthEast]::new()
    'SIRiverOnWestAtNorth'                       = [SIRiverOnWestAtNorth]::new()
    'SIRiverOnWestAtSouth'                       = [SIRiverOnWestAtSouth]::new()
    'SIRiverOnWestEastAtSouth'                   = [SIRiverOnWestEastAtSouth]::new()
    'SIRiverOnWestNorthAtNorth'                  = [SIRiverOnWestNorthAtNorth]::new()
    'SIRiverOnWestNorthSouthAtNorth'             = [SIRiverOnWestNorthSouthAtNorth]::new()
}
Write-Progress -Activity 'Creating Scene Images' -Id 2 -Completed





#//////////////////////////////////////////////////////////////////////////////
#
# S02B
#
# MAP WARP FUNCTION
#
# THIS IS LIKELY A PRETTY NAIEVE APPROACH TO THIS AT THE MOMENT, BUT WHAT THE
# HELL?
#
#//////////////////////////////////////////////////////////////////////////////
[ScriptBlock]$Script:MapWarpHandler = {
    Param(
        [Map]$TargetMap,
        [Int]$WarpX,
        [Int]$WarpY
    )

    # ASSIGN THE PREVIOUS MAP
    $Script:PreviousMap = $Script:CurrentMap

    # ASSIGN THE CURRENT MAP
    $Script:CurrentMap = $TargetMap

    # SET THE PLAYER'S MAP COORDINATES
    $Script:ThePlayer.MapCoordinates.Row    = $WarpY
    $Script:ThePlayer.MapCoordinates.Column = $WarpX

    # TODO: THIS WOULD HAVE TO TRIGGER A REFRESH OF THE GPS IN ORDER FOR THE
    # CHANGE TO BE VISIBLE. WHATEVER LOGIC I'VE BEEN USING FOR THE TILE CHANGE
    # WOULD LIKELY SUFFICE (AGAIN, MAY BE A BIT NAIEVE BUT I THINK IT SHOULD WORK).
    # CORRECTION: THIS HAS BEEN MOVED TO THE COMMAND BLOCK CALL RATHER THAN HERE.
}

[Map]$Script:SampleMap       = [Map]::new('Map Data\SampleMap.json')
[Map]$Script:SampleWarpMap01 = [Map]::new('Map Data\MapWarpTest01.json')
[Map]$Script:SampleWarpMap02 = [Map]::new('Map Data\MapWarpTest02.json')
[Map]$Script:CurrentMap      = $Script:SampleWarpMap01




#//////////////////////////////////////////////////////////////////////////////
#
# S02C
#
# THE BAD COMMAND RETORTS DEFINITION
#
#//////////////////////////////////////////////////////////////////////////////
$Script:BadCommandRetorts = @(
    'Huh?',
    'Do what now?',
    'Come again?',
    'Pardon?',
    'Y U no type rite?',
    'Bruh...',
    'Are you drunk?',
    'Your commands are sus.',
    'Git gud, scrub.',
    'Did you RTFM?',
    'git commit -am "Eye kant spell"',
    'ceuwcnesckldsc',
    '843214385321832904'
)




#//////////////////////////////////////////////////////////////////////////////
#
# S02D
#
# THE SPECTRE CONSOLE WINDOW BORDER DEFINITIONS
#
#//////////////////////////////////////////////////////////////////////////////
$Script:SpectreBBPRounded = @{
    [WindowBorderPart]::LeftTop     = '╭'
    [WindowBorderPart]::Top         = '─'
    [WindowBorderPart]::RightTop    = '╮'
    [WindowBorderPart]::Left        = '│'
    [WindowBorderPart]::Right       = '│'
    [WindowBorderPart]::LeftBottom  = '╰'
    [WindowBorderPart]::Bottom      = '─'
    [WindowBorderPart]::RightBottom = '╯'
}

$Script:SpectreBBPSquare = @{
    [WindowBorderPart]::LeftTop     = '┌'
    [WindowBorderPart]::Top         = '─'
    [WindowBorderPart]::RightTop    = '┐'
    [WindowBorderPart]::Left        = '│'
    [WindowBorderPart]::Right       = '│'
    [WindowBorderPart]::LeftBottom  = '└'
    [WindowBorderPart]::Bottom      = '─'
    [WindowBorderPart]::RightBottom = '┘'
}

$Script:CurrentWindowDesign = $SpectreBBPRounded




#//////////////////////////////////////////////////////////////////////////////
#
# S02E
#
# THE BATTLE ENCOUNTER REGION TABLE DEFINITION
#
#//////////////////////////////////////////////////////////////////////////////
$Script:BattleEncounterRegionTable = @{
    0 = @(
        'EEBat',
        'EENightwing',
        'EEWingblight',
        'EEDarkfang',
        'EENocturna',
        'EEBloodswoop',
        'EEDuskbane'
    )
}

$Script:BATAdornmentCharTable = @{
    [BattleActionType]::Physical         = [Tuple[[String], [ConsoleColor24]]]::new("`u{2022}", [CCTextDefault24]::new())
    [BattleActionType]::ElementalFire    = [Tuple[[String], [ConsoleColor24]]]::new("`u{03B6}", [CCAppleRedLight24]::new())
    [BattleActionType]::ElementalWater   = [Tuple[[String], [ConsoleColor24]]]::new("`u{03C8}", [CCAppleBlueLight24]::new())
    [BattleActionType]::ElementalEarth   = [Tuple[[String], [ConsoleColor24]]]::new("`u{03B5}", [CCAppleBrownLight24]::new())
    [BattleActionType]::ElementalWind    = [Tuple[[String], [ConsoleColor24]]]::new("`u{03C6}", [CCAppleGreenLight24]::new())
    [BattleActionType]::ElementalLight   = [Tuple[[String], [ConsoleColor24]]]::new("`u{03BC}", [CCAppleYellowLight24]::new())
    [BattleActionType]::ElementalDark    = [Tuple[[String], [ConsoleColor24]]]::new("`u{03B4}", [CCApplePurpleDark24]::new())
    [BattleActionType]::ElementalIce     = [Tuple[[String], [ConsoleColor24]]]::new("`u{03B9}", [CCAppleCyanDark24]::new())
    [BattleActionType]::MagicPoison      = [Tuple[[String], [ConsoleColor24]]]::new("`u{03BE}", [CCAppleIndigoLight24]::new())
    [BattleActionType]::MagicConfuse     = [Tuple[[String], [ConsoleColor24]]]::new("`u{0398}", [CCAppleCyanDark24]::new())
    [BattleActionType]::MagicSleep       = [Tuple[[String], [ConsoleColor24]]]::new("`u{03B7}", [CCAppleGrey4Light24]::new())
    [BattleActionType]::MagicAging       = [Tuple[[String], [ConsoleColor24]]]::new("`u{03C3}", [CCAppleGrey6Light24]::new())
    [BattleActionType]::MagicHealing     = [Tuple[[String], [ConsoleColor24]]]::new("`u{20AA}", [CCAppleMintLight24]::new())
    [BattleActionType]::MagicStatAugment = [Tuple[[String], [ConsoleColor24]]]::new("`u{20B9}", [CCAppleOrangeLight24]::new())
}




#//////////////////////////////////////////////////////////////////////////////
#
# S02F
#
# THE BATTLE ACTION LOOKUP TABLE DEFINITION
#
# LOOKUP FOR RESISTANCE/WEAKNESS SCALARS. THIS IS GREATLY SENSITIVE TO THE ENUMERATION
# ORDERING IN THE BATTLE ACTION TYPE ENUMERATION.
#
#//////////////////////////////////////////////////////////////////////////////
$Script:BATLut = @(
	# PHYSICAL ATTACKS AGAINST OTHERS
	@(1, 1, 1, 1, 1, 1, 1, 1),

	# ELEMENTAL FIRE ATTACKS AGAINST OTHERS
	@(1, -0.75, 0.5, 0.5, 0.5, 1, 1, 1.75),

	# ELEMENTAL WATER ATTACKS AGAINST OTHERS
	@(1, 1.75, -0.75, 1, 0.5, 1, 1, 0.5),

	# ELEMENTAL EARTH ATTACKS AGAINST OTHERS
	@(1, 0.5, 1, -0.75, 0.5, 1, 1, 1.75),

	# ELEMENTAL WIND ATTACKS AGAINST OTHERS
	@(1, 1, 1, 1.75, -0.75, 1, 1, 0.5),

	# ELEMENTAL LIGHT ATTACKS AGAINST OTHERS
	@(1, 1, 1, 1, 1, -0.75, 1.75, 1),

	# ELEMENTAL DARK ATTACKS AGAINST OTHERS
	@(1, 1, 1, 1, 1, 1.75, -0.75, 1),

	# ELEMENTAL ICE ATTACKS AGAINST OTHERS
	@(1, 0.5, 1.75, 1.75, 1, 1, 1, -0.75)
)

$Script:Rui = $(Get-Host).UI.RawUI





#//////////////////////////////////////////////////////////////////////////////
#
# S02G
#
# THE STATE BLOCK TABLE DEFINITIONS
#
#//////////////////////////////////////////////////////////////////////////////
[ScriptBlock]$Script:TheSplashScreenAState = {}

[ScriptBlock]$Script:TheSplashScreenBState = {}

[ScriptBlock]$Script:TheTitleScreenState = {
    Write-Host "$([ATControlSequences]::CursorHide)"

    If($Script:HasSSASetupRunspace -EQ $false) {
        $Script:TheOffThread = [RunspaceFactory]::CreateRunspace()
        $Script:TheOffShell  = [PowerShell]::Create()

        $Script:TheOffThread.Open()
        $Script:TheOffShell.Runspace = $Script:TheOffThread
        $Script:TheOffShell.AddScript({
            [Console]::ReadKey($true)
        })

        $Script:SSAInputAsr = $Script:TheOffShell.BeginInvoke()

        $Script:HasSSASetupRunspace = $true
    }

    If($Script:HasTitleBgmStarted -EQ $false) {
        Start-Sleep -Seconds 1
        Try {
            $Script:TheBgmMPlayer.Open($Script:BgmTitleThemeB)
            $Script:TheBgmMPlayer.Play()
        } Catch {}
        $Script:HasTitleBgmStarted = $true
    }

    $Script:TheTitleFiglet.Draw()

    If($Script:HasSubtitleBeenWritten -EQ $false) {
        [Char[]]$CharArr   = $Script:TheGameSubtitle.ToCharArray()
        [Int]$PrintCounter = 0
        [Int]$Probe        = 0
        [Int]$PrintCol     = 33

        While($Probe -LE ($CharArr.Count - 1)) {
            $PrintCounter++
            If($PrintCounter -GE $Script:TeletypeSpeed) {
                $PrintCounter = 0
                Write-Host "$([ATControlSequences]::GenerateCoordinateString(9, $PrintCol))$($CharArr[$Probe])" -NoNewline
                $Probe++
                $PrintCol++
            }
        }

        $Script:HasSubtitleBeenWritten = $true
    }

    If($Script:HasSubtitleBeenColored -EQ $false) {
        $Script:TheSubtitleFiglet.Draw()
        $Script:HasSubtitleBeenColored = $true
    }

    If((Get-Random -Minimum 1 -Maximum 50000) -LT 250) {
        $Script:HasSubtitleBeenColored  = $false
        $Script:TheSubtitleFiglet.Dirty = $true
    }

    If($Script:HasSSAPressEnterShown -EQ $false) {
        $Script:TheSSAPressEnterPrompt.Draw()
        $Script:HasSSAPressEnterShown = $true
    }

    If($Script:HasSSAPressEnterShown -EQ $true) {
        $Script:SSAPECounter++
        If($Script:SSAPECounter -GE $Script:SSAPETimeout) {
            $Script:SSAPECounter                    = 0
            $Script:TheSSAPressEnterPrompt.DrawMode = -NOT $Script:TheSSAPressEnterPrompt.DrawMode
            $Script:TheSSAPressEnterPrompt.Dirty    = $true
            $Script:TheSSAPressEnterPrompt.Draw()
        }
    }

    If($Script:SSAInputAsr.IsCompleted -EQ $true) {
        $SSAKeyPressInfo = $Script:TheOffShell.EndInvoke($Script:SSAInputAsr) | Select-Object -First 1
        
        If($SSAKeyPressInfo.Key -NE [ConsoleKey]::Enter) {
            $Script:HasSSASetupRunspace = $false
        } Else {
            Try {
                $Script:TheBgmMPlayer.Stop()
            } Catch {}
            $Script:HasTitleBgmStarted = $false

            $Script:TheOffThread.Dispose()
            $Script:TheOffShell.Dispose()

            $Script:TheBufferManager.CopyActiveToBufferAWithWipe()

            Start-Sleep -Seconds 1

            $Script:ThePreviousGlobalGameState = $Script:TheGlobalGameState
            $Script:TheGlobalGameState         = [GameStatePrimary]::GamePlayScreen
        }
    }

    Write-Host "$([ATControlSequences]::GenerateCoordinateString(1, 1))"
}

[ScriptBlock]$Script:ThePlayerSetupState = {
    Switch($Script:ThePssSubstate) {
        ([PlayerSetupScreenStates]::PlayerSetupSetup) {
            # CLEANUP THE PREVIOUS STATE
            If($null -NE $Script:TheTitleFiglet) {
                $Script:TheTitleFiglet = $null
            }
            If($null -NE $Script:TheSubtitleFiglet) {
                $Script:TheSubtitleFiglet = $null
            }
            If($null -NE $Script:TheSSAPressEnterPrompt) {
                $Script:TheSSAPressEnterPrompt = $null
            }
            
            # TRANSITION TO THE NEXT STATE AUTOMATICALLY
            $Script:ThePssSubstate = [PlayerSetupScreenStates]::PlayerSetupNameEntry
            
            Break
        }
        
        ([PlayerSetupScreenStates]::PlayerSetupNameEntry) {
            If($null -EQ $Script:ThePSNameEntryWindow) {
                $Script:ThePSNameEntryWindow = [PSNameEntryWindow]::new()
            }
            
            $Script:ThePSNameEntryWindow.Draw()
            $Script:ThePSNameEntryWindow.HandleInput()
            
            Break
        }
        
        ([PlayerSetupScreenStates]::PlayerSetupGenderSelection) {
            If($null -EQ $Script:ThePSGenderSelectionWindow) {
                $Script:ThePSGenderSelectionWindow = [PSGenderSelectionWindow]::new()
            }
            
            $Script:ThePSGenderSelectionWindow.Draw()
            $Script:ThePSGenderSelectionWindow.HandleInput()
            
            Break
        }
        
        ([PlayerSetupScreenStates]::PlayerSetupPointAllocate) {
            If($null -EQ $Script:ThePSBonusPointAllocWindow) {
                $Script:ThePSBonusPointAllocWindow = [PSBonusPointAllocWindow]::new()
            }
            
            $Script:ThePSBonusPointAllocWindow.Draw()
            $Script:ThePSBonusPointAllocWindow.HandleInput()
        }
        
        ([PlayerSetupScreenStates]::PlayerSetupAffinitySelect) {
            If($null -EQ $Script:ThePSAffinitySelectWindow) {
                $Script:ThePSAffinitySelectWindow = [PSAffinitySelectWindow]::new()
            }
            
            $Script:ThePSAffinitySelectWindow.Draw()
            $Script:ThePSAffinitySelectWindow.HandleInput()
        }
        
        ([PlayerSetupScreenStates]::PlayerSetupProfileSelect) {
            If($null -EQ $Script:ThePSProfileSelectWindow) {
                $Script:ThePSProfileSelectWindow = [PSProfileSelectWindow]::new()
            }
            
            $Script:ThePSProfileSelectWindow.Draw()
            $Script:ThePSProfileSelectWindow.HandleInput()
        }
        
        ([PlayerSetupScreenStates]::PlayerSetupConfirmation) {}
    }
}

[ScriptBlock]$Script:TheGamePlayScreenState = {
    If($null -NE $Script:TheInventoryWindow) {
        $Script:TheInventoryWindow = $null
    }
    If($null -NE $Script:TheBattleManager) {
        $Script:TheBattleManager.Cleanup()
        $Script:TheBattleManager = $null
    }
    If($null -NE $Script:ThePlayerBattleStatWindow) {
        $Script:ThePlayerBattleStatWindow = $null
    }
    If($null -NE $Script:TheEnemyBattleStatWindow) {
        $Script:TheEnemyBattleStatWindow = $null
    }
    If($null -NE $Script:ThePlayerBattleActionWindow) {
        $Script:ThePlayerBattleActionWindow = $null
    }
    If($null -NE $Script:TheBattleStatusMessageWindow) {
        $Script:TheBattleStatusMessageWindow = $null
    }
    If($null -NE $Script:TheBattleEnemyImageWindow) {
        $Script:TheBattleEnemyImageWindow = $null
    }
    If($null -NE $Script:TheStatusHudWindow) {
        $Script:TheStatusHudWindow = $null
    }
    If($null -NE $Script:TheStatusTechSelectionWindow) {
        $Script:TheStatusTechSelectionWindow = $null
    }
    If($null -NE $Script:TheStatusTechInventoryWindow) {
        $Script:TheStatusTechInventoryWindow = $null
    }

    #######################################################################
    #
    # I REALLY NEED TO UNDERSTAND WHAT THE FUCK I WAS TRYING TO DO HERE.
    # THIS CODE SEEMS LIKE A FUCKING CRIME AGAINST HUMANITY, BUT I CAN'T
    # REMEMBER WHY I DID IT THIS WAY.
    #
    #######################################################################
    If(($Script:ThePreviousGlobalGameState -EQ [GameStatePrimary]::InventoryScreen) -AND ($Script:GpsRestoredFromInvBackup -EQ $false)) {
        $Script:TheBufferManager.RestoreBufferAToActive()

        # Force redraws of the content; a restoration from a buffer capture will NOT retain the 24-bit color information
        # and I really don't feel like trying to figure out how to grab the buffer manually
        $Script:GpsRestoredFromInvBackup             = $true
        $Script:TheSceneWindow.SceneImageDirty       = $true
        $Script:TheStatusWindow.PlayerNameDrawDirty  = $true
        $Script:TheStatusWindow.PlayerHpDrawDirty    = $true
        $Script:TheStatusWindow.PlayerMpDrawDirty    = $true
        $Script:TheStatusWindow.PlayerGoldDrawDirty  = $true
        $Script:TheCommandWindow.CommandHistoryDirty = $true
        $Script:TheMessageWindow.MessageADirty       = $true
        $Script:TheMessageWindow.MessageBDirty       = $true
        $Script:TheMessageWindow.MessageCDirty       = $true
        Write-Host "$([ATControlSequences]::CursorShow)"
    } Elseif(($Script:ThePreviousGlobalGameState -EQ [GameStatePrimary]::BattleScreen) -AND ($Script:GpsRestoredFromBatBackup -EQ $false)) {
        $Script:TheBufferManager.RestoreBufferAToActive()
        
        # Force redraws of the content; a restoration from a buffer capture will NOT retain the 24-bit color information
        # and I really don't feel like trying to figure out how to grab the buffer manually
        $Script:GpsRestoredFromBatBackup             = $true
        $Script:TheSceneWindow.SceneImageDirty       = $true
        $Script:TheStatusWindow.PlayerNameDrawDirty  = $true
        $Script:TheStatusWindow.PlayerHpDrawDirty    = $true
        $Script:TheStatusWindow.PlayerMpDrawDirty    = $true
        $Script:TheStatusWindow.PlayerGoldDrawDirty  = $true
        $Script:TheCommandWindow.CommandHistoryDirty = $true
        $Script:TheMessageWindow.MessageADirty       = $true
        $Script:TheMessageWindow.MessageBDirty       = $true
        $Script:TheMessageWindow.MessageCDirty       = $true
        Write-Host "$([ATControlSequences]::CursorShow)"
    } Elseif(($Script:ThePreviousGlobalGameState -EQ [GameStatePrimary]::PlayerStatusScreen) -AND ($Script:GpsRestoredFromStaBackup -EQ $false)) {
        $Script:TheBufferManager.RestoreBufferAToActive()
        
        # Force redraws of the content; a restoration from a buffer capture will NOT retain the 24-bit color information
        # and I really don't feel like trying to figure out how to grab the buffer manually
        $Script:GpsRestoredFromStaBackup             = $true
        $Script:TheSceneWindow.SceneImageDirty       = $true
        $Script:TheStatusWindow.PlayerNameDrawDirty  = $true
        $Script:TheStatusWindow.PlayerHpDrawDirty    = $true
        $Script:TheStatusWindow.PlayerMpDrawDirty    = $true
        $Script:TheStatusWindow.PlayerGoldDrawDirty  = $true
        $Script:TheCommandWindow.CommandHistoryDirty = $true
        $Script:TheMessageWindow.MessageADirty       = $true
        $Script:TheMessageWindow.MessageBDirty       = $true
        $Script:TheMessageWindow.MessageCDirty       = $true
        Write-Host "$([ATControlSequences]::CursorShow)"
    }

    $Script:ThePlayer.Update()
    $Script:TheStatusWindow.Draw()
    $Script:TheCommandWindow.Draw()
    $Script:TheSceneWindow.Draw()
    $Script:TheMessageWindow.Draw()
    $Script:TheCommandWindow.HandleInput()
}

[ScriptBlock]$Script:TheInventoryScreenState = {
    If($null -EQ $Script:TheInventoryWindow) {
        Try {
            $Script:TheInventoryWindow = [InventoryWindow]::new()
        } Catch {
            Write-Error $_.Exception.Message
            Write-Error $_.Exception.StackTrace
        }
    }
    If($Script:GpsRestoredFromInvBackup -EQ $true) {
        $Script:GpsRestoredFromInvBackup = $false
    }
    $Script:TheInventoryWindow.Draw()
    $Script:TheInventoryWindow.HandleInput()
}

[ScriptBlock]$Script:TheBattleScreenState = {
    If($Script:HasBattleIntroPlayed -EQ $false) {
        If($Script:ThePreviousGlobalGameState -EQ [GameStatePrimary]::GamePlayScreen) {
            [ATString]$Banner = [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleMintLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = 7
                        Column = 40 - (15 / 2)
                    }
                }
                UserData   = 'BATTLE COMMENCE'
                UseATReset = $true
            }
            Write-Host "$($Banner.ToAnsiControlSequenceString())"
            Write-Host "$([ATControlSequences]::CursorHide)"
            Try {
                $Script:TheSfxMPlayer.Open($Script:SfxBattleIntro)
                $Script:TheSfxMPlayer.Play()
            } Catch {}
            Start-Sleep -Seconds 1.75
            Clear-Host
        }
        $Script:HasBattleIntroPlayed = $true
    }
    If($null -EQ $Script:TheBattleManager) {
        $Script:TheBattleManager       = [BattleManager]::new()
        $Script:TheBattleManager.State = [BattleManagerState]::TurnIncrement
    }
    If($Script:BattleCursorVisible -EQ $false) {
        Write-Host "$([ATControlSequences]::CursorHide)"
        $Script:BattleCursorVisible = $true
    }
    If($null -EQ $Script:ThePlayerBattleStatWindow) {
        $Script:ThePlayerBattleStatWindow = [BattleEntityStatusWindow]::new(1, 1, 17, 19, $Script:ThePlayer)
    }
    If($null -EQ $Script:TheEnemyBattleStatWindow) {
        $Script:TheEnemyBattleStatWindow = [BattleEntityStatusWindow]::new(1, 22, 17, 40, $Script:TheCurrentEnemy)
    }
    If($null -EQ $Script:ThePlayerBattleActionWindow) {
        $Script:ThePlayerBattleActionWindow = [BattlePlayerActionWindow]::new()
    }
    If($null -EQ $Script:TheBattleStatusMessageWindow) {
        $Script:TheBattleStatusMessageWindow = [BattleStatusMessageWindow]::new()
    }
    If($null -EQ $Script:TheBattleEnemyImageWindow) {
        $Script:TheBattleEnemyImageWindow = [BattleEnemyImageWindow]::new()
    }
    If($null -EQ $Script:TheBattlePhaseIndicator) {
        $Script:TheBattlePhaseIndicator = [BattlePhaseIndicator]::new()
    }
    If($Script:GpsRestoredFromBatBackup -EQ $true) {
        $Script:GpsRestoredFromBatBackup = $false
    }
    If($Script:IsBattleBgmPlaying -EQ $false) {
        $Script:TheBgmMPlayer.Open($Script:BgmBattleThemeA)
        $Script:TheBgmMPlayer.Volume = 0.5
        $Script:TheBgmMPlayer.Play()
        $Script:IsBattleBgmPlaying = $true
    }
    $Script:TheBattleManager.Update()
}

[ScriptBlock]$Script:ThePlayerStatusScreenState = {
    Write-Host "$([ATControlSequences]::CursorHide)"
    $Script:Rui.CursorPosition = [Coordinates]::new(1, 1)

    If($null -EQ $Script:TheStatusHudWindow) {
        $Script:TheStatusHudWindow = [StatusHudWindow]::new()
    }
    If($null -EQ $Script:TheStatusTechSelectionWindow) {
        $Script:TheStatusTechSelectionWindow = [StatusTechniqueSelectionWindow]::new()
    }
    If($null -EQ $Script:TheStatusTechInventoryWindow) {
        $Script:TheStatusTechInventoryWindow = [StatusTechniqueInventoryWindow]::new()
    }
    If($Script:GpsRestoredFromStaBackup -EQ $true) {
        $Script:GpsRestoredFromStaBackup = $false
    }
    $Script:TheStatusHudWindow.Draw()
    $Script:TheStatusTechSelectionWindow.Draw()
    $Script:TheStatusTechInventoryWindow.Draw()
    Switch($Script:StatusScreenMode) {
        ([StatusScreenMode]::EquippedTechSelection) {
            If($Script:TheStatusTechSelectionWindow.IsActive -NE $true) {
                $Script:TheStatusTechSelectionWindow.SetAllActionDrawDirty()
                $Script:TheStatusTechSelectionWindow.IsActive = $true
            }
            If($Script:TheStatusTechInventoryWindow.IsActive -NE $false) {
                $Script:TheStatusTechInventoryWindow.IsActive = $false
                $Script:TheStatusTechInventoryWindow.SetFlagsDirty()
            }
            $Script:TheStatusTechSelectionWindow.PlayerChevronDirty = $true # Now the redraw should work... hopefully
            $Script:TheStatusTechSelectionWindow.Draw() # See if this trips the Chevron color change; didn't work :'(
            $Script:TheStatusTechInventoryWindow.Draw()
            $Script:TheStatusTechSelectionWindow.HandleInput()
            $Script:TheStatusTechSelectionWindow.Draw()
        }

        ([StatusScreenMode]::TechInventorySelection) {
            If($Script:TheStatusTechSelectionWindow.IsActive -NE $false) {
                $Script:TheStatusTechSelectionWindow.IsActive = $false
            }
            If($Script:TheStatusTechInventoryWindow.IsActive -NE $true) {
                $Script:TheStatusTechInventoryWindow.IsActive = $true
            }
            $Script:TheStatusTechSelectionWindow.PlayerChevronDirty = $true # Now the redraw should work... hopefully
            $Script:TheStatusTechSelectionWindow.Draw() # See if this trips the Chevron color change; didn't work :'(
            $Script:TheStatusTechInventoryWindow.Draw()
            $Script:TheStatusTechInventoryWindow.HandleInput()
            $Script:TheStatusTechInventoryWindow.Draw()
        }

        Default {
            # DO NOTHING
            # BECAUSE I'M A FUCKING GENIUS
        }
    }
}

[ScriptBlock]$Script:TheCleanupState = {}





#//////////////////////////////////////////////////////////////////////////////
#
# S02H
#
# THE COMMAND BLOCK TABLE DEFINITIONS
#
#//////////////////////////////////////////////////////////////////////////////
[ScriptBlock]$Script:TheMoveCommand = {
    Param(
        [String]$a0
    )

    If($args.Length -GT 0) {
        $Script:TheMessageWindow.WriteCmdExtraArgsWarning('move', $args)
    }

    If($PSBoundParameters.ContainsKey('a0') -EQ $true) {
        If([String]::IsNullOrEmpty($a0) -EQ $true) {
            $Script:TheCommandWindow.UpdateCommandHistory($false)
            $Script:TheMessageWindow.WriteBadArg0Message('move', '')

            Return
        } Else {
            Switch($a0) {
                { $_ -IEQ 'north' -OR $_ -IEQ 'n' } {
                    $Script:ThePlayer.MapMoveNorth()
                }
    
                { $_ -IEQ 'south' -OR $_ -IEQ 's' } {
                    $Script:ThePlayer.MapMoveSouth()
                }
    
                { $_ -IEQ 'east' -OR $_ -IEQ 'e' } {
                    $Script:ThePlayer.MapMoveEast()
                }
    
                { $_ -IEQ 'west' -OR $_ -IEQ 'w' } {
                    $Script:ThePlayer.MapMoveWest()
                }
    
                Default {
                    $Script:TheCommandWindow.UpdateCommandHistory($false)
                    $Script:TheMessageWindow.WriteBadCommandMessage('move')
    
                    Return
                }
            }
        }
    } Else {
        $Script:TheMessageWindow.WriteBadCommandRetortMessage()
        $Script:TheCommandWindow.UpdateCommandHistory($false)

        Return
    }

    Return
}

[ScriptBlock]$Script:TheLookCommand = {
    If($args.Length -GT 0) {
        $Script:TheMessageWindow.WriteCmdExtraArgsWarning('look', $args)
    }

    $Script:TheCommandWindow.UpdateCommandHistory($true)

    $a = $Script:CurrentMap.GetTileAtPlayerCoordinates().ObjectListing
    $b = 78
    $c = ''
    $f = ''
    $z = 0
    $y = $false

    If($a.Count -LE 0) {
        $Script:TheMessageWindow.WriteMapNoItemsFoundMessage()
        Return
    }
    Foreach($d in $a) {
        If($z -EQ $a.Count - 1) {
            $c += $d.Name
        } Else {
            $c += $d.Name + ', '
        }
        $z++
    }
    $e = $c.Length
    If($e -GT $b) {
        $y = $true
        $c -MATCH '([\s,]+\w+){5}$' | Out-Null
        If($_ -EQ $true) {
            $c = $c -REPLACE '([\s,]+\w+){5}$', ''
            $f = $matches[0].Remove(0, 2)
        }
    }

    $Script:TheMessageWindow.WriteLookMessage($c, $f, $y)

    Return
}

[ScriptBlock]$Script:TheInventoryCommand = {
    If($args.Length -GT 0) {
        $Script:TheMessageWindow.WriteCmdExtraArgsWarning('inventory', $args)
    }

    $Script:TheCommandWindow.UpdateCommandHistory($true)
    $Script:TheBufferManager.CopyActiveToBufferAWithWipe()
    $Script:ThePreviousGlobalGameState = $Script:TheGlobalGameState
    $Script:TheGlobalGameState         = [GameStatePrimary]::InventoryScreen

    Return
}

[ScriptBlock]$Script:TheExamineCommand = {
    Param(
        [String]$a0
    )

    If($args.Length -GT 0) {
        $Script:TheMessageWindow.WriteCmdExtrasArgsWarning('examine', $args)
    }

    If($PSBoundParameters.ContainsKey('a0') -EQ $true) {
        If([String]::IsNullOrEmpty($a0) -EQ $true) {
            $Script:TheCommandWindow.UpdateCommandHistory($false)
            $Script:TheMessageWindow.WriteBadArg0Message('examine', '')

            Return
        } Else {
            Foreach($a in $Script:CurrentMap.GetTileAtPlayerCoordinates().ObjectListing) {
                If($a.Name -IEQ $a0) {
                    $Script:TheCommandWindow.UpdateCommandHistory($true)
                    $Script:TheMessageWindow.WriteItemExamineMessage($a.ExamineString)
    
                    Return
                }
            }
            $Script:TheCommandWindow.UpdateCommandHistory($false)
            $Script:TheMessageWindow.WriteMapInvalidItemMessage($ItemName)
    
            Return
        }
    } Else {
        $Script:TheMessageWindow.WriteBadCommandRetortMessage()
        $Script:TheCommandWindow.UpdateCommandHistory($false)

        Return
    }

    Return
}

[ScriptBlock]$Script:TheGetCommand = {
    Param(
        [String]$a0
    )

    If($args.Length -GT 0) {
        $Script:TheMessageWindow.WriteCmdExtraArgsWarning('get', $args)
    }

    If($PSBoundParameters.ContainsKey('a0') -EQ $true) {
        If([String]::IsNullOrEmpty($a0) -EQ $true) {
            $Script:TheCommandWindow.UpdateCommandHistory($false)
            $Script:TheMessageWindow.WriteBadArg0Message('get', '')

            Return
        } Else {
            $a = $Script:CurrentMap.GetTileAtPlayerCoordinates().ObjectListing

            If($a.Count -LE 0) {
                $Script:TheCommandWindow.UpdateCommandHistory($false)
                $Script:TheMessageWindow.WriteMapNoItemsFoundMessage()

                Return
            }
            Foreach($b in $a) {
                If($b.Name -IEQ $a0) {
                    If($b.CanAddToInventory -EQ $true) {
                        $Script:ThePlayer.Inventory.Add($b) | Out-Null
                        $c = $a.Remove($b) | Out-Null
                        If($c -EQ $false) {
                            Write-Error 'Failed to remove an item from the Map Tile!'

                            Exit
                        } Else {
                            $Script:TheCommandWindow.UpdateCommandHistory($true)
                            $Script:TheMessageWindow.WriteItemTakenMessage($a0)

                            Return
                        }
                    } Else {
                        $Script:TheCommandWindow.UpdateCommandHistory($true)
                        $Script:TheMessageWindow.WriteItemCantTakeMessage($a0)

                        Return
                    }
                }
            }
            $Script:TheCommandWindow.UpdateCommandHistory($false)
            $Script:TheMessageWindow.WriteMapInvalidItemMessage($a0)

            Return
        }
    } Else {
        $Script:TheMessageWindow.WriteBadCommandRetortMessage()
        $Script:TheCommandWindow.UpdateCommandHistory($false)

        Return
    }

    Return
}

[ScriptBlock]$Script:TheUseCommand = {
    Param(
        [String]$a0,
        [String]$a1
    )

    If($args.Length -GT 0) {
        $Script:TheMessageWindow.WriteCmdExtrasArgsWarning('use', $args)
    }

    If(($PSBoundParameters.ContainsKey('a0') -EQ $true) -AND ($PSBoundParameters.ContainsKey('a1') -EQ $true)) {
        If($Script:ThePlayer.IsItemInInventory($a0) -EQ $true) {
            If($Script:CurrentMap.GetTileAtPlayerCoordinates().IsItemInTile($a1) -EQ $true) {
                [MapTileObject]$pi  = $Script:ThePlayer.GetItemReference($a0)
                [MapTileObject]$mti = $Script:CurrentMap.GetTileAtPlayerCoordinates().GetItemReference($a1)

                If($mti.ValidateSourceInFilter($pi.PSTypeNames[0]) -EQ $true) {
                    $Script:TheCommandWindow.UpdateCommandHistory($true)
                    Invoke-Command $mti.Effect -ArgumentList $mti, $pi
                } Else {
                    $Script:TheCommandWindow.UpdateCommandHistory($false)
                    $Script:TheMessageWindow.WriteCantUseItemMessage($a0, $a1)
                }
            } Else {
                If($a1 -IEQ 'self') {
                    [MapTileObject]$pi = $Script:ThePlayer.GetItemReference($a0)

                    # This code is problematic if the filter has no items in it
                    If($Script:ThePlayer.ValidateSourceInFilter($pi.PSTypeNames[0]) -EQ $true) {
                        $Script:TheCommandWindow.UpdateCommandHistory($true)
                        Invoke-Command $pi.Effect -ArgumentList $pi, $Script:ThePlayer
                    } Else {
                        $Script:TheCommandWindow.UpdateCommandHistory($false)
                        $Script:TheMessageWindow.WriteCatUseItemOnSelfMessage($a0)
                    }
                } Else {
                    $Script:TheCommandWindow.UpdateCommandHistory($false)
                    $Script:TheMessageWindow.WriteBadCommandRetortMessage()
                }
            }
        } Else {
            # The item isn't in the Player's Inventory, thus rendering this an inoperable command (despite not being syntactically invalid).
            $Script:TheCommandWindow.UpdateCommandHistory($false)
            $Script:TheMessageWindow.WriteNoItemInInvMessage($a0)

            Return
        }
    } Elseif(($PSBoundParameters.ContainsKey('a0') -EQ $true) -AND ((-NOT $PSBoundParameters.ContainsKey('a1')) -EQ $true)) {
        $Script:TheCommandWindow.UpdateCommandHistory($false)

        If($Script:ThePlayer.IsItemInInventory($a0) -EQ $true) {
            $Script:TheMessageWindow.WriteNoItemTargetMessage($a0)
        } Else {
            $Script:TheMessageWindow.WriteItemUseUnsureMessage($a0)
        }
    } Elseif(((-NOT $PSBoundParameters.ContainsKey('a0')) -EQ $true) -AND ((-NOT $PSBoundParameters.ContainsKey('a1')) -EQ $true)) {
        $Script:TheMessageWindow.WriteBadCommandRetortMessage()
        $Script:TheCommandWindow.UpdateCommandHistory($false)
    }
}

[ScriptBlock]$Script:TheDropCommand = {
    Param(
        [String]$a0
    )

    If($args.Length -GE 1) {
        $Script:TheCommandWindow.UpdateCommandHistory($false)
        $Script:TheMessageWindow.WriteCantDropMultMessage()

        Return
    }

    If($PSBoundParameters.ContainsKey('a0') -EQ $true) {
        If($Script:ThePlayer.IsItemInInventory($a0) -EQ $true) {
            If($Script:ThePlayer.RemoveInventoryItemByName($a0) -EQ [ItemRemovalStatus]::Success) {
                $Script:TheCommandWindow.UpdateCommandHistory($true)
                $Script:TheMessageWindow.WriteItemDroppedMessage($a0)

                Return
            } Else {
                # WARNING
                # At this point, this branch is considered a fatal error
                # There really should be a better way of handling this, however
                Exit
            }
        } Else {
            $Script:TheCommandWindow.UpdateCommandHistory($false)
            $Script:TheMessageWindow.WriteNoItemInInvMessage($a0)

            Return
        }
    } Else {
        $Script:TheMessageWindow.WriteBadCommandRetortMessage()
        $Script:TheCommandWindow.UpdateCommandHistory($false)

        Return
    }
}

[ScriptBlock]$Script:TheStatusCommand = {
    If($args.Length -GT 0) {
        $Script:TheMessageWindow.WriteCmdExtraArgsWarning('use', $args)
    }

    $Script:TheCommandWindow.UpdateCommandHistory($true)
    $Script:TheBufferManager.CopyActiveToBufferAWithWipe()
    $Script:ThePreviousGlobalGameState = $Script:TheGlobalGameState
    $Script:TheGlobalGameState         = [GameStatePrimary]::PlayerStatusScreen
}

[ScriptBlock]$Script:TheEnterCommand = {
    If($args.Length -GT 0) {
        $Script:TheMessageWindow.WriteCmdExtraArgsWarning('enter', $args)
    }

    $a = $Script:CurrentMap.GetTileAtPlayerCoordinates().ObjectListing

    If($a.Count -LE 0) {
        $Script:TheCommandWindow.UpdateCommandHistory($false)

        # THIS MAY NEED MODIFIED TO A DIFFERENT METHOD CALL GIVEN THE NATURE
        # OF THE ACTION.
        $Script:TheMessageWindow.WriteMapNoItemsFoundMessage()

        Return
    }

    Foreach($b in $a) {
        # THIS COULD BE PROBLEMATIC IF THERE ARE MULTIPLE WARPABLE ITEMS ON A SINGLE TILE
        # BUT REALLY? WHY?
        If($b -IS [MTOWarpable]) {
            # ASIDE FROM THE OTHER WAYS IN WHICH WARPABLES DIFFER FROM THEIR OTHER MTO
            # CONTEMPORARIES IS THAT THEY DON'T MAKE USE OF THE MTO TARGET OF FILTER.
            # WE'RE JUST GOING TO INVOKE THE EFFECT METHOD, WHICH WOULD BE THE MAP
            # WARPING FUNCTION.
            $Script:TheCommandWindow.UpdateCommandHistory($true)
            Invoke-Command $b.Effect -ArgumentList $b.WarpToReference.Value, $b.WarpToX, $b.WarpToY

            # I MAY ALSO WANT TO WRITE A MESSAGE TO THE MESSAGE WINDOW ABOUT HAVING
            # ENTERED A MAP? I'LL LEAVE THIS AS A TODO HERE.

            $Script:TheSceneWindow.UpdateCurrentImage($Script:CurrentMap.GetTileAtPlayerCoordinates().BackgroundImage)
            
            # THIS NEXT PART IS LIKELY SUBJECT TO CHANGE BECAUSE IT WOULD IMPLY THAT
            # BATTLES CAN OCCUR ON THE WARPING TILES, AND THIS MAY NOT MAKE MUCH SENSE
            $Script:CurrentMap.GetTileAtPlayerCoordinates().BattleStep()

            Return
        }
    }

    # THERE ARE NO WARPABLE INSTANCES ON THIS TILE, REPORT TO THE MESSAGE WINDOW
    $Script:TheCommandWindow.UpdateCommandHistory($false)
    $Script:TheMessageWindow.WriteBadCommandRetortMessage()
}




#//////////////////////////////////////////////////////////////////////////////
#
# S02I
#
# THE COMMAND TABLE DEFINITION
#
#//////////////////////////////////////////////////////////////////////////////
$Script:TheCommandTable = @{
    'move'      = $Script:TheMoveCommand
    'm'         = $Script:TheMoveCommand
    'look'      = $Script:TheLookCommand
    'l'         = $Script:TheLookCommand
    'inventory' = $Script:TheInventoryCommand
    'i'         = $Script:TheInventoryCommand
    'inv'       = $Script:TheInventoryCommand
    'examine'   = $Script:TheExamineCommand
    'exa'       = $Script:TheExamineCommand
    'get'       = $Script:TheGetCommand
    'g'         = $Script:TheGetCommand
    'take'      = $Script:TheGetCommand
    't'         = $Script:TheGetCommand
    'use'       = $Script:TheUseCommand
    'u'         = $Script:TheUseCommand
    'drop'      = $Script:TheDropCommand
    'd'         = $Script:TheDropCommand
    'status'    = $Script:TheStatusCommand
    'sta'       = $Script:TheStatusCommand
    'enter'     = $Script:TheEnterCommand
    'en'        = $Script:TheEnterCommand
    'exit'      = $Script:TheEnterCommand
    'ex'        = $Script:TheEnterCommand
}





#//////////////////////////////////////////////////////////////////////////////
#
# S02J
#
# THE BATTLE ACTION DAMAGE CALCULATOR FUNCTION DEFINITION
#
#//////////////////////////////////////////////////////////////////////////////
[ScriptBlock]$Script:BaCalc = {
    Param(
        [BattleEntity]$Self,
        [BattleEntity]$Target,
        [BattleAction]$SelfAction
    )

    [Boolean]$CanExecute   = $false
    [Boolean]$ReduceSelfMp = $false

    If($SelfAction.MpCost -GT 0) {
        If($Self.Stats[[StatId]::MagicPoints].Base -GE $SelfAction.MpCost) {
            $CanExecute   = $true
            $ReduceSelfMp = $true
        }
    } Elseif($SelfAction.MpCost -LE 0) {
        $CanExecute = $true
    }

    If($CanExecute -EQ $true) {
        If($ReduceSelfMp -EQ $true) {
            [Int]$DecRes = $Self.Stats[[StatId]::MagicPoints].DecrementBase($SelfAction.MpCost * -1)
            If($Self -IS [Player]) {
                $Script:ThePlayerBattleStatWindow.MpDrawDirty = $true
            } Else {
                $Script:TheEnemyBattleStatWindow.MpDrawDirty = $true
            }
        }

        $ExecuteChance = Get-Random -Minimum 0.0 -Maximum 1.0
        If($ExecuteChance -GT $SelfAction.Chance) {
            Return [BattleActionResult]@{
                Type            = [BattleActionResultType]::FailedAttackFailed
                Originator      = $Self
                Target          = $Target
                ActionEffectSum = 0
            }
        }

        $TargetEffectiveEvasion = [Math]::Round((0.1 + ($Target.Stats[[StatId]::Speed].Base * (Get-Random -Minimum 0.001 -Maximum 0.003))) * 100)
        $EvRandFactor           = Get-Random -Minimum 1 -Maximum 100
        If($EvRandFactor -LE $TargetEffectiveEvasion) {
            Return [BattleActionResult]@{
                Type            = [BattleActionResultType]::FailedAttackMissed
                Originator      = $Self
                Target          = $Target
                ActionEffectSum = 0
            }
        }

        $EffectiveDamageP1 = [Math]::Round([Math]::Abs(
            $SelfAction.EffectValue * (
                ($Self.Stats[[StatId]::Attack].Base - $Target.Stats[[StatId]::Defense].Base) *
                (1 + ($Self.Stats[[StatId]::Luck].Base - $Target.Stats[[StatId]::Luck].Base))
            ) * (Get-Random -Minimum 0.07 -Maximum 0.15)
        ))
        $EffectiveDamageCritFactor     = 1.0
        $EffectiveDamageAffinityFactor = 1.0

        $CriticalChance = Get-Random -Minimum 1 -Maximum 1000
        If($CriticalChance -LE $Self.Stats[[StatId]::Luck].Base) {
            $EffectiveDamageCritFactor = 1.5
        }

        $EffectiveDamageAffinityFactor = $Script:BATLut[$SelfAction.Type][$Target.Affinity]

        $FinalDamage = [Math]::Round($EffectiveDamageP1 * $EffectiveDamageCritFactor * $EffectiveDamageAffinityFactor)

        [Int]$DecRes = $Target.Stats[[StatId]::HitPoints].DecrementBase(($FinalDamage * -1))

        If(0 -NE $DecRes) {
            Return [BattleActionResultType]@{
                Type            = [BattleActionResultType]::FailedAttackFailed
                Originator      = $Self
                Target          = $Target
                ActionEffectSum = $FinalDamage
            }
        } Else {
            If($Target -IS [Player]) {
                $Script:ThePlayerBattleStatWindow.HpDrawDirty = $true
            } Else {
                $Script:TheEnemyBattleStatWindow.HpDrawDirty = $true
            }

            If($EffectiveDamageCritFactor -GT 1.0 -AND $EffectiveDamageAffinityFactor -EQ 1.0) {
                Return [BattleActionResult]@{
                    Type            = [BattleActionResultType]::SuccessWithCritical
                    Originator      = $Self
                    Target          = $Target
                    ActionEffectSum = $FinalDamage
                }
            } Elseif($EffectiveDamageCritFactor -EQ 1.0 -AND $EffectiveDamageAffinityFactor -GT 1.0) {
                Return [BattleActionResult]@{
                    Type            = [BattleActionResultType]::SuccessWithAffinityBonus
                    Originator      = $Self
                    Target          = $Target
                    ActionEffectSum = $FinalDamage
                }
            } Elseif($EffectiveDamageCritFactor -GT 1.0 -AND $EffectiveDamageAffinityFactor -GT 1.0) {
                Return [BattleActionResult]@{
                    Type            = [BattleActionResultType]::SuccessWithCritAndAffinityBonus
                    Originator      = $Self
                    Target          = $Target
                    ActionEffectSum = $FinalDamage
                }
            }

            Return [BattleActionResult]@{
                Type            = [BattleActionResultType]::Success
                Originator      = $Self
                Target          = $Target
                ActionEffectSum = $FinalDamage
            }
        }
    } Else {
        Return [BattleActionResult]@{
            Type            = [BattleActionResultType]::FailedNoUsesRemaining
            Originator      = $Self
            Target          = $Target
            ActionEffectSum = 0
        }
    }
}





#//////////////////////////////////////////////////////////////////////////////
#
# S02K
#
# THE PLAYER'S DEFINITION
#
#//////////////////////////////////////////////////////////////////////////////
[Player]$Script:ThePlayer = [Player]@{
    Name  = 'Steve'
    Stats = @{
        [StatId]::HitPoints = [BattleEntityProperty]@{
            Base                = 1000
            Max                 = 1000
            ValidateFunction    = {
                Param(
                    [BattleEntityProperty]$Self
                )
                
                Switch($Self.Base) {
                    { $_ -GT ($Self.Max * [BattleEntityProperty]::StatNumThresholdCaution) } {
                        $Self.State = [StatNumberState]::Normal
                        Return
                    }

                    { ($_ -GT ($Self.Max * [BattleEntityProperty]::StatNumThresholdDanger)) -AND ($_ -LT ($Self.Max * [BattleEntityProperty]::StatNumThresholdCaution)) } {
                        $Self.State = [StatNumberState]::Caution
                        Return
                    }

                    { $_ -LT ($Self.Max * [BattleEntityProperty]::StatNumThresholdDanger) } {
                        $Self.State = [StatNumberState]::Danger
                        Return
                    }
                }
            }
        }
        [StatId]::MagicPoints = [BattleEntityProperty]@{
            Base                = 500
            Max                 = 500
            ValidateFunction    = {
                Param(
                    [BattleEntityProperty]$Self
                )
                
                Switch($Self.Base) {
                    { $_ -GT ($Self.Max * [BattleEntityProperty]::StatNumThresholdCaution) } {
                        $Self.State = [StatNumberState]::Normal
                        Return
                    }

                    { ($_ -GT ($Self.Max * [BattleEntityProperty]::StatNumThresholdDanger)) -AND ($_ -LT ($Self.Max * [BattleEntityProperty]::StatNumThresholdCaution)) } {
                        $Self.State = [StatNumberState]::Caution
                        Return
                    }

                    { $_ -LT ($Self.Max * [BattleEntityProperty]::StatNumThresholdDanger) } {
                        $Self.State = [StatNumberState]::Danger
                        Return
                    }
                }
            }
        }
        [StatId]::Attack = [BattleEntityProperty]@{
            Base                = 25
            BasePre             = 25
            BaseAugmentValue    = 5
            Max                 = 15
            MaxPre              = 15
            MaxAugmentValue     = 0
            AugmentTurnDuration = 2
            ValidateFunction    = {
                Param(
                    [BattleEntityProperty]$Self
                )
                
                Return $Self.Base
            }
        }
        [StatId]::Defense = [BattleEntityProperty]@{
            Base                = 8
            Max                 = 8
            ValidateFunction    = {
                Param(
                    [BattleEntityProperty]$Self
                )
                
                Return
            }
        }
        [StatId]::MagicAttack = [BattleEntityProperty]@{
            Base                = 6
            Max                 = 6
            ValidateFunction    = {
                Param(
                    [BattleEntityProperty]$Self
                )
                
                Return
            }
        }
        [StatId]::MagicDefense = [BattleEntityProperty]@{
            Base                = 4
            Max                 = 4
            ValidateFunction    = {
                Param(
                    [BattleEntityProperty]$Self
                )
                
                Return
            }
        }
        [StatId]::Speed = [BattleEntityProperty]@{
            Base                = 9
            Max                 = 9
            ValidateFunction    = {
                Param(
                    [BattleEntityProperty]$Self
                )
                
                Return
            }
        }
        [StatId]::Luck = [BattleEntityProperty]@{
            Base                = 5
            Max                 = 5
            ValidateFunction    = {
                Param(
                    [BattleEntityProperty]$Self
                )
                
                Return
            }
        }
        [StatId]::Accuracy = [BattleEntityProperty]@{
            Base                = 9
            BaseAugmentValue    = -5
            Max                 = 9
            AugmentTurnDuration = 2
            ValidateFunction    = {
                Param(
                    [BattleEntityProperty]$Self
                )
                
                Return
            }
        }
    }
    ActionListing = @{
        [ActionSlot]::A = [BAPunch]::new()
        [ActionSlot]::B = [BAKick]::new()
        [ActionSlot]::C = [BAFlamePunch]::new()
        [ActionSlot]::D = [BAIKill]::new()
    }
    SpoilsEffect    = {}
    ActionMarbleBag = @()
    CurrentGold     = 500
    Affinity        = [BattleActionType]::ElementalFire
}





#//////////////////////////////////////////////////////////////////////////////
#
# S02L
#
# THE GLOBAL STATE BLOCK DEFINITION
#
#//////////////////////////////////////////////////////////////////////////////
$Script:TheGlobalStateBlockTable = @{
    [GameStatePrimary]::SplashScreenA      = $Script:TheSplashScreenAState
    [GameStatePrimary]::SplashScreenB      = $Script:TheSplashScreenBState
    [GameStatePrimary]::TitleScreen        = $Script:TheTitleScreenState
    [GameStatePrimary]::PlayerSetupScreen  = $Script:ThePlayerSetupState
    [GameStatePrimary]::GamePlayScreen     = $Script:TheGamePlayScreenState
    [GameStatePrimary]::InventoryScreen    = $Script:TheInventoryScreenState
    [GameStatePrimary]::BattleScreen       = $Script:TheBattleScreenState
    [GameStatePrimary]::PlayerStatusScreen = $Script:ThePlayerStatusScreenState
    [GameStatePrimary]::Cleanup            = $Script:TheCleanupState
}










###############################################################################
#
# S03
#
# 24-BIT CONSOLE COLOR DEFINITIONS
#
###############################################################################
Class ConsoleColor24 {
    [ValidateRange(0, 255)][Int]$Red
    [ValidateRange(0, 255)][Int]$Green
    [ValidateRange(0, 255)][Int]$Blue

    ConsoleColor24(
        [Int]$Red,
        [Int]$Green,
        [Int]$Blue
    ) {
        $this.Red   = $Red
        $this.Green = $Green
        $this.Blue  = $Blue
    }
}





#//////////////////////////////////////////////////////////////////////////////
#
# CONSOLE COLOR 24 SPECIALIZATIONS
#
#//////////////////////////////////////////////////////////////////////////////
Class CCBlack24 : ConsoleColor24 {
    CCBlack24() : base(0, 0, 0) {}
}

Class CCWhite24 : ConsoleColor24 {
    CCWhite24() : base(255, 255, 255) {}
}

Class CCRed24 : ConsoleColor24 {
    CCRed24() : base(255, 0, 0) {}
}

Class CCGreen24 : ConsoleColor24 {
    CCGreen24() : base(0, 255, 0) {}
}

Class CCBlue24 : ConsoleColor24 {
    CCBlue24() : base (0, 0, 255) {}
}

Class CCYellow24 : ConsoleColor24 {
    CCYellow24() : base(255, 255, 0) {}
}

Class CCDarkYellow24 : ConsoleColor24 {
    CCDarkYellow24() : base(255, 204, 0) {}
}

Class CCDarkCyan24 : ConsoleColor24 {
    CCDarkCyan24() : base(0, 139, 139) {}
}

Class CCDarkGrey24 : ConsoleColor24 {
    CCDarkGrey24() : base(45, 45, 45) {}
}

Class CCRandom24 : ConsoleColor24 {
    CCRandom24() : base($(Get-Random -Maximum 255 -Minimum 0), $(Get-Random -Maximum 255 -Minimum 0), $(Get-Random -Maximum 255 -Minimum 0)) {}
}

Class CCAppleRedLight24 : ConsoleColor24 {
    CCAppleRedLight24() : base(255, 59, 48) {}
}

Class CCAppleRedDark24 : ConsoleColor24 {
    CCAppleRedDark24() : base(255, 69, 58) {}
}

Class CCAppleOrangeLight24 : ConsoleColor24 {
    CCAppleOrangeLight24() : base(255, 149, 0) {}
}

Class CCAppleOrangeDark24 : ConsoleColor24 {
    CCAppleOrangeDark24() : base(255, 159, 10) {}
}

Class CCAppleYellowLight24 : ConsoleColor24 {
    CCAppleYellowLight24() : base(255, 204, 0) {}
}

Class CCAppleYellowDark24 : ConsoleColor24 {
    CCAppleYellowDark24() : base(255, 214, 10) {}
}

Class CCAppleGreenLight24 : ConsoleColor24 {
    CCAppleGreenLight24() : base(52, 199, 89) {}
}

Class CCAppleGreenDark24 : ConsoleColor24 {
    CCAppleGreenDark24() : base(48, 209, 88) {}
}

Class CCAppleMintLight24 : ConsoleColor24 {
    CCAppleMintLight24() : base(0, 199, 190) {}
}

Class CCAppleMintDark24 : ConsoleColor24 {
    CCAppleMintDark24() : base(99, 230, 226) {}
}

Class CCAppleTealLight24 : ConsoleColor24 {
    CCAppleTealLight24() : base(48, 176, 199) {}
}

Class CCAppleTealDark24 : ConsoleColor24 {
    CCAppleTealDark24() : base(64, 200, 224) {}
}

Class CCAppleCyanLight24 : ConsoleColor24 {
    CCAppleCyanLight24() : base(50, 173, 230) {}
}

Class CCAppleCyanDark24 : ConsoleColor24 {
    CCAppleCyanDark24() : base(100, 210, 255) {}
}

Class CCAppleBlueLight24 : ConsoleColor24 {
    CCAppleBlueLight24() : base(0, 122, 255) {}
}

Class CCAppleBlueDark24 : ConsoleColor24 {
    CCAppleBlueDark24() : base(10, 132, 255) {}
}

Class CCAppleIndigoLight24 : ConsoleColor24 {
    CCAppleIndigoLight24() : base(88, 86, 214) {}
}

Class CCAppleIndigoDark24 : ConsoleColor24 {
    CCAppleIndigoDark24() : base(94, 92, 230) {}
}

Class CCApplePurpleLight24 : ConsoleColor24 {
    CCApplePurpleLight24() : base(175, 82, 222) {}
}

Class CCApplePurpleDark24 : ConsoleColor24 {
    CCApplePurpleDark24() : base(191, 90, 242) {}
}

Class CCApplePinkLight24 : ConsoleColor24 {
    CCApplePinkLight24() : base(255, 45, 85) {}
}

Class CCApplePinkDark24 : ConsoleColor24 {
    CCApplePinkDark24() : base(255, 55, 95) {}
}

Class CCAppleBrownLight24 : ConsoleColor24 {
    CCAppleBrownLight24() : base(162, 132, 94) {}
}

Class CCAppleBrownDark24 : ConsoleColor24 {
    CCAppleBrownDark24() : base(172, 142, 104) {}
}

Class CCAppleGrey1Light24 : ConsoleColor24 {
    CCAppleGrey1Light24() : base(142, 142, 147) {}
}

Class CCAppleGrey1Dark24 : ConsoleColor24 {
    CCAppleGrey1Dark24() : base(142, 142, 147) {}
}

Class CCAppleGrey2Light24 : ConsoleColor24 {
    CCAppleGrey2Light24() : base(174, 174, 178) {}
}

Class CCAppleGrey2Dark24 : ConsoleColor24 {
    CCAppleGrey2Dark24() : base(99, 99, 102) {}
}

Class CCAppleGrey3Light24 : ConsoleColor24 {
    CCAppleGrey3Light24() : base(199, 199, 204) {}
}

Class CCAppleGrey3Dark24 : ConsoleColor24 {
    CCAppleGrey3Dark24() : base(72, 72, 74) {}
}

Class CCAppleGrey4Light24 : ConsoleColor24 {
    CCAppleGrey4Light24() : base(209, 209, 214) {}
}

Class CCAppleGrey4Dark24 : ConsoleColor24 {
    CCAppleGrey4Dark24() : base(58, 58, 60) {}
}

Class CCAppleGrey5Light24 : ConsoleColor24 {
    CCAppleGrey5Light24() : base(229, 229, 234) {}
}

Class CCAppleGrey5Dark24 : ConsoleColor24 {
    CCAppleGrey5Dark24() : base(44, 44, 46) {}
}

Class CCAppleGrey6Light24 : ConsoleColor24 {
    CCAppleGrey6Light24() : base(242, 242, 247) {}
}

Class CCAppleGrey6Dark24 : ConsoleColor24 {
    CCAppleGrey6Dark24() : base(28, 28, 30) {}
}

<#
https://www.pantone.com/connect/14-4318-TCX
#>
Class CCPantoneSkyBlue24 : ConsoleColor24 {
    CCPantoneSkyBlue24() : base(54, 73, 83) {}
}
<#
https://www.pantone.com/connect/15-6322-TPX
#>
Class CCPantoneLightGrassGreen24 : ConsoleColor24 {
    CCPantoneLightGrassGreen24() : base(49, 70, 53) {}
}

<#
https://www.pantone.com/connect/19-1218-TCX
#>
Class CCPantonePottingSoil24 : ConsoleColor24 {
    CCPantonePottingSoil24() : base(33, 22, 18) {}
}

<# COLOR VARIATIONS RECENTLY UPDATED FROM APPLE'S DOCUMENTATION #>
<# https://developer.apple.com/design/human-interface-guidelines/color#Specifications #>

Class CCAppleNRedLight24 : ConsoleColor24 {
    CCAppleNRedLight24() : base(255, 59, 48) {}
}

Class CCAppleNRedDark24 : ConsoleColor24 {
    CCAppleNRedDark24() : base(255, 69, 58) {}
}

Class CCAppleNRedALight24 : ConsoleColor24 {
    CCAppleNRedALight24() : base(215, 0, 21) {}
}

Class CCAppleNRedADark24 : ConsoleColor24 {
    CCAppleNRedADark24() : base(255, 105, 97) {}
}

Class CCAppleNOrangeLight24 : ConsoleColor24 {
    CCAppleNOrangeLight24() : base(255, 149, 0) {}
}

Class CCAppleNOrangeDark24 : ConsoleColor24 {
    CCAppleNOrangeDark24() : base(255, 159, 10) {}
}

Class CCAppleNOrangeALight24 : ConsoleColor24 {
    CCAppleNOrangeALight24() : base(201, 52, 0) {}
}

Class CCAppleNOrangeADark24 : ConsoleColor24 {
    CCAppleNOrangeADark24() : base(255, 179, 64) {}
}

Class CCAppleNYellowLight24 : ConsoleColor24 {
    CCAppleNYellowLight24() : base(255, 204, 0) {}
}

Class CCAppleNYellowDark24 : ConsoleColor24 {
    CCAppleNYellowDark24() : base(255, 214, 10) {}
}

Class CCAppleNYellowALight24 : ConsoleColor24 {
    CCAppleNYellowALight24() : base(178, 80, 0) {}
}

Class CCAppleNYellowADark24 : ConsoleColor24 {
    CCAppleNYellowADark24() : base(255, 212, 38) {}
}

Class CCAppleNGreenLight24 : ConsoleColor24 {
    CCAppleNGreenLight24() : base(52, 199, 89) {}
}

Class CCAppleNGreenDark24 : ConsoleColor24 {
    CCAppleNGreenDark24() : base(48, 209, 88) {}
}

Class CCAppleNGreenALight24 : ConsoleColor24 {
    CCAppleNGreenALight24() : base(36, 138, 61) {}
}

Class CCAppleNGreenADark24 : ConsoleColor24 {
    CCAppleNGreenADark24() : base(48, 219, 91) {}
}

Class CCAppleNMintLight24 : ConsoleColor24 {
    CCAppleNMintLight24() : base(0, 199, 190) {}
}

Class CCAppleNMintDark24 : ConsoleColor24 {
    CCAppleNMintDark24() : base(99, 230, 226) {}
}

Class CCAppleNMintALight24 : ConsoleColor24 {
    CCAppleNMintALight24() : base(12, 129, 123) {}
}

Class CCAppleNMintADark24 : ConsoleColor24 {
    CCAppleNMintADark24() : base(102, 212, 207) {}
}

Class CCAppleNTealLight24 : ConsoleColor24 {
    CCAppleNTealLight24() : base(48, 176, 199) {}
}

Class CCAppleNTealDark24 : ConsoleColor24 {
    CCAppleNTealDark24() : base(64, 200, 224) {}
}

Class CCAppleNTealALight24 : ConsoleColor24 {
    CCAppleNTealALight24() : base(0, 130, 153) {}
}

Class CCAppleNTealADark24 : ConsoleColor24 {
    CCAppleNTealADark24() : base(93, 230, 255) {}
}

Class CCAppleNCyanLight24 : ConsoleColor24 {
    CCAppleNCyanLight24() : base(50, 173, 230) {}
}

Class CCAppleNCyanDark24 : ConsoleColor24 {
    CCAppleNCyanDark24() : base(100, 210, 255) {}
}

Class CCAppleNCyanALight24 : ConsoleColor24 {
    CCAppleNCyanALight24() : base(0, 113, 164) {}
}

Class CCAppleNCyanADark24 : ConsoleColor24 {
    CCAppleNCyanADark24() : base(112, 215, 255) {}
}

Class CCAppleNBlueLight24 : ConsoleColor24 {
    CCAppleNBlueLight24() : base(0, 122, 255) {}
}

Class CCAppleNBlueDark24 : ConsoleColor24 {
    CCAppleNBlueDark24() : base(10, 132, 255) {}
}

Class CCAppleNBlueALight24 : ConsoleColor24 {
    CCAppleNBlueALight24() : base(0, 64, 221) {}
}

Class CCAppleNBlueADark24 : ConsoleColor24 {
    CCAppleNBlueADark24() : base(64, 156, 255) {}
}

Class CCAppleNIndigoLight24 : ConsoleColor24 {
    CCAppleNIndigoLight24() : base(88, 86, 214) {}
}

Class CCAppleNIndigoDark24 : ConsoleColor24 {
    CCAppleNIndigoDark24() : base(94, 92, 230) {}
}

Class CCAppleNIndigoALight24 : ConsoleColor24 {
    CCAppleNIndigoALight24() : base(54, 52, 163) {}
}

Class CCAppleNIndigoADark24 : ConsoleColor24 {
    CCAppleNIndigoADark24() : base(125, 122, 255) {}
}

Class CCAppleNPurpleLight24 : ConsoleColor24 {
    CCAppleNPurpleLight24() : base(175, 82, 222) {}
}

Class CCAppleNPurpleDark24 : ConsoleColor24 {
    CCAppleNPurpleDark24() : base(191, 90, 242) {}
}

Class CCAppleNPurpleALight24 : ConsoleColor24 {
    CCAppleNPurpleALight24() : base(137, 68, 171) {}
}

Class CCAppleNPurpleADark24 : ConsoleColor24 {
    CCAppleNPurpleADark24() : base(218, 143, 255) {}
}

Class CCAppleNPinkLight24 : ConsoleColor24 {
    CCAppleNPinkLight24() : base(255, 45, 85) {}
}

Class CCAppleNPinkDark24 : ConsoleColor24 {
    CCAppleNPinkDark24() : base(255, 55, 95) {}
}

Class CCAppleNPinkALight24 : ConsoleColor24 {
    CCAppleNPinkALight24() : base(211, 15, 69) {}
}

Class CCAppleNPinkADark24 : ConsoleColor24 {
    CCAppleNPinkADark24() : base(255, 100, 130) {}
}

Class CCAppleNBrownLight24 : ConsoleColor24 {
    CCAppleNBrownLight24() : base(162, 132, 94) {}
}

Class CCAppleNBrownDark24 : ConsoleColor24 {
    CCAppleNBrownDark24() : base(172, 142, 104) {}
}

Class CCAppleNBrownALight24 : ConsoleColor24 {
    CCAppleNBrownALight24() : base(127, 101, 69) {}
}

Class CCAppleNBrownADark24 : ConsoleColor24 {
    CCAppleNBrownADark24() : base(181, 148, 105) {}
}

Class CCAppleNGreyLight24 : ConsoleColor24 {
    CCAppleNGreyLight24() : base(142, 142, 147) {}
}

Class CCAppleNGreyDark24 : ConsoleColor24 {
    CCAppleNGreyDark24() : base(142, 142, 147) {}
}

Class CCAppleNGreyALight24 : ConsoleColor24 {
    CCAppleNGreyALight24() : base(108, 108, 112) {}
}

Class CCAppleNGreyADark24 : ConsoleColor24 {
    CCAppleNGreyADark24() : base(174, 174, 178) {}
}

Class CCAppleNGrey2Light24 : ConsoleColor24 {
    CCAppleNGrey2Light24() : base(174, 174, 178) {}
}

Class CCAppleNGrey2Dark24 : ConsoleColor24 {
    CCAppleNGrey2Dark24() : base(99, 99, 102) {}
}

Class CCAppleNGrey2ALight24 : ConsoleColor24 {
    CCAppleNGrey2ALight24() : base(142, 142, 147) {}
}

Class CCAppleNGrey2ADark24 : ConsoleColor24 {
    CCAppleNGrey2ADark24() : base(124, 124, 128) {}
}

Class CCAppleNGrey3Light24 : ConsoleColor24 {
    CCAppleNGrey3Light24() : base(199, 199, 204) {}
}

Class CCAppleNGrey3Dark24 : ConsoleColor24 {
    CCAppleNGrey3Dark24() : base(72, 72, 74) {}
}

Class CCAppleNGrey4ALight24 : ConsoleColor24 {
    CCAppleNGrey4ALight24() : base(188, 188, 192) {}
}

Class CCAppleNGrey4ADark24 : ConsoleColor24 {
    CCAppleNGrey4ADark24() : base(68, 68, 70) {}
}

Class CCAppleNGrey5Light24 : ConsoleColor24 {
    CCAppleNGrey5Light24() : base(229, 229, 234) {}
}

Class CCAppleNGrey5Dark24 : ConsoleColor24 {
    CCAppleNGrey5Dark24() : base(44, 44, 46) {}
}

Class CCAppleNGrey5ALight24 : ConsoleColor24 {
    CCAppleNGrey5ALight24() : base(216, 216, 220) {}
}

Class CCAppleNGrey5ADark24 : ConsoleColor24 {
    CCAppleNGrey5ADark24() : base(54, 54, 56) {}
}

Class CCAppleNGrey6Light24 : ConsoleColor24 {
    CCAppleNGrey6Light24() : base(242, 242, 247) {}
}

Class CCAppleNGrey6Dark24 : ConsoleColor24 {
    CCAppleNGrey6Dark24() : base(28, 28, 30) {}
}

Class CCAppleNGrey6ALight24 : ConsoleColor24 {
    CCAppleNGrey6ALight24() : base(235, 235, 240) {}
}

Class CCAppleNGrey6ADark24 : ConsoleColor24 {
    CCAppleNGrey6ADark24() : base(36, 36, 38) {}
}

Class CCAppleVRedLight24 : ConsoleColor24 {
    CCAppleVRedLight24() : base(255, 49, 38) {}
}

Class CCAppleVRedDark24 : ConsoleColor24 {
    CCAppleVRedDark24() : base(255, 79, 68) {}
}

Class CCAppleVRedALight24 : ConsoleColor24 {
    CCAppleVRedALight24() : base(194, 6, 24) {}
}

Class CCAppleVRedADark24 : ConsoleColor24 {
    CCAppleVRedADark24() : base(255, 65, 54) {}
}

Class CCAppleVOrangeLight24 : ConsoleColor24 {
    CCAppleVOrangeLight24() : base(245, 139, 0) {}
}

Class CCAppleVOrangeDark24 : ConsoleColor24 {
    CCAppleVOrangeDark24() : base(255, 169, 20) {}
}

Class CCAppleVOrangeALight24 : ConsoleColor24 {
    CCAppleVOrangeALight24() : base(173, 58, 0) {}
}

Class CCAppleVOrangeADark24 : ConsoleColor24 {
    CCAppleVOrangeADark24() : base(255, 179, 64) {}
}

Class CCAppleVYellowLight24 : ConsoleColor24 {
    CCAppleVYellowLight24() : base(245, 194, 0) {}
}

Class CCAppleVYellowDark24 : ConsoleColor24 {
    CCAppleVYellowDark24() : base(255, 224, 20) {}
}

Class CCAppleVYellowALight24 : ConsoleColor24 {
    CCAppleVYellowALight24() : base(146, 81, 0) {}
}

Class CCAppleVYellowADark24 : ConsoleColor24 {
    CCAppleVYellowADark24() : base(255, 212, 38) {}
}

Class CCAppleVGreenLight24 : ConsoleColor24 {
    CCAppleVGreenLight24() : base(30, 195, 55) {}
}

Class CCAppleVGreenDark24 : ConsoleColor24 {
    CCAppleVGreenDark24() : base(60, 225, 85) {}
}

Class CCAppleVGreenALight24 : ConsoleColor24 {
    CCAppleVGreenALight24() : base(0, 112, 24) {}
}

Class CCAppleVGreenADark24 : ConsoleColor24 {
    CCAppleVGreenADark24() : base(49, 222, 75) {}
}

Class CCAppleVMintLight24 : ConsoleColor24 {
    CCAppleVMintLight24() : base(0, 189, 180) {}
}

Class CCAppleVMintDark24 : ConsoleColor24 {
    CCAppleVMintDark24() : base(108, 224, 219) {}
}

Class CCAppleVMintALight24 : ConsoleColor24 {
    CCAppleVMintALight24() : base(11, 117, 112) {}
}

Class CCAppleVMintADark24 : ConsoleColor24 {
    CCAppleVMintADark24() : base(49, 222, 75) {}
}

Class CCAppleVTealLight24 : ConsoleColor24 {
    CCAppleVTealLight24() : base(46, 167, 189) {}
}

Class CCAppleVTealDark24 : ConsoleColor24 {
    CCAppleVTealDark24() : base(68, 212, 237) {}
}

Class CCAppleVTealALight24 : ConsoleColor24 {
    CCAppleVTealALight24() : base(0, 119, 140) {}
}

Class CCAppleVTealADark24 : ConsoleColor24 {
    CCAppleVTealADark24() : base(93, 230, 255) {}
}

Class CCAppleVCyanLight24 : ConsoleColor24 {
    CCAppleVCyanLight24() : base(65, 175, 220) {}
}

Class CCAppleVCyanDark24 : ConsoleColor24 {
    CCAppleVCyanDark24() : base(90, 205, 250) {}
}

Class CCAppleVCyanALight24 : ConsoleColor24 {
    CCAppleVCyanALight24() : base(0, 103, 150) {}
}

Class CCAppleVCyanADark24 : ConsoleColor24 {
    CCAppleVCyanADark24() : base(112, 215, 255) {}
}

Class CCAppleVBlueLight24 : ConsoleColor24 {
    CCAppleVBlueLight24() : base(0, 122, 245) {}
}

Class CCAppleVBlueDark24 : ConsoleColor24 {
    CCAppleVBlueDark24() : base(20, 142, 255) {}
}

Class CCAppleVBlueALight24 : ConsoleColor24 {
    CCAppleVBlueALight24() : base(0, 64, 221) {}
}

Class CCAppleVBlueADark24 : ConsoleColor24 {
    CCAppleVBlueADark24() : base(64, 156, 255) {}
}

Class CCAppleVIndigoLight24 : ConsoleColor24 {
    CCAppleVIndigoLight24() : base(84, 82, 204) {}
}

Class CCAppleVIndigoDark24 : ConsoleColor24 {
    CCAppleVIndigoDark24() : base(99, 97, 242) {}
}

Class CCAppleVIndigoALight24 : ConsoleColor24 {
    CCAppleVIndigoALight24() : base(54, 52, 163) {}
}

Class CCAppleVIndigoADark24 : ConsoleColor24 {
    CCAppleVIndigoADark24() : base(125, 122, 255) {}
}

Class CCAppleVPurpleLight24 : ConsoleColor24 {
    CCAppleVPurpleLight24() : base(159, 75, 201) {}
}

Class CCAppleVPurpleDark24 : ConsoleColor24 {
    CCAppleVPurpleDark24() : base(204, 101, 255) {}
}

Class CCAppleVPurpleALight24 : ConsoleColor24 {
    CCAppleVPurpleALight24() : base(173, 68, 171) {}
}

Class CCAppleVPurpleADark24 : ConsoleColor24 {
    CCAppleVPurpleADark24() : base(218, 143, 255) {}
}

Class CCAppleVPinkLight24 : ConsoleColor24 {
    CCAppleVPinkLight24() : base(245, 35, 75) {}
}

Class CCAppleVPinkDark24 : ConsoleColor24 {
    CCAppleVPinkDark24() : base(255, 65, 105) {}
}

Class CCAppleVPinkALight24 : ConsoleColor24 {
    CCAppleVPinkALight24() : base(193, 16, 50) {}
}

Class CCAppleVPinkADark24 : ConsoleColor24 {
    CCAppleVPinkADark24() : base(255, 58, 95) {}
}

Class CCAppleVBrownLight24 : ConsoleColor24 {
    CCAppleVBrownLight24() : base(152, 122, 84) {}
}

Class CCAppleVBrownDark24 : ConsoleColor24 {
    CCAppleVBrownDark24() : base(182, 152, 114) {}
}

Class CCAppleVBrownALight24 : ConsoleColor24 {
    CCAppleVBrownALight24() : base(119, 93, 59) {}
}

Class CCAppleVGreyLight24 : ConsoleColor24 {
    CCAppleVGreyLight24() : base(132, 132, 137) {}
}

Class CCAppleVGreyDark24 : ConsoleColor24 {
    CCAppleVGreyDark24() : base(162, 162, 167) {}
}

Class CCAppleVGreyALight24 : ConsoleColor24 {
    CCAppleVGreyALight24() : base(97, 97, 101) {}
}

Class CCAppleVGreyADark24 : ConsoleColor24 {
    CCAppleVGreyADark24() : base(152, 152, 157) {}
}

Class CCPixenSkyBlue24 : ConsoleColor24 {
    CCPixenSkyBlue24() : base(0, 253, 255) {}
}

Class CCPixenGrassDarkGreen24 : ConsoleColor24 {
    CCPixenGrassDarkGreen24() : base(0, 165, 0) {}
}

Class CCPixenRoadDarkBrown24 : ConsoleColor24 {
    CCPixenRoadDarkBrown24() : base(122, 67, 0) {}
}

Class CCPixenGrassLightGreen24 : ConsoleColor24 {
    CCPixenGrassLightGreen24() : base(0, 209, 66) {}
}

Class CCTextDefault24 : CCAppleGrey5Light24 {}

Class CCListItemCurrentHighlight24 : CCAppleNPinkLight24 {}

Class CCWindowBorderDefault24 : CCTextDefault24 {}










###############################################################################
#
# S04
#
# AT STRUCTURE DEFINITIONS
#
# THIS IS WHERE ALL THE MAGIC SAUCE HAPPENS AT. BECAUSE, FUCKERS.
#
###############################################################################

#//////////////////////////////////////////////////////////////////////////////
#
# AT CONTROL SEQUENCES
#
# CONTAINS COMMON ANSI-TERMINATED STRINGS THAT ARE USED THROUGHT THE PROGRAM.
#
#//////////////////////////////////////////////////////////////////////////////
Class ATControlSequences {
    Static [String]$ForegroundColor24Prefix = "`e[38;2;"
    Static [String]$BackgroundColor24Prefix = "`e[48;2;"
    Static [String]$DecorationBlink         = "`e[5m"
    Static [String]$DecorationItalic        = "`e[3m"
    Static [String]$DecorationUnderline     = "`e[4m"
    Static [String]$DecorationStrikethru    = "`e[9m"
    Static [String]$ModifierReset           = "`e[0m"
    Static [String]$CursorHide              = "`e[?25l"
    Static [String]$CursorShow              = "`e[?25h"

    Static [String]GenerateFG24String([ConsoleColor24]$Color) {
        Return "$([ATControlSequences]::ForegroundColor24Prefix)$($Color.Red.ToString());$($Color.Green.ToString());$($Color.Blue.ToString())m"
    }

    Static [String]GenerateBG24String([ConsoleColor24]$Color) {
        Return "$([ATControlSequences]::BackgroundColor24Prefix)$($Color.Red.ToString());$($Color.Green.ToString());$($Color.Blue.ToString())m"
    }

    Static [String]GenerateCoordinateString([Int]$Row, [Int]$Column) {
        Return "`e[$($Row.ToString());$($Column.ToString())H"
    }
}

#//////////////////////////////////////////////////////////////////////////////
#
# AT FOREGROUND COLOR 24
#
# A SYMBOLIC ENCAPSULATION OF CONSOLE COLOR 24 TO BE USED SPECIFICALLY FOR
# FOREGROUND COLOR APPLICATIONS.
#
#//////////////////////////////////////////////////////////////////////////////
Class ATForegroundColor24 {
    [ValidateNotNull()][ConsoleColor24]$Color

    ATForegroundColor24(
        [ConsoleColor24]$Color
    ) {
        $this.Color = $Color
    }

    [String]ToAnsiControlSequenceString() {
        Return [ATControlSequences]::GenerateFG24String($this.Color)
    }
}

#//////////////////////////////////////////////////////////////////////////////
#
# AT FOREGROUND COLOR 24 NONE
#
# AN ABSTRACTION OF AT FOREGROUND COLOR 24 INTENDED TO BE USED TO IMPLY NO
# FOREGROUND COLOR IN THE PRECEEDING STRING LITERAL.
#
#//////////////////////////////////////////////////////////////////////////////
Class ATForegroundColor24None : ATForegroundColor24 {
    ATForegroundColor24None() : base([CCBlack24]::new()) {}

    [String]ToAnsiControlSequenceString() {
        Return ''
    }
}

#//////////////////////////////////////////////////////////////////////////////
#
# AT BACKGROUND COLOR 24
#
# A SYMBOLIC ENCAPSULATION OF CONSOLE COLOR 24 TO BE USED SPECIFICALLY FOR
# BACKGROUND COLOR APPLICATIONS.
#
#//////////////////////////////////////////////////////////////////////////////
Class ATBackgroundColor24 {
    [ValidateNotNull()][ConsoleColor24]$Color

    ATBackgroundColor24(
        [ConsoleColor24]$Color
    ) {
        $this.Color = $Color
    }

    [String]ToAnsiControlSequenceString() {
        Return [ATControlSequences]::GenerateBG24String($this.Color)
    }
}

#//////////////////////////////////////////////////////////////////////////////
#
# AT BACKGROUND COLOR 24 NONE
#
# AN ABSTRACTION OF AT BACKGROUND COLOR 24 INTENDED TO BE USED TO IMPLY NO
# BACKGROUND COLOR IN THE PRECEEDING STRING LITERAL.
#
#//////////////////////////////////////////////////////////////////////////////
Class ATBackgroundColor24None : ATBackgroundColor24 {
    ATBackgroundColor24None() : base([CCBlack24]::new()) {}

    [String]ToAnsiControlSequenceString() {
        Return ''
    }
}

#//////////////////////////////////////////////////////////////////////////////
#
# AT DECORATION
#
# A SYMBOLIC ENCAPSULATION OF ONE OR MANY ANSI DECORATIONS TO APPLY TO A
# PRECEEDING STRING LITERAL.
#
#//////////////////////////////////////////////////////////////////////////////
Class ATDecoration {
    [ValidateNotNull()][Boolean]$Blink
    [ValidateNotNull()][Boolean]$Italic
    [ValidateNotNull()][Boolean]$Underline
    [ValidateNotNull()][Boolean]$Strikethru

    ATDecoration() {
        $this.Blink      = $false
        $this.Italic     = $false
        $this.Underline  = $false
        $this.Strikethru = $false
    }

    [String]ToAnsiControlSequenceString() {
        [String]$a = ''

        If($this.Blink -EQ $true) {
            $a += [ATControlSequences]::DecorationBlink
        }
        If($this.Italic -EQ $true) {
            $a += [ATControlSequences]::DecorationItalic
        }
        If($this.Underline -EQ $true) {
            $a += [ATControlSequences]::DecorationUnderline
        }
        If($this.Strikethru -EQ $true) {
            $a += [ATControlSequences]::DecorationStrikethru
        }

        Return $a
    }
}

#//////////////////////////////////////////////////////////////////////////////
#
# AT COORDINATES NONE
#
# AN ABSTRACTION OF AT DECORATION INTENDED TO IMPLY NO ANSI DECORATORS BE
# APPLIED TO THE PRECEEDING STRING LITERAL.
#
#//////////////////////////////////////////////////////////////////////////////
Class ATDecorationNone : ATDecoration {
    ATDecorationNone() : base() {}

    [String]ToAnsiControlSequenceString() {
        Return ''
    }
}

#//////////////////////////////////////////////////////////////////////////////
#
# AT COORDINATES
#
# A SYMBOLIC ENCAPSULATION OF A COORDINATE PAIR IN ROW,COLUMN (Y,X) ORDER.
#
#//////////////////////////////////////////////////////////////////////////////
Class ATCoordinates {
    [ValidateNotNull()][Int]$Row
    [ValidateNotNull()][Int]$Column

    ATCoordinates() {
        $this.Row    = 1
        $this.Column = 1
    }

    ATCoordinates(
        [Int]$Row,
        [Int]$Column
    ) {
        $this.Row    = $Row
        $this.Column = $Column
    }

    ATCoordinates(
        [Coordinates]$AutomationCoordinates
    ) {
        $this.Row    = $AutomationCoordinates.X
        $this.Column = $AutomationCoordinates.Y
    }

    ATCoordinates(
        [ATCoordinates]$CopyFrom
    ) {
        $this.Row    = $CopyFrom.Row
        $this.Column = $CopyFrom.Column
    }

    [String]ToAnsiControlSequenceString() {
        Return [ATControlSequences]::GenerateCoordinateString($this.Row, $this.Column)
    }

    [Coordinates]ToAutomationCoordinates() {
        Return [Coordinates]::new($this.Row, $this.Column)
    }
}

#//////////////////////////////////////////////////////////////////////////////
#
# AT COORDINATES NONE
#
# AN ABSTRACTION OF AT COORDINATES INTENDED TO IMPLY NO ANSI COORDINATE
# MODIFIER BE APPLIED TO THE PRECEEDING STRING LITERAL.
#
#//////////////////////////////////////////////////////////////////////////////
Class ATCoordinatesNone : ATCoordinates {
    ATCoordinatesNone() : base(0, 0) {}

    [String]ToAnsiControlSequenceString() {
        Return ''
    }
}

#//////////////////////////////////////////////////////////////////////////////
#
# AT COORDINATES DEFAULT
#
# AN ABSTRACTION OF AT COORDINATES INTENDED TO IMPLY AN ANSI COORDINATE
# MODIFIER BE APPLIED TO THE PRECEEDING STRING LITERAL THAT MOVES THE CURSOR TO
# A "DEFAULT" LOCATION.
#
#//////////////////////////////////////////////////////////////////////////////
Class ATCoordinatesDefault : ATCoordinates {
    ATCoordinatesDefault() : base(1, 18) {}
}

#//////////////////////////////////////////////////////////////////////////////
#
# AT STRING PREFIX
#
# AN AGGREGATE OF SEVERAL ANSI MODIFIERS THAT COLLECTIVELY MODIFY A PRECEEDING
# STRING LITERAL.
#
#//////////////////////////////////////////////////////////////////////////////
Class ATStringPrefix {
    [ValidateNotNull()][ATForegroundColor24]$ForegroundColor
    [ValidateNotNull()][ATBackgroundColor24]$BackgroundColor
    [ValidateNotNull()][ATDecoration]$Decorations
    [ValidateNotNull()][ATCoordinates]$Coordinates

    ATStringPrefix() {
        $this.ForegroundColor = [ATForegroundColor24None]::new()
        $this.BackgroundColor = [ATBackgroundColor24None]::new()
        $this.Decorations     = [ATDecorationNone]::new()
        $this.Coordinates     = [ATCoordinatesNone]::new()
    }

    ATStringPrefix(
        [ATForegroundColor24]$ForegroundColor,
        [ATBackgroundColor24]$BackgroundColor,
        [ATDecoration]$Decorations,
        [ATCoordinates]$Coordinates
    ) {
        $this.ForegroundColor = $ForegroundColor
        $this.BackgroundColor = $BackgroundColor
        $this.Decorations     = $Decorations
        $this.Coordinates     = $Coordinates
    }

    [String]ToAnsiControlSequenceString() {
        Return "$($this.Coordinates.ToAnsiControlSequenceString())$($this.Decorations.ToAnsiControlSequenceString())$($this.ForegroundColor.ToAnsiControlSequenceString())$($this.BackgroundColor.ToAnsiControlSequenceString())"
    }
}

#//////////////////////////////////////////////////////////////////////////////
#
# AT STRING PREFIX NONE
#
# AN ABSTRACTION OF AT STRING PREFIX INTENDED TO IMPLY NO ANSI MODIFIERS BE
# APPLIED TO A PRECEEDING STRING LITERAL.
#
#//////////////////////////////////////////////////////////////////////////////
Class ATStringPrefixNone : ATStringPrefix {
    ATStringPrefixNone() : base() {}

    [String]ToAnsiControlSequenceString() {
        Return ''
    }
}

#//////////////////////////////////////////////////////////////////////////////
#
# AT STRING
#
# AN AGGREGATE THAT COMBINES AN AT STRING PREFIX, A TARGET STRING LITERAL TO
# APPLY THE ANSI MODIFIERS TO, AND AN OPTIONAL ANSI RESET MODIFIER TO APPEND
# TO THE RESULTANT STRING ENSURING THE MODIFIERS FROM THE PREFIX AREN'T CARRIED
# BEYOND THE LENGTH OF THE LITERAL.
#
#//////////////////////////////////////////////////////////////////////////////
Class ATString {
    [ValidateNotNull()][ATStringPrefix]$Prefix
    [ValidateNotNull()][String]$UserData
    [ValidateNotNull()][Boolean]$UseATReset

    ATString() {
        $this.Prefix     = [ATStringPrefixNone]::new()
        $this.UserData   = ''
        $this.UseATReset = $false
    }

    ATString(
        [ATStringPrefix]$Prefix,
        [String]$UserData,
        [Boolean]$UseATReset
    ) {
        $this.Prefix     = $Prefix
        $this.UserData   = $UserData
        $this.UseATReset = $UseATReset
    }

    [String]ToAnsiControlSequenceString() {
        [String]$a = "$($this.Prefix.ToAnsiControlSequenceString())$($this.UserData)"

        If($this.UseATReset -EQ $true) {
            $a += [ATControlSequences]::ModifierReset
        }

        Return $a
    }
}

#//////////////////////////////////////////////////////////////////////////////
#
# AT STRING NONE
#
# AN ABSTRACTION OF AT STRING INTENDED TO IMPLY NO AT STRING BE USED. THIS
# CLASS IS GENERALLY USED AS A SANE DEFAULT INITIALIZATION POINT FOR WHAT WOULD
# EVENTUALLY BE PROPER AT STRING INSTANCES.
#
#//////////////////////////////////////////////////////////////////////////////
Class ATStringNone : ATString {
    ATStringNone() : base() {}

    [String]ToAnsiControlSequenceString() {
        Return ''
    }
}

#//////////////////////////////////////////////////////////////////////////////
#
# AT STRING COMPOSITE
#
# AN AGGREGATE OF AT STRING INSTANCES IN A COLLECTION. THIS CLASS PERMITS FOR
# PRETTY COMPLEX DISPLAYS BY COMBINING MULTIPLE INDEPENDENT AT STRING INSTANCES
# INTO ONE.
#
#//////////////////////////////////////////////////////////////////////////////
Class ATStringComposite {
    [List[ATString]]$CompositeActual = [List[ATString]]::new()

    ATStringComposite() {
        If($null -EQ $this.CompositeActual) {
            $this.CompositeActual = [List[ATString]]::new()
        }

        $this.CompositeActual.Add([ATStringNone]::new()) | Out-Null
    }

    ATStringComposite(
        [ATString[]]$Components
    ) {
        If($null -EQ $this.CompositeActual) {
            $this.CompositeActual = [List[ATString]]::new()
        }

        Foreach($a in $Components) {
            $this.CompositeActual.Add($a) | Out-Null
        }
    }

    ATStringComposite(
        [List[ATString]]$Components
    ) {
        $this.CompositeActual = $Components
    }

    [String]ToAnsiControlSequenceString() {
        [String]$a = ''

        Foreach($b in $this.CompositeActual) {
            $a += $b.ToAnsiControlSequenceString()
        }

        Return $a
    }
}

#//////////////////////////////////////////////////////////////////////////////
#
# AT SCENE IMAGE STRING
#
# AN ABSTRACTION OF AT STRING INTENDED TO BE USED FOR GENERATING "IMAGES". THIS
# CLASS SHORTCUTS MOST PROPERTIES OF AT STRING AND AT STRING PREFIX EXCEPT FOR
# BACKGROUND COLOR AND COORDINATES.
#
#//////////////////////////////////////////////////////////////////////////////
Class ATSceneImageString : ATString {
    Static [String]$SceneImageBlank = ' '

    ATSceneImageString(
        [ATBackgroundColor24]$BackgroundColor,
        [ATCoordinates]$Coordinates
    ) : base() {
        $this.Prefix = [ATStringPrefix]::new(
            [ATForegroundColor24None]::new(),
            $BackgroundColor,
            [ATDecorationNone]::new(),
            $Coordinates
        )
        $this.UserData   = [ATSceneImageString]::SceneImageBlank
        $this.UseATReset = $true
    }
}










###############################################################################
#
# S05
#
# COMABT ENGINE PRIMITIVE DEFINITIONS
#
# CLASSES THAT DEFINE INTERACTIONS THAT FACILITATE THE COMBAT SYSTEM. GENERAL
# CLASSES ARE INCLUDED IN HERE AS WELL AS BEING "IN-SCOPE".
#
###############################################################################

#//////////////////////////////////////////////////////////////////////////////
#
# BATTLE ENTITY PROPERTY
#
# DESCRIBES A PROPERTY OF A BATTLE ENTITY. THIS IS A NUMERIC VALUE THAT HAS A
# MINIMUM AND MAXIMUM, SUPPORTS TEMPORARY AUGMENTATION, AND IS CAPABLE OF
# MAINTAINING ITS OWN STATE.
#
#//////////////////////////////////////////////////////////////////////////////
Class BattleEntityProperty {
    Static [Single]$StatNumThresholdCaution          = 0.6D
    Static [Single]$StatNumThresholdDanger           = 0.3D
    Static [ConsoleColor24]$StatNumDrawColorSafe     = [CCAppleGreenLight24]::new()
    Static [ConsoleColor24]$StatNumDrawColorCaution  = [CCAppleYellowLight24]::new()
    Static [ConsoleColor24]$StatNumDrawColorDanger   = [CCAppleRedLight24]::new()
    Static [ConsoleColor24]$StatAugDrawColorPositive = [CCAppleCyanLight24]::new()
    Static [ConsoleColor24]$StatAugDrawColorNegative = [CCApplePurpleDark24]::new()

    [Int]$Base
    [Int]$BasePre
    [Int]$BaseAugmentValue
    [Int]$Max
    [Int]$MaxPre
    [Int]$MaxAugmentValue
    [Int]$AugmentTurnDuration
    [Boolean]$BaseAugmentActive
    [Boolean]$MaxAugmentActive
    [StatNumberState]$State
    [ScriptBlock]$ValidateFunction

    BattleEntityProperty() {
        $this.Base                = 0
        $this.BasePre             = 0
        $this.BaseAugmentValue    = 0
        $this.Max                 = 0
        $this.MaxPre              = 0
        $this.MaxAugmentValue     = 0
        $this.AugmentTurnDuration = 0
        $this.BaseAugmentActive   = $false
        $this.MaxAugmentActive    = $false
        $this.State               = [StatNumberState]::Normal
        $this.ValidateFunction    = $null
    }

    # THIS CTOR CAN LIKELY GO AWAY
    # BattleEntityProperty(
    #     [Int]$Base,
    #     [Int]$BasePre,
    #     [Int]$BaseAugmentValue,
    #     [Int]$Max,
    #     [Int]$MaxPre,
    #     [Int]$MaxAugmentValue,
    #     [Int]$AugmentTurnDuration,
    #     [Boolean]$BaseAugmentActive,
    #     [Boolean]$MaxAugmentActive,
    #     [StatNumberState]$State,
    #     [ScriptBlock]$ValidateFunction
    # ) {
    #     $this.Base                = $Base
    #     $this.BasePre             = $BasePre
    #     $this.BaseAugmentValue    = $BaseAugmentValue
    #     $this.Max                 = $Max
    #     $this.MaxPre              = $MaxPre
    #     $this.MaxAugmentValue     = $MaxAugmentValue
    #     $this.AugmentTurnDuration = $AugmentTurnDuration
    #     $this.BaseAugmentActive   = $BaseAugmentActive
    #     $this.MaxAugmentActive    = $MaxAugmentActive
    #     $this.State               = $State
    #     $this.ValidateFunction    = $ValidateFunction
    # }

    [Void]Update() {
        If($this.AugmentTurnDuration -GT 0) {
            $this.AugmentTurnDuration--
            If($this.BasePre -EQ 0) {
                $this.BasePre = $this.Base
            }
            If($this.MaxPre -EQ 0) {
                $this.MaxPre = $this.Max
            }
            If($this.MaxAugmentActive -EQ $false) {
                [Int]$t                = $this.Max + $this.MaxAugmentValue
                $t                     = [Math]::Clamp($t, 0, [Int]::MaxValue)
                $this.Max              = $t
                $this.MaxAugmentActive = $true
            }
            If($this.BaseAugmentActive -EQ $false) {
                [Int]$t                 = $this.Base + $this.BaseAugmentValue
                $t                      = [Math]::Clamp($t, 0, [Int]::MaxValue)
                $this.Base              = $t
                $this.BaseAugmentActive = $true
            }
        } Else {
            If($this.MaxAugmentActive -EQ $true) {
                $this.Max              = $this.MaxPre
                $this.MaxPre           = 0
                $this.MaxAugmentActive = $false
            }
            If($this.BaseAugmentActive -EQ $true) {
                $this.Base              = $this.BasePre
                $this.BasePre           = 0
                $this.BaseAugmentActive = $false
            }
        }

        Invoke-Command $this.ValidateFunction -ArgumentList $this
    }

    <#
    .OUTPUTS
    Integer
        -1 - The value of IncAmt is less than or equal to zero.
        -2 - The value of Base is equal to Max (no need to increment Base at this point)
        0  - Base was successfully incremented by IncAmt
    #>
    [Int]IncrementBase(
        [Int]$IncAmt
    ) {
        If($IncAmt -LE 0) {
            Return -1
        }
        If($this.Base -EQ $this.Max) {
            Return -2
        }
        [Int]$t    = $this.Base + $IncAmt
        $t         = [Math]::Clamp($t, 0, $this.Max) # This should work regardless if BaseAugmentActive = true
        $this.Base = $t

        Return 0
    }

    <#
    .OUTPUTS
    Integer
        -1 - The value of DecAmt is greater than or equal to zero.
        -2 - The value of Base is less than or equal to zero.
        0  - Base was successfully decremented by DecAmt.
    #>
    [Int]DecrementBase(
        [Int]$DecAmt
    ) {
        If($DecAmt -GE 0) {
            Return -1
        }
        If($this.Base -LE 0) {
            Return -2
        }
        [Int]$t    = $this.Base + $DecAmt
        $t         = [Math]::Clamp($t, 0, $this.Max)
        $this.Base = $t
        
        Return 0
    }

    <# 
    .OUTPUTS
    Integer
        -1 - The value of IncAmt is less than or equal to zero.
        0  - Max was successfully incremented by IncAmt.
    #>
    [Int]IncrementMax(
        [Int]$IncAmt
    ) {
        If($IncAmt -LE 0) {
            Return -1
        }
        $this.Max += $IncAmt

        Return 0
    }

    <#
    .OUTPUTS
    Integer
        -1 - The value of DecAmt is greater than or equal to zero.
        0  - Max was successfully decremented by DecAmt.
    #>
    [Int]DecrementMax(
        [Int]$DecAmt
    ) {
        If($DecAmt -GE 0) {
            Return -1
        }
        [Int]$t   = $this.Max - $DecAmt
        $t        = [Math]::Clamp($t, 0, [Int]::MaxValue)
        $this.Max = $t
        If($this.Max -LT $this.Base) {
            $this.Base = $this.Max
        }

        Return 0
    }
}

###############################################################################
#
# BATTLE ACTION
#
# DESCRIBES AN ACTION THAT AN ENTITY CAN TAKE IN BATTLE. ACTIONS GENERALLY ARE
# CAPABLE OF DETERMINING THEIR OWN DAMAGE RESULT AND CAN RUN ROUTINES BEFORE AND
# AFTER SAID CALCULATIONS.
#
###############################################################################
Class BattleAction {
    [String]$Name
    [ScriptBlock]$Effect
    [ScriptBlock]$PreCalc
    [ScriptBlock]$PostCalc
    [BattleActionType]$Type
    [Int]$MpCost
    [Int]$EffectValue
    [Single]$Chance
    [String]$Description

    BattleAction() {
        $this.Name        = ''
        $this.Type        = [BattleActionType]::None
        $this.Effect      = $Script:BaCalc
        $this.PreCalc     = $null
        $this.PostCalc    = $null
        $this.EffectValue = 0
        $this.Chance      = 0.0
        $this.Description = ''
    }

    # IT'S UNLIKELY THAT ANY OF THESE CTORS ARE NEEDED
    # BattleAction(
    #     [String]$Name,
    #     [BattleActionType]$Type,
    #     [ScriptBlock]$Effect,
    #     [Int]$Uses,
    #     [Int]$EffectValue,
    #     [Single]$Chance
    # ) {
    #     $this.Name        = $Name
    #     $this.Type        = $Type
    #     $this.Effect      = $Effect
    #     $this.PreCalc     = {}
    #     $this.PostCalc    = {}
    #     $this.EffectValue = $EffectValue
    #     $this.Chance      = $Chance
    #     $this.Description = ''
    # }

    # BattleAction(
    #     [String]$Name,
    #     [String]$Description,
    #     [BattleActionType]$Type,
    #     [ScriptBlock]$Effect,
    #     [Int]$Uses,
    #     [Int]$UsesMax,
    #     [Int]$EffectValue,
    #     [Single]$Chance
    # ) {
    #     $this.Name        = $Name
    #     $this.Type        = $Type
    #     $this.Effect      = $Effect
    #     $this.PreCalc     = {}
    #     $this.PostCalc    = {}
    #     $this.EffectValue = $EffectValue
    #     $this.Chance      = $Chance
    #     $this.Description = $Description
    # }

    # BattleAction(
    #     [String]$Name,
    #     [String]$Description,
    #     [BattleActionType]$Type,
    #     [ScriptBlock]$Effect,
    #     [Int]$MpCost,
    #     [Int]$EffectValue,
    #     [Single]$Chance
    # ) {
    #     $this.Name        = $Name
    #     $this.Type        = $Type
    #     $this.Effect      = $Effect
    #     $this.PreCalc     = {}
    #     $this.PostCalc    = {}
    #     $this.MpCost      = $MpCost
    #     $this.EffectValue = $EffectValue
    #     $this.Chance      = $Chance
    #     $this.Description = $Description
    # }

    # THIS CTOR IS NEEDED BECAUSE POWERSHELL ASSIGNMENT IS BY REFERENCE
    # THANKS C++
    BattleAction(
        [BattleAction]$Copy
    ) {
        $this.Name        = $Copy.Name
        $this.Type        = $Copy.Type
        $this.Effect      = $Copy.Effect
        $this.PreCalc     = $Copy.PreCalc
        $this.PostCalc    = $Copy.PostCalc
        $this.MpCost      = $Copy.MpCost
        $this.EffectValue = $Copy.EffectValue
        $this.Chance      = $Copy.Chance
        $this.Description = $Copy.Description
    }
}





###############################################################################
#
# BATTLE ACTION RESULT
#
###############################################################################
Class BattleActionResult {
    [Int]$ActionEffectSum
    [BattleEntity]$Originator
    [BattleEntity]$Target
    [BattleActionResultType]$Type

    BattleActionResult() {
        $this.ActionEffectSum = 0
        $this.Originator      = $null
        $this.Target          = $null
        $this.Type            = [BattleActionResultType]::Success
    }
}






###############################################################################
#
# SPECIALIZED BATTLE ACTION CLASSES
#
# THESE SPECIALIZATIONS DEFINE ACTUAL ACTIONS THE PLAYER ENTITY OR ANY ENEMY
# ENTITY CAN USE. EACH CLASS, UPON READING THE PROPERTY VALUES, IS
# SELF-DOCUMENTING AND WILL CONSEQUENTLY NOT BE DOCUMENTED INDEPENDENTLY.
#
# IT'S ALSO WORTH NOTING TOO THAT THE VALUES ASSIGNED TO SOME OF THESE
# PROPERTIES HAVEN'T YET BEEN TESTED AND ARE SUBJECT TO CHANGE UPON FURTHER
# REFINEMENT. THIS MAY PRESENT A GOOD OPPORTUNITY FOR A TEST SUITE.
#
###############################################################################
Class BAPunch : BattleAction {
    BAPunch() : base() {
        $this.Name        = 'Punch'
        $this.Description = 'A punch. Just like dad taught you.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 50
        $this.Chance      = 1.0
    }
}

Class BAKick : BattleAction {
    BAKick() : base() {
        $this.Name        = 'Kick'
        $this.Description = 'A kick. Don''t stub your toe.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 50
        $this.Chance      = 1.0
    }
}

Class BAKarateChop : BattleAction {
    BAKarateChop() : base() {
        $this.Name        = 'Karate Chop'
        $this.Description = 'Test your might!'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 60
        $this.Chance      = 0.8
    }
}

Class BAKarateKick : BattleAction {
    BAKarateKick() : base() {
        $this.Name        = 'Karate Kick'
        $this.Description = 'I hope your shins are fit.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BAPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 65
        $this.Chance      = 0.75
    }
}

Class BABash : BattleAction {
    BABash() : base() {
        $this.Name        = 'Bash'
        $this.Description = 'HULK SMASH!'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 75
        $this.Chance      = 0.7
    }
}

Class BABite : BattleAction {
    BABite() : base() {
        $this.Name        = 'Bite'
        $this.Description = 'When fists fail, teeth do just fine.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 40
        $this.Chance      = 0.9
    }
}

Class BAScratch : BattleAction {
    BAScratch() : base() {
        $this.Name        = 'Scratch'
        $this.Description = 'Nails are sometimes useful.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 45
        $this.Chance      = 1.0
    }
}

Class BADoubleScratch : BattleAction {
    BADoubleScratch() : base() {
        $this.Name        = 'Double Scratch'
        $this.Description = 'The manicure on these is lethal.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 85
        $this.Chance      = 0.75
    }
}

Class BAHeadbutt : BattleAction {
    BAHeadbutt() : base() {
        $this.Name        = 'Headbutt'
        $this.Description = 'Put that noggin'' to work!'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 160
        $this.Chance      = 0.4
    }
}

Class BADropKick : BattleAction {
    BADropKick() : base() {
        $this.Name        = 'Dropkick'
        $this.Description = 'Don''t use this on Murphy.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 120
        $this.Chance      = 0.3
    }
}

Class BAThrow : BattleAction {
    BAThrow() : base() {
        $this.Name        = 'Throw'
        $this.Description = 'One man''s trash is a useful weapon.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 0
        $this.Chance      = 0.9
    }
}

Class BAPeck : BattleAction {
    BAPeck() : base() {
        $this.Name        = 'Peck'
        $this.Description = 'One from Grandma usually means cookies later.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 20
        $this.Chance      = 1.0
    }
}

Class BATalonStab : BattleAction {
    BATalonStab() : base() {
        $this.Name        = 'Talon Stab'
        $this.Description = 'You don''t want a hug from these.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 70
        $this.Chance      = 1.0
    }
}

Class BASwordSlash : BattleAction {
    BASwordSlash() : base() {
        $this.Name        = 'Sword Slash'
        $this.Description = 'A basic sword attack.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 60
        $this.Chance      = 1.0
    }
}

Class BASwordStab : BattleAction {
    BASwordStab() : base() {
        $this.Name        = 'Sword Stab'
        $this.Description = 'This was practiced with toothpicks.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 80
        $this.Chance      = 0.7
    }
}

Class BAAxeSlash : BattleAction {
    BAAxeSlash() : base() {
        $this.Name        = 'Axe Slash'
        $this.Description = 'Chopping trees pays off.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 70
        $this.Chance      = 1.0
    }
}

Class BAAxeCleave : BattleAction {
    BAAxeCleave() : base() {
        $this.Name        = 'Axe Cleave'
        $this.Description = 'Before his fury, the trees stood no chance.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 90
        $this.Chance      = 0.8
    }
}

Class BAAxeThrow : BattleAction {
    BAAxeThrow() : base() {
        $this.Name        = 'Axe Throw'
        $this.Description = 'Don''t let one hit you on the way out.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 180
        $this.Chance      = 0.3
    }
}

Class BAKnifeStab : BattleAction {
    BAKnifeStab() : base() {
        $this.Name        = 'Knife Stab'
        $this.Description = 'Just a little prick, right?'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 40
        $this.Chance      = 0.9
    }
}

Class BAKnifeThrow : BattleAction {
    BAKnifeThrow() : base() {
        $this.Name        = 'Knife Throw'
        $this.Description = 'Like throwing darts, but cooler.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 80
        $this.Chance      = 0.3
    }
}

Class BAClubSwing : BattleAction {
    BAClubSwing() : base() {
        $this.Name        = 'Club Swing'
        $this.Description = 'Me Ooga. Me swing-um big-um stick.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 70
        $this.Chance      = 0.7
    }
}

Class BAHomerunHit : BattleAction {
    BAHomerunHit() : base() {
        $this.Name        = 'Homerun Hit'
        $this.Description = 'Swing, batter... SWING!'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 200
        $this.Chance      = 0.1
    }
}

Class BAFlamePunch : BattleAction {
    BAFlamePunch() : base() {
        $this.Name        = 'Flame Punch'
        $this.Description = 'Flaming fists of fury.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 5
        $this.EffectValue = 75
        $this.Chance      = 1.0
    }
}

Class BAFlameKick : BattleAction {
    BAFlameKick() : base() {
        $this.Name        = 'Flame Kick'
        $this.Description = 'I got channed heat on my heels.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 5
        $this.EffectValue = 85
        $this.Chance      = 0.9
    }
}

Class BAFireball : BattleAction {
    BAFireball() : base() {
        $this.Name        = 'Fireball'
        $this.Description = 'That''s a spicy meatball!'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 7
        $this.EffectValue = 80
        $this.Chance      = 0.75
    }
}

Class BAMortarToss : BattleAction {
    BAMortarToss() : base() {
        $this.Name        = 'Mortar Toss'
        $this.Description = 'An esploozshun of firez.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 9
        $this.EffectValue = 100
        $this.Chance      = 0.7
    }
}

Class BAIKill : BattleAction {
    BAIKill() : base() {
        $this.Name        = 'IKill'
        $this.Description = 'Insta death'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 0
        $this.EffectValue = 50000
        $this.Chance      = 1.0
    }
}

Class BABlazeBurst : BattleAction {
    BABlazeBurst() : base() {
        $this.Name        = 'Blaze Burst'
        $this.Description = 'Like an arc flash, only worse.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 10
        $this.EffectValue = 80
        $this.Chance      = 0.8
    }
}

Class BAFlamethrower : BattleAction {
    BAFlamethrower() : base() {
        $this.Name        = 'Flamethrower'
        $this.Description = 'Our inspiration was Elon.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 10
        $this.EffectValue = 90
        $this.Chance      = 0.7
    }
}

Class BAEmberSlash : BattleAction {
    BAEmberSlash() : base() {
        $this.Name        = 'Ember Slash'
        $this.Description = 'At least the wound is cauterized.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 5
        $this.EffectValue = 80
        $this.Chance      = 0.9
    }
}

Class BAPyroblast : BattleAction {
    BAPyroblast() : base() {
        $this.Name        = 'Pyroblast'
        $this.Description = 'Fireworks never looked so good.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 15
        $this.EffectValue = 110
        $this.Chance      = 0.6
    }
}

Class BAAshenNova : BattleAction {
    BAAshenNova() : base() {
        $this.Name        = 'Ashen Nova'
        $this.Description = 'Reminds me of Pompeii. Only worse.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 50
        $this.EffectValue = 250
        $this.Chance      = 0.5
    }
}

Class BAIncenerate : BattleAction {
    BAIncenerate() : base() {
        $this.Name        = 'Incenerate'
        $this.Description = 'Kill it with fire, they said.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 20
        $this.EffectValue = 120
        $this.Chance      = 0.7
    }
}

Class BACinderStorm : BattleAction {
    BACinderStorm() : base() {
        $this.Name        = 'Cinder Storm'
        $this.Description = 'Hot coal hail. Yum.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 5
        $this.EffectValue = 60
        $this.Chance      = 0.9
    }
}

Class BALavaSurge : BattleAction {
    BALavaSurge() : base() {
        $this.Name        = 'Lava Surge'
        $this.Description = 'It''s like a surge of love, only the molten kind.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 15
        $this.EffectValue = 100
        $this.Chance      = 1.0
    }
}

Class BAFireCataclysm : BattleAction {
    BAFireCataclysm() : base() {
        $this.Name        = "$($Script:BATAdornmentCharTable[[BattleActionType]::ElementalFire]) Cataclysm"
        $this.Description = 'Firey death rains upon you.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 50
        $this.EffectValue = 250
        $this.Chance      = 0.5
    }
}

Class BAIcePunch : BattleAction {
    BAIcePunch() : base() {
        $this.Name        = 'Ice Punch'
        $this.Description = 'Frigid AND stiff.'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 5
        $this.EffectValue = 80
        $this.Chance      = 0.9
    }
}

Class BAFrostKick : BattleAction {
    BAFrostKick() : base() {
        $this.Name        = 'Frost Kick'
        $this.Description = 'Ice on the knee. It''s a thing.'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 5
        $this.EffectValue = 80
        $this.Chance      = 0.9
    }
}

Class BAIcicleStrike : BattleAction {
    BAIcicleStrike() : base() {
        $this.Name        = 'Icicle Strike'
        $this.Description = 'When they''re this big, who needs a sword?'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 5
        $this.EffectValue = 80
        $this.Chance      = 0.9
    }
}

Class BAGlacialSpike : BattleAction {
    BAGlacialSpike() : base() {
        $this.Name        = 'Glacial Spike'
        $this.Description = 'Global warming helped me make this one.'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 5
        $this.EffectValue = 80
        $this.Chance      = 0.9
    }
}

Class BAChillSlash : BattleAction {
    BAChillSlash() : base() {
        $this.Name        = 'Chill Slash'
        $this.Description = 'Let''s all cool down, yeah?'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 5
        $this.EffectValue = 80
        $this.Chance      = 0.9
    }
}

Class BAIceBolt : BattleAction {
    BAIceBolt() : base() {
        $this.Name        = 'Ice Bolt'
        $this.Description = 'Not the kind of bolt you secure things with.'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 5
        $this.EffectValue = 80
        $this.Chance      = 0.9
    }
}

Class BAArcticBlast : BattleAction {
    BAArcticBlast() : base() {
        $this.Name        = 'Arctic Blast'
        $this.Description = 'Oh you won''t be long for gettin'' froshbit, now!'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 5
        $this.EffectValue = 80
        $this.Chance      = 0.9
    }
}

Class BAFrostWave : BattleAction {
    BAFrostWave() : base() {
        $this.Name        = 'Frost Wave'
        $this.Description = 'Ride the wave, dude.'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 15
        $this.EffectValue = 100
        $this.Chance      = 1.0
    }
}

Class BAArcticFury : BattleAction {
    BAArcticFury() : base() {
        $this.Name        = 'Arctic Fury'
        $this.Description = 'An ass whooping is a dish best served cold.'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 50
        $this.EffectValue = 250
        $this.Chance      = 0.5
    }
}

Class BAFrozenSpear : BattleAction {
    BAFrozenSpear() : base() {
        $this.Name        = 'Frozen Spear'
        $this.Description = 'I found this spear in a fridge.'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 15
        $this.EffectValue = 100
        $this.Chance      = 1.0
    }
}

Class BAHailstorm : BattleAction {
    BAHailstorm() : base() {
        $this.Name        = 'Hailstorm'
        $this.Description = 'A common cause of insurace claims.'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 50
        $this.EffectValue = 250
        $this.Chance      = 0.5
    }
}

Class BAIcefallSlam : BattleAction {
    BAIcefallSlam() : base() {
        $this.Name        = 'Icefall Slam'
        $this.Description = 'Not avoiding the avalanche is a bad idea.'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 15
        $this.EffectValue = 100
        $this.Chance      = 1.0
    }
}

Class BAIceCataclysm : BattleAction {
    BAIceCataclysm() : base() {
        $this.Name        = "$($Script:BATAdornmentCharTable[[BattleActionType]::ElementalIce]) Cataclysm"
        $this.Description = 'Icy death rains down upon you.'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 50
        $this.EffectValue = 250
        $this.Chance      = 0.5
    }
}

Class BAAquaJet : BattleAction {
    BAAquaJet() : base() {
        $this.Name        = 'Aqua Jet'
        $this.Description = 'A Boeing 737 made entirely of water.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 5
        $this.EffectValue = 80
        $this.Chance      = 0.9
    }
}

Class BATidalSurge : BattleAction {
    BATidalSurge() : base() {
        $this.Name        = 'Tidal Surge'
        $this.Description = 'They ebb, they flow, they attac.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 5
        $this.EffectValue = 80
        $this.Chance      = 0.9
    }
}

Class BAWaterWhip : BattleAction {
    BAWaterWhip() : base() {
        $this.Name        = 'Water Whip'
        $this.Description = 'Indiana Jones''s least favorite whip.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 5
        $this.EffectValue = 80
        $this.Chance      = 0.9
    }
}

Class BAMistStrike : BattleAction {
    BAMistStrike() : base() {
        $this.Name        = 'Mist Strike'
        $this.Description = 'Was it a cat I saw? Was I tac a ti saw?'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 15
        $this.EffectValue = 100
        $this.Chance      = 1.0
    }
}

Class BAHydroSlash : BattleAction {
    BAHydroSlash() : base() {
        $this.Name        = 'Hydro Slash'
        $this.Description = 'A moistened bint lobbed this scimitar at me.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 15
        $this.EffectValue = 100
        $this.Chance      = 1.0
    }
}

Class BAWavePunch : BattleAction {
    BAWavePunch() : base() {
        $this.Name        = 'Wave Punch'
        $this.Description = 'The latest Hawaiian Punch flavor. Swelling aftertaste.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 15
        $this.EffectValue = 100
        $this.Chance      = 1.0
    }
}

Class BAAquaticBolt : BattleAction {
    BAAquaticBolt() : base() {
        $this.Name        = 'Aquatic Bolt'
        $this.Description = 'Some watery things to pelt your neighbor with.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 50
        $this.EffectValue = 250
        $this.Chance      = 0.5
    }
}

Class BAAquaSphere : BattleAction {
    BAAquaSphere() : base() {
        $this.Name        = 'Aqua Sphere'
        $this.Description = 'Listen to ''Barbie Girl'' all day long. Enjoy.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 50
        $this.EffectValue = 250
        $this.Chance      = 0.5
    }
}

Class BATidalCrush : BattleAction {
    BATidalCrush() : base() {
        $this.Name        = 'Tidal Crush'
        $this.Description = 'Your high school crush came to kill you, in water form.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 50
        $this.EffectValue = 250
        $this.Chance      = 0.5
    }
}

Class BATsunami : BattleAction {
    BATsunami() : base() {
        $this.Name        = 'Tsunami'
        $this.Description = 'WAVES!'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 100
        $this.EffectValue = 500
        $this.Chance      = 0.1
    }
}

Class BASeafoamBolt : BattleAction {
    BASeafoamBolt() : base() {
        $this.Name        = 'Seafoam Bolt'
        $this.Description = 'Sometimes I see these white bubbles on the shore.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 100
        $this.EffectValue = 500
        $this.Chance      = 0.1
    }
}

Class BATyphoon : BattleAction {
    BATyphoon() : base() {
        $this.Name        = 'Typhoon'
        $this.Description = 'Not to be confused with the infamous Tie Foon.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BARaindance : BattleAction {
    BARaindance() : base() {
        $this.Name        = 'Raindance'
        $this.Description = 'Like Riverdance, only shit.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BAWateryGrave : BattleAction {
    BAWateryGrave() : base() {
        $this.Name        = 'Watery Grave'
        $this.Description = 'Davey Jones is holed up here.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BATempest : BattleAction {
    BATempest() : base() {
        $this.Name        = 'Tempest'
        $this.Description = 'If it were a tempest of love, would you feel any different?'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 400
        $this.EffectValue = 2000
        $this.Chance      = 0.1
    }
}

Class BAWaterCataclysm : BattleAction {
    BAWaterCataclysm() : base() {
        $this.Name        = "$($Script:BATAdornmentCharTable[[BattleActionType]::ElementalWater]) Cataclysm"
        $this.Description = 'Watery death rains down upon you.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 400
        $this.EffectValue = 2000
        $this.Chance      = 0.1
    }
}

Class BATerraStrike : BattleAction {
    BATerraStrike() : base() {
        $this.Name        = 'Terra Strike'
        $this.Description = 'Sticks and stones can break your bones.'
        $this.Type        = [BattleActionType]::ElementalEarth
        # $this.Effect      = $Script:BaElementalEarthCalc
        $this.MpCost      = 50
        $this.EffectValue = 250
        $this.Chance      = 0.5
    }
}

Class BAQuakeFist : BattleAction {
    BAQuakeFist() : base() {
        $this.Name        = 'Quake Fist'
        $this.Description = 'Two nerds get in a fight at QuakeCon.'
        $this.Type        = [BattleActionType]::ElementalEarth
        # $this.Effect      = $Script:BaElementalEarthCalc
        $this.MpCost      = 100
        $this.EffectValue = 500
        $this.Chance      = 0.1
    }
}

Class BABoulderBash : BattleAction {
    BABoulderBash() : base() {
        $this.Name        = 'Boulder Bash'
        $this.Description = 'We played Resident Evil 5 to the end.'
        $this.Type        = [BattleActionType]::ElementalEarth
        # $this.Effect      = $Script:BaElementalEarthCalc
        $this.MpCost      = 100
        $this.EffectValue = 500
        $this.Chance      = 0.1
    }
}

Class BATremor : BattleAction {
    BATremor() : base() {
        $this.Name        = 'Tremor'
        $this.Description = 'Does more damage than those Kevin Bacon movies.'
        $this.Type        = [BattleActionType]::ElementalEarth
        # $this.Effect      = $Script:BaElementalEarthCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BAGraniteDust : BattleAction {
    BAGraniteDust() : base() {
        $this.Name        = 'Granite Dust'
        $this.Description = 'There''s blood on the ground before you know it.'
        $this.Type        = [BattleActionType]::ElementalEarth
        # $this.Effect      = $Script:BaElementalEarthCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BARockslide : BattleAction {
    BARockslide() : base() {
        $this.Name        = 'Rockslide'
        $this.Description = 'Fallin'' rocks, fallin'' rocks, fallin'' rocks.'
        $this.Type        = [BattleActionType]::ElementalEarth
        # $this.Effect      = $Script:BaElementalEarthCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BASinkhole : BattleAction {
    BASinkhole() : base() {
        $this.Name        = 'Sinkhole'
        $this.Description = 'Tumbling down the rabbit hole.'
        $this.Type        = [BattleActionType]::ElementalEarth
        # $this.Effect      = $Script:BaElementalEarthCalc
        $this.MpCost      = 400
        $this.EffectValue = 2000
        $this.Chance      = 0.1
    }
}

Class BAGeoFence : BattleAction {
    BAGeoFence() : base() {
        $this.Name        = 'Geo Fence'
        $this.Description = 'Get off my lawn!'
        $this.Type        = [BattleActionType]::ElementalEarth
        # $this.Effect      = $Script:BaElementalEarthCalc
        $this.MpCost      = 400
        $this.EffectValue = 2000
        $this.Chance      = 0.1
    }
}

Class BAEarthCataclysm : BattleAction {
    BAEarthCataclysm() : base() {
        $this.Name        = "$($Script:BATAdornmentCharTable[[BattleActionType]::ElementalEarth]) Cataclysm"
        $this.Description = 'A rocky death rains down on you.'
        $this.Type        = [BattleActionType]::ElementalEarth
        # $this.Effect      = $Script:BaElementalEarthCalc
        $this.MpCost      = 400
        $this.EffectValue = 2000
        $this.Chance      = 0.1
    }
}

Class BAGaleStrike : BattleAction {
    BAGaleStrike() : base() {
        $this.Name        = 'Gale Strike'
        $this.Description = 'The wind can hurt you.'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 50
        $this.EffectValue = 250
        $this.Chance      = 0.5
    }
}

Class BAZephyrSlash : BattleAction {
    BAZephyrSlash() : base() {
        $this.Name        = 'Zephyr Slash'
        $this.Description = 'What the hell is a zephyr, anyway?'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 100
        $this.EffectValue = 500
        $this.Chance      = 0.1
    }
}

Class BABreezeBlade : BattleAction {
    BABreezeBlade() : base() {
        $this.Name        = 'Breeze Blade'
        $this.Description = 'Easy, breezy, bleedy, dying guy.'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 100
        $this.EffectValue = 500
        $this.Chance      = 0.1
    }
}

Class BAThunderClap : BattleAction {
    BAThunderClap() : base() {
        $this.Name        = 'Thunder Clap'
        $this.Description = 'Sometimes an euphemism, this time a threat.'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 100
        $this.EffectValue = 500
        $this.Chance      = 0.1
    }
}

Class BASkywardCut : BattleAction {
    BASkywardCut() : base() {
        $this.Name        = 'Skyward Cut'
        $this.Description = 'Remember to always cut away from yourself.'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 100
        $this.EffectValue = 500
        $this.Chance      = 0.1
    }
}

Class BAGrandFlash : BattleAction {
    BAGrandFlash() : base() {
        $this.Name        = 'Grand Flash'
        $this.Description = 'Right when the lightning strikes.'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BACyclone : BattleAction {
    BACyclone() : base() {
        $this.Name        = 'Cyclone'
        $this.Description = 'Something about moving all night long.'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BALightningBolt : BattleAction {
    BALightningBolt() : base() {
        $this.Name        = 'Lightning Bolt'
        $this.Description = 'These look cool from a distance.'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BAGaleflash : BattleAction {
    BAGaleflash() : base() {
        $this.Name        = 'Galeflash'
        $this.Description = 'The lightning rode on the wind.'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BABreezyWind : BattleAction {
    BABreezyWind() : base() {
        $this.Name        = 'Breezy Wind'
        $this.Description = 'So brisk it''ll carry her bonnet off.'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BALeafShield : BattleAction {
    BALeafShield() : base() {
        $this.Name        = 'Leaf Shield'
        $this.Description = 'Are you sure this''ll work?'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BAWindCataclysm : BattleAction {
    BAWindCataclysm() : base() {
        $this.Name        = "$($Script:BATAdornmentCharTable[[BattleActionType]::ElementalWind]) Cataclysm"
        $this.Description = 'Windy death rains down upon you.'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 300
        $this.EffectValue = 1500
        $this.Chance      = 0.1
    }
}

Class BARadiance : BattleAction {
    BARadiance() : base() {
        $this.Name        = 'Radiance'
        $this.Description = 'All teh brights.'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = $Script:BaElementalLightCalc
        $this.MpCost      = 100
        $this.EffectValue = 500
        $this.Chance      = 0.1
    }
}

Class BAHolyNova : BattleAction {
    BAHolyNova() : base() {
        $this.Name        = 'Holy Nova'
        $this.Description = 'More Bible than you can handle.'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = {}
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BADivineBeam : BattleAction {
    BADivineBeam() : base() {
        $this.Name        = 'Divine Beam'
        $this.Description = 'Got Jesus?'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = {}
        $this.MpCost      = 300
        $this.EffectValue = 1500
        $this.Chance      = 0.1
    }
}

Class BAPrismShock : BattleAction {
    BAPrismShock() : base() {
        $this.Name        = 'Prism Shock'
        $this.Description = 'The pretty rainbow of death.'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = {}
        $this.MpCost      = 300
        $this.EffectValue = 1500
        $this.Chance      = 0.1
    }
}

Class BAHaloStrike : BattleAction {
    BAHaloStrike() : base() {
        $this.Name        = 'Halo Strike'
        $this.Description = 'These surprisingly hurt.'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = {}
        $this.MpCost      = 300
        $this.EffectValue = 1500
        $this.Chance      = 0.1
    }
}

Class BALightbringer : BattleAction {
    BALightbringer() : base() {
        $this.Name        = 'Lightbringer'
        $this.Description = 'Bring the party!'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = {}
        $this.MpCost      = 300
        $this.EffectValue = 1500
        $this.Chance      = 0.1
    }
}

Class BASacredPulse : BattleAction {
    BASacredPulse() : base() {
        $this.Name        = 'Sacred Pulse'
        $this.Description = 'The defunct newsletter of the Catholic Church.'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = {}
        $this.MpCost      = 300
        $this.EffectValue = 1500
        $this.Chance      = 0.1
    }
}

Class BADaybreaker : BattleAction {
    BADaybreaker() : base() {
        $this.Name        = 'Daybreaker'
        $this.Description = 'Some statue in Skyrim gave me this.'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = {}
        $this.MpCost      = 300
        $this.EffectValue = 1500
        $this.Chance      = 0.1
    }
}

Class BAAngelicHymn : BattleAction {
    BAAngelicHymn() : base() {
        $this.Name        = 'Angelic Hymn'
        $this.Description = 'This is how I sound when I sing Britney Spears.'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = {}
        $this.MpCost      = 300
        $this.EffectValue = 1500
        $this.Chance      = 0.1
    }
}

Class BABrilliance : BattleAction { 
    BABrilliance() : base() {
        $this.Name        = 'Brilliance'
        $this.Description = 'How I feel when I look at myself in the mirror.'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = {}
        $this.MpCost      = 300
        $this.EffectValue = 1500
        $this.Chance      = 0.1
    }
}

Class BASunfire : BattleAction {
    BASunfire() : base() {
        $this.Name        = 'Sunfire'
        $this.Description = 'Scorched Earth, mofo.'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = {}
        $this.MpCost      = 400
        $this.EffectValue = 2000
        $this.Chance      = 0.1
    }
}

Class BALightCataclysm : BattleAction {
    BALightCataclysm() : base() {
        $this.Name        = "$($Script:BATAdornmentCharTable[[BattleActionType]::ElementalLight]) Cataclysm"
        $this.Description = 'Holy death rains down upon you.'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = {}
        $this.MpCost      = 500
        $this.EffectValue = 2500
        $this.Chance      = 0.1
    }
}

###############################################################################
#
# BATTLE ENTITY
#
# AN AGGREGATE OF MULTIPLE CLASSES. INTENDED TO DESCRIBE AN ENTITY THAT COULD
# PARTICIPATE IN A BATTLE SITUATION.
#
# NOTABLE PROPERTIES HERE ARE AS FOLLOWS:
#
#  STATS - A HASTABLE [STATID], [BATTLEENTITYPROPERTY]
#  ACTIONLISTING - A HASHTABLE [ACTIONSLOT], [BATTLEACTION]
#  ACTIONMARBLEBAG - A LIST OF FIXED SIZE (10) TO DETMINE ACTION CHANGE LAYOUT
#
###############################################################################
Class BattleEntity {
    [String]$Name
    [Boolean]$CanAct
    [Hashtable]$Stats
    [Hashtable]$ActionListing
    [ScriptBlock]$SpoilsEffect
    [ActionSlot[]]$ActionMarbleBag
    [ConsoleColor24]$NameDrawColor
    [BattleActionType]$Affinity

    BattleEntity() {
        $this.Name            = ''
        $this.CanAct          = $true
        $this.Stats           = @{}
        $this.ActionListing   = @{}
        $this.SpoilsEffect    = $null
        $this.ActionMarbleBag = $null
        $this.NameDrawColor   = [CCTextDefault24]::new()
        $this.Affinity        = [BattleActionType]::None
    }

    [Void]Update() {
        Foreach($a in $this.Stats.Values) {
            $a.Update()
        }
    }
}

###############################################################################
#
# ENEMY BATTLE ENTITY
#
# AN ENTITY THAT IS NOT THE PLAYER THAT CAN BE ENCOUNTERED IN A BATTLE 
# SCENARIO.
#
###############################################################################
Class EnemyBattleEntity : BattleEntity {
    [EnemyEntityImage]$Image
    [Int]$SpoilsGold
    [MapTileObject[]]$SpoilsItems

    EnemyBattleEntity() {
        $this.Image = $null
        $this.SpoilsGold = 0
        $this.SpoilsItems = @()
        $this.SpoilsEffect = {
            Param(
                [Player]$Player,
                [EnemyBattleEntity]$Opponent
            )

            $Script:TheBattleStatusMessageWindow.WriteSpoilsMessage($Opponent)
            $Script:TheBattleStatusMessageWindow.Draw()
            $Player.CurrentGold += $Opponent.SpoilsGold
            If($Opponent.SpoilsItems.Length -GT 0) {
                [String]$ItemNames = ($Opponent.SpoilsItems | Select-Object -ExpandProperty 'Name') -JOIN ', '
                
                $Script:TheBattleStatusMessageWindow.WriteItemsFoundMessage($ItemNames)
                $Script:TheBattleStatusMessageWindow.Draw()
                Foreach($a in $Opponent.SpoilsItems) {
                    $Player.Inventory.Add($a) | Out-Null
                }
            }
        }
    }
}

###############################################################################
#
# PLAYER
#
# A SPECIALIZATION OF BATTLE ENTITY THAT REPRESENTS THE PLAYER.
#
###############################################################################
Class Player : BattleEntity {
    Static [ConsoleColor24]$AsideColor    = [CCAppleIndigoLight24]::new()
    Static [ConsoleColor24]$GoldDrawColor = [CCAppleYellowLight24]::new()

    [Int]$CurrentGold
    [ATCoordinates]$MapCoordinates
    [List[MapTileObject]]$Inventory
    [List[String]]$TargetOfFilter
    [PlayerActionInventory]$ActionInventory

    Player() : base() {
        $this.CurrentGold     = 0
        $this.MapCoordinates  = [ATCoordinates]::new(0, 0)
        $this.Inventory       = [List[MapTileObject]]::new()
        $this.TargetOfFilter  = [List[String]]::new()
        $this.ActionInventory = [PlayerActionInventory]::new()
    }

    [Boolean]IsItemInInventory(
        [String]$ItemName
    ) {
        Foreach($a in $this.Inventory) {
            If($a.Name -IEQ $ItemName) {
                Return $true
            }
        }

        Return $false
    }

    [MapTileObject]GetItemReference(
        [String]$ItemName
    ) {
        Foreach($a in $this.Inventory) {
            If($a.Name -IEQ $ItemName) {
                Return $a
            }
        }

        Return $null
    }

    [ItemRemovalStatus]RemoveInventoryItemByName(
        [String]$ItemName
    ) {
        $c = 0

        Foreach($a in $this.Inventory) {
            If($a.Name -IEQ $ItemName) {
                If($a.KeyItem -EQ $true) {
                    Return [ItemRemovalStatus]::FailKeyItem
                }
                $this.Inventory.RemoveAt($c)

                Return [ItemRemovalStatus]::Success
            }
            $c++
        }

        Return [ItemRemovalStatus]::FailGeneral
    }

    [ItemRemovalStatus]RemoveInventoryItemByIndex(
        [Int]$Index
    ) {
        [MapTileObject]$a = $null

        Try {
            $a = $this.Inventory[$Index]
        } Catch {
            Return [ItemRemovalStatus]::FailGeneral
        }
        If($a.KeyItem -EQ $true) {
            Return [ItemRemovalStatus]::FailKeyItem
        }
        $this.Inventory.RemoveAt($Index)

        Return [ItemRemovalStatus]::Success
    }

    [Void]MapMoveSouth() {
        If($Script:CurrentMap.GetTileAtPlayerCoordinates().Exits[[MapTile]::TileExitSouth] -EQ $true) {
            If($Script:CurrentMap.BoundaryWrap -EQ $true) {
                $a = $Script:CurrentMap.MapHeight - 1
                $b = $this.MapCoordinates.Row + 1
                $c = $a % $b

                If($c -EQ $a) {
                    $this.MapCoordinates.Row = 0
                } Else {
                    $this.MapCoordinates.Row++
                }
                $Script:TheSceneWindow.UpdateCurrentImage($Script:CurrentMap.GetTileAtPlayerCoordinates().BackgroundImage)
                $Script:TheCommandWindow.UpdateCommandHistory($true)
                $Script:CurrentMap.GetTileAtPlayerCoordinates().BattleStep()

                Return
            } Else {
                $a = $Script:CurrentMap.MapHeight - 1
                $b = $this.MapCoordinates.Row + 1
                $c = $a % $b

                If($c -EQ $a) {
                    $Script:TheCommandWindow.UpdateCommandHistory($true)
                    $Script:TheMessageWindow.WriteInvisibleWallEncounteredMessage()
                } Else {
                    $this.MapCoordinates.Row++
                    $Script:TheSceneWindow.UpdateCurrentImage($Script:CurrentMap.GetTileAtPlayerCoordinates().BackgroundImage)
                    $Script:TheCommandWindow.UpdateCommandHistory($true)
                    $Script:CurrentMap.GetTileAtPlayerCoordinates().BattleStep()

                    Return
                }
            }
        } Else {
            $Script:TheCommandWindow.UpdateCommandHistory($true)
            $Script:TheMessageWindow.WriteYouShallNotPassMessage()

            Return
        }
    }

    [Void]MapMoveNorth() {
        If($Script:CurrentMap.GetTileAtPlayerCoordinates().Exits[[MapTile]::TileExitNorth] -EQ $true) {
            If($Script:CurrentMap.BoundaryWrap -EQ $true) {
                $a = 0
                $b = $this.MapCoordinates.Row - 1

                If($b -LT $a) {
                    $this.MapCoordinates.Row = $Script:CurrentMap.MapHeight - 1
                } Else {
                    $this.MapCoordinates.Row--
                }
                $Script:TheSceneWindow.UpdateCurrentImage($Script:CurrentMap.GetTileAtPlayerCoordinates().BackgroundImage)
                $Script:TheCommandWindow.UpdateCommandHistory($true)
                $Script:CurrentMap.GetTileAtPlayerCoordinates().BattleStep()

                Return
            } Else {
                $a = 0
                $b = $this.MapCoordinates.Row - 1

                If($b -LT $a) {
                    $Script:TheCommandWindow.UpdateCommandHistory($true)
                    $Script:TheMessageWindow.WriteInvisibleWallEncounteredMessage()
                } Else {
                    $this.MapCoordinates.Row--
                    $Script:TheSceneWindow.UpdateCurrentImage($Script:CurrentMap.GetTileAtPlayerCoordinates().BackgroundImage)
                    $Script:TheCommandWindow.UpdateCommandHistory($true)
                    $Script:CurrentMap.GetTileAtPlayerCoordinates().BattleStep()

                    Return
                }
            }
        } Else {
            $Script:TheCommandWindow.UpdateCommandHistory($true)
            $Script:TheMessageWindow.WriteYouShallNotPassMessage()

            Return
        }
    }

    [Void]MapMoveEast() {
        If($Script:CurrentMap.GetTileAtPlayerCoordinates().Exits[[MapTile]::TileExitEast] -EQ $true) {
            If($Script:CurrentMap.BoundaryWrap -EQ $true) {
                $a = $Script:CurrentMap.MapWidth - 1
                $b = $this.MapCoordinates.Column + 1
                $c = $a % $b

                If($c -EQ $a) {
                    $this.MapCoordinates.Column = 0
                } Else {
                    $this.MapCoordinates.Column++
                }
                $Script:TheSceneWindow.UpdateCurrentImage($Script:CurrentMap.GetTileAtPlayerCoordinates().BackgroundImage)
                $Script:TheCommandWindow.UpdateCommandHistory($true)
                $Script:CurrentMap.GetTileAtPlayerCoordinates().BattleStep()

                Return
            } Else {
                $a = $Script:CurrentMap.MapWidth - 1
                $b = $this.MapCoordinates.Column + 1
                $c = $a % $b

                If($c -EQ $a) {
                    $Script:TheCommandWindow.UpdateCommandHistory($true)
                    $Script:TheMessageWindow.WriteInvisibleWallEncounteredMessage()
                } Else {
                    $this.MapCoordinates.Column++
                    $Script:TheSceneWindow.UpdateCurrentImage($Script:CurrentMap.GetTileAtPlayerCoordinates().BackgroundImage)
                    $Script:TheCommandWindow.UpdateCommandHistory($true)
                    $Script:CurrentMap.GetTileAtPlayerCoordinates().BattleStep()

                    Return
                }
            }
        } Else {
            $Script:TheCommandWindow.UpdateCommandHistory($true)
            $Script:TheMessageWindow.WriteYouShallNotPassMessage()

            Return
        }
    }

    [Void]MapMoveWest() {
        If($Script:CurrentMap.GetTileAtPlayerCoordinates().Exits[[MapTile]::TileExitWest] -EQ $true) {
            If($Script:CurrentMap.BoundaryWrap -EQ $true) {
                $a = 0
                $b = $this.MapCoordinates.Column - 1

                If($b -LT $a) {
                    $this.MapCoordinates.Column = $Script:CurrentMap.MapWidth - 1
                } Else {
                    $this.MapCoordinates.Column--
                }
                $Script:TheSceneWindow.UpdateCurrentImage($Script:CurrentMap.GetTileAtPlayerCoordinates().BackgroundImage)
                $Script:TheCommandWindow.UpdateCommandHistory($true)
                $Script:CurrentMap.GetTileAtPlayerCoordinates().BattleStep()

                Return
            } Else {
                $a = 0
                $b = $this.MapCoordinates.Column - 1

                If($b -LT $a) {
                    $Script:TheCommandWindow.UpdateCommandHistory($true)
                    $Script:TheMessageWindow.WriteInvisibleWallEncounteredMessage()
                } Else {
                    $this.MapCoordinates.Column--
                    $Script:TheSceneWindow.UpdateCurrentImage($Script:CurrentMap.GetTileAtPlayerCoordinates().BackgroundImage)
                    $Script:TheCommandWindow.UpdateCommandHistory($true)
                    $Script:CurrentMap.GetTileAtPlayerCoordinates().BattleStep()

                    Return
                }
            }
        } Else {
            $Script:TheCommandWindow.UpdateCommandHistory($true)
            $Script:TheMessageWindow.WriteYouShallNotPassMessage()

            Return
        }
    }

    [Boolean]ValidateSourceInFilter(
        [String]$SourceItemClass
    ) {
        Return ($SourceItemClass -IN $this.TargetOfFilter)
    }
}

###############################################################################
#
# PLAYER ITEM INVENTORY
#
# A FOCAL POINT FOR THE PLAYER'S ITEM INVENTORY.
#
###############################################################################
Class PlayerItemInventory {
    [List[MapTileObject]]$Listing

    [Boolean]IsItemInInventory(
        [String]$ItemName
    ) {
        Foreach($a in $this.Listing) {
            If($a.Name -IEQ $ItemName) {
                Return $true
            }
        }

        Return $false
    }

    [MapTileObject]GetItemReference(
        [String]$ItemName
    ) {
        Foreach($a in $this.Inventory) {
            If($a.Name -IEQ $ItemName) {
                Return $a
            }
        }

        Return $null
    }

    [ItemRemovalStatus]RemoveInventoryItemByName(
        [String]$ItemName
    ) {
        [Int]$c = 0

        Foreach($a in $this.Inventory) {
            If($a.Name -IEQ $ItemName) {
                If($a.KeyItem -EQ $true) {
                    Return [ItemRemovalStatus]::FailKeyItem
                }
                $this.Listing.RemoveAt($c)

                Return [ItemRemovalStatus]::Success
            }
            $c++
        }

        Return [ItemRemovalStatus]::FailGeneral
    }

    [ItemRemovalStatus]RemoveInventoryItemByIndex(
        [Int]$Index
    ) {
        [MapTileObject]$a = $null

        Try {
            $a = $this.Listing[$Index]
        } Catch {
            Return [ItemRemovalStatus]::FailGeneral
        }
        If($a.KeyItem -EQ $true) {
            Return [ItemRemovalStatus]::FailKeyItem
        }
        $this.Listing.RemoveAt($Index)

        Return [ItemRemovalStatus]::Success
    }
}

###############################################################################
#
# PLAYER ACTION INVENTORY
#
# A FOCAL POINT FOR THE PLAYER'S BATTLE ACTION INVENTORY.
#
###############################################################################
Class PlayerActionInventory {
    [List[BattleAction]]$Listing = [List[BattleAction]]::new()

    [Boolean]IsActionInInventory(
        [String]$ActionName
    ) {
        Foreach($a in $this.Listing) {
            If($a.Name -IEQ $ActionName) {
                Return $true
            }
        }

        Return $false
    }

    [BattleAction]GetActionReference(
        [String]$ActionName
    ) {
        Foreach($a in $this.Listing) {
            If($a.Name -IEQ $ActionName) {
                Return $a
            }
        }

        Return $null
    }

    [ActionInvRemovalStatus]RemoveActionByName(
        [String]$ActionName
    ) {
        [Int]$c = 0

        Foreach($a in $this.Listing) {
            If($a.Name -IEQ $ActionName) {
                $this.Listing.RemoveAt($c)

                Return [ActionInvRemovalStatus]::Success
            }
            $c++
        }

        Return [ActionInvRemovalStatus]::Fail
    }

    [ActionInvRemovalStatus]RemoveActionByIndex(
        [Int]$Index
    ) {
        [BattleAction]$a = $null

        Try {
            $a = $this.Listing[$Index]
        } Catch {
            Return [ActionInvRemovalStatus]::Fail
        }
        $this.Listing.RemoveAt($Index)

        Return [ActionInvRemovalStatus]::Success
    }

    [Boolean]Add(
        [BattleAction]$ActionToAdd
    ) {
        [Boolean]$ActionAlreadyListed = $this.IsActionInInventory($ActionToAdd.Name)

        If($ActionAlreadyListed -EQ $true) {
            Return $false
        }
        # $this.Listing.Add([BattleAction]::new($ActionToAdd))
        $this.Listing.Add($ActionToAdd)

        Return $true
    }
}

###############################################################################
#
# ENEMY ENTITY IMAGE
#
# A COMPOSITION OF AT SCENE IMAGE STRING INTENDED TO BE USED WITH AN ENEMY
# ENTITY. THIS ISN'T AN "IMAGE" PER-SE, RATHER A LARGE ARRAY OF ANSI
# TERMINATED STRINGS THAT COALESCE INTO AN IMAGE.
#
###############################################################################
Class EnemyEntityImage {
    Static [Int]$Width  = 37
    Static [Int]$Height = 15

    [ATSceneImageString[,]]$Image

    EnemyEntityImage() {
        $this.Image = New-Object 'ATSceneImageString[,]' ([Int32]([SceneImage]::Height)), ([Int32]([SceneImage]::Width))
    }

    # THIS CTOR LIKELY ISN'T USED
    # EnemyEntityImage(
    #     [ATSceneImageString[,]]$Image
    # ) {
    #     $this.Image = $Image
    # }

    [Void]CreateImageATString([ATBackgroundColor24[]]$ImageColorMap) {
        For($r = 0; $r -LT [EnemyEntityImage]::Height; $r++) {
            For($c = 0; $c -LT [EnemyEntityImage]::Width; $c++) {
                $rf                 = ($r * [EnemyEntityImage]::Width) + $c
                $this.Image[$r, $c] = [ATSceneImageString]::new(
                    $ImageColorMap[$rf],
                    [ATCoordinates]::new(([BattleEnemyImageWindow]::ImageDrawRowOffset + $r), ([BattleEnemyImageWindow]::ImageDrawColumnOffset + $c))
                )
            }
        }
    }

    [String]ToAnsiControlSequenceString() {
        [String]$a = ''

        For($r = 0; $r -LT [EnemyEntityImage]::Height; $r++) {
            For($c = 0; $c -LT [EnemyEntityImage]::Width; $c++) {
                $a += $this.Image[$r, $c].ToAnsiControlSequenceString()
            }
        }

        Return $a
    }
}

###############################################################################
#
# EEI EMPTY
#
# A SYMBOLIC REPRESENTATION OF AN EMPTY ENEMY IMAGE.
#
###############################################################################
Class EEIEmpty : EnemyEntityImage {
    EEIEmpty() : base() {}

    [String]ToAnsiControlSequenceString() {
        Return ''
    }
}

###############################################################################
#
# EEI INTERNAL BASE
#
# AN EXPRESSION OF THE ENEMY ENTITY IMAGE THAT ADDS A COLOR MAP. THIS IS THE
# BASE FOR PRACTICAL APPLICATIONS.
#
###############################################################################
Class EEIInternalBase : EnemyEntityImage {
    [ATBackgroundColor24[]]$ColorMap

    EEIInternalBase() : base() {
        $this.ColorMap = New-Object 'ATBackgroundColor24[]' ([Int32](([Int32]([SceneImage]::Width)) * ([Int32]([SceneImage]::Height))))
    }
}

###############################################################################
#
# EEI SPECIALIZATIONS
#
# THESE ARE SPECIALIZATIONS OF EEI INTERNAL BASE THAT REPRESENT ACTUAL "IMAGES"
# THAT WOULD BE DRAWN IN THE BATTLE WINDOW. THE NAMES OF THE CLASSES ARE
# SELF-EVIDENT.
#
###############################################################################
Class EEIBat : EEIInternalBase {
    EEIBat() : base() {
        $this.ColorMap[0]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[1]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[2]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[3]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[4]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[5]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[6]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[7]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[8]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[9]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[10]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[11]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[12]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[13]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[14]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[15]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[16]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[17]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[18]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[19]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[20]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[21]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[22]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[23]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[24]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[25]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[26]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[27]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[28]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[29]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[30]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[31]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[32]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[33]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[34]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[35]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[36]  = [ATBackgroundColor24None]::new() # End Row 0
        $this.ColorMap[37]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[38]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[39]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[40]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[41]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[42]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[43]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[44]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[45]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[46]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[47]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[48]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[49]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[50]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[51]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[52]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[53]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[54]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[55]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[56]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[57]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[58]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[59]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[60]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[61]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[62]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[63]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[64]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[65]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[66]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[67]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[68]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[69]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[70]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[71]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[72]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[73]  = [ATBackgroundColor24None]::new() # End Row 1
        $this.ColorMap[74]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[75]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[76]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[77]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[78]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[79]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[80]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[81]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[82]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[83]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[84]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[85]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[86]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[87]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[88]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[89]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[90]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[91]  = [CCAppleRedDark24]::new()
        $this.ColorMap[92]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[93]  = [CCAppleRedDark24]::new()
        $this.ColorMap[94]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[95]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[96]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[97]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[98]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[99]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[100] = [ATBackgroundColor24None]::new()
        $this.ColorMap[101] = [ATBackgroundColor24None]::new()
        $this.ColorMap[102] = [ATBackgroundColor24None]::new()
        $this.ColorMap[103] = [ATBackgroundColor24None]::new()
        $this.ColorMap[104] = [ATBackgroundColor24None]::new()
        $this.ColorMap[105] = [ATBackgroundColor24None]::new()
        $this.ColorMap[106] = [ATBackgroundColor24None]::new()
        $this.ColorMap[107] = [ATBackgroundColor24None]::new()
        $this.ColorMap[108] = [ATBackgroundColor24None]::new()
        $this.ColorMap[109] = [ATBackgroundColor24None]::new()
        $this.ColorMap[110] = [ATBackgroundColor24None]::new() # End Row 2
        $this.ColorMap[111] = [ATBackgroundColor24None]::new()
        $this.ColorMap[112] = [ATBackgroundColor24None]::new()
        $this.ColorMap[113] = [ATBackgroundColor24None]::new()
        $this.ColorMap[114] = [ATBackgroundColor24None]::new()
        $this.ColorMap[115] = [ATBackgroundColor24None]::new()
        $this.ColorMap[116] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[117] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[118] = [ATBackgroundColor24None]::new()
        $this.ColorMap[119] = [ATBackgroundColor24None]::new()
        $this.ColorMap[120] = [ATBackgroundColor24None]::new()
        $this.ColorMap[121] = [ATBackgroundColor24None]::new()
        $this.ColorMap[122] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[123] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[124] = [ATBackgroundColor24None]::new()
        $this.ColorMap[125] = [ATBackgroundColor24None]::new()
        $this.ColorMap[126] = [ATBackgroundColor24None]::new()
        $this.ColorMap[127] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[128] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[129] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[130] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[131] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[132] = [ATBackgroundColor24None]::new()
        $this.ColorMap[133] = [ATBackgroundColor24None]::new()
        $this.ColorMap[134] = [ATBackgroundColor24None]::new()
        $this.ColorMap[135] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[136] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[137] = [ATBackgroundColor24None]::new()
        $this.ColorMap[138] = [ATBackgroundColor24None]::new()
        $this.ColorMap[139] = [ATBackgroundColor24None]::new()
        $this.ColorMap[140] = [ATBackgroundColor24None]::new()
        $this.ColorMap[141] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[142] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[143] = [ATBackgroundColor24None]::new()
        $this.ColorMap[144] = [ATBackgroundColor24None]::new()
        $this.ColorMap[145] = [ATBackgroundColor24None]::new()
        $this.ColorMap[146] = [ATBackgroundColor24None]::new()
        $this.ColorMap[147] = [ATBackgroundColor24None]::new() # End Row 3
        $this.ColorMap[148] = [ATBackgroundColor24None]::new()
        $this.ColorMap[149] = [ATBackgroundColor24None]::new()
        $this.ColorMap[150] = [ATBackgroundColor24None]::new()
        $this.ColorMap[151] = [ATBackgroundColor24None]::new()
        $this.ColorMap[152] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[153] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[154] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[155] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[156] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[157] = [ATBackgroundColor24None]::new()
        $this.ColorMap[158] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[159] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[160] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[161] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[162] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[163] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[164] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[165] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[166] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[167] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[168] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[169] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[170] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[171] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[172] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[173] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[174] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[175] = [ATBackgroundColor24None]::new()
        $this.ColorMap[176] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[177] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[178] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[179] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[180] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[181] = [ATBackgroundColor24None]::new()
        $this.ColorMap[182] = [ATBackgroundColor24None]::new()
        $this.ColorMap[183] = [ATBackgroundColor24None]::new()
        $this.ColorMap[184] = [ATBackgroundColor24None]::new() # End Row 4
        $this.ColorMap[185] = [ATBackgroundColor24None]::new()
        $this.ColorMap[186] = [ATBackgroundColor24None]::new()
        $this.ColorMap[187] = [ATBackgroundColor24None]::new()
        $this.ColorMap[188] = [ATBackgroundColor24None]::new()
        $this.ColorMap[189] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[190] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[191] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[192] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[193] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[194] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[195] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[196] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[197] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[198] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[199] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[200] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[201] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[202] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[203] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[204] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[205] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[206] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[207] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[208] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[209] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[210] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[211] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[212] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[213] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[214] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[215] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[216] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[217] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[218] = [ATBackgroundColor24None]::new()
        $this.ColorMap[219] = [ATBackgroundColor24None]::new()
        $this.ColorMap[220] = [ATBackgroundColor24None]::new()
        $this.ColorMap[221] = [ATBackgroundColor24None]::new() # End Row 5
        $this.ColorMap[222] = [ATBackgroundColor24None]::new()
        $this.ColorMap[223] = [ATBackgroundColor24None]::new()
        $this.ColorMap[224] = [ATBackgroundColor24None]::new()
        $this.ColorMap[225] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[226] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[227] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[228] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[229] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[230] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[231] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[232] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[233] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[234] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[235] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[236] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[237] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[238] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[239] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[240] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[241] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[242] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[243] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[244] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[245] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[246] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[247] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[248] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[249] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[250] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[251] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[252] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[253] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[254] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[255] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[256] = [ATBackgroundColor24None]::new()
        $this.ColorMap[257] = [ATBackgroundColor24None]::new()
        $this.ColorMap[258] = [ATBackgroundColor24None]::new() # End Row 6
        $this.ColorMap[259] = [ATBackgroundColor24None]::new()
        $this.ColorMap[260] = [ATBackgroundColor24None]::new()
        $this.ColorMap[261] = [ATBackgroundColor24None]::new()
        $this.ColorMap[262] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[263] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[264] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[265] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[266] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[267] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[268] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[269] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[270] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[271] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[272] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[273] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[274] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[275] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[276] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[277] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[278] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[279] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[280] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[281] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[282] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[283] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[284] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[285] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[286] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[287] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[288] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[289] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[290] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[291] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[292] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[293] = [ATBackgroundColor24None]::new()
        $this.ColorMap[294] = [ATBackgroundColor24None]::new()
        $this.ColorMap[295] = [ATBackgroundColor24None]::new() # End Row 7
        $this.ColorMap[296] = [ATBackgroundColor24None]::new()
        $this.ColorMap[297] = [ATBackgroundColor24None]::new()
        $this.ColorMap[298] = [ATBackgroundColor24None]::new()
        $this.ColorMap[299] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[300] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[301] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[302] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[303] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[304] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[305] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[306] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[307] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[308] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[309] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[310] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[311] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[312] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[313] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[314] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[315] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[316] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[317] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[318] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[319] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[320] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[321] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[322] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[323] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[324] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[325] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[326] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[327] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[328] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[329] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[330] = [ATBackgroundColor24None]::new()
        $this.ColorMap[331] = [ATBackgroundColor24None]::new()
        $this.ColorMap[332] = [ATBackgroundColor24None]::new() # End Row 8
        $this.ColorMap[333] = [ATBackgroundColor24None]::new()
        $this.ColorMap[334] = [ATBackgroundColor24None]::new()
        $this.ColorMap[335] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[336] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[337] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[338] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[339] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[340] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[341] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[342] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[343] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[344] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[345] = [ATBackgroundColor24None]::new()
        $this.ColorMap[346] = [ATBackgroundColor24None]::new()
        $this.ColorMap[347] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[348] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[349] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[350] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[351] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[352] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[353] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[354] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[355] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[356] = [ATBackgroundColor24None]::new()
        $this.ColorMap[357] = [ATBackgroundColor24None]::new()
        $this.ColorMap[358] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[359] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[360] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[361] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[362] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[363] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[364] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[365] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[366] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[367] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[368] = [ATBackgroundColor24None]::new()
        $this.ColorMap[369] = [ATBackgroundColor24None]::new() # End Row 9
        $this.ColorMap[370] = [ATBackgroundColor24None]::new()
        $this.ColorMap[371] = [ATBackgroundColor24None]::new()
        $this.ColorMap[372] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[373] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[374] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[375] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[376] = [ATBackgroundColor24None]::new()
        $this.ColorMap[377] = [ATBackgroundColor24None]::new()
        $this.ColorMap[378] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[379] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[380] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[381] = [ATBackgroundColor24None]::new()
        $this.ColorMap[382] = [ATBackgroundColor24None]::new()
        $this.ColorMap[383] = [ATBackgroundColor24None]::new()
        $this.ColorMap[384] = [ATBackgroundColor24None]::new()
        $this.ColorMap[385] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[386] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[387] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[388] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[389] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[390] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[391] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[392] = [ATBackgroundColor24None]::new()
        $this.ColorMap[393] = [ATBackgroundColor24None]::new()
        $this.ColorMap[394] = [ATBackgroundColor24None]::new()
        $this.ColorMap[395] = [ATBackgroundColor24None]::new()
        $this.ColorMap[396] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[397] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[398] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[399] = [ATBackgroundColor24None]::new()
        $this.ColorMap[400] = [ATBackgroundColor24None]::new()
        $this.ColorMap[401] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[402] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[403] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[404] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[405] = [ATBackgroundColor24None]::new()
        $this.ColorMap[406] = [ATBackgroundColor24None]::new() # End Row 10
        $this.ColorMap[407] = [ATBackgroundColor24None]::new()
        $this.ColorMap[408] = [ATBackgroundColor24None]::new()
        $this.ColorMap[409] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[410] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[411] = [ATBackgroundColor24None]::new()
        $this.ColorMap[412] = [ATBackgroundColor24None]::new()
        $this.ColorMap[413] = [ATBackgroundColor24None]::new()
        $this.ColorMap[414] = [ATBackgroundColor24None]::new()
        $this.ColorMap[415] = [ATBackgroundColor24None]::new()
        $this.ColorMap[416] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[417] = [ATBackgroundColor24None]::new()
        $this.ColorMap[418] = [ATBackgroundColor24None]::new()
        $this.ColorMap[419] = [ATBackgroundColor24None]::new()
        $this.ColorMap[420] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[421] = [ATBackgroundColor24None]::new()
        $this.ColorMap[422] = [ATBackgroundColor24None]::new()
        $this.ColorMap[423] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[424] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[425] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[426] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[427] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[428] = [ATBackgroundColor24None]::new()
        $this.ColorMap[429] = [ATBackgroundColor24None]::new()
        $this.ColorMap[430] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[431] = [ATBackgroundColor24None]::new()
        $this.ColorMap[432] = [ATBackgroundColor24None]::new()
        $this.ColorMap[433] = [ATBackgroundColor24None]::new()
        $this.ColorMap[434] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[435] = [ATBackgroundColor24None]::new()
        $this.ColorMap[436] = [ATBackgroundColor24None]::new()
        $this.ColorMap[437] = [ATBackgroundColor24None]::new()
        $this.ColorMap[438] = [ATBackgroundColor24None]::new()
        $this.ColorMap[439] = [ATBackgroundColor24None]::new()
        $this.ColorMap[440] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[441] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[442] = [ATBackgroundColor24None]::new()
        $this.ColorMap[443] = [ATBackgroundColor24None]::new() # End Row 11
        $this.ColorMap[444] = [ATBackgroundColor24None]::new()
        $this.ColorMap[445] = [ATBackgroundColor24None]::new()
        $this.ColorMap[446] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[447] = [ATBackgroundColor24None]::new()
        $this.ColorMap[448] = [ATBackgroundColor24None]::new()
        $this.ColorMap[449] = [ATBackgroundColor24None]::new()
        $this.ColorMap[450] = [ATBackgroundColor24None]::new()
        $this.ColorMap[451] = [ATBackgroundColor24None]::new()
        $this.ColorMap[452] = [ATBackgroundColor24None]::new()
        $this.ColorMap[453] = [ATBackgroundColor24None]::new()
        $this.ColorMap[454] = [ATBackgroundColor24None]::new()
        $this.ColorMap[455] = [ATBackgroundColor24None]::new()
        $this.ColorMap[456] = [ATBackgroundColor24None]::new()
        $this.ColorMap[457] = [ATBackgroundColor24None]::new()
        $this.ColorMap[458] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[459] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[460] = [ATBackgroundColor24None]::new()
        $this.ColorMap[461] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[462] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[463] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[464] = [ATBackgroundColor24None]::new()
        $this.ColorMap[465] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[466] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[467] = [ATBackgroundColor24None]::new()
        $this.ColorMap[468] = [ATBackgroundColor24None]::new()
        $this.ColorMap[469] = [ATBackgroundColor24None]::new()
        $this.ColorMap[470] = [ATBackgroundColor24None]::new()
        $this.ColorMap[471] = [ATBackgroundColor24None]::new()
        $this.ColorMap[472] = [ATBackgroundColor24None]::new()
        $this.ColorMap[473] = [ATBackgroundColor24None]::new()
        $this.ColorMap[474] = [ATBackgroundColor24None]::new()
        $this.ColorMap[475] = [ATBackgroundColor24None]::new()
        $this.ColorMap[476] = [ATBackgroundColor24None]::new()
        $this.ColorMap[477] = [ATBackgroundColor24None]::new()
        $this.ColorMap[478] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[479] = [ATBackgroundColor24None]::new()
        $this.ColorMap[480] = [ATBackgroundColor24None]::new() # End Row 12
        $this.ColorMap[481] = [ATBackgroundColor24None]::new()
        $this.ColorMap[482] = [ATBackgroundColor24None]::new()
        $this.ColorMap[483] = [ATBackgroundColor24None]::new()
        $this.ColorMap[484] = [ATBackgroundColor24None]::new()
        $this.ColorMap[485] = [ATBackgroundColor24None]::new()
        $this.ColorMap[486] = [ATBackgroundColor24None]::new()
        $this.ColorMap[487] = [ATBackgroundColor24None]::new()
        $this.ColorMap[488] = [ATBackgroundColor24None]::new()
        $this.ColorMap[489] = [ATBackgroundColor24None]::new()
        $this.ColorMap[490] = [ATBackgroundColor24None]::new()
        $this.ColorMap[491] = [ATBackgroundColor24None]::new()
        $this.ColorMap[492] = [ATBackgroundColor24None]::new()
        $this.ColorMap[493] = [ATBackgroundColor24None]::new()
        $this.ColorMap[494] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[495] = [ATBackgroundColor24None]::new()
        $this.ColorMap[496] = [ATBackgroundColor24None]::new()
        $this.ColorMap[497] = [ATBackgroundColor24None]::new()
        $this.ColorMap[498] = [ATBackgroundColor24None]::new()
        $this.ColorMap[499] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[500] = [ATBackgroundColor24None]::new()
        $this.ColorMap[501] = [ATBackgroundColor24None]::new()
        $this.ColorMap[502] = [ATBackgroundColor24None]::new()
        $this.ColorMap[503] = [ATBackgroundColor24None]::new()
        $this.ColorMap[504] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[505] = [ATBackgroundColor24None]::new()
        $this.ColorMap[506] = [ATBackgroundColor24None]::new()
        $this.ColorMap[507] = [ATBackgroundColor24None]::new()
        $this.ColorMap[508] = [ATBackgroundColor24None]::new()
        $this.ColorMap[509] = [ATBackgroundColor24None]::new()
        $this.ColorMap[510] = [ATBackgroundColor24None]::new()
        $this.ColorMap[511] = [ATBackgroundColor24None]::new()
        $this.ColorMap[512] = [ATBackgroundColor24None]::new()
        $this.ColorMap[513] = [ATBackgroundColor24None]::new()
        $this.ColorMap[514] = [ATBackgroundColor24None]::new()
        $this.ColorMap[515] = [ATBackgroundColor24None]::new()
        $this.ColorMap[516] = [ATBackgroundColor24None]::new()
        $this.ColorMap[517] = [ATBackgroundColor24None]::new() # End Row 13
        $this.ColorMap[518] = [ATBackgroundColor24None]::new()
        $this.ColorMap[519] = [ATBackgroundColor24None]::new()
        $this.ColorMap[520] = [ATBackgroundColor24None]::new()
        $this.ColorMap[521] = [ATBackgroundColor24None]::new()
        $this.ColorMap[522] = [ATBackgroundColor24None]::new()
        $this.ColorMap[523] = [ATBackgroundColor24None]::new()
        $this.ColorMap[524] = [ATBackgroundColor24None]::new()
        $this.ColorMap[525] = [ATBackgroundColor24None]::new()
        $this.ColorMap[526] = [ATBackgroundColor24None]::new()
        $this.ColorMap[527] = [ATBackgroundColor24None]::new()
        $this.ColorMap[528] = [ATBackgroundColor24None]::new()
        $this.ColorMap[529] = [ATBackgroundColor24None]::new()
        $this.ColorMap[530] = [ATBackgroundColor24None]::new()
        $this.ColorMap[531] = [ATBackgroundColor24None]::new()
        $this.ColorMap[532] = [ATBackgroundColor24None]::new()
        $this.ColorMap[533] = [ATBackgroundColor24None]::new()
        $this.ColorMap[534] = [ATBackgroundColor24None]::new()
        $this.ColorMap[535] = [ATBackgroundColor24None]::new()
        $this.ColorMap[536] = [ATBackgroundColor24None]::new()
        $this.ColorMap[537] = [ATBackgroundColor24None]::new()
        $this.ColorMap[538] = [ATBackgroundColor24None]::new()
        $this.ColorMap[539] = [ATBackgroundColor24None]::new()
        $this.ColorMap[540] = [ATBackgroundColor24None]::new()
        $this.ColorMap[541] = [ATBackgroundColor24None]::new()
        $this.ColorMap[542] = [ATBackgroundColor24None]::new()
        $this.ColorMap[543] = [ATBackgroundColor24None]::new()
        $this.ColorMap[544] = [ATBackgroundColor24None]::new()
        $this.ColorMap[545] = [ATBackgroundColor24None]::new()
        $this.ColorMap[546] = [ATBackgroundColor24None]::new()
        $this.ColorMap[547] = [ATBackgroundColor24None]::new()
        $this.ColorMap[548] = [ATBackgroundColor24None]::new()
        $this.ColorMap[549] = [ATBackgroundColor24None]::new()
        $this.ColorMap[550] = [ATBackgroundColor24None]::new()
        $this.ColorMap[551] = [ATBackgroundColor24None]::new()
        $this.ColorMap[552] = [ATBackgroundColor24None]::new()
        $this.ColorMap[553] = [ATBackgroundColor24None]::new()
        $this.ColorMap[554] = [ATBackgroundColor24None]::new() # End Row 14

        $this.CreateImageATString($this.ColorMap)
        $this.ColorMap = $null
    }
}

Class EEINightwing : EEIInternalBase {
    EEINightwing() : base() {
        $this.ColorMap[0]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[1]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[2]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[3]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[4]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[5]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[6]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[7]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[8]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[9]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[10]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[11]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[12]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[13]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[14]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[15]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[16]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[17]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[18]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[19]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[20]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[21]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[22]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[23]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[24]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[25]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[26]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[27]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[28]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[29]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[30]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[31]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[32]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[33]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[34]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[35]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[36]  = [ATBackgroundColor24None]::new() # End Row 0
        $this.ColorMap[37]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[38]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[39]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[40]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[41]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[42]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[43]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[44]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[45]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[46]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[47]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[48]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[49]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[50]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[51]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[52]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[53]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[54]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[55]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[56]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[57]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[58]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[59]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[60]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[61]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[62]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[63]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[64]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[65]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[66]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[67]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[68]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[69]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[70]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[71]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[72]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[73]  = [ATBackgroundColor24None]::new() # End Row 1
        $this.ColorMap[74]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[75]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[76]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[77]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[78]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[79]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[80]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[81]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[82]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[83]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[84]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[85]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[86]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[87]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[88]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[89]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[90]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[91]  = [CCAppleRedDark24]::new()
        $this.ColorMap[92]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[93]  = [CCAppleRedDark24]::new()
        $this.ColorMap[94]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[95]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[96]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[97]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[98]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[99]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[100] = [ATBackgroundColor24None]::new()
        $this.ColorMap[101] = [ATBackgroundColor24None]::new()
        $this.ColorMap[102] = [ATBackgroundColor24None]::new()
        $this.ColorMap[103] = [ATBackgroundColor24None]::new()
        $this.ColorMap[104] = [ATBackgroundColor24None]::new()
        $this.ColorMap[105] = [ATBackgroundColor24None]::new()
        $this.ColorMap[106] = [ATBackgroundColor24None]::new()
        $this.ColorMap[107] = [ATBackgroundColor24None]::new()
        $this.ColorMap[108] = [ATBackgroundColor24None]::new()
        $this.ColorMap[109] = [ATBackgroundColor24None]::new()
        $this.ColorMap[110] = [ATBackgroundColor24None]::new() # End Row 2
        $this.ColorMap[111] = [ATBackgroundColor24None]::new()
        $this.ColorMap[112] = [ATBackgroundColor24None]::new()
        $this.ColorMap[113] = [ATBackgroundColor24None]::new()
        $this.ColorMap[114] = [ATBackgroundColor24None]::new()
        $this.ColorMap[115] = [ATBackgroundColor24None]::new()
        $this.ColorMap[116] = [CCApplePurpleDark24]::new()
        $this.ColorMap[117] = [CCApplePurpleDark24]::new()
        $this.ColorMap[118] = [ATBackgroundColor24None]::new()
        $this.ColorMap[119] = [ATBackgroundColor24None]::new()
        $this.ColorMap[120] = [ATBackgroundColor24None]::new()
        $this.ColorMap[121] = [ATBackgroundColor24None]::new()
        $this.ColorMap[122] = [CCApplePurpleDark24]::new()
        $this.ColorMap[123] = [CCApplePurpleDark24]::new()
        $this.ColorMap[124] = [ATBackgroundColor24None]::new()
        $this.ColorMap[125] = [ATBackgroundColor24None]::new()
        $this.ColorMap[126] = [ATBackgroundColor24None]::new()
        $this.ColorMap[127] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[128] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[129] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[130] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[131] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[132] = [ATBackgroundColor24None]::new()
        $this.ColorMap[133] = [ATBackgroundColor24None]::new()
        $this.ColorMap[134] = [ATBackgroundColor24None]::new()
        $this.ColorMap[135] = [CCApplePurpleDark24]::new()
        $this.ColorMap[136] = [CCApplePurpleDark24]::new()
        $this.ColorMap[137] = [ATBackgroundColor24None]::new()
        $this.ColorMap[138] = [ATBackgroundColor24None]::new()
        $this.ColorMap[139] = [ATBackgroundColor24None]::new()
        $this.ColorMap[140] = [ATBackgroundColor24None]::new()
        $this.ColorMap[141] = [CCApplePurpleDark24]::new()
        $this.ColorMap[142] = [CCApplePurpleDark24]::new()
        $this.ColorMap[143] = [ATBackgroundColor24None]::new()
        $this.ColorMap[144] = [ATBackgroundColor24None]::new()
        $this.ColorMap[145] = [ATBackgroundColor24None]::new()
        $this.ColorMap[146] = [ATBackgroundColor24None]::new()
        $this.ColorMap[147] = [ATBackgroundColor24None]::new() # End Row 3
        $this.ColorMap[148] = [ATBackgroundColor24None]::new()
        $this.ColorMap[149] = [ATBackgroundColor24None]::new()
        $this.ColorMap[150] = [ATBackgroundColor24None]::new()
        $this.ColorMap[151] = [ATBackgroundColor24None]::new()
        $this.ColorMap[152] = [CCApplePurpleDark24]::new()
        $this.ColorMap[153] = [CCApplePurpleDark24]::new()
        $this.ColorMap[154] = [CCApplePurpleDark24]::new()
        $this.ColorMap[155] = [CCApplePurpleDark24]::new()
        $this.ColorMap[156] = [CCApplePurpleDark24]::new()
        $this.ColorMap[157] = [ATBackgroundColor24None]::new()
        $this.ColorMap[158] = [CCApplePurpleDark24]::new()
        $this.ColorMap[159] = [CCApplePurpleDark24]::new()
        $this.ColorMap[160] = [CCApplePurpleDark24]::new()
        $this.ColorMap[161] = [CCApplePurpleDark24]::new()
        $this.ColorMap[162] = [CCApplePurpleDark24]::new()
        $this.ColorMap[163] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[164] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[165] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[166] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[167] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[168] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[169] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[170] = [CCApplePurpleDark24]::new()
        $this.ColorMap[171] = [CCApplePurpleDark24]::new()
        $this.ColorMap[172] = [CCApplePurpleDark24]::new()
        $this.ColorMap[173] = [CCApplePurpleDark24]::new()
        $this.ColorMap[174] = [CCApplePurpleDark24]::new()
        $this.ColorMap[175] = [ATBackgroundColor24None]::new()
        $this.ColorMap[176] = [CCApplePurpleDark24]::new()
        $this.ColorMap[177] = [CCApplePurpleDark24]::new()
        $this.ColorMap[178] = [CCApplePurpleDark24]::new()
        $this.ColorMap[179] = [CCApplePurpleDark24]::new()
        $this.ColorMap[180] = [CCApplePurpleDark24]::new()
        $this.ColorMap[181] = [ATBackgroundColor24None]::new()
        $this.ColorMap[182] = [ATBackgroundColor24None]::new()
        $this.ColorMap[183] = [ATBackgroundColor24None]::new()
        $this.ColorMap[184] = [ATBackgroundColor24None]::new() # End Row 4
        $this.ColorMap[185] = [ATBackgroundColor24None]::new()
        $this.ColorMap[186] = [ATBackgroundColor24None]::new()
        $this.ColorMap[187] = [ATBackgroundColor24None]::new()
        $this.ColorMap[188] = [ATBackgroundColor24None]::new()
        $this.ColorMap[189] = [CCApplePurpleDark24]::new()
        $this.ColorMap[190] = [CCApplePurpleDark24]::new()
        $this.ColorMap[191] = [CCApplePurpleDark24]::new()
        $this.ColorMap[192] = [CCApplePurpleDark24]::new()
        $this.ColorMap[193] = [CCApplePurpleDark24]::new()
        $this.ColorMap[194] = [CCApplePurpleDark24]::new()
        $this.ColorMap[195] = [CCApplePurpleDark24]::new()
        $this.ColorMap[196] = [CCApplePurpleDark24]::new()
        $this.ColorMap[197] = [CCApplePurpleDark24]::new()
        $this.ColorMap[198] = [CCApplePurpleDark24]::new()
        $this.ColorMap[199] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[200] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[201] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[202] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[203] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[204] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[205] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[206] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[207] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[208] = [CCApplePurpleDark24]::new()
        $this.ColorMap[209] = [CCApplePurpleDark24]::new()
        $this.ColorMap[210] = [CCApplePurpleDark24]::new()
        $this.ColorMap[211] = [CCApplePurpleDark24]::new()
        $this.ColorMap[212] = [CCApplePurpleDark24]::new()
        $this.ColorMap[213] = [CCApplePurpleDark24]::new()
        $this.ColorMap[214] = [CCApplePurpleDark24]::new()
        $this.ColorMap[215] = [CCApplePurpleDark24]::new()
        $this.ColorMap[216] = [CCApplePurpleDark24]::new()
        $this.ColorMap[217] = [CCApplePurpleDark24]::new()
        $this.ColorMap[218] = [ATBackgroundColor24None]::new()
        $this.ColorMap[219] = [ATBackgroundColor24None]::new()
        $this.ColorMap[220] = [ATBackgroundColor24None]::new()
        $this.ColorMap[221] = [ATBackgroundColor24None]::new() # End Row 5
        $this.ColorMap[222] = [ATBackgroundColor24None]::new()
        $this.ColorMap[223] = [ATBackgroundColor24None]::new()
        $this.ColorMap[224] = [ATBackgroundColor24None]::new()
        $this.ColorMap[225] = [CCApplePurpleDark24]::new()
        $this.ColorMap[226] = [CCApplePurpleDark24]::new()
        $this.ColorMap[227] = [CCApplePurpleDark24]::new()
        $this.ColorMap[228] = [CCApplePurpleDark24]::new()
        $this.ColorMap[229] = [CCApplePurpleDark24]::new()
        $this.ColorMap[230] = [CCApplePurpleDark24]::new()
        $this.ColorMap[231] = [CCApplePurpleDark24]::new()
        $this.ColorMap[232] = [CCApplePurpleDark24]::new()
        $this.ColorMap[233] = [CCApplePurpleDark24]::new()
        $this.ColorMap[234] = [CCApplePurpleDark24]::new()
        $this.ColorMap[235] = [CCApplePurpleDark24]::new()
        $this.ColorMap[236] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[237] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[238] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[239] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[240] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[241] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[242] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[243] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[244] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[245] = [CCApplePurpleDark24]::new()
        $this.ColorMap[246] = [CCApplePurpleDark24]::new()
        $this.ColorMap[247] = [CCApplePurpleDark24]::new()
        $this.ColorMap[248] = [CCApplePurpleDark24]::new()
        $this.ColorMap[249] = [CCApplePurpleDark24]::new()
        $this.ColorMap[250] = [CCApplePurpleDark24]::new()
        $this.ColorMap[251] = [CCApplePurpleDark24]::new()
        $this.ColorMap[252] = [CCApplePurpleDark24]::new()
        $this.ColorMap[253] = [CCApplePurpleDark24]::new()
        $this.ColorMap[254] = [CCApplePurpleDark24]::new()
        $this.ColorMap[255] = [CCApplePurpleDark24]::new()
        $this.ColorMap[256] = [ATBackgroundColor24None]::new()
        $this.ColorMap[257] = [ATBackgroundColor24None]::new()
        $this.ColorMap[258] = [ATBackgroundColor24None]::new() # End Row 6
        $this.ColorMap[259] = [ATBackgroundColor24None]::new()
        $this.ColorMap[260] = [ATBackgroundColor24None]::new()
        $this.ColorMap[261] = [ATBackgroundColor24None]::new()
        $this.ColorMap[262] = [CCApplePurpleDark24]::new()
        $this.ColorMap[263] = [CCApplePurpleDark24]::new()
        $this.ColorMap[264] = [CCApplePurpleDark24]::new()
        $this.ColorMap[265] = [CCApplePurpleDark24]::new()
        $this.ColorMap[266] = [CCApplePurpleDark24]::new()
        $this.ColorMap[267] = [CCApplePurpleDark24]::new()
        $this.ColorMap[268] = [CCApplePurpleDark24]::new()
        $this.ColorMap[269] = [CCApplePurpleDark24]::new()
        $this.ColorMap[270] = [CCApplePurpleDark24]::new()
        $this.ColorMap[271] = [CCApplePurpleDark24]::new()
        $this.ColorMap[272] = [CCApplePurpleDark24]::new()
        $this.ColorMap[273] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[274] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[275] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[276] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[277] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[278] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[279] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[280] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[281] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[282] = [CCApplePurpleDark24]::new()
        $this.ColorMap[283] = [CCApplePurpleDark24]::new()
        $this.ColorMap[284] = [CCApplePurpleDark24]::new()
        $this.ColorMap[285] = [CCApplePurpleDark24]::new()
        $this.ColorMap[286] = [CCApplePurpleDark24]::new()
        $this.ColorMap[287] = [CCApplePurpleDark24]::new()
        $this.ColorMap[288] = [CCApplePurpleDark24]::new()
        $this.ColorMap[289] = [CCApplePurpleDark24]::new()
        $this.ColorMap[290] = [CCApplePurpleDark24]::new()
        $this.ColorMap[291] = [CCApplePurpleDark24]::new()
        $this.ColorMap[292] = [CCApplePurpleDark24]::new()
        $this.ColorMap[293] = [ATBackgroundColor24None]::new()
        $this.ColorMap[294] = [ATBackgroundColor24None]::new()
        $this.ColorMap[295] = [ATBackgroundColor24None]::new() # End Row 7
        $this.ColorMap[296] = [ATBackgroundColor24None]::new()
        $this.ColorMap[297] = [ATBackgroundColor24None]::new()
        $this.ColorMap[298] = [ATBackgroundColor24None]::new()
        $this.ColorMap[299] = [CCApplePurpleDark24]::new()
        $this.ColorMap[300] = [CCApplePurpleDark24]::new()
        $this.ColorMap[301] = [CCApplePurpleDark24]::new()
        $this.ColorMap[302] = [CCApplePurpleDark24]::new()
        $this.ColorMap[303] = [CCApplePurpleDark24]::new()
        $this.ColorMap[304] = [CCApplePurpleDark24]::new()
        $this.ColorMap[305] = [CCApplePurpleDark24]::new()
        $this.ColorMap[306] = [CCApplePurpleDark24]::new()
        $this.ColorMap[307] = [CCApplePurpleDark24]::new()
        $this.ColorMap[308] = [CCApplePurpleDark24]::new()
        $this.ColorMap[309] = [CCApplePurpleDark24]::new()
        $this.ColorMap[310] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[311] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[312] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[313] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[314] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[315] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[316] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[317] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[318] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[319] = [CCApplePurpleDark24]::new()
        $this.ColorMap[320] = [CCApplePurpleDark24]::new()
        $this.ColorMap[321] = [CCApplePurpleDark24]::new()
        $this.ColorMap[322] = [CCApplePurpleDark24]::new()
        $this.ColorMap[323] = [CCApplePurpleDark24]::new()
        $this.ColorMap[324] = [CCApplePurpleDark24]::new()
        $this.ColorMap[325] = [CCApplePurpleDark24]::new()
        $this.ColorMap[326] = [CCApplePurpleDark24]::new()
        $this.ColorMap[327] = [CCApplePurpleDark24]::new()
        $this.ColorMap[328] = [CCApplePurpleDark24]::new()
        $this.ColorMap[329] = [CCApplePurpleDark24]::new()
        $this.ColorMap[330] = [ATBackgroundColor24None]::new()
        $this.ColorMap[331] = [ATBackgroundColor24None]::new()
        $this.ColorMap[332] = [ATBackgroundColor24None]::new() # End Row 8
        $this.ColorMap[333] = [ATBackgroundColor24None]::new()
        $this.ColorMap[334] = [ATBackgroundColor24None]::new()
        $this.ColorMap[335] = [CCApplePurpleDark24]::new()
        $this.ColorMap[336] = [CCApplePurpleDark24]::new()
        $this.ColorMap[337] = [CCApplePurpleDark24]::new()
        $this.ColorMap[338] = [CCApplePurpleDark24]::new()
        $this.ColorMap[339] = [CCApplePurpleDark24]::new()
        $this.ColorMap[340] = [CCApplePurpleDark24]::new()
        $this.ColorMap[341] = [CCApplePurpleDark24]::new()
        $this.ColorMap[342] = [CCApplePurpleDark24]::new()
        $this.ColorMap[343] = [CCApplePurpleDark24]::new()
        $this.ColorMap[344] = [CCApplePurpleDark24]::new()
        $this.ColorMap[345] = [ATBackgroundColor24None]::new()
        $this.ColorMap[346] = [ATBackgroundColor24None]::new()
        $this.ColorMap[347] = [CCApplePurpleDark24]::new()
        $this.ColorMap[348] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[349] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[350] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[351] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[352] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[353] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[354] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[355] = [CCApplePurpleDark24]::new()
        $this.ColorMap[356] = [ATBackgroundColor24None]::new()
        $this.ColorMap[357] = [ATBackgroundColor24None]::new()
        $this.ColorMap[358] = [CCApplePurpleDark24]::new()
        $this.ColorMap[359] = [CCApplePurpleDark24]::new()
        $this.ColorMap[360] = [CCApplePurpleDark24]::new()
        $this.ColorMap[361] = [CCApplePurpleDark24]::new()
        $this.ColorMap[362] = [CCApplePurpleDark24]::new()
        $this.ColorMap[363] = [CCApplePurpleDark24]::new()
        $this.ColorMap[364] = [CCApplePurpleDark24]::new()
        $this.ColorMap[365] = [CCApplePurpleDark24]::new()
        $this.ColorMap[366] = [CCApplePurpleDark24]::new()
        $this.ColorMap[367] = [CCApplePurpleDark24]::new()
        $this.ColorMap[368] = [ATBackgroundColor24None]::new()
        $this.ColorMap[369] = [ATBackgroundColor24None]::new() # End Row 9
        $this.ColorMap[370] = [ATBackgroundColor24None]::new()
        $this.ColorMap[371] = [ATBackgroundColor24None]::new()
        $this.ColorMap[372] = [CCApplePurpleDark24]::new()
        $this.ColorMap[373] = [CCApplePurpleDark24]::new()
        $this.ColorMap[374] = [CCApplePurpleDark24]::new()
        $this.ColorMap[375] = [CCApplePurpleDark24]::new()
        $this.ColorMap[376] = [ATBackgroundColor24None]::new()
        $this.ColorMap[377] = [ATBackgroundColor24None]::new()
        $this.ColorMap[378] = [CCApplePurpleDark24]::new()
        $this.ColorMap[379] = [CCApplePurpleDark24]::new()
        $this.ColorMap[380] = [CCApplePurpleDark24]::new()
        $this.ColorMap[381] = [ATBackgroundColor24None]::new()
        $this.ColorMap[382] = [ATBackgroundColor24None]::new()
        $this.ColorMap[383] = [ATBackgroundColor24None]::new()
        $this.ColorMap[384] = [ATBackgroundColor24None]::new()
        $this.ColorMap[385] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[386] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[387] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[388] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[389] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[390] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[391] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[392] = [ATBackgroundColor24None]::new()
        $this.ColorMap[393] = [ATBackgroundColor24None]::new()
        $this.ColorMap[394] = [ATBackgroundColor24None]::new()
        $this.ColorMap[395] = [ATBackgroundColor24None]::new()
        $this.ColorMap[396] = [CCApplePurpleDark24]::new()
        $this.ColorMap[397] = [CCApplePurpleDark24]::new()
        $this.ColorMap[398] = [CCApplePurpleDark24]::new()
        $this.ColorMap[399] = [ATBackgroundColor24None]::new()
        $this.ColorMap[400] = [ATBackgroundColor24None]::new()
        $this.ColorMap[401] = [CCApplePurpleDark24]::new()
        $this.ColorMap[402] = [CCApplePurpleDark24]::new()
        $this.ColorMap[403] = [CCApplePurpleDark24]::new()
        $this.ColorMap[404] = [CCApplePurpleDark24]::new()
        $this.ColorMap[405] = [ATBackgroundColor24None]::new()
        $this.ColorMap[406] = [ATBackgroundColor24None]::new() # End Row 10
        $this.ColorMap[407] = [ATBackgroundColor24None]::new()
        $this.ColorMap[408] = [ATBackgroundColor24None]::new()
        $this.ColorMap[409] = [CCApplePurpleDark24]::new()
        $this.ColorMap[410] = [CCApplePurpleDark24]::new()
        $this.ColorMap[411] = [ATBackgroundColor24None]::new()
        $this.ColorMap[412] = [ATBackgroundColor24None]::new()
        $this.ColorMap[413] = [ATBackgroundColor24None]::new()
        $this.ColorMap[414] = [ATBackgroundColor24None]::new()
        $this.ColorMap[415] = [ATBackgroundColor24None]::new()
        $this.ColorMap[416] = [CCApplePurpleDark24]::new()
        $this.ColorMap[417] = [ATBackgroundColor24None]::new()
        $this.ColorMap[418] = [ATBackgroundColor24None]::new()
        $this.ColorMap[419] = [ATBackgroundColor24None]::new()
        $this.ColorMap[420] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[421] = [ATBackgroundColor24None]::new()
        $this.ColorMap[422] = [ATBackgroundColor24None]::new()
        $this.ColorMap[423] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[424] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[425] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[426] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[427] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[428] = [ATBackgroundColor24None]::new()
        $this.ColorMap[429] = [ATBackgroundColor24None]::new()
        $this.ColorMap[430] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[431] = [ATBackgroundColor24None]::new()
        $this.ColorMap[432] = [ATBackgroundColor24None]::new()
        $this.ColorMap[433] = [ATBackgroundColor24None]::new()
        $this.ColorMap[434] = [CCApplePurpleDark24]::new()
        $this.ColorMap[435] = [ATBackgroundColor24None]::new()
        $this.ColorMap[436] = [ATBackgroundColor24None]::new()
        $this.ColorMap[437] = [ATBackgroundColor24None]::new()
        $this.ColorMap[438] = [ATBackgroundColor24None]::new()
        $this.ColorMap[439] = [ATBackgroundColor24None]::new()
        $this.ColorMap[440] = [CCApplePurpleDark24]::new()
        $this.ColorMap[441] = [CCApplePurpleDark24]::new()
        $this.ColorMap[442] = [ATBackgroundColor24None]::new()
        $this.ColorMap[443] = [ATBackgroundColor24None]::new() # End Row 11
        $this.ColorMap[444] = [ATBackgroundColor24None]::new()
        $this.ColorMap[445] = [ATBackgroundColor24None]::new()
        $this.ColorMap[446] = [CCApplePurpleDark24]::new()
        $this.ColorMap[447] = [ATBackgroundColor24None]::new()
        $this.ColorMap[448] = [ATBackgroundColor24None]::new()
        $this.ColorMap[449] = [ATBackgroundColor24None]::new()
        $this.ColorMap[450] = [ATBackgroundColor24None]::new()
        $this.ColorMap[451] = [ATBackgroundColor24None]::new()
        $this.ColorMap[452] = [ATBackgroundColor24None]::new()
        $this.ColorMap[453] = [ATBackgroundColor24None]::new()
        $this.ColorMap[454] = [ATBackgroundColor24None]::new()
        $this.ColorMap[455] = [ATBackgroundColor24None]::new()
        $this.ColorMap[456] = [ATBackgroundColor24None]::new()
        $this.ColorMap[457] = [ATBackgroundColor24None]::new()
        $this.ColorMap[458] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[459] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[460] = [ATBackgroundColor24None]::new()
        $this.ColorMap[461] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[462] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[463] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[464] = [ATBackgroundColor24None]::new()
        $this.ColorMap[465] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[466] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[467] = [ATBackgroundColor24None]::new()
        $this.ColorMap[468] = [ATBackgroundColor24None]::new()
        $this.ColorMap[469] = [ATBackgroundColor24None]::new()
        $this.ColorMap[470] = [ATBackgroundColor24None]::new()
        $this.ColorMap[471] = [ATBackgroundColor24None]::new()
        $this.ColorMap[472] = [ATBackgroundColor24None]::new()
        $this.ColorMap[473] = [ATBackgroundColor24None]::new()
        $this.ColorMap[474] = [ATBackgroundColor24None]::new()
        $this.ColorMap[475] = [ATBackgroundColor24None]::new()
        $this.ColorMap[476] = [ATBackgroundColor24None]::new()
        $this.ColorMap[477] = [ATBackgroundColor24None]::new()
        $this.ColorMap[478] = [CCApplePurpleDark24]::new()
        $this.ColorMap[479] = [ATBackgroundColor24None]::new()
        $this.ColorMap[480] = [ATBackgroundColor24None]::new() # End Row 12
        $this.ColorMap[481] = [ATBackgroundColor24None]::new()
        $this.ColorMap[482] = [ATBackgroundColor24None]::new()
        $this.ColorMap[483] = [ATBackgroundColor24None]::new()
        $this.ColorMap[484] = [ATBackgroundColor24None]::new()
        $this.ColorMap[485] = [ATBackgroundColor24None]::new()
        $this.ColorMap[486] = [ATBackgroundColor24None]::new()
        $this.ColorMap[487] = [ATBackgroundColor24None]::new()
        $this.ColorMap[488] = [ATBackgroundColor24None]::new()
        $this.ColorMap[489] = [ATBackgroundColor24None]::new()
        $this.ColorMap[490] = [ATBackgroundColor24None]::new()
        $this.ColorMap[491] = [ATBackgroundColor24None]::new()
        $this.ColorMap[492] = [ATBackgroundColor24None]::new()
        $this.ColorMap[493] = [ATBackgroundColor24None]::new()
        $this.ColorMap[494] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[495] = [ATBackgroundColor24None]::new()
        $this.ColorMap[496] = [ATBackgroundColor24None]::new()
        $this.ColorMap[497] = [ATBackgroundColor24None]::new()
        $this.ColorMap[498] = [ATBackgroundColor24None]::new()
        $this.ColorMap[499] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[500] = [ATBackgroundColor24None]::new()
        $this.ColorMap[501] = [ATBackgroundColor24None]::new()
        $this.ColorMap[502] = [ATBackgroundColor24None]::new()
        $this.ColorMap[503] = [ATBackgroundColor24None]::new()
        $this.ColorMap[504] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[505] = [ATBackgroundColor24None]::new()
        $this.ColorMap[506] = [ATBackgroundColor24None]::new()
        $this.ColorMap[507] = [ATBackgroundColor24None]::new()
        $this.ColorMap[508] = [ATBackgroundColor24None]::new()
        $this.ColorMap[509] = [ATBackgroundColor24None]::new()
        $this.ColorMap[510] = [ATBackgroundColor24None]::new()
        $this.ColorMap[511] = [ATBackgroundColor24None]::new()
        $this.ColorMap[512] = [ATBackgroundColor24None]::new()
        $this.ColorMap[513] = [ATBackgroundColor24None]::new()
        $this.ColorMap[514] = [ATBackgroundColor24None]::new()
        $this.ColorMap[515] = [ATBackgroundColor24None]::new()
        $this.ColorMap[516] = [ATBackgroundColor24None]::new()
        $this.ColorMap[517] = [ATBackgroundColor24None]::new() # End Row 13
        $this.ColorMap[518] = [ATBackgroundColor24None]::new()
        $this.ColorMap[519] = [ATBackgroundColor24None]::new()
        $this.ColorMap[520] = [ATBackgroundColor24None]::new()
        $this.ColorMap[521] = [ATBackgroundColor24None]::new()
        $this.ColorMap[522] = [ATBackgroundColor24None]::new()
        $this.ColorMap[523] = [ATBackgroundColor24None]::new()
        $this.ColorMap[524] = [ATBackgroundColor24None]::new()
        $this.ColorMap[525] = [ATBackgroundColor24None]::new()
        $this.ColorMap[526] = [ATBackgroundColor24None]::new()
        $this.ColorMap[527] = [ATBackgroundColor24None]::new()
        $this.ColorMap[528] = [ATBackgroundColor24None]::new()
        $this.ColorMap[529] = [ATBackgroundColor24None]::new()
        $this.ColorMap[530] = [ATBackgroundColor24None]::new()
        $this.ColorMap[531] = [ATBackgroundColor24None]::new()
        $this.ColorMap[532] = [ATBackgroundColor24None]::new()
        $this.ColorMap[533] = [ATBackgroundColor24None]::new()
        $this.ColorMap[534] = [ATBackgroundColor24None]::new()
        $this.ColorMap[535] = [ATBackgroundColor24None]::new()
        $this.ColorMap[536] = [ATBackgroundColor24None]::new()
        $this.ColorMap[537] = [ATBackgroundColor24None]::new()
        $this.ColorMap[538] = [ATBackgroundColor24None]::new()
        $this.ColorMap[539] = [ATBackgroundColor24None]::new()
        $this.ColorMap[540] = [ATBackgroundColor24None]::new()
        $this.ColorMap[541] = [ATBackgroundColor24None]::new()
        $this.ColorMap[542] = [ATBackgroundColor24None]::new()
        $this.ColorMap[543] = [ATBackgroundColor24None]::new()
        $this.ColorMap[544] = [ATBackgroundColor24None]::new()
        $this.ColorMap[545] = [ATBackgroundColor24None]::new()
        $this.ColorMap[546] = [ATBackgroundColor24None]::new()
        $this.ColorMap[547] = [ATBackgroundColor24None]::new()
        $this.ColorMap[548] = [ATBackgroundColor24None]::new()
        $this.ColorMap[549] = [ATBackgroundColor24None]::new()
        $this.ColorMap[550] = [ATBackgroundColor24None]::new()
        $this.ColorMap[551] = [ATBackgroundColor24None]::new()
        $this.ColorMap[552] = [ATBackgroundColor24None]::new()
        $this.ColorMap[553] = [ATBackgroundColor24None]::new()
        $this.ColorMap[554] = [ATBackgroundColor24None]::new() # End Row 14

        $this.CreateImageATString($this.ColorMap)
        $this.ColorMap = $null
    }
}

Class EEIWingblight : EEIInternalBase {
    EEIWingblight() : base() {
        $this.ColorMap[0]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[1]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[2]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[3]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[4]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[5]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[6]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[7]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[8]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[9]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[10]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[11]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[12]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[13]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[14]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[15]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[16]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[17]  = [CCApplePinkDark24]::new()
        $this.ColorMap[18]  = [CCApplePinkDark24]::new()
        $this.ColorMap[19]  = [CCApplePinkDark24]::new()
        $this.ColorMap[20]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[21]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[22]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[23]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[24]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[25]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[26]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[27]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[28]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[29]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[30]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[31]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[32]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[33]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[34]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[35]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[36]  = [ATBackgroundColor24None]::new() # End Row 0
        $this.ColorMap[37]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[38]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[39]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[40]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[41]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[42]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[43]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[44]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[45]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[46]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[47]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[48]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[49]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[50]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[51]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[52]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[53]  = [CCApplePinkDark24]::new()
        $this.ColorMap[54]  = [CCApplePinkDark24]::new()
        $this.ColorMap[55]  = [CCApplePinkDark24]::new()
        $this.ColorMap[56]  = [CCApplePinkDark24]::new()
        $this.ColorMap[57]  = [CCApplePinkDark24]::new()
        $this.ColorMap[58]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[59]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[60]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[61]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[62]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[63]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[64]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[65]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[66]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[67]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[68]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[69]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[70]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[71]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[72]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[73]  = [ATBackgroundColor24None]::new() # End Row 1
        $this.ColorMap[74]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[75]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[76]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[77]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[78]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[79]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[80]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[81]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[82]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[83]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[84]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[85]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[86]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[87]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[88]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[89]  = [CCApplePinkDark24]::new()
        $this.ColorMap[90]  = [CCApplePinkDark24]::new()
        $this.ColorMap[91]  = [CCAppleGrey6Light24]::new()
        $this.ColorMap[92]  = [CCApplePinkDark24]::new()
        $this.ColorMap[93]  = [CCAppleGrey6Light24]::new()
        $this.ColorMap[94]  = [CCApplePinkDark24]::new()
        $this.ColorMap[95]  = [CCApplePinkDark24]::new()
        $this.ColorMap[96]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[97]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[98]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[99]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[100] = [ATBackgroundColor24None]::new()
        $this.ColorMap[101] = [ATBackgroundColor24None]::new()
        $this.ColorMap[102] = [ATBackgroundColor24None]::new()
        $this.ColorMap[103] = [ATBackgroundColor24None]::new()
        $this.ColorMap[104] = [ATBackgroundColor24None]::new()
        $this.ColorMap[105] = [ATBackgroundColor24None]::new()
        $this.ColorMap[106] = [ATBackgroundColor24None]::new()
        $this.ColorMap[107] = [ATBackgroundColor24None]::new()
        $this.ColorMap[108] = [ATBackgroundColor24None]::new()
        $this.ColorMap[109] = [ATBackgroundColor24None]::new()
        $this.ColorMap[110] = [ATBackgroundColor24None]::new() # End Row 2
        $this.ColorMap[111] = [ATBackgroundColor24None]::new()
        $this.ColorMap[112] = [ATBackgroundColor24None]::new()
        $this.ColorMap[113] = [ATBackgroundColor24None]::new()
        $this.ColorMap[114] = [ATBackgroundColor24None]::new()
        $this.ColorMap[115] = [ATBackgroundColor24None]::new()
        $this.ColorMap[116] = [CCApplePurpleDark24]::new()
        $this.ColorMap[117] = [CCApplePurpleDark24]::new()
        $this.ColorMap[118] = [ATBackgroundColor24None]::new()
        $this.ColorMap[119] = [ATBackgroundColor24None]::new()
        $this.ColorMap[120] = [ATBackgroundColor24None]::new()
        $this.ColorMap[121] = [ATBackgroundColor24None]::new()
        $this.ColorMap[122] = [CCApplePurpleDark24]::new()
        $this.ColorMap[123] = [CCApplePurpleDark24]::new()
        $this.ColorMap[124] = [ATBackgroundColor24None]::new()
        $this.ColorMap[125] = [ATBackgroundColor24None]::new()
        $this.ColorMap[126] = [ATBackgroundColor24None]::new()
        $this.ColorMap[127] = [CCApplePinkDark24]::new()
        $this.ColorMap[128] = [CCApplePinkDark24]::new()
        $this.ColorMap[129] = [CCApplePinkDark24]::new()
        $this.ColorMap[130] = [CCApplePinkDark24]::new()
        $this.ColorMap[131] = [CCApplePinkDark24]::new()
        $this.ColorMap[132] = [ATBackgroundColor24None]::new()
        $this.ColorMap[133] = [ATBackgroundColor24None]::new()
        $this.ColorMap[134] = [ATBackgroundColor24None]::new()
        $this.ColorMap[135] = [CCApplePurpleDark24]::new()
        $this.ColorMap[136] = [CCApplePurpleDark24]::new()
        $this.ColorMap[137] = [ATBackgroundColor24None]::new()
        $this.ColorMap[138] = [ATBackgroundColor24None]::new()
        $this.ColorMap[139] = [ATBackgroundColor24None]::new()
        $this.ColorMap[140] = [ATBackgroundColor24None]::new()
        $this.ColorMap[141] = [CCApplePurpleDark24]::new()
        $this.ColorMap[142] = [CCApplePurpleDark24]::new()
        $this.ColorMap[143] = [ATBackgroundColor24None]::new()
        $this.ColorMap[144] = [ATBackgroundColor24None]::new()
        $this.ColorMap[145] = [ATBackgroundColor24None]::new()
        $this.ColorMap[146] = [ATBackgroundColor24None]::new()
        $this.ColorMap[147] = [ATBackgroundColor24None]::new() # End Row 3
        $this.ColorMap[148] = [ATBackgroundColor24None]::new()
        $this.ColorMap[149] = [ATBackgroundColor24None]::new()
        $this.ColorMap[150] = [ATBackgroundColor24None]::new()
        $this.ColorMap[151] = [ATBackgroundColor24None]::new()
        $this.ColorMap[152] = [CCApplePurpleDark24]::new()
        $this.ColorMap[153] = [CCApplePurpleDark24]::new()
        $this.ColorMap[154] = [CCApplePurpleDark24]::new()
        $this.ColorMap[155] = [CCApplePurpleDark24]::new()
        $this.ColorMap[156] = [CCApplePurpleDark24]::new()
        $this.ColorMap[157] = [ATBackgroundColor24None]::new()
        $this.ColorMap[158] = [CCApplePurpleDark24]::new()
        $this.ColorMap[159] = [CCApplePurpleDark24]::new()
        $this.ColorMap[160] = [CCApplePurpleDark24]::new()
        $this.ColorMap[161] = [CCApplePurpleDark24]::new()
        $this.ColorMap[162] = [CCApplePurpleDark24]::new()
        $this.ColorMap[163] = [CCApplePinkDark24]::new()
        $this.ColorMap[164] = [CCApplePinkDark24]::new()
        $this.ColorMap[165] = [CCApplePinkDark24]::new()
        $this.ColorMap[166] = [CCApplePinkDark24]::new()
        $this.ColorMap[167] = [CCApplePinkDark24]::new()
        $this.ColorMap[168] = [CCApplePinkDark24]::new()
        $this.ColorMap[169] = [CCApplePinkDark24]::new()
        $this.ColorMap[170] = [CCApplePurpleDark24]::new()
        $this.ColorMap[171] = [CCApplePurpleDark24]::new()
        $this.ColorMap[172] = [CCApplePurpleDark24]::new()
        $this.ColorMap[173] = [CCApplePurpleDark24]::new()
        $this.ColorMap[174] = [CCApplePurpleDark24]::new()
        $this.ColorMap[175] = [ATBackgroundColor24None]::new()
        $this.ColorMap[176] = [CCApplePurpleDark24]::new()
        $this.ColorMap[177] = [CCApplePurpleDark24]::new()
        $this.ColorMap[178] = [CCApplePurpleDark24]::new()
        $this.ColorMap[179] = [CCApplePurpleDark24]::new()
        $this.ColorMap[180] = [CCApplePurpleDark24]::new()
        $this.ColorMap[181] = [ATBackgroundColor24None]::new()
        $this.ColorMap[182] = [ATBackgroundColor24None]::new()
        $this.ColorMap[183] = [ATBackgroundColor24None]::new()
        $this.ColorMap[184] = [ATBackgroundColor24None]::new() # End Row 4
        $this.ColorMap[185] = [ATBackgroundColor24None]::new()
        $this.ColorMap[186] = [ATBackgroundColor24None]::new()
        $this.ColorMap[187] = [ATBackgroundColor24None]::new()
        $this.ColorMap[188] = [ATBackgroundColor24None]::new()
        $this.ColorMap[189] = [CCApplePurpleDark24]::new()
        $this.ColorMap[190] = [CCApplePurpleDark24]::new()
        $this.ColorMap[191] = [CCApplePurpleDark24]::new()
        $this.ColorMap[192] = [CCApplePurpleDark24]::new()
        $this.ColorMap[193] = [CCApplePurpleDark24]::new()
        $this.ColorMap[194] = [CCApplePurpleDark24]::new()
        $this.ColorMap[195] = [CCApplePurpleDark24]::new()
        $this.ColorMap[196] = [CCApplePurpleDark24]::new()
        $this.ColorMap[197] = [CCApplePurpleDark24]::new()
        $this.ColorMap[198] = [CCApplePurpleDark24]::new()
        $this.ColorMap[199] = [CCApplePinkDark24]::new()
        $this.ColorMap[200] = [CCApplePinkDark24]::new()
        $this.ColorMap[201] = [CCApplePinkDark24]::new()
        $this.ColorMap[202] = [CCApplePinkDark24]::new()
        $this.ColorMap[203] = [CCApplePinkDark24]::new()
        $this.ColorMap[204] = [CCApplePinkDark24]::new()
        $this.ColorMap[205] = [CCApplePinkDark24]::new()
        $this.ColorMap[206] = [CCApplePinkDark24]::new()
        $this.ColorMap[207] = [CCApplePinkDark24]::new()
        $this.ColorMap[208] = [CCApplePurpleDark24]::new()
        $this.ColorMap[209] = [CCApplePurpleDark24]::new()
        $this.ColorMap[210] = [CCApplePurpleDark24]::new()
        $this.ColorMap[211] = [CCApplePurpleDark24]::new()
        $this.ColorMap[212] = [CCApplePurpleDark24]::new()
        $this.ColorMap[213] = [CCApplePurpleDark24]::new()
        $this.ColorMap[214] = [CCApplePurpleDark24]::new()
        $this.ColorMap[215] = [CCApplePurpleDark24]::new()
        $this.ColorMap[216] = [CCApplePurpleDark24]::new()
        $this.ColorMap[217] = [CCApplePurpleDark24]::new()
        $this.ColorMap[218] = [ATBackgroundColor24None]::new()
        $this.ColorMap[219] = [ATBackgroundColor24None]::new()
        $this.ColorMap[220] = [ATBackgroundColor24None]::new()
        $this.ColorMap[221] = [ATBackgroundColor24None]::new() # End Row 5
        $this.ColorMap[222] = [ATBackgroundColor24None]::new()
        $this.ColorMap[223] = [ATBackgroundColor24None]::new()
        $this.ColorMap[224] = [ATBackgroundColor24None]::new()
        $this.ColorMap[225] = [CCApplePurpleDark24]::new()
        $this.ColorMap[226] = [CCApplePurpleDark24]::new()
        $this.ColorMap[227] = [CCApplePurpleDark24]::new()
        $this.ColorMap[228] = [CCApplePurpleDark24]::new()
        $this.ColorMap[229] = [CCApplePurpleDark24]::new()
        $this.ColorMap[230] = [CCApplePurpleDark24]::new()
        $this.ColorMap[231] = [CCApplePurpleDark24]::new()
        $this.ColorMap[232] = [CCApplePurpleDark24]::new()
        $this.ColorMap[233] = [CCApplePurpleDark24]::new()
        $this.ColorMap[234] = [CCApplePurpleDark24]::new()
        $this.ColorMap[235] = [CCApplePurpleDark24]::new()
        $this.ColorMap[236] = [CCApplePinkDark24]::new()
        $this.ColorMap[237] = [CCApplePinkDark24]::new()
        $this.ColorMap[238] = [CCApplePinkDark24]::new()
        $this.ColorMap[239] = [CCApplePinkDark24]::new()
        $this.ColorMap[240] = [CCApplePinkDark24]::new()
        $this.ColorMap[241] = [CCApplePinkDark24]::new()
        $this.ColorMap[242] = [CCApplePinkDark24]::new()
        $this.ColorMap[243] = [CCApplePinkDark24]::new()
        $this.ColorMap[244] = [CCApplePinkDark24]::new()
        $this.ColorMap[245] = [CCApplePurpleDark24]::new()
        $this.ColorMap[246] = [CCApplePurpleDark24]::new()
        $this.ColorMap[247] = [CCApplePurpleDark24]::new()
        $this.ColorMap[248] = [CCApplePurpleDark24]::new()
        $this.ColorMap[249] = [CCApplePurpleDark24]::new()
        $this.ColorMap[250] = [CCApplePurpleDark24]::new()
        $this.ColorMap[251] = [CCApplePurpleDark24]::new()
        $this.ColorMap[252] = [CCApplePurpleDark24]::new()
        $this.ColorMap[253] = [CCApplePurpleDark24]::new()
        $this.ColorMap[254] = [CCApplePurpleDark24]::new()
        $this.ColorMap[255] = [CCApplePurpleDark24]::new()
        $this.ColorMap[256] = [ATBackgroundColor24None]::new()
        $this.ColorMap[257] = [ATBackgroundColor24None]::new()
        $this.ColorMap[258] = [ATBackgroundColor24None]::new() # End Row 6
        $this.ColorMap[259] = [ATBackgroundColor24None]::new()
        $this.ColorMap[260] = [ATBackgroundColor24None]::new()
        $this.ColorMap[261] = [ATBackgroundColor24None]::new()
        $this.ColorMap[262] = [CCApplePurpleDark24]::new()
        $this.ColorMap[263] = [CCApplePurpleDark24]::new()
        $this.ColorMap[264] = [CCApplePurpleDark24]::new()
        $this.ColorMap[265] = [CCApplePurpleDark24]::new()
        $this.ColorMap[266] = [CCApplePurpleDark24]::new()
        $this.ColorMap[267] = [CCApplePurpleDark24]::new()
        $this.ColorMap[268] = [CCApplePurpleDark24]::new()
        $this.ColorMap[269] = [CCApplePurpleDark24]::new()
        $this.ColorMap[270] = [CCApplePurpleDark24]::new()
        $this.ColorMap[271] = [CCApplePurpleDark24]::new()
        $this.ColorMap[272] = [CCApplePurpleDark24]::new()
        $this.ColorMap[273] = [CCApplePinkDark24]::new()
        $this.ColorMap[274] = [CCApplePinkDark24]::new()
        $this.ColorMap[275] = [CCApplePinkDark24]::new()
        $this.ColorMap[276] = [CCApplePinkDark24]::new()
        $this.ColorMap[277] = [CCApplePinkDark24]::new()
        $this.ColorMap[278] = [CCApplePinkDark24]::new()
        $this.ColorMap[279] = [CCApplePinkDark24]::new()
        $this.ColorMap[280] = [CCApplePinkDark24]::new()
        $this.ColorMap[281] = [CCApplePinkDark24]::new()
        $this.ColorMap[282] = [CCApplePurpleDark24]::new()
        $this.ColorMap[283] = [CCApplePurpleDark24]::new()
        $this.ColorMap[284] = [CCApplePurpleDark24]::new()
        $this.ColorMap[285] = [CCApplePurpleDark24]::new()
        $this.ColorMap[286] = [CCApplePurpleDark24]::new()
        $this.ColorMap[287] = [CCApplePurpleDark24]::new()
        $this.ColorMap[288] = [CCApplePurpleDark24]::new()
        $this.ColorMap[289] = [CCApplePurpleDark24]::new()
        $this.ColorMap[290] = [CCApplePurpleDark24]::new()
        $this.ColorMap[291] = [CCApplePurpleDark24]::new()
        $this.ColorMap[292] = [CCApplePurpleDark24]::new()
        $this.ColorMap[293] = [ATBackgroundColor24None]::new()
        $this.ColorMap[294] = [ATBackgroundColor24None]::new()
        $this.ColorMap[295] = [ATBackgroundColor24None]::new() # End Row 7
        $this.ColorMap[296] = [ATBackgroundColor24None]::new()
        $this.ColorMap[297] = [ATBackgroundColor24None]::new()
        $this.ColorMap[298] = [ATBackgroundColor24None]::new()
        $this.ColorMap[299] = [CCApplePurpleDark24]::new()
        $this.ColorMap[300] = [CCApplePurpleDark24]::new()
        $this.ColorMap[301] = [CCApplePurpleDark24]::new()
        $this.ColorMap[302] = [CCApplePurpleDark24]::new()
        $this.ColorMap[303] = [CCApplePurpleDark24]::new()
        $this.ColorMap[304] = [CCApplePurpleDark24]::new()
        $this.ColorMap[305] = [CCApplePurpleDark24]::new()
        $this.ColorMap[306] = [CCApplePurpleDark24]::new()
        $this.ColorMap[307] = [CCApplePurpleDark24]::new()
        $this.ColorMap[308] = [CCApplePurpleDark24]::new()
        $this.ColorMap[309] = [CCApplePurpleDark24]::new()
        $this.ColorMap[310] = [CCApplePinkDark24]::new()
        $this.ColorMap[311] = [CCApplePinkDark24]::new()
        $this.ColorMap[312] = [CCApplePinkDark24]::new()
        $this.ColorMap[313] = [CCApplePinkDark24]::new()
        $this.ColorMap[314] = [CCApplePinkDark24]::new()
        $this.ColorMap[315] = [CCApplePinkDark24]::new()
        $this.ColorMap[316] = [CCApplePinkDark24]::new()
        $this.ColorMap[317] = [CCApplePinkDark24]::new()
        $this.ColorMap[318] = [CCApplePinkDark24]::new()
        $this.ColorMap[319] = [CCApplePurpleDark24]::new()
        $this.ColorMap[320] = [CCApplePurpleDark24]::new()
        $this.ColorMap[321] = [CCApplePurpleDark24]::new()
        $this.ColorMap[322] = [CCApplePurpleDark24]::new()
        $this.ColorMap[323] = [CCApplePurpleDark24]::new()
        $this.ColorMap[324] = [CCApplePurpleDark24]::new()
        $this.ColorMap[325] = [CCApplePurpleDark24]::new()
        $this.ColorMap[326] = [CCApplePurpleDark24]::new()
        $this.ColorMap[327] = [CCApplePurpleDark24]::new()
        $this.ColorMap[328] = [CCApplePurpleDark24]::new()
        $this.ColorMap[329] = [CCApplePurpleDark24]::new()
        $this.ColorMap[330] = [ATBackgroundColor24None]::new()
        $this.ColorMap[331] = [ATBackgroundColor24None]::new()
        $this.ColorMap[332] = [ATBackgroundColor24None]::new() # End Row 8
        $this.ColorMap[333] = [ATBackgroundColor24None]::new()
        $this.ColorMap[334] = [ATBackgroundColor24None]::new()
        $this.ColorMap[335] = [CCApplePurpleDark24]::new()
        $this.ColorMap[336] = [CCApplePurpleDark24]::new()
        $this.ColorMap[337] = [CCApplePurpleDark24]::new()
        $this.ColorMap[338] = [CCApplePurpleDark24]::new()
        $this.ColorMap[339] = [CCApplePurpleDark24]::new()
        $this.ColorMap[340] = [CCApplePurpleDark24]::new()
        $this.ColorMap[341] = [CCApplePurpleDark24]::new()
        $this.ColorMap[342] = [CCApplePurpleDark24]::new()
        $this.ColorMap[343] = [CCApplePurpleDark24]::new()
        $this.ColorMap[344] = [CCApplePurpleDark24]::new()
        $this.ColorMap[345] = [ATBackgroundColor24None]::new()
        $this.ColorMap[346] = [ATBackgroundColor24None]::new()
        $this.ColorMap[347] = [CCApplePurpleDark24]::new()
        $this.ColorMap[348] = [CCApplePinkDark24]::new()
        $this.ColorMap[349] = [CCApplePinkDark24]::new()
        $this.ColorMap[350] = [CCApplePinkDark24]::new()
        $this.ColorMap[351] = [CCApplePinkDark24]::new()
        $this.ColorMap[352] = [CCApplePinkDark24]::new()
        $this.ColorMap[353] = [CCApplePinkDark24]::new()
        $this.ColorMap[354] = [CCApplePinkDark24]::new()
        $this.ColorMap[355] = [CCApplePurpleDark24]::new()
        $this.ColorMap[356] = [ATBackgroundColor24None]::new()
        $this.ColorMap[357] = [ATBackgroundColor24None]::new()
        $this.ColorMap[358] = [CCApplePurpleDark24]::new()
        $this.ColorMap[359] = [CCApplePurpleDark24]::new()
        $this.ColorMap[360] = [CCApplePurpleDark24]::new()
        $this.ColorMap[361] = [CCApplePurpleDark24]::new()
        $this.ColorMap[362] = [CCApplePurpleDark24]::new()
        $this.ColorMap[363] = [CCApplePurpleDark24]::new()
        $this.ColorMap[364] = [CCApplePurpleDark24]::new()
        $this.ColorMap[365] = [CCApplePurpleDark24]::new()
        $this.ColorMap[366] = [CCApplePurpleDark24]::new()
        $this.ColorMap[367] = [CCApplePurpleDark24]::new()
        $this.ColorMap[368] = [ATBackgroundColor24None]::new()
        $this.ColorMap[369] = [ATBackgroundColor24None]::new() # End Row 9
        $this.ColorMap[370] = [ATBackgroundColor24None]::new()
        $this.ColorMap[371] = [ATBackgroundColor24None]::new()
        $this.ColorMap[372] = [CCApplePurpleDark24]::new()
        $this.ColorMap[373] = [CCApplePurpleDark24]::new()
        $this.ColorMap[374] = [CCApplePurpleDark24]::new()
        $this.ColorMap[375] = [CCApplePurpleDark24]::new()
        $this.ColorMap[376] = [ATBackgroundColor24None]::new()
        $this.ColorMap[377] = [ATBackgroundColor24None]::new()
        $this.ColorMap[378] = [CCApplePurpleDark24]::new()
        $this.ColorMap[379] = [CCApplePurpleDark24]::new()
        $this.ColorMap[380] = [CCApplePurpleDark24]::new()
        $this.ColorMap[381] = [ATBackgroundColor24None]::new()
        $this.ColorMap[382] = [ATBackgroundColor24None]::new()
        $this.ColorMap[383] = [ATBackgroundColor24None]::new()
        $this.ColorMap[384] = [ATBackgroundColor24None]::new()
        $this.ColorMap[385] = [CCApplePinkDark24]::new()
        $this.ColorMap[386] = [CCApplePinkDark24]::new()
        $this.ColorMap[387] = [CCApplePinkDark24]::new()
        $this.ColorMap[388] = [CCApplePinkDark24]::new()
        $this.ColorMap[389] = [CCApplePinkDark24]::new()
        $this.ColorMap[390] = [CCApplePinkDark24]::new()
        $this.ColorMap[391] = [CCApplePinkDark24]::new()
        $this.ColorMap[392] = [ATBackgroundColor24None]::new()
        $this.ColorMap[393] = [ATBackgroundColor24None]::new()
        $this.ColorMap[394] = [ATBackgroundColor24None]::new()
        $this.ColorMap[395] = [ATBackgroundColor24None]::new()
        $this.ColorMap[396] = [CCApplePurpleDark24]::new()
        $this.ColorMap[397] = [CCApplePurpleDark24]::new()
        $this.ColorMap[398] = [CCApplePurpleDark24]::new()
        $this.ColorMap[399] = [ATBackgroundColor24None]::new()
        $this.ColorMap[400] = [ATBackgroundColor24None]::new()
        $this.ColorMap[401] = [CCApplePurpleDark24]::new()
        $this.ColorMap[402] = [CCApplePurpleDark24]::new()
        $this.ColorMap[403] = [CCApplePurpleDark24]::new()
        $this.ColorMap[404] = [CCApplePurpleDark24]::new()
        $this.ColorMap[405] = [ATBackgroundColor24None]::new()
        $this.ColorMap[406] = [ATBackgroundColor24None]::new() # End Row 10
        $this.ColorMap[407] = [ATBackgroundColor24None]::new()
        $this.ColorMap[408] = [ATBackgroundColor24None]::new()
        $this.ColorMap[409] = [CCApplePurpleDark24]::new()
        $this.ColorMap[410] = [CCApplePurpleDark24]::new()
        $this.ColorMap[411] = [ATBackgroundColor24None]::new()
        $this.ColorMap[412] = [ATBackgroundColor24None]::new()
        $this.ColorMap[413] = [ATBackgroundColor24None]::new()
        $this.ColorMap[414] = [ATBackgroundColor24None]::new()
        $this.ColorMap[415] = [ATBackgroundColor24None]::new()
        $this.ColorMap[416] = [CCApplePurpleDark24]::new()
        $this.ColorMap[417] = [ATBackgroundColor24None]::new()
        $this.ColorMap[418] = [ATBackgroundColor24None]::new()
        $this.ColorMap[419] = [ATBackgroundColor24None]::new()
        $this.ColorMap[420] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[421] = [ATBackgroundColor24None]::new()
        $this.ColorMap[422] = [ATBackgroundColor24None]::new()
        $this.ColorMap[423] = [CCApplePinkDark24]::new()
        $this.ColorMap[424] = [CCApplePinkDark24]::new()
        $this.ColorMap[425] = [CCApplePinkDark24]::new()
        $this.ColorMap[426] = [CCApplePinkDark24]::new()
        $this.ColorMap[427] = [CCApplePinkDark24]::new()
        $this.ColorMap[428] = [ATBackgroundColor24None]::new()
        $this.ColorMap[429] = [ATBackgroundColor24None]::new()
        $this.ColorMap[430] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[431] = [ATBackgroundColor24None]::new()
        $this.ColorMap[432] = [ATBackgroundColor24None]::new()
        $this.ColorMap[433] = [ATBackgroundColor24None]::new()
        $this.ColorMap[434] = [CCApplePurpleDark24]::new()
        $this.ColorMap[435] = [ATBackgroundColor24None]::new()
        $this.ColorMap[436] = [ATBackgroundColor24None]::new()
        $this.ColorMap[437] = [ATBackgroundColor24None]::new()
        $this.ColorMap[438] = [ATBackgroundColor24None]::new()
        $this.ColorMap[439] = [ATBackgroundColor24None]::new()
        $this.ColorMap[440] = [CCApplePurpleDark24]::new()
        $this.ColorMap[441] = [CCApplePurpleDark24]::new()
        $this.ColorMap[442] = [ATBackgroundColor24None]::new()
        $this.ColorMap[443] = [ATBackgroundColor24None]::new() # End Row 11
        $this.ColorMap[444] = [ATBackgroundColor24None]::new()
        $this.ColorMap[445] = [ATBackgroundColor24None]::new()
        $this.ColorMap[446] = [CCApplePurpleDark24]::new()
        $this.ColorMap[447] = [ATBackgroundColor24None]::new()
        $this.ColorMap[448] = [ATBackgroundColor24None]::new()
        $this.ColorMap[449] = [ATBackgroundColor24None]::new()
        $this.ColorMap[450] = [ATBackgroundColor24None]::new()
        $this.ColorMap[451] = [ATBackgroundColor24None]::new()
        $this.ColorMap[452] = [ATBackgroundColor24None]::new()
        $this.ColorMap[453] = [ATBackgroundColor24None]::new()
        $this.ColorMap[454] = [ATBackgroundColor24None]::new()
        $this.ColorMap[455] = [ATBackgroundColor24None]::new()
        $this.ColorMap[456] = [ATBackgroundColor24None]::new()
        $this.ColorMap[457] = [ATBackgroundColor24None]::new()
        $this.ColorMap[458] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[459] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[460] = [ATBackgroundColor24None]::new()
        $this.ColorMap[461] = [CCApplePinkDark24]::new()
        $this.ColorMap[462] = [CCApplePinkDark24]::new()
        $this.ColorMap[463] = [CCApplePinkDark24]::new()
        $this.ColorMap[464] = [ATBackgroundColor24None]::new()
        $this.ColorMap[465] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[466] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[467] = [ATBackgroundColor24None]::new()
        $this.ColorMap[468] = [ATBackgroundColor24None]::new()
        $this.ColorMap[469] = [ATBackgroundColor24None]::new()
        $this.ColorMap[470] = [ATBackgroundColor24None]::new()
        $this.ColorMap[471] = [ATBackgroundColor24None]::new()
        $this.ColorMap[472] = [ATBackgroundColor24None]::new()
        $this.ColorMap[473] = [ATBackgroundColor24None]::new()
        $this.ColorMap[474] = [ATBackgroundColor24None]::new()
        $this.ColorMap[475] = [ATBackgroundColor24None]::new()
        $this.ColorMap[476] = [ATBackgroundColor24None]::new()
        $this.ColorMap[477] = [ATBackgroundColor24None]::new()
        $this.ColorMap[478] = [CCApplePurpleDark24]::new()
        $this.ColorMap[479] = [ATBackgroundColor24None]::new()
        $this.ColorMap[480] = [ATBackgroundColor24None]::new() # End Row 12
        $this.ColorMap[481] = [ATBackgroundColor24None]::new()
        $this.ColorMap[482] = [ATBackgroundColor24None]::new()
        $this.ColorMap[483] = [ATBackgroundColor24None]::new()
        $this.ColorMap[484] = [ATBackgroundColor24None]::new()
        $this.ColorMap[485] = [ATBackgroundColor24None]::new()
        $this.ColorMap[486] = [ATBackgroundColor24None]::new()
        $this.ColorMap[487] = [ATBackgroundColor24None]::new()
        $this.ColorMap[488] = [ATBackgroundColor24None]::new()
        $this.ColorMap[489] = [ATBackgroundColor24None]::new()
        $this.ColorMap[490] = [ATBackgroundColor24None]::new()
        $this.ColorMap[491] = [ATBackgroundColor24None]::new()
        $this.ColorMap[492] = [ATBackgroundColor24None]::new()
        $this.ColorMap[493] = [ATBackgroundColor24None]::new()
        $this.ColorMap[494] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[495] = [ATBackgroundColor24None]::new()
        $this.ColorMap[496] = [ATBackgroundColor24None]::new()
        $this.ColorMap[497] = [ATBackgroundColor24None]::new()
        $this.ColorMap[498] = [ATBackgroundColor24None]::new()
        $this.ColorMap[499] = [CCApplePinkDark24]::new()
        $this.ColorMap[500] = [ATBackgroundColor24None]::new()
        $this.ColorMap[501] = [ATBackgroundColor24None]::new()
        $this.ColorMap[502] = [ATBackgroundColor24None]::new()
        $this.ColorMap[503] = [ATBackgroundColor24None]::new()
        $this.ColorMap[504] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[505] = [ATBackgroundColor24None]::new()
        $this.ColorMap[506] = [ATBackgroundColor24None]::new()
        $this.ColorMap[507] = [ATBackgroundColor24None]::new()
        $this.ColorMap[508] = [ATBackgroundColor24None]::new()
        $this.ColorMap[509] = [ATBackgroundColor24None]::new()
        $this.ColorMap[510] = [ATBackgroundColor24None]::new()
        $this.ColorMap[511] = [ATBackgroundColor24None]::new()
        $this.ColorMap[512] = [ATBackgroundColor24None]::new()
        $this.ColorMap[513] = [ATBackgroundColor24None]::new()
        $this.ColorMap[514] = [ATBackgroundColor24None]::new()
        $this.ColorMap[515] = [ATBackgroundColor24None]::new()
        $this.ColorMap[516] = [ATBackgroundColor24None]::new()
        $this.ColorMap[517] = [ATBackgroundColor24None]::new() # End Row 13
        $this.ColorMap[518] = [ATBackgroundColor24None]::new()
        $this.ColorMap[519] = [ATBackgroundColor24None]::new()
        $this.ColorMap[520] = [ATBackgroundColor24None]::new()
        $this.ColorMap[521] = [ATBackgroundColor24None]::new()
        $this.ColorMap[522] = [ATBackgroundColor24None]::new()
        $this.ColorMap[523] = [ATBackgroundColor24None]::new()
        $this.ColorMap[524] = [ATBackgroundColor24None]::new()
        $this.ColorMap[525] = [ATBackgroundColor24None]::new()
        $this.ColorMap[526] = [ATBackgroundColor24None]::new()
        $this.ColorMap[527] = [ATBackgroundColor24None]::new()
        $this.ColorMap[528] = [ATBackgroundColor24None]::new()
        $this.ColorMap[529] = [ATBackgroundColor24None]::new()
        $this.ColorMap[530] = [ATBackgroundColor24None]::new()
        $this.ColorMap[531] = [ATBackgroundColor24None]::new()
        $this.ColorMap[532] = [ATBackgroundColor24None]::new()
        $this.ColorMap[533] = [ATBackgroundColor24None]::new()
        $this.ColorMap[534] = [ATBackgroundColor24None]::new()
        $this.ColorMap[535] = [ATBackgroundColor24None]::new()
        $this.ColorMap[536] = [ATBackgroundColor24None]::new()
        $this.ColorMap[537] = [ATBackgroundColor24None]::new()
        $this.ColorMap[538] = [ATBackgroundColor24None]::new()
        $this.ColorMap[539] = [ATBackgroundColor24None]::new()
        $this.ColorMap[540] = [ATBackgroundColor24None]::new()
        $this.ColorMap[541] = [ATBackgroundColor24None]::new()
        $this.ColorMap[542] = [ATBackgroundColor24None]::new()
        $this.ColorMap[543] = [ATBackgroundColor24None]::new()
        $this.ColorMap[544] = [ATBackgroundColor24None]::new()
        $this.ColorMap[545] = [ATBackgroundColor24None]::new()
        $this.ColorMap[546] = [ATBackgroundColor24None]::new()
        $this.ColorMap[547] = [ATBackgroundColor24None]::new()
        $this.ColorMap[548] = [ATBackgroundColor24None]::new()
        $this.ColorMap[549] = [ATBackgroundColor24None]::new()
        $this.ColorMap[550] = [ATBackgroundColor24None]::new()
        $this.ColorMap[551] = [ATBackgroundColor24None]::new()
        $this.ColorMap[552] = [ATBackgroundColor24None]::new()
        $this.ColorMap[553] = [ATBackgroundColor24None]::new()
        $this.ColorMap[554] = [ATBackgroundColor24None]::new() # End Row 14

        $this.CreateImageATString($this.ColorMap)
        $this.ColorMap = $null
    }
}

Class EEIDarkfang : EEIInternalBase {
    EEIDarkfang() : base() {
        $this.ColorMap[0]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[1]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[2]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[3]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[4]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[5]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[6]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[7]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[8]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[9]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[10]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[11]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[12]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[13]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[14]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[15]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[16]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[17]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[18]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[19]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[20]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[21]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[22]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[23]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[24]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[25]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[26]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[27]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[28]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[29]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[30]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[31]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[32]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[33]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[34]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[35]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[36]  = [ATBackgroundColor24None]::new() # End Row 0
        $this.ColorMap[37]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[38]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[39]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[40]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[41]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[42]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[43]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[44]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[45]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[46]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[47]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[48]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[49]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[50]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[51]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[52]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[53]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[54]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[55]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[56]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[57]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[58]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[59]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[60]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[61]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[62]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[63]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[64]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[65]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[66]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[67]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[68]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[69]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[70]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[71]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[72]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[73]  = [ATBackgroundColor24None]::new() # End Row 1
        $this.ColorMap[74]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[75]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[76]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[77]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[78]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[79]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[80]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[81]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[82]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[83]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[84]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[85]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[86]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[87]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[88]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[89]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[90]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[91]  = [CCAppleIndigoLight24]::new()
        $this.ColorMap[92]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[93]  = [CCAppleIndigoLight24]::new()
        $this.ColorMap[94]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[95]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[96]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[97]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[98]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[99]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[100] = [ATBackgroundColor24None]::new()
        $this.ColorMap[101] = [ATBackgroundColor24None]::new()
        $this.ColorMap[102] = [ATBackgroundColor24None]::new()
        $this.ColorMap[103] = [ATBackgroundColor24None]::new()
        $this.ColorMap[104] = [ATBackgroundColor24None]::new()
        $this.ColorMap[105] = [ATBackgroundColor24None]::new()
        $this.ColorMap[106] = [ATBackgroundColor24None]::new()
        $this.ColorMap[107] = [ATBackgroundColor24None]::new()
        $this.ColorMap[108] = [ATBackgroundColor24None]::new()
        $this.ColorMap[109] = [ATBackgroundColor24None]::new()
        $this.ColorMap[110] = [ATBackgroundColor24None]::new() # End Row 2
        $this.ColorMap[111] = [ATBackgroundColor24None]::new()
        $this.ColorMap[112] = [ATBackgroundColor24None]::new()
        $this.ColorMap[113] = [ATBackgroundColor24None]::new()
        $this.ColorMap[114] = [ATBackgroundColor24None]::new()
        $this.ColorMap[115] = [ATBackgroundColor24None]::new()
        $this.ColorMap[116] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[117] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[118] = [ATBackgroundColor24None]::new()
        $this.ColorMap[119] = [ATBackgroundColor24None]::new()
        $this.ColorMap[120] = [ATBackgroundColor24None]::new()
        $this.ColorMap[121] = [ATBackgroundColor24None]::new()
        $this.ColorMap[122] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[123] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[124] = [ATBackgroundColor24None]::new()
        $this.ColorMap[125] = [ATBackgroundColor24None]::new()
        $this.ColorMap[126] = [ATBackgroundColor24None]::new()
        $this.ColorMap[127] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[128] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[129] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[130] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[131] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[132] = [ATBackgroundColor24None]::new()
        $this.ColorMap[133] = [ATBackgroundColor24None]::new()
        $this.ColorMap[134] = [ATBackgroundColor24None]::new()
        $this.ColorMap[135] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[136] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[137] = [ATBackgroundColor24None]::new()
        $this.ColorMap[138] = [ATBackgroundColor24None]::new()
        $this.ColorMap[139] = [ATBackgroundColor24None]::new()
        $this.ColorMap[140] = [ATBackgroundColor24None]::new()
        $this.ColorMap[141] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[142] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[143] = [ATBackgroundColor24None]::new()
        $this.ColorMap[144] = [ATBackgroundColor24None]::new()
        $this.ColorMap[145] = [ATBackgroundColor24None]::new()
        $this.ColorMap[146] = [ATBackgroundColor24None]::new()
        $this.ColorMap[147] = [ATBackgroundColor24None]::new() # End Row 3
        $this.ColorMap[148] = [ATBackgroundColor24None]::new()
        $this.ColorMap[149] = [ATBackgroundColor24None]::new()
        $this.ColorMap[150] = [ATBackgroundColor24None]::new()
        $this.ColorMap[151] = [ATBackgroundColor24None]::new()
        $this.ColorMap[152] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[153] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[154] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[155] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[156] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[157] = [ATBackgroundColor24None]::new()
        $this.ColorMap[158] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[159] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[160] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[161] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[162] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[163] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[164] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[165] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[166] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[167] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[168] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[169] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[170] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[171] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[172] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[173] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[174] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[175] = [ATBackgroundColor24None]::new()
        $this.ColorMap[176] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[177] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[178] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[179] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[180] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[181] = [ATBackgroundColor24None]::new()
        $this.ColorMap[182] = [ATBackgroundColor24None]::new()
        $this.ColorMap[183] = [ATBackgroundColor24None]::new()
        $this.ColorMap[184] = [ATBackgroundColor24None]::new() # End Row 4
        $this.ColorMap[185] = [ATBackgroundColor24None]::new()
        $this.ColorMap[186] = [ATBackgroundColor24None]::new()
        $this.ColorMap[187] = [ATBackgroundColor24None]::new()
        $this.ColorMap[188] = [ATBackgroundColor24None]::new()
        $this.ColorMap[189] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[190] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[191] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[192] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[193] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[194] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[195] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[196] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[197] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[198] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[199] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[200] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[201] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[202] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[203] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[204] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[205] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[206] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[207] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[208] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[209] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[210] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[211] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[212] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[213] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[214] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[215] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[216] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[217] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[218] = [ATBackgroundColor24None]::new()
        $this.ColorMap[219] = [ATBackgroundColor24None]::new()
        $this.ColorMap[220] = [ATBackgroundColor24None]::new()
        $this.ColorMap[221] = [ATBackgroundColor24None]::new() # End Row 5
        $this.ColorMap[222] = [ATBackgroundColor24None]::new()
        $this.ColorMap[223] = [ATBackgroundColor24None]::new()
        $this.ColorMap[224] = [ATBackgroundColor24None]::new()
        $this.ColorMap[225] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[226] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[227] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[228] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[229] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[230] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[231] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[232] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[233] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[234] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[235] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[236] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[237] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[238] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[239] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[240] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[241] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[242] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[243] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[244] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[245] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[246] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[247] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[248] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[249] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[250] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[251] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[252] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[253] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[254] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[255] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[256] = [ATBackgroundColor24None]::new()
        $this.ColorMap[257] = [ATBackgroundColor24None]::new()
        $this.ColorMap[258] = [ATBackgroundColor24None]::new() # End Row 6
        $this.ColorMap[259] = [ATBackgroundColor24None]::new()
        $this.ColorMap[260] = [ATBackgroundColor24None]::new()
        $this.ColorMap[261] = [ATBackgroundColor24None]::new()
        $this.ColorMap[262] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[263] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[264] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[265] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[266] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[267] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[268] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[269] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[270] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[271] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[272] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[273] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[274] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[275] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[276] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[277] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[278] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[279] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[280] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[281] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[282] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[283] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[284] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[285] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[286] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[287] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[288] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[289] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[290] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[291] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[292] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[293] = [ATBackgroundColor24None]::new()
        $this.ColorMap[294] = [ATBackgroundColor24None]::new()
        $this.ColorMap[295] = [ATBackgroundColor24None]::new() # End Row 7
        $this.ColorMap[296] = [ATBackgroundColor24None]::new()
        $this.ColorMap[297] = [ATBackgroundColor24None]::new()
        $this.ColorMap[298] = [ATBackgroundColor24None]::new()
        $this.ColorMap[299] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[300] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[301] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[302] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[303] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[304] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[305] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[306] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[307] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[308] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[309] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[310] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[311] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[312] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[313] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[314] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[315] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[316] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[317] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[318] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[319] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[320] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[321] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[322] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[323] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[324] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[325] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[326] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[327] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[328] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[329] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[330] = [ATBackgroundColor24None]::new()
        $this.ColorMap[331] = [ATBackgroundColor24None]::new()
        $this.ColorMap[332] = [ATBackgroundColor24None]::new() # End Row 8
        $this.ColorMap[333] = [ATBackgroundColor24None]::new()
        $this.ColorMap[334] = [ATBackgroundColor24None]::new()
        $this.ColorMap[335] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[336] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[337] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[338] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[339] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[340] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[341] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[342] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[343] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[344] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[345] = [ATBackgroundColor24None]::new()
        $this.ColorMap[346] = [ATBackgroundColor24None]::new()
        $this.ColorMap[347] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[348] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[349] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[350] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[351] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[352] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[353] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[354] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[355] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[356] = [ATBackgroundColor24None]::new()
        $this.ColorMap[357] = [ATBackgroundColor24None]::new()
        $this.ColorMap[358] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[359] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[360] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[361] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[362] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[363] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[364] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[365] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[366] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[367] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[368] = [ATBackgroundColor24None]::new()
        $this.ColorMap[369] = [ATBackgroundColor24None]::new() # End Row 9
        $this.ColorMap[370] = [ATBackgroundColor24None]::new()
        $this.ColorMap[371] = [ATBackgroundColor24None]::new()
        $this.ColorMap[372] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[373] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[374] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[375] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[376] = [ATBackgroundColor24None]::new()
        $this.ColorMap[377] = [ATBackgroundColor24None]::new()
        $this.ColorMap[378] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[379] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[380] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[381] = [ATBackgroundColor24None]::new()
        $this.ColorMap[382] = [ATBackgroundColor24None]::new()
        $this.ColorMap[383] = [ATBackgroundColor24None]::new()
        $this.ColorMap[384] = [ATBackgroundColor24None]::new()
        $this.ColorMap[385] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[386] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[387] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[388] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[389] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[390] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[391] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[392] = [ATBackgroundColor24None]::new()
        $this.ColorMap[393] = [ATBackgroundColor24None]::new()
        $this.ColorMap[394] = [ATBackgroundColor24None]::new()
        $this.ColorMap[395] = [ATBackgroundColor24None]::new()
        $this.ColorMap[396] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[397] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[398] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[399] = [ATBackgroundColor24None]::new()
        $this.ColorMap[400] = [ATBackgroundColor24None]::new()
        $this.ColorMap[401] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[402] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[403] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[404] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[405] = [ATBackgroundColor24None]::new()
        $this.ColorMap[406] = [ATBackgroundColor24None]::new() # End Row 10
        $this.ColorMap[407] = [ATBackgroundColor24None]::new()
        $this.ColorMap[408] = [ATBackgroundColor24None]::new()
        $this.ColorMap[409] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[410] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[411] = [ATBackgroundColor24None]::new()
        $this.ColorMap[412] = [ATBackgroundColor24None]::new()
        $this.ColorMap[413] = [ATBackgroundColor24None]::new()
        $this.ColorMap[414] = [ATBackgroundColor24None]::new()
        $this.ColorMap[415] = [ATBackgroundColor24None]::new()
        $this.ColorMap[416] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[417] = [ATBackgroundColor24None]::new()
        $this.ColorMap[418] = [ATBackgroundColor24None]::new()
        $this.ColorMap[419] = [ATBackgroundColor24None]::new()
        $this.ColorMap[420] = [CCAppleRedDark24]::new()
        $this.ColorMap[421] = [ATBackgroundColor24None]::new()
        $this.ColorMap[422] = [ATBackgroundColor24None]::new()
        $this.ColorMap[423] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[424] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[425] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[426] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[427] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[428] = [ATBackgroundColor24None]::new()
        $this.ColorMap[429] = [ATBackgroundColor24None]::new()
        $this.ColorMap[430] = [CCAppleRedDark24]::new()
        $this.ColorMap[431] = [ATBackgroundColor24None]::new()
        $this.ColorMap[432] = [ATBackgroundColor24None]::new()
        $this.ColorMap[433] = [ATBackgroundColor24None]::new()
        $this.ColorMap[434] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[435] = [ATBackgroundColor24None]::new()
        $this.ColorMap[436] = [ATBackgroundColor24None]::new()
        $this.ColorMap[437] = [ATBackgroundColor24None]::new()
        $this.ColorMap[438] = [ATBackgroundColor24None]::new()
        $this.ColorMap[439] = [ATBackgroundColor24None]::new()
        $this.ColorMap[440] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[441] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[442] = [ATBackgroundColor24None]::new()
        $this.ColorMap[443] = [ATBackgroundColor24None]::new() # End Row 11
        $this.ColorMap[444] = [ATBackgroundColor24None]::new()
        $this.ColorMap[445] = [ATBackgroundColor24None]::new()
        $this.ColorMap[446] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[447] = [ATBackgroundColor24None]::new()
        $this.ColorMap[448] = [ATBackgroundColor24None]::new()
        $this.ColorMap[449] = [ATBackgroundColor24None]::new()
        $this.ColorMap[450] = [ATBackgroundColor24None]::new()
        $this.ColorMap[451] = [ATBackgroundColor24None]::new()
        $this.ColorMap[452] = [ATBackgroundColor24None]::new()
        $this.ColorMap[453] = [ATBackgroundColor24None]::new()
        $this.ColorMap[454] = [ATBackgroundColor24None]::new()
        $this.ColorMap[455] = [ATBackgroundColor24None]::new()
        $this.ColorMap[456] = [ATBackgroundColor24None]::new()
        $this.ColorMap[457] = [ATBackgroundColor24None]::new()
        $this.ColorMap[458] = [CCAppleRedDark24]::new()
        $this.ColorMap[459] = [CCAppleRedDark24]::new()
        $this.ColorMap[460] = [ATBackgroundColor24None]::new()
        $this.ColorMap[461] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[462] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[463] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[464] = [ATBackgroundColor24None]::new()
        $this.ColorMap[465] = [CCAppleRedDark24]::new()
        $this.ColorMap[466] = [CCAppleRedDark24]::new()
        $this.ColorMap[467] = [ATBackgroundColor24None]::new()
        $this.ColorMap[468] = [ATBackgroundColor24None]::new()
        $this.ColorMap[469] = [ATBackgroundColor24None]::new()
        $this.ColorMap[470] = [ATBackgroundColor24None]::new()
        $this.ColorMap[471] = [ATBackgroundColor24None]::new()
        $this.ColorMap[472] = [ATBackgroundColor24None]::new()
        $this.ColorMap[473] = [ATBackgroundColor24None]::new()
        $this.ColorMap[474] = [ATBackgroundColor24None]::new()
        $this.ColorMap[475] = [ATBackgroundColor24None]::new()
        $this.ColorMap[476] = [ATBackgroundColor24None]::new()
        $this.ColorMap[477] = [ATBackgroundColor24None]::new()
        $this.ColorMap[478] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[479] = [ATBackgroundColor24None]::new()
        $this.ColorMap[480] = [ATBackgroundColor24None]::new() # End Row 12
        $this.ColorMap[481] = [ATBackgroundColor24None]::new()
        $this.ColorMap[482] = [ATBackgroundColor24None]::new()
        $this.ColorMap[483] = [ATBackgroundColor24None]::new()
        $this.ColorMap[484] = [ATBackgroundColor24None]::new()
        $this.ColorMap[485] = [ATBackgroundColor24None]::new()
        $this.ColorMap[486] = [ATBackgroundColor24None]::new()
        $this.ColorMap[487] = [ATBackgroundColor24None]::new()
        $this.ColorMap[488] = [ATBackgroundColor24None]::new()
        $this.ColorMap[489] = [ATBackgroundColor24None]::new()
        $this.ColorMap[490] = [ATBackgroundColor24None]::new()
        $this.ColorMap[491] = [ATBackgroundColor24None]::new()
        $this.ColorMap[492] = [ATBackgroundColor24None]::new()
        $this.ColorMap[493] = [ATBackgroundColor24None]::new()
        $this.ColorMap[494] = [CCAppleRedDark24]::new()
        $this.ColorMap[495] = [ATBackgroundColor24None]::new()
        $this.ColorMap[496] = [ATBackgroundColor24None]::new()
        $this.ColorMap[497] = [ATBackgroundColor24None]::new()
        $this.ColorMap[498] = [ATBackgroundColor24None]::new()
        $this.ColorMap[499] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[500] = [ATBackgroundColor24None]::new()
        $this.ColorMap[501] = [ATBackgroundColor24None]::new()
        $this.ColorMap[502] = [ATBackgroundColor24None]::new()
        $this.ColorMap[503] = [ATBackgroundColor24None]::new()
        $this.ColorMap[504] = [CCAppleRedDark24]::new()
        $this.ColorMap[505] = [ATBackgroundColor24None]::new()
        $this.ColorMap[506] = [ATBackgroundColor24None]::new()
        $this.ColorMap[507] = [ATBackgroundColor24None]::new()
        $this.ColorMap[508] = [ATBackgroundColor24None]::new()
        $this.ColorMap[509] = [ATBackgroundColor24None]::new()
        $this.ColorMap[510] = [ATBackgroundColor24None]::new()
        $this.ColorMap[511] = [ATBackgroundColor24None]::new()
        $this.ColorMap[512] = [ATBackgroundColor24None]::new()
        $this.ColorMap[513] = [ATBackgroundColor24None]::new()
        $this.ColorMap[514] = [ATBackgroundColor24None]::new()
        $this.ColorMap[515] = [ATBackgroundColor24None]::new()
        $this.ColorMap[516] = [ATBackgroundColor24None]::new()
        $this.ColorMap[517] = [ATBackgroundColor24None]::new() # End Row 13
        $this.ColorMap[518] = [ATBackgroundColor24None]::new()
        $this.ColorMap[519] = [ATBackgroundColor24None]::new()
        $this.ColorMap[520] = [ATBackgroundColor24None]::new()
        $this.ColorMap[521] = [ATBackgroundColor24None]::new()
        $this.ColorMap[522] = [ATBackgroundColor24None]::new()
        $this.ColorMap[523] = [ATBackgroundColor24None]::new()
        $this.ColorMap[524] = [ATBackgroundColor24None]::new()
        $this.ColorMap[525] = [ATBackgroundColor24None]::new()
        $this.ColorMap[526] = [ATBackgroundColor24None]::new()
        $this.ColorMap[527] = [ATBackgroundColor24None]::new()
        $this.ColorMap[528] = [ATBackgroundColor24None]::new()
        $this.ColorMap[529] = [ATBackgroundColor24None]::new()
        $this.ColorMap[530] = [ATBackgroundColor24None]::new()
        $this.ColorMap[531] = [ATBackgroundColor24None]::new()
        $this.ColorMap[532] = [ATBackgroundColor24None]::new()
        $this.ColorMap[533] = [ATBackgroundColor24None]::new()
        $this.ColorMap[534] = [ATBackgroundColor24None]::new()
        $this.ColorMap[535] = [ATBackgroundColor24None]::new()
        $this.ColorMap[536] = [ATBackgroundColor24None]::new()
        $this.ColorMap[537] = [ATBackgroundColor24None]::new()
        $this.ColorMap[538] = [ATBackgroundColor24None]::new()
        $this.ColorMap[539] = [ATBackgroundColor24None]::new()
        $this.ColorMap[540] = [ATBackgroundColor24None]::new()
        $this.ColorMap[541] = [ATBackgroundColor24None]::new()
        $this.ColorMap[542] = [ATBackgroundColor24None]::new()
        $this.ColorMap[543] = [ATBackgroundColor24None]::new()
        $this.ColorMap[544] = [ATBackgroundColor24None]::new()
        $this.ColorMap[545] = [ATBackgroundColor24None]::new()
        $this.ColorMap[546] = [ATBackgroundColor24None]::new()
        $this.ColorMap[547] = [ATBackgroundColor24None]::new()
        $this.ColorMap[548] = [ATBackgroundColor24None]::new()
        $this.ColorMap[549] = [ATBackgroundColor24None]::new()
        $this.ColorMap[550] = [ATBackgroundColor24None]::new()
        $this.ColorMap[551] = [ATBackgroundColor24None]::new()
        $this.ColorMap[552] = [ATBackgroundColor24None]::new()
        $this.ColorMap[553] = [ATBackgroundColor24None]::new()
        $this.ColorMap[554] = [ATBackgroundColor24None]::new() # End Row 14

        $this.CreateImageATString($this.ColorMap)
        $this.ColorMap = $null
    }
}

Class EEINocturna : EEIInternalBase {
    EEINocturna() : base() {
        $this.ColorMap[0]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[1]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[2]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[3]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[4]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[5]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[6]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[7]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[8]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[9]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[10]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[11]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[12]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[13]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[14]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[15]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[16]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[17]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[18]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[19]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[20]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[21]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[22]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[23]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[24]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[25]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[26]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[27]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[28]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[29]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[30]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[31]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[32]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[33]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[34]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[35]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[36]  = [ATBackgroundColor24None]::new() # End Row 0
        $this.ColorMap[37]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[38]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[39]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[40]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[41]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[42]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[43]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[44]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[45]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[46]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[47]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[48]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[49]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[50]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[51]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[52]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[53]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[54]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[55]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[56]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[57]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[58]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[59]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[60]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[61]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[62]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[63]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[64]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[65]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[66]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[67]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[68]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[69]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[70]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[71]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[72]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[73]  = [ATBackgroundColor24None]::new() # End Row 1
        $this.ColorMap[74]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[75]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[76]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[77]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[78]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[79]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[80]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[81]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[82]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[83]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[84]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[85]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[86]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[87]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[88]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[89]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[90]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[91]  = [CCAppleVPinkADark24]::new()
        $this.ColorMap[92]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[93]  = [CCAppleVPinkADark24]::new()
        $this.ColorMap[94]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[95]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[96]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[97]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[98]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[99]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[100] = [ATBackgroundColor24None]::new()
        $this.ColorMap[101] = [ATBackgroundColor24None]::new()
        $this.ColorMap[102] = [ATBackgroundColor24None]::new()
        $this.ColorMap[103] = [ATBackgroundColor24None]::new()
        $this.ColorMap[104] = [ATBackgroundColor24None]::new()
        $this.ColorMap[105] = [ATBackgroundColor24None]::new()
        $this.ColorMap[106] = [ATBackgroundColor24None]::new()
        $this.ColorMap[107] = [ATBackgroundColor24None]::new()
        $this.ColorMap[108] = [ATBackgroundColor24None]::new()
        $this.ColorMap[109] = [ATBackgroundColor24None]::new()
        $this.ColorMap[110] = [ATBackgroundColor24None]::new() # End Row 2
        $this.ColorMap[111] = [ATBackgroundColor24None]::new()
        $this.ColorMap[112] = [ATBackgroundColor24None]::new()
        $this.ColorMap[113] = [ATBackgroundColor24None]::new()
        $this.ColorMap[114] = [ATBackgroundColor24None]::new()
        $this.ColorMap[115] = [ATBackgroundColor24None]::new()
        $this.ColorMap[116] = [CCAppleVMintALight24]::new()
        $this.ColorMap[117] = [CCAppleVMintALight24]::new()
        $this.ColorMap[118] = [ATBackgroundColor24None]::new()
        $this.ColorMap[119] = [ATBackgroundColor24None]::new()
        $this.ColorMap[120] = [ATBackgroundColor24None]::new()
        $this.ColorMap[121] = [ATBackgroundColor24None]::new()
        $this.ColorMap[122] = [CCAppleVMintALight24]::new()
        $this.ColorMap[123] = [CCAppleVMintALight24]::new()
        $this.ColorMap[124] = [ATBackgroundColor24None]::new()
        $this.ColorMap[125] = [ATBackgroundColor24None]::new()
        $this.ColorMap[126] = [ATBackgroundColor24None]::new()
        $this.ColorMap[127] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[128] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[129] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[130] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[131] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[132] = [ATBackgroundColor24None]::new()
        $this.ColorMap[133] = [ATBackgroundColor24None]::new()
        $this.ColorMap[134] = [ATBackgroundColor24None]::new()
        $this.ColorMap[135] = [CCAppleVMintALight24]::new()
        $this.ColorMap[136] = [CCAppleVMintALight24]::new()
        $this.ColorMap[137] = [ATBackgroundColor24None]::new()
        $this.ColorMap[138] = [ATBackgroundColor24None]::new()
        $this.ColorMap[139] = [ATBackgroundColor24None]::new()
        $this.ColorMap[140] = [ATBackgroundColor24None]::new()
        $this.ColorMap[141] = [CCAppleVMintALight24]::new()
        $this.ColorMap[142] = [CCAppleVMintALight24]::new()
        $this.ColorMap[143] = [ATBackgroundColor24None]::new()
        $this.ColorMap[144] = [ATBackgroundColor24None]::new()
        $this.ColorMap[145] = [ATBackgroundColor24None]::new()
        $this.ColorMap[146] = [ATBackgroundColor24None]::new()
        $this.ColorMap[147] = [ATBackgroundColor24None]::new() # End Row 3
        $this.ColorMap[148] = [ATBackgroundColor24None]::new()
        $this.ColorMap[149] = [ATBackgroundColor24None]::new()
        $this.ColorMap[150] = [ATBackgroundColor24None]::new()
        $this.ColorMap[151] = [ATBackgroundColor24None]::new()
        $this.ColorMap[152] = [CCAppleVMintALight24]::new()
        $this.ColorMap[153] = [CCAppleVMintALight24]::new()
        $this.ColorMap[154] = [CCAppleVMintALight24]::new()
        $this.ColorMap[155] = [CCAppleVMintALight24]::new()
        $this.ColorMap[156] = [CCAppleVMintALight24]::new()
        $this.ColorMap[157] = [ATBackgroundColor24None]::new()
        $this.ColorMap[158] = [CCAppleVMintALight24]::new()
        $this.ColorMap[159] = [CCAppleVMintALight24]::new()
        $this.ColorMap[160] = [CCAppleVMintALight24]::new()
        $this.ColorMap[161] = [CCAppleVMintALight24]::new()
        $this.ColorMap[162] = [CCAppleVMintALight24]::new()
        $this.ColorMap[163] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[164] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[165] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[166] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[167] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[168] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[169] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[170] = [CCAppleVMintALight24]::new()
        $this.ColorMap[171] = [CCAppleVMintALight24]::new()
        $this.ColorMap[172] = [CCAppleVMintALight24]::new()
        $this.ColorMap[173] = [CCAppleVMintALight24]::new()
        $this.ColorMap[174] = [CCAppleVMintALight24]::new()
        $this.ColorMap[175] = [ATBackgroundColor24None]::new()
        $this.ColorMap[176] = [CCAppleVMintALight24]::new()
        $this.ColorMap[177] = [CCAppleVMintALight24]::new()
        $this.ColorMap[178] = [CCAppleVMintALight24]::new()
        $this.ColorMap[179] = [CCAppleVMintALight24]::new()
        $this.ColorMap[180] = [CCAppleVMintALight24]::new()
        $this.ColorMap[181] = [ATBackgroundColor24None]::new()
        $this.ColorMap[182] = [ATBackgroundColor24None]::new()
        $this.ColorMap[183] = [ATBackgroundColor24None]::new()
        $this.ColorMap[184] = [ATBackgroundColor24None]::new() # End Row 4
        $this.ColorMap[185] = [ATBackgroundColor24None]::new()
        $this.ColorMap[186] = [ATBackgroundColor24None]::new()
        $this.ColorMap[187] = [ATBackgroundColor24None]::new()
        $this.ColorMap[188] = [ATBackgroundColor24None]::new()
        $this.ColorMap[189] = [CCAppleVMintALight24]::new()
        $this.ColorMap[190] = [CCAppleVMintALight24]::new()
        $this.ColorMap[191] = [CCAppleVMintALight24]::new()
        $this.ColorMap[192] = [CCAppleVMintALight24]::new()
        $this.ColorMap[193] = [CCAppleVMintALight24]::new()
        $this.ColorMap[194] = [CCAppleVMintALight24]::new()
        $this.ColorMap[195] = [CCAppleVMintALight24]::new()
        $this.ColorMap[196] = [CCAppleVMintALight24]::new()
        $this.ColorMap[197] = [CCAppleVMintALight24]::new()
        $this.ColorMap[198] = [CCAppleVMintALight24]::new()
        $this.ColorMap[199] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[200] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[201] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[202] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[203] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[204] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[205] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[206] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[207] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[208] = [CCAppleVMintALight24]::new()
        $this.ColorMap[209] = [CCAppleVMintALight24]::new()
        $this.ColorMap[210] = [CCAppleVMintALight24]::new()
        $this.ColorMap[211] = [CCAppleVMintALight24]::new()
        $this.ColorMap[212] = [CCAppleVMintALight24]::new()
        $this.ColorMap[213] = [CCAppleVMintALight24]::new()
        $this.ColorMap[214] = [CCAppleVMintALight24]::new()
        $this.ColorMap[215] = [CCAppleVMintALight24]::new()
        $this.ColorMap[216] = [CCAppleVMintALight24]::new()
        $this.ColorMap[217] = [CCAppleVMintALight24]::new()
        $this.ColorMap[218] = [ATBackgroundColor24None]::new()
        $this.ColorMap[219] = [ATBackgroundColor24None]::new()
        $this.ColorMap[220] = [ATBackgroundColor24None]::new()
        $this.ColorMap[221] = [ATBackgroundColor24None]::new() # End Row 5
        $this.ColorMap[222] = [ATBackgroundColor24None]::new()
        $this.ColorMap[223] = [ATBackgroundColor24None]::new()
        $this.ColorMap[224] = [ATBackgroundColor24None]::new()
        $this.ColorMap[225] = [CCAppleVMintALight24]::new()
        $this.ColorMap[226] = [CCAppleVMintALight24]::new()
        $this.ColorMap[227] = [CCAppleVMintALight24]::new()
        $this.ColorMap[228] = [CCAppleVMintALight24]::new()
        $this.ColorMap[229] = [CCAppleVMintALight24]::new()
        $this.ColorMap[230] = [CCAppleVMintALight24]::new()
        $this.ColorMap[231] = [CCAppleVMintALight24]::new()
        $this.ColorMap[232] = [CCAppleVMintALight24]::new()
        $this.ColorMap[233] = [CCAppleVMintALight24]::new()
        $this.ColorMap[234] = [CCAppleVMintALight24]::new()
        $this.ColorMap[235] = [CCAppleVMintALight24]::new()
        $this.ColorMap[236] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[237] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[238] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[239] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[240] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[241] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[242] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[243] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[244] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[245] = [CCAppleVMintALight24]::new()
        $this.ColorMap[246] = [CCAppleVMintALight24]::new()
        $this.ColorMap[247] = [CCAppleVMintALight24]::new()
        $this.ColorMap[248] = [CCAppleVMintALight24]::new()
        $this.ColorMap[249] = [CCAppleVMintALight24]::new()
        $this.ColorMap[250] = [CCAppleVMintALight24]::new()
        $this.ColorMap[251] = [CCAppleVMintALight24]::new()
        $this.ColorMap[252] = [CCAppleVMintALight24]::new()
        $this.ColorMap[253] = [CCAppleVMintALight24]::new()
        $this.ColorMap[254] = [CCAppleVMintALight24]::new()
        $this.ColorMap[255] = [CCAppleVMintALight24]::new()
        $this.ColorMap[256] = [ATBackgroundColor24None]::new()
        $this.ColorMap[257] = [ATBackgroundColor24None]::new()
        $this.ColorMap[258] = [ATBackgroundColor24None]::new() # End Row 6
        $this.ColorMap[259] = [ATBackgroundColor24None]::new()
        $this.ColorMap[260] = [ATBackgroundColor24None]::new()
        $this.ColorMap[261] = [ATBackgroundColor24None]::new()
        $this.ColorMap[262] = [CCAppleVMintALight24]::new()
        $this.ColorMap[263] = [CCAppleVMintALight24]::new()
        $this.ColorMap[264] = [CCAppleVMintALight24]::new()
        $this.ColorMap[265] = [CCAppleVMintALight24]::new()
        $this.ColorMap[266] = [CCAppleVMintALight24]::new()
        $this.ColorMap[267] = [CCAppleVMintALight24]::new()
        $this.ColorMap[268] = [CCAppleVMintALight24]::new()
        $this.ColorMap[269] = [CCAppleVMintALight24]::new()
        $this.ColorMap[270] = [CCAppleVMintALight24]::new()
        $this.ColorMap[271] = [CCAppleVMintALight24]::new()
        $this.ColorMap[272] = [CCAppleVMintALight24]::new()
        $this.ColorMap[273] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[274] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[275] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[276] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[277] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[278] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[279] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[280] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[281] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[282] = [CCAppleVMintALight24]::new()
        $this.ColorMap[283] = [CCAppleVMintALight24]::new()
        $this.ColorMap[284] = [CCAppleVMintALight24]::new()
        $this.ColorMap[285] = [CCAppleVMintALight24]::new()
        $this.ColorMap[286] = [CCAppleVMintALight24]::new()
        $this.ColorMap[287] = [CCAppleVMintALight24]::new()
        $this.ColorMap[288] = [CCAppleVMintALight24]::new()
        $this.ColorMap[289] = [CCAppleVMintALight24]::new()
        $this.ColorMap[290] = [CCAppleVMintALight24]::new()
        $this.ColorMap[291] = [CCAppleVMintALight24]::new()
        $this.ColorMap[292] = [CCAppleVMintALight24]::new()
        $this.ColorMap[293] = [ATBackgroundColor24None]::new()
        $this.ColorMap[294] = [ATBackgroundColor24None]::new()
        $this.ColorMap[295] = [ATBackgroundColor24None]::new() # End Row 7
        $this.ColorMap[296] = [ATBackgroundColor24None]::new()
        $this.ColorMap[297] = [ATBackgroundColor24None]::new()
        $this.ColorMap[298] = [ATBackgroundColor24None]::new()
        $this.ColorMap[299] = [CCAppleVMintALight24]::new()
        $this.ColorMap[300] = [CCAppleVMintALight24]::new()
        $this.ColorMap[301] = [CCAppleVMintALight24]::new()
        $this.ColorMap[302] = [CCAppleVMintALight24]::new()
        $this.ColorMap[303] = [CCAppleVMintALight24]::new()
        $this.ColorMap[304] = [CCAppleVMintALight24]::new()
        $this.ColorMap[305] = [CCAppleVMintALight24]::new()
        $this.ColorMap[306] = [CCAppleVMintALight24]::new()
        $this.ColorMap[307] = [CCAppleVMintALight24]::new()
        $this.ColorMap[308] = [CCAppleVMintALight24]::new()
        $this.ColorMap[309] = [CCAppleVMintALight24]::new()
        $this.ColorMap[310] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[311] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[312] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[313] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[314] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[315] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[316] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[317] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[318] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[319] = [CCAppleVMintALight24]::new()
        $this.ColorMap[320] = [CCAppleVMintALight24]::new()
        $this.ColorMap[321] = [CCAppleVMintALight24]::new()
        $this.ColorMap[322] = [CCAppleVMintALight24]::new()
        $this.ColorMap[323] = [CCAppleVMintALight24]::new()
        $this.ColorMap[324] = [CCAppleVMintALight24]::new()
        $this.ColorMap[325] = [CCAppleVMintALight24]::new()
        $this.ColorMap[326] = [CCAppleVMintALight24]::new()
        $this.ColorMap[327] = [CCAppleVMintALight24]::new()
        $this.ColorMap[328] = [CCAppleVMintALight24]::new()
        $this.ColorMap[329] = [CCAppleVMintALight24]::new()
        $this.ColorMap[330] = [ATBackgroundColor24None]::new()
        $this.ColorMap[331] = [ATBackgroundColor24None]::new()
        $this.ColorMap[332] = [ATBackgroundColor24None]::new() # End Row 8
        $this.ColorMap[333] = [ATBackgroundColor24None]::new()
        $this.ColorMap[334] = [ATBackgroundColor24None]::new()
        $this.ColorMap[335] = [CCAppleVMintALight24]::new()
        $this.ColorMap[336] = [CCAppleVMintALight24]::new()
        $this.ColorMap[337] = [CCAppleVMintALight24]::new()
        $this.ColorMap[338] = [CCAppleVMintALight24]::new()
        $this.ColorMap[339] = [CCAppleVMintALight24]::new()
        $this.ColorMap[340] = [CCAppleVMintALight24]::new()
        $this.ColorMap[341] = [CCAppleVMintALight24]::new()
        $this.ColorMap[342] = [CCAppleVMintALight24]::new()
        $this.ColorMap[343] = [CCAppleVMintALight24]::new()
        $this.ColorMap[344] = [CCAppleVMintALight24]::new()
        $this.ColorMap[345] = [ATBackgroundColor24None]::new()
        $this.ColorMap[346] = [ATBackgroundColor24None]::new()
        $this.ColorMap[347] = [CCAppleVMintALight24]::new()
        $this.ColorMap[348] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[349] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[350] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[351] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[352] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[353] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[354] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[355] = [CCAppleVMintALight24]::new()
        $this.ColorMap[356] = [ATBackgroundColor24None]::new()
        $this.ColorMap[357] = [ATBackgroundColor24None]::new()
        $this.ColorMap[358] = [CCAppleVMintALight24]::new()
        $this.ColorMap[359] = [CCAppleVMintALight24]::new()
        $this.ColorMap[360] = [CCAppleVMintALight24]::new()
        $this.ColorMap[361] = [CCAppleVMintALight24]::new()
        $this.ColorMap[362] = [CCAppleVMintALight24]::new()
        $this.ColorMap[363] = [CCAppleVMintALight24]::new()
        $this.ColorMap[364] = [CCAppleVMintALight24]::new()
        $this.ColorMap[365] = [CCAppleVMintALight24]::new()
        $this.ColorMap[366] = [CCAppleVMintALight24]::new()
        $this.ColorMap[367] = [CCAppleVMintALight24]::new()
        $this.ColorMap[368] = [ATBackgroundColor24None]::new()
        $this.ColorMap[369] = [ATBackgroundColor24None]::new() # End Row 9
        $this.ColorMap[370] = [ATBackgroundColor24None]::new()
        $this.ColorMap[371] = [ATBackgroundColor24None]::new()
        $this.ColorMap[372] = [CCAppleVMintALight24]::new()
        $this.ColorMap[373] = [CCAppleVMintALight24]::new()
        $this.ColorMap[374] = [CCAppleVMintALight24]::new()
        $this.ColorMap[375] = [CCAppleVMintALight24]::new()
        $this.ColorMap[376] = [ATBackgroundColor24None]::new()
        $this.ColorMap[377] = [ATBackgroundColor24None]::new()
        $this.ColorMap[378] = [CCAppleVMintALight24]::new()
        $this.ColorMap[379] = [CCAppleVMintALight24]::new()
        $this.ColorMap[380] = [CCAppleVMintALight24]::new()
        $this.ColorMap[381] = [ATBackgroundColor24None]::new()
        $this.ColorMap[382] = [ATBackgroundColor24None]::new()
        $this.ColorMap[383] = [ATBackgroundColor24None]::new()
        $this.ColorMap[384] = [ATBackgroundColor24None]::new()
        $this.ColorMap[385] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[386] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[387] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[388] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[389] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[390] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[391] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[392] = [ATBackgroundColor24None]::new()
        $this.ColorMap[393] = [ATBackgroundColor24None]::new()
        $this.ColorMap[394] = [ATBackgroundColor24None]::new()
        $this.ColorMap[395] = [ATBackgroundColor24None]::new()
        $this.ColorMap[396] = [CCAppleVMintALight24]::new()
        $this.ColorMap[397] = [CCAppleVMintALight24]::new()
        $this.ColorMap[398] = [CCAppleVMintALight24]::new()
        $this.ColorMap[399] = [ATBackgroundColor24None]::new()
        $this.ColorMap[400] = [ATBackgroundColor24None]::new()
        $this.ColorMap[401] = [CCAppleVMintALight24]::new()
        $this.ColorMap[402] = [CCAppleVMintALight24]::new()
        $this.ColorMap[403] = [CCAppleVMintALight24]::new()
        $this.ColorMap[404] = [CCAppleVMintALight24]::new()
        $this.ColorMap[405] = [ATBackgroundColor24None]::new()
        $this.ColorMap[406] = [ATBackgroundColor24None]::new() # End Row 10
        $this.ColorMap[407] = [ATBackgroundColor24None]::new()
        $this.ColorMap[408] = [ATBackgroundColor24None]::new()
        $this.ColorMap[409] = [CCAppleVMintALight24]::new()
        $this.ColorMap[410] = [CCAppleVMintALight24]::new()
        $this.ColorMap[411] = [ATBackgroundColor24None]::new()
        $this.ColorMap[412] = [ATBackgroundColor24None]::new()
        $this.ColorMap[413] = [ATBackgroundColor24None]::new()
        $this.ColorMap[414] = [ATBackgroundColor24None]::new()
        $this.ColorMap[415] = [ATBackgroundColor24None]::new()
        $this.ColorMap[416] = [CCAppleVMintALight24]::new()
        $this.ColorMap[417] = [ATBackgroundColor24None]::new()
        $this.ColorMap[418] = [ATBackgroundColor24None]::new()
        $this.ColorMap[419] = [ATBackgroundColor24None]::new()
        $this.ColorMap[420] = [CCAppleVGreyALight24]::new()
        $this.ColorMap[421] = [ATBackgroundColor24None]::new()
        $this.ColorMap[422] = [ATBackgroundColor24None]::new()
        $this.ColorMap[423] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[424] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[425] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[426] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[427] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[428] = [ATBackgroundColor24None]::new()
        $this.ColorMap[429] = [ATBackgroundColor24None]::new()
        $this.ColorMap[430] = [CCAppleVGreyALight24]::new()
        $this.ColorMap[431] = [ATBackgroundColor24None]::new()
        $this.ColorMap[432] = [ATBackgroundColor24None]::new()
        $this.ColorMap[433] = [ATBackgroundColor24None]::new()
        $this.ColorMap[434] = [CCAppleVMintALight24]::new()
        $this.ColorMap[435] = [ATBackgroundColor24None]::new()
        $this.ColorMap[436] = [ATBackgroundColor24None]::new()
        $this.ColorMap[437] = [ATBackgroundColor24None]::new()
        $this.ColorMap[438] = [ATBackgroundColor24None]::new()
        $this.ColorMap[439] = [ATBackgroundColor24None]::new()
        $this.ColorMap[440] = [CCAppleVMintALight24]::new()
        $this.ColorMap[441] = [CCAppleVMintALight24]::new()
        $this.ColorMap[442] = [ATBackgroundColor24None]::new()
        $this.ColorMap[443] = [ATBackgroundColor24None]::new() # End Row 11
        $this.ColorMap[444] = [ATBackgroundColor24None]::new()
        $this.ColorMap[445] = [ATBackgroundColor24None]::new()
        $this.ColorMap[446] = [CCAppleVMintALight24]::new()
        $this.ColorMap[447] = [ATBackgroundColor24None]::new()
        $this.ColorMap[448] = [ATBackgroundColor24None]::new()
        $this.ColorMap[449] = [ATBackgroundColor24None]::new()
        $this.ColorMap[450] = [ATBackgroundColor24None]::new()
        $this.ColorMap[451] = [ATBackgroundColor24None]::new()
        $this.ColorMap[452] = [ATBackgroundColor24None]::new()
        $this.ColorMap[453] = [ATBackgroundColor24None]::new()
        $this.ColorMap[454] = [ATBackgroundColor24None]::new()
        $this.ColorMap[455] = [ATBackgroundColor24None]::new()
        $this.ColorMap[456] = [ATBackgroundColor24None]::new()
        $this.ColorMap[457] = [ATBackgroundColor24None]::new()
        $this.ColorMap[458] = [CCAppleVGreyALight24]::new()
        $this.ColorMap[459] = [CCAppleVGreyALight24]::new()
        $this.ColorMap[460] = [ATBackgroundColor24None]::new()
        $this.ColorMap[461] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[462] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[463] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[464] = [ATBackgroundColor24None]::new()
        $this.ColorMap[465] = [CCAppleVGreyALight24]::new()
        $this.ColorMap[466] = [CCAppleVGreyALight24]::new()
        $this.ColorMap[467] = [ATBackgroundColor24None]::new()
        $this.ColorMap[468] = [ATBackgroundColor24None]::new()
        $this.ColorMap[469] = [ATBackgroundColor24None]::new()
        $this.ColorMap[470] = [ATBackgroundColor24None]::new()
        $this.ColorMap[471] = [ATBackgroundColor24None]::new()
        $this.ColorMap[472] = [ATBackgroundColor24None]::new()
        $this.ColorMap[473] = [ATBackgroundColor24None]::new()
        $this.ColorMap[474] = [ATBackgroundColor24None]::new()
        $this.ColorMap[475] = [ATBackgroundColor24None]::new()
        $this.ColorMap[476] = [ATBackgroundColor24None]::new()
        $this.ColorMap[477] = [ATBackgroundColor24None]::new()
        $this.ColorMap[478] = [CCAppleVMintALight24]::new()
        $this.ColorMap[479] = [ATBackgroundColor24None]::new()
        $this.ColorMap[480] = [ATBackgroundColor24None]::new() # End Row 12
        $this.ColorMap[481] = [ATBackgroundColor24None]::new()
        $this.ColorMap[482] = [ATBackgroundColor24None]::new()
        $this.ColorMap[483] = [ATBackgroundColor24None]::new()
        $this.ColorMap[484] = [ATBackgroundColor24None]::new()
        $this.ColorMap[485] = [ATBackgroundColor24None]::new()
        $this.ColorMap[486] = [ATBackgroundColor24None]::new()
        $this.ColorMap[487] = [ATBackgroundColor24None]::new()
        $this.ColorMap[488] = [ATBackgroundColor24None]::new()
        $this.ColorMap[489] = [ATBackgroundColor24None]::new()
        $this.ColorMap[490] = [ATBackgroundColor24None]::new()
        $this.ColorMap[491] = [ATBackgroundColor24None]::new()
        $this.ColorMap[492] = [ATBackgroundColor24None]::new()
        $this.ColorMap[493] = [ATBackgroundColor24None]::new()
        $this.ColorMap[494] = [CCAppleVGreyALight24]::new()
        $this.ColorMap[495] = [ATBackgroundColor24None]::new()
        $this.ColorMap[496] = [ATBackgroundColor24None]::new()
        $this.ColorMap[497] = [ATBackgroundColor24None]::new()
        $this.ColorMap[498] = [ATBackgroundColor24None]::new()
        $this.ColorMap[499] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[500] = [ATBackgroundColor24None]::new()
        $this.ColorMap[501] = [ATBackgroundColor24None]::new()
        $this.ColorMap[502] = [ATBackgroundColor24None]::new()
        $this.ColorMap[503] = [ATBackgroundColor24None]::new()
        $this.ColorMap[504] = [CCAppleVGreyALight24]::new()
        $this.ColorMap[505] = [ATBackgroundColor24None]::new()
        $this.ColorMap[506] = [ATBackgroundColor24None]::new()
        $this.ColorMap[507] = [ATBackgroundColor24None]::new()
        $this.ColorMap[508] = [ATBackgroundColor24None]::new()
        $this.ColorMap[509] = [ATBackgroundColor24None]::new()
        $this.ColorMap[510] = [ATBackgroundColor24None]::new()
        $this.ColorMap[511] = [ATBackgroundColor24None]::new()
        $this.ColorMap[512] = [ATBackgroundColor24None]::new()
        $this.ColorMap[513] = [ATBackgroundColor24None]::new()
        $this.ColorMap[514] = [ATBackgroundColor24None]::new()
        $this.ColorMap[515] = [ATBackgroundColor24None]::new()
        $this.ColorMap[516] = [ATBackgroundColor24None]::new()
        $this.ColorMap[517] = [ATBackgroundColor24None]::new() # End Row 13
        $this.ColorMap[518] = [ATBackgroundColor24None]::new()
        $this.ColorMap[519] = [ATBackgroundColor24None]::new()
        $this.ColorMap[520] = [ATBackgroundColor24None]::new()
        $this.ColorMap[521] = [ATBackgroundColor24None]::new()
        $this.ColorMap[522] = [ATBackgroundColor24None]::new()
        $this.ColorMap[523] = [ATBackgroundColor24None]::new()
        $this.ColorMap[524] = [ATBackgroundColor24None]::new()
        $this.ColorMap[525] = [ATBackgroundColor24None]::new()
        $this.ColorMap[526] = [ATBackgroundColor24None]::new()
        $this.ColorMap[527] = [ATBackgroundColor24None]::new()
        $this.ColorMap[528] = [ATBackgroundColor24None]::new()
        $this.ColorMap[529] = [ATBackgroundColor24None]::new()
        $this.ColorMap[530] = [ATBackgroundColor24None]::new()
        $this.ColorMap[531] = [ATBackgroundColor24None]::new()
        $this.ColorMap[532] = [ATBackgroundColor24None]::new()
        $this.ColorMap[533] = [ATBackgroundColor24None]::new()
        $this.ColorMap[534] = [ATBackgroundColor24None]::new()
        $this.ColorMap[535] = [ATBackgroundColor24None]::new()
        $this.ColorMap[536] = [ATBackgroundColor24None]::new()
        $this.ColorMap[537] = [ATBackgroundColor24None]::new()
        $this.ColorMap[538] = [ATBackgroundColor24None]::new()
        $this.ColorMap[539] = [ATBackgroundColor24None]::new()
        $this.ColorMap[540] = [ATBackgroundColor24None]::new()
        $this.ColorMap[541] = [ATBackgroundColor24None]::new()
        $this.ColorMap[542] = [ATBackgroundColor24None]::new()
        $this.ColorMap[543] = [ATBackgroundColor24None]::new()
        $this.ColorMap[544] = [ATBackgroundColor24None]::new()
        $this.ColorMap[545] = [ATBackgroundColor24None]::new()
        $this.ColorMap[546] = [ATBackgroundColor24None]::new()
        $this.ColorMap[547] = [ATBackgroundColor24None]::new()
        $this.ColorMap[548] = [ATBackgroundColor24None]::new()
        $this.ColorMap[549] = [ATBackgroundColor24None]::new()
        $this.ColorMap[550] = [ATBackgroundColor24None]::new()
        $this.ColorMap[551] = [ATBackgroundColor24None]::new()
        $this.ColorMap[552] = [ATBackgroundColor24None]::new()
        $this.ColorMap[553] = [ATBackgroundColor24None]::new()
        $this.ColorMap[554] = [ATBackgroundColor24None]::new() # End Row 14

        $this.CreateImageATString($this.ColorMap)
        $this.ColorMap = $null
    }
}

Class EEIBloodswoop : EEIInternalBase {
    EEIBloodswoop() : base() {
        $this.ColorMap[0]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[1]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[2]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[3]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[4]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[5]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[6]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[7]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[8]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[9]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[10]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[11]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[12]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[13]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[14]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[15]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[16]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[17]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[18]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[19]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[20]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[21]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[22]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[23]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[24]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[25]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[26]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[27]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[28]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[29]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[30]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[31]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[32]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[33]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[34]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[35]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[36]  = [ATBackgroundColor24None]::new() # End Row 0
        $this.ColorMap[37]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[38]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[39]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[40]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[41]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[42]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[43]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[44]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[45]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[46]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[47]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[48]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[49]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[50]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[51]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[52]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[53]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[54]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[55]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[56]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[57]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[58]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[59]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[60]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[61]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[62]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[63]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[64]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[65]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[66]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[67]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[68]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[69]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[70]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[71]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[72]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[73]  = [ATBackgroundColor24None]::new() # End Row 1
        $this.ColorMap[74]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[75]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[76]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[77]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[78]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[79]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[80]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[81]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[82]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[83]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[84]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[85]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[86]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[87]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[88]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[89]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[90]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[91]  = [CCAppleVYellowADark24]::new()
        $this.ColorMap[92]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[93]  = [CCAppleVYellowADark24]::new()
        $this.ColorMap[94]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[95]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[96]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[97]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[98]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[99]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[100] = [ATBackgroundColor24None]::new()
        $this.ColorMap[101] = [ATBackgroundColor24None]::new()
        $this.ColorMap[102] = [ATBackgroundColor24None]::new()
        $this.ColorMap[103] = [ATBackgroundColor24None]::new()
        $this.ColorMap[104] = [ATBackgroundColor24None]::new()
        $this.ColorMap[105] = [ATBackgroundColor24None]::new()
        $this.ColorMap[106] = [ATBackgroundColor24None]::new()
        $this.ColorMap[107] = [ATBackgroundColor24None]::new()
        $this.ColorMap[108] = [ATBackgroundColor24None]::new()
        $this.ColorMap[109] = [ATBackgroundColor24None]::new()
        $this.ColorMap[110] = [ATBackgroundColor24None]::new() # End Row 2
        $this.ColorMap[111] = [ATBackgroundColor24None]::new()
        $this.ColorMap[112] = [ATBackgroundColor24None]::new()
        $this.ColorMap[113] = [ATBackgroundColor24None]::new()
        $this.ColorMap[114] = [ATBackgroundColor24None]::new()
        $this.ColorMap[115] = [ATBackgroundColor24None]::new()
        $this.ColorMap[116] = [CCAppleVRedLight24]::new()
        $this.ColorMap[117] = [CCAppleVRedLight24]::new()
        $this.ColorMap[118] = [ATBackgroundColor24None]::new()
        $this.ColorMap[119] = [ATBackgroundColor24None]::new()
        $this.ColorMap[120] = [ATBackgroundColor24None]::new()
        $this.ColorMap[121] = [ATBackgroundColor24None]::new()
        $this.ColorMap[122] = [CCAppleVRedLight24]::new()
        $this.ColorMap[123] = [CCAppleVRedLight24]::new()
        $this.ColorMap[124] = [ATBackgroundColor24None]::new()
        $this.ColorMap[125] = [ATBackgroundColor24None]::new()
        $this.ColorMap[126] = [ATBackgroundColor24None]::new()
        $this.ColorMap[127] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[128] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[129] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[130] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[131] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[132] = [ATBackgroundColor24None]::new()
        $this.ColorMap[133] = [ATBackgroundColor24None]::new()
        $this.ColorMap[134] = [ATBackgroundColor24None]::new()
        $this.ColorMap[135] = [CCAppleVRedLight24]::new()
        $this.ColorMap[136] = [CCAppleVRedLight24]::new()
        $this.ColorMap[137] = [ATBackgroundColor24None]::new()
        $this.ColorMap[138] = [ATBackgroundColor24None]::new()
        $this.ColorMap[139] = [ATBackgroundColor24None]::new()
        $this.ColorMap[140] = [ATBackgroundColor24None]::new()
        $this.ColorMap[141] = [CCAppleVRedLight24]::new()
        $this.ColorMap[142] = [CCAppleVRedLight24]::new()
        $this.ColorMap[143] = [ATBackgroundColor24None]::new()
        $this.ColorMap[144] = [ATBackgroundColor24None]::new()
        $this.ColorMap[145] = [ATBackgroundColor24None]::new()
        $this.ColorMap[146] = [ATBackgroundColor24None]::new()
        $this.ColorMap[147] = [ATBackgroundColor24None]::new() # End Row 3
        $this.ColorMap[148] = [ATBackgroundColor24None]::new()
        $this.ColorMap[149] = [ATBackgroundColor24None]::new()
        $this.ColorMap[150] = [ATBackgroundColor24None]::new()
        $this.ColorMap[151] = [ATBackgroundColor24None]::new()
        $this.ColorMap[152] = [CCAppleVRedLight24]::new()
        $this.ColorMap[153] = [CCAppleVRedLight24]::new()
        $this.ColorMap[154] = [CCAppleVRedLight24]::new()
        $this.ColorMap[155] = [CCAppleVRedLight24]::new()
        $this.ColorMap[156] = [CCAppleVRedLight24]::new()
        $this.ColorMap[157] = [ATBackgroundColor24None]::new()
        $this.ColorMap[158] = [CCAppleVRedLight24]::new()
        $this.ColorMap[159] = [CCAppleVRedLight24]::new()
        $this.ColorMap[160] = [CCAppleVRedLight24]::new()
        $this.ColorMap[161] = [CCAppleVRedLight24]::new()
        $this.ColorMap[162] = [CCAppleVRedLight24]::new()
        $this.ColorMap[163] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[164] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[165] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[166] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[167] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[168] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[169] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[170] = [CCAppleVRedLight24]::new()
        $this.ColorMap[171] = [CCAppleVRedLight24]::new()
        $this.ColorMap[172] = [CCAppleVRedLight24]::new()
        $this.ColorMap[173] = [CCAppleVRedLight24]::new()
        $this.ColorMap[174] = [CCAppleVRedLight24]::new()
        $this.ColorMap[175] = [ATBackgroundColor24None]::new()
        $this.ColorMap[176] = [CCAppleVRedLight24]::new()
        $this.ColorMap[177] = [CCAppleVRedLight24]::new()
        $this.ColorMap[178] = [CCAppleVRedLight24]::new()
        $this.ColorMap[179] = [CCAppleVRedLight24]::new()
        $this.ColorMap[180] = [CCAppleVRedLight24]::new()
        $this.ColorMap[181] = [ATBackgroundColor24None]::new()
        $this.ColorMap[182] = [ATBackgroundColor24None]::new()
        $this.ColorMap[183] = [ATBackgroundColor24None]::new()
        $this.ColorMap[184] = [ATBackgroundColor24None]::new() # End Row 4
        $this.ColorMap[185] = [ATBackgroundColor24None]::new()
        $this.ColorMap[186] = [ATBackgroundColor24None]::new()
        $this.ColorMap[187] = [ATBackgroundColor24None]::new()
        $this.ColorMap[188] = [ATBackgroundColor24None]::new()
        $this.ColorMap[189] = [CCAppleVRedLight24]::new()
        $this.ColorMap[190] = [CCAppleVRedLight24]::new()
        $this.ColorMap[191] = [CCAppleVRedLight24]::new()
        $this.ColorMap[192] = [CCAppleVRedLight24]::new()
        $this.ColorMap[193] = [CCAppleVRedLight24]::new()
        $this.ColorMap[194] = [CCAppleVRedLight24]::new()
        $this.ColorMap[195] = [CCAppleVRedLight24]::new()
        $this.ColorMap[196] = [CCAppleVRedLight24]::new()
        $this.ColorMap[197] = [CCAppleVRedLight24]::new()
        $this.ColorMap[198] = [CCAppleVRedLight24]::new()
        $this.ColorMap[199] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[200] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[201] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[202] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[203] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[204] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[205] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[206] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[207] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[208] = [CCAppleVRedLight24]::new()
        $this.ColorMap[209] = [CCAppleVRedLight24]::new()
        $this.ColorMap[210] = [CCAppleVRedLight24]::new()
        $this.ColorMap[211] = [CCAppleVRedLight24]::new()
        $this.ColorMap[212] = [CCAppleVRedLight24]::new()
        $this.ColorMap[213] = [CCAppleVRedLight24]::new()
        $this.ColorMap[214] = [CCAppleVRedLight24]::new()
        $this.ColorMap[215] = [CCAppleVRedLight24]::new()
        $this.ColorMap[216] = [CCAppleVRedLight24]::new()
        $this.ColorMap[217] = [CCAppleVRedLight24]::new()
        $this.ColorMap[218] = [ATBackgroundColor24None]::new()
        $this.ColorMap[219] = [ATBackgroundColor24None]::new()
        $this.ColorMap[220] = [ATBackgroundColor24None]::new()
        $this.ColorMap[221] = [ATBackgroundColor24None]::new() # End Row 5
        $this.ColorMap[222] = [ATBackgroundColor24None]::new()
        $this.ColorMap[223] = [ATBackgroundColor24None]::new()
        $this.ColorMap[224] = [ATBackgroundColor24None]::new()
        $this.ColorMap[225] = [CCAppleVRedLight24]::new()
        $this.ColorMap[226] = [CCAppleVRedLight24]::new()
        $this.ColorMap[227] = [CCAppleVRedLight24]::new()
        $this.ColorMap[228] = [CCAppleVRedLight24]::new()
        $this.ColorMap[229] = [CCAppleVRedLight24]::new()
        $this.ColorMap[230] = [CCAppleVRedLight24]::new()
        $this.ColorMap[231] = [CCAppleVRedLight24]::new()
        $this.ColorMap[232] = [CCAppleVRedLight24]::new()
        $this.ColorMap[233] = [CCAppleVRedLight24]::new()
        $this.ColorMap[234] = [CCAppleVRedLight24]::new()
        $this.ColorMap[235] = [CCAppleVRedLight24]::new()
        $this.ColorMap[236] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[237] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[238] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[239] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[240] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[241] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[242] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[243] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[244] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[245] = [CCAppleVRedLight24]::new()
        $this.ColorMap[246] = [CCAppleVRedLight24]::new()
        $this.ColorMap[247] = [CCAppleVRedLight24]::new()
        $this.ColorMap[248] = [CCAppleVRedLight24]::new()
        $this.ColorMap[249] = [CCAppleVRedLight24]::new()
        $this.ColorMap[250] = [CCAppleVRedLight24]::new()
        $this.ColorMap[251] = [CCAppleVRedLight24]::new()
        $this.ColorMap[252] = [CCAppleVRedLight24]::new()
        $this.ColorMap[253] = [CCAppleVRedLight24]::new()
        $this.ColorMap[254] = [CCAppleVRedLight24]::new()
        $this.ColorMap[255] = [CCAppleVRedLight24]::new()
        $this.ColorMap[256] = [ATBackgroundColor24None]::new()
        $this.ColorMap[257] = [ATBackgroundColor24None]::new()
        $this.ColorMap[258] = [ATBackgroundColor24None]::new() # End Row 6
        $this.ColorMap[259] = [ATBackgroundColor24None]::new()
        $this.ColorMap[260] = [ATBackgroundColor24None]::new()
        $this.ColorMap[261] = [ATBackgroundColor24None]::new()
        $this.ColorMap[262] = [CCAppleVRedLight24]::new()
        $this.ColorMap[263] = [CCAppleVRedLight24]::new()
        $this.ColorMap[264] = [CCAppleVRedLight24]::new()
        $this.ColorMap[265] = [CCAppleVRedLight24]::new()
        $this.ColorMap[266] = [CCAppleVRedLight24]::new()
        $this.ColorMap[267] = [CCAppleVRedLight24]::new()
        $this.ColorMap[268] = [CCAppleVRedLight24]::new()
        $this.ColorMap[269] = [CCAppleVRedLight24]::new()
        $this.ColorMap[270] = [CCAppleVRedLight24]::new()
        $this.ColorMap[271] = [CCAppleVRedLight24]::new()
        $this.ColorMap[272] = [CCAppleVRedLight24]::new()
        $this.ColorMap[273] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[274] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[275] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[276] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[277] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[278] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[279] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[280] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[281] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[282] = [CCAppleVRedLight24]::new()
        $this.ColorMap[283] = [CCAppleVRedLight24]::new()
        $this.ColorMap[284] = [CCAppleVRedLight24]::new()
        $this.ColorMap[285] = [CCAppleVRedLight24]::new()
        $this.ColorMap[286] = [CCAppleVRedLight24]::new()
        $this.ColorMap[287] = [CCAppleVRedLight24]::new()
        $this.ColorMap[288] = [CCAppleVRedLight24]::new()
        $this.ColorMap[289] = [CCAppleVRedLight24]::new()
        $this.ColorMap[290] = [CCAppleVRedLight24]::new()
        $this.ColorMap[291] = [CCAppleVRedLight24]::new()
        $this.ColorMap[292] = [CCAppleVRedLight24]::new()
        $this.ColorMap[293] = [ATBackgroundColor24None]::new()
        $this.ColorMap[294] = [ATBackgroundColor24None]::new()
        $this.ColorMap[295] = [ATBackgroundColor24None]::new() # End Row 7
        $this.ColorMap[296] = [ATBackgroundColor24None]::new()
        $this.ColorMap[297] = [ATBackgroundColor24None]::new()
        $this.ColorMap[298] = [ATBackgroundColor24None]::new()
        $this.ColorMap[299] = [CCAppleVRedLight24]::new()
        $this.ColorMap[300] = [CCAppleVRedLight24]::new()
        $this.ColorMap[301] = [CCAppleVRedLight24]::new()
        $this.ColorMap[302] = [CCAppleVRedLight24]::new()
        $this.ColorMap[303] = [CCAppleVRedLight24]::new()
        $this.ColorMap[304] = [CCAppleVRedLight24]::new()
        $this.ColorMap[305] = [CCAppleVRedLight24]::new()
        $this.ColorMap[306] = [CCAppleVRedLight24]::new()
        $this.ColorMap[307] = [CCAppleVRedLight24]::new()
        $this.ColorMap[308] = [CCAppleVRedLight24]::new()
        $this.ColorMap[309] = [CCAppleVRedLight24]::new()
        $this.ColorMap[310] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[311] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[312] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[313] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[314] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[315] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[316] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[317] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[318] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[319] = [CCAppleVRedLight24]::new()
        $this.ColorMap[320] = [CCAppleVRedLight24]::new()
        $this.ColorMap[321] = [CCAppleVRedLight24]::new()
        $this.ColorMap[322] = [CCAppleVRedLight24]::new()
        $this.ColorMap[323] = [CCAppleVRedLight24]::new()
        $this.ColorMap[324] = [CCAppleVRedLight24]::new()
        $this.ColorMap[325] = [CCAppleVRedLight24]::new()
        $this.ColorMap[326] = [CCAppleVRedLight24]::new()
        $this.ColorMap[327] = [CCAppleVRedLight24]::new()
        $this.ColorMap[328] = [CCAppleVRedLight24]::new()
        $this.ColorMap[329] = [CCAppleVRedLight24]::new()
        $this.ColorMap[330] = [ATBackgroundColor24None]::new()
        $this.ColorMap[331] = [ATBackgroundColor24None]::new()
        $this.ColorMap[332] = [ATBackgroundColor24None]::new() # End Row 8
        $this.ColorMap[333] = [ATBackgroundColor24None]::new()
        $this.ColorMap[334] = [ATBackgroundColor24None]::new()
        $this.ColorMap[335] = [CCAppleVRedLight24]::new()
        $this.ColorMap[336] = [CCAppleVRedLight24]::new()
        $this.ColorMap[337] = [CCAppleVRedLight24]::new()
        $this.ColorMap[338] = [CCAppleVRedLight24]::new()
        $this.ColorMap[339] = [CCAppleVRedLight24]::new()
        $this.ColorMap[340] = [CCAppleVRedLight24]::new()
        $this.ColorMap[341] = [CCAppleVRedLight24]::new()
        $this.ColorMap[342] = [CCAppleVRedLight24]::new()
        $this.ColorMap[343] = [CCAppleVRedLight24]::new()
        $this.ColorMap[344] = [CCAppleVRedLight24]::new()
        $this.ColorMap[345] = [ATBackgroundColor24None]::new()
        $this.ColorMap[346] = [ATBackgroundColor24None]::new()
        $this.ColorMap[347] = [CCAppleVRedLight24]::new()
        $this.ColorMap[348] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[349] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[350] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[351] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[352] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[353] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[354] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[355] = [CCAppleVRedLight24]::new()
        $this.ColorMap[356] = [ATBackgroundColor24None]::new()
        $this.ColorMap[357] = [ATBackgroundColor24None]::new()
        $this.ColorMap[358] = [CCAppleVRedLight24]::new()
        $this.ColorMap[359] = [CCAppleVRedLight24]::new()
        $this.ColorMap[360] = [CCAppleVRedLight24]::new()
        $this.ColorMap[361] = [CCAppleVRedLight24]::new()
        $this.ColorMap[362] = [CCAppleVRedLight24]::new()
        $this.ColorMap[363] = [CCAppleVRedLight24]::new()
        $this.ColorMap[364] = [CCAppleVRedLight24]::new()
        $this.ColorMap[365] = [CCAppleVRedLight24]::new()
        $this.ColorMap[366] = [CCAppleVRedLight24]::new()
        $this.ColorMap[367] = [CCAppleVRedLight24]::new()
        $this.ColorMap[368] = [ATBackgroundColor24None]::new()
        $this.ColorMap[369] = [ATBackgroundColor24None]::new() # End Row 9
        $this.ColorMap[370] = [ATBackgroundColor24None]::new()
        $this.ColorMap[371] = [ATBackgroundColor24None]::new()
        $this.ColorMap[372] = [CCAppleVRedLight24]::new()
        $this.ColorMap[373] = [CCAppleVRedLight24]::new()
        $this.ColorMap[374] = [CCAppleVRedLight24]::new()
        $this.ColorMap[375] = [CCAppleVRedLight24]::new()
        $this.ColorMap[376] = [ATBackgroundColor24None]::new()
        $this.ColorMap[377] = [ATBackgroundColor24None]::new()
        $this.ColorMap[378] = [CCAppleVRedLight24]::new()
        $this.ColorMap[379] = [CCAppleVRedLight24]::new()
        $this.ColorMap[380] = [CCAppleVRedLight24]::new()
        $this.ColorMap[381] = [ATBackgroundColor24None]::new()
        $this.ColorMap[382] = [ATBackgroundColor24None]::new()
        $this.ColorMap[383] = [ATBackgroundColor24None]::new()
        $this.ColorMap[384] = [ATBackgroundColor24None]::new()
        $this.ColorMap[385] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[386] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[387] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[388] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[389] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[390] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[391] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[392] = [ATBackgroundColor24None]::new()
        $this.ColorMap[393] = [ATBackgroundColor24None]::new()
        $this.ColorMap[394] = [ATBackgroundColor24None]::new()
        $this.ColorMap[395] = [ATBackgroundColor24None]::new()
        $this.ColorMap[396] = [CCAppleVRedLight24]::new()
        $this.ColorMap[397] = [CCAppleVRedLight24]::new()
        $this.ColorMap[398] = [CCAppleVRedLight24]::new()
        $this.ColorMap[399] = [ATBackgroundColor24None]::new()
        $this.ColorMap[400] = [ATBackgroundColor24None]::new()
        $this.ColorMap[401] = [CCAppleVRedLight24]::new()
        $this.ColorMap[402] = [CCAppleVRedLight24]::new()
        $this.ColorMap[403] = [CCAppleVRedLight24]::new()
        $this.ColorMap[404] = [CCAppleVRedLight24]::new()
        $this.ColorMap[405] = [ATBackgroundColor24None]::new()
        $this.ColorMap[406] = [ATBackgroundColor24None]::new() # End Row 10
        $this.ColorMap[407] = [ATBackgroundColor24None]::new()
        $this.ColorMap[408] = [ATBackgroundColor24None]::new()
        $this.ColorMap[409] = [CCAppleVRedLight24]::new()
        $this.ColorMap[410] = [CCAppleVRedLight24]::new()
        $this.ColorMap[411] = [ATBackgroundColor24None]::new()
        $this.ColorMap[412] = [ATBackgroundColor24None]::new()
        $this.ColorMap[413] = [ATBackgroundColor24None]::new()
        $this.ColorMap[414] = [ATBackgroundColor24None]::new()
        $this.ColorMap[415] = [ATBackgroundColor24None]::new()
        $this.ColorMap[416] = [CCAppleVRedLight24]::new()
        $this.ColorMap[417] = [ATBackgroundColor24None]::new()
        $this.ColorMap[418] = [ATBackgroundColor24None]::new()
        $this.ColorMap[419] = [ATBackgroundColor24None]::new()
        $this.ColorMap[420] = [CCAppleVRedALight24]::new()
        $this.ColorMap[421] = [ATBackgroundColor24None]::new()
        $this.ColorMap[422] = [ATBackgroundColor24None]::new()
        $this.ColorMap[423] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[424] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[425] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[426] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[427] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[428] = [ATBackgroundColor24None]::new()
        $this.ColorMap[429] = [ATBackgroundColor24None]::new()
        $this.ColorMap[430] = [CCAppleVRedALight24]::new()
        $this.ColorMap[431] = [ATBackgroundColor24None]::new()
        $this.ColorMap[432] = [ATBackgroundColor24None]::new()
        $this.ColorMap[433] = [ATBackgroundColor24None]::new()
        $this.ColorMap[434] = [CCAppleVRedLight24]::new()
        $this.ColorMap[435] = [ATBackgroundColor24None]::new()
        $this.ColorMap[436] = [ATBackgroundColor24None]::new()
        $this.ColorMap[437] = [ATBackgroundColor24None]::new()
        $this.ColorMap[438] = [ATBackgroundColor24None]::new()
        $this.ColorMap[439] = [ATBackgroundColor24None]::new()
        $this.ColorMap[440] = [CCAppleVRedLight24]::new()
        $this.ColorMap[441] = [CCAppleVRedLight24]::new()
        $this.ColorMap[442] = [ATBackgroundColor24None]::new()
        $this.ColorMap[443] = [ATBackgroundColor24None]::new() # End Row 11
        $this.ColorMap[444] = [ATBackgroundColor24None]::new()
        $this.ColorMap[445] = [ATBackgroundColor24None]::new()
        $this.ColorMap[446] = [CCAppleVRedLight24]::new()
        $this.ColorMap[447] = [ATBackgroundColor24None]::new()
        $this.ColorMap[448] = [ATBackgroundColor24None]::new()
        $this.ColorMap[449] = [ATBackgroundColor24None]::new()
        $this.ColorMap[450] = [ATBackgroundColor24None]::new()
        $this.ColorMap[451] = [ATBackgroundColor24None]::new()
        $this.ColorMap[452] = [ATBackgroundColor24None]::new()
        $this.ColorMap[453] = [ATBackgroundColor24None]::new()
        $this.ColorMap[454] = [ATBackgroundColor24None]::new()
        $this.ColorMap[455] = [ATBackgroundColor24None]::new()
        $this.ColorMap[456] = [ATBackgroundColor24None]::new()
        $this.ColorMap[457] = [ATBackgroundColor24None]::new()
        $this.ColorMap[458] = [CCAppleVRedALight24]::new()
        $this.ColorMap[459] = [CCAppleVRedALight24]::new()
        $this.ColorMap[460] = [ATBackgroundColor24None]::new()
        $this.ColorMap[461] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[462] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[463] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[464] = [ATBackgroundColor24None]::new()
        $this.ColorMap[465] = [CCAppleVRedALight24]::new()
        $this.ColorMap[466] = [CCAppleVRedALight24]::new()
        $this.ColorMap[467] = [ATBackgroundColor24None]::new()
        $this.ColorMap[468] = [ATBackgroundColor24None]::new()
        $this.ColorMap[469] = [ATBackgroundColor24None]::new()
        $this.ColorMap[470] = [ATBackgroundColor24None]::new()
        $this.ColorMap[471] = [ATBackgroundColor24None]::new()
        $this.ColorMap[472] = [ATBackgroundColor24None]::new()
        $this.ColorMap[473] = [ATBackgroundColor24None]::new()
        $this.ColorMap[474] = [ATBackgroundColor24None]::new()
        $this.ColorMap[475] = [ATBackgroundColor24None]::new()
        $this.ColorMap[476] = [ATBackgroundColor24None]::new()
        $this.ColorMap[477] = [ATBackgroundColor24None]::new()
        $this.ColorMap[478] = [CCAppleVRedLight24]::new()
        $this.ColorMap[479] = [ATBackgroundColor24None]::new()
        $this.ColorMap[480] = [ATBackgroundColor24None]::new() # End Row 12
        $this.ColorMap[481] = [ATBackgroundColor24None]::new()
        $this.ColorMap[482] = [ATBackgroundColor24None]::new()
        $this.ColorMap[483] = [ATBackgroundColor24None]::new()
        $this.ColorMap[484] = [ATBackgroundColor24None]::new()
        $this.ColorMap[485] = [ATBackgroundColor24None]::new()
        $this.ColorMap[486] = [ATBackgroundColor24None]::new()
        $this.ColorMap[487] = [ATBackgroundColor24None]::new()
        $this.ColorMap[488] = [ATBackgroundColor24None]::new()
        $this.ColorMap[489] = [ATBackgroundColor24None]::new()
        $this.ColorMap[490] = [ATBackgroundColor24None]::new()
        $this.ColorMap[491] = [ATBackgroundColor24None]::new()
        $this.ColorMap[492] = [ATBackgroundColor24None]::new()
        $this.ColorMap[493] = [ATBackgroundColor24None]::new()
        $this.ColorMap[494] = [CCAppleVRedALight24]::new()
        $this.ColorMap[495] = [ATBackgroundColor24None]::new()
        $this.ColorMap[496] = [ATBackgroundColor24None]::new()
        $this.ColorMap[497] = [ATBackgroundColor24None]::new()
        $this.ColorMap[498] = [ATBackgroundColor24None]::new()
        $this.ColorMap[499] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[500] = [ATBackgroundColor24None]::new()
        $this.ColorMap[501] = [ATBackgroundColor24None]::new()
        $this.ColorMap[502] = [ATBackgroundColor24None]::new()
        $this.ColorMap[503] = [ATBackgroundColor24None]::new()
        $this.ColorMap[504] = [CCAppleVRedALight24]::new()
        $this.ColorMap[505] = [ATBackgroundColor24None]::new()
        $this.ColorMap[506] = [ATBackgroundColor24None]::new()
        $this.ColorMap[507] = [ATBackgroundColor24None]::new()
        $this.ColorMap[508] = [ATBackgroundColor24None]::new()
        $this.ColorMap[509] = [ATBackgroundColor24None]::new()
        $this.ColorMap[510] = [ATBackgroundColor24None]::new()
        $this.ColorMap[511] = [ATBackgroundColor24None]::new()
        $this.ColorMap[512] = [ATBackgroundColor24None]::new()
        $this.ColorMap[513] = [ATBackgroundColor24None]::new()
        $this.ColorMap[514] = [ATBackgroundColor24None]::new()
        $this.ColorMap[515] = [ATBackgroundColor24None]::new()
        $this.ColorMap[516] = [ATBackgroundColor24None]::new()
        $this.ColorMap[517] = [ATBackgroundColor24None]::new() # End Row 13
        $this.ColorMap[518] = [ATBackgroundColor24None]::new()
        $this.ColorMap[519] = [ATBackgroundColor24None]::new()
        $this.ColorMap[520] = [ATBackgroundColor24None]::new()
        $this.ColorMap[521] = [ATBackgroundColor24None]::new()
        $this.ColorMap[522] = [ATBackgroundColor24None]::new()
        $this.ColorMap[523] = [ATBackgroundColor24None]::new()
        $this.ColorMap[524] = [ATBackgroundColor24None]::new()
        $this.ColorMap[525] = [ATBackgroundColor24None]::new()
        $this.ColorMap[526] = [ATBackgroundColor24None]::new()
        $this.ColorMap[527] = [ATBackgroundColor24None]::new()
        $this.ColorMap[528] = [ATBackgroundColor24None]::new()
        $this.ColorMap[529] = [ATBackgroundColor24None]::new()
        $this.ColorMap[530] = [ATBackgroundColor24None]::new()
        $this.ColorMap[531] = [ATBackgroundColor24None]::new()
        $this.ColorMap[532] = [ATBackgroundColor24None]::new()
        $this.ColorMap[533] = [ATBackgroundColor24None]::new()
        $this.ColorMap[534] = [ATBackgroundColor24None]::new()
        $this.ColorMap[535] = [ATBackgroundColor24None]::new()
        $this.ColorMap[536] = [ATBackgroundColor24None]::new()
        $this.ColorMap[537] = [ATBackgroundColor24None]::new()
        $this.ColorMap[538] = [ATBackgroundColor24None]::new()
        $this.ColorMap[539] = [ATBackgroundColor24None]::new()
        $this.ColorMap[540] = [ATBackgroundColor24None]::new()
        $this.ColorMap[541] = [ATBackgroundColor24None]::new()
        $this.ColorMap[542] = [ATBackgroundColor24None]::new()
        $this.ColorMap[543] = [ATBackgroundColor24None]::new()
        $this.ColorMap[544] = [ATBackgroundColor24None]::new()
        $this.ColorMap[545] = [ATBackgroundColor24None]::new()
        $this.ColorMap[546] = [ATBackgroundColor24None]::new()
        $this.ColorMap[547] = [ATBackgroundColor24None]::new()
        $this.ColorMap[548] = [ATBackgroundColor24None]::new()
        $this.ColorMap[549] = [ATBackgroundColor24None]::new()
        $this.ColorMap[550] = [ATBackgroundColor24None]::new()
        $this.ColorMap[551] = [ATBackgroundColor24None]::new()
        $this.ColorMap[552] = [ATBackgroundColor24None]::new()
        $this.ColorMap[553] = [ATBackgroundColor24None]::new()
        $this.ColorMap[554] = [ATBackgroundColor24None]::new() # End Row 14

        $this.CreateImageATString($this.ColorMap)
        $this.ColorMap = $null
    }
}

Class EEIDuskbane : EEIInternalBase {
    EEIDuskbane() : base() {
        $this.ColorMap[0]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[1]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[2]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[3]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[4]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[5]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[6]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[7]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[8]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[9]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[10]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[11]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[12]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[13]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[14]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[15]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[16]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[17]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[18]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[19]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[20]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[21]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[22]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[23]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[24]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[25]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[26]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[27]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[28]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[29]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[30]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[31]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[32]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[33]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[34]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[35]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[36]  = [ATBackgroundColor24None]::new() # End Row 0
        $this.ColorMap[37]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[38]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[39]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[40]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[41]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[42]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[43]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[44]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[45]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[46]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[47]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[48]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[49]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[50]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[51]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[52]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[53]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[54]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[55]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[56]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[57]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[58]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[59]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[60]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[61]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[62]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[63]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[64]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[65]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[66]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[67]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[68]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[69]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[70]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[71]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[72]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[73]  = [ATBackgroundColor24None]::new() # End Row 1
        $this.ColorMap[74]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[75]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[76]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[77]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[78]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[79]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[80]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[81]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[82]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[83]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[84]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[85]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[86]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[87]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[88]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[89]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[90]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[91]  = [CCAppleVYellowADark24]::new()
        $this.ColorMap[92]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[93]  = [CCAppleVYellowADark24]::new()
        $this.ColorMap[94]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[95]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[96]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[97]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[98]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[99]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[100] = [ATBackgroundColor24None]::new()
        $this.ColorMap[101] = [ATBackgroundColor24None]::new()
        $this.ColorMap[102] = [ATBackgroundColor24None]::new()
        $this.ColorMap[103] = [ATBackgroundColor24None]::new()
        $this.ColorMap[104] = [ATBackgroundColor24None]::new()
        $this.ColorMap[105] = [ATBackgroundColor24None]::new()
        $this.ColorMap[106] = [ATBackgroundColor24None]::new()
        $this.ColorMap[107] = [ATBackgroundColor24None]::new()
        $this.ColorMap[108] = [ATBackgroundColor24None]::new()
        $this.ColorMap[109] = [ATBackgroundColor24None]::new()
        $this.ColorMap[110] = [ATBackgroundColor24None]::new() # End Row 2
        $this.ColorMap[111] = [ATBackgroundColor24None]::new()
        $this.ColorMap[112] = [ATBackgroundColor24None]::new()
        $this.ColorMap[113] = [ATBackgroundColor24None]::new()
        $this.ColorMap[114] = [ATBackgroundColor24None]::new()
        $this.ColorMap[115] = [ATBackgroundColor24None]::new()
        $this.ColorMap[116] = [CCAppleVRedLight24]::new()
        $this.ColorMap[117] = [CCAppleVRedLight24]::new()
        $this.ColorMap[118] = [ATBackgroundColor24None]::new()
        $this.ColorMap[119] = [ATBackgroundColor24None]::new()
        $this.ColorMap[120] = [ATBackgroundColor24None]::new()
        $this.ColorMap[121] = [ATBackgroundColor24None]::new()
        $this.ColorMap[122] = [CCAppleVRedLight24]::new()
        $this.ColorMap[123] = [CCAppleVRedLight24]::new()
        $this.ColorMap[124] = [ATBackgroundColor24None]::new()
        $this.ColorMap[125] = [ATBackgroundColor24None]::new()
        $this.ColorMap[126] = [ATBackgroundColor24None]::new()
        $this.ColorMap[127] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[128] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[129] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[130] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[131] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[132] = [ATBackgroundColor24None]::new()
        $this.ColorMap[133] = [ATBackgroundColor24None]::new()
        $this.ColorMap[134] = [ATBackgroundColor24None]::new()
        $this.ColorMap[135] = [CCAppleVRedLight24]::new()
        $this.ColorMap[136] = [CCAppleVRedLight24]::new()
        $this.ColorMap[137] = [ATBackgroundColor24None]::new()
        $this.ColorMap[138] = [ATBackgroundColor24None]::new()
        $this.ColorMap[139] = [ATBackgroundColor24None]::new()
        $this.ColorMap[140] = [ATBackgroundColor24None]::new()
        $this.ColorMap[141] = [CCAppleVRedLight24]::new()
        $this.ColorMap[142] = [CCAppleVRedLight24]::new()
        $this.ColorMap[143] = [ATBackgroundColor24None]::new()
        $this.ColorMap[144] = [ATBackgroundColor24None]::new()
        $this.ColorMap[145] = [ATBackgroundColor24None]::new()
        $this.ColorMap[146] = [ATBackgroundColor24None]::new()
        $this.ColorMap[147] = [ATBackgroundColor24None]::new() # End Row 3
        $this.ColorMap[148] = [ATBackgroundColor24None]::new()
        $this.ColorMap[149] = [ATBackgroundColor24None]::new()
        $this.ColorMap[150] = [ATBackgroundColor24None]::new()
        $this.ColorMap[151] = [ATBackgroundColor24None]::new()
        $this.ColorMap[152] = [CCAppleVRedLight24]::new()
        $this.ColorMap[153] = [CCAppleVRedLight24]::new()
        $this.ColorMap[154] = [CCAppleVRedLight24]::new()
        $this.ColorMap[155] = [CCAppleVRedLight24]::new()
        $this.ColorMap[156] = [CCAppleVRedLight24]::new()
        $this.ColorMap[157] = [ATBackgroundColor24None]::new()
        $this.ColorMap[158] = [CCAppleVRedLight24]::new()
        $this.ColorMap[159] = [CCAppleVRedLight24]::new()
        $this.ColorMap[160] = [CCAppleVRedLight24]::new()
        $this.ColorMap[161] = [CCAppleVRedLight24]::new()
        $this.ColorMap[162] = [CCAppleVRedLight24]::new()
        $this.ColorMap[163] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[164] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[165] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[166] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[167] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[168] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[169] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[170] = [CCAppleVRedLight24]::new()
        $this.ColorMap[171] = [CCAppleVRedLight24]::new()
        $this.ColorMap[172] = [CCAppleVRedLight24]::new()
        $this.ColorMap[173] = [CCAppleVRedLight24]::new()
        $this.ColorMap[174] = [CCAppleVRedLight24]::new()
        $this.ColorMap[175] = [ATBackgroundColor24None]::new()
        $this.ColorMap[176] = [CCAppleVRedLight24]::new()
        $this.ColorMap[177] = [CCAppleVRedLight24]::new()
        $this.ColorMap[178] = [CCAppleVRedLight24]::new()
        $this.ColorMap[179] = [CCAppleVRedLight24]::new()
        $this.ColorMap[180] = [CCAppleVRedLight24]::new()
        $this.ColorMap[181] = [ATBackgroundColor24None]::new()
        $this.ColorMap[182] = [ATBackgroundColor24None]::new()
        $this.ColorMap[183] = [ATBackgroundColor24None]::new()
        $this.ColorMap[184] = [ATBackgroundColor24None]::new() # End Row 4
        $this.ColorMap[185] = [ATBackgroundColor24None]::new()
        $this.ColorMap[186] = [ATBackgroundColor24None]::new()
        $this.ColorMap[187] = [ATBackgroundColor24None]::new()
        $this.ColorMap[188] = [ATBackgroundColor24None]::new()
        $this.ColorMap[189] = [CCAppleVRedLight24]::new()
        $this.ColorMap[190] = [CCAppleVRedLight24]::new()
        $this.ColorMap[191] = [CCAppleVRedLight24]::new()
        $this.ColorMap[192] = [CCAppleVRedLight24]::new()
        $this.ColorMap[193] = [CCAppleVRedLight24]::new()
        $this.ColorMap[194] = [CCAppleVRedLight24]::new()
        $this.ColorMap[195] = [CCAppleVRedLight24]::new()
        $this.ColorMap[196] = [CCAppleVRedLight24]::new()
        $this.ColorMap[197] = [CCAppleVRedLight24]::new()
        $this.ColorMap[198] = [CCAppleVRedLight24]::new()
        $this.ColorMap[199] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[200] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[201] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[202] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[203] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[204] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[205] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[206] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[207] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[208] = [CCAppleVRedLight24]::new()
        $this.ColorMap[209] = [CCAppleVRedLight24]::new()
        $this.ColorMap[210] = [CCAppleVRedLight24]::new()
        $this.ColorMap[211] = [CCAppleVRedLight24]::new()
        $this.ColorMap[212] = [CCAppleVRedLight24]::new()
        $this.ColorMap[213] = [CCAppleVRedLight24]::new()
        $this.ColorMap[214] = [CCAppleVRedLight24]::new()
        $this.ColorMap[215] = [CCAppleVRedLight24]::new()
        $this.ColorMap[216] = [CCAppleVRedLight24]::new()
        $this.ColorMap[217] = [CCAppleVRedLight24]::new()
        $this.ColorMap[218] = [ATBackgroundColor24None]::new()
        $this.ColorMap[219] = [ATBackgroundColor24None]::new()
        $this.ColorMap[220] = [ATBackgroundColor24None]::new()
        $this.ColorMap[221] = [ATBackgroundColor24None]::new() # End Row 5
        $this.ColorMap[222] = [ATBackgroundColor24None]::new()
        $this.ColorMap[223] = [ATBackgroundColor24None]::new()
        $this.ColorMap[224] = [ATBackgroundColor24None]::new()
        $this.ColorMap[225] = [CCAppleVRedLight24]::new()
        $this.ColorMap[226] = [CCAppleVRedLight24]::new()
        $this.ColorMap[227] = [CCAppleVRedLight24]::new()
        $this.ColorMap[228] = [CCAppleVRedLight24]::new()
        $this.ColorMap[229] = [CCAppleVRedLight24]::new()
        $this.ColorMap[230] = [CCAppleVRedLight24]::new()
        $this.ColorMap[231] = [CCAppleVRedLight24]::new()
        $this.ColorMap[232] = [CCAppleVRedLight24]::new()
        $this.ColorMap[233] = [CCAppleVRedLight24]::new()
        $this.ColorMap[234] = [CCAppleVRedLight24]::new()
        $this.ColorMap[235] = [CCAppleVRedLight24]::new()
        $this.ColorMap[236] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[237] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[238] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[239] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[240] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[241] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[242] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[243] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[244] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[245] = [CCAppleVRedLight24]::new()
        $this.ColorMap[246] = [CCAppleVRedLight24]::new()
        $this.ColorMap[247] = [CCAppleVRedLight24]::new()
        $this.ColorMap[248] = [CCAppleVRedLight24]::new()
        $this.ColorMap[249] = [CCAppleVRedLight24]::new()
        $this.ColorMap[250] = [CCAppleVRedLight24]::new()
        $this.ColorMap[251] = [CCAppleVRedLight24]::new()
        $this.ColorMap[252] = [CCAppleVRedLight24]::new()
        $this.ColorMap[253] = [CCAppleVRedLight24]::new()
        $this.ColorMap[254] = [CCAppleVRedLight24]::new()
        $this.ColorMap[255] = [CCAppleVRedLight24]::new()
        $this.ColorMap[256] = [ATBackgroundColor24None]::new()
        $this.ColorMap[257] = [ATBackgroundColor24None]::new()
        $this.ColorMap[258] = [ATBackgroundColor24None]::new() # End Row 6
        $this.ColorMap[259] = [ATBackgroundColor24None]::new()
        $this.ColorMap[260] = [ATBackgroundColor24None]::new()
        $this.ColorMap[261] = [ATBackgroundColor24None]::new()
        $this.ColorMap[262] = [CCAppleVRedLight24]::new()
        $this.ColorMap[263] = [CCAppleVRedLight24]::new()
        $this.ColorMap[264] = [CCAppleVRedLight24]::new()
        $this.ColorMap[265] = [CCAppleVRedLight24]::new()
        $this.ColorMap[266] = [CCAppleVRedLight24]::new()
        $this.ColorMap[267] = [CCAppleVRedLight24]::new()
        $this.ColorMap[268] = [CCAppleVRedLight24]::new()
        $this.ColorMap[269] = [CCAppleVRedLight24]::new()
        $this.ColorMap[270] = [CCAppleVRedLight24]::new()
        $this.ColorMap[271] = [CCAppleVRedLight24]::new()
        $this.ColorMap[272] = [CCAppleVRedLight24]::new()
        $this.ColorMap[273] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[274] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[275] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[276] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[277] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[278] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[279] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[280] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[281] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[282] = [CCAppleVRedLight24]::new()
        $this.ColorMap[283] = [CCAppleVRedLight24]::new()
        $this.ColorMap[284] = [CCAppleVRedLight24]::new()
        $this.ColorMap[285] = [CCAppleVRedLight24]::new()
        $this.ColorMap[286] = [CCAppleVRedLight24]::new()
        $this.ColorMap[287] = [CCAppleVRedLight24]::new()
        $this.ColorMap[288] = [CCAppleVRedLight24]::new()
        $this.ColorMap[289] = [CCAppleVRedLight24]::new()
        $this.ColorMap[290] = [CCAppleVRedLight24]::new()
        $this.ColorMap[291] = [CCAppleVRedLight24]::new()
        $this.ColorMap[292] = [CCAppleVRedLight24]::new()
        $this.ColorMap[293] = [ATBackgroundColor24None]::new()
        $this.ColorMap[294] = [ATBackgroundColor24None]::new()
        $this.ColorMap[295] = [ATBackgroundColor24None]::new() # End Row 7
        $this.ColorMap[296] = [ATBackgroundColor24None]::new()
        $this.ColorMap[297] = [ATBackgroundColor24None]::new()
        $this.ColorMap[298] = [ATBackgroundColor24None]::new()
        $this.ColorMap[299] = [CCAppleVRedLight24]::new()
        $this.ColorMap[300] = [CCAppleVRedLight24]::new()
        $this.ColorMap[301] = [CCAppleVRedLight24]::new()
        $this.ColorMap[302] = [CCAppleVRedLight24]::new()
        $this.ColorMap[303] = [CCAppleVRedLight24]::new()
        $this.ColorMap[304] = [CCAppleVRedLight24]::new()
        $this.ColorMap[305] = [CCAppleVRedLight24]::new()
        $this.ColorMap[306] = [CCAppleVRedLight24]::new()
        $this.ColorMap[307] = [CCAppleVRedLight24]::new()
        $this.ColorMap[308] = [CCAppleVRedLight24]::new()
        $this.ColorMap[309] = [CCAppleVRedLight24]::new()
        $this.ColorMap[310] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[311] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[312] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[313] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[314] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[315] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[316] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[317] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[318] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[319] = [CCAppleVRedLight24]::new()
        $this.ColorMap[320] = [CCAppleVRedLight24]::new()
        $this.ColorMap[321] = [CCAppleVRedLight24]::new()
        $this.ColorMap[322] = [CCAppleVRedLight24]::new()
        $this.ColorMap[323] = [CCAppleVRedLight24]::new()
        $this.ColorMap[324] = [CCAppleVRedLight24]::new()
        $this.ColorMap[325] = [CCAppleVRedLight24]::new()
        $this.ColorMap[326] = [CCAppleVRedLight24]::new()
        $this.ColorMap[327] = [CCAppleVRedLight24]::new()
        $this.ColorMap[328] = [CCAppleVRedLight24]::new()
        $this.ColorMap[329] = [CCAppleVRedLight24]::new()
        $this.ColorMap[330] = [ATBackgroundColor24None]::new()
        $this.ColorMap[331] = [ATBackgroundColor24None]::new()
        $this.ColorMap[332] = [ATBackgroundColor24None]::new() # End Row 8
        $this.ColorMap[333] = [ATBackgroundColor24None]::new()
        $this.ColorMap[334] = [ATBackgroundColor24None]::new()
        $this.ColorMap[335] = [CCAppleVRedLight24]::new()
        $this.ColorMap[336] = [CCAppleVRedLight24]::new()
        $this.ColorMap[337] = [CCAppleVRedLight24]::new()
        $this.ColorMap[338] = [CCAppleVRedLight24]::new()
        $this.ColorMap[339] = [CCAppleVRedLight24]::new()
        $this.ColorMap[340] = [CCAppleVRedLight24]::new()
        $this.ColorMap[341] = [CCAppleVRedLight24]::new()
        $this.ColorMap[342] = [CCAppleVRedLight24]::new()
        $this.ColorMap[343] = [CCAppleVRedLight24]::new()
        $this.ColorMap[344] = [CCAppleVRedLight24]::new()
        $this.ColorMap[345] = [ATBackgroundColor24None]::new()
        $this.ColorMap[346] = [ATBackgroundColor24None]::new()
        $this.ColorMap[347] = [CCAppleVRedLight24]::new()
        $this.ColorMap[348] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[349] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[350] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[351] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[352] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[353] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[354] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[355] = [CCAppleVRedLight24]::new()
        $this.ColorMap[356] = [ATBackgroundColor24None]::new()
        $this.ColorMap[357] = [ATBackgroundColor24None]::new()
        $this.ColorMap[358] = [CCAppleVRedLight24]::new()
        $this.ColorMap[359] = [CCAppleVRedLight24]::new()
        $this.ColorMap[360] = [CCAppleVRedLight24]::new()
        $this.ColorMap[361] = [CCAppleVRedLight24]::new()
        $this.ColorMap[362] = [CCAppleVRedLight24]::new()
        $this.ColorMap[363] = [CCAppleVRedLight24]::new()
        $this.ColorMap[364] = [CCAppleVRedLight24]::new()
        $this.ColorMap[365] = [CCAppleVRedLight24]::new()
        $this.ColorMap[366] = [CCAppleVRedLight24]::new()
        $this.ColorMap[367] = [CCAppleVRedLight24]::new()
        $this.ColorMap[368] = [ATBackgroundColor24None]::new()
        $this.ColorMap[369] = [ATBackgroundColor24None]::new() # End Row 9
        $this.ColorMap[370] = [ATBackgroundColor24None]::new()
        $this.ColorMap[371] = [ATBackgroundColor24None]::new()
        $this.ColorMap[372] = [CCAppleVRedLight24]::new()
        $this.ColorMap[373] = [CCAppleVRedLight24]::new()
        $this.ColorMap[374] = [CCAppleVRedLight24]::new()
        $this.ColorMap[375] = [CCAppleVRedLight24]::new()
        $this.ColorMap[376] = [ATBackgroundColor24None]::new()
        $this.ColorMap[377] = [ATBackgroundColor24None]::new()
        $this.ColorMap[378] = [CCAppleVRedLight24]::new()
        $this.ColorMap[379] = [CCAppleVRedLight24]::new()
        $this.ColorMap[380] = [CCAppleVRedLight24]::new()
        $this.ColorMap[381] = [ATBackgroundColor24None]::new()
        $this.ColorMap[382] = [ATBackgroundColor24None]::new()
        $this.ColorMap[383] = [ATBackgroundColor24None]::new()
        $this.ColorMap[384] = [ATBackgroundColor24None]::new()
        $this.ColorMap[385] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[386] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[387] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[388] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[389] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[390] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[391] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[392] = [ATBackgroundColor24None]::new()
        $this.ColorMap[393] = [ATBackgroundColor24None]::new()
        $this.ColorMap[394] = [ATBackgroundColor24None]::new()
        $this.ColorMap[395] = [ATBackgroundColor24None]::new()
        $this.ColorMap[396] = [CCAppleVRedLight24]::new()
        $this.ColorMap[397] = [CCAppleVRedLight24]::new()
        $this.ColorMap[398] = [CCAppleVRedLight24]::new()
        $this.ColorMap[399] = [ATBackgroundColor24None]::new()
        $this.ColorMap[400] = [ATBackgroundColor24None]::new()
        $this.ColorMap[401] = [CCAppleVRedLight24]::new()
        $this.ColorMap[402] = [CCAppleVRedLight24]::new()
        $this.ColorMap[403] = [CCAppleVRedLight24]::new()
        $this.ColorMap[404] = [CCAppleVRedLight24]::new()
        $this.ColorMap[405] = [ATBackgroundColor24None]::new()
        $this.ColorMap[406] = [ATBackgroundColor24None]::new() # End Row 10
        $this.ColorMap[407] = [ATBackgroundColor24None]::new()
        $this.ColorMap[408] = [ATBackgroundColor24None]::new()
        $this.ColorMap[409] = [CCAppleVRedLight24]::new()
        $this.ColorMap[410] = [CCAppleVRedLight24]::new()
        $this.ColorMap[411] = [ATBackgroundColor24None]::new()
        $this.ColorMap[412] = [ATBackgroundColor24None]::new()
        $this.ColorMap[413] = [ATBackgroundColor24None]::new()
        $this.ColorMap[414] = [ATBackgroundColor24None]::new()
        $this.ColorMap[415] = [ATBackgroundColor24None]::new()
        $this.ColorMap[416] = [CCAppleVRedLight24]::new()
        $this.ColorMap[417] = [ATBackgroundColor24None]::new()
        $this.ColorMap[418] = [ATBackgroundColor24None]::new()
        $this.ColorMap[419] = [ATBackgroundColor24None]::new()
        $this.ColorMap[420] = [CCAppleVRedALight24]::new()
        $this.ColorMap[421] = [ATBackgroundColor24None]::new()
        $this.ColorMap[422] = [ATBackgroundColor24None]::new()
        $this.ColorMap[423] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[424] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[425] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[426] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[427] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[428] = [ATBackgroundColor24None]::new()
        $this.ColorMap[429] = [ATBackgroundColor24None]::new()
        $this.ColorMap[430] = [CCAppleVRedALight24]::new()
        $this.ColorMap[431] = [ATBackgroundColor24None]::new()
        $this.ColorMap[432] = [ATBackgroundColor24None]::new()
        $this.ColorMap[433] = [ATBackgroundColor24None]::new()
        $this.ColorMap[434] = [CCAppleVRedLight24]::new()
        $this.ColorMap[435] = [ATBackgroundColor24None]::new()
        $this.ColorMap[436] = [ATBackgroundColor24None]::new()
        $this.ColorMap[437] = [ATBackgroundColor24None]::new()
        $this.ColorMap[438] = [ATBackgroundColor24None]::new()
        $this.ColorMap[439] = [ATBackgroundColor24None]::new()
        $this.ColorMap[440] = [CCAppleVRedLight24]::new()
        $this.ColorMap[441] = [CCAppleVRedLight24]::new()
        $this.ColorMap[442] = [ATBackgroundColor24None]::new()
        $this.ColorMap[443] = [ATBackgroundColor24None]::new() # End Row 11
        $this.ColorMap[444] = [ATBackgroundColor24None]::new()
        $this.ColorMap[445] = [ATBackgroundColor24None]::new()
        $this.ColorMap[446] = [CCAppleVRedLight24]::new()
        $this.ColorMap[447] = [ATBackgroundColor24None]::new()
        $this.ColorMap[448] = [ATBackgroundColor24None]::new()
        $this.ColorMap[449] = [ATBackgroundColor24None]::new()
        $this.ColorMap[450] = [ATBackgroundColor24None]::new()
        $this.ColorMap[451] = [ATBackgroundColor24None]::new()
        $this.ColorMap[452] = [ATBackgroundColor24None]::new()
        $this.ColorMap[453] = [ATBackgroundColor24None]::new()
        $this.ColorMap[454] = [ATBackgroundColor24None]::new()
        $this.ColorMap[455] = [ATBackgroundColor24None]::new()
        $this.ColorMap[456] = [ATBackgroundColor24None]::new()
        $this.ColorMap[457] = [ATBackgroundColor24None]::new()
        $this.ColorMap[458] = [CCAppleVRedALight24]::new()
        $this.ColorMap[459] = [CCAppleVRedALight24]::new()
        $this.ColorMap[460] = [ATBackgroundColor24None]::new()
        $this.ColorMap[461] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[462] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[463] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[464] = [ATBackgroundColor24None]::new()
        $this.ColorMap[465] = [CCAppleVRedALight24]::new()
        $this.ColorMap[466] = [CCAppleVRedALight24]::new()
        $this.ColorMap[467] = [ATBackgroundColor24None]::new()
        $this.ColorMap[468] = [ATBackgroundColor24None]::new()
        $this.ColorMap[469] = [ATBackgroundColor24None]::new()
        $this.ColorMap[470] = [ATBackgroundColor24None]::new()
        $this.ColorMap[471] = [ATBackgroundColor24None]::new()
        $this.ColorMap[472] = [ATBackgroundColor24None]::new()
        $this.ColorMap[473] = [ATBackgroundColor24None]::new()
        $this.ColorMap[474] = [ATBackgroundColor24None]::new()
        $this.ColorMap[475] = [ATBackgroundColor24None]::new()
        $this.ColorMap[476] = [ATBackgroundColor24None]::new()
        $this.ColorMap[477] = [ATBackgroundColor24None]::new()
        $this.ColorMap[478] = [CCAppleVRedLight24]::new()
        $this.ColorMap[479] = [ATBackgroundColor24None]::new()
        $this.ColorMap[480] = [ATBackgroundColor24None]::new() # End Row 12
        $this.ColorMap[481] = [ATBackgroundColor24None]::new()
        $this.ColorMap[482] = [ATBackgroundColor24None]::new()
        $this.ColorMap[483] = [ATBackgroundColor24None]::new()
        $this.ColorMap[484] = [ATBackgroundColor24None]::new()
        $this.ColorMap[485] = [ATBackgroundColor24None]::new()
        $this.ColorMap[486] = [ATBackgroundColor24None]::new()
        $this.ColorMap[487] = [ATBackgroundColor24None]::new()
        $this.ColorMap[488] = [ATBackgroundColor24None]::new()
        $this.ColorMap[489] = [ATBackgroundColor24None]::new()
        $this.ColorMap[490] = [ATBackgroundColor24None]::new()
        $this.ColorMap[491] = [ATBackgroundColor24None]::new()
        $this.ColorMap[492] = [ATBackgroundColor24None]::new()
        $this.ColorMap[493] = [ATBackgroundColor24None]::new()
        $this.ColorMap[494] = [CCAppleVRedALight24]::new()
        $this.ColorMap[495] = [ATBackgroundColor24None]::new()
        $this.ColorMap[496] = [ATBackgroundColor24None]::new()
        $this.ColorMap[497] = [ATBackgroundColor24None]::new()
        $this.ColorMap[498] = [ATBackgroundColor24None]::new()
        $this.ColorMap[499] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[500] = [ATBackgroundColor24None]::new()
        $this.ColorMap[501] = [ATBackgroundColor24None]::new()
        $this.ColorMap[502] = [ATBackgroundColor24None]::new()
        $this.ColorMap[503] = [ATBackgroundColor24None]::new()
        $this.ColorMap[504] = [CCAppleVRedALight24]::new()
        $this.ColorMap[505] = [ATBackgroundColor24None]::new()
        $this.ColorMap[506] = [ATBackgroundColor24None]::new()
        $this.ColorMap[507] = [ATBackgroundColor24None]::new()
        $this.ColorMap[508] = [ATBackgroundColor24None]::new()
        $this.ColorMap[509] = [ATBackgroundColor24None]::new()
        $this.ColorMap[510] = [ATBackgroundColor24None]::new()
        $this.ColorMap[511] = [ATBackgroundColor24None]::new()
        $this.ColorMap[512] = [ATBackgroundColor24None]::new()
        $this.ColorMap[513] = [ATBackgroundColor24None]::new()
        $this.ColorMap[514] = [ATBackgroundColor24None]::new()
        $this.ColorMap[515] = [ATBackgroundColor24None]::new()
        $this.ColorMap[516] = [ATBackgroundColor24None]::new()
        $this.ColorMap[517] = [ATBackgroundColor24None]::new() # End Row 13
        $this.ColorMap[518] = [ATBackgroundColor24None]::new()
        $this.ColorMap[519] = [ATBackgroundColor24None]::new()
        $this.ColorMap[520] = [ATBackgroundColor24None]::new()
        $this.ColorMap[521] = [ATBackgroundColor24None]::new()
        $this.ColorMap[522] = [ATBackgroundColor24None]::new()
        $this.ColorMap[523] = [ATBackgroundColor24None]::new()
        $this.ColorMap[524] = [ATBackgroundColor24None]::new()
        $this.ColorMap[525] = [ATBackgroundColor24None]::new()
        $this.ColorMap[526] = [ATBackgroundColor24None]::new()
        $this.ColorMap[527] = [ATBackgroundColor24None]::new()
        $this.ColorMap[528] = [ATBackgroundColor24None]::new()
        $this.ColorMap[529] = [ATBackgroundColor24None]::new()
        $this.ColorMap[530] = [ATBackgroundColor24None]::new()
        $this.ColorMap[531] = [ATBackgroundColor24None]::new()
        $this.ColorMap[532] = [ATBackgroundColor24None]::new()
        $this.ColorMap[533] = [ATBackgroundColor24None]::new()
        $this.ColorMap[534] = [ATBackgroundColor24None]::new()
        $this.ColorMap[535] = [ATBackgroundColor24None]::new()
        $this.ColorMap[536] = [ATBackgroundColor24None]::new()
        $this.ColorMap[537] = [ATBackgroundColor24None]::new()
        $this.ColorMap[538] = [ATBackgroundColor24None]::new()
        $this.ColorMap[539] = [ATBackgroundColor24None]::new()
        $this.ColorMap[540] = [ATBackgroundColor24None]::new()
        $this.ColorMap[541] = [ATBackgroundColor24None]::new()
        $this.ColorMap[542] = [ATBackgroundColor24None]::new()
        $this.ColorMap[543] = [ATBackgroundColor24None]::new()
        $this.ColorMap[544] = [ATBackgroundColor24None]::new()
        $this.ColorMap[545] = [ATBackgroundColor24None]::new()
        $this.ColorMap[546] = [ATBackgroundColor24None]::new()
        $this.ColorMap[547] = [ATBackgroundColor24None]::new()
        $this.ColorMap[548] = [ATBackgroundColor24None]::new()
        $this.ColorMap[549] = [ATBackgroundColor24None]::new()
        $this.ColorMap[550] = [ATBackgroundColor24None]::new()
        $this.ColorMap[551] = [ATBackgroundColor24None]::new()
        $this.ColorMap[552] = [ATBackgroundColor24None]::new()
        $this.ColorMap[553] = [ATBackgroundColor24None]::new()
        $this.ColorMap[554] = [ATBackgroundColor24None]::new() # End Row 14

        $this.CreateImageATString($this.ColorMap)
        $this.ColorMap = $null
    }
}

###############################################################################
#
# EE SPECIALIZATIONS
#
# THESE REPRESENT ACTUAL ENEMIES IN THE GAME THAT THE PLAYER COULD FIGHT 
# AGAINST. AS WITH OTHER COLLECTIONS, THE NAMES ARE SELF-DOCUMENTING.
#
###############################################################################
Class EEBat : EnemyBattleEntity {
    EEBat() : base() {
        $this.Name  = 'Bat'
        $this.Stats = @{
            [StatId]::HitPoints = [BattleEntityProperty]@{
                Base                = 500
                BasePre             = 0
                BaseAugmentValue    = 0
                Max                 = 500
                MaxPre              = 0
                MaxAugmentValue     = 0
                AugmentTurnDuration = 0
                BaseAugmentActive   = $false
                MaxAugmentActive    = $false
                State               = [StatNumberState]::Normal
                ValidateFunction    = {
                    Param(
                        [BattleEntityProperty]$Self
                    )
                    
                    Switch($Self.Base) {
                        { $_ -GT ($Self.Max * [BattleEntityProperty]::StatNumThresholdCaution) } {
                            $Self.State = [StatNumberState]::Normal
                        }
    
                        { ($_ -GT ($Self.Max * [BattleEntityProperty]::StatNumThresholdDanger)) -AND ($_ -LT ($Self.Max * [BattleEntityProperty]::StatNumThresholdCaution)) } {
                            $Self.State = [StatNumberState]::Caution
                        }
    
                        { $_ -LT ($Self.Max * [BattleEntityProperty]::StatNumThresholdDanger) } {
                            $Self.State = [StatNumberState]::Danger
                        }
                    }
                }
            }
            [StatId]::MagicPoints = [BattleEntityProperty]@{
                Base                = 50
                BasePre             = 0
                BaseAugmentValue    = 0
                Max                 = 50
                MaxPre              = 0
                MaxAugmentValue     = 0
                AugmentTurnDuration = 0
                BaseAugmentActive   = $false
                MaxAugmentActive    = $false
                State               = [StatNumberState]::Normal
                ValidateFunction    = {
                    Param(
                        [BattleEntityProperty]$Self
                    )
                    
                    Switch($Self.Base) {
                        { $_ -GT ($Self.Max * [BattleEntityProperty]::StatNumThresholdCaution) } {
                            $Self.State = [StatNumberState]::Normal
                        }
    
                        { ($_ -GT ($Self.Max * [BattleEntityProperty]::StatNumThresholdDanger)) -AND ($_ -LT ($Self.Max * [BattleEntityProperty]::StatNumThresholdCaution)) } {
                            $Self.State = [StatNumberState]::Caution
                        }
    
                        { $_ -LT ($Self.Max * [BattleEntityProperty]::StatNumThresholdDanger) } {
                            $Self.State = [StatNumberState]::Danger
                        }
                    }
                }
            }
            [StatId]::Attack = [BattleEntityProperty]@{
                Base                = 12
                BasePre             = 0
                BaseAugmentValue    = 0
                Max                 = 12
                MaxPre              = 0
                MaxAugmentValue     = 0
                AugmentTurnDuration = 0
                BaseAugmentActive   = $false
                MaxAugmentActive    = $false
                State               = [StatNumberState]::Normal
                ValidateFunction    = {
                    Param(
                        [BattleEntityProperty]$Self
                    )
                    
                    Return $Self.Base
                }
            }
            [StatId]::Defense = [BattleEntityProperty]@{
                Base                = 16
                BasePre             = 0
                BaseAugmentValue    = 0
                Max                 = 16
                MaxPre              = 0
                MaxAugmentValue     = 0
                AugmentTurnDuration = 0
                BaseAugmentActive   = $false
                MaxAugmentActive    = $false
                State               = [StatNumberState]::Normal
                ValidateFunction    = {
                    Param(
                        [BattleEntityProperty]$Self
                    )
                    
                    Return
                }
            }
            [StatId]::MagicAttack = [BattleEntityProperty]@{
                Base                = 6
                BasePre             = 0
                BaseAugmentValue    = 0
                Max                 = 6
                MaxPre              = 0
                MaxAugmentValue     = 0
                AugmentTurnDuration = 0
                BaseAugmentActive   = $false
                MaxAugmentActive    = $false
                State               = [StatNumberState]::Normal
                ValidateFunction    = {
                    Param(
                        [BattleEntityProperty]$Self
                    )
                    
                    Return
                }
            }
            [StatId]::MagicDefense = [BattleEntityProperty]@{
                Base                = 4
                BasePre             = 0
                BaseAugmentValue    = 0
                Max                 = 4
                MaxPre              = 0
                MaxAugmentValue     = 0
                AugmentTurnDuration = 0
                BaseAugmentActive   = $false
                MaxAugmentActive    = $false
                State               = [StatNumberState]::Normal
                ValidateFunction    = {
                    Param(
                        [BattleEntityProperty]$Self
                    )
                    
                    Return
                }
            }
            [StatId]::Speed = [BattleEntityProperty]@{
                Base                = 9
                BasePre             = 0
                BaseAugmentValue    = 0
                Max                 = 9
                MaxPre              = 0
                MaxAugmentValue     = 0
                AugmentTurnDuration = 0
                BaseAugmentActive   = $false
                MaxAugmentActive    = $false
                State               = [StatNumberState]::Normal
                ValidateFunction    = {
                    Param(
                        [BattleEntityProperty]$Self
                    )
                    
                    Return
                }
            }
            [StatId]::Luck = [BattleEntityProperty]@{
                Base                = 5
                BasePre             = 0
                BaseAugmentValue    = 0
                Max                 = 5
                MaxPre              = 0
                MaxAugmentValue     = 0
                AugmentTurnDuration = 0
                BaseAugmentActive   = $false
                MaxAugmentActive    = $false
                State               = [StatNumberState]::Normal
                ValidateFunction    = {
                    Param(
                        [BattleEntityProperty]$Self
                    )
                    
                    Return
                }
            }
            [StatId]::Accuracy = [BattleEntityProperty]@{
                Base                = 9
                BasePre             = 0
                BaseAugmentValue    = 0
                Max                 = 9
                MaxPre              = 0
                MaxAugmentValue     = 0
                AugmentTurnDuration = 0
                BaseAugmentActive   = $false
                MaxAugmentActive    = $false
                State               = [StatNumberState]::Normal
                ValidateFunction    = {
                    Param(
                        [BattleEntityProperty]$Self
                    )
                    
                    Return
                }
            }
        }
        $this.ActionListing = @{
            [ActionSlot]::A = [BAPunch]::new()
            [ActionSlot]::B = [BAScratch]::new()
            [ActionSlot]::C = $null
            [ActionSlot]::D = $null
        }
        $this.ActionMarbleBag = @([ActionSlot]::A, [ActionSlot]::A, [ActionSlot]::A, [ActionSlot]::A, [ActionSlot]::A, [ActionSlot]::B, [ActionSlot]::B, [ActionSlot]::B, [ActionSlot]::B, [ActionSlot]::B)
        $this.Affinity        = [BattleActionType]::ElementalIce
        $this.Image           = $Script:EeiBat
        $this.SpoilsGold      = 50
        $this.SpoilsItems     = @(
            [MTOMilk]::new()
        )
    }
}


Class EENightwing : EEBat {
    EENightwing() : base() {
        $this.Name  = 'Nightwing'
        $this.Image = [EEINightwing]::new()
    }
}

Class EEWingblight : EEBat {
    EEWingblight() : base() {
        $this.Name        = 'Wingblight'
        $this.Image       = $Script:EeiWingblight
        $this.SpoilsItems = @()
    }
}

Class EEDarkfang : EEBat {
    EEDarkfang() : base() {
        $this.Name        = 'Darkfang'
        $this.Image       = $Script:EeiDarkfang
        $this.SpoilsItems = @()
    }
}

Class EENocturna : EEBat {
    EENocturna() : base() {
        $this.Name        = 'Nocturna'
        $this.Image       = $Script:EeiNocturna
        $this.SpoilsItems = @()
    }
}

Class EEBloodswoop : EEBat {
    EEBloodswoop() : base() {
        $this.Name  = 'Bloodswoop'
        $this.Image = $Script:EeiBloodswoop
    }
}

Class EEDuskbane : EEBat {
    EEDuskbane() : base() {
        $this.Name        = 'Duskbane'
        $this.Image       = $Script:EeiDuskbane
        $this.SpoilsItems = @()
    }
}










###############################################################################
#
# S06
#
# MAP PRIMITIVE DEFINITIONS
#
# CLASSES THAT COALESCE INTO MAP FUNCTIONALITY.
#
###############################################################################

#//////////////////////////////////////////////////////////////////////////////
#
# SCENE IMAGE
#
# DEFINES AN "IMAGE" THAT'S SHOWN ON THE NAVIGATION SCREEN. THIS LOOKS A LOT
# LIKE AN ENEMY IMAGE, JUST WITH DIFFERENT DIMENSIONS. SPECIALIZATIONS OF THIS
# ARE CREATED USING A SIMILAR PATTERN AS WELL.
#
#//////////////////////////////////////////////////////////////////////////////
Class SceneImage {
    Static [Int]$Width  = 48
    Static [Int]$Height = 18

    [ATSceneImageString[,]]$Image

    SceneImage() {
        $this.Image = New-Object 'ATSceneImageString[,]' ([Int32]([SceneImage]::Height)), ([Int32]([SceneImage]::Width))
    }

    SceneImage(
        [ATSceneImageString[,]]$Image
    ) {
        $this.Image = $Image
    }

    [Void]CreateSceneImageATString([ATBackgroundColor24[]]$ImageColorMap) {
        For($r = 0; $r -LT [SceneImage]::Height; $r++) {
            For($c = 0; $c -LT [SceneImage]::Width; $c++) {
                $rf                 = ($r * [SceneImage]::Width) + $c
                $this.Image[$r, $c] = [ATSceneImageString]::new(
                    $ImageColorMap[$rf],
                    [ATCoordinates]::new(([SceneWindow]::ImageDrawRowOffset + $r), ([SceneWindow]::ImageDrawColumnOffset + $c))
                )
            }
        }
    }

    [String]ToAnsiControlSequenceString() {
        [String]$a = ''

        For($r = 0; $r -LT [SceneImage]::Height; $r++) {
            For($c = 0; $c -LT [SceneImage]::Width; $c++) {
                $a += $this.Image[$r, $c].ToAnsiControlSequenceString()
            }
        }

        Return $a
    }
}

#//////////////////////////////////////////////////////////////////////////////
#
# SI EMPTY
#
# A SYMBOLIC HOLDER FOR AN EMPTY SCENE IMAGE. THIS WOULD RARELY BE USED.
#
#//////////////////////////////////////////////////////////////////////////////
Class SIEmpty : SceneImage {
    SIEmpty() : base() {}

    [String]ToAnsiControlSequenceString() {
        Return ''
    }
}

#//////////////////////////////////////////////////////////////////////////////
#
# SI INTERNAL BASE
#
# A SPECIALIZATION OF SCENE IMAGE THAT ADDS COLOR MAP DATA.
#
#//////////////////////////////////////////////////////////////////////////////
Class SIInternalBase : SceneImage {
    [ATBackgroundColor24[]]$ColorMap

    SIInternalBase() : base() {
        $this.ColorMap = New-Object 'ATBackgroundColor24[]' ([Int32](([Int32]([SceneImage]::Width)) * ([Int32]([SceneImage]::Height))))
    }

    SIInternalBase(
        [String]$JsonConfigPath
    ) : base() {
        Write-Progress `
            -Activity 'Creating Scene Images' `
            -Id 2 `
            -CurrentOperation "Creating $([System.IO.Path]::GetFileNameWithoutExtension($JsonConfigPath))" `
            -PercentComplete (($Script:SceneImagesLoaded / $Script:SceneImagesToLoad) * 100)

        [Hashtable]$JsonData = @{}
        $this.ColorMap = New-Object 'ATBackgroundColor24[]' ([Int32](([Int32]([SceneImage]::Width)) * ([Int32]([SceneImage]::Height))))

        If($(Test-Path $JsonConfigPath) -EQ $true) {
            $JsonData = Get-Content -Raw $JsonConfigPath | ConvertFrom-Json -AsHashtable

            # THIS JSON DATA WOULD CONTAIN ONLY ONE ELEMENT CALLED COLORDATA WHICH IS A SINGLE ARRAY
            # THAT CONTAINS EITHER A STRING, WHICH WOULD BE MAPPED TO A SPECIFIC COLOR DEFINED ABOVE,
            # OR AN ARRAY OF R, G, B VALUES WHICH WOULD CREATE A CUSTOM COLOR.
            [Int]$A = 0
            Foreach($B in $JsonData['ColorData']) {
                If($B -IS [String]) {
                    [String]$C = [String]::Format("CC{0}24", $B)
                    $this.ColorMap[$A] = New-Object "$($C)"
                } Elseif($B -IS [Array]) {
                    $this.ColorMap[$A] = [ATBackgroundColor24]::new([ConsoleColor24]::new($B[0], $B[1], $B[2]))
                }
                $A++
            }

            $this.CreateSceneImageATString($this.ColorMap)
            $this.ColorMap = $null

            $Script:SceneImagesLoaded++
            Write-Progress `
                -Activity 'Creating Scene Images' `
                -Id 2 `
                -CurrentOperation "Creating $([System.IO.Path]::GetFileNameWithoutExtension($JsonConfigPath))" `
                -PercentComplete (($Script:SceneImagesLoaded / $Script:SceneImagesToLoad) * 100)
        }
    }
}

#//////////////////////////////////////////////////////////////////////////////
#
# SI RANDOM NOISE
#
# A SPECIALIZATION OF SCENE IMAGE THAT GENERATES RANDOM NOISE PER CELL.
#
#//////////////////////////////////////////////////////////////////////////////
Class SIRandomNoise : SceneImage {
    [ATBackgroundColor24[]]$ColorMap

    SIRandomNoise() : base() {
        $this.ColorMap = New-Object 'ATBackgroundColor24[]' ([Int32](([Int32]([SceneImage]::Width)) * ([Int32]([SceneImage]::Height))))
        For($a = 0; $a -LT $this.ColorMap.Count; $a++) {
            $this.ColorMap[$a] = [CCRandom24]::new()
        }
        $this.CreateSceneImageATString($this.ColorMap)
        $this.ColorMap = $null
    }
}

#//////////////////////////////////////////////////////////////////////////////
#
# SI MAP IMAGES
#
# THE FOLLOWING COLLECTION OF CLASSES ARE SCENERY "IMAGES" THAT ARE USED ON THE
# NAVIGATION SCREEN. THE NAMES ARE SELF-DOCUMENTING, AND THE PATTERN HERE IS
# THE SAME AS THE ENEMY IMAGES (HISTORICALLY, THESE WERE FIRST).
#
#//////////////////////////////////////////////////////////////////////////////
Class SIFieldNorthRoad : SIInternalBase {
    SIFieldNorthRoad() : base("$(Get-Location)\Image Data\SIFieldNorthRoadNew.json") {}
}

Class SIFieldPlainsNoRoad : SIInternalBase {
    SIFieldPlainsNoRoad() : base("$(Get-Location)\Image Data\SIFieldPlainsNoRoad.json") {}
}

Class SIFieldPlainsRoadNorth : SIInternalBase {
    SIFieldPlainsRoadNorth() : base("$(Get-Location)\Image Data\SIFieldPlainsRoadNorth.json") {}
}

Class SIFieldPlainsRoadSouth : SIInternalBase {
    SIFieldPlainsRoadSouth() : base("$(Get-Location)\Image Data\SIFieldPlainsRoadSouth.json") {}
}

Class SIFieldPlainsRoadEast : SIInternalBase {
    SIFieldPlainsRoadEast() : base("$(Get-Location)\Image Data\SIFieldPlainsRoadEast.json") {}
}

Class SIFieldPlainsRoadWest : SIInternalBase {
    SIFieldPlainsRoadWest() : base("$(Get-Location)\Image Data\SIFieldPlainsRoadWest.json") {}
}

Class SIFieldPlainsRoadEastWest : SIInternalBase {
    SIFieldPlainsRoadEastWest() : base("$(Get-Location)\Image Data\SIFieldPlainsRoadEastWest.json") {}
}

Class SIFieldPlainsRoadNorthEast : SIInternalBase {
    SIFieldPlainsRoadNorthEast() : base("$(Get-Location)\Image Data\SIFieldPlainsRoadNorthEast.json") {}
}

Class SIFieldPlainsRoadNorthWest : SIInternalBase {
    SIFieldPlainsRoadNorthWest() : base("$(Get-Location)\Image Data\SIFieldPlainsRoadNorthWest.json") {}
}

Class SIFieldPlainsRoadNorthSouth : SIInternalBase {
    SIFieldPlainsRoadNorthSouth() : base("$(Get-Location)\Image Data\SIFieldPlainsRoadNorthSouth.json") {}
}

Class SIFieldPlainsRoadNorthSouthEast : SIInternalBase {
    SIFieldPlainsRoadNorthSouthEast() : base("$(Get-Location)\Image Data\SIFieldPlainsRoadNorthSouthEast.json") {}
}

Class SIFieldPlainsRoadNorthSouthEastWest : SIInternalBase {
    SIFieldPlainsRoadNorthSouthEastWest() : base("$(Get-Location)\Image Data\SIFieldPlainsRoadNorthSouthEastWest.json") {}
}

Class SIFieldPlainsRoadNorthSouthWest : SIInternalBase {
    SIFieldPlainsRoadNorthSouthWest() : base("$(Get-Location)\Image Data\SIFieldPlainsRoadNorthSouthWest.json") {}
}

Class SIFieldNorthEastRoad : SIInternalBase {
    SIFieldNorthEastRoad() : base("$(Get-Location)\Image Data\SIFieldNorthEastRoadNew.json") {}
}

Class SIRiverRoadSample : SIInternalBase {
    SIRiverRoadSample() : base("$(Get-Location)\Image Data\SIRiverRoadSample.json") {}
}

Class SIRiverRoadEWNSSample : SIInternalBase {
    SIRiverRoadEWNSSample() : base("$(Get-Location)\Image Data\SIRiverRoadEWNSSample.json") {}
}

Class SIRiverRoadEWSSSample : SIInternalBase {
    SIRiverRoadEWSSSample() : base("$(Get-Location)\Image Data\SIRiverRoadEWSSSample.json") {}
}

Class SIRiverOnEastAtNorth : SIInternalBase {
    SIRiverOnEastAtNorth() : base("$(Get-Location)\Image Data\SIRiverOnEastAtNorth.json") {}
}

Class SIRiverOnEastAtSouth : SIInternalBase {
    SIRiverOnEastAtSouth() : base("$(Get-Location)\Image Data\SIRiverOnEastAtSouth.json") {}
}

Class SIRiverOnEastWestAtNorth : SIInternalBase {
    SIRiverOnEastWestAtNorth() : base("$(Get-Location)\Image Data\SIRiverOnEastWestAtNorth.json") {}
}

Class SIRiverOnEastWestAtNorthSouth : SIInternalBase {
    SIRiverOnEastWestAtNorthSouth() : base("$(Get-Location)\Image Data\SIRiverOnEastWestAtNorthSouth.json") {}
}

Class SIRiverOnEastWestNorthSouthAtEast : SIInternalBase {
    SIRiverOnEastWestNorthSouthAtEast() : base("$(Get-Location)\Image Data\SIRiverOnEastWestNorthSouthAtEast.json") {}
}

Class SIRiverOnEastWestNorthSouthAtEastWest : SIInternalBase {
    SIRiverOnEastWestNorthSouthAtEastWest() : base("$(Get-Location)\Image Data\SIRiverOnEastWestNorthSouthAtEastWest.json") {}
}

Class SIRiverOnEastWestNorthSouthAtEastWestSouth : SIInternalBase {
    SIRiverOnEastWestNorthSouthAtEastWestSouth() : base("$(Get-Location)\Image Data\SIRiverOnEastWestNorthSouthAtEastWestSouth.json") {}
}

Class SIRiverOnEastWestNorthSouthAtWest : SIInternalBase {
    SIRiverOnEastWestNorthSouthAtWest() : base("$(Get-Location)\Image Data\SIRiverOnEastWestNorthSouthAtWest.json") {}
}

Class SIRiverOnNorthEastAtNorth : SIInternalBase {
    SIRiverOnNorthEastAtNorth() : base("$(Get-Location)\Image Data\SIRiverOnNorthEastAtNorth.json") {}
}

Class SIRiverOnNorthSouthAtEast : SIInternalBase {
    SIRiverOnNorthSouthAtEast() : base("$(Get-Location)\Image Data\SIRiverOnNorthSouthAtEast.json") {}
}

Class SIRiverOnNorthSouthAtWest : SIInternalBase {
    SIRiverOnNorthSouthAtWest() : base("$(Get-Location)\Image Data\SIRiverOnNorthSouthAtWest.json") {}
}

Class SIRiverOnNorthSouthEastAtEast : SIInternalBase {
    SIRiverOnNorthSouthEastAtEast() : base("$(Get-Location)\Image Data\SIRiverOnNorthSouthEastAtEast.json") {}
}

Class SIRiverOnNorthSouthEastAtNorth : SIInternalBase {
    SIRiverOnNorthSouthEastAtNorth() : base("$(Get-Location)\Image Data\SIRiverOnNorthSouthEastAtNorth.json") {}
}

Class SIRiverOnSouthAtEast : SIInternalBase {
    SIRiverOnSouthAtEast() : base("$(Get-Location)\Image Data\SIRiverOnSouthAtEast.json") {}
}

Class SIRiverOnSouthEastAtSouthEast : SIInternalBase {
    SIRiverOnSouthEastAtSouthEast() : base("$(Get-Location)\Image Data\SIRiverOnSouthEastAtSouthEast.json") {}
}

Class SIRiverOnWestAtNorth : SIInternalBase {
    SIRiverOnWestAtNorth() : base("$(Get-Location)\Image Data\SIRiverOnWestAtNorth.json") {}
}

Class SIRiverOnWestAtSouth : SIInternalBase {
    SIRiverOnWestAtSouth() : base("$(Get-Location)\Image Data\SIRiverOnWestAtSouth.json") {}
}

Class SIRiverOnWestEastAtSouth : SIInternalBase {
    SIRiverOnWestEastAtSouth() : base("$(Get-Location)\Image Data\SIRiverOnWestEastAtSouth.json") {}
}

Class SIRiverOnWestNorthAtNorth : SIInternalBase {
    SIRiverOnWestNorthAtNorth() : base("$(Get-Location)\Image Data\SIRiverOnWestNorthAtNorth.json") {}
}

Class SIRiverOnWestNorthSouthAtNorth : SIInternalBase {
    SIRiverOnWestNorthSouthAtNorth() : base("$(Get-Location)\Image Data\SIRiverOnWestNorthSouthAtNorth.json") {}
}






#//////////////////////////////////////////////////////////////////////////////
#
# MAP TILE OBJECT
#
# DESPITE THE NAME, THIS REPRESENTS AN OBJECT THAT THE PLAYER CAN INTERACT WITH
# EITHER DIRECTLY ON THE MAP OR BY OWNING IT IN THEIR ITEM INVENTORY. THESE ARE
# ALSO THE ITEMS THAT ARE GIVEN TO THE PLAYER AS SPOILS WHEN DEFEATING CERTAIN
# ENEMIES.
#
# IT'S WORTH MENTIONING THE TARGETOFFILTER PROPERTY.
#
#//////////////////////////////////////////////////////////////////////////////
Class MapTileObject {
    [String]$Name
    [String]$MapObjName
    [ScriptBlock]$Effect
    [Boolean]$CanAddToInventory
    [String]$ExamineString
    [List[String]]$TargetOfFilter
    [ScriptBlock]$BaseEffectCall
    [String]$PlayerEffectString
    [Boolean]$KeyItem

    MapTileObject() {
        $this.Name               = ''
        $this.MapObjName         = ''
        $this.Effect             = {}
        $this.CanAddToInventory  = $false
        $this.ExamineString      = ''
        $this.TargetOfFilter     = @()
        $this.PlayerEffectString = ''
        $this.KeyItem            = $false
        $this.BaseEffectCall     = {
            Param(
                [ValidateNotNullOrEmpty()]
                [String]$a0
            )

            Return $this.ValidateSourceInFilter($a0)
        }
    }

    [Boolean]ValidateSourceInFilter([String]$SourceItemClass) {
        Return ($SourceItemClass -IN $this.TargetOfFilter)
    }
}

#//////////////////////////////////////////////////////////////////////////////
#
# MAP TILE
#
# A "PLACE" ON A MAP. ANY GIVEN COORDINATE PAIR VALUE RELATES TO A SINGLE MAP 
# TILE. MAP TILE NAVIGATION IS RESTRICTED TO CARDINAL DIRECTIONS, CONSEQUENTLY
# SOME DIRECTIONS ARE "EXITABLE" WHILE OTHERS AREN'T. MAP TILES HAVE A SINGLE
# "IMAGE" THAT IS DRAWN ON THE NAVIGATION SCREEN IN THE SCENE IMAGE WINDOW.
# MAP TILES CAN CONTAIN ZERO OR MORE MAP TILE OBJECTS THAT CAN BE INTERACTED
# WITH, EITHER BY EXAMINATION, AUGMENTATION, OR COLLECTION. EVERY MAP TILE
# OBJECT CAN BE EXAMINED, WHILE ONLY SELECT ONES CAN BE AUGMENTED OR COLLECTED.
# THIS IS DETERMINED BY A "TARGET OF" FILTER, WHICH IS DESCRIBED AT THE MAP
# TILE OBJECT DEFINITION.
#
# MAP TILES ALSO PLAY AN INTEGRAL PART OF THE COMBAT SYSTEM AS THEY SERVE AS 
# THE ENTRY POINT FOR THE COMBAT SUB-PROGRAM. THIS IS FACILITATED BY HAVING
# EACH TILE SPECIFIY THE FOLLOWING: IS BATTLE ALLOWED ON THIS TILE, WHAT IS
# THE EFFECTIVE ENCOUNTER RATE (OR CHANCE OF ENTERING A COMBAT SITUATION; THIS
# IS DETERMINED WHEN THE TILE IS CREATED AND DOESN'T CHANGE OVER TIME; IT 
# PROBABLY SHOULD! :)), AND A "REGION CODE" WHICH MAPS TO A HASHTABLE THAT
# CONTAINS ARRAYS THAT MAP TO REGION CODES. THESE ARRAYS SPECIFY WHICH KINDS OF
# ENEMIES CAN BE ENCOUNTERED IN THIS REGION.
#
#//////////////////////////////////////////////////////////////////////////////
Class MapTile {
    Static [Int]$TileExitNorth = 0
    Static [Int]$TileExitSouth = 1
    Static [Int]$TileExitEast  = 2
    Static [Int]$TileExitWest  = 3

    [SceneImage]$BackgroundImage
    [List[MapTileObject]]$ObjectListing
    [Boolean[]]$Exits
    [Boolean]$BattleAllowed
    [Double]$EncounterRate
    [Int]$RegionCode

    MapTile() {
        $this.BackgroundImage = [SIEmpty]::new()
        $this.ObjectListing   = [List[MapTileObject]]::new()
        $this.Exits = @(
            $false,
            $false,
            $false,
            $false
        )
        $this.BattleAllowed = $false
        $this.EncounterRate = 0.5
        $this.RegionCode    = 0
    }

    MapTile(
        [SceneImage]$BackgroundImage,
        [MapTileObject[]]$ObjectListing,
        [Boolean[]]$Exits
    ) {
        $this.BackgroundImage = $BackgroundImage
        $this.ObjectListing   = [List[MapTileObject]]::new()
        $this.Exits           = $Exits
        $this.BattleAllowed   = $false
        $this.EncounterRate   = 0.5
        $this.RegionCode      = 0
        Foreach($a In $ObjectListing) {
            $this.ObjectListing.Add($a) | Out-Null
        }
    }

    MapTile(
        [SceneImage]$BackgroundImage,
        [MapTileObject[]]$ObjectListing,
        [Boolean[]]$Exits,
        [Boolean]$BattleAllowed,
        [Double]$EncounterRate,
        [Int]$RegionCode
    ) {
        $this.BackgroundImage = $BackgroundImage
        $this.ObjectListing   = [List[MapTileObject]]::new()
        $this.Exits           = $Exits
        $this.BattleAllowed   = $BattleAllowed
        $this.EncounterRate   = $EncounterRate
        $this.RegionCode      = $RegionCode
        Foreach($a in $ObjectListing) {
            $this.ObjectListing.Add($a) | Out-Null
        }
    }

    MapTile(
        [Hashtable]$JsonData
    ) {
        $this.BackgroundImage = $Script:TheSceneImages[$JsonData['BackgroundImage']]
        $this.Exits           = $JsonData['Exits']
        $this.BattleAllowed   = $JsonData['BattleAllowed']
        $this.EncounterRate   = $JsonData['EncounterRate']
        $this.RegionCode      = $JsonData['RegionCode']
        $this.ObjectListing   = [List[MapTileObject]]::new()

        Foreach($A in $JsonData['ObjectListing']) {
            $this.ObjectListing.Add($(New-Object -TypeName $A)) | Out-Null
        }
    }

    [Boolean]IsItemInTile([String]$ItemName) {
        Foreach($a in $this.ObjectListing) {
            If($a.Name -IEQ $ItemName) {
                Return $true
            }
        }

        Return $false
    }

    [MapTileObject]GetItemReference([String]$ItemName) {
        Foreach($a in $this.ObjectListing) {
            If($a.Name -IEQ $ItemName) {
                Return $a
            }
        }

        Return $null
    }

    [Void]BattleStep() {
        If($this.BattleAllowed -EQ $true) {
            [Double]$BattleChance = Get-Random -Minimum 0.0 -Maximum 1.0
            If($BattleChance -GT $this.EncounterRate) {
                $Script:TheCurrentEnemy = New-Object -TypeName $($Script:BattleEncounterRegionTable[$this.RegionCode] | Get-Random)
                $Script:TheBufferManager.CopyActiveToBufferAWithWipe()
                $Script:ThePreviousGlobalGameState = $Script:TheGlobalGameState
                $Script:TheGlobalGameState         = [GameStatePrimary]::BattleScreen
            }
        }
    }
}





#//////////////////////////////////////////////////////////////////////////////
#
# MAP
#
#//////////////////////////////////////////////////////////////////////////////
Class Map {
    [Int]$MapWidth
    [Int]$MapHeight
    [String]$Name
    [Boolean]$BoundaryWrap
    [MapTile[,]]$Tiles

    Map() {
        $this.MapWidth     = 0
        $this.MapHeight    = 0
        $this.Name         = ''
        $this.BoundaryWrap = $false

        # THIS LINE PRESENTS A PROBLEM WITH SPLATTING SINCE IT EVIDENTLY GETS CALLED BEFORE
        # ANY OF THE SPLATTED VALUES ARE APPLIED TO THE OBJECT.
        $this.Tiles        = New-Object 'MapTile[,]' $this.MapHeight, $this.MapWidth
    }

    Map(
        [String]$Name,
        [Int]$MapWidth,
        [Int]$MapHeight,
        [Boolean]$BoundaryWrap
    ) {
        $this.Name         = $Name
        $this.MapWidth     = $MapWidth
        $this.MapHeight    = $MapHeight
        $this.BoundaryWrap = $BoundaryWrap
        $this.Tiles        = New-Object 'MapTile[,]' $this.MapHeight, $this.MapWidth
    }

    Map(
        [String]$JsonConfigPath
    ) {
        [Hashtable]$JsonData = @{}

        If($(Test-Path $JsonConfigPath) -EQ $true) {
            $JsonData = Get-Content -Raw $JsonConfigPath | ConvertFrom-Json -AsHashtable
        }

        $this.Name         = $JsonData['MapName']
        $this.MapWidth     = $JsonData['MapWidth']
        $this.MapHeight    = $JsonData['MapHeight']
        $this.BoundaryWrap = $JsonData['BoundaryWrap']
        $this.Tiles        = New-Object 'MapTile[,]' $this.MapHeight, $this.MapWidth

        For([Int]$Y = 0; $Y -LT $this.MapHeight; $Y++) {
            For([Int]$X = 0; $X -LT $this.MapWidth; $X++) {
                # [Hashtable]$A = $JsonData['Tiles'][$Y][$X]
                $this.Tiles[$Y, $X] = [MapTile]::new($JsonData['Tiles'][$Y][$X])
            }
        }
    }

    [Void]CreateMapTiles() {
        If($this.MapWidth -GT 0 -AND $this.MapHeight -GT 0) {
            $this.Tiles = New-Object 'MapTile[,]' $this.MapHeight, $this.MapWidth
        }
    }

    [MapTile]GetTileAtPlayerCoordinates() {
        Return $this.Tiles[$Script:ThePlayer.MapCoordinates.Row, $Script:ThePlayer.MapCoordinates.Column]
    }
}

#//////////////////////////////////////////////////////////////////////////////
#
# MAP TILE OBJECT ABSTRACTIONS
#
# THESE ABSTRACTIONS SERVE TO BUILD UP ACTUAL ITEMS THAT THE PLAYER CAN 
# INTERACT WITH. THESE CONSTRUCTS CAN BE A LITTLE CUMBERSOME TO SETUP.
#
#//////////////////////////////////////////////////////////////////////////////
Class MTOTree : MapTileObject {
    [Boolean]$HasRopeTied

    MTOTree() {
        $this.Name              = 'Tree'
        $this.MapObjName        = 'tree'
        $this.CanAddToInventory = $false
        $this.ExamineString     = 'It''s a tree. Looks like all the other ones.'
        $this.Effect = {
            <#
            Note the pattern here for the params. In order for state changes to work, the ScriptBlock will need to have two arguments:
            A reference to the object itself, and the source. AFAIK, this is because of how the ScriptBlock gets invoked. The $this reference
            doesn't work as it references the CommandWindow instance rather than the owning object (in this case, MTOTree). Because of this
            somewhat counterintuitive nature, the caller (in this case, the 'use' command) will invoke the ScriptBlock with two arguments that
            match the signature here. State changes can be inflicted upon Self (passed as a reference), and Source gets removed from the Player's
            Inventory.
            #>
            Param(
                [MTOTree]$Self,
                [Object]$Source
            )

            Switch($Source.PSTypeNames[0]) {
                'MTORope' {
                    $Script:TheMessageWindow.WriteTiedRopeToTreeMessage()

                    <#
                    It's important to note that this action *SHOULD* cause a state change with this object. To be more specific,
                    prior to running this action, it's assumed that the Tree did NOT have a Rope tied to it. After this action,
                    it does. So the questions now are (A) can you tie another Rope to the Tree, and (B) what can you do with the Tree
                    now that it has a Rope tied to it?

                    Also, the Rope should be removed from the Player's Inventory, but I don't yet have that functionality in place.

                    UPDATE: I have this functionality in place.
                    #>
                    $Self.HasRopeTied   = $true
                    $Self.ExamineString = 'A rope is tied to this tree. Wee.'
                    $Script:ThePlayer.RemoveInventoryItemByName($Source.Name)
                }
            }
        }
        $this.TargetOfFilter = @(
            'MTORope'
        )
        $this.HasRopeTied = $false
    }
}

Class MTOLadder : MapTileObject {
    MTOLadder() {
        $this.Name              = 'Ladder'
        $this.MapObjName        = $this.Name.ToLower()
        $this.CanAddToInventory = $false
        $this.ExamineString     = 'Used to climb things. Just don''t walk under one.'
    }
}

Class MTORope : MapTileObject {
    MTORope() {
        $this.Name              = 'Rope'
        $this.MapObjName        = $this.Name.ToLower()
        $this.CanAddToInventory = $true
        $this.ExamineString     = 'It''s not a snake. Hopefully.'
    }
}

Class MTOStairs : MapTileObject {
    MTOStairs() {
        $this.Name              = 'Stairs'
        $this.MapObjName        = $this.Name.ToLower()
        $this.CanAddToInventory = $true
        $this.ExamineString     = 'A faithful ally for elevating one''s position.'
    }
}

Class MTOPole : MapTileObject {
    MTOPole() {
        $this.Name              = 'Pole'
        $this.MapObjName        = $this.Name.ToLower()
        $this.CanAddToInventory = $false
        $this.ExamineString     = 'Not the north or the south one.'
    }
}

Class MTOBacon : MapTileObject {
    MTOBacon() {
        $this.Name              = 'Bacon'
        $this.MapObjName        = $this.Name.ToLower()
        $this.CanAddToInventory = $true
        $this.ExamineString     = 'Shredded swine flesh. Cholesterol never tasted so good.'
        $this.KeyItem           = $true
    }
}

Class MTOApple : MapTileObject {
    MTOApple() {
        $this.Name              = 'Apple'
        $this.MapObjName        = $this.Name.ToLower()
        $this.CanAddToInventory = $true
        $this.ExamineString     = 'A big, juicy, red apple. Worm not included.'
    }
}

Class MTOStick : MapTileObject {
    MTOStick() {
        $this.Name              = 'Stick'
        $this.MapObjName        = $this.Name.ToLower()
        $this.CanAddToInventory = $true
        $this.ExamineString     = 'Be careful not to poke your eye out with it.'
    }
}

Class MTOYogurt : MapTileObject {
    MTOYogurt() {
        $this.Name              = 'Yogurt'
        $this.MapObjName        = $this.Name.ToLower()
        $this.CanAddToInventory = $true
        $this.ExamineString     = 'For some reason, people enjoy this spoiled milk.'
    }
}

Class MTORock : MapTileObject {
    MTORock() {
        $this.Name              = 'Rock'
        $this.MapObjName        = $this.Name.ToLower()
        $this.CanAddToInventory = $true
        $this.ExamineString     = 'A garden variety rock. Good for taunting raccoons with.'
    }
}

Class MTOMilk : MapTileObject {
    [Int]$PlayerHpBonus
    [Boolean]$IsSpoiled

    MTOMilk() {
        $this.Name = 'Milk'
        $this.MapObjName = $this.Name.ToLower()
        $this.CanAddToInventory = $true
        $this.ExamineString = '2%. We don''t take kindly to whole milk ''round here.'
        $this.Effect = {
            Param(
                [MTOMilk]$Self,
                [Object]$Source
            )

            Switch($Source.PSTypeNames[0]) {
                'Player' {
                    <#
                    Now we're getting into some pretty esoteric stuff here.

                    First, we need to check and see if the Milk is spoiled.
                    #>
                    If($Self.IsSpoiled -EQ $true) {
                        # It is - this will cause the Player's Hp to decrease
                        # Attempt to decrement the Player's Hp by the Hp Bonus
                        If($Source.DecrementHitPoints(-$Self.PlayerHpBonus) -EQ $true) {
                            $Script:TheMessageWindow.WriteMilkUseSpoiledMessage()
                            $Source.RemoveInventoryItemByName($Self.Name)
                        } Else {
                            $Script:TheMessageWindow.WriteMilkUseNotNowMessage()
                        }
                    } Else {
                        # The milk isn't spoiled - attempt to increment the Player's Hp by the Hp Bonus
                        # Attempt to increment the Player's HP by the Hp Bonus
                        If($Script:ThePlayer.IncrementHitPoints($Self.PlayerHpBonus) -EQ $true) {
                            $Script:TheMessageWindow.WriteMilkUseOkayMessage()
                            $Script:ThePlayer.RemoveInventoryItemByName($Self.Name)
                        } Else {
                            $Script:TheMessageWindow.WriteMilkUseNotNowMessage()
                        }
                    }
                }
            }
        }

        # THIS LOOKS STRANGE, BUT NOW WE'RE STILL IN THE CTOR AND THIS SETS, RANDOMLY, SOME STUFF ABOUT THE MLIK
        $a                  = $(Get-Random -Minimum 0 -Maximum 10)
        $this.PlayerHpBonus = 75
        $this.IsSpoiled     = $($a -GE 6 ? $true : $false)
        
        If($this.IsSpoiled -EQ $true) {
            $this.ExamineString      = 'This looks funny. Should I really be drinking this?'
            $this.PlayerEffectString = "-$($this.PlayerHpBonus) HP, 10% chance to inflict Poison"
        } Else {
            $this.PlayerEffectString = "+$($this.PlayerHpBonus) HP"
        }
    }
}

Class MTOWarpable : MapTileObject {
    [Ref]$WarpToReference
    [Int]$WarpToX
    [Int]$WarpToY

    MTOWarpable() {
        $this.WarpToReference = $null
        $this.WarpToX         = 0
        $this.WarpToY         = 0
        $this.Effect          = $Script:MapWarpHandler
    }
}

Class MTODoor : MTOWarpable {
    MTODoor() {
        $this.Name       = 'Door'
        $this.MapObjName = 'door'
    }
}

Class MTODoor00001 : MTODoor {
    MTODoor00001() {
        $this.WarpToReference = ([Ref]$Script:SampleWarpMap02)
    }
}

Class MTODoor00002 : MTODoor {
    MTODoor00002() {
        $this.WarpToReference = ([Ref]$Script:SampleWarpMap01)
        $this.WarpToX         = 3
    }
}










###############################################################################
#
# S07
#
# EQUIPMENT PRIMITIVES
#
# THE BASE CLASS FOR ITEMS INTENDED TO BE USED AS EQUIPMENT FOR THE PLAYER.
#
###############################################################################
Class BattleEquipment : MapTileObject {    
    [Int]$PurchasePrice
    [Int]$SellPrice
    [Hashtable]$TargetStats
    [Hashtable]$RequiredStats
    [Gender]$TargetGender

    BattleEquipment() : base() {
        $this.PurchasePrice = 0
        $this.SellPrice     = 0
        $this.TargetStats   = @{}
        $this.RequiredStats = @{}
        $this.TargetGender  = [Gender]::Unisex
    }
}

Class BEWeapon : BattleEquipment {}

Class BEHelmet : BattleEquipment {}

Class BEArmor : BattleEquipment {}

Class BEPauldron : BattleEquipment {}

Class BEGauntlets : BattleEquipment {}

Class BEGreaves : BattleEquipment {}

Class BEBoots : BattleEquipment {}

Class BEJewelry : BattleEquipment {}

Class BECape : BattleEquipment {}





#//////////////////////////////////////////////////////////////////////////////
#
# WEAPONS
#
#//////////////////////////////////////////////////////////////////////////////

Class BEWoodenSword : BEWeapon {
	BEWoodenSword() : base() {
		$this.Name          = 'Wooden Sword'
		$this.MapObjName    = 'woodensword'
		$this.PurchasePrice = 50
		$this.SellPrice     = 25
		$this.TargetStats   = @{
			[StatId]::Attack = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple, crudely carved wooden sword. Ideal for beginners.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDagger : BEWeapon {
	BEDagger() : base() {
		$this.Name          = 'Dagger'
		$this.MapObjName    = 'dagger'
		$this.PurchasePrice = 75
		$this.SellPrice     = 37
		$this.TargetStats   = @{
			[StatId]::Attack = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small, sharp blade for quick attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShortSword : BEWeapon {
	BEShortSword() : base() {
		$this.Name          = 'Short Sword'
		$this.MapObjName    = 'shortsword'
		$this.PurchasePrice = 120
		$this.SellPrice     = 60
		$this.TargetStats   = @{
			[StatId]::Attack = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A standard one-handed sword, good for basic combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIronAxe : BEWeapon {
	BEIronAxe() : base() {
		$this.Name          = 'Iron Axe'
		$this.MapObjName    = 'ironaxe'
		$this.PurchasePrice = 150
		$this.SellPrice     = 75
		$this.TargetStats   = @{
			[StatId]::Attack = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy iron axe, effective against armored foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStaff : BEWeapon {
	BEStaff() : base() {
		$this.Name          = 'Staff'
		$this.MapObjName    = 'staff'
		$this.PurchasePrice = 100
		$this.SellPrice     = 50
		$this.TargetStats   = @{
			[StatId]::Attack      = 3
			[StatId]::MagicAttack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A plain wooden staff, often used by mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBronzeSpear : BEWeapon {
	BEBronzeSpear() : base() {
		$this.Name          = 'Bronze Spear'
		$this.MapObjName    = 'bronzespear'
		$this.PurchasePrice = 130
		$this.SellPrice     = 65
		$this.TargetStats   = @{
			[StatId]::Attack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A spear with a bronze tip, offering good reach.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESling : BEWeapon {
	BESling() : base() {
		$this.Name          = 'Sling'
		$this.MapObjName    = 'sling'
		$this.PurchasePrice = 40
		$this.SellPrice     = 20
		$this.TargetStats   = @{
			[StatId]::Attack = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple projectile weapon, uses small stones as ammo.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBow : BEWeapon {
	BEBow() : base() {
		$this.Name          = 'Bow'
		$this.MapObjName    = 'bow'
		$this.PurchasePrice = 180
		$this.SellPrice     = 90
		$this.TargetStats   = @{
			[StatId]::Attack = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A basic wooden bow, requires arrows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELeatherWhip : BEWeapon {
	BELeatherWhip() : base() {
		$this.Name          = 'Leather Whip'
		$this.MapObjName    = 'leatherwhip'
		$this.PurchasePrice = 90
		$this.SellPrice     = 45
		$this.TargetStats   = @{
			[StatId]::Attack = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A flexible whip made of leather, good for crowd control.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEClub : BEWeapon {
	BEClub() : base() {
		$this.Name          = 'Club'
		$this.MapObjName    = 'club'
		$this.PurchasePrice = 60
		$this.SellPrice     = 30
		$this.TargetStats   = @{
			[StatId]::Attack = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy, blunt instrument.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECopperKnuckles : BEWeapon {
	BECopperKnuckles() : base() {
		$this.Name          = 'Copper Knuckles'
		$this.MapObjName    = 'copperknuckles'
		$this.PurchasePrice = 80
		$this.SellPrice     = 40
		$this.TargetStats   = @{
			[StatId]::Attack = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Metal plates worn over the knuckles to enhance punches.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELightCrossbow : BEWeapon {
	BELightCrossbow() : base() {
		$this.Name          = 'Light Crossbow'
		$this.MapObjName    = 'lightcrossbow'
		$this.PurchasePrice = 200
		$this.SellPrice     = 100
		$this.TargetStats   = @{
			[StatId]::Attack = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A compact crossbow, easier to reload than a full-sized one.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEApprenticeWand : BEWeapon {
	BEApprenticeWand() : base() {
		$this.Name          = 'Apprentice Wand'
		$this.MapObjName    = 'apprenticewand'
		$this.PurchasePrice = 110
		$this.SellPrice     = 55
		$this.TargetStats   = @{
			[StatId]::Attack      = 2
			[StatId]::MagicAttack = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A basic wand for novice spellcasters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHuntingKnife : BEWeapon {
	BEHuntingKnife() : base() {
		$this.Name          = 'Hunting Knife'
		$this.MapObjName    = 'huntingknife'
		$this.PurchasePrice = 65
		$this.SellPrice     = 32
		$this.TargetStats   = @{
			[StatId]::Attack = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A versatile knife for hunting and survival.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStuddedClub : BEWeapon {
	BEStuddedClub() : base() {
		$this.Name          = 'Studded Club'
		$this.MapObjName    = 'studdedclub'
		$this.PurchasePrice = 100
		$this.SellPrice     = 50
		$this.TargetStats   = @{
			[StatId]::Attack = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A club embedded with metal studs.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneAxe : BEWeapon {
	BEStoneAxe() : base() {
		$this.Name          = 'Stone Axe'
		$this.MapObjName    = 'stoneaxe'
		$this.PurchasePrice = 70
		$this.SellPrice     = 35
		$this.TargetStats   = @{
			[StatId]::Attack = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rudimentary axe with a stone head.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFishingRod : BEWeapon {
	BEFishingRod() : base() {
		$this.Name          = 'Fishing Rod'
		$this.MapObjName    = 'fishingrod'
		$this.PurchasePrice = 30
		$this.SellPrice     = 15
		$this.TargetStats   = @{
			[StatId]::Attack = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Not truly a weapon, but can be used in a pinch.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERustySword : BEWeapon {
	BERustySword() : base() {
		$this.Name          = 'Rusty Sword'
		$this.MapObjName    = 'rustysword'
		$this.PurchasePrice = 45
		$this.SellPrice     = 22
		$this.TargetStats   = @{
			[StatId]::Attack = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An old, neglected sword. Not very effective.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPracticeStaff : BEWeapon {
	BEPracticeStaff() : base() {
		$this.Name          = 'Practice Staff'
		$this.MapObjName    = 'practicestaff'
		$this.PurchasePrice = 80
		$this.SellPrice     = 40
		$this.TargetStats   = @{
			[StatId]::Attack      = 1
			[StatId]::MagicAttack = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A lightweight staff designed for training.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESmallShield : BEWeapon {
	BESmallShield() : base() {
		$this.Name          = 'Small Shield'
		$this.MapObjName    = 'smallshield'
		$this.PurchasePrice = 70
		$this.SellPrice     = 35
		$this.TargetStats   = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A very small shield, offers minimal protection.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThrowingDaggers : BEWeapon {
	BEThrowingDaggers() : base() {
		$this.Name          = 'Throwing Daggers'
		$this.MapObjName    = 'throwingdaggers'
		$this.PurchasePrice = 110
		$this.SellPrice     = 55
		$this.TargetStats   = @{
			[StatId]::Attack = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A set of small daggers designed for throwing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELongBow : BEWeapon {
	BELongBow() : base() {
		$this.Name          = 'Long Bow'
		$this.MapObjName    = 'longbow'
		$this.PurchasePrice = 250
		$this.SellPrice     = 125
		$this.TargetStats   = @{
			[StatId]::Attack = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A more powerful bow, requiring greater strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIronSword : BEWeapon {
	BEIronSword() : base() {
		$this.Name          = 'Iron Sword'
		$this.MapObjName    = 'ironsword'
		$this.PurchasePrice = 280
		$this.SellPrice     = 140
		$this.TargetStats   = @{
			[StatId]::Attack = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A well-forged iron sword, more durable than bronze.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBattleAxe : BEWeapon {
	BEBattleAxe() : base() {
		$this.Name          = 'Battle Axe'
		$this.MapObjName    = 'battleaxe'
		$this.PurchasePrice = 320
		$this.SellPrice     = 160
		$this.TargetStats   = @{
			[StatId]::Attack = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A large, two-handed axe, devastating in combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMagicStaff : BEWeapon {
	BEMagicStaff() : base() {
		$this.Name          = 'Magic Staff'
		$this.MapObjName    = 'magicstaff'
		$this.PurchasePrice = 200
		$this.SellPrice     = 100
		$this.TargetStats   = @{
			[StatId]::Attack      = 5
			[StatId]::MagicAttack = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff imbued with minor magical properties.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESteelSpear : BEWeapon {
	BESteelSpear() : base() {
		$this.Name          = 'Steel Spear'
		$this.MapObjName    = 'steelspear'
		$this.PurchasePrice = 260
		$this.SellPrice     = 130
		$this.TargetStats   = @{
			[StatId]::Attack = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sharp and sturdy spear made of steel.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShortBow : BEWeapon {
	BEShortBow() : base() {
		$this.Name          = 'Short Bow'
		$this.MapObjName    = 'shortbow'
		$this.PurchasePrice = 160
		$this.SellPrice     = 80
		$this.TargetStats   = @{
			[StatId]::Attack = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A compact bow, good for quick shots.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarHammer : BEWeapon {
	BEWarHammer() : base() {
		$this.Name          = 'War Hammer'
		$this.MapObjName    = 'warhammer'
		$this.PurchasePrice = 300
		$this.SellPrice     = 150
		$this.TargetStats   = @{
			[StatId]::Attack = 23
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy, blunt weapon designed to crush armor.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGrindingStone : BEWeapon {
	BEGrindingStone() : base() {
		$this.Name          = 'Grinding Stone'
		$this.MapObjName    = 'grindingstone'
		$this.PurchasePrice = 50
		$this.SellPrice     = 25
		$this.TargetStats   = @{
			[StatId]::Attack = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy stone used for grinding. Surprisingly effective.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESimpleWand : BEWeapon {
	BESimpleWand() : base() {
		$this.Name          = 'Simple Wand'
		$this.MapObjName    = 'simplewand'
		$this.PurchasePrice = 150
		$this.SellPrice     = 75
		$this.TargetStats   = @{
			[StatId]::Attack      = 3
			[StatId]::MagicAttack = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A basic wand for casting simple spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELeatherGloves : BEWeapon {
	BELeatherGloves() : base() {
		$this.Name          = 'Leather Gloves'
		$this.MapObjName    = 'leathergloves'
		$this.PurchasePrice = 60
		$this.SellPrice     = 30
		$this.TargetStats   = @{
			[StatId]::Attack = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves reinforced with leather, can be used for fisticuffs.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESlingShot : BEWeapon {
	BESlingShot() : base() {
		$this.Name          = 'Sling Shot'
		$this.MapObjName    = 'slingshot'
		$this.PurchasePrice = 80
		$this.SellPrice     = 40
		$this.TargetStats   = @{
			[StatId]::Attack = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A more powerful version of a sling.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpikedClub : BEWeapon {
	BESpikedClub() : base() {
		$this.Name          = 'Spiked Club'
		$this.MapObjName    = 'spikedclub'
		$this.PurchasePrice = 130
		$this.SellPrice     = 65
		$this.TargetStats   = @{
			[StatId]::Attack = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A club covered in sharp spikes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWornDagger : BEWeapon {
	BEWornDagger() : base() {
		$this.Name          = 'Worn Dagger'
		$this.MapObjName    = 'worndagger'
		$this.PurchasePrice = 35
		$this.SellPrice     = 17
		$this.TargetStats   = @{
			[StatId]::Attack = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A used and dulled dagger.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEApprenticeStaff : BEWeapon {
	BEApprenticeStaff() : base() {
		$this.Name          = 'Apprentice Staff'
		$this.MapObjName    = 'apprenticestaff'
		$this.PurchasePrice = 120
		$this.SellPrice     = 60
		$this.TargetStats   = @{
			[StatId]::Attack      = 4
			[StatId]::MagicAttack = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff suitable for an apprentice mage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWoodcuttersAxe : BEWeapon {
	BEWoodcuttersAxe() : base() {
		$this.Name          = 'Woodcutter''s Axe'
		$this.MapObjName    = 'woodcuttersaxe'
		$this.PurchasePrice = 140
		$this.SellPrice     = 70
		$this.TargetStats   = @{
			[StatId]::Attack = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe primarily for chopping wood, but sharp.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlowgun : BEWeapon {
	BEBlowgun() : base() {
		$this.Name          = 'Blowgun'
		$this.MapObjName    = 'blowgun'
		$this.PurchasePrice = 90
		$this.SellPrice     = 45
		$this.TargetStats   = @{
			[StatId]::Attack = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A long tube for shooting darts. Requires darts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneHammer : BEWeapon {
	BEStoneHammer() : base() {
		$this.Name          = 'Stone Hammer'
		$this.MapObjName    = 'stonehammer'
		$this.PurchasePrice = 70
		$this.SellPrice     = 35
		$this.TargetStats   = @{
			[StatId]::Attack = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A primitive hammer with a stone head.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERustyKnife : BEWeapon {
	BERustyKnife() : base() {
		$this.Name          = 'Rusty Knife'
		$this.MapObjName    = 'rustyknife'
		$this.PurchasePrice = 30
		$this.SellPrice     = 15
		$this.TargetStats   = @{
			[StatId]::Attack = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A corroded and dull knife.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFryingPan : BEWeapon {
	BEFryingPan() : base() {
		$this.Name          = 'Frying Pan'
		$this.MapObjName    = 'fryingpan'
		$this.PurchasePrice = 40
		$this.SellPrice     = 20
		$this.TargetStats   = @{
			[StatId]::Attack = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A common kitchen item. Surprisingly sturdy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETorch : BEWeapon {
	BETorch() : base() {
		$this.Name          = 'Torch'
		$this.MapObjName    = 'torch'
		$this.PurchasePrice = 20
		$this.SellPrice     = 10
		$this.TargetStats   = @{
			[StatId]::Attack = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A burning stick. Can be used to ward off some creatures.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECarvingKnife : BEWeapon {
	BECarvingKnife() : base() {
		$this.Name          = 'Carving Knife'
		$this.MapObjName    = 'carvingknife'
		$this.PurchasePrice = 50
		$this.SellPrice     = 25
		$this.TargetStats   = @{
			[StatId]::Attack = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A very sharp knife used for preparing food.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFarmersScythe : BEWeapon {
	BEFarmersScythe() : base() {
		$this.Name          = 'Farmer''s Scythe'
		$this.MapObjName    = 'farmersscythe'
		$this.PurchasePrice = 160
		$this.SellPrice     = 80
		$this.TargetStats   = @{
			[StatId]::Attack = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tool for harvesting crops, dangerous in combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBrokenBottle : BEWeapon {
	BEBrokenBottle() : base() {
		$this.Name          = 'Broken Bottle'
		$this.MapObjName    = 'brokenbottle'
		$this.PurchasePrice = 25
		$this.SellPrice     = 12
		$this.TargetStats   = @{
			[StatId]::Attack = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shattered bottle. Very sharp, but fragile.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECandlestick : BEWeapon {
	BECandlestick() : base() {
		$this.Name          = 'Candlestick'
		$this.MapObjName    = 'candlestick'
		$this.PurchasePrice = 50
		$this.SellPrice     = 25
		$this.TargetStats   = @{
			[StatId]::Attack = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy metal candlestick.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGardeningHoe : BEWeapon {
	BEGardeningHoe() : base() {
		$this.Name          = 'Gardening Hoe'
		$this.MapObjName    = 'gardeninghoe'
		$this.PurchasePrice = 60
		$this.SellPrice     = 30
		$this.TargetStats   = @{
			[StatId]::Attack = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tool for digging and weeding. Can be swung.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESturdyStick : BEWeapon {
	BESturdyStick() : base() {
		$this.Name          = 'Sturdy Stick'
		$this.MapObjName    = 'sturdystick'
		$this.PurchasePrice = 30
		$this.SellPrice     = 15
		$this.TargetStats   = @{
			[StatId]::Attack = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A thick, durable branch.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESewerPipe : BEWeapon {
	BESewerPipe() : base() {
		$this.Name          = 'Sewer Pipe'
		$this.MapObjName    = 'sewerpipe'
		$this.PurchasePrice = 70
		$this.SellPrice     = 35
		$this.TargetStats   = @{
			[StatId]::Attack = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A discarded pipe from the sewers. Surprisingly robust.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOldBroom : BEWeapon {
	BEOldBroom() : base() {
		$this.Name          = 'Old Broom'
		$this.MapObjName    = 'oldbroom'
		$this.PurchasePrice = 20
		$this.SellPrice     = 10
		$this.TargetStats   = @{
			[StatId]::Attack = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A worn-out broom. Not very effective.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEToySword : BEWeapon {
	BEToySword() : base() {
		$this.Name          = 'Toy Sword'
		$this.MapObjName    = 'toysword'
		$this.PurchasePrice = 10
		$this.SellPrice     = 5
		$this.TargetStats   = @{
			[StatId]::Attack = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A harmless replica of a sword.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMythrilSword : BEWeapon {
	BEMythrilSword() : base() {
		$this.Name          = 'Mythril Sword'
		$this.MapObjName    = 'mythrilsword'
		$this.PurchasePrice = 800
		$this.SellPrice     = 400
		$this.TargetStats   = @{
			[StatId]::Attack = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A finely crafted sword made from rare mythril, light and sharp.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESilverDagger : BEWeapon {
	BESilverDagger() : base() {
		$this.Name          = 'Silver Dagger'
		$this.MapObjName    = 'silverdagger'
		$this.PurchasePrice = 750
		$this.SellPrice     = 375
		$this.TargetStats   = @{
			[StatId]::Attack      = 40
			[StatId]::MagicAttack = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dagger made of pure silver, effective against supernatural foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGreatSword : BEWeapon {
	BEGreatSword() : base() {
		$this.Name          = 'Great Sword'
		$this.MapObjName    = 'greatsword'
		$this.PurchasePrice = 900
		$this.SellPrice     = 450
		$this.TargetStats   = @{
			[StatId]::Attack = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A massive two-handed sword, capable of cleaving through enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonAxe : BEWeapon {
	BEDragonAxe() : base() {
		$this.Name          = 'Dragon Axe'
		$this.MapObjName    = 'dragonaxe'
		$this.PurchasePrice = 1000
		$this.SellPrice     = 500
		$this.TargetStats   = @{
			[StatId]::Attack      = 60
			[StatId]::MagicAttack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe forged in dragonfire, capable of burning foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWizardsStaff : BEWeapon {
	BEWizardsStaff() : base() {
		$this.Name          = 'Wizard''s Staff'
		$this.MapObjName    = 'wizardsstaff'
		$this.PurchasePrice = 850
		$this.SellPrice     = 425
		$this.TargetStats   = @{
			[StatId]::Attack      = 10
			[StatId]::MagicAttack = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff crackling with magical energy, favored by powerful mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHolyLance : BEWeapon {
	BEHolyLance() : base() {
		$this.Name          = 'Holy Lance'
		$this.MapObjName    = 'holylance'
		$this.PurchasePrice = 950
		$this.SellPrice     = 475
		$this.TargetStats   = @{
			[StatId]::Attack      = 50
			[StatId]::MagicAttack = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A blessed spear said to smite evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERepeatingCrossbow : BEWeapon {
	BERepeatingCrossbow() : base() {
		$this.Name          = 'Repeating Crossbow'
		$this.MapObjName    = 'repeatingcrossbow'
		$this.PurchasePrice = 1100
		$this.SellPrice     = 550
		$this.TargetStats   = @{
			[StatId]::Attack = 58
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A complex crossbow capable of rapid firing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEElvenBow : BEWeapon {
	BEElvenBow() : base() {
		$this.Name          = 'Elven Bow'
		$this.MapObjName    = 'elvenbow'
		$this.PurchasePrice = 1200
		$this.SellPrice     = 600
		$this.TargetStats   = @{
			[StatId]::Attack = 62
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A gracefully crafted bow, known for its incredible accuracy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEScourgeWhip : BEWeapon {
	BEScourgeWhip() : base() {
		$this.Name          = 'Scourge Whip'
		$this.MapObjName    = 'scourgewhip'
		$this.PurchasePrice = 700
		$this.SellPrice     = 350
		$this.TargetStats   = @{
			[StatId]::Attack      = 35
			[StatId]::MagicAttack = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A whip enchanted with dark magic, draining foes'' vitality.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMeteorHammer : BEWeapon {
	BEMeteorHammer() : base() {
		$this.Name          = 'Meteor Hammer'
		$this.MapObjName    = 'meteorhammer'
		$this.PurchasePrice = 880
		$this.SellPrice     = 440
		$this.TargetStats   = @{
			[StatId]::Attack = 52
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy ball and chain, strikes with incredible force.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAdamantKnuckles : BEWeapon {
	BEAdamantKnuckles() : base() {
		$this.Name          = 'Adamant Knuckles'
		$this.MapObjName    = 'adamantknuckles'
		$this.PurchasePrice = 920
		$this.SellPrice     = 460
		$this.TargetStats   = @{
			[StatId]::Attack = 56
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Knuckles crafted from the legendary adamant, virtually unbreakable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFlameBlade : BEWeapon {
	BEFlameBlade() : base() {
		$this.Name          = 'Flame Blade'
		$this.MapObjName    = 'flameblade'
		$this.PurchasePrice = 780
		$this.SellPrice     = 390
		$this.TargetStats   = @{
			[StatId]::Attack      = 48
			[StatId]::MagicAttack = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword wreathed in fire, dealing burn damage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIceBrand : BEWeapon {
	BEIceBrand() : base() {
		$this.Name          = 'Ice Brand'
		$this.MapObjName    = 'icebrand'
		$this.PurchasePrice = 780
		$this.SellPrice     = 390
		$this.TargetStats   = @{
			[StatId]::Attack      = 48
			[StatId]::MagicAttack = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword imbued with the essence of ice, capable of freezing enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThunderRod : BEWeapon {
	BEThunderRod() : base() {
		$this.Name          = 'Thunder Rod'
		$this.MapObjName    = 'thunderrod'
		$this.PurchasePrice = 720
		$this.SellPrice     = 360
		$this.TargetStats   = @{
			[StatId]::Attack      = 8
			[StatId]::MagicAttack = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rod that can summon lightning bolts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVenomDagger : BEWeapon {
	BEVenomDagger() : base() {
		$this.Name          = 'Venom Dagger'
		$this.MapObjName    = 'venomdagger'
		$this.PurchasePrice = 650
		$this.SellPrice     = 325
		$this.TargetStats   = @{
			[StatId]::Attack = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dagger coated in potent poison, inflicting continuous damage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGiantClub : BEWeapon {
	BEGiantClub() : base() {
		$this.Name          = 'Giant Club'
		$this.MapObjName    = 'giantclub'
		$this.PurchasePrice = 820
		$this.SellPrice     = 410
		$this.TargetStats   = @{
			[StatId]::Attack = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A colossal club, wielded by only the strongest warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowBow : BEWeapon {
	BEShadowBow() : base() {
		$this.Name          = 'Shadow Bow'
		$this.MapObjName    = 'shadowbow'
		$this.PurchasePrice = 1050
		$this.SellPrice     = 525
		$this.TargetStats   = @{
			[StatId]::Attack      = 55
			[StatId]::MagicAttack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow that fires arrows of pure shadow, piercing defenses.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiritStaff : BEWeapon {
	BESpiritStaff() : base() {
		$this.Name          = 'Spirit Staff'
		$this.MapObjName    = 'spiritstaff'
		$this.PurchasePrice = 780
		$this.SellPrice     = 390
		$this.TargetStats   = @{
			[StatId]::Attack      = 5
			[StatId]::MagicAttack = 48
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that amplifies the wielder''s connection to the spirit world.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBarrierBlade : BEWeapon {
	BEBarrierBlade() : base() {
		$this.Name          = 'Barrier Blade'
		$this.MapObjName    = 'barrierblade'
		$this.PurchasePrice = 850
		$this.SellPrice     = 425
		$this.TargetStats   = @{
			[StatId]::Attack      = 42
			[StatId]::MagicAttack = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that can temporarily create a magical shield.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFrostAxe : BEWeapon {
	BEFrostAxe() : base() {
		$this.Name          = 'Frost Axe'
		$this.MapObjName    = 'frostaxe'
		$this.PurchasePrice = 900
		$this.SellPrice     = 450
		$this.TargetStats   = @{
			[StatId]::Attack      = 53
			[StatId]::MagicAttack = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe that emanates a chilling aura, slowing enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESolarStaff : BEWeapon {
	BESolarStaff() : base() {
		$this.Name          = 'Solar Staff'
		$this.MapObjName    = 'solarstaff'
		$this.PurchasePrice = 920
		$this.SellPrice     = 460
		$this.TargetStats   = @{
			[StatId]::Attack      = 12
			[StatId]::MagicAttack = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that harnesses the power of the sun, radiating healing energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBladeofTruth : BEWeapon {
	BEBladeofTruth() : base() {
		$this.Name          = 'Blade of Truth'
		$this.MapObjName    = 'bladeoftruth'
		$this.PurchasePrice = 1150
		$this.SellPrice     = 575
		$this.TargetStats   = @{
			[StatId]::Attack = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A legendary sword said to reveal hidden weaknesses.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonsBreath : BEWeapon {
	BEDragonsBreath() : base() {
		$this.Name          = 'Dragon''s Breath'
		$this.MapObjName    = 'dragonsbreath'
		$this.PurchasePrice = 980
		$this.SellPrice     = 490
		$this.TargetStats   = @{
			[StatId]::Attack      = 50
			[StatId]::MagicAttack = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A short, fiery weapon that can unleash a burst of flames.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidScepter : BEWeapon {
	BEVoidScepter() : base() {
		$this.Name          = 'Void Scepter'
		$this.MapObjName    = 'voidscepter'
		$this.PurchasePrice = 1000
		$this.SellPrice     = 500
		$this.TargetStats   = @{
			[StatId]::Attack      = 15
			[StatId]::MagicAttack = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A scepter that can manipulate spatial anomalies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGriffinBow : BEWeapon {
	BEGriffinBow() : base() {
		$this.Name          = 'Griffin Bow'
		$this.MapObjName    = 'griffinbow'
		$this.PurchasePrice = 1300
		$this.SellPrice     = 650
		$this.TargetStats   = @{
			[StatId]::Attack = 65
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow crafted from griffin feathers, offering incredible range and speed.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESerpentStaff : BEWeapon {
	BESerpentStaff() : base() {
		$this.Name          = 'Serpent Staff'
		$this.MapObjName    = 'serpentstaff'
		$this.PurchasePrice = 800
		$this.SellPrice     = 400
		$this.TargetStats   = @{
			[StatId]::Attack      = 7
			[StatId]::MagicAttack = 47
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff topped with a coiling serpent, capable of charming foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChaosBlade : BEWeapon {
	BEChaosBlade() : base() {
		$this.Name          = 'Chaos Blade'
		$this.MapObjName    = 'chaosblade'
		$this.PurchasePrice = 1250
		$this.SellPrice     = 625
		$this.TargetStats   = @{
			[StatId]::Attack      = 58
			[StatId]::MagicAttack = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that possesses unpredictable magical effects.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarMace : BEWeapon {
	BEStarMace() : base() {
		$this.Name          = 'Star Mace'
		$this.MapObjName    = 'starmace'
		$this.PurchasePrice = 950
		$this.SellPrice     = 475
		$this.TargetStats   = @{
			[StatId]::Attack      = 54
			[StatId]::MagicAttack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A mace studded with celestial fragments, glittering with cosmic energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulHarvester : BEWeapon {
	BESoulHarvester() : base() {
		$this.Name          = 'Soul Harvester'
		$this.MapObjName    = 'soulharvester'
		$this.PurchasePrice = 1100
		$this.SellPrice     = 550
		$this.TargetStats   = @{
			[StatId]::Attack      = 56
			[StatId]::MagicAttack = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A scythe said to reap the souls of the fallen, restoring vitality to the wielder.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrystalWand : BEWeapon {
	BECrystalWand() : base() {
		$this.Name          = 'Crystal Wand'
		$this.MapObjName    = 'crystalwand'
		$this.PurchasePrice = 700
		$this.SellPrice     = 350
		$this.TargetStats   = @{
			[StatId]::Attack      = 10
			[StatId]::MagicAttack = 42
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A wand made of pure crystal, focusing magical energies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEObsidianGreatsword : BEWeapon {
	BEObsidianGreatsword() : base() {
		$this.Name          = 'Obsidian Greatsword'
		$this.MapObjName    = 'obsidiangreatsword'
		$this.PurchasePrice = 1000
		$this.SellPrice     = 500
		$this.TargetStats   = @{
			[StatId]::Attack = 57
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A massive sword forged from volcanic glass, incredibly sharp.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWindAxe : BEWeapon {
	BEWindAxe() : base() {
		$this.Name          = 'Wind Axe'
		$this.MapObjName    = 'windaxe'
		$this.PurchasePrice = 920
		$this.SellPrice     = 460
		$this.TargetStats   = @{
			[StatId]::Attack      = 54
			[StatId]::MagicAttack = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe that cuts through the air with ease, creating gusts of wind.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERuneStaff : BEWeapon {
	BERuneStaff() : base() {
		$this.Name          = 'Rune Staff'
		$this.MapObjName    = 'runestaff'
		$this.PurchasePrice = 880
		$this.SellPrice     = 440
		$this.TargetStats   = @{
			[StatId]::Attack      = 8
			[StatId]::MagicAttack = 52
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff inscribed with ancient runes, enhancing spellcasting.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELightbringer : BEWeapon {
	BELightbringer() : base() {
		$this.Name          = 'Lightbringer'
		$this.MapObjName    = 'lightbringer'
		$this.PurchasePrice = 1050
		$this.SellPrice     = 525
		$this.TargetStats   = @{
			[StatId]::Attack      = 55
			[StatId]::MagicAttack = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that glows with holy light, banishing darkness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDarknessBow : BEWeapon {
	BEDarknessBow() : base() {
		$this.Name          = 'Darkness Bow'
		$this.MapObjName    = 'darknessbow'
		$this.PurchasePrice = 980
		$this.SellPrice     = 490
		$this.TargetStats   = @{
			[StatId]::Attack      = 52
			[StatId]::MagicAttack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow that fires arrows of pure shadow, obscuring vision.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEmeraldRod : BEWeapon {
	BEEmeraldRod() : base() {
		$this.Name          = 'Emerald Rod'
		$this.MapObjName    = 'emeraldrod'
		$this.PurchasePrice = 750
		$this.SellPrice     = 375
		$this.TargetStats   = @{
			[StatId]::Attack      = 10
			[StatId]::MagicAttack = 44
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rod adorned with a shimmering emerald, boosting earth magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPoisonedWhip : BEWeapon {
	BEPoisonedWhip() : base() {
		$this.Name          = 'Poisoned Whip'
		$this.MapObjName    = 'poisonedwhip'
		$this.PurchasePrice = 680
		$this.SellPrice     = 340
		$this.TargetStats   = @{
			[StatId]::Attack = 36
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A whip with a barbed tip, coated in a fast-acting poison.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpikedGauntlets : BEWeapon {
	BESpikedGauntlets() : base() {
		$this.Name          = 'Spiked Gauntlets'
		$this.MapObjName    = 'spikedgauntlets'
		$this.PurchasePrice = 850
		$this.SellPrice     = 425
		$this.TargetStats   = @{
			[StatId]::Attack = 51
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy gauntlets with protruding spikes, ideal for brutal close combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAetherBlade : BEWeapon {
	BEAetherBlade() : base() {
		$this.Name          = 'Aether Blade'
		$this.MapObjName    = 'aetherblade'
		$this.PurchasePrice = 1120
		$this.SellPrice     = 560
		$this.TargetStats   = @{
			[StatId]::Attack      = 59
			[StatId]::MagicAttack = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that hums with ethereal energy, able to phase through some defenses.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOceanScepter : BEWeapon {
	BEOceanScepter() : base() {
		$this.Name          = 'Ocean Scepter'
		$this.MapObjName    = 'oceanscepter'
		$this.PurchasePrice = 900
		$this.SellPrice     = 450
		$this.TargetStats   = @{
			[StatId]::Attack      = 12
			[StatId]::MagicAttack = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A scepter that can control water, summoning tidal waves.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhoenixBow : BEWeapon {
	BEPhoenixBow() : base() {
		$this.Name          = 'Phoenix Bow'
		$this.MapObjName    = 'phoenixbow'
		$this.PurchasePrice = 1250
		$this.SellPrice     = 625
		$this.TargetStats   = @{
			[StatId]::Attack      = 63
			[StatId]::MagicAttack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow adorned with phoenix feathers, allowing arrows to ignite upon impact.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGolemAxe : BEWeapon {
	BEGolemAxe() : base() {
		$this.Name          = 'Golem Axe'
		$this.MapObjName    = 'golemaxe'
		$this.PurchasePrice = 1020
		$this.SellPrice     = 510
		$this.TargetStats   = @{
			[StatId]::Attack = 61
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe designed to shatter stone and metal, incredibly heavy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEManaRod : BEWeapon {
	BEManaRod() : base() {
		$this.Name          = 'Mana Rod'
		$this.MapObjName    = 'manarod'
		$this.PurchasePrice = 600
		$this.SellPrice     = 300
		$this.TargetStats   = @{
			[StatId]::Attack      = 5
			[StatId]::MagicAttack = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple rod that helps regenerate mana.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamWeaverStaff : BEWeapon {
	BEDreamWeaverStaff() : base() {
		$this.Name          = 'Dream Weaver Staff'
		$this.MapObjName    = 'dreamweaverstaff'
		$this.PurchasePrice = 820
		$this.SellPrice     = 410
		$this.TargetStats   = @{
			[StatId]::Attack      = 6
			[StatId]::MagicAttack = 49
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that can induce sleep or vivid illusions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVampireSword : BEWeapon {
	BEVampireSword() : base() {
		$this.Name          = 'Vampire Sword'
		$this.MapObjName    = 'vampiresword'
		$this.PurchasePrice = 950
		$this.SellPrice     = 475
		$this.TargetStats   = @{
			[StatId]::Attack      = 48
			[StatId]::MagicAttack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that siphons health from enemies with each strike.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGuardianShield : BEWeapon {
	BEGuardianShield() : base() {
		$this.Name          = 'Guardian Shield'
		$this.MapObjName    = 'guardianshield'
		$this.PurchasePrice = 700
		$this.SellPrice     = 350
		$this.TargetStats   = @{
			[StatId]::Attack = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shield that can also be used as a blunt weapon.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMoonlightBow : BEWeapon {
	BEMoonlightBow() : base() {
		$this.Name          = 'Moonlight Bow'
		$this.MapObjName    = 'moonlightbow'
		$this.PurchasePrice = 1180
		$this.SellPrice     = 590
		$this.TargetStats   = @{
			[StatId]::Attack      = 60
			[StatId]::MagicAttack = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow that glows softly, guiding arrows even in darkness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunstoneStaff : BEWeapon {
	BESunstoneStaff() : base() {
		$this.Name          = 'Sunstone Staff'
		$this.MapObjName    = 'sunstonestaff'
		$this.PurchasePrice = 900
		$this.SellPrice     = 450
		$this.TargetStats   = @{
			[StatId]::Attack      = 10
			[StatId]::MagicAttack = 53
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff topped with a radiant sunstone, bolstering healing spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETitanAxe : BEWeapon {
	BETitanAxe() : base() {
		$this.Name          = 'Titan Axe'
		$this.MapObjName    = 'titanaxe'
		$this.PurchasePrice = 1300
		$this.SellPrice     = 650
		$this.TargetStats   = @{
			[StatId]::Attack = 68
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A colossal axe, said to be wielded by giants.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiritBlade : BEWeapon {
	BESpiritBlade() : base() {
		$this.Name          = 'Spirit Blade'
		$this.MapObjName    = 'spiritblade'
		$this.PurchasePrice = 1080
		$this.SellPrice     = 540
		$this.TargetStats   = @{
			[StatId]::Attack      = 54
			[StatId]::MagicAttack = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that can harm incorporeal beings.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEExcalibur : BEWeapon {
	BEExcalibur() : base() {
		$this.Name          = 'Excalibur'
		$this.MapObjName    = 'excalibur'
		$this.PurchasePrice = 5000
		$this.SellPrice     = 2500
		$this.TargetStats   = @{
			[StatId]::Attack      = 120
			[StatId]::MagicAttack = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A legendary sword said to be forged by the gods, grants immense power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGungnir : BEWeapon {
	BEGungnir() : base() {
		$this.Name          = 'Gungnir'
		$this.MapObjName    = 'gungnir'
		$this.PurchasePrice = 4800
		$this.SellPrice     = 2400
		$this.TargetStats   = @{
			[StatId]::Attack      = 115
			[StatId]::MagicAttack = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A divine spear that never misses its target, piercing any defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMjolnir : BEWeapon {
	BEMjolnir() : base() {
		$this.Name          = 'Mjolnir'
		$this.MapObjName    = 'mjolnir'
		$this.PurchasePrice = 5200
		$this.SellPrice     = 2600
		$this.TargetStats   = @{
			[StatId]::Attack      = 130
			[StatId]::MagicAttack = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A mythical hammer that calls down lightning, only wieldable by the worthy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMasamune : BEWeapon {
	BEMasamune() : base() {
		$this.Name          = 'Masamune'
		$this.MapObjName    = 'masamune'
		$this.PurchasePrice = 4500
		$this.SellPrice     = 2250
		$this.TargetStats   = @{
			[StatId]::Attack      = 110
			[StatId]::MagicAttack = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A katana of unparalleled sharpness, whispered to be cursed.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAsclepius : BEWeapon {
	BEAsclepius() : base() {
		$this.Name          = 'Asclepius'
		$this.MapObjName    = 'asclepius'
		$this.PurchasePrice = 4000
		$this.SellPrice     = 2000
		$this.TargetStats   = @{
			[StatId]::Attack      = 20
			[StatId]::MagicAttack = 100
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff with healing powers, capable of curing all ailments.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEYewBow : BEWeapon {
	BEYewBow() : base() {
		$this.Name          = 'Yew Bow'
		$this.MapObjName    = 'yewbow'
		$this.PurchasePrice = 4200
		$this.SellPrice     = 2100
		$this.TargetStats   = @{
			[StatId]::Attack      = 105
			[StatId]::MagicAttack = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow carved from ancient yew, its arrows seek out vital points.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAegisShield : BEWeapon {
	BEAegisShield() : base() {
		$this.Name          = 'Aegis Shield'
		$this.MapObjName    = 'aegisshield'
		$this.PurchasePrice = 3500
		$this.SellPrice     = 1750
		$this.TargetStats   = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A divine shield that reflects all magical attacks.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEValhallaAxe : BEWeapon {
	BEValhallaAxe() : base() {
		$this.Name          = 'Valhalla Axe'
		$this.MapObjName    = 'valhallaaxe'
		$this.PurchasePrice = 4700
		$this.SellPrice     = 2350
		$this.TargetStats   = @{
			[StatId]::Attack      = 125
			[StatId]::MagicAttack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe that sings in battle, inspiring allies and striking fear into foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulEdge : BEWeapon {
	BESoulEdge() : base() {
		$this.Name          = 'Soul Edge'
		$this.MapObjName    = 'souledge'
		$this.PurchasePrice = 4900
		$this.SellPrice     = 2450
		$this.TargetStats   = @{
			[StatId]::Attack = 140
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cursed sword that feeds on the wielder''s soul, but grants incredible power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonClaw : BEWeapon {
	BEDragonClaw() : base() {
		$this.Name          = 'Dragon Claw'
		$this.MapObjName    = 'dragonclaw'
		$this.PurchasePrice = 4600
		$this.SellPrice     = 2300
		$this.TargetStats   = @{
			[StatId]::Attack = 118
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A gauntlet designed to mimic a dragon''s claw, crushing foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERuneblade : BEWeapon {
	BERuneblade() : base() {
		$this.Name          = 'Runeblade'
		$this.MapObjName    = 'runeblade'
		$this.PurchasePrice = 3800
		$this.SellPrice     = 1900
		$this.TargetStats   = @{
			[StatId]::Attack      = 90
			[StatId]::MagicAttack = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword inscribed with powerful runes, dealing elemental damage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOrbofSouls : BEWeapon {
	BEOrbofSouls() : base() {
		$this.Name          = 'Orb of Souls'
		$this.MapObjName    = 'orbofsouls'
		$this.PurchasePrice = 3600
		$this.SellPrice     = 1800
		$this.TargetStats   = @{
			[StatId]::Attack      = 10
			[StatId]::MagicAttack = 90
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An orb that can summon spirits to aid in battle.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChaosBow : BEWeapon {
	BEChaosBow() : base() {
		$this.Name          = 'Chaos Bow'
		$this.MapObjName    = 'chaosbow'
		$this.PurchasePrice = 4000
		$this.SellPrice     = 2000
		$this.TargetStats   = @{
			[StatId]::Attack      = 95
			[StatId]::MagicAttack = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow that fires unpredictable magical arrows, sometimes devastating.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWorldBreaker : BEWeapon {
	BEWorldBreaker() : base() {
		$this.Name          = 'World Breaker'
		$this.MapObjName    = 'worldbreaker'
		$this.PurchasePrice = 5500
		$this.SellPrice     = 2750
		$this.TargetStats   = @{
			[StatId]::Attack = 150
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A colossal hammer said to shatter mountains.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEtherealStaff : BEWeapon {
	BEEtherealStaff() : base() {
		$this.Name          = 'Ethereal Staff'
		$this.MapObjName    = 'etherealstaff'
		$this.PurchasePrice = 4300
		$this.SellPrice     = 2150
		$this.TargetStats   = @{
			[StatId]::Attack      = 15
			[StatId]::MagicAttack = 110
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff made of pure arcane energy, granting mastery over magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhoenixFeatherDagger : BEWeapon {
	BEPhoenixFeatherDagger() : base() {
		$this.Name          = 'Phoenix Feather Dagger'
		$this.MapObjName    = 'phoenixfeatherdagger'
		$this.PurchasePrice = 3900
		$this.SellPrice     = 1950
		$this.TargetStats   = @{
			[StatId]::Attack      = 90
			[StatId]::MagicAttack = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dagger made with a phoenix feather, allowing revival once per battle.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGravityAxe : BEWeapon {
	BEGravityAxe() : base() {
		$this.Name          = 'Gravity Axe'
		$this.MapObjName    = 'gravityaxe'
		$this.PurchasePrice = 4400
		$this.SellPrice     = 2200
		$this.TargetStats   = @{
			[StatId]::Attack      = 110
			[StatId]::MagicAttack = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe that can manipulate gravity, crushing enemies under immense weight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamcatcherStaff : BEWeapon {
	BEDreamcatcherStaff() : base() {
		$this.Name          = 'Dreamcatcher Staff'
		$this.MapObjName    = 'dreamcatcherstaff'
		$this.PurchasePrice = 3700
		$this.SellPrice     = 1850
		$this.TargetStats   = @{
			[StatId]::Attack      = 10
			[StatId]::MagicAttack = 85
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that can put enemies into a deep sleep or manipulate their dreams.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHolyAvenger : BEWeapon {
	BEHolyAvenger() : base() {
		$this.Name          = 'Holy Avenger'
		$this.MapObjName    = 'holyavenger'
		$this.PurchasePrice = 4100
		$this.SellPrice     = 2050
		$this.TargetStats   = @{
			[StatId]::Attack      = 100
			[StatId]::MagicAttack = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that blazes with holy light, dealing extra damage to undead and demons.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStormbringer : BEWeapon {
	BEStormbringer() : base() {
		$this.Name          = 'Stormbringer'
		$this.MapObjName    = 'stormbringer'
		$this.PurchasePrice = 4300
		$this.SellPrice     = 2150
		$this.TargetStats   = @{
			[StatId]::Attack      = 105
			[StatId]::MagicAttack = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that can summon gusts of wind and lightning.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunforgedBlade : BEWeapon {
	BESunforgedBlade() : base() {
		$this.Name          = 'Sunforged Blade'
		$this.MapObjName    = 'sunforgedblade'
		$this.PurchasePrice = 4200
		$this.SellPrice     = 2100
		$this.TargetStats   = @{
			[StatId]::Attack      = 102
			[StatId]::MagicAttack = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword crafted in the heart of a volcano, radiating immense heat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMoonpetalBow : BEWeapon {
	BEMoonpetalBow() : base() {
		$this.Name          = 'Moonpetal Bow'
		$this.MapObjName    = 'moonpetalbow'
		$this.PurchasePrice = 3900
		$this.SellPrice     = 1950
		$this.TargetStats   = @{
			[StatId]::Attack      = 98
			[StatId]::MagicAttack = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow strung with moonpetal fibers, firing arrows of pure moonlight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChronoStaff : BEWeapon {
	BEChronoStaff() : base() {
		$this.Name          = 'Chrono Staff'
		$this.MapObjName    = 'chronostaff'
		$this.PurchasePrice = 4500
		$this.SellPrice     = 2250
		$this.TargetStats   = @{
			[StatId]::Attack      = 18
			[StatId]::MagicAttack = 120
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that can manipulate time, slowing enemies or speeding up allies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonboneAxe : BEWeapon {
	BEDragonboneAxe() : base() {
		$this.Name          = 'Dragonbone Axe'
		$this.MapObjName    = 'dragonboneaxe'
		$this.PurchasePrice = 4600
		$this.SellPrice     = 2300
		$this.TargetStats   = @{
			[StatId]::Attack = 112
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe made from the bone of an ancient dragon, incredibly durable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarfallRod : BEWeapon {
	BEStarfallRod() : base() {
		$this.Name          = 'Starfall Rod'
		$this.MapObjName    = 'starfallrod'
		$this.PurchasePrice = 4700
		$this.SellPrice     = 2350
		$this.TargetStats   = @{
			[StatId]::Attack      = 25
			[StatId]::MagicAttack = 130
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rod that can call down meteors from the sky.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidwalkerBlade : BEWeapon {
	BEVoidwalkerBlade() : base() {
		$this.Name          = 'Voidwalker Blade'
		$this.MapObjName    = 'voidwalkerblade'
		$this.PurchasePrice = 4000
		$this.SellPrice     = 2000
		$this.TargetStats   = @{
			[StatId]::Attack      = 95
			[StatId]::MagicAttack = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that allows the wielder to briefly teleport.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWhisperwindBow : BEWeapon {
	BEWhisperwindBow() : base() {
		$this.Name          = 'Whisperwind Bow'
		$this.MapObjName    = 'whisperwindbow'
		$this.PurchasePrice = 3800
		$this.SellPrice     = 1900
		$this.TargetStats   = @{
			[StatId]::Attack      = 92
			[StatId]::MagicAttack = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow whose arrows are carried by invisible winds, striking silently.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEmberStaff : BEWeapon {
	BEEmberStaff() : base() {
		$this.Name          = 'Ember Staff'
		$this.MapObjName    = 'emberstaff'
		$this.PurchasePrice = 3700
		$this.SellPrice     = 1850
		$this.TargetStats   = @{
			[StatId]::Attack      = 12
			[StatId]::MagicAttack = 88
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff constantly aglow with embers, dealing fire damage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlacialBlade : BEWeapon {
	BEGlacialBlade() : base() {
		$this.Name          = 'Glacial Blade'
		$this.MapObjName    = 'glacialblade'
		$this.PurchasePrice = 4100
		$this.SellPrice     = 2050
		$this.TargetStats   = @{
			[StatId]::Attack      = 100
			[StatId]::MagicAttack = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that emanates freezing cold, slowing and chilling enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETempestSpear : BEWeapon {
	BETempestSpear() : base() {
		$this.Name          = 'Tempest Spear'
		$this.MapObjName    = 'tempestspear'
		$this.PurchasePrice = 3900
		$this.SellPrice     = 1950
		$this.TargetStats   = @{
			[StatId]::Attack      = 98
			[StatId]::MagicAttack = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A spear that can conjure small whirlwinds.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOraclesStaff : BEWeapon {
	BEOraclesStaff() : base() {
		$this.Name          = 'Oracle''s Staff'
		$this.MapObjName    = 'oraclesstaff'
		$this.PurchasePrice = 4200
		$this.SellPrice     = 2100
		$this.TargetStats   = @{
			[StatId]::Attack      = 15
			[StatId]::MagicAttack = 105
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that grants glimpses of the future, aiding in critical hits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInfernoAxe : BEWeapon {
	BEInfernoAxe() : base() {
		$this.Name          = 'Inferno Axe'
		$this.MapObjName    = 'infernoaxe'
		$this.PurchasePrice = 4800
		$this.SellPrice     = 2400
		$this.TargetStats   = @{
			[StatId]::Attack      = 120
			[StatId]::MagicAttack = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe wreathed in eternal flames, burning all it touches.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowfangDagger : BEWeapon {
	BEShadowfangDagger() : base() {
		$this.Name          = 'Shadowfang Dagger'
		$this.MapObjName    = 'shadowfangdagger'
		$this.PurchasePrice = 3500
		$this.SellPrice     = 1750
		$this.TargetStats   = @{
			[StatId]::Attack      = 85
			[StatId]::MagicAttack = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dagger that drains shadows from enemies, making them vulnerable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAuraBlade : BEWeapon {
	BEAuraBlade() : base() {
		$this.Name          = 'Aura Blade'
		$this.MapObjName    = 'aurablade'
		$this.PurchasePrice = 4400
		$this.SellPrice     = 2200
		$this.TargetStats   = @{
			[StatId]::Attack      = 108
			[StatId]::MagicAttack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that projects a protective aura, reducing incoming damage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulbinderStaff : BEWeapon {
	BESoulbinderStaff() : base() {
		$this.Name          = 'Soulbinder Staff'
		$this.MapObjName    = 'soulbinderstaff'
		$this.PurchasePrice = 4600
		$this.SellPrice     = 2300
		$this.TargetStats   = @{
			[StatId]::Attack      = 18
			[StatId]::MagicAttack = 115
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that can temporarily bind an enemy''s soul, preventing actions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThunderclapHammer : BEWeapon {
	BEThunderclapHammer() : base() {
		$this.Name          = 'Thunderclap Hammer'
		$this.MapObjName    = 'thunderclaphammer'
		$this.PurchasePrice = 4900
		$this.SellPrice     = 2450
		$this.TargetStats   = @{
			[StatId]::Attack      = 128
			[StatId]::MagicAttack = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hammer that emits a concussive shockwave upon impact.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEmeraldBow : BEWeapon {
	BEEmeraldBow() : base() {
		$this.Name          = 'Emerald Bow'
		$this.MapObjName    = 'emeraldbow'
		$this.PurchasePrice = 4100
		$this.SellPrice     = 2050
		$this.TargetStats   = @{
			[StatId]::Attack      = 102
			[StatId]::MagicAttack = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow adorned with gleaming emeralds, increasing precision.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrimsonScythe : BEWeapon {
	BECrimsonScythe() : base() {
		$this.Name          = 'Crimson Scythe'
		$this.MapObjName    = 'crimsonscythe'
		$this.PurchasePrice = 4700
		$this.SellPrice     = 2350
		$this.TargetStats   = @{
			[StatId]::Attack      = 115
			[StatId]::MagicAttack = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A scythe stained crimson, rumored to drink blood.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZephyrBow : BEWeapon {
	BEZephyrBow() : base() {
		$this.Name          = 'Zephyr Bow'
		$this.MapObjName    = 'zephyrbow'
		$this.PurchasePrice = 4300
		$this.SellPrice     = 2150
		$this.TargetStats   = @{
			[StatId]::Attack      = 105
			[StatId]::MagicAttack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow that allows arrows to travel at incredible speeds, almost instantly.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneGolemHammer : BEWeapon {
	BEStoneGolemHammer() : base() {
		$this.Name          = 'Stone Golem Hammer'
		$this.MapObjName    = 'stonegolemhammer'
		$this.PurchasePrice = 5000
		$this.SellPrice     = 2500
		$this.TargetStats   = @{
			[StatId]::Attack = 135
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A massive hammer crafted from a golem''s remains, incredibly heavy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarfallStaff : BEWeapon {
	BEStarfallStaff() : base() {
		$this.Name          = 'Starfall Staff'
		$this.MapObjName    = 'starfallstaff'
		$this.PurchasePrice = 4800
		$this.SellPrice     = 2400
		$this.TargetStats   = @{
			[StatId]::Attack      = 22
			[StatId]::MagicAttack = 125
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that can call down small celestial bodies, dealing area damage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAbyssalBlade : BEWeapon {
	BEAbyssalBlade() : base() {
		$this.Name          = 'Abyssal Blade'
		$this.MapObjName    = 'abyssalblade'
		$this.PurchasePrice = 4500
		$this.SellPrice     = 2250
		$this.TargetStats   = @{
			[StatId]::Attack      = 110
			[StatId]::MagicAttack = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword from the depths of the abyss, dealing dark damage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESeraphicBlade : BEWeapon {
	BESeraphicBlade() : base() {
		$this.Name          = 'Seraphic Blade'
		$this.MapObjName    = 'seraphicblade'
		$this.PurchasePrice = 4900
		$this.SellPrice     = 2450
		$this.TargetStats   = @{
			[StatId]::Attack      = 118
			[StatId]::MagicAttack = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword of celestial origin, imbued with divine light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInfernalAxe : BEWeapon {
	BEInfernalAxe() : base() {
		$this.Name          = 'Infernal Axe'
		$this.MapObjName    = 'infernalaxe'
		$this.PurchasePrice = 5100
		$this.SellPrice     = 2550
		$this.TargetStats   = @{
			[StatId]::Attack      = 130
			[StatId]::MagicAttack = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe burning with hellfire, capable of melting armor.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVortexStaff : BEWeapon {
	BEVortexStaff() : base() {
		$this.Name          = 'Vortex Staff'
		$this.MapObjName    = 'vortexstaff'
		$this.PurchasePrice = 4400
		$this.SellPrice     = 2200
		$this.TargetStats   = @{
			[StatId]::Attack      = 20
			[StatId]::MagicAttack = 110
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that can create small localized vortices, pulling enemies in.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGolemSlayer : BEWeapon {
	BEGolemSlayer() : base() {
		$this.Name          = 'Golem Slayer'
		$this.MapObjName    = 'golemslayer'
		$this.PurchasePrice = 3600
		$this.SellPrice     = 1800
		$this.TargetStats   = @{
			[StatId]::Attack = 90
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A specialized weapon designed to destroy constructs and golems.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivineRod : BEWeapon {
	BEDivineRod() : base() {
		$this.Name          = 'Divine Rod'
		$this.MapObjName    = 'divinerod'
		$this.PurchasePrice = 3800
		$this.SellPrice     = 1900
		$this.TargetStats   = @{
			[StatId]::Attack      = 10
			[StatId]::MagicAttack = 95
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rod imbued with holy power, granting blessings to allies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBehemothClub : BEWeapon {
	BEBehemothClub() : base() {
		$this.Name          = 'Behemoth Club'
		$this.MapObjName    = 'behemothclub'
		$this.PurchasePrice = 5200
		$this.SellPrice     = 2600
		$this.TargetStats   = @{
			[StatId]::Attack = 145
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A gigantic club, requiring immense strength to wield.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulrend : BEWeapon {
	BESoulrend() : base() {
		$this.Name          = 'Soulrend'
		$this.MapObjName    = 'soulrend'
		$this.PurchasePrice = 5300
		$this.SellPrice     = 2650
		$this.TargetStats   = @{
			[StatId]::Attack      = 138
			[StatId]::MagicAttack = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that tears at the very fabric of an enemy''s being.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGrimoireStaff : BEWeapon {
	BEGrimoireStaff() : base() {
		$this.Name          = 'Grimoire Staff'
		$this.MapObjName    = 'grimoirestaff'
		$this.PurchasePrice = 5000
		$this.SellPrice     = 2500
		$this.TargetStats   = @{
			[StatId]::Attack      = 25
			[StatId]::MagicAttack = 140
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff with an attached grimoire, granting access to powerful spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArcaneScepter : BEWeapon {
	BEArcaneScepter() : base() {
		$this.Name          = 'Arcane Scepter'
		$this.MapObjName    = 'arcanescepter'
		$this.PurchasePrice = 5500
		$this.SellPrice     = 2750
		$this.TargetStats   = @{
			[StatId]::Attack      = 30
			[StatId]::MagicAttack = 150
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A scepter humming with raw arcane energy, amplifying all spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBladeofAges : BEWeapon {
	BEBladeofAges() : base() {
		$this.Name          = 'Blade of Ages'
		$this.MapObjName    = 'bladeofages'
		$this.PurchasePrice = 5800
		$this.SellPrice     = 2900
		$this.TargetStats   = @{
			[StatId]::Attack      = 140
			[StatId]::MagicAttack = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword said to have witnessed the dawn of time, granting wisdom.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWorldTreeBow : BEWeapon {
	BEWorldTreeBow() : base() {
		$this.Name          = 'World Tree Bow'
		$this.MapObjName    = 'worldtreebow'
		$this.PurchasePrice = 6000
		$this.SellPrice     = 3000
		$this.TargetStats   = @{
			[StatId]::Attack      = 130
			[StatId]::MagicAttack = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow carved from a branch of the World Tree, its arrows carry life energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonheartAxe : BEWeapon {
	BEDragonheartAxe() : base() {
		$this.Name          = 'Dragonheart Axe'
		$this.MapObjName    = 'dragonheartaxe'
		$this.PurchasePrice = 6200
		$this.SellPrice     = 3100
		$this.TargetStats   = @{
			[StatId]::Attack      = 155
			[StatId]::MagicAttack = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe embedded with a dragon''s heart, pulsating with power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStaffofCreation : BEWeapon {
	BEStaffofCreation() : base() {
		$this.Name          = 'Staff of Creation'
		$this.MapObjName    = 'staffofcreation'
		$this.PurchasePrice = 5700
		$this.SellPrice     = 2850
		$this.TargetStats   = @{
			[StatId]::Attack      = 35
			[StatId]::MagicAttack = 160
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff capable of minor creation, shaping the environment.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarforgedSword : BEWeapon {
	BEStarforgedSword() : base() {
		$this.Name          = 'Starforged Sword'
		$this.MapObjName    = 'starforgedsword'
		$this.PurchasePrice = 6100
		$this.SellPrice     = 3050
		$this.TargetStats   = @{
			[StatId]::Attack      = 145
			[StatId]::MagicAttack = 70
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword forged from a fallen star, shimmering with cosmic energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhoenixAshDagger : BEWeapon {
	BEPhoenixAshDagger() : base() {
		$this.Name          = 'Phoenix Ash Dagger'
		$this.MapObjName    = 'phoenixashdagger'
		$this.PurchasePrice = 5400
		$this.SellPrice     = 2700
		$this.TargetStats   = @{
			[StatId]::Attack      = 125
			[StatId]::MagicAttack = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dagger made from the ashes of a phoenix, capable of burning foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHammerofJudgment : BEWeapon {
	BEHammerofJudgment() : base() {
		$this.Name          = 'Hammer of Judgment'
		$this.MapObjName    = 'hammerofjudgment'
		$this.PurchasePrice = 6300
		$this.SellPrice     = 3150
		$this.TargetStats   = @{
			[StatId]::Attack      = 165
			[StatId]::MagicAttack = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A colossal hammer that delivers righteous judgment, capable of stunning.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEternitysEmbrace : BEWeapon {
	BEEternitysEmbrace() : base() {
		$this.Name          = 'Eternity''s Embrace'
		$this.MapObjName    = 'eternitysembrace'
		$this.PurchasePrice = 5900
		$this.SellPrice     = 2950
		$this.TargetStats   = @{
			[StatId]::Attack      = 40
			[StatId]::MagicAttack = 170
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that can briefly halt the flow of time around the wielder.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulflameScythe : BEWeapon {
	BESoulflameScythe() : base() {
		$this.Name          = 'Soulflame Scythe'
		$this.MapObjName    = 'soulflamescythe'
		$this.PurchasePrice = 6500
		$this.SellPrice     = 3250
		$this.TargetStats   = @{
			[StatId]::Attack      = 150
			[StatId]::MagicAttack = 80
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A scythe that burns with an ethereal flame, consuming enemy souls.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECelestialBow : BEWeapon {
	BECelestialBow() : base() {
		$this.Name          = 'Celestial Bow'
		$this.MapObjName    = 'celestialbow'
		$this.PurchasePrice = 6400
		$this.SellPrice     = 3200
		$this.TargetStats   = @{
			[StatId]::Attack      = 135
			[StatId]::MagicAttack = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow that fires arrows of pure starlight, illuminating and striking foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAbyssalStaff : BEWeapon {
	BEAbyssalStaff() : base() {
		$this.Name          = 'Abyssal Staff'
		$this.MapObjName    = 'abyssalstaff'
		$this.PurchasePrice = 5600
		$this.SellPrice     = 2800
		$this.TargetStats   = @{
			[StatId]::Attack      = 32
			[StatId]::MagicAttack = 155
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that channels dark energies from the abyss, powerful but corrupting.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonsRoarAxe : BEWeapon {
	BEDragonsRoarAxe() : base() {
		$this.Name          = 'Dragon''s Roar Axe'
		$this.MapObjName    = 'dragonsroaraxe'
		$this.PurchasePrice = 6000
		$this.SellPrice     = 3000
		$this.TargetStats   = @{
			[StatId]::Attack      = 148
			[StatId]::MagicAttack = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe that can unleash a sonic roar, disorienting enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELightweaveBlade : BEWeapon {
	BELightweaveBlade() : base() {
		$this.Name          = 'Lightweave Blade'
		$this.MapObjName    = 'lightweaveblade'
		$this.PurchasePrice = 5700
		$this.SellPrice     = 2850
		$this.TargetStats   = @{
			[StatId]::Attack      = 138
			[StatId]::MagicAttack = 65
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword woven from pure light, incredibly fast and precise.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDoomBringer : BEWeapon {
	BEDoomBringer() : base() {
		$this.Name          = 'Doom Bringer'
		$this.MapObjName    = 'doombringer'
		$this.PurchasePrice = 6600
		$this.SellPrice     = 3300
		$this.TargetStats   = @{
			[StatId]::Attack = 170
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A terrifying weapon that instills fear and despair in all who face it.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiritKingsStaff : BEWeapon {
	BESpiritKingsStaff() : base() {
		$this.Name          = 'Spirit King''s Staff'
		$this.MapObjName    = 'spiritkingsstaff'
		$this.PurchasePrice = 6200
		$this.SellPrice     = 3100
		$this.TargetStats   = @{
			[StatId]::Attack      = 45
			[StatId]::MagicAttack = 175
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff once wielded by a king of spirits, commanding spectral allies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBladeofRuin : BEWeapon {
	BEBladeofRuin() : base() {
		$this.Name          = 'Blade of Ruin'
		$this.MapObjName    = 'bladeofruin'
		$this.PurchasePrice = 6800
		$this.SellPrice     = 3400
		$this.TargetStats   = @{
			[StatId]::Attack      = 160
			[StatId]::MagicAttack = 75
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that leaves destruction in its wake, shattering defenses.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThousandCutsDagger : BEWeapon {
	BEThousandCutsDagger() : base() {
		$this.Name          = 'Thousand Cuts Dagger'
		$this.MapObjName    = 'thousandcutsdagger'
		$this.PurchasePrice = 5300
		$this.SellPrice     = 2650
		$this.TargetStats   = @{
			[StatId]::Attack      = 120
			[StatId]::MagicAttack = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dagger so sharp it feels like a thousand blades at once.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHammeroftheAncients : BEWeapon {
	BEHammeroftheAncients() : base() {
		$this.Name          = 'Hammer of the Ancients'
		$this.MapObjName    = 'hammeroftheancients'
		$this.PurchasePrice = 6700
		$this.SellPrice     = 3350
		$this.TargetStats   = @{
			[StatId]::Attack      = 175
			[StatId]::MagicAttack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A prehistoric hammer of immense power, vibrating with ancient magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWorldEnder : BEWeapon {
	BEWorldEnder() : base() {
		$this.Name          = 'World Ender'
		$this.MapObjName    = 'worldender'
		$this.PurchasePrice = 7000
		$this.SellPrice     = 3500
		$this.TargetStats   = @{
			[StatId]::Attack      = 200
			[StatId]::MagicAttack = 100
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A legendary weapon capable of cataclysmic destruction, forbidden to wield.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunstoneBow : BEWeapon {
	BESunstoneBow() : base() {
		$this.Name          = 'Sunstone Bow'
		$this.MapObjName    = 'sunstonebow'
		$this.PurchasePrice = 5800
		$this.SellPrice     = 2900
		$this.TargetStats   = @{
			[StatId]::Attack      = 128
			[StatId]::MagicAttack = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow that gathers solar energy, firing explosive arrows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidEdge : BEWeapon {
	BEVoidEdge() : base() {
		$this.Name          = 'Void Edge'
		$this.MapObjName    = 'voidedge'
		$this.PurchasePrice = 5900
		$this.SellPrice     = 2950
		$this.TargetStats   = @{
			[StatId]::Attack      = 142
			[StatId]::MagicAttack = 68
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A blade that tears open small rifts in space, causing disorientation.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStaffoftheCosmos : BEWeapon {
	BEStaffoftheCosmos() : base() {
		$this.Name          = 'Staff of the Cosmos'
		$this.MapObjName    = 'staffofthecosmos'
		$this.PurchasePrice = 6300
		$this.SellPrice     = 3150
		$this.TargetStats   = @{
			[StatId]::Attack      = 48
			[StatId]::MagicAttack = 180
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that channels cosmic energies, capable of summoning minor celestial events.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonsToothSword : BEWeapon {
	BEDragonsToothSword() : base() {
		$this.Name          = 'Dragon''s Tooth Sword'
		$this.MapObjName    = 'dragonstoothsword'
		$this.PurchasePrice = 6500
		$this.SellPrice     = 3250
		$this.TargetStats   = @{
			[StatId]::Attack      = 152
			[StatId]::MagicAttack = 72
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword fashioned from a dragon''s tooth, incredibly sharp and resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENetherblade : BEWeapon {
	BENetherblade() : base() {
		$this.Name          = 'Netherblade'
		$this.MapObjName    = 'netherblade'
		$this.PurchasePrice = 6700
		$this.SellPrice     = 3350
		$this.TargetStats   = @{
			[StatId]::Attack      = 160
			[StatId]::MagicAttack = 85
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword forged in the nether, dealing immense fire and shadow damage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStormforgedAxe : BEWeapon {
	BEStormforgedAxe() : base() {
		$this.Name          = 'Stormforged Axe'
		$this.MapObjName    = 'stormforgedaxe'
		$this.PurchasePrice = 6100
		$this.SellPrice     = 3050
		$this.TargetStats   = @{
			[StatId]::Attack      = 150
			[StatId]::MagicAttack = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe crackling with electricity, capable of calling down lightning.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulreaverStaff : BEWeapon {
	BESoulreaverStaff() : base() {
		$this.Name          = 'Soulreaver Staff'
		$this.MapObjName    = 'soulreaverstaff'
		$this.PurchasePrice = 6400
		$this.SellPrice     = 3200
		$this.TargetStats   = @{
			[StatId]::Attack      = 50
			[StatId]::MagicAttack = 190
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that rips souls from bodies, draining life force.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhoenixFireSword : BEWeapon {
	BEPhoenixFireSword() : base() {
		$this.Name          = 'Phoenix Fire Sword'
		$this.MapObjName    = 'phoenixfiresword'
		$this.PurchasePrice = 6600
		$this.SellPrice     = 3300
		$this.TargetStats   = @{
			[StatId]::Attack      = 155
			[StatId]::MagicAttack = 78
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that perpetually burns with phoenix fire, igniting foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlazeofGloryBow : BEWeapon {
	BEBlazeofGloryBow() : base() {
		$this.Name          = 'Blaze of Glory Bow'
		$this.MapObjName    = 'blazeofglorybow'
		$this.PurchasePrice = 5700
		$this.SellPrice     = 2850
		$this.TargetStats   = @{
			[StatId]::Attack      = 125
			[StatId]::MagicAttack = 48
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow that sets arrows aflame, creating a trail of fire.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWintersChillStaff : BEWeapon {
	BEWintersChillStaff() : base() {
		$this.Name          = 'Winter''s Chill Staff'
		$this.MapObjName    = 'winterschillstaff'
		$this.PurchasePrice = 6000
		$this.SellPrice     = 3000
		$this.TargetStats   = @{
			[StatId]::Attack      = 42
			[StatId]::MagicAttack = 165
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that freezes anything it touches, creating icy blasts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHammerofCreation : BEWeapon {
	BEHammerofCreation() : base() {
		$this.Name          = 'Hammer of Creation'
		$this.MapObjName    = 'hammerofcreation'
		$this.PurchasePrice = 6900
		$this.SellPrice     = 3450
		$this.TargetStats   = @{
			[StatId]::Attack      = 180
			[StatId]::MagicAttack = 90
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hammer said to have helped shape the world, capable of mending.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonsBane : BEWeapon {
	BEDragonsBane() : base() {
		$this.Name          = 'Dragon''s Bane'
		$this.MapObjName    = 'dragonsbane'
		$this.PurchasePrice = 6200
		$this.SellPrice     = 3100
		$this.TargetStats   = @{
			[StatId]::Attack      = 148
			[StatId]::MagicAttack = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword specifically designed to hunt and slay dragons.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWandoftheArchmage : BEWeapon {
	BEWandoftheArchmage() : base() {
		$this.Name          = 'Wand of the Archmage'
		$this.MapObjName    = 'wandofthearchmage'
		$this.PurchasePrice = 6800
		$this.SellPrice     = 3400
		$this.TargetStats   = @{
			[StatId]::Attack      = 55
			[StatId]::MagicAttack = 200
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A wand of immense power, reserved for only the most skilled mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAegisDefender : BEWeapon {
	BEAegisDefender() : base() {
		$this.Name          = 'Aegis Defender'
		$this.MapObjName    = 'aegisdefender'
		$this.PurchasePrice = 5500
		$this.SellPrice     = 2750
		$this.TargetStats   = @{
			[StatId]::Attack = 130
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A weaponized shield capable of powerful bash attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarcallerAxe : BEWeapon {
	BEStarcallerAxe() : base() {
		$this.Name          = 'Starcaller Axe'
		$this.MapObjName    = 'starcalleraxe'
		$this.PurchasePrice = 6300
		$this.SellPrice     = 3150
		$this.TargetStats   = @{
			[StatId]::Attack      = 150
			[StatId]::MagicAttack = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe that when swung creates small, sparkling constellations.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChronosBlade : BEWeapon {
	BEChronosBlade() : base() {
		$this.Name          = 'Chronos Blade'
		$this.MapObjName    = 'chronosblade'
		$this.PurchasePrice = 6500
		$this.SellPrice     = 3250
		$this.TargetStats   = @{
			[StatId]::Attack      = 158
			[StatId]::MagicAttack = 70
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A blade that can slightly alter the flow of time, granting extra attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulbinderBlade : BEWeapon {
	BESoulbinderBlade() : base() {
		$this.Name          = 'Soulbinder Blade'
		$this.MapObjName    = 'soulbinderblade'
		$this.PurchasePrice = 5800
		$this.SellPrice     = 2900
		$this.TargetStats   = @{
			[StatId]::Attack      = 135
			[StatId]::MagicAttack = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A blade that can temporarily bind an enemy''s movements.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESeraphimStaff : BEWeapon {
	BESeraphimStaff() : base() {
		$this.Name          = 'Seraphim Staff'
		$this.MapObjName    = 'seraphimstaff'
		$this.PurchasePrice = 6700
		$this.SellPrice     = 3350
		$this.TargetStats   = @{
			[StatId]::Attack      = 45
			[StatId]::MagicAttack = 195
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff of pure light, used for healing and banishing evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonfireBow : BEWeapon {
	BEDragonfireBow() : base() {
		$this.Name          = 'Dragonfire Bow'
		$this.MapObjName    = 'dragonfirebow'
		$this.PurchasePrice = 6000
		$this.SellPrice     = 3000
		$this.TargetStats   = @{
			[StatId]::Attack      = 132
			[StatId]::MagicAttack = 52
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow that imbues arrows with dragonfire, causing explosive impacts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFrostbiteAxe : BEWeapon {
	BEFrostbiteAxe() : base() {
		$this.Name          = 'Frostbite Axe'
		$this.MapObjName    = 'frostbiteaxe'
		$this.PurchasePrice = 6400
		$this.SellPrice     = 3200
		$this.TargetStats   = @{
			[StatId]::Attack      = 153
			[StatId]::MagicAttack = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe that inflicts severe frostbite, slowing enemies to a crawl.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWhisperoftheAncients : BEWeapon {
	BEWhisperoftheAncients() : base() {
		$this.Name          = 'Whisper of the Ancients'
		$this.MapObjName    = 'whisperoftheancients'
		$this.PurchasePrice = 5400
		$this.SellPrice     = 2700
		$this.TargetStats   = @{
			[StatId]::Attack      = 122
			[StatId]::MagicAttack = 46
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dagger that carries ancient whispers, confusing enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThunderfury : BEWeapon {
	BEThunderfury() : base() {
		$this.Name          = 'Thunderfury'
		$this.MapObjName    = 'thunderfury'
		$this.PurchasePrice = 6900
		$this.SellPrice     = 3450
		$this.TargetStats   = @{
			[StatId]::Attack      = 165
			[StatId]::MagicAttack = 80
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A legendary sword that roars with lightning, striking multiple foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAstralScepter : BEWeapon {
	BEAstralScepter() : base() {
		$this.Name          = 'Astral Scepter'
		$this.MapObjName    = 'astralscepter'
		$this.PurchasePrice = 6100
		$this.SellPrice     = 3050
		$this.TargetStats   = @{
			[StatId]::Attack      = 40
			[StatId]::MagicAttack = 170
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A scepter that can project astral forms, distracting enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivineRetribution : BEWeapon {
	BEDivineRetribution() : base() {
		$this.Name          = 'Divine Retribution'
		$this.MapObjName    = 'divineretribution'
		$this.PurchasePrice = 7000
		$this.SellPrice     = 3500
		$this.TargetStats   = @{
			[StatId]::Attack      = 170
			[StatId]::MagicAttack = 95
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A mace that delivers divine punishment, smiting the wicked.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEmberheartStaff : BEWeapon {
	BEEmberheartStaff() : base() {
		$this.Name          = 'Emberheart Staff'
		$this.MapObjName    = 'emberheartstaff'
		$this.PurchasePrice = 5600
		$this.SellPrice     = 2800
		$this.TargetStats   = @{
			[StatId]::Attack      = 30
			[StatId]::MagicAttack = 140
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff containing a burning ember, radiating warmth and minor fire magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETitansMight : BEWeapon {
	BETitansMight() : base() {
		$this.Name          = 'Titan''s Might'
		$this.MapObjName    = 'titansmight'
		$this.PurchasePrice = 6800
		$this.SellPrice     = 3400
		$this.TargetStats   = @{
			[StatId]::Attack = 185
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A massive two-handed weapon, only usable by those with immense strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECelestialHammer : BEWeapon {
	BECelestialHammer() : base() {
		$this.Name          = 'Celestial Hammer'
		$this.MapObjName    = 'celestialhammer'
		$this.PurchasePrice = 6600
		$this.SellPrice     = 3300
		$this.TargetStats   = @{
			[StatId]::Attack      = 160
			[StatId]::MagicAttack = 80
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hammer made from celestial ore, glowing with soft light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpectralBlade : BEWeapon {
	BESpectralBlade() : base() {
		$this.Name          = 'Spectral Blade'
		$this.MapObjName    = 'spectralblade'
		$this.PurchasePrice = 5900
		$this.SellPrice     = 2950
		$this.TargetStats   = @{
			[StatId]::Attack      = 140
			[StatId]::MagicAttack = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A blade that can pass through physical objects, harming spirits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHeartwoodStaff : BEWeapon {
	BEHeartwoodStaff() : base() {
		$this.Name          = 'Heartwood Staff'
		$this.MapObjName    = 'heartwoodstaff'
		$this.PurchasePrice = 6500
		$this.SellPrice     = 3250
		$this.TargetStats   = @{
			[StatId]::Attack      = 48
			[StatId]::MagicAttack = 185
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff carved from the heart of a living tree, deeply connected to nature.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInfinityIITurtleSword : BEWeapon {
    BEInfinityIITurtleSword() : base() {
        $this.Name               = 'Infinity II Turtle Sword'
        $this.MapObjName         = 'infinityiiturtsword'
        $this.PurchasePrice      = 750000
        $this.SellPrice          = 0
        $this.TargetStats        = @{
            [StatId]::Attack      = 240
            [StatId]::MagicAttack = 240
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'It spawns 6 turtles that help you, and stay with you.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
        $this.TargetGender       = [Gender]::Unisex
    }
}

Class BEBearSword : BEWeapon {
    BEBearSword() : base() {
        $this.Name               = 'Bear Sword'
        $this.MapObjName         = 'bearsword'
        $this.PurchasePrice      = 0
        $this.SellPrice          = 0
        $this.TargetStats        = @{
            [StatId]::Attack      = 999
            [StatId]::MagicAttack = 999
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'The ultimate in fuzzy offense.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
        $this.TargetGender       = [Gender]::Unisex
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# HELMETS
#
#//////////////////////////////////////////////////////////////////////////////

Class BELeatherCap : BEHelmet {
	BELeatherCap() : base() {
		$this.Name               = 'Leather Cap'
		$this.MapObjName         = 'leathercap'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple cap made from hardened leather, offering basic protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIronHelm : BEHelmet {
	BEIronHelm() : base() {
		$this.Name               = 'Iron Helm'
		$this.MapObjName         = 'ironhelm'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::Defense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy iron helmet, common among foot soldiers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESteelHelmet : BEHelmet {
	BESteelHelmet() : base() {
		$this.Name               = 'Steel Helmet'
		$this.MapObjName         = 'steelhelmet'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Forged from resilient steel, providing superior defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMythrilCoif : BEHelmet {
	BEMythrilCoif() : base() {
		$this.Name               = 'Mythril Coif'
		$this.MapObjName         = 'mythrilcoif'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A lightweight and strong coif made from mythril, favored by adventurers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonhideHelm : BEHelmet {
	BEDragonhideHelm() : base() {
		$this.Name               = 'Dragonhide Helm'
		$this.MapObjName         = 'dragonhidehelm'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crafted from the scales of a dragon, offering exceptional protection against fire.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrownofHeroes : BEHelmet {
	BECrownofHeroes() : base() {
		$this.Name               = 'Crown of Heroes'
		$this.MapObjName         = 'crownofheroes'
		$this.PurchasePrice      = 5000
		$this.SellPrice          = 2500
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A legendary crown worn by ancient heroes, said to inspire courage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERoyalCirclet : BEHelmet {
	BERoyalCirclet() : base() {
		$this.Name               = 'Royal Circlet'
		$this.MapObjName         = 'royalcirclet'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An elegant circlet adorned with jewels, worn by royalty.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWarriorsGreathelm : BEHelmet {
	BEWarriorsGreathelm() : base() {
		$this.Name               = 'Warrior''s Greathelm'
		$this.MapObjName         = 'warriorsgreathelm'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy greathelm designed for powerful warriors, offering maximum frontal defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEArchersHood : BEHelmet {
	BEArchersHood() : base() {
		$this.Name               = 'Archer''s Hood'
		$this.MapObjName         = 'archershood'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light hood that provides camouflage and enhances an archer''s precision.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMagesHat : BEHelmet {
	BEMagesHat() : base() {
		$this.Name               = 'Mage''s Hat'
		$this.MapObjName         = 'mageshat'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pointed hat worn by mages, rumored to amplify magical energies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHelmofWisdom : BEHelmet {
	BEHelmofWisdom() : base() {
		$this.Name               = 'Helm of Wisdom'
		$this.MapObjName         = 'helmofwisdom'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helmet imbued with ancient knowledge, boosting a mage''s intellect.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPaladinsHelm : BEHelmet {
	BEPaladinsHelm() : base() {
		$this.Name               = 'Paladin''s Helm'
		$this.MapObjName         = 'paladinshelm'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A gleaming helmet worn by holy warriors, radiating divine protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDarkKnightsVisor : BEHelmet {
	BEDarkKnightsVisor() : base() {
		$this.Name               = 'Dark Knight''s Visor'
		$this.MapObjName         = 'darkknightsvisor'
		$this.PurchasePrice      = 1750
		$this.SellPrice          = 875
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A menacing visor worn by dark knights, instilling fear in enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEThiefsBandana : BEHelmet {
	BEThiefsBandana() : base() {
		$this.Name               = 'Thief''s Bandana'
		$this.MapObjName         = 'thiefsbandana'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A discreet bandana that aids stealth and agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAssassinsCowl : BEHelmet {
	BEAssassinsCowl() : base() {
		$this.Name               = 'Assassin''s Cowl'
		$this.MapObjName         = 'assassinscowl'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark cowl that grants the wearer enhanced senses and deadly precision.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHuntersCap : BEHelmet {
	BEHuntersCap() : base() {
		$this.Name               = 'Hunter''s Cap'
		$this.MapObjName         = 'hunterscap'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{
			[StatId]::Defense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A practical cap for hunters, designed for wilderness survival.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBerserkersHeadpiece : BEHelmet {
	BEBerserkersHeadpiece() : base() {
		$this.Name               = 'Berserker''s Headpiece'
		$this.MapObjName         = 'berserkersheadpiece'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A brutal headpiece that amplifies a warrior''s raw strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGuardiansHelm : BEHelmet {
	BEGuardiansHelm() : base() {
		$this.Name               = 'Guardian''s Helm'
		$this.MapObjName         = 'guardianshelm'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy, defensive helmet worn by guardians, deflecting blows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHealersTiara : BEHelmet {
	BEHealersTiara() : base() {
		$this.Name               = 'Healer''s Tiara'
		$this.MapObjName         = 'healerstiara'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A delicate tiara that enhances healing spells and provides comfort.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEScholarsMortarboard : BEHelmet {
	BEScholarsMortarboard() : base() {
		$this.Name               = 'Scholar''s Mortarboard'
		$this.MapObjName         = 'scholarsmortarboard'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A traditional academic hat, said to improve focus and memory.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGladiatorsHelmet : BEHelmet {
	BEGladiatorsHelmet() : base() {
		$this.Name               = 'Gladiator''s Helmet'
		$this.MapObjName         = 'gladiatorshelmet'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A fearsome helmet worn by gladiators, designed for arena combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESorceresssVeil : BEHelmet {
	BESorceresssVeil() : base() {
		$this.Name               = 'Sorceress''s Veil'
		$this.MapObjName         = 'sorceresssveil'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A mysterious veil that conceals the wearer''s identity and enhances dark magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECrusadersHelm : BEHelmet {
	BECrusadersHelm() : base() {
		$this.Name               = 'Crusader''s Helm'
		$this.MapObjName         = 'crusadershelm'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cross-emblazoned helm worn by crusaders, symbolizing faith and might.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBarbariansSkullcap : BEHelmet {
	BEBarbariansSkullcap() : base() {
		$this.Name               = 'Barbarian''s Skullcap'
		$this.MapObjName         = 'barbariansskullcap'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crude skullcap fashioned from animal hide, favored by fierce barbarians.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKnightsBascinet : BEHelmet {
	BEKnightsBascinet() : base() {
		$this.Name               = 'Knight''s Bascinet'
		$this.MapObjName         = 'knightsbascinet'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A classic knight''s helmet with a pointed visor, offering good protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEnchantersHood : BEHelmet {
	BEEnchantersHood() : base() {
		$this.Name               = 'Enchanter''s Hood'
		$this.MapObjName         = 'enchantershood'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A mystical hood that aids in the art of enchantment.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVikingsHelmet : BEHelmet {
	BEVikingsHelmet() : base() {
		$this.Name               = 'Viking''s Helmet'
		$this.MapObjName         = 'vikingshelmet'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A horned helmet worn by fierce Viking warriors, inspiring dread.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDruidsCirclet : BEHelmet {
	BEDruidsCirclet() : base() {
		$this.Name               = 'Druid''s Circlet'
		$this.MapObjName         = 'druidscirclet'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A nature-infused circlet that boosts connection to the earth''s magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEScoutsHat : BEHelmet {
	BEScoutsHat() : base() {
		$this.Name               = 'Scout''s Hat'
		$this.MapObjName         = 'scoutshat'
		$this.PurchasePrice      = 60
		$this.SellPrice          = 30
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A lightweight hat for scouts, providing good visibility and protection from elements.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBrigandineHelmet : BEHelmet {
	BEBrigandineHelmet() : base() {
		$this.Name               = 'Brigandine Helmet'
		$this.MapObjName         = 'brigandinehelmet'
		$this.PurchasePrice      = 220
		$this.SellPrice          = 110
		$this.TargetStats        = @{
			[StatId]::Defense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helmet reinforced with metal plates, offering improved defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESamuraiKabuto : BEHelmet {
	BESamuraiKabuto() : base() {
		$this.Name               = 'Samurai Kabuto'
		$this.MapObjName         = 'samuraikabuto'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A traditional samurai helmet, symbolizing honor and discipline.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BENinjaHood : BEHelmet {
	BENinjaHood() : base() {
		$this.Name               = 'Ninja Hood'
		$this.MapObjName         = 'ninjahood'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A stealthy hood worn by ninjas, aiding in clandestine operations.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPriestsMitre : BEHelmet {
	BEPriestsMitre() : base() {
		$this.Name               = 'Priest''s Mitre'
		$this.MapObjName         = 'priestsmitre'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ceremonial mitre worn by priests, enhancing divine blessings.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEClericsCoif : BEHelmet {
	BEClericsCoif() : base() {
		$this.Name               = 'Cleric''s Coif'
		$this.MapObjName         = 'clericscoif'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple coif worn by clerics, providing modest protection and spiritual focus.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpellweaversTiara : BEHelmet {
	BESpellweaversTiara() : base() {
		$this.Name               = 'Spellweaver''s Tiara'
		$this.MapObjName         = 'spellweaverstiara'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sparkling tiara that amplifies the power of complex spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWarlordsHelm : BEHelmet {
	BEWarlordsHelm() : base() {
		$this.Name               = 'Warlord''s Helm'
		$this.MapObjName         = 'warlordshelm'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A formidable helm worn by military commanders, inspiring loyalty and fear.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESentinelsHelmet : BEHelmet {
	BESentinelsHelmet() : base() {
		$this.Name               = 'Sentinel''s Helmet'
		$this.MapObjName         = 'sentinelshelmet'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy, defensive helmet worn by vigilant sentinels, guarding key locations.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMinstrelsCap : BEHelmet {
	BEMinstrelsCap() : base() {
		$this.Name               = 'Minstrel''s Cap'
		$this.MapObjName         = 'minstrelscap'
		$this.PurchasePrice      = 40
		$this.SellPrice          = 20
		$this.TargetStats        = @{
			[StatId]::Defense = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A whimsical cap worn by minstrels, adding charm to their performances.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDancersHeadpiece : BEHelmet {
	BEDancersHeadpiece() : base() {
		$this.Name               = 'Dancer''s Headpiece'
		$this.MapObjName         = 'dancersheadpiece'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An elaborate headpiece that complements a dancer''s movements and grace.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEJestersHat : BEHelmet {
	BEJestersHat() : base() {
		$this.Name               = 'Jester''s Hat'
		$this.MapObjName         = 'jestershat'
		$this.PurchasePrice      = 30
		$this.SellPrice          = 15
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A colorful, three-pointed hat worn by jesters, spreading mirth.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAlchemistsGoggles : BEHelmet {
	BEAlchemistsGoggles() : base() {
		$this.Name               = 'Alchemist''s Goggles'
		$this.MapObjName         = 'alchemistsgoggles'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Goggles designed to protect the eyes of alchemists during experiments.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEngineersHardHat : BEHelmet {
	BEEngineersHardHat() : base() {
		$this.Name               = 'Engineer''s Hard Hat'
		$this.MapObjName         = 'engineershardhat'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A durable hard hat worn by engineers, providing protection in hazardous environments.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArtisansBeret : BEHelmet {
	BEArtisansBeret() : base() {
		$this.Name               = 'Artisan''s Beret'
		$this.MapObjName         = 'artisansberet'
		$this.PurchasePrice      = 60
		$this.SellPrice          = 30
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A stylish beret worn by artisans, inspiring creativity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMonksHeadband : BEHelmet {
	BEMonksHeadband() : base() {
		$this.Name               = 'Monk''s Headband'
		$this.MapObjName         = 'monksheadband'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::Defense = 2
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple headband worn by monks, aiding in focus and meditation.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAcolytesHood : BEHelmet {
	BEAcolytesHood() : base() {
		$this.Name               = 'Acolyte''s Hood'
		$this.MapObjName         = 'acolyteshood'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A humble hood worn by acolytes, signifying their dedication.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESagesTurban : BEHelmet {
	BESagesTurban() : base() {
		$this.Name               = 'Sage''s Turban'
		$this.MapObjName         = 'sagesturban'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A wise turban worn by sages, imbued with ancient knowledge.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENecromancersHood : BEHelmet {
	BENecromancersHood() : base() {
		$this.Name               = 'Necromancer''s Hood'
		$this.MapObjName         = 'necromancershood'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark, tattered hood worn by necromancers, enhancing their control over the undead.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarlocksHelm : BEHelmet {
	BEWarlocksHelm() : base() {
		$this.Name               = 'Warlock''s Helm'
		$this.MapObjName         = 'warlockshelm'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A menacing helm favored by warlocks, amplifying their dark powers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEShamansHeaddress : BEHelmet {
	BEShamansHeaddress() : base() {
		$this.Name               = 'Shaman''s Headdress'
		$this.MapObjName         = 'shamansheaddress'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 4
			[StatId]::MagicDefense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A feathered headdress worn by shamans, connecting them to ancestral spirits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBeastmastersCap : BEHelmet {
	BEBeastmastersCap() : base() {
		$this.Name               = 'Beastmaster''s Cap'
		$this.MapObjName         = 'beastmasterscap'
		$this.PurchasePrice      = 170
		$this.SellPrice          = 85
		$this.TargetStats        = @{
			[StatId]::Defense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rugged cap worn by beastmasters, aiding in animal taming.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInquisitorsHood : BEHelmet {
	BEInquisitorsHood() : base() {
		$this.Name               = 'Inquisitor''s Hood'
		$this.MapObjName         = 'inquisitorshood'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A somber hood worn by inquisitors, projecting authority and sternness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOraclesCirclet : BEHelmet {
	BEOraclesCirclet() : base() {
		$this.Name               = 'Oracle''s Circlet'
		$this.MapObjName         = 'oraclescirclet'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shimmering circlet worn by oracles, granting glimpses of the future.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEProphetsHeadwrap : BEHelmet {
	BEProphetsHeadwrap() : base() {
		$this.Name               = 'Prophet''s Headwrap'
		$this.MapObjName         = 'prophetsheadwrap'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple headwrap worn by prophets, aiding in divine communication.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChampionsHelm : BEHelmet {
	BEChampionsHelm() : base() {
		$this.Name               = 'Champion''s Helm'
		$this.MapObjName         = 'championshelm'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A grand helmet worn by champions, symbolizing their triumphs.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEValkyriesHelm : BEHelmet {
	BEValkyriesHelm() : base() {
		$this.Name               = 'Valkyrie''s Helm'
		$this.MapObjName         = 'valkyrieshelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 17
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A winged helm worn by valkyries, granting them courage and strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDreadnoughtHelm : BEHelmet {
	BEDreadnoughtHelm() : base() {
		$this.Name               = 'Dreadnought Helm'
		$this.MapObjName         = 'dreadnoughthelm'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Defense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A massive, heavily armored helm designed for ultimate defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGhostlyVisage : BEHelmet {
	BEGhostlyVisage() : base() {
		$this.Name               = 'Ghostly Visage'
		$this.MapObjName         = 'ghostlyvisage'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A spectral helm that grants the wearer ethereal properties.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunstoneCirclet : BEHelmet {
	BESunstoneCirclet() : base() {
		$this.Name               = 'Sunstone Circlet'
		$this.MapObjName         = 'sunstonecirclet'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A radiant circlet made of sunstone, imbued with healing light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMoonlightTiara : BEHelmet {
	BEMoonlightTiara() : base() {
		$this.Name               = 'Moonlight Tiara'
		$this.MapObjName         = 'moonlighttiara'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A luminous tiara that glows with moonlight, enhancing nocturnal magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEStarfallHelm : BEHelmet {
	BEStarfallHelm() : base() {
		$this.Name               = 'Starfall Helm'
		$this.MapObjName         = 'starfallhelm'
		$this.PurchasePrice      = 3000
		$this.SellPrice          = 1500
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm said to be forged from fallen stars, possessing cosmic power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOceanicHelmet : BEHelmet {
	BEOceanicHelmet() : base() {
		$this.Name               = 'Oceanic Helmet'
		$this.MapObjName         = 'oceanichelmet'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helmet crafted from deep-sea materials, providing protection against water-based attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVolcanicHelm : BEHelmet {
	BEVolcanicHelm() : base() {
		$this.Name               = 'Volcanic Helm'
		$this.MapObjName         = 'volcanichelm'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm forged in volcanic fire, granting resistance to heat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEForestDwellersHood : BEHelmet {
	BEForestDwellersHood() : base() {
		$this.Name               = 'Forest Dweller''s Hood'
		$this.MapObjName         = 'forestdwellershood'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::Defense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hood woven from leaves and vines, providing camouflage in forests.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDesertNomadsTurban : BEHelmet {
	BEDesertNomadsTurban() : base() {
		$this.Name               = 'Desert Nomad''s Turban'
		$this.MapObjName         = 'desertnomadsturban'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A practical turban for desert dwellers, protecting against sand and sun.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFrostbiteHelm : BEHelmet {
	BEFrostbiteHelm() : base() {
		$this.Name               = 'Frostbite Helm'
		$this.MapObjName         = 'frostbitehelm'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm enchanted with ice magic, chilling enemies upon impact.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThunderclapHelm : BEHelmet {
	BEThunderclapHelm() : base() {
		$this.Name               = 'Thunderclap Helm'
		$this.MapObjName         = 'thunderclaphelm'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm infused with storm energy, allowing the wearer to channel lightning.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEarthshakerHelm : BEHelmet {
	BEEarthshakerHelm() : base() {
		$this.Name               = 'Earthshaker Helm'
		$this.MapObjName         = 'earthshakerhelm'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy helm that resonates with the power of the earth, increasing physical might.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESkywalkerHelm : BEHelmet {
	BESkywalkerHelm() : base() {
		$this.Name               = 'Skywalker Helm'
		$this.MapObjName         = 'skywalkerhelm'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A lightweight helm that seems to defy gravity, aiding in agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiritwalkerMask : BEHelmet {
	BESpiritwalkerMask() : base() {
		$this.Name               = 'Spiritwalker Mask'
		$this.MapObjName         = 'spiritwalkermask'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ceremonial mask that allows communion with spirits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowWeaversHood : BEHelmet {
	BEShadowWeaversHood() : base() {
		$this.Name               = 'Shadow Weaver''s Hood'
		$this.MapObjName         = 'shadowweavershood'
		$this.PurchasePrice      = 1450
		$this.SellPrice          = 725
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark hood that allows the wearer to manipulate shadows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamCatchersTiara : BEHelmet {
	BEDreamCatchersTiara() : base() {
		$this.Name               = 'Dream Catcher''s Tiara'
		$this.MapObjName         = 'dreamcatcherstiara'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A mystical tiara that protects against nightmares and enhances lucid dreaming.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BENightfallHelm : BEHelmet {
	BENightfallHelm() : base() {
		$this.Name               = 'Nightfall Helm'
		$this.MapObjName         = 'nightfallhelm'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm as dark as night, granting stealth and improved vision in darkness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDaybreakCirclet : BEHelmet {
	BEDaybreakCirclet() : base() {
		$this.Name               = 'Daybreak Circlet'
		$this.MapObjName         = 'daybreakcirclet'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A radiant circlet that harnesses the power of the rising sun, dispelling darkness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGolemsHeadpiece : BEHelmet {
	BEGolemsHeadpiece() : base() {
		$this.Name               = 'Golem''s Headpiece'
		$this.MapObjName         = 'golemsheadpiece'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy headpiece made from golem fragments, offering immense durability.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFairysGarland : BEHelmet {
	BEFairysGarland() : base() {
		$this.Name               = 'Fairy''s Garland'
		$this.MapObjName         = 'fairysgarland'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A delicate garland woven from enchanted flowers, granting subtle magical abilities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGnomesHelmet : BEHelmet {
	BEGnomesHelmet() : base() {
		$this.Name               = 'Gnome''s Helmet'
		$this.MapObjName         = 'gnomeshelmet'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::Defense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small, sturdy helmet crafted by gnomes, surprisingly resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDwarvenHelmet : BEHelmet {
	BEDwarvenHelmet() : base() {
		$this.Name               = 'Dwarven Helmet'
		$this.MapObjName         = 'dwarvenhelmet'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A finely crafted, heavy helmet made by master dwarven smiths.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEElvenCirclet : BEHelmet {
	BEElvenCirclet() : base() {
		$this.Name               = 'Elven Circlet'
		$this.MapObjName         = 'elvencirclet'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An exquisitely crafted circlet worn by elves, enhancing their natural grace.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEOrcishWarhelm : BEHelmet {
	BEOrcishWarhelm() : base() {
		$this.Name               = 'Orcish Warhelm'
		$this.MapObjName         = 'orcishwarhelm'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crude but brutal warhelm, favored by orcish warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGoblinsPotHelm : BEHelmet {
	BEGoblinsPotHelm() : base() {
		$this.Name               = 'Goblin''s Pot Helm'
		$this.MapObjName         = 'goblinspothelm'
		$this.PurchasePrice      = 30
		$this.SellPrice          = 15
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A makeshift helmet fashioned from a cooking pot, offering minimal protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKoboldsHelmet : BEHelmet {
	BEKoboldsHelmet() : base() {
		$this.Name               = 'Kobold''s Helmet'
		$this.MapObjName         = 'koboldshelmet'
		$this.PurchasePrice      = 40
		$this.SellPrice          = 20
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small, spiky helmet worn by kobolds.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGriffinRidersHelm : BEHelmet {
	BEGriffinRidersHelm() : base() {
		$this.Name               = 'Griffin Rider''s Helm'
		$this.MapObjName         = 'griffinridershelm'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A specialized helm for riders of griffins, designed for aerial combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHippogriffTrainersCap : BEHelmet {
	BEHippogriffTrainersCap() : base() {
		$this.Name               = 'Hippogriff Trainer''s Cap'
		$this.MapObjName         = 'hippogrifftrainerscap'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A practical cap worn by hippogriff trainers, aiding in communication with the creatures.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHarpysFeatheredHelm : BEHelmet {
	BEHarpysFeatheredHelm() : base() {
		$this.Name               = 'Harpy''s Feathered Helm'
		$this.MapObjName         = 'harpysfeatheredhelm'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light helm adorned with harpy feathers, granting enhanced senses.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESirensHeadband : BEHelmet {
	BESirensHeadband() : base() {
		$this.Name               = 'Siren''s Headband'
		$this.MapObjName         = 'sirensheadband'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shimmering headband worn by sirens, subtly enhancing their enchanting voices.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMinotaursHornedHelm : BEHelmet {
	BEMinotaursHornedHelm() : base() {
		$this.Name               = 'Minotaur''s Horned Helm'
		$this.MapObjName         = 'minotaurshornedhelm'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A massive, horned helm that mimics a minotaur''s might.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECentaursHeadguard : BEHelmet {
	BECentaursHeadguard() : base() {
		$this.Name               = 'Centaur''s Headguard'
		$this.MapObjName         = 'centaursheadguard'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A protective headguard designed for centaur warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDryadsWreath : BEHelmet {
	BEDryadsWreath() : base() {
		$this.Name               = 'Dryad''s Wreath'
		$this.MapObjName         = 'dryadswreath'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A beautiful wreath of living plants worn by dryads, connecting them to nature.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BENagasHeadpiece : BEHelmet {
	BENagasHeadpiece() : base() {
		$this.Name               = 'Naga''s Headpiece'
		$this.MapObjName         = 'nagasheadpiece'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A serpentine headpiece worn by naga, enhancing their aquatic abilities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESphinxsMask : BEHelmet {
	BESphinxsMask() : base() {
		$this.Name               = 'Sphinx''s Mask'
		$this.MapObjName         = 'sphinxsmask'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 19
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An enigmatic mask that grants cryptic wisdom and a connection to ancient riddles.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhoenixFeatherCrown : BEHelmet {
	BEPhoenixFeatherCrown() : base() {
		$this.Name               = 'Phoenix Feather Crown'
		$this.MapObjName         = 'phoenixfeathercrown'
		$this.PurchasePrice      = 2800
		$this.SellPrice          = 1400
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vibrant crown adorned with phoenix feathers, granting regenerative powers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEUnicornHornCirclet : BEHelmet {
	BEUnicornHornCirclet() : base() {
		$this.Name               = 'Unicorn Horn Circlet'
		$this.MapObjName         = 'unicornhorncirclet'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pure circlet with a small unicorn horn, enhancing healing and purity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBasiliskScaleHelm : BEHelmet {
	BEBasiliskScaleHelm() : base() {
		$this.Name               = 'Basilisk Scale Helm'
		$this.MapObjName         = 'basiliskscalehelm'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm made from basilisk scales, offering resistance to petrification.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGriffinScaleHelm : BEHelmet {
	BEGriffinScaleHelm() : base() {
		$this.Name               = 'Griffin Scale Helm'
		$this.MapObjName         = 'griffinscalehelm'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 11
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm made from griffin scales, offering light yet sturdy protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECockatricePlumeHelm : BEHelmet {
	BECockatricePlumeHelm() : base() {
		$this.Name               = 'Cockatrice Plume Helm'
		$this.MapObjName         = 'cockatriceplumehelm'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm adorned with cockatrice plumes, offering minor protection against petrification.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWyvernBoneHelm : BEHelmet {
	BEWyvernBoneHelm() : base() {
		$this.Name               = 'Wyvern Bone Helm'
		$this.MapObjName         = 'wyvernbonehelm'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rugged helm fashioned from wyvern bones, imparting a primal ferocity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERocFeatherHelm : BEHelmet {
	BERocFeatherHelm() : base() {
		$this.Name               = 'Roc Feather Helm'
		$this.MapObjName         = 'rocfeatherhelm'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light helm adorned with roc feathers, granting keen eyesight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKrakenTentacleHelm : BEHelmet {
	BEKrakenTentacleHelm() : base() {
		$this.Name               = 'Kraken Tentacle Helm'
		$this.MapObjName         = 'krakententaclehelm'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A strange helm made from kraken tentacles, allowing some control over water.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELeviathanScaleHelm : BEHelmet {
	BELeviathanScaleHelm() : base() {
		$this.Name               = 'Leviathan Scale Helm'
		$this.MapObjName         = 'leviathanscalehelm'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A massive helm made from leviathan scales, offering immense protection in water.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHydraHeadHelm : BEHelmet {
	BEHydraHeadHelm() : base() {
		$this.Name               = 'Hydra Head Helm'
		$this.MapObjName         = 'hydraheadhelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A monstrous helm adorned with a hydra head, granting multiple perspectives.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChimeraHornHelm : BEHelmet {
	BEChimeraHornHelm() : base() {
		$this.Name               = 'Chimera Horn Helm'
		$this.MapObjName         = 'chimerahornhelm'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm adorned with chimera horns, embodying the ferocity of multiple beasts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEManticoreSpikeHelm : BEHelmet {
	BEManticoreSpikeHelm() : base() {
		$this.Name               = 'Manticore Spike Helm'
		$this.MapObjName         = 'manticorespikehelm'
		$this.PurchasePrice      = 1750
		$this.SellPrice          = 875
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A spiky helm made from manticore spikes, inflicting poison on attackers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGorgonHairHelm : BEHelmet {
	BEGorgonHairHelm() : base() {
		$this.Name               = 'Gorgon Hair Helm'
		$this.MapObjName         = 'gorgonhairhelm'
		$this.PurchasePrice      = 1650
		$this.SellPrice          = 825
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A chilling helm adorned with gorgon hair, capable of partially paralyzing foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECerberusSkullHelm : BEHelmet {
	BECerberusSkullHelm() : base() {
		$this.Name               = 'Cerberus Skull Helm'
		$this.MapObjName         = 'cerberusskullhelm'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Defense = 19
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A fearsome helm made from a cerberus skull, instilling terror.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BELichsPhylacteryHelm : BEHelmet {
	BELichsPhylacteryHelm() : base() {
		$this.Name               = 'Lich''s Phylactery Helm'
		$this.MapObjName         = 'lichsphylacteryhelm'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cursed helm containing a lich''s phylactery, granting dark powers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAngelsHalo : BEHelmet {
	BEAngelsHalo() : base() {
		$this.Name               = 'Angel''s Halo'
		$this.MapObjName         = 'angelshalo'
		$this.PurchasePrice      = 3000
		$this.SellPrice          = 1500
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shimmering halo radiating divine energy, protecting against evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDemonsHornedHelm : BEHelmet {
	BEDemonsHornedHelm() : base() {
		$this.Name               = 'Demon''s Horned Helm'
		$this.MapObjName         = 'demonshornedhelm'
		$this.PurchasePrice      = 2800
		$this.SellPrice          = 1400
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark, horned helm imbued with demonic power, granting destructive capabilities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESpectersShroudHelm : BEHelmet {
	BESpectersShroudHelm() : base() {
		$this.Name               = 'Specter''s Shroud Helm'
		$this.MapObjName         = 'spectersshroudhelm'
		$this.PurchasePrice      = 2300
		$this.SellPrice          = 1150
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ghostly helm that allows the wearer to phase through solid objects.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVampiresCoffinLidHelm : BEHelmet {
	BEVampiresCoffinLidHelm() : base() {
		$this.Name               = 'Vampire''s Coffin Lid Helm'
		$this.MapObjName         = 'vampirescoffinlidhelm'
		$this.PurchasePrice      = 2400
		$this.SellPrice          = 1200
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A macabre helm fashioned from a coffin lid, granting life-draining abilities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWerewolfPeltHelm : BEHelmet {
	BEWerewolfPeltHelm() : base() {
		$this.Name               = 'Werewolf Pelt Helm'
		$this.MapObjName         = 'werewolfpelthelm'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rugged helm made from werewolf pelt, granting increased strength under the moon.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGoblinShamansSkullcap : BEHelmet {
	BEGoblinShamansSkullcap() : base() {
		$this.Name               = 'Goblin Shaman''s Skullcap'
		$this.MapObjName         = 'goblinshamansskullcap'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crude skullcap adorned with goblin shaman trinkets, enhancing their rudimentary magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOgresClubHelm : BEHelmet {
	BEOgresClubHelm() : base() {
		$this.Name               = 'Ogre''s Club Helm'
		$this.MapObjName         = 'ogresclubhelm'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A massive helm fashioned from an ogre''s club, offering blunt force protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETrollhideCap : BEHelmet {
	BETrollhideCap() : base() {
		$this.Name               = 'Trollhide Cap'
		$this.MapObjName         = 'trollhidecap'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::Defense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A thick cap made from troll hide, offering good regeneration.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGiantsKettleHelm : BEHelmet {
	BEGiantsKettleHelm() : base() {
		$this.Name               = 'Giant''s Kettle Helm'
		$this.MapObjName         = 'giantskettlehelm'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A colossal helm made from a giant''s kettle, providing immense defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpritesLeafHat : BEHelmet {
	BESpritesLeafHat() : base() {
		$this.Name               = 'Sprite''s Leaf Hat'
		$this.MapObjName         = 'spritesleafhat'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiny hat woven from magical leaves, granting illusionary abilities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBrowniesAcornCap : BEHelmet {
	BEBrowniesAcornCap() : base() {
		$this.Name               = 'Brownie''s Acorn Cap'
		$this.MapObjName         = 'browniesacorncap'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{
			[StatId]::Defense = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small cap made from an acorn, offering minor protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELeprechaunsTopHat : BEHelmet {
	BELeprechaunsTopHat() : base() {
		$this.Name               = 'Leprechaun''s Top Hat'
		$this.MapObjName         = 'leprechaunstophat'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A charming top hat that brings good luck.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBansheesWailMask : BEHelmet {
	BEBansheesWailMask() : base() {
		$this.Name               = 'Banshee''s Wail Mask'
		$this.MapObjName         = 'bansheeswailmask'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A haunting mask that amplifies a banshee''s terrifying scream.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGhoulsGraveShroud : BEHelmet {
	BEGhoulsGraveShroud() : base() {
		$this.Name               = 'Ghoul''s Grave Shroud'
		$this.MapObjName         = 'ghoulsgraveshroud'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tattered shroud that grants the wearer partial invisibility in darkness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZombiesBrainBucket : BEHelmet {
	BEZombiesBrainBucket() : base() {
		$this.Name               = 'Zombie''s Brain Bucket'
		$this.MapObjName         = 'zombiesbrainbucket'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A gruesome bucket worn by zombies, protecting their brains.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMummysLinenWrap : BEHelmet {
	BEMummysLinenWrap() : base() {
		$this.Name               = 'Mummy''s Linen Wrap'
		$this.MapObjName         = 'mummyslinenwrap'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An ancient linen wrap that offers minor protection against curses.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFrankensteinsMonsterHeadpiece : BEHelmet {
	BEFrankensteinsMonsterHeadpiece() : base() {
		$this.Name               = 'Frankenstein''s Monster Headpiece'
		$this.MapObjName         = 'frankensteinsmonsterheadpiece'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 19
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A patched-together headpiece that offers immense resilience.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGargoyleStoneHelm : BEHelmet {
	BEGargoyleStoneHelm() : base() {
		$this.Name               = 'Gargoyle Stone Helm'
		$this.MapObjName         = 'gargoylestonehelm'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm carved from gargoyle stone, offering resistance to physical damage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonTurtleShellHelm : BEHelmet {
	BEDragonTurtleShellHelm() : base() {
		$this.Name               = 'Dragon Turtle Shell Helm'
		$this.MapObjName         = 'dragonturtleshellhelm'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::Defense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A massive helm made from a dragon turtle''s shell, offering exceptional defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFireElementalCoreHelm : BEHelmet {
	BEFireElementalCoreHelm() : base() {
		$this.Name               = 'Fire Elemental Core Helm'
		$this.MapObjName         = 'fireelementalcorehelm'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm infused with a fire elemental core, granting fire immunity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWaterElementalCoreHelm : BEHelmet {
	BEWaterElementalCoreHelm() : base() {
		$this.Name               = 'Water Elemental Core Helm'
		$this.MapObjName         = 'waterelementalcorehelm'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm infused with a water elemental core, granting water breathing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAirElementalCoreHelm : BEHelmet {
	BEAirElementalCoreHelm() : base() {
		$this.Name               = 'Air Elemental Core Helm'
		$this.MapObjName         = 'airelementalcorehelm'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm infused with an air elemental core, granting enhanced agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEarthElementalCoreHelm : BEHelmet {
	BEEarthElementalCoreHelm() : base() {
		$this.Name               = 'Earth Elemental Core Helm'
		$this.MapObjName         = 'earthelementalcorehelm'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm infused with an earth elemental core, granting increased fortitude.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELightElementalCoreHelm : BEHelmet {
	BELightElementalCoreHelm() : base() {
		$this.Name               = 'Light Elemental Core Helm'
		$this.MapObjName         = 'lightelementalcorehelm'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm infused with a light elemental core, radiating holy energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDarkElementalCoreHelm : BEHelmet {
	BEDarkElementalCoreHelm() : base() {
		$this.Name               = 'Dark Elemental Core Helm'
		$this.MapObjName         = 'darkelementalcorehelm'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm infused with a dark elemental core, manipulating shadows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArcaneOrbHelm : BEHelmet {
	BEArcaneOrbHelm() : base() {
		$this.Name               = 'Arcane Orb Helm'
		$this.MapObjName         = 'arcaneorbhelm'
		$this.PurchasePrice      = 2800
		$this.SellPrice          = 1400
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm with a floating arcane orb, significantly boosting magical power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChaosFragmentHelm : BEHelmet {
	BEChaosFragmentHelm() : base() {
		$this.Name               = 'Chaos Fragment Helm'
		$this.MapObjName         = 'chaosfragmenthelm'
		$this.PurchasePrice      = 3200
		$this.SellPrice          = 1600
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A chaotic helm formed from fragments of pure chaos, granting unpredictable power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidGazeHelm : BEHelmet {
	BEVoidGazeHelm() : base() {
		$this.Name               = 'Void Gaze Helm'
		$this.MapObjName         = 'voidgazehelm'
		$this.PurchasePrice      = 2700
		$this.SellPrice          = 1350
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 23
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that allows the wearer to glimpse into the void, potentially driving them mad.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAstralProjectionHelm : BEHelmet {
	BEAstralProjectionHelm() : base() {
		$this.Name               = 'Astral Projection Helm'
		$this.MapObjName         = 'astralprojectionhelm'
		$this.PurchasePrice      = 2600
		$this.SellPrice          = 1300
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that aids in astral projection, allowing the wearer to explore beyond their body.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChronosHelm : BEHelmet {
	BEChronosHelm() : base() {
		$this.Name               = 'Chronos Helm'
		$this.MapObjName         = 'chronoshelm'
		$this.PurchasePrice      = 3500
		$this.SellPrice          = 1750
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm infused with the power of time, allowing minor temporal manipulation.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAetherialVeil : BEHelmet {
	BEAetherialVeil() : base() {
		$this.Name               = 'Aetherial Veil'
		$this.MapObjName         = 'aetherialveil'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A translucent veil that grants partial etherealness, making the wearer harder to hit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECelestialDiadem : BEHelmet {
	BECelestialDiadem() : base() {
		$this.Name               = 'Celestial Diadem'
		$this.MapObjName         = 'celestialdiadem'
		$this.PurchasePrice      = 3100
		$this.SellPrice          = 1550
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 26
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A diadem adorned with fragments of starlight, radiating divine protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEAbyssalCrown : BEHelmet {
	BEAbyssalCrown() : base() {
		$this.Name               = 'Abyssal Crown'
		$this.MapObjName         = 'abyssalcrown'
		$this.PurchasePrice      = 2900
		$this.SellPrice          = 1450
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 19
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark crown from the abyss, granting control over deep-sea creatures.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEtherealHood : BEHelmet {
	BEEtherealHood() : base() {
		$this.Name               = 'Ethereal Hood'
		$this.MapObjName         = 'etherealhood'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shimmering hood that makes the wearer nearly invisible to the naked eye.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulforgedHelm : BEHelmet {
	BESoulforgedHelm() : base() {
		$this.Name               = 'Soulforged Helm'
		$this.MapObjName         = 'soulforgedhelm'
		$this.PurchasePrice      = 3300
		$this.SellPrice          = 1650
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm forged from captured souls, granting immense dark power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESpiritbondCirclet : BEHelmet {
	BESpiritbondCirclet() : base() {
		$this.Name               = 'Spiritbond Circlet'
		$this.MapObjName         = 'spiritbondcirclet'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A circlet that creates a strong bond with a companion spirit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamthornHelm : BEHelmet {
	BEDreamthornHelm() : base() {
		$this.Name               = 'Dreamthorn Helm'
		$this.MapObjName         = 'dreamthornhelm'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm with sharp, dream-infused thorns, inflicting nightmares on enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWispwoodHelm : BEHelmet {
	BEWispwoodHelm() : base() {
		$this.Name               = 'Wispwood Helm'
		$this.MapObjName         = 'wispwoodhelm'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light helm made from wispwood, granting improved awareness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrystalBloomTiara : BEHelmet {
	BECrystalBloomTiara() : base() {
		$this.Name               = 'Crystal Bloom Tiara'
		$this.MapObjName         = 'crystalbloomtiara'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiara made of blossoming crystals, enhancing natural magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEStoneGolemHelm : BEHelmet {
	BEStoneGolemHelm() : base() {
		$this.Name               = 'Stone Golem Helm'
		$this.MapObjName         = 'stonegolemhelm'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy helm made from golem stone, offering robust defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEObsidianHelm : BEHelmet {
	BEObsidianHelm() : base() {
		$this.Name               = 'Obsidian Helm'
		$this.MapObjName         = 'obsidianhelm'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm carved from dark obsidian, absorbing magical attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEJadeCrown : BEHelmet {
	BEJadeCrown() : base() {
		$this.Name               = 'Jade Crown'
		$this.MapObjName         = 'jadecrown'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown made of pure jade, enhancing wisdom and longevity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BERubyHelm : BEHelmet {
	BERubyHelm() : base() {
		$this.Name               = 'Ruby Helm'
		$this.MapObjName         = 'rubyhelm'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm adorned with a large ruby, radiating fiery energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESapphireTiara : BEHelmet {
	BESapphireTiara() : base() {
		$this.Name               = 'Sapphire Tiara'
		$this.MapObjName         = 'sapphiretiara'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiara with a brilliant sapphire, enhancing water and ice magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEEmeraldCirclet : BEHelmet {
	BEEmeraldCirclet() : base() {
		$this.Name               = 'Emerald Circlet'
		$this.MapObjName         = 'emeraldcirclet'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A circlet with a gleaming emerald, boosting nature-based magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDiamondCrown : BEHelmet {
	BEDiamondCrown() : base() {
		$this.Name               = 'Diamond Crown'
		$this.MapObjName         = 'diamondcrown'
		$this.PurchasePrice      = 3800
		$this.SellPrice          = 1900
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown encrusted with diamonds, offering unparalleled defense and prestige.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAmethystHelm : BEHelmet {
	BEAmethystHelm() : base() {
		$this.Name               = 'Amethyst Helm'
		$this.MapObjName         = 'amethysthelm'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm with an amethyst, enhancing mental clarity and resistance to mind-control.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETopazCirclet : BEHelmet {
	BETopazCirclet() : base() {
		$this.Name               = 'Topaz Circlet'
		$this.MapObjName         = 'topazcirclet'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A circlet with a golden topaz, enhancing agility and swiftness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGarnetHelm : BEHelmet {
	BEGarnetHelm() : base() {
		$this.Name               = 'Garnet Helm'
		$this.MapObjName         = 'garnethelm'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm with a deep red garnet, boosting vitality and inner strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPearlTiara : BEHelmet {
	BEPearlTiara() : base() {
		$this.Name               = 'Pearl Tiara'
		$this.MapObjName         = 'pearltiara'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A delicate tiara with lustrous pearls, enhancing healing and purity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEOpalHelm : BEHelmet {
	BEOpalHelm() : base() {
		$this.Name               = 'Opal Helm'
		$this.MapObjName         = 'opalhelm'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shimmering helm with an opal, granting minor illusionary abilities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETourmalineCrown : BEHelmet {
	BETourmalineCrown() : base() {
		$this.Name               = 'Tourmaline Crown'
		$this.MapObjName         = 'tourmalinecrown'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 19
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown with a multi-colored tourmaline, granting resistance to various elemental attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBloodstoneHelm : BEHelmet {
	BEBloodstoneHelm() : base() {
		$this.Name               = 'Bloodstone Helm'
		$this.MapObjName         = 'bloodstonehelm'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A grim helm with bloodstone, enhancing offensive capabilities at a cost to health.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMoonstoneCirclet : BEHelmet {
	BEMoonstoneCirclet() : base() {
		$this.Name               = 'Moonstone Circlet'
		$this.MapObjName         = 'moonstonecirclet'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A circlet with moonstone, granting enhanced intuition and nocturnal magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESunstoneHelm : BEHelmet {
	BESunstoneHelm() : base() {
		$this.Name               = 'Sunstone Helm'
		$this.MapObjName         = 'sunstonehelm'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm with sunstone, radiating warmth and light, countering darkness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAdamantiteHelm : BEHelmet {
	BEAdamantiteHelm() : base() {
		$this.Name               = 'Adamantite Helm'
		$this.MapObjName         = 'adamantitehelm'
		$this.PurchasePrice      = 4500
		$this.SellPrice          = 2250
		$this.TargetStats        = @{
			[StatId]::Defense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A supremely strong helm made from adamantite, offering near-invincible defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOrichalcumCirclet : BEHelmet {
	BEOrichalcumCirclet() : base() {
		$this.Name               = 'Orichalcum Circlet'
		$this.MapObjName         = 'orichalcumcirclet'
		$this.PurchasePrice      = 4200
		$this.SellPrice          = 2100
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A legendary circlet made from orichalcum, amplifying all magical abilities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETitaniumHelm : BEHelmet {
	BETitaniumHelm() : base() {
		$this.Name               = 'Titanium Helm'
		$this.MapObjName         = 'titaniumhelm'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A lightweight yet incredibly strong helm made from titanium.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMithrilChainCoif : BEHelmet {
	BEMithrilChainCoif() : base() {
		$this.Name               = 'Mithril Chain Coif'
		$this.MapObjName         = 'mithrilchaincoif'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light and flexible coif made of mithril chain, offering good protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVibraniumHelm : BEHelmet {
	BEVibraniumHelm() : base() {
		$this.Name               = 'Vibranium Helm'
		$this.MapObjName         = 'vibraniumhelm'
		$this.PurchasePrice      = 5000
		$this.SellPrice          = 2500
		$this.TargetStats        = @{
			[StatId]::Defense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm made from vibranium, absorbing kinetic energy and returning it as force.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENetheriteHelm : BEHelmet {
	BENetheriteHelm() : base() {
		$this.Name               = 'Netherite Helm'
		$this.MapObjName         = 'netheritehelm'
		$this.PurchasePrice      = 4800
		$this.SellPrice          = 2400
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm forged from netherite, resistant to fire and powerful in the nether.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEtheriumHelm : BEHelmet {
	BEEtheriumHelm() : base() {
		$this.Name               = 'Etherium Helm'
		$this.MapObjName         = 'etheriumhelm'
		$this.PurchasePrice      = 4000
		$this.SellPrice          = 2000
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm made of ethereal material, granting resistance to magical effects.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEQuantumHelm : BEHelmet {
	BEQuantumHelm() : base() {
		$this.Name               = 'Quantum Helm'
		$this.MapObjName         = 'quantumhelm'
		$this.PurchasePrice      = 6000
		$this.SellPrice          = 3000
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm incorporating quantum technology, allowing minor reality manipulation.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStardustCirclet : BEHelmet {
	BEStardustCirclet() : base() {
		$this.Name               = 'Stardust Circlet'
		$this.MapObjName         = 'stardustcirclet'
		$this.PurchasePrice      = 3500
		$this.SellPrice          = 1750
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A circlet crafted from condensed stardust, granting cosmic awareness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECometTailHelm : BEHelmet {
	BECometTailHelm() : base() {
		$this.Name               = 'Comet Tail Helm'
		$this.MapObjName         = 'comettailhelm'
		$this.PurchasePrice      = 3400
		$this.SellPrice          = 1700
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm with a streaking comet tail effect, enhancing speed and agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlackHoleHelm : BEHelmet {
	BEBlackHoleHelm() : base() {
		$this.Name               = 'Black Hole Helm'
		$this.MapObjName         = 'blackholehelm'
		$this.PurchasePrice      = 7000
		$this.SellPrice          = 3500
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that seems to absorb light, granting control over gravitational forces.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGalaxyHelm : BEHelmet {
	BEGalaxyHelm() : base() {
		$this.Name               = 'Galaxy Helm'
		$this.MapObjName         = 'galaxyhelm'
		$this.PurchasePrice      = 8000
		$this.SellPrice          = 4000
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that contains a swirling galaxy within, granting immense power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENebulaCrown : BEHelmet {
	BENebulaCrown() : base() {
		$this.Name               = 'Nebula Crown'
		$this.MapObjName         = 'nebulacrown'
		$this.PurchasePrice      = 7500
		$this.SellPrice          = 3750
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown that shimmers with the colors of a nebula, granting astral powers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESolarFlareHelm : BEHelmet {
	BESolarFlareHelm() : base() {
		$this.Name               = 'Solar Flare Helm'
		$this.MapObjName         = 'solarflarehelm'
		$this.PurchasePrice      = 6500
		$this.SellPrice          = 3250
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that bursts with solar energy, incinerating foes with light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELunarEclipseHelm : BEHelmet {
	BELunarEclipseHelm() : base() {
		$this.Name               = 'Lunar Eclipse Helm'
		$this.MapObjName         = 'lunareclipsehelm'
		$this.PurchasePrice      = 6500
		$this.SellPrice          = 3250
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm shrouded in the darkness of a lunar eclipse, granting shadowy powers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECosmicHelm : BEHelmet {
	BECosmicHelm() : base() {
		$this.Name               = 'Cosmic Helm'
		$this.MapObjName         = 'cosmichelm'
		$this.PurchasePrice      = 9000
		$this.SellPrice          = 4500
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that seems to transcend dimensions, granting omnipotent abilities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidwalkerHelm : BEHelmet {
	BEVoidwalkerHelm() : base() {
		$this.Name               = 'Voidwalker Helm'
		$this.MapObjName         = 'voidwalkerhelm'
		$this.PurchasePrice      = 5500
		$this.SellPrice          = 2750
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm for those who walk the void, granting protection from its horrors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETimeWeaversHood : BEHelmet {
	BETimeWeaversHood() : base() {
		$this.Name               = 'Time Weaver''s Hood'
		$this.MapObjName         = 'timeweavershood'
		$this.PurchasePrice      = 5000
		$this.SellPrice          = 2500
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hood that allows the wearer to subtly manipulate the flow of time.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERealityBendersTiara : BEHelmet {
	BERealityBendersTiara() : base() {
		$this.Name               = 'Reality Bender''s Tiara'
		$this.MapObjName         = 'realitybenderstiara'
		$this.PurchasePrice      = 6000
		$this.SellPrice          = 3000
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiara that allows the wearer to bend reality to their will, within limits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDimensionShiftersHelm : BEHelmet {
	BEDimensionShiftersHelm() : base() {
		$this.Name               = 'Dimension Shifter''s Helm'
		$this.MapObjName         = 'dimensionshiftershelm'
		$this.PurchasePrice      = 5800
		$this.SellPrice          = 2900
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that allows the wearer to shift between dimensions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGravitonHelm : BEHelmet {
	BEGravitonHelm() : base() {
		$this.Name               = 'Graviton Helm'
		$this.MapObjName         = 'gravitonhelm'
		$this.PurchasePrice      = 5200
		$this.SellPrice          = 2600
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that manipulates gravity, allowing the wearer to float or crush foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAntiMatterHelm : BEHelmet {
	BEAntiMatterHelm() : base() {
		$this.Name               = 'Anti-Matter Helm'
		$this.MapObjName         = 'antimatterhelm'
		$this.PurchasePrice      = 7000
		$this.SellPrice          = 3500
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm crafted from anti-matter, highly destructive but dangerous to wear.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESingularityHelm : BEHelmet {
	BESingularityHelm() : base() {
		$this.Name               = 'Singularity Helm'
		$this.MapObjName         = 'singularityhelm'
		$this.PurchasePrice      = 8500
		$this.SellPrice          = 4250
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that creates a miniature singularity, pulling enemies in.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEldritchVisage : BEHelmet {
	BEEldritchVisage() : base() {
		$this.Name               = 'Eldritch Visage'
		$this.MapObjName         = 'eldritchvisage'
		$this.PurchasePrice      = 4500
		$this.SellPrice          = 2250
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm of disturbing appearance, granting maddening powers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrystallineHelm : BEHelmet {
	BECrystallineHelm() : base() {
		$this.Name               = 'Crystalline Helm'
		$this.MapObjName         = 'crystallinehelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm made of pure crystal, offering excellent protection and magic amplification.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEForgeLordsHelm : BEHelmet {
	BEForgeLordsHelm() : base() {
		$this.Name               = 'Forge Lord''s Helm'
		$this.MapObjName         = 'forgelordshelm'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy helm worn by master blacksmiths, radiating immense heat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEArtificersGoggles : BEHelmet {
	BEArtificersGoggles() : base() {
		$this.Name               = 'Artificer''s Goggles'
		$this.MapObjName         = 'artificersgoggles'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Goggles designed for artificers, enhancing their crafting precision.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERunesmithsHelmet : BEHelmet {
	BERunesmithsHelmet() : base() {
		$this.Name               = 'Runesmith''s Helmet'
		$this.MapObjName         = 'runesmithshelmet'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helmet inscribed with powerful runes, enhancing runic magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlimmersteelHelm : BEHelmet {
	BEGlimmersteelHelm() : base() {
		$this.Name               = 'Glimmersteel Helm'
		$this.MapObjName         = 'glimmersteelhelm'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm made of glimmersteel, reflecting light and dazzling enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulstoneHelm : BEHelmet {
	BESoulstoneHelm() : base() {
		$this.Name               = 'Soulstone Helm'
		$this.MapObjName         = 'soulstonehelm'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm with an embedded soulstone, capable of absorbing stray souls for power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiritWardensHelm : BEHelmet {
	BESpiritWardensHelm() : base() {
		$this.Name               = 'Spirit Warden''s Helm'
		$this.MapObjName         = 'spiritwardenshelm'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm worn by those who guard spirits, offering protection from malevolent entities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAbjurersHood : BEHelmet {
	BEAbjurersHood() : base() {
		$this.Name               = 'Abjurer''s Hood'
		$this.MapObjName         = 'abjurershood'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hood worn by abjurers, specializing in defensive magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEConjurersCap : BEHelmet {
	BEConjurersCap() : base() {
		$this.Name               = 'Conjurer''s Cap'
		$this.MapObjName         = 'conjurerscap'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cap worn by conjurers, aiding in summoning creatures.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivinersHeadband : BEHelmet {
	BEDivinersHeadband() : base() {
		$this.Name               = 'Diviner''s Headband'
		$this.MapObjName         = 'divinersheadband'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A headband worn by diviners, enhancing their foresight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEnchantresssCirclet : BEHelmet {
	BEEnchantresssCirclet() : base() {
		$this.Name               = 'Enchantress''s Circlet'
		$this.MapObjName         = 'enchantressscirclet'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A circlet worn by enchantresses, boosting charming spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEIllusionistsMask : BEHelmet {
	BEIllusionistsMask() : base() {
		$this.Name               = 'Illusionist''s Mask'
		$this.MapObjName         = 'illusionistsmask'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 19
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A mask worn by illusionists, making their illusions more convincing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEvokersHelm : BEHelmet {
	BEEvokersHelm() : base() {
		$this.Name               = 'Evoker''s Helm'
		$this.MapObjName         = 'evokershelm'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm worn by evokers, amplifying their destructive spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETransmutersHood : BEHelmet {
	BETransmutersHood() : base() {
		$this.Name               = 'Transmuter''s Hood'
		$this.MapObjName         = 'transmutershood'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 21
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hood worn by transmuters, aiding in altering physical properties.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENecromancersSkullMask : BEHelmet {
	BENecromancersSkullMask() : base() {
		$this.Name               = 'Necromancer''s Skull Mask'
		$this.MapObjName         = 'necromancersskullmask'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A chilling skull mask worn by necromancers, granting greater control over the undead.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarlordsGreathelm : BEHelmet {
	BEWarlordsGreathelm() : base() {
		$this.Name               = 'Warlord''s Greathelm'
		$this.MapObjName         = 'warlordsgreathelm'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Defense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A massive greathelm worn by powerful warlords, dominating the battlefield.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEConquerorsCrown : BEHelmet {
	BEConquerorsCrown() : base() {
		$this.Name               = 'Conqueror''s Crown'
		$this.MapObjName         = 'conquerorscrown'
		$this.PurchasePrice      = 2700
		$this.SellPrice          = 1350
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A magnificent crown worn by conquerors, inspiring loyalty and fear in their armies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEmperorsLaurel : BEHelmet {
	BEEmperorsLaurel() : base() {
		$this.Name               = 'Emperor''s Laurel'
		$this.MapObjName         = 'emperorslaurel'
		$this.PurchasePrice      = 2900
		$this.SellPrice          = 1450
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A golden laurel wreath worn by emperors, symbolizing absolute power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEmpresssTiara : BEHelmet {
	BEEmpresssTiara() : base() {
		$this.Name               = 'Empress''s Tiara'
		$this.MapObjName         = 'empressstiara'
		$this.PurchasePrice      = 2800
		$this.SellPrice          = 1400
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A regal tiara worn by empresses, radiating grace and authority.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEKingsCrown : BEHelmet {
	BEKingsCrown() : base() {
		$this.Name               = 'King''s Crown'
		$this.MapObjName         = 'kingscrown'
		$this.PurchasePrice      = 2600
		$this.SellPrice          = 1300
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A noble crown worn by kings, inspiring bravery in their subjects.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEQueensDiadem : BEHelmet {
	BEQueensDiadem() : base() {
		$this.Name               = 'Queen''s Diadem'
		$this.MapObjName         = 'queensdiadem'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A beautiful diadem worn by queens, symbolizing wisdom and benevolence.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBaronsHelmet : BEHelmet {
	BEBaronsHelmet() : base() {
		$this.Name               = 'Baron''s Helmet'
		$this.MapObjName         = 'baronshelmet'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy helmet worn by barons, providing protection in battle.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBaronesssCirclet : BEHelmet {
	BEBaronesssCirclet() : base() {
		$this.Name               = 'Baroness''s Circlet'
		$this.MapObjName         = 'baronessscirclet'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An elegant circlet worn by baronesses, suitable for court.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDukesGreathelm : BEHelmet {
	BEDukesGreathelm() : base() {
		$this.Name               = 'Duke''s Greathelm'
		$this.MapObjName         = 'dukesgreathelm'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A grand greathelm worn by dukes, signifying their martial prowess.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDuchesssTiara : BEHelmet {
	BEDuchesssTiara() : base() {
		$this.Name               = 'Duchess''s Tiara'
		$this.MapObjName         = 'duchessstiara'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sophisticated tiara worn by duchesses, befitting their noble status.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECountsHelmet : BEHelmet {
	BECountsHelmet() : base() {
		$this.Name               = 'Count''s Helmet'
		$this.MapObjName         = 'countshelmet'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A finely crafted helmet worn by counts, symbolizing their standing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECountesssHeadband : BEHelmet {
	BECountesssHeadband() : base() {
		$this.Name               = 'Countess''s Headband'
		$this.MapObjName         = 'countesssheadband'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A stylish headband worn by countesses, adorned with minor jewels.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEKnightCaptainsHelm : BEHelmet {
	BEKnightCaptainsHelm() : base() {
		$this.Name               = 'Knight-Captain''s Helm'
		$this.MapObjName         = 'knightcaptainshelm'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A distinguished helm worn by knight-captains, leading their brethren.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESergeantsHelmet : BEHelmet {
	BESergeantsHelmet() : base() {
		$this.Name               = 'Sergeant''s Helmet'
		$this.MapObjName         = 'sergeantshelmet'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A practical helmet worn by sergeants, designed for frontline leadership.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERecruitsCap : BEHelmet {
	BERecruitsCap() : base() {
		$this.Name               = 'Recruit''s Cap'
		$this.MapObjName         = 'recruitscap'
		$this.PurchasePrice      = 20
		$this.SellPrice          = 10
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A basic cap given to new recruits, offering minimal protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVeteransHelm : BEHelmet {
	BEVeteransHelm() : base() {
		$this.Name               = 'Veteran''s Helm'
		$this.MapObjName         = 'veteranshelm'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A battle-scarred helm worn by veterans, showing their experience.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEliteGuardHelm : BEHelmet {
	BEEliteGuardHelm() : base() {
		$this.Name               = 'Elite Guard Helm'
		$this.MapObjName         = 'eliteguardhelm'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A polished helm worn by elite guards, offering superior defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERoyalGuardHelm : BEHelmet {
	BERoyalGuardHelm() : base() {
		$this.Name               = 'Royal Guard Helm'
		$this.MapObjName         = 'royalguardhelm'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A highly ornate helm worn by royal guards, signifying their loyalty.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETempleGuardHelm : BEHelmet {
	BETempleGuardHelm() : base() {
		$this.Name               = 'Temple Guard Helm'
		$this.MapObjName         = 'templeguardhelm'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sacred helm worn by temple guards, imbued with divine protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowGuardHelm : BEHelmet {
	BEShadowGuardHelm() : base() {
		$this.Name               = 'Shadow Guard Helm'
		$this.MapObjName         = 'shadowguardhelm'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark helm worn by shadow guards, aiding in stealth and ambush.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArenaChampionsHelm : BEHelmet {
	BEArenaChampionsHelm() : base() {
		$this.Name               = 'Arena Champion''s Helm'
		$this.MapObjName         = 'arenachampionshelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A fearsome helm worn by arena champions, inspiring awe and fear.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGrandmastersHelm : BEHelmet {
	BEGrandmastersHelm() : base() {
		$this.Name               = 'Grandmaster''s Helm'
		$this.MapObjName         = 'grandmastershelm'
		$this.PurchasePrice      = 2800
		$this.SellPrice          = 1400
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A legendary helm worn by grandmasters of a martial art or order.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESacredHelm : BEHelmet {
	BESacredHelm() : base() {
		$this.Name               = 'Sacred Helm'
		$this.MapObjName         = 'sacredhelm'
		$this.PurchasePrice      = 2700
		$this.SellPrice          = 1350
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm blessed by ancient deities, offering immense spiritual protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEProfaneHelm : BEHelmet {
	BEProfaneHelm() : base() {
		$this.Name               = 'Profane Helm'
		$this.MapObjName         = 'profanehelm'
		$this.PurchasePrice      = 2600
		$this.SellPrice          = 1300
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm cursed by dark powers, granting immense destructive capabilities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlessedCirclet : BEHelmet {
	BEBlessedCirclet() : base() {
		$this.Name               = 'Blessed Circlet'
		$this.MapObjName         = 'blessedcirclet'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple circlet blessed by a cleric, offering minor protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECursedHeadband : BEHelmet {
	BECursedHeadband() : base() {
		$this.Name               = 'Cursed Headband'
		$this.MapObjName         = 'cursedheadband'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A headband imbued with a minor curse, granting some power at a cost.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDemonicCirclet : BEHelmet {
	BEDemonicCirclet() : base() {
		$this.Name               = 'Demonic Circlet'
		$this.MapObjName         = 'demoniccirclet'
		$this.PurchasePrice      = 2300
		$this.SellPrice          = 1150
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A circlet forged in hellfire, granting control over minor demons.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAngelicHalo : BEHelmet {
	BEAngelicHalo() : base() {
		$this.Name               = 'Angelic Halo'
		$this.MapObjName         = 'angelichalo'
		$this.PurchasePrice      = 2400
		$this.SellPrice          = 1200
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A luminous halo of pure light, granting divine blessings.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFieryHelm : BEHelmet {
	BEFieryHelm() : base() {
		$this.Name               = 'Fiery Helm'
		$this.MapObjName         = 'fieryhelm'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm wreathed in eternal flames, burning enemies on contact.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIcyHelm : BEHelmet {
	BEIcyHelm() : base() {
		$this.Name               = 'Icy Helm'
		$this.MapObjName         = 'icyhelm'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm covered in permafrost, freezing enemies with each blow.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShockingHelm : BEHelmet {
	BEShockingHelm() : base() {
		$this.Name               = 'Shocking Helm'
		$this.MapObjName         = 'shockinghelm'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm crackling with electricity, paralyzing foes with lightning.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPoisonousHelm : BEHelmet {
	BEPoisonousHelm() : base() {
		$this.Name               = 'Poisonous Helm'
		$this.MapObjName         = 'poisonoushelm'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm dripping with venom, poisoning enemies upon contact.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneSkinHelm : BEHelmet {
	BEStoneSkinHelm() : base() {
		$this.Name               = 'Stone Skin Helm'
		$this.MapObjName         = 'stoneskinhelm'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that turns the wearer''s skin to stone, providing immense defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWindsEmbraceHelm : BEHelmet {
	BEWindsEmbraceHelm() : base() {
		$this.Name               = 'Wind''s Embrace Helm'
		$this.MapObjName         = 'windsembracehelm'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light helm that allows the wearer to move with the swiftness of wind.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidTouchedHelm : BEHelmet {
	BEVoidTouchedHelm() : base() {
		$this.Name               = 'Void Touched Helm'
		$this.MapObjName         = 'voidtouchedhelm'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that has touched the void, granting resistance to void energies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELightforgedHelm : BEHelmet {
	BELightforgedHelm() : base() {
		$this.Name               = 'Lightforged Helm'
		$this.MapObjName         = 'lightforgedhelm'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm forged with holy light, devastating to dark creatures.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDarkforgedHelm : BEHelmet {
	BEDarkforgedHelm() : base() {
		$this.Name               = 'Darkforged Helm'
		$this.MapObjName         = 'darkforgedhelm'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm forged in darkness, powerful against light creatures.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERuneofStrengthHelm : BEHelmet {
	BERuneofStrengthHelm() : base() {
		$this.Name               = 'Rune of Strength Helm'
		$this.MapObjName         = 'runeofstrengthhelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm inscribed with a rune of strength, greatly boosting physical power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BERuneofMagicHelm : BEHelmet {
	BERuneofMagicHelm() : base() {
		$this.Name               = 'Rune of Magic Helm'
		$this.MapObjName         = 'runeofmagichelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm inscribed with a rune of magic, greatly boosting magical power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERuneofProtectionHelm : BEHelmet {
	BERuneofProtectionHelm() : base() {
		$this.Name               = 'Rune of Protection Helm'
		$this.MapObjName         = 'runeofprotectionhelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm inscribed with a rune of protection, significantly increasing defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERuneofSpeedHelm : BEHelmet {
	BERuneofSpeedHelm() : base() {
		$this.Name               = 'Rune of Speed Helm'
		$this.MapObjName         = 'runeofspeedhelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm inscribed with a rune of speed, increasing agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERuneofWisdomHelm : BEHelmet {
	BERuneofWisdomHelm() : base() {
		$this.Name               = 'Rune of Wisdom Helm'
		$this.MapObjName         = 'runeofwisdomhelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm inscribed with a rune of wisdom, boosting intellect.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERuneofVitalityHelm : BEHelmet {
	BERuneofVitalityHelm() : base() {
		$this.Name               = 'Rune of Vitality Helm'
		$this.MapObjName         = 'runeofvitalityhelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm inscribed with a rune of vitality, increasing health.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERuneofFuryHelm : BEHelmet {
	BERuneofFuryHelm() : base() {
		$this.Name               = 'Rune of Fury Helm'
		$this.MapObjName         = 'runeoffuryhelm'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm inscribed with a rune of fury, increasing attack at low health.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BERuneofSerenityHelm : BEHelmet {
	BERuneofSerenityHelm() : base() {
		$this.Name               = 'Rune of Serenity Helm'
		$this.MapObjName         = 'runeofserenityhelm'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm inscribed with a rune of serenity, calming the mind and boosting magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHeroicHelm : BEHelmet {
	BEHeroicHelm() : base() {
		$this.Name               = 'Heroic Helm'
		$this.MapObjName         = 'heroichelm'
		$this.PurchasePrice      = 3000
		$this.SellPrice          = 1500
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm of ancient heroes, inspiring allies and striking fear in foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BELegendaryHelm : BEHelmet {
	BELegendaryHelm() : base() {
		$this.Name               = 'Legendary Helm'
		$this.MapObjName         = 'legendaryhelm'
		$this.PurchasePrice      = 3500
		$this.SellPrice          = 1750
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm from forgotten legends, imbued with immense, mysterious power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMythicHelm : BEHelmet {
	BEMythicHelm() : base() {
		$this.Name               = 'Mythic Helm'
		$this.MapObjName         = 'mythichelm'
		$this.PurchasePrice      = 4000
		$this.SellPrice          = 2000
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm from the age of myths, possessing unparalleled power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivineHelm : BEHelmet {
	BEDivineHelm() : base() {
		$this.Name               = 'Divine Helm'
		$this.MapObjName         = 'divinehelm'
		$this.PurchasePrice      = 4500
		$this.SellPrice          = 2250
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm of divine origin, granting godly powers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAbyssalHelm : BEHelmet {
	BEAbyssalHelm() : base() {
		$this.Name               = 'Abyssal Helm'
		$this.MapObjName         = 'abyssalhelm'
		$this.PurchasePrice      = 4300
		$this.SellPrice          = 2150
		$this.TargetStats        = @{
			[StatId]::Defense = 38
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm from the darkest depths of the abyss, granting unholy power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECelestialHelm : BEHelmet {
	BECelestialHelm() : base() {
		$this.Name               = 'Celestial Helm'
		$this.MapObjName         = 'celestialhelm'
		$this.PurchasePrice      = 4200
		$this.SellPrice          = 2100
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm descended from the heavens, radiating pure light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamersVeil : BEHelmet {
	BEDreamersVeil() : base() {
		$this.Name               = 'Dreamer''s Veil'
		$this.MapObjName         = 'dreamersveil'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A veil that allows the wearer to enter and manipulate dreams.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWanderersCap : BEHelmet {
	BEWanderersCap() : base() {
		$this.Name               = 'Wanderer''s Cap'
		$this.MapObjName         = 'wandererscap'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A practical cap for a long journey, providing comfort and minor protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPioneersHat : BEHelmet {
	BEPioneersHat() : base() {
		$this.Name               = 'Pioneer''s Hat'
		$this.MapObjName         = 'pioneershat'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy hat for pioneers, essential for exploration.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPathfindersHelm : BEHelmet {
	BEPathfindersHelm() : base() {
		$this.Name               = 'Pathfinder''s Helm'
		$this.MapObjName         = 'pathfindershelm'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 4
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that helps pathfinders navigate treacherous terrain.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEExplorersGoggles : BEHelmet {
	BEExplorersGoggles() : base() {
		$this.Name               = 'Explorer''s Goggles'
		$this.MapObjName         = 'explorersgoggles'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Goggles that aid explorers in spotting hidden details.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAdventurersHelmet : BEHelmet {
	BEAdventurersHelmet() : base() {
		$this.Name               = 'Adventurer''s Helmet'
		$this.MapObjName         = 'adventurershelmet'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A reliable helmet for any adventurer, offering balanced protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERelicHuntersHeadband : BEHelmet {
	BERelicHuntersHeadband() : base() {
		$this.Name               = 'Relic Hunter''s Headband'
		$this.MapObjName         = 'relichuntersheadband'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A headband that subtly hums when near ancient relics.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETreasureSeekersHelm : BEHelmet {
	BETreasureSeekersHelm() : base() {
		$this.Name               = 'Treasure Seeker''s Helm'
		$this.MapObjName         = 'treasureseekershelm'
		$this.PurchasePrice      = 220
		$this.SellPrice          = 110
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that occasionally gleams when hidden treasure is nearby.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGraveRobbersMask : BEHelmet {
	BEGraveRobbersMask() : base() {
		$this.Name               = 'Grave Robber''s Mask'
		$this.MapObjName         = 'graverobbersmask'
		$this.PurchasePrice      = 160
		$this.SellPrice          = 80
		$this.TargetStats        = @{
			[StatId]::Defense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark mask worn by grave robbers, aiding in stealth in tombs.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDungeonDelversHelm : BEHelmet {
	BEDungeonDelversHelm() : base() {
		$this.Name               = 'Dungeon Delver''s Helm'
		$this.MapObjName         = 'dungeondelvershelm'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robust helm for dungeon delvers, protecting against traps.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonSlayersHelm : BEHelmet {
	BEDragonSlayersHelm() : base() {
		$this.Name               = 'Dragon Slayer''s Helm'
		$this.MapObjName         = 'dragonslayershelm'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm specifically designed for slaying dragons, enhancing anti-dragon abilities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGiantKillersHelm : BEHelmet {
	BEGiantKillersHelm() : base() {
		$this.Name               = 'Giant Killer''s Helm'
		$this.MapObjName         = 'giantkillershelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that enhances the wearer''s ability to fight giants.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMonsterHuntersHelm : BEHelmet {
	BEMonsterHuntersHelm() : base() {
		$this.Name               = 'Monster Hunter''s Helm'
		$this.MapObjName         = 'monsterhuntershelm'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A general-purpose helm for hunting all manner of monsters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBeastTamersBridleHelm : BEHelmet {
	BEBeastTamersBridleHelm() : base() {
		$this.Name               = 'Beast Tamer''s Bridle Helm'
		$this.MapObjName         = 'beasttamersbridlehelm'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A unique helm that aids in taming wild beasts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFamiliarsBondHelm : BEHelmet {
	BEFamiliarsBondHelm() : base() {
		$this.Name               = 'Familiar''s Bond Helm'
		$this.MapObjName         = 'familiarsbondhelm'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that strengthens the bond with a magical familiar.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESummonersCrown : BEHelmet {
	BESummonersCrown() : base() {
		$this.Name               = 'Summoner''s Crown'
		$this.MapObjName         = 'summonerscrown'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 21
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown that amplifies summoning magic, allowing for more powerful summons.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPuppetMastersVisage : BEHelmet {
	BEPuppetMastersVisage() : base() {
		$this.Name               = 'Puppet Master''s Visage'
		$this.MapObjName         = 'puppetmastersvisage'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A grim visage that allows control over puppets and constructs.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGolemCommandersHelm : BEHelmet {
	BEGolemCommandersHelm() : base() {
		$this.Name               = 'Golem Commander''s Helm'
		$this.MapObjName         = 'golemcommandershelm'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 19
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that allows direct mental control over nearby golems.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAutomatonPilotsHelm : BEHelmet {
	BEAutomatonPilotsHelm() : base() {
		$this.Name               = 'Automaton Pilot''s Helm'
		$this.MapObjName         = 'automatonpilotshelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm for piloting large automatons, providing necessary controls.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEClockworkEngineersGoggles : BEHelmet {
	BEClockworkEngineersGoggles() : base() {
		$this.Name               = 'Clockwork Engineer''s Goggles'
		$this.MapObjName         = 'clockworkengineersgoggles'
		$this.PurchasePrice      = 170
		$this.SellPrice          = 85
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Goggles that aid in precise clockwork construction and repair.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArtificersCrown : BEHelmet {
	BEArtificersCrown() : base() {
		$this.Name               = 'Artificer''s Crown'
		$this.MapObjName         = 'artificerscrown'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown worn by master artificers, greatly enhancing their creations.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInventorsHelm : BEHelmet {
	BEInventorsHelm() : base() {
		$this.Name               = 'Inventor''s Helm'
		$this.MapObjName         = 'inventorshelm'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that inspires grand inventions and complex designs.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMadScientistsHeadgear : BEHelmet {
	BEMadScientistsHeadgear() : base() {
		$this.Name               = 'Mad Scientist''s Headgear'
		$this.MapObjName         = 'madscientistsheadgear'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Erratic headgear that amplifies chaotic experiments.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEApothecarysMortarCap : BEHelmet {
	BEApothecarysMortarCap() : base() {
		$this.Name               = 'Apothecary''s Mortar Cap'
		$this.MapObjName         = 'apothecarysmortarcap'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cap worn by apothecaries, aiding in the creation of potent concoctions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHerbalistsWovenHat : BEHelmet {
	BEHerbalistsWovenHat() : base() {
		$this.Name               = 'Herbalist''s Woven Hat'
		$this.MapObjName         = 'herbalistswovenhat'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hat woven from herbs, enhancing knowledge of plants.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChefsToqueHelm : BEHelmet {
	BEChefsToqueHelm() : base() {
		$this.Name               = 'Chef''s Toque Helm'
		$this.MapObjName         = 'chefstoquehelm'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A surprisingly sturdy helm designed for battle-chefs, offering a surprising amount of protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFishermansHat : BEHelmet {
	BEFishermansHat() : base() {
		$this.Name               = 'Fisherman''s Hat'
		$this.MapObjName         = 'fishermanshat'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A wide-brimmed hat that protects fishermen from the elements.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFarmersStrawHat : BEHelmet {
	BEFarmersStrawHat() : base() {
		$this.Name               = 'Farmer''s Straw Hat'
		$this.MapObjName         = 'farmersstrawhat'
		$this.PurchasePrice      = 30
		$this.SellPrice          = 15
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple straw hat, offering basic sun protection.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMinersHardHat : BEHelmet {
	BEMinersHardHat() : base() {
		$this.Name               = 'Miner''s Hard Hat'
		$this.MapObjName         = 'minershardhat'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hard hat with a lamp, essential for mining.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELumberjacksCap : BEHelmet {
	BELumberjacksCap() : base() {
		$this.Name               = 'Lumberjack''s Cap'
		$this.MapObjName         = 'lumberjackscap'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rugged cap for lumberjacks, offering protection from falling debris.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHuntersFurHood : BEHelmet {
	BEHuntersFurHood() : base() {
		$this.Name               = 'Hunter''s Fur Hood'
		$this.MapObjName         = 'huntersfurhood'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A warm fur hood for hunters, providing warmth and stealth in cold climates.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFishermansKnitCap : BEHelmet {
	BEFishermansKnitCap() : base() {
		$this.Name               = 'Fisherman''s Knit Cap'
		$this.MapObjName         = 'fishermansknitcap'
		$this.PurchasePrice      = 60
		$this.SellPrice          = 30
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A warm knit cap for fishermen, warding off the cold.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShepherdsWoolCap : BEHelmet {
	BEShepherdsWoolCap() : base() {
		$this.Name               = 'Shepherd''s Wool Cap'
		$this.MapObjName         = 'shepherdswoolcap'
		$this.PurchasePrice      = 40
		$this.SellPrice          = 20
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple wool cap worn by shepherds, providing warmth.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFarmersSunHat : BEHelmet {
	BEFarmersSunHat() : base() {
		$this.Name               = 'Farmer''s Sun Hat'
		$this.MapObjName         = 'farmerssunhat'
		$this.PurchasePrice      = 35
		$this.SellPrice          = 17
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A wide sun hat for farmers, protecting from the sun''s glare.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBrewersCap : BEHelmet {
	BEBrewersCap() : base() {
		$this.Name               = 'Brewer''s Cap'
		$this.MapObjName         = 'brewerscap'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A traditional cap worn by brewers, ensuring good spirits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBakersToque : BEHelmet {
	BEBakersToque() : base() {
		$this.Name               = 'Baker''s Toque'
		$this.MapObjName         = 'bakerstoque'
		$this.PurchasePrice      = 60
		$this.SellPrice          = 30
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tall white hat worn by bakers, protecting their hair and symbolizing their craft.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInnkeepersHeadband : BEHelmet {
	BEInnkeepersHeadband() : base() {
		$this.Name               = 'Innkeeper''s Headband'
		$this.MapObjName         = 'innkeepersheadband'
		$this.PurchasePrice      = 40
		$this.SellPrice          = 20
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple headband worn by innkeepers, offering a welcoming demeanor.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMerchantsTurban : BEHelmet {
	BEMerchantsTurban() : base() {
		$this.Name               = 'Merchant''s Turban'
		$this.MapObjName         = 'merchantsturban'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A practical turban worn by merchants, suitable for travel.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECaravanMastersHelm : BEHelmet {
	BECaravanMastersHelm() : base() {
		$this.Name               = 'Caravan Master''s Helm'
		$this.MapObjName         = 'caravanmastershelm'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy helm worn by caravan masters, protecting during long journeys.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESailorsSouwester : BEHelmet {
	BESailorsSouwester() : base() {
		$this.Name               = 'Sailor''s Sou''wester'
		$this.MapObjName         = 'sailorssouwester'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A waterproof hat worn by sailors, protecting from spray and rain.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPirateCaptainsTricorne : BEHelmet {
	BEPirateCaptainsTricorne() : base() {
		$this.Name               = 'Pirate Captain''s Tricorne'
		$this.MapObjName         = 'piratecaptainstricorne'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A classic pirate captain''s hat, inspiring fear and loyalty.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBuccaneersBandana : BEHelmet {
	BEBuccaneersBandana() : base() {
		$this.Name               = 'Buccaneer''s Bandana'
		$this.MapObjName         = 'buccaneersbandana'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A colorful bandana worn by buccaneers, signifying their adventurous spirit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEExplorersPithHelmet : BEHelmet {
	BEExplorersPithHelmet() : base() {
		$this.Name               = 'Explorer''s Pith Helmet'
		$this.MapObjName         = 'explorerspithhelmet'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A classic pith helmet for explorers, offering sun protection in exotic lands.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBigGameHuntersHat : BEHelmet {
	BEBigGameHuntersHat() : base() {
		$this.Name               = 'Big Game Hunter''s Hat'
		$this.MapObjName         = 'biggamehuntershat'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A distinctive hat worn by big game hunters, indicating their prowess.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESafariHat : BEHelmet {
	BESafariHat() : base() {
		$this.Name               = 'Safari Hat'
		$this.MapObjName         = 'safarihat'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A practical hat for safaris, providing sun protection and camouflage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEForestersCap : BEHelmet {
	BEForestersCap() : base() {
		$this.Name               = 'Forester''s Cap'
		$this.MapObjName         = 'foresterscap'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cap for foresters, blending in with nature and providing light protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGardenersHat : BEHelmet {
	BEGardenersHat() : base() {
		$this.Name               = 'Gardener''s Hat'
		$this.MapObjName         = 'gardenershat'
		$this.PurchasePrice      = 30
		$this.SellPrice          = 15
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A wide-brimmed hat for gardeners, protecting from the sun.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFloristsGarland : BEHelmet {
	BEFloristsGarland() : base() {
		$this.Name               = 'Florist''s Garland'
		$this.MapObjName         = 'floristsgarland'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A delicate garland of flowers worn by florists, imbued with subtle nature magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEZoologistsHeadband : BEHelmet {
	BEZoologistsHeadband() : base() {
		$this.Name               = 'Zoologist''s Headband'
		$this.MapObjName         = 'zoologistsheadband'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A headband that aids zoologists in understanding animal behavior.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBotanistsCirclet : BEHelmet {
	BEBotanistsCirclet() : base() {
		$this.Name               = 'Botanist''s Circlet'
		$this.MapObjName         = 'botanistscirclet'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A circlet that enhances a botanist''s knowledge of plants and their properties.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGeologistsHardHat : BEHelmet {
	BEGeologistsHardHat() : base() {
		$this.Name               = 'Geologist''s Hard Hat'
		$this.MapObjName         = 'geologistshardhat'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hard hat used by geologists, protecting from falling rocks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAstronomersHood : BEHelmet {
	BEAstronomersHood() : base() {
		$this.Name               = 'Astronomer''s Hood'
		$this.MapObjName         = 'astronomershood'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hood that aids astronomers in observing the night sky.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHistoriansSpectacles : BEHelmet {
	BEHistoriansSpectacles() : base() {
		$this.Name               = 'Historian''s Spectacles'
		$this.MapObjName         = 'historiansspectacles'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Spectacles that aid historians in deciphering ancient texts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELibrariansEyeshade : BEHelmet {
	BELibrariansEyeshade() : base() {
		$this.Name               = 'Librarian''s Eye-shade'
		$this.MapObjName         = 'librarianseyeshade'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An eye-shade that helps librarians focus on their reading.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECartographersCompassHelm : BEHelmet {
	BECartographersCompassHelm() : base() {
		$this.Name               = 'Cartographer''s Compass Helm'
		$this.MapObjName         = 'cartographerscompasshelm'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm with an integrated compass, aiding cartographers in mapping.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArtistsBeret : BEHelmet {
	BEArtistsBeret() : base() {
		$this.Name               = 'Artist''s Beret'
		$this.MapObjName         = 'artistsberet'
		$this.PurchasePrice      = 60
		$this.SellPrice          = 30
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A classic beret worn by artists, inspiring creativity and vision.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMusiciansHeadband : BEHelmet {
	BEMusiciansHeadband() : base() {
		$this.Name               = 'Musician''s Headband'
		$this.MapObjName         = 'musiciansheadband'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A headband that helps musicians maintain rhythm and harmony.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPoetsLaurelWreath : BEHelmet {
	BEPoetsLaurelWreath() : base() {
		$this.Name               = 'Poet''s Laurel Wreath'
		$this.MapObjName         = 'poetslaurelwreath'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A laurel wreath worn by poets, inspiring eloquence.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWritersQuillCap : BEHelmet {
	BEWritersQuillCap() : base() {
		$this.Name               = 'Writer''s Quill Cap'
		$this.MapObjName         = 'writersquillcap'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cap with a quill, aiding writers in their craft.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOratorsHeadpiece : BEHelmet {
	BEOratorsHeadpiece() : base() {
		$this.Name               = 'Orator''s Headpiece'
		$this.MapObjName         = 'oratorsheadpiece'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A stately headpiece worn by orators, enhancing their persuasive abilities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDiplomatsHat : BEHelmet {
	BEDiplomatsHat() : base() {
		$this.Name               = 'Diplomat''s Hat'
		$this.MapObjName         = 'diplomatshat'
		$this.PurchasePrice      = 140
		$this.SellPrice          = 70
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A refined hat worn by diplomats, conveying respect and authority.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENegotiatorsHeadband : BEHelmet {
	BENegotiatorsHeadband() : base() {
		$this.Name               = 'Negotiator''s Headband'
		$this.MapObjName         = 'negotiatorsheadband'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A headband that aids negotiators in finding common ground.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpysDisguiseHat : BEHelmet {
	BESpysDisguiseHat() : base() {
		$this.Name               = 'Spy''s Disguise Hat'
		$this.MapObjName         = 'spysdisguisehat'
		$this.PurchasePrice      = 40
		$this.SellPrice          = 20
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple hat used by spies to blend into crowds.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInfiltratorsMask : BEHelmet {
	BEInfiltratorsMask() : base() {
		$this.Name               = 'Infiltrator''s Mask'
		$this.MapObjName         = 'infiltratorsmask'
		$this.PurchasePrice      = 160
		$this.SellPrice          = 80
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark mask worn by infiltrators, aiding in covert operations.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESentrysHelmet : BEHelmet {
	BESentrysHelmet() : base() {
		$this.Name               = 'Sentry''s Helmet'
		$this.MapObjName         = 'sentryshelmet'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::Defense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A standard helmet for sentries, providing reliable protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBodyguardsHelm : BEHelmet {
	BEBodyguardsHelm() : base() {
		$this.Name               = 'Bodyguard''s Helm'
		$this.MapObjName         = 'bodyguardshelm'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy helm for bodyguards, ensuring the protection of their charge.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEExecutionersHood : BEHelmet {
	BEExecutionersHood() : base() {
		$this.Name               = 'Executioner''s Hood'
		$this.MapObjName         = 'executionershood'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A grim hood worn by executioners, concealing their identity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEJailersHelmet : BEHelmet {
	BEJailersHelmet() : base() {
		$this.Name               = 'Jailer''s Helmet'
		$this.MapObjName         = 'jailershelmet'
		$this.PurchasePrice      = 190
		$this.SellPrice          = 95
		$this.TargetStats        = @{
			[StatId]::Defense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy helmet for jailers, protecting them from inmates.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEJudgesWig : BEHelmet {
	BEJudgesWig() : base() {
		$this.Name               = 'Judge''s Wig'
		$this.MapObjName         = 'judgeswig'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A formal wig worn by judges, symbolizing justice and authority.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELawyersHeadband : BEHelmet {
	BELawyersHeadband() : base() {
		$this.Name               = 'Lawyer''s Headband'
		$this.MapObjName         = 'lawyersheadband'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A modest headband for lawyers, aiding in quick thinking.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDoctorsHeadMirror : BEHelmet {
	BEDoctorsHeadMirror() : base() {
		$this.Name               = 'Doctor''s Head Mirror'
		$this.MapObjName         = 'doctorsheadmirror'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A reflective mirror worn by doctors, aiding in examinations.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENursesCap : BEHelmet {
	BENursesCap() : base() {
		$this.Name               = 'Nurse''s Cap'
		$this.MapObjName         = 'nursescap'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple cap worn by nurses, symbolizing care and dedication.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEPatientsHeadwrap : BEHelmet {
	BEPatientsHeadwrap() : base() {
		$this.Name               = 'Patient''s Headwrap'
		$this.MapObjName         = 'patientsheadwrap'
		$this.PurchasePrice      = 20
		$this.SellPrice          = 10
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A soft headwrap for patients, offering comfort.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEApothecarysGoggles : BEHelmet {
	BEApothecarysGoggles() : base() {
		$this.Name               = 'Apothecary''s Goggles'
		$this.MapObjName         = 'apothecarysgoggles'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Protective goggles worn by apothecaries, for handling volatile concoctions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEUndertakersTopHat : BEHelmet {
	BEUndertakersTopHat() : base() {
		$this.Name               = 'Undertaker''s Top Hat'
		$this.MapObjName         = 'undertakerstophat'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A solemn top hat worn by undertakers, reflecting their profession.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGravekeepersLanternHelm : BEHelmet {
	BEGravekeepersLanternHelm() : base() {
		$this.Name               = 'Gravekeeper''s Lantern Helm'
		$this.MapObjName         = 'gravekeeperslanternhelm'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm with an integrated lantern, aiding gravekeepers at night.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFuneralDirectorsBowlerHat : BEHelmet {
	BEFuneralDirectorsBowlerHat() : base() {
		$this.Name               = 'Funeral Director''s Bowler Hat'
		$this.MapObjName         = 'funeraldirectorsbowlerhat'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A formal bowler hat worn by funeral directors, conveying professionalism.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMournersVeil : BEHelmet {
	BEMournersVeil() : base() {
		$this.Name               = 'Mourner''s Veil'
		$this.MapObjName         = 'mournersveil'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark veil worn by mourners, symbolizing grief.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESpiritMediumsHeadband : BEHelmet {
	BESpiritMediumsHeadband() : base() {
		$this.Name               = 'Spirit Medium''s Headband'
		$this.MapObjName         = 'spiritmediumsheadband'
		$this.PurchasePrice      = 160
		$this.SellPrice          = 80
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A headband that aids spirit mediums in communicating with the deceased.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEExorcistsHeadpiece : BEHelmet {
	BEExorcistsHeadpiece() : base() {
		$this.Name               = 'Exorcist''s Headpiece'
		$this.MapObjName         = 'exorcistsheadpiece'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A holy headpiece worn by exorcists, warding off demonic influence.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInquisitorsBlindfold : BEHelmet {
	BEInquisitorsBlindfold() : base() {
		$this.Name               = 'Inquisitor''s Blindfold'
		$this.MapObjName         = 'inquisitorsblindfold'
		$this.PurchasePrice      = 170
		$this.SellPrice          = 85
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A blindfold worn by certain inquisitors, allowing them to focus on inner vision.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZealotsHeadwrap : BEHelmet {
	BEZealotsHeadwrap() : base() {
		$this.Name               = 'Zealot''s Headwrap'
		$this.MapObjName         = 'zealotsheadwrap'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple headwrap worn by zealots, signifying their fervent devotion.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFanaticsMask : BEHelmet {
	BEFanaticsMask() : base() {
		$this.Name               = 'Fanatic''s Mask'
		$this.MapObjName         = 'fanaticsmask'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A terrifying mask worn by fanatics, inspiring fear and unwavering loyalty.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHereticsMarkHeadband : BEHelmet {
	BEHereticsMarkHeadband() : base() {
		$this.Name               = 'Heretic''s Mark Headband'
		$this.MapObjName         = 'hereticsmarkheadband'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cursed headband that marks the wearer as a heretic.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEApostatesHood : BEHelmet {
	BEApostatesHood() : base() {
		$this.Name               = 'Apostate''s Hood'
		$this.MapObjName         = 'apostateshood'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark hood worn by apostates, symbolizing their rejection of faith.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECultistsHood : BEHelmet {
	BECultistsHood() : base() {
		$this.Name               = 'Cultist''s Hood'
		$this.MapObjName         = 'cultistshood'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sinister hood worn by cultists, aiding in dark rituals.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESacrificesShroud : BEHelmet {
	BESacrificesShroud() : base() {
		$this.Name               = 'Sacrifice''s Shroud'
		$this.MapObjName         = 'sacrificesshroud'
		$this.PurchasePrice      = 10
		$this.SellPrice          = 5
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple shroud for ritual sacrifices, offering no protection.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERitualistsMask : BEHelmet {
	BERitualistsMask() : base() {
		$this.Name               = 'Ritualist''s Mask'
		$this.MapObjName         = 'ritualistsmask'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ceremonial mask worn by ritualists, enhancing their arcane ceremonies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivinationOrbHelm : BEHelmet {
	BEDivinationOrbHelm() : base() {
		$this.Name               = 'Divination Orb Helm'
		$this.MapObjName         = 'divinationorbhelm'
		$this.PurchasePrice      = 220
		$this.SellPrice          = 110
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm with a scrying orb, aiding in divination.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESeersEyepatch : BEHelmet {
	BESeersEyepatch() : base() {
		$this.Name               = 'Seer''s Eyepatch'
		$this.MapObjName         = 'seerseyepatch'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An eyepatch worn by seers, sometimes to focus their prophetic visions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMysticsHeadband : BEHelmet {
	BEMysticsHeadband() : base() {
		$this.Name               = 'Mystic''s Headband'
		$this.MapObjName         = 'mysticsheadband'
		$this.PurchasePrice      = 140
		$this.SellPrice          = 70
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple headband worn by mystics, aiding in meditation and enlightenment.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEnlightenedOnesCrown : BEHelmet {
	BEEnlightenedOnesCrown() : base() {
		$this.Name               = 'Enlightened One''s Crown'
		$this.MapObjName         = 'enlightenedonescrown'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown worn by those who have achieved enlightenment, radiating inner peace.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAscendantsHalo : BEHelmet {
	BEAscendantsHalo() : base() {
		$this.Name               = 'Ascendant''s Halo'
		$this.MapObjName         = 'ascendantshalo'
		$this.PurchasePrice      = 2800
		$this.SellPrice          = 1400
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A halo that signifies ascension to a higher plane of existence.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENirvanaHelm : BEHelmet {
	BENirvanaHelm() : base() {
		$this.Name               = 'Nirvana Helm'
		$this.MapObjName         = 'nirvanahelm'
		$this.PurchasePrice      = 3000
		$this.SellPrice          = 1500
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that grants the wearer a state of ultimate peace and detachment.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESagesCircletofAges : BEHelmet {
	BESagesCircletofAges() : base() {
		$this.Name               = 'Sage''s Circlet of Ages'
		$this.MapObjName         = 'sagescircletofages'
		$this.PurchasePrice      = 3200
		$this.SellPrice          = 1600
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A circlet that grants access to the wisdom of all ages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEProphetsCrownofForetelling : BEHelmet {
	BEProphetsCrownofForetelling() : base() {
		$this.Name               = 'Prophet''s Crown of Foretelling'
		$this.MapObjName         = 'prophetscrownofforetelling'
		$this.PurchasePrice      = 3500
		$this.SellPrice          = 1750
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown that grants glimpses of future events, both good and ill.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOraclesDivineSightOrb : BEHelmet {
	BEOraclesDivineSightOrb() : base() {
		$this.Name               = 'Oracle''s Divine Sight Orb'
		$this.MapObjName         = 'oraclesdivinesightorb'
		$this.PurchasePrice      = 3800
		$this.SellPrice          = 1900
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An orb integrated into a helm, granting omniscient vision.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECosmicWanderersHood : BEHelmet {
	BECosmicWanderersHood() : base() {
		$this.Name               = 'Cosmic Wanderer''s Hood'
		$this.MapObjName         = 'cosmicwanderershood'
		$this.PurchasePrice      = 4000
		$this.SellPrice          = 2000
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hood that aids wanderers across the cosmos, protecting them from stellar energies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarlightHelm : BEHelmet {
	BEStarlightHelm() : base() {
		$this.Name               = 'Starlight Helm'
		$this.MapObjName         = 'starlighthelm'
		$this.PurchasePrice      = 4200
		$this.SellPrice          = 2100
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that gathers starlight, empowering the wearer with celestial energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENebulaVeil : BEHelmet {
	BENebulaVeil() : base() {
		$this.Name               = 'Nebula Veil'
		$this.MapObjName         = 'nebulaveil'
		$this.PurchasePrice      = 4500
		$this.SellPrice          = 2250
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A veil that shimmers with the colors of a nebula, concealing the wearer''s true form.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESolarFlareDiadem : BEHelmet {
	BESolarFlareDiadem() : base() {
		$this.Name               = 'Solar Flare Diadem'
		$this.MapObjName         = 'solarflarediadem'
		$this.PurchasePrice      = 4800
		$this.SellPrice          = 2400
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A diadem that radiates solar energy, providing protection and offensive power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BELunarEmbraceTiara : BEHelmet {
	BELunarEmbraceTiara() : base() {
		$this.Name               = 'Lunar Embrace Tiara'
		$this.MapObjName         = 'lunarembracetiara'
		$this.PurchasePrice      = 4700
		$this.SellPrice          = 2350
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 37
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiara that glows with moonlight, enhancing nocturnal abilities and grace.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGalacticCoreHelm : BEHelmet {
	BEGalacticCoreHelm() : base() {
		$this.Name               = 'Galactic Core Helm'
		$this.MapObjName         = 'galacticcorehelm'
		$this.PurchasePrice      = 5000
		$this.SellPrice          = 2500
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm infused with the power of a galactic core, granting immense cosmic power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEUniverseShardHelm : BEHelmet {
	BEUniverseShardHelm() : base() {
		$this.Name               = 'Universe Shard Helm'
		$this.MapObjName         = 'universeshardhelm'
		$this.PurchasePrice      = 5500
		$this.SellPrice          = 2750
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm made from fragments of the universe itself, granting unimaginable power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERealityAnchorHelm : BEHelmet {
	BERealityAnchorHelm() : base() {
		$this.Name               = 'Reality Anchor Helm'
		$this.MapObjName         = 'realityanchorhelm'
		$this.PurchasePrice      = 6000
		$this.SellPrice          = 3000
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that anchors the wearer to reality, preventing temporal or dimensional displacement.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamWeaversTiara : BEHelmet {
	BEDreamWeaversTiara() : base() {
		$this.Name               = 'Dream Weaver''s Tiara'
		$this.MapObjName         = 'dreamweaverstiara'
		$this.PurchasePrice      = 6500
		$this.SellPrice          = 3250
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiara that allows the wearer to weave dreams into reality.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BENightmareKingsCrown : BEHelmet {
	BENightmareKingsCrown() : base() {
		$this.Name               = 'Nightmare King''s Crown'
		$this.MapObjName         = 'nightmarekingscrown'
		$this.PurchasePrice      = 7000
		$this.SellPrice          = 3500
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown that harnesses nightmares, turning them into tangible fear for enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEternalSlumberHelm : BEHelmet {
	BEEternalSlumberHelm() : base() {
		$this.Name               = 'Eternal Slumber Helm'
		$this.MapObjName         = 'eternalslumberhelm'
		$this.PurchasePrice      = 7500
		$this.SellPrice          = 3750
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 65
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that puts enemies into an eternal slumber, rendering them harmless.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidGazersCrown : BEHelmet {
	BEVoidGazersCrown() : base() {
		$this.Name               = 'Void Gazer''s Crown'
		$this.MapObjName         = 'voidgazerscrown'
		$this.PurchasePrice      = 8000
		$this.SellPrice          = 4000
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 70
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown that allows deep gazes into the void, granting forbidden knowledge.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChaosLordsHelm : BEHelmet {
	BEChaosLordsHelm() : base() {
		$this.Name               = 'Chaos Lord''s Helm'
		$this.MapObjName         = 'chaoslordshelm'
		$this.PurchasePrice      = 8500
		$this.SellPrice          = 4250
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 75
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm of pure chaos, granting unpredictable and devastating power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEOrderKeepersHelm : BEHelmet {
	BEOrderKeepersHelm() : base() {
		$this.Name               = 'Order Keeper''s Helm'
		$this.MapObjName         = 'orderkeepershelm'
		$this.PurchasePrice      = 9000
		$this.SellPrice          = 4500
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 80
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that imposes order on chaos, suppressing unruly energies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBalanceKeepersHelm : BEHelmet {
	BEBalanceKeepersHelm() : base() {
		$this.Name               = 'Balance Keeper''s Helm'
		$this.MapObjName         = 'balancekeepershelm'
		$this.PurchasePrice      = 9500
		$this.SellPrice          = 4750
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 85
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that maintains the balance between light and darkness, good and evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETruthSeekersHelm : BEHelmet {
	BETruthSeekersHelm() : base() {
		$this.Name               = 'Truth Seeker''s Helm'
		$this.MapObjName         = 'truthseekershelm'
		$this.PurchasePrice      = 10000
		$this.SellPrice          = 5000
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 90
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that reveals the truth, cutting through illusions and lies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKnowledgeBringersCrown : BEHelmet {
	BEKnowledgeBringersCrown() : base() {
		$this.Name               = 'Knowledge Bringer''s Crown'
		$this.MapObjName         = 'knowledgebringerscrown'
		$this.PurchasePrice      = 10500
		$this.SellPrice          = 5250
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 95
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown that bestows immense knowledge upon the wearer.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWisdomGiversHelm : BEHelmet {
	BEWisdomGiversHelm() : base() {
		$this.Name               = 'Wisdom Giver''s Helm'
		$this.MapObjName         = 'wisdomgivershelm'
		$this.PurchasePrice      = 11000
		$this.SellPrice          = 5500
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 100
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that grants profound wisdom, allowing the wearer to see beyond.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDestructionHelm : BEHelmet {
	BEDestructionHelm() : base() {
		$this.Name               = 'Destruction Helm'
		$this.MapObjName         = 'destructionhelm'
		$this.PurchasePrice      = 12000
		$this.SellPrice          = 6000
		$this.TargetStats        = @{
			[StatId]::Defense = 100
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that embodies pure destruction, increasing offensive power exponentially.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECreationHelm : BEHelmet {
	BECreationHelm() : base() {
		$this.Name               = 'Creation Helm'
		$this.MapObjName         = 'creationhelm'
		$this.PurchasePrice      = 12000
		$this.SellPrice          = 6000
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 100
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that embodies pure creation, allowing for the manifestation of wonders.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BELifeBringersCirclet : BEHelmet {
	BELifeBringersCirclet() : base() {
		$this.Name               = 'Life Bringer''s Circlet'
		$this.MapObjName         = 'lifebringerscirclet'
		$this.PurchasePrice      = 11500
		$this.SellPrice          = 5750
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 98
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A circlet that radiates life energy, healing all around the wearer.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDeathGiversHelm : BEHelmet {
	BEDeathGiversHelm() : base() {
		$this.Name               = 'Death Giver''s Helm'
		$this.MapObjName         = 'deathgivershelm'
		$this.PurchasePrice      = 11500
		$this.SellPrice          = 5750
		$this.TargetStats        = @{
			[StatId]::Defense = 98
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that radiates death energy, bringing ruin to enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BELightsBeaconHelm : BEHelmet {
	BELightsBeaconHelm() : base() {
		$this.Name               = 'Light''s Beacon Helm'
		$this.MapObjName         = 'lightsbeaconhelm'
		$this.PurchasePrice      = 13000
		$this.SellPrice          = 6500
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 105
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that acts as a beacon of pure light, dispelling all darkness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowsEmbraceHelm : BEHelmet {
	BEShadowsEmbraceHelm() : base() {
		$this.Name               = 'Shadow''s Embrace Helm'
		$this.MapObjName         = 'shadowsembracehelm'
		$this.PurchasePrice      = 13000
		$this.SellPrice          = 6500
		$this.TargetStats        = @{
			[StatId]::Defense = 105
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that embodies pure shadow, allowing the wearer to command darkness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEElementalLordsCrown : BEHelmet {
	BEElementalLordsCrown() : base() {
		$this.Name               = 'Elemental Lord''s Crown'
		$this.MapObjName         = 'elementallordscrown'
		$this.PurchasePrice      = 14000
		$this.SellPrice          = 7000
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown that grants mastery over all four classical elements.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETimeLordsHelm : BEHelmet {
	BETimeLordsHelm() : base() {
		$this.Name               = 'Time Lord''s Helm'
		$this.MapObjName         = 'timelordshelm'
		$this.PurchasePrice      = 15000
		$this.SellPrice          = 7500
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 75
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that grants absolute control over time itself, allowing reality rewriting.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpaceLordsHelm : BEHelmet {
	BESpaceLordsHelm() : base() {
		$this.Name               = 'Space Lord''s Helm'
		$this.MapObjName         = 'spacelordshelm'
		$this.PurchasePrice      = 15000
		$this.SellPrice          = 7500
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 75
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that grants absolute control over space, allowing teleportation and reality warping.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECosmicLordsHelm : BEHelmet {
	BECosmicLordsHelm() : base() {
		$this.Name               = 'Cosmic Lord''s Helm'
		$this.MapObjName         = 'cosmiclordshelm'
		$this.PurchasePrice      = 20000
		$this.SellPrice          = 10000
		$this.TargetStats        = @{
			[StatId]::Defense = 100
			[StatId]::MagicDefense = 100
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that grants dominion over both time and space, truly omnipotent.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInfinityIITurtleHelmet : BEHelmet {
    BEInfinityIITurtleHelmet() : base() {
        $this.Name               = 'Infinity II Turtle Helmet'
        $this.MapObjName         = 'infinityiiturttlehelmet'
        $this.PurchasePrice      = 250000
        $this.SellPrice          = 0
        $this.TargetStats        = @{
            [StatId]::Defense      = 250
            [StatId]::MagicDefense = 250
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'When someone attacks you, that means it spawns 60K turtles!'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
        $this.TargetGender       = [Gender]::Unisex
    }
}

Class BEBearHelmet : BEHelmet {
    BEBearHelmet() : base() {
        $this.Name               = 'Bear Helmet'
        $this.MapObjName         = 'bearhelmet'
        $this.PurchasePrice      = 0
        $this.SellPrice          = 0
        $this.TargetStats        = @{
            [StatId]::Defense      = 999
            [StatId]::MagicDefense = 999
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'The ultimate in fuzzy headwear.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
        $this.TargetGender       = [Gender]::Unisex
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# ARMORS
#
#//////////////////////////////////////////////////////////////////////////////

Class BECottonTunic : BEArmor {
	BECottonTunic() : base() {
		$this.Name               = 'Cotton Tunic'
		$this.MapObjName         = 'cottontunic'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple tunic made of soft cotton, comfortable for everyday wear.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELeatherVest : BEArmor {
	BELeatherVest() : base() {
		$this.Name               = 'Leather Vest'
		$this.MapObjName         = 'leathervest'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A basic leather vest offering minimal protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPaddedShirt : BEArmor {
	BEPaddedShirt() : base() {
		$this.Name               = 'Padded Shirt'
		$this.MapObjName         = 'paddedshirt'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A quilted shirt providing light defense.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELinenRobe : BEArmor {
	BELinenRobe() : base() {
		$this.Name               = 'Linen Robe'
		$this.MapObjName         = 'linenrobe'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A loose-fitting robe suitable for mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStuddedLeatherArmor : BEArmor {
	BEStuddedLeatherArmor() : base() {
		$this.Name               = 'Studded Leather Armor'
		$this.MapObjName         = 'studdedleatherarmor'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Leather armor reinforced with metal studs.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChainmailVest : BEArmor {
	BEChainmailVest() : base() {
		$this.Name               = 'Chainmail Vest'
		$this.MapObjName         = 'chainmailvest'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest made of interlocking metal rings.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIronBreastplate : BEArmor {
	BEIronBreastplate() : base() {
		$this.Name               = 'Iron Breastplate'
		$this.MapObjName         = 'ironbreastplate'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A solid iron plate protecting the chest.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESilkRobe : BEArmor {
	BESilkRobe() : base() {
		$this.Name               = 'Silk Robe'
		$this.MapObjName         = 'silkrobe'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A luxurious robe woven from fine silk, enhancing magical prowess.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBronzeCuirass : BEArmor {
	BEBronzeCuirass() : base() {
		$this.Name               = 'Bronze Cuirass'
		$this.MapObjName         = 'bronzecuirass'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy chest piece crafted from bronze.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMithrilChainmail : BEArmor {
	BEMithrilChainmail() : base() {
		$this.Name               = 'Mithril Chainmail'
		$this.MapObjName         = 'mithrilchainmail'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Lightweight yet incredibly strong chainmail.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESteelPlateArmor : BEArmor {
	BESteelPlateArmor() : base() {
		$this.Name               = 'Steel Plate Armor'
		$this.MapObjName         = 'steelplatearmor'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy and reliable steel plate armor.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEnchantedRobe : BEArmor {
	BEEnchantedRobe() : base() {
		$this.Name               = 'Enchanted Robe'
		$this.MapObjName         = 'enchantedrobe'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe imbued with minor magical properties.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonhideVest : BEArmor {
	BEDragonhideVest() : base() {
		$this.Name               = 'Dragonhide Vest'
		$this.MapObjName         = 'dragonhidevest'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest crafted from the tough hide of a dragon.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKnightsCuirass : BEArmor {
	BEKnightsCuirass() : base() {
		$this.Name               = 'Knight''s Cuirass'
		$this.MapObjName         = 'knightscuirass'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'The polished chest plate of a valiant knight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMysticRobe : BEArmor {
	BEMysticRobe() : base() {
		$this.Name               = 'Mystic Robe'
		$this.MapObjName         = 'mysticrobe'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe pulsating with arcane energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAdamantitePlate : BEArmor {
	BEAdamantitePlate() : base() {
		$this.Name               = 'Adamantite Plate'
		$this.MapObjName         = 'adamantiteplate'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Extremely durable armor forged from adamantite.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECelestialTunic : BEArmor {
	BECelestialTunic() : base() {
		$this.Name               = 'Celestial Tunic'
		$this.MapObjName         = 'celestialtunic'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tunic said to be woven from starlight, offering slight protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETravelersShirt : BEArmor {
	BETravelersShirt() : base() {
		$this.Name               = 'Traveler''s Shirt'
		$this.MapObjName         = 'travelersshirt'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A comfortable and durable shirt for long journeys.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFishermansVest : BEArmor {
	BEFishermansVest() : base() {
		$this.Name               = 'Fisherman''s Vest'
		$this.MapObjName         = 'fishermansvest'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A practical vest with many pockets, surprisingly resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWoolenTunic : BEArmor {
	BEWoolenTunic() : base() {
		$this.Name               = 'Woolen Tunic'
		$this.MapObjName         = 'woolentunic'
		$this.PurchasePrice      = 60
		$this.SellPrice          = 30
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A warm tunic, ideal for colder climates.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELeatherJacket : BEArmor {
	BELeatherJacket() : base() {
		$this.Name               = 'Leather Jacket'
		$this.MapObjName         = 'leatherjacket'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::Defense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A stylish leather jacket offering modest defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBrigandineVest : BEArmor {
	BEBrigandineVest() : base() {
		$this.Name               = 'Brigandine Vest'
		$this.MapObjName         = 'brigandinevest'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest made of small metal plates riveted to cloth or leather.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEScaleMail : BEArmor {
	BEScaleMail() : base() {
		$this.Name               = 'Scale Mail'
		$this.MapObjName         = 'scalemail'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Armor made from overlapping scales of metal or hardened leather.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDarkRobe : BEArmor {
	BEDarkRobe() : base() {
		$this.Name               = 'Dark Robe'
		$this.MapObjName         = 'darkrobe'
		$this.PurchasePrice      = 380
		$this.SellPrice          = 190
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A foreboding robe, favored by shadow mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGuardiansBreastplate : BEArmor {
	BEGuardiansBreastplate() : base() {
		$this.Name               = 'Guardian''s Breastplate'
		$this.MapObjName         = 'guardiansbreastplate'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy breastplate designed for protectors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEElvenChainmail : BEArmor {
	BEElvenChainmail() : base() {
		$this.Name               = 'Elven Chainmail'
		$this.MapObjName         = 'elvenchainmail'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Delicately crafted chainmail, light and resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPaladinsCuirass : BEArmor {
	BEPaladinsCuirass() : base() {
		$this.Name               = 'Paladin''s Cuirass'
		$this.MapObjName         = 'paladinscuirass'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A blessed cuirass, offering both defense and spiritual resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESorcerersRobe : BEArmor {
	BESorcerersRobe() : base() {
		$this.Name               = 'Sorcerer''s Robe'
		$this.MapObjName         = 'sorcerersrobe'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe designed to amplify magical incantations.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDwarvenPlate : BEArmor {
	BEDwarvenPlate() : base() {
		$this.Name               = 'Dwarven Plate'
		$this.MapObjName         = 'dwarvenplate'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy and robust plate armor, masterfully forged.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhoenixRobe : BEArmor {
	BEPhoenixRobe() : base() {
		$this.Name               = 'Phoenix Robe'
		$this.MapObjName         = 'phoenixrobe'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vibrant robe said to grant its wearer renewed vigor.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHerosPlate : BEArmor {
	BEHerosPlate() : base() {
		$this.Name               = 'Hero''s Plate'
		$this.MapObjName         = 'herosplate'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Defense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'The legendary plate armor of a true hero.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESimpleDress : BEArmor {
	BESimpleDress() : base() {
		$this.Name               = 'Simple Dress'
		$this.MapObjName         = 'simpledress'
		$this.PurchasePrice      = 60
		$this.SellPrice          = 30
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A basic dress, comfortable for daily wear.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMaidensBlouse : BEArmor {
	BEMaidensBlouse() : base() {
		$this.Name               = 'Maiden''s Blouse'
		$this.MapObjName         = 'maidensblouse'
		$this.PurchasePrice      = 75
		$this.SellPrice          = 38
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A delicate blouse often worn by young women.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEChefsApron : BEArmor {
	BEChefsApron() : base() {
		$this.Name               = 'Chef''s Apron'
		$this.MapObjName         = 'chefsapron'
		$this.PurchasePrice      = 85
		$this.SellPrice          = 42
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A surprisingly durable apron, good for resisting minor damage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMerchantsVest : BEArmor {
	BEMerchantsVest() : base() {
		$this.Name               = 'Merchant''s Vest'
		$this.MapObjName         = 'merchantsvest'
		$this.PurchasePrice      = 95
		$this.SellPrice          = 48
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple vest with hidden pockets, provides little defense.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEApprenticesRobe : BEArmor {
	BEApprenticesRobe() : base() {
		$this.Name               = 'Apprentice''s Robe'
		$this.MapObjName         = 'apprenticesrobe'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A plain robe worn by aspiring mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHuntersTunic : BEArmor {
	BEHuntersTunic() : base() {
		$this.Name               = 'Hunter''s Tunic'
		$this.MapObjName         = 'hunterstunic'
		$this.PurchasePrice      = 160
		$this.SellPrice          = 80
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rugged tunic, ideal for tracking and stealth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEReinforcedLeather : BEArmor {
	BEReinforcedLeather() : base() {
		$this.Name               = 'Reinforced Leather'
		$this.MapObjName         = 'reinforcedleather'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Leather armor with additional plating for better defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBanditsJerkin : BEArmor {
	BEBanditsJerkin() : base() {
		$this.Name               = 'Bandit''s Jerkin'
		$this.MapObjName         = 'banditsjerkin'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A patched-up jerkin, good for mobility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMagesTunic : BEArmor {
	BEMagesTunic() : base() {
		$this.Name               = 'Mage''s Tunic'
		$this.MapObjName         = 'magestunic'
		$this.PurchasePrice      = 220
		$this.SellPrice          = 110
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A comfortable tunic that aids in spellcasting.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGothicPlate : BEArmor {
	BEGothicPlate() : base() {
		$this.Name               = 'Gothic Plate'
		$this.MapObjName         = 'gothicplate'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Dark, imposing plate armor with sharp edges.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAcolytesRobe : BEArmor {
	BEAcolytesRobe() : base() {
		$this.Name               = 'Acolyte''s Robe'
		$this.MapObjName         = 'acolytesrobe'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A solemn robe worn by those devoted to ancient deities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrusadersBreastplate : BEArmor {
	BECrusadersBreastplate() : base() {
		$this.Name               = 'Crusader''s Breastplate'
		$this.MapObjName         = 'crusadersbreastplate'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 23
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A holy breastplate, blessed against evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERoyalGown : BEArmor {
	BERoyalGown() : base() {
		$this.Name               = 'Royal Gown'
		$this.MapObjName         = 'royalgown'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An elegant gown, offering prestige more than protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWarriorsTunic : BEArmor {
	BEWarriorsTunic() : base() {
		$this.Name               = 'Warrior''s Tunic'
		$this.MapObjName         = 'warriorstunic'
		$this.PurchasePrice      = 190
		$this.SellPrice          = 95
		$this.TargetStats        = @{
			[StatId]::Defense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy tunic designed for frontline combatants.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThiefsVest : BEArmor {
	BEThiefsVest() : base() {
		$this.Name               = 'Thief''s Vest'
		$this.MapObjName         = 'thiefsvest'
		$this.PurchasePrice      = 210
		$this.SellPrice          = 105
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A lightweight vest designed for agility and concealment.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEClericsVestments : BEArmor {
	BEClericsVestments() : base() {
		$this.Name               = 'Cleric''s Vestments'
		$this.MapObjName         = 'clericsvestments'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blessed vestments providing spiritual protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGladiatorsHarness : BEArmor {
	BEGladiatorsHarness() : base() {
		$this.Name               = 'Gladiator''s Harness'
		$this.MapObjName         = 'gladiatorsharness'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A minimal but tough harness designed for arena combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESamuraiArmor : BEArmor {
	BESamuraiArmor() : base() {
		$this.Name               = 'Samurai Armor'
		$this.MapObjName         = 'samuraiarmor'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Intricate and strong armor, balanced for offense and defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENinjaGarb : BEArmor {
	BENinjaGarb() : base() {
		$this.Name               = 'Ninja Garb'
		$this.MapObjName         = 'ninjagarb'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Dark, flexible clothing for stealth and swift movement.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVestoftheWild : BEArmor {
	BEVestoftheWild() : base() {
		$this.Name               = 'Vest of the Wild'
		$this.MapObjName         = 'vestofthewild'
		$this.PurchasePrice      = 230
		$this.SellPrice          = 115
		$this.TargetStats        = @{
			[StatId]::Defense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest made from beast hides, ideal for wilderness survival.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECourtWizardsRobe : BEArmor {
	BECourtWizardsRobe() : base() {
		$this.Name               = 'Court Wizard''s Robe'
		$this.MapObjName         = 'courtwizardsrobe'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 23
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A finely embroidered robe, befitting a royal mage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHeavyLeatherArmor : BEArmor {
	BEHeavyLeatherArmor() : base() {
		$this.Name               = 'Heavy Leather Armor'
		$this.MapObjName         = 'heavyleatherarmor'
		$this.PurchasePrice      = 320
		$this.SellPrice          = 160
		$this.TargetStats        = @{
			[StatId]::Defense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Thick layers of leather for enhanced defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESilverChainmail : BEArmor {
	BESilverChainmail() : base() {
		$this.Name               = 'Silver Chainmail'
		$this.MapObjName         = 'silverchainmail'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Chainmail woven with strands of silver, effective against dark creatures.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGoldenCuirass : BEArmor {
	BEGoldenCuirass() : base() {
		$this.Name               = 'Golden Cuirass'
		$this.MapObjName         = 'goldencuirass'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A polished gold-plated cuirass, more for show than defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiritRobe : BEArmor {
	BESpiritRobe() : base() {
		$this.Name               = 'Spirit Robe'
		$this.MapObjName         = 'spiritrobe'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A translucent robe that shimmers with ethereal energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEObsidianPlate : BEArmor {
	BEObsidianPlate() : base() {
		$this.Name               = 'Obsidian Plate'
		$this.MapObjName         = 'obsidianplate'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Armor crafted from solidified volcanic glass, very strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESagesRobe : BEArmor {
	BESagesRobe() : base() {
		$this.Name               = 'Sage''s Robe'
		$this.MapObjName         = 'sagesrobe'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple yet powerful robe, worn by wise mystics.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBattleWornTunic : BEArmor {
	BEBattleWornTunic() : base() {
		$this.Name               = 'Battle-Worn Tunic'
		$this.MapObjName         = 'battleworntunic'
		$this.PurchasePrice      = 40
		$this.SellPrice          = 20
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A torn but resilient tunic, seen many skirmishes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFarmersSmock : BEArmor {
	BEFarmersSmock() : base() {
		$this.Name               = 'Farmer''s Smock'
		$this.MapObjName         = 'farmerssmock'
		$this.PurchasePrice      = 30
		$this.SellPrice          = 15
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rough smock, offering almost no protection.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERangersVest : BEArmor {
	BERangersVest() : base() {
		$this.Name               = 'Ranger''s Vest'
		$this.MapObjName         = 'rangersvest'
		$this.PurchasePrice      = 170
		$this.SellPrice          = 85
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A practical vest with many pockets, good for outdoor life.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEScholarsRobe : BEArmor {
	BEScholarsRobe() : base() {
		$this.Name               = 'Scholar''s Robe'
		$this.MapObjName         = 'scholarsrobe'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A comfortable robe for long hours of study.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHardLeatherVest : BEArmor {
	BEHardLeatherVest() : base() {
		$this.Name               = 'Hard Leather Vest'
		$this.MapObjName         = 'hardleathervest'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A stiff leather vest, slightly more protective.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELightChainmail : BEArmor {
	BELightChainmail() : base() {
		$this.Name               = 'Light Chainmail'
		$this.MapObjName         = 'lightchainmail'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A lighter version of chainmail, for increased mobility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESteelBreastplate : BEArmor {
	BESteelBreastplate() : base() {
		$this.Name               = 'Steel Breastplate'
		$this.MapObjName         = 'steelbreastplate'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A standard issue breastplate for soldiers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArcaneRobe : BEArmor {
	BEArcaneRobe() : base() {
		$this.Name               = 'Arcane Robe'
		$this.MapObjName         = 'arcanerobe'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 21
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark robe crackling with uncontrolled magical energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEReinforcedCuirass : BEArmor {
	BEReinforcedCuirass() : base() {
		$this.Name               = 'Reinforced Cuirass'
		$this.MapObjName         = 'reinforcedcuirass'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass with extra plating in vital areas.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMysticalChainmail : BEArmor {
	BEMysticalChainmail() : base() {
		$this.Name               = 'Mystical Chainmail'
		$this.MapObjName         = 'mysticalchainmail'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 11
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Chainmail imbued with minor protective enchantments.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFullPlateArmor : BEArmor {
	BEFullPlateArmor() : base() {
		$this.Name               = 'Full Plate Armor'
		$this.MapObjName         = 'fullplatearmor'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 23
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Complete and heavy plate armor, offering superior defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowRobe : BEArmor {
	BEShadowRobe() : base() {
		$this.Name               = 'Shadow Robe'
		$this.MapObjName         = 'shadowrobe'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 26
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that allows the wearer to blend into shadows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWyvernhideVest : BEArmor {
	BEWyvernhideVest() : base() {
		$this.Name               = 'Wyvernhide Vest'
		$this.MapObjName         = 'wyvernhidevest'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest crafted from the tough hide of a wyvern.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEmperorsCuirass : BEArmor {
	BEEmperorsCuirass() : base() {
		$this.Name               = 'Emperor''s Cuirass'
		$this.MapObjName         = 'emperorscuirass'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ceremonial cuirass, intricately decorated.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAstralRobe : BEArmor {
	BEAstralRobe() : base() {
		$this.Name               = 'Astral Robe'
		$this.MapObjName         = 'astralrobe'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe said to be woven from threads of the cosmos.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELegendaryPlate : BEArmor {
	BELegendaryPlate() : base() {
		$this.Name               = 'Legendary Plate'
		$this.MapObjName         = 'legendaryplate'
		$this.PurchasePrice      = 3000
		$this.SellPrice          = 1500
		$this.TargetStats        = @{
			[StatId]::Defense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Plate armor of unfathomable strength, rumored to be divine.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENursesUniform : BEArmor {
	BENursesUniform() : base() {
		$this.Name               = 'Nurse''s Uniform'
		$this.MapObjName         = 'nursesuniform'
		$this.PurchasePrice      = 65
		$this.SellPrice          = 33
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple white uniform, surprisingly durable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBallGown : BEArmor {
	BEBallGown() : base() {
		$this.Name               = 'Ball Gown'
		$this.MapObjName         = 'ballgown'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A magnificent gown, offers no protection but great charm.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDancersVeil : BEArmor {
	BEDancersVeil() : base() {
		$this.Name               = 'Dancer''s Veil'
		$this.MapObjName         = 'dancersveil'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::Defense = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light, flowing garment that enhances agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEPriestesssRobe : BEArmor {
	BEPriestesssRobe() : base() {
		$this.Name               = 'Priestess''s Robe'
		$this.MapObjName         = 'priestesssrobe'
		$this.PurchasePrice      = 480
		$this.SellPrice          = 240
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 19
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pure white robe, blessed with divine protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESpellbindersRobe : BEArmor {
	BESpellbindersRobe() : base() {
		$this.Name               = 'Spellbinder''s Robe'
		$this.MapObjName         = 'spellbindersrobe'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 29
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vibrant robe that hums with magical power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMatriarchsGown : BEArmor {
	BEMatriarchsGown() : base() {
		$this.Name               = 'Matriarch''s Gown'
		$this.MapObjName         = 'matriarchsgown'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An imposing gown worn by powerful female leaders.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEValkyriesCuirass : BEArmor {
	BEValkyriesCuirass() : base() {
		$this.Name               = 'Valkyrie''s Cuirass'
		$this.MapObjName         = 'valkyriescuirass'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 26
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A golden cuirass worn by valiant warrior women.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEEnchantresssGown : BEArmor {
	BEEnchantresssGown() : base() {
		$this.Name               = 'Enchantress''s Gown'
		$this.MapObjName         = 'enchantresssgown'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 33
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A gown of exquisite design, perfect for casting powerful spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEAmazonianBreastplate : BEArmor {
	BEAmazonianBreastplate() : base() {
		$this.Name               = 'Amazonian Breastplate'
		$this.MapObjName         = 'amazonianbreastplate'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 19
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light but sturdy breastplate for female warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEQueensRegalia : BEArmor {
	BEQueensRegalia() : base() {
		$this.Name               = 'Queen''s Regalia'
		$this.MapObjName         = 'queensregalia'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 24
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'The ceremonial robes of a queen, imbued with subtle magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEHuntresssVest : BEArmor {
	BEHuntresssVest() : base() {
		$this.Name               = 'Huntress''s Vest'
		$this.MapObjName         = 'huntresssvest'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rugged vest designed for female hunters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDruidesssRobe : BEArmor {
	BEDruidesssRobe() : base() {
		$this.Name               = 'Druidess''s Robe'
		$this.MapObjName         = 'druidesssrobe'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe made of natural fibers, attuned to nature''s magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESorceresssGown : BEArmor {
	BESorceresssGown() : base() {
		$this.Name               = 'Sorceress''s Gown'
		$this.MapObjName         = 'sorceresssgown'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 31
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A darkly elegant gown, enhancing destructive spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWarriorPrincesssCuirass : BEArmor {
	BEWarriorPrincesssCuirass() : base() {
		$this.Name               = 'Warrior Princess''s Cuirass'
		$this.MapObjName         = 'warriorprincessscuirass'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A decorative yet strong cuirass for a royal warrior.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMaidensPlate : BEArmor {
	BEMaidensPlate() : base() {
		$this.Name               = 'Maiden''s Plate'
		$this.MapObjName         = 'maidensplate'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light plate armor designed for female combatants.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESpiritWeaversRobe : BEArmor {
	BESpiritWeaversRobe() : base() {
		$this.Name               = 'Spirit Weaver''s Robe'
		$this.MapObjName         = 'spiritweaversrobe'
		$this.PurchasePrice      = 1550
		$this.SellPrice          = 775
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 34
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe used to commune with spirits, enhancing spiritual magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBattleDress : BEArmor {
	BEBattleDress() : base() {
		$this.Name               = 'Battle Dress'
		$this.MapObjName         = 'battledress'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A functional dress designed for combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESilkBlouse : BEArmor {
	BESilkBlouse() : base() {
		$this.Name               = 'Silk Blouse'
		$this.MapObjName         = 'silkblouse'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A fine silk blouse, comfortable but offers no defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEFairyTaleGown : BEArmor {
	BEFairyTaleGown() : base() {
		$this.Name               = 'Fairy Tale Gown'
		$this.MapObjName         = 'fairytalegown'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A whimsical gown that offers a slight magic boost.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECelestialDress : BEArmor {
	BECelestialDress() : base() {
		$this.Name               = 'Celestial Dress'
		$this.MapObjName         = 'celestialdress'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dress adorned with celestial patterns, granting minor magical resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMoonlightRobe : BEArmor {
	BEMoonlightRobe() : base() {
		$this.Name               = 'Moonlight Robe'
		$this.MapObjName         = 'moonlightrobe'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 26
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that glows faintly in the dark, enhancing lunar magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESunstoneVest : BEArmor {
	BESunstoneVest() : base() {
		$this.Name               = 'Sunstone Vest'
		$this.MapObjName         = 'sunstonevest'
		$this.PurchasePrice      = 270
		$this.SellPrice          = 135
		$this.TargetStats        = @{
			[StatId]::Defense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest embedded with sunstone fragments, offering fire resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOceanicRobe : BEArmor {
	BEOceanicRobe() : base() {
		$this.Name               = 'Oceanic Robe'
		$this.MapObjName         = 'oceanicrobe'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe woven from kelp and enchanted shells, good for water magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGloomVest : BEArmor {
	BEGloomVest() : base() {
		$this.Name               = 'Gloom Vest'
		$this.MapObjName         = 'gloomvest'
		$this.PurchasePrice      = 240
		$this.SellPrice          = 120
		$this.TargetStats        = @{
			[StatId]::Defense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark vest that helps the wearer blend into shadows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlazeCuirass : BEArmor {
	BEBlazeCuirass() : base() {
		$this.Name               = 'Blaze Cuirass'
		$this.MapObjName         = 'blazecuirass'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass imbued with fire magic, protecting against heat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFrostChainmail : BEArmor {
	BEFrostChainmail() : base() {
		$this.Name               = 'Frost Chainmail'
		$this.MapObjName         = 'frostchainmail'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Chainmail that shimmers with icy energy, resisting cold.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThunderRobe : BEArmor {
	BEThunderRobe() : base() {
		$this.Name               = 'Thunder Robe'
		$this.MapObjName         = 'thunderrobe'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that crackles with static, enhancing lightning spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEarthPlate : BEArmor {
	BEEarthPlate() : base() {
		$this.Name               = 'Earth Plate'
		$this.MapObjName         = 'earthplate'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 29
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy plate armor forged from enchanted earth, very sturdy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWindTunic : BEArmor {
	BEWindTunic() : base() {
		$this.Name               = 'Wind Tunic'
		$this.MapObjName         = 'windtunic'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light tunic that makes the wearer feel swifter.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPoisonVest : BEArmor {
	BEPoisonVest() : base() {
		$this.Name               = 'Poison Vest'
		$this.MapObjName         = 'poisonvest'
		$this.PurchasePrice      = 290
		$this.SellPrice          = 145
		$this.TargetStats        = @{
			[StatId]::Defense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest coated in a subtle, non-toxic venom, useful for rogues.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHolyBreastplate : BEArmor {
	BEHolyBreastplate() : base() {
		$this.Name               = 'Holy Breastplate'
		$this.MapObjName         = 'holybreastplate'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A breastplate blessed by the church, resisting dark attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECursedRobe : BEArmor {
	BECursedRobe() : base() {
		$this.Name               = 'Cursed Robe'
		$this.MapObjName         = 'cursedrobe'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A powerful but dangerous robe, drains health but boosts magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDemonicCuirass : BEArmor {
	BEDemonicCuirass() : base() {
		$this.Name               = 'Demonic Cuirass'
		$this.MapObjName         = 'demoniccuirass'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark, imposing cuirass said to be forged in hellfire.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAngelsRobe : BEArmor {
	BEAngelsRobe() : base() {
		$this.Name               = 'Angel''s Robe'
		$this.MapObjName         = 'angelsrobe'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A radiant robe that offers powerful divine protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonScalePlate : BEArmor {
	BEDragonScalePlate() : base() {
		$this.Name               = 'Dragon Scale Plate'
		$this.MapObjName         = 'dragonscaleplate'
		$this.PurchasePrice      = 2800
		$this.SellPrice          = 1400
		$this.TargetStats        = @{
			[StatId]::Defense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Plate armor crafted from genuine dragon scales, incredibly tough.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEElementalVest : BEArmor {
	BEElementalVest() : base() {
		$this.Name               = 'Elemental Vest'
		$this.MapObjName         = 'elementalvest'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest that shifts color based on the nearest element, offering minor resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEClockworkCuirass : BEArmor {
	BEClockworkCuirass() : base() {
		$this.Name               = 'Clockwork Cuirass'
		$this.MapObjName         = 'clockworkcuirass'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass made of intricate gears and metal, offers decent defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAlchemistsRobe : BEArmor {
	BEAlchemistsRobe() : base() {
		$this.Name               = 'Alchemist''s Robe'
		$this.MapObjName         = 'alchemistsrobe'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A stained but resilient robe, with many hidden pockets.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPlagueDoctorsCoat : BEArmor {
	BEPlagueDoctorsCoat() : base() {
		$this.Name               = 'Plague Doctor''s Coat'
		$this.MapObjName         = 'plaguedoctorscoat'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A long, thick coat offering protection against miasma.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpectersRobe : BEArmor {
	BESpectersRobe() : base() {
		$this.Name               = 'Specter''s Robe'
		$this.MapObjName         = 'spectersrobe'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ghostly robe that grants a small chance to evade attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBerserkersHarness : BEArmor {
	BEBerserkersHarness() : base() {
		$this.Name               = 'Berserker''s Harness'
		$this.MapObjName         = 'berserkersharness'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A minimal harness that allows for unrestrained movement and boosts attack.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWardensVest : BEArmor {
	BEWardensVest() : base() {
		$this.Name               = 'Warden''s Vest'
		$this.MapObjName         = 'wardensvest'
		$this.PurchasePrice      = 260
		$this.SellPrice          = 130
		$this.TargetStats        = @{
			[StatId]::Defense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robust vest for patrolling guards, with good defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESirensRobe : BEArmor {
	BESirensRobe() : base() {
		$this.Name               = 'Siren''s Robe'
		$this.MapObjName         = 'sirensrobe'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shimmering robe that enthralls those nearby, enhancing charm magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEVampiresCoat : BEArmor {
	BEVampiresCoat() : base() {
		$this.Name               = 'Vampire''s Coat'
		$this.MapObjName         = 'vampirescoat'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An elegant dark coat, said to sustain the wearer''s life.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWerewolfHideVest : BEArmor {
	BEWerewolfHideVest() : base() {
		$this.Name               = 'Werewolf Hide Vest'
		$this.MapObjName         = 'werewolfhidevest'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest made from the hide of a werewolf, offers minor strength boost.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGolemPlate : BEArmor {
	BEGolemPlate() : base() {
		$this.Name               = 'Golem Plate'
		$this.MapObjName         = 'golemplate'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::Defense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Extremely heavy and tough plate armor, slows movement.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECosmicRobe : BEArmor {
	BECosmicRobe() : base() {
		$this.Name               = 'Cosmic Robe'
		$this.MapObjName         = 'cosmicrobe'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe depicting constellations, allowing glimpses of future spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulWeaversRobe : BEArmor {
	BESoulWeaversRobe() : base() {
		$this.Name               = 'Soul Weaver''s Robe'
		$this.MapObjName         = 'soulweaversrobe'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 36
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark robe allowing manipulation of souls, boosts dark magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidPlate : BEArmor {
	BEVoidPlate() : base() {
		$this.Name               = 'Void Plate'
		$this.MapObjName         = 'voidplate'
		$this.PurchasePrice      = 3500
		$this.SellPrice          = 1750
		$this.TargetStats        = @{
			[StatId]::Defense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Armor that seems to absorb light, offering ultimate protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENovicesTunic : BEArmor {
	BENovicesTunic() : base() {
		$this.Name               = 'Novice''s Tunic'
		$this.MapObjName         = 'novicestunic'
		$this.PurchasePrice      = 45
		$this.SellPrice          = 23
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple tunic worn by those beginning their adventure.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOldLeatherArmor : BEArmor {
	BEOldLeatherArmor() : base() {
		$this.Name               = 'Old Leather Armor'
		$this.MapObjName         = 'oldleatherarmor'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn and patched leather armor, still offers some defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERaggedShirt : BEArmor {
	BERaggedShirt() : base() {
		$this.Name               = 'Ragged Shirt'
		$this.MapObjName         = 'raggedshirt'
		$this.PurchasePrice      = 20
		$this.SellPrice          = 10
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tattered shirt, barely offering any protection.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDirtyRobe : BEArmor {
	BEDirtyRobe() : base() {
		$this.Name               = 'Dirty Robe'
		$this.MapObjName         = 'dirtyrobe'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A grimy robe, suitable for beggars or desperate mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERustyChainmail : BEArmor {
	BERustyChainmail() : base() {
		$this.Name               = 'Rusty Chainmail'
		$this.MapObjName         = 'rustychainmail'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Old and rusted chainmail, prone to breaking.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDentedBreastplate : BEArmor {
	BEDentedBreastplate() : base() {
		$this.Name               = 'Dented Breastplate'
		$this.MapObjName         = 'dentedbreastplate'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A breastplate that has seen better days, but still functions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWovenRobe : BEArmor {
	BEWovenRobe() : base() {
		$this.Name               = 'Woven Robe'
		$this.MapObjName         = 'wovenrobe'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple robe made from woven plant fibers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrudeCuirass : BEArmor {
	BECrudeCuirass() : base() {
		$this.Name               = 'Crude Cuirass'
		$this.MapObjName         = 'crudecuirass'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A poorly made cuirass, offers basic defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGildedChainmail : BEArmor {
	BEGildedChainmail() : base() {
		$this.Name               = 'Gilded Chainmail'
		$this.MapObjName         = 'gildedchainmail'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Chainmail with decorative gold plating, less practical.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOrnatePlateArmor : BEArmor {
	BEOrnatePlateArmor() : base() {
		$this.Name               = 'Ornate Plate Armor'
		$this.MapObjName         = 'ornateplatearmor'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Highly decorative plate armor, more for ceremonies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWhisperRobe : BEArmor {
	BEWhisperRobe() : base() {
		$this.Name               = 'Whisper Robe'
		$this.MapObjName         = 'whisperrobe'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 19
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that makes a soft rustling sound, used for quiet movement.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFleshGolemVest : BEArmor {
	BEFleshGolemVest() : base() {
		$this.Name               = 'Flesh Golem Vest'
		$this.MapObjName         = 'fleshgolemvest'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A repulsive vest made from stitched together flesh, surprisingly tough.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBaronsCuirass : BEArmor {
	BEBaronsCuirass() : base() {
		$this.Name               = 'Baron''s Cuirass'
		$this.MapObjName         = 'baronscuirass'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A fancy cuirass, symbolizing minor nobility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamweaversRobe : BEArmor {
	BEDreamweaversRobe() : base() {
		$this.Name               = 'Dreamweaver''s Robe'
		$this.MapObjName         = 'dreamweaversrobe'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that helps its wearer control dreams, useful for illusions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETitaniumPlate : BEArmor {
	BETitaniumPlate() : base() {
		$this.Name               = 'Titanium Plate'
		$this.MapObjName         = 'titaniumplate'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Lightweight yet incredibly strong plate armor.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESerpenthideRobe : BEArmor {
	BESerpenthideRobe() : base() {
		$this.Name               = 'Serpenthide Robe'
		$this.MapObjName         = 'serpenthiderobe'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe made from the scales of a giant serpent, offers resistance to poison.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAmuletVest : BEArmor {
	BEAmuletVest() : base() {
		$this.Name               = 'Amulet Vest'
		$this.MapObjName         = 'amuletvest'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest embedded with various protective amulets.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGoblinHideTunic : BEArmor {
	BEGoblinHideTunic() : base() {
		$this.Name               = 'Goblin Hide Tunic'
		$this.MapObjName         = 'goblinhidetunic'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crude tunic made from goblin hides, smells faintly of swamp.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOgreBoneCuirass : BEArmor {
	BEOgreBoneCuirass() : base() {
		$this.Name               = 'Ogre Bone Cuirass'
		$this.MapObjName         = 'ogrebonecuirass'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy cuirass made from ogre bones, very intimidating.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHarpyFeatherRobe : BEArmor {
	BEHarpyFeatherRobe() : base() {
		$this.Name               = 'Harpy Feather Robe'
		$this.MapObjName         = 'harpyfeatherrobe'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 24
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light robe adorned with harpy feathers, allows graceful movement.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEUnicornHornPlate : BEArmor {
	BEUnicornHornPlate() : base() {
		$this.Name               = 'Unicorn Horn Plate'
		$this.MapObjName         = 'unicornhornplate'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Plate armor inlaid with fragments of unicorn horn, very rare.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChiffonGown : BEArmor {
	BEChiffonGown() : base() {
		$this.Name               = 'Chiffon Gown'
		$this.MapObjName         = 'chiffongown'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A delicate and sheer gown, provides no protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBridalGown : BEArmor {
	BEBridalGown() : base() {
		$this.Name               = 'Bridal Gown'
		$this.MapObjName         = 'bridalgown'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A beautiful white gown, worn for ceremonies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEFortuneTellersRobe : BEArmor {
	BEFortuneTellersRobe() : base() {
		$this.Name               = 'Fortune Teller''s Robe'
		$this.MapObjName         = 'fortunetellersrobe'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 21
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A colorful robe with mystical symbols, enhances foresight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBardsVest : BEArmor {
	BEBardsVest() : base() {
		$this.Name               = 'Bard''s Vest'
		$this.MapObjName         = 'bardsvest'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A flashy vest that helps with performances, slight charm boost.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEScholarsGown : BEArmor {
	BEScholarsGown() : base() {
		$this.Name               = 'Scholar''s Gown'
		$this.MapObjName         = 'scholarsgown'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dignified gown for intellectual pursuits, very comfortable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECourtJestersTunic : BEArmor {
	BECourtJestersTunic() : base() {
		$this.Name               = 'Court Jester''s Tunic'
		$this.MapObjName         = 'courtjesterstunic'
		$this.PurchasePrice      = 30
		$this.SellPrice          = 15
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A brightly colored tunic, offers no protection, purely cosmetic.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArtisansApron : BEArmor {
	BEArtisansApron() : base() {
		$this.Name               = 'Artisan''s Apron'
		$this.MapObjName         = 'artisansapron'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A practical apron with many pockets, good for crafting.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMinersVest : BEArmor {
	BEMinersVest() : base() {
		$this.Name               = 'Miner''s Vest'
		$this.MapObjName         = 'minersvest'
		$this.PurchasePrice      = 160
		$this.SellPrice          = 80
		$this.TargetStats        = @{
			[StatId]::Defense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A thick vest, offers protection against falling debris.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInquisitorsRobe : BEArmor {
	BEInquisitorsRobe() : base() {
		$this.Name               = 'Inquisitor''s Robe'
		$this.MapObjName         = 'inquisitorsrobe'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A grim robe worn by those who seek out evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEReapersShroud : BEArmor {
	BEReapersShroud() : base() {
		$this.Name               = 'Reaper''s Shroud'
		$this.MapObjName         = 'reapersshroud'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark, flowing shroud that seems to absorb light, feared by many.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBarbariansFurVest : BEArmor {
	BEBarbariansFurVest() : base() {
		$this.Name               = 'Barbarian''s Fur Vest'
		$this.MapObjName         = 'barbariansfurvest'
		$this.PurchasePrice      = 220
		$this.SellPrice          = 110
		$this.TargetStats        = @{
			[StatId]::Defense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rugged vest made of thick fur, offers warmth and protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENomadsTunic : BEArmor {
	BENomadsTunic() : base() {
		$this.Name               = 'Nomad''s Tunic'
		$this.MapObjName         = 'nomadstunic'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple, durable tunic for desert wanderers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZephyrVest : BEArmor {
	BEZephyrVest() : base() {
		$this.Name               = 'Zephyr Vest'
		$this.MapObjName         = 'zephyrvest'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light vest that makes the wearer feel faster.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneBreastplate : BEArmor {
	BEStoneBreastplate() : base() {
		$this.Name               = 'Stone Breastplate'
		$this.MapObjName         = 'stonebreastplate'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy breastplate carved from a single piece of stone.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENetherRobe : BEArmor {
	BENetherRobe() : base() {
		$this.Name               = 'Nether Robe'
		$this.MapObjName         = 'netherrobe'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 29
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark robe from the underworld, radiating ominous energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWyrmscaleVest : BEArmor {
	BEWyrmscaleVest() : base() {
		$this.Name               = 'Wyrmscale Vest'
		$this.MapObjName         = 'wyrmscalevest'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest crafted from the scales of a smaller wyrm.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrimsonRobe : BEArmor {
	BECrimsonRobe() : base() {
		$this.Name               = 'Crimson Robe'
		$this.MapObjName         = 'crimsonrobe'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vivid red robe, associated with powerful fire mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESilverPlateArmor : BEArmor {
	BESilverPlateArmor() : base() {
		$this.Name               = 'Silver Plate Armor'
		$this.MapObjName         = 'silverplatearmor'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Plate armor forged from pure silver, shines brightly.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERunesmithsRobe : BEArmor {
	BERunesmithsRobe() : base() {
		$this.Name               = 'Runesmith''s Robe'
		$this.MapObjName         = 'runesmithsrobe'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 34
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy robe adorned with glowing runes, enhances enchanting.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChitinCuirass : BEArmor {
	BEChitinCuirass() : base() {
		$this.Name               = 'Chitin Cuirass'
		$this.MapObjName         = 'chitincuirass'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass made from the hard exoskeleton of a giant insect.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGolemHeartBreastplate : BEArmor {
	BEGolemHeartBreastplate() : base() {
		$this.Name               = 'Golem Heart Breastplate'
		$this.MapObjName         = 'golemheartbreastplate'
		$this.PurchasePrice      = 2300
		$this.SellPrice          = 1150
		$this.TargetStats        = @{
			[StatId]::Defense = 33
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A breastplate embedded with the pulsating core of a golem.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarfallRobe : BEArmor {
	BEStarfallRobe() : base() {
		$this.Name               = 'Starfall Robe'
		$this.MapObjName         = 'starfallrobe'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 42
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe said to be woven from threads of falling stars, grants incredible power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEtherealVest : BEArmor {
	BEEtherealVest() : base() {
		$this.Name               = 'Ethereal Vest'
		$this.MapObjName         = 'etherealvest'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A semi-transparent vest that seems to flicker in and out of existence.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpecterVest : BEArmor {
	BESpecterVest() : base() {
		$this.Name               = 'Specter Vest'
		$this.MapObjName         = 'spectervest'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 3
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest that offers slight resistance to spiritual attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShamansRobe : BEArmor {
	BEShamansRobe() : base() {
		$this.Name               = 'Shaman''s Robe'
		$this.MapObjName         = 'shamansrobe'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 23
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ceremonial robe adorned with totems and charms.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECultistsRobe : BEArmor {
	BECultistsRobe() : base() {
		$this.Name               = 'Cultist''s Robe'
		$this.MapObjName         = 'cultistsrobe'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark and ominous robe, often worn by followers of dark deities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEExecutionersPlate : BEArmor {
	BEExecutionersPlate() : base() {
		$this.Name               = 'Executioner''s Plate'
		$this.MapObjName         = 'executionersplate'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 29
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy and dark plate armor, designed for maximum intimidation.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBloodRobe : BEArmor {
	BEBloodRobe() : base() {
		$this.Name               = 'Blood Robe'
		$this.MapObjName         = 'bloodrobe'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe stained with ancient blood, granting power through sacrifice.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonKingsCuirass : BEArmor {
	BEDragonKingsCuirass() : base() {
		$this.Name               = 'Dragon King''s Cuirass'
		$this.MapObjName         = 'dragonkingscuirass'
		$this.PurchasePrice      = 3000
		$this.SellPrice          = 1500
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'The legendary cuirass of a dragon ruler, immensely powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivineRobe : BEArmor {
	BEDivineRobe() : base() {
		$this.Name               = 'Divine Robe'
		$this.MapObjName         = 'divinerobe'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe of unparalleled purity, offering divine protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarlordsPlate : BEArmor {
	BEWarlordsPlate() : base() {
		$this.Name               = 'Warlord''s Plate'
		$this.MapObjName         = 'warlordsplate'
		$this.PurchasePrice      = 2800
		$this.SellPrice          = 1400
		$this.TargetStats        = @{
			[StatId]::Defense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'The battle-hardened plate armor of a seasoned warlord.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMistRobe : BEArmor {
	BEMistRobe() : base() {
		$this.Name               = 'Mist Robe'
		$this.MapObjName         = 'mistrobe'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that seems to shimmer like mist, enhancing stealth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneSkinVest : BEArmor {
	BEStoneSkinVest() : base() {
		$this.Name               = 'Stone Skin Vest'
		$this.MapObjName         = 'stoneskinvest'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest that makes the wearer''s skin as hard as stone.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEnigmaRobe : BEArmor {
	BEEnigmaRobe() : base() {
		$this.Name               = 'Enigma Robe'
		$this.MapObjName         = 'enigmarobe'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 37
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that constantly changes its magical properties.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChampionsBreastplate : BEArmor {
	BEChampionsBreastplate() : base() {
		$this.Name               = 'Champion''s Breastplate'
		$this.MapObjName         = 'championsbreastplate'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'The shining breastplate of a revered champion.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESorcerersTunic : BEArmor {
	BESorcerersTunic() : base() {
		$this.Name               = 'Sorcerer''s Tunic'
		$this.MapObjName         = 'sorcererstunic'
		$this.PurchasePrice      = 170
		$this.SellPrice          = 85
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple tunic, often worn under a robe, with minor magical properties.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAdventurersJacket : BEArmor {
	BEAdventurersJacket() : base() {
		$this.Name               = 'Adventurer''s Jacket'
		$this.MapObjName         = 'adventurersjacket'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A versatile jacket with many pockets, good for general exploration.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHermitsRobe : BEArmor {
	BEHermitsRobe() : base() {
		$this.Name               = 'Hermit''s Robe'
		$this.MapObjName         = 'hermitsrobe'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A plain, patched robe, worn by reclusive wise individuals.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGuardsUniform : BEArmor {
	BEGuardsUniform() : base() {
		$this.Name               = 'Guard''s Uniform'
		$this.MapObjName         = 'guardsuniform'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'The standard uniform of a town guard, offers moderate protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEExecutionersVest : BEArmor {
	BEExecutionersVest() : base() {
		$this.Name               = 'Executioner''s Vest'
		$this.MapObjName         = 'executionersvest'
		$this.PurchasePrice      = 240
		$this.SellPrice          = 120
		$this.TargetStats        = @{
			[StatId]::Defense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy, dark vest worn by those carrying out justice.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENecromancersRobe : BEArmor {
	BENecromancersRobe() : base() {
		$this.Name               = 'Necromancer''s Robe'
		$this.MapObjName         = 'necromancersrobe'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A chilling robe that pulses with unholy energy, enhancing dark magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlessedChainmail : BEArmor {
	BEBlessedChainmail() : base() {
		$this.Name               = 'Blessed Chainmail'
		$this.MapObjName         = 'blessedchainmail'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 11
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Chainmail consecrated by holy rites, effective against evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEObsidianCuirass : BEArmor {
	BEObsidianCuirass() : base() {
		$this.Name               = 'Obsidian Cuirass'
		$this.MapObjName         = 'obsidiancuirass'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 26
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass carved from pure obsidian, incredibly durable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunkenRobe : BEArmor {
	BESunkenRobe() : base() {
		$this.Name               = 'Sunken Robe'
		$this.MapObjName         = 'sunkenrobe'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe recovered from deep sea ruins, still damp but enchanted.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETitansPlate : BEArmor {
	BETitansPlate() : base() {
		$this.Name               = 'Titan''s Plate'
		$this.MapObjName         = 'titansplate'
		$this.PurchasePrice      = 2700
		$this.SellPrice          = 1350
		$this.TargetStats        = @{
			[StatId]::Defense = 36
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Plate armor said to be forged by ancient titans, immense defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEmberRobe : BEArmor {
	BEEmberRobe() : base() {
		$this.Name               = 'Ember Robe'
		$this.MapObjName         = 'emberrobe'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that radiates a faint warmth, hinting at fire magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrystalCuirass : BEArmor {
	BECrystalCuirass() : base() {
		$this.Name               = 'Crystal Cuirass'
		$this.MapObjName         = 'crystalcuirass'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 24
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass made from hardened magical crystals, somewhat fragile.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVindicatorsPlate : BEArmor {
	BEVindicatorsPlate() : base() {
		$this.Name               = 'Vindicator''s Plate'
		$this.MapObjName         = 'vindicatorsplate'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Defense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Plate armor worn by those who seek justice, glows faintly.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhantomRobe : BEArmor {
	BEPhantomRobe() : base() {
		$this.Name               = 'Phantom Robe'
		$this.MapObjName         = 'phantomrobe'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that makes the wearer partially incorporeal, enhancing evasion.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulboundVest : BEArmor {
	BESoulboundVest() : base() {
		$this.Name               = 'Soulbound Vest'
		$this.MapObjName         = 'soulboundvest'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest that has formed a mystical link with its wearer, gaining power over time.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlacialRobe : BEArmor {
	BEGlacialRobe() : base() {
		$this.Name               = 'Glacial Robe'
		$this.MapObjName         = 'glacialrobe'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 31
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe radiating intense cold, perfect for ice mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonSlayersPlate : BEArmor {
	BEDragonSlayersPlate() : base() {
		$this.Name               = 'Dragon Slayer''s Plate'
		$this.MapObjName         = 'dragonslayersplate'
		$this.PurchasePrice      = 3200
		$this.SellPrice          = 1600
		$this.TargetStats        = @{
			[StatId]::Defense = 42
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Plate armor designed specifically to combat dragons, immensely strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMonksGi : BEArmor {
	BEMonksGi() : base() {
		$this.Name               = 'Monk''s Gi'
		$this.MapObjName         = 'monksgi'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple, loose-fitting martial arts uniform.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETravelersCloak : BEArmor {
	BETravelersCloak() : base() {
		$this.Name               = 'Traveler''s Cloak'
		$this.MapObjName         = 'travelerscloak'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A multi-purpose cloak that can be worn like a tunic.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHerbalistsTunic : BEArmor {
	BEHerbalistsTunic() : base() {
		$this.Name               = 'Herbalist''s Tunic'
		$this.MapObjName         = 'herbaliststunic'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tunic with many pockets for herbs, slightly protective.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEngineersVest : BEArmor {
	BEEngineersVest() : base() {
		$this.Name               = 'Engineer''s Vest'
		$this.MapObjName         = 'engineersvest'
		$this.PurchasePrice      = 140
		$this.SellPrice          = 70
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest with various tools and pockets, offers minor defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlitteringRobe : BEArmor {
	BEGlitteringRobe() : base() {
		$this.Name               = 'Glittering Robe'
		$this.MapObjName         = 'glitteringrobe'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe woven with fine silver threads, sparkles in the light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESwashbucklersVest : BEArmor {
	BESwashbucklersVest() : base() {
		$this.Name               = 'Swashbuckler''s Vest'
		$this.MapObjName         = 'swashbucklersvest'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A flashy vest that helps with agility and charm.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBeastmastersTunic : BEArmor {
	BEBeastmastersTunic() : base() {
		$this.Name               = 'Beastmaster''s Tunic'
		$this.MapObjName         = 'beastmasterstunic'
		$this.PurchasePrice      = 230
		$this.SellPrice          = 115
		$this.TargetStats        = @{
			[StatId]::Defense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tunic made from tough animal hides, enhances communication with beasts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBardsTunic : BEArmor {
	BEBardsTunic() : base() {
		$this.Name               = 'Bard''s Tunic'
		$this.MapObjName         = 'bardstunic'
		$this.PurchasePrice      = 160
		$this.SellPrice          = 80
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A comfortable and stylish tunic for performers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGloomRobe : BEArmor {
	BEGloomRobe() : base() {
		$this.Name               = 'Gloom Robe'
		$this.MapObjName         = 'gloomrobe'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark, plain robe for those who prefer to remain unnoticed.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStonehideVest : BEArmor {
	BEStonehideVest() : base() {
		$this.Name               = 'Stonehide Vest'
		$this.MapObjName         = 'stonehidevest'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest that feels as tough as stone, surprisingly flexible.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECoralCuirass : BEArmor {
	BECoralCuirass() : base() {
		$this.Name               = 'Coral Cuirass'
		$this.MapObjName         = 'coralcuirass'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass made from hardened coral, offers water resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarSapphireRobe : BEArmor {
	BEStarSapphireRobe() : base() {
		$this.Name               = 'Star Sapphire Robe'
		$this.MapObjName         = 'starsapphirerobe'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 33
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A deep blue robe embedded with star sapphires, very potent.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEValiantCuirass : BEArmor {
	BEValiantCuirass() : base() {
		$this.Name               = 'Valiant Cuirass'
		$this.MapObjName         = 'valiantcuirass'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shining cuirass worn by courageous warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarlocksRobe : BEArmor {
	BEWarlocksRobe() : base() {
		$this.Name               = 'Warlock''s Robe'
		$this.MapObjName         = 'warlocksrobe'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 29
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark, ominous robe, often associated with forbidden magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGriffinFeatherVest : BEArmor {
	BEGriffinFeatherVest() : base() {
		$this.Name               = 'Griffin Feather Vest'
		$this.MapObjName         = 'griffinfeathervest'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest made from the feathers of a griffin, allows for light fall.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFrostfireRobe : BEArmor {
	BEFrostfireRobe() : base() {
		$this.Name               = 'Frostfire Robe'
		$this.MapObjName         = 'frostfirerobe'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that shimmers with both ice and fire, very volatile.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEternalPlate : BEArmor {
	BEEternalPlate() : base() {
		$this.Name               = 'Eternal Plate'
		$this.MapObjName         = 'eternalplate'
		$this.PurchasePrice      = 4000
		$this.SellPrice          = 2000
		$this.TargetStats        = @{
			[StatId]::Defense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Armor said to be from another dimension, unbreakable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrimsonChainmail : BEArmor {
	BECrimsonChainmail() : base() {
		$this.Name               = 'Crimson Chainmail'
		$this.MapObjName         = 'crimsonchainmail'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Chainmail dyed crimson, favored by elite guards.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAzureRobe : BEArmor {
	BEAzureRobe() : base() {
		$this.Name               = 'Azure Robe'
		$this.MapObjName         = 'azurerobe'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 31
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A brilliant blue robe, often worn by powerful water mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEForestDwellersTunic : BEArmor {
	BEForestDwellersTunic() : base() {
		$this.Name               = 'Forest Dweller''s Tunic'
		$this.MapObjName         = 'forestdwellerstunic'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A green tunic that blends in with natural environments.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPoachersVest : BEArmor {
	BEPoachersVest() : base() {
		$this.Name               = 'Poacher''s Vest'
		$this.MapObjName         = 'poachersvest'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::Defense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A stealthy vest with many hidden compartments.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlacialBreastplate : BEArmor {
	BEGlacialBreastplate() : base() {
		$this.Name               = 'Glacial Breastplate'
		$this.MapObjName         = 'glacialbreastplate'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A breastplate emanating a freezing aura, good against fire.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVolcanicRobe : BEArmor {
	BEVolcanicRobe() : base() {
		$this.Name               = 'Volcanic Robe'
		$this.MapObjName         = 'volcanicrobe'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 36
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe made from cooled lava, resisting extreme heat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAbyssalPlate : BEArmor {
	BEAbyssalPlate() : base() {
		$this.Name               = 'Abyssal Plate'
		$this.MapObjName         = 'abyssalplate'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Defense = 34
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Plate armor from the deepest parts of the ocean, incredibly tough.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESkyforgedCuirass : BEArmor {
	BESkyforgedCuirass() : base() {
		$this.Name               = 'Skyforged Cuirass'
		$this.MapObjName         = 'skyforgedcuirass'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass said to be hammered from clouds, very light and strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunkenTreasureRobe : BEArmor {
	BESunkenTreasureRobe() : base() {
		$this.Name               = 'Sunken Treasure Robe'
		$this.MapObjName         = 'sunkentreasurerobe'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 33
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe encrusted with pearls and gems from sunken ships, carries a sea enchantment.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOnyxPlate : BEArmor {
	BEOnyxPlate() : base() {
		$this.Name               = 'Onyx Plate'
		$this.MapObjName         = 'onyxplate'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Defense = 31
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Armor crafted from polished black onyx, very heavy and strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESilverThreadedRobe : BEArmor {
	BESilverThreadedRobe() : base() {
		$this.Name               = 'Silver-Threaded Robe'
		$this.MapObjName         = 'silverthreadedrobe'
		$this.PurchasePrice      = 880
		$this.SellPrice          = 440
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe intricately woven with silver threads, enhances defense against dark magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIronboundVest : BEArmor {
	BEIronboundVest() : base() {
		$this.Name               = 'Ironbound Vest'
		$this.MapObjName         = 'ironboundvest'
		$this.PurchasePrice      = 310
		$this.SellPrice          = 155
		$this.TargetStats        = @{
			[StatId]::Defense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest with iron plates sewn into the fabric for added protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWhisperwindTunic : BEArmor {
	BEWhisperwindTunic() : base() {
		$this.Name               = 'Whisperwind Tunic'
		$this.MapObjName         = 'whisperwindtunic'
		$this.PurchasePrice      = 140
		$this.SellPrice          = 70
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A lightweight tunic that barely rustles, ideal for stealth and speed.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESolarCuirass : BEArmor {
	BESolarCuirass() : base() {
		$this.Name               = 'Solar Cuirass'
		$this.MapObjName         = 'solarcuirass'
		$this.PurchasePrice      = 920
		$this.SellPrice          = 460
		$this.TargetStats        = @{
			[StatId]::Defense = 17
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass that radiates a gentle warmth, offering minor fire resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMoonstoneRobe : BEArmor {
	BEMoonstoneRobe() : base() {
		$this.Name               = 'Moonstone Robe'
		$this.MapObjName         = 'moonstonerobe'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 29
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe adorned with glowing moonstones, boosting lunar magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGargoylePlate : BEArmor {
	BEGargoylePlate() : base() {
		$this.Name               = 'Gargoyle Plate'
		$this.MapObjName         = 'gargoyleplate'
		$this.PurchasePrice      = 1750
		$this.SellPrice          = 875
		$this.TargetStats        = @{
			[StatId]::Defense = 29
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy, grotesque plate armor carved to resemble a gargoyle.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiritwalkersVest : BEArmor {
	BESpiritwalkersVest() : base() {
		$this.Name               = 'Spiritwalker''s Vest'
		$this.MapObjName         = 'spiritwalkersvest'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest that aids in traversing spiritual realms, light but protective.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArcaneWeaveRobe : BEArmor {
	BEArcaneWeaveRobe() : base() {
		$this.Name               = 'Arcane Weave Robe'
		$this.MapObjName         = 'arcaneweaverobe'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe woven with pure arcane energy, granting significant magical power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlackenedSteelCuirass : BEArmor {
	BEBlackenedSteelCuirass() : base() {
		$this.Name               = 'Blackened Steel Cuirass'
		$this.MapObjName         = 'blackenedsteelcuirass'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
			[StatId]::Defense = 21
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Steel cuirass treated to a dark, menacing finish.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFeyTouchedTunic : BEArmor {
	BEFeyTouchedTunic() : base() {
		$this.Name               = 'Fey-Touched Tunic'
		$this.MapObjName         = 'feytouchedtunic'
		$this.PurchasePrice      = 260
		$this.SellPrice          = 130
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tunic seemingly woven from forest leaves, offering minor magical resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowStitchedVest : BEArmor {
	BEShadowStitchedVest() : base() {
		$this.Name               = 'Shadow-Stitched Vest'
		$this.MapObjName         = 'shadowstitchedvest'
		$this.PurchasePrice      = 320
		$this.SellPrice          = 160
		$this.TargetStats        = @{
			[StatId]::Defense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest sewn with threads of shadow, enhancing stealth and evasion.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivineAegisBreastplate : BEArmor {
	BEDivineAegisBreastplate() : base() {
		$this.Name               = 'Divine Aegis Breastplate'
		$this.MapObjName         = 'divineaegisbreastplate'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::Defense = 24
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A breastplate radiating holy light, offering strong defense against evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEElementalMastersRobe : BEArmor {
	BEElementalMastersRobe() : base() {
		$this.Name               = 'Elemental Master''s Robe'
		$this.MapObjName         = 'elementalmastersrobe'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe imbued with the essence of all four elements, highly versatile.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVenomhideCuirass : BEArmor {
	BEVenomhideCuirass() : base() {
		$this.Name               = 'Venomhide Cuirass'
		$this.MapObjName         = 'venomhidecuirass'
		$this.PurchasePrice      = 980
		$this.SellPrice          = 490
		$this.TargetStats        = @{
			[StatId]::Defense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass made from poisonous beast hide, offering minor toxin resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAstralSilkRobe : BEArmor {
	BEAstralSilkRobe() : base() {
		$this.Name               = 'Astral Silk Robe'
		$this.MapObjName         = 'astralsilkrobe'
		$this.PurchasePrice      = 1650
		$this.SellPrice          = 825
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe made from ethereal silk, allowing slight glimpses into other dimensions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECrystalineBreastplate : BEArmor {
	BECrystalineBreastplate() : base() {
		$this.Name               = 'Crystaline Breastplate'
		$this.MapObjName         = 'crystalinebreastplate'
		$this.PurchasePrice      = 1850
		$this.SellPrice          = 925
		$this.TargetStats        = @{
			[StatId]::Defense = 27
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A breastplate forged from compressed magical crystals, very durable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChronosRobe : BEArmor {
	BEChronosRobe() : base() {
		$this.Name               = 'Chronos Robe'
		$this.MapObjName         = 'chronosrobe'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 39
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that seems to slightly bend time around the wearer, boosting speed.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAbyssalChainmail : BEArmor {
	BEAbyssalChainmail() : base() {
		$this.Name               = 'Abyssal Chainmail'
		$this.MapObjName         = 'abyssalchainmail'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Chainmail found in the deepest parts of the ocean, resistant to pressure.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDesertWanderersRobe : BEArmor {
	BEDesertWanderersRobe() : base() {
		$this.Name               = 'Desert Wanderer''s Robe'
		$this.MapObjName         = 'desertwanderersrobe'
		$this.PurchasePrice      = 190
		$this.SellPrice          = 95
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light, breathable robe ideal for hot climates, offers minor sun protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneGuardTunic : BEArmor {
	BEStoneGuardTunic() : base() {
		$this.Name               = 'Stone Guard Tunic'
		$this.MapObjName         = 'stoneguardtunic'
		$this.PurchasePrice      = 160
		$this.SellPrice          = 80
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tunic reinforced with small stone plates for basic defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPilgrimsVest : BEArmor {
	BEPilgrimsVest() : base() {
		$this.Name               = 'Pilgrim''s Vest'
		$this.MapObjName         = 'pilgrimsvest'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple, durable vest for long journeys of faith.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAlchemistsApron : BEArmor {
	BEAlchemistsApron() : base() {
		$this.Name               = 'Alchemist''s Apron'
		$this.MapObjName         = 'alchemistsapron'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy apron with many pockets, useful for potion crafting.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamersRobe : BEArmor {
	BEDreamersRobe() : base() {
		$this.Name               = 'Dreamer''s Robe'
		$this.MapObjName         = 'dreamersrobe'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A soft robe that aids in lucid dreaming, enhancing magical recovery.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERiverstoneVest : BEArmor {
	BERiverstoneVest() : base() {
		$this.Name               = 'Riverstone Vest'
		$this.MapObjName         = 'riverstonevest'
		$this.PurchasePrice      = 220
		$this.SellPrice          = 110
		$this.TargetStats        = @{
			[StatId]::Defense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest embedded with smooth river stones, offering minor water resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFrostweaveRobe : BEArmor {
	BEFrostweaveRobe() : base() {
		$this.Name               = 'Frostweave Robe'
		$this.MapObjName         = 'frostweaverobe'
		$this.PurchasePrice      = 780
		$this.SellPrice          = 390
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe woven from icy fibers, providing cold resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlimmeringChainmail : BEArmor {
	BEGlimmeringChainmail() : base() {
		$this.Name               = 'Glimmering Chainmail'
		$this.MapObjName         = 'glimmeringchainmail'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Chainmail that catches the light and subtly disorients foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWyvernBoneCuirass : BEArmor {
	BEWyvernBoneCuirass() : base() {
		$this.Name               = 'Wyvern Bone Cuirass'
		$this.MapObjName         = 'wyvernbonecuirass'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 23
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass crafted from the bones of a wyvern, lightweight yet strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECelestialMessengersRobe : BEArmor {
	BECelestialMessengersRobe() : base() {
		$this.Name               = 'Celestial Messenger''s Robe'
		$this.MapObjName         = 'celestialmessengersrobe'
		$this.PurchasePrice      = 1750
		$this.SellPrice          = 875
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 36
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe said to be worn by celestial beings, granting wisdom and foresight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGolemPlating : BEArmor {
	BEGolemPlating() : base() {
		$this.Name               = 'Golem Plating'
		$this.MapObjName         = 'golemplating'
		$this.PurchasePrice      = 2400
		$this.SellPrice          = 1200
		$this.TargetStats        = @{
			[StatId]::Defense = 34
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Sections of golem plating fashioned into a heavy torso armor.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulfireRobe : BEArmor {
	BESoulfireRobe() : base() {
		$this.Name               = 'Soulfire Robe'
		$this.MapObjName         = 'soulfirerobe'
		$this.PurchasePrice      = 1950
		$this.SellPrice          = 975
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 37
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe imbued with captured souls, radiating dark energy and boosting spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEObsidianGuardVest : BEArmor {
	BEObsidianGuardVest() : base() {
		$this.Name               = 'Obsidian Guard Vest'
		$this.MapObjName         = 'obsidianguardvest'
		$this.PurchasePrice      = 480
		$this.SellPrice          = 240
		$this.TargetStats        = @{
			[StatId]::Defense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest reinforced with shards of obsidian, offering sharp defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEmeraldRobe : BEArmor {
	BEEmeraldRobe() : base() {
		$this.Name               = 'Emerald Robe'
		$this.MapObjName         = 'emeraldrobe'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 26
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vibrant green robe adorned with emeralds, enhancing nature magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERunicBreastplate : BEArmor {
	BERunicBreastplate() : base() {
		$this.Name               = 'Runic Breastplate'
		$this.MapObjName         = 'runicbreastplate'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A breastplate etched with protective runes, offering strong magical defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStardustRobe : BEArmor {
	BEStardustRobe() : base() {
		$this.Name               = 'Stardust Robe'
		$this.MapObjName         = 'stardustrobe'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 34
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that shimmers like scattered stardust, boosting cosmic magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVikingChainmail : BEArmor {
	BEVikingChainmail() : base() {
		$this.Name               = 'Viking Chainmail'
		$this.MapObjName         = 'vikingchainmail'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy, sturdy chainmail favored by northern warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreadKnightsCuirass : BEArmor {
	BEDreadKnightsCuirass() : base() {
		$this.Name               = 'Dread Knight''s Cuirass'
		$this.MapObjName         = 'dreadknightscuirass'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 29
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A terrifying black cuirass, instilling fear in enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAetherRobe : BEArmor {
	BEAetherRobe() : base() {
		$this.Name               = 'Aether Robe'
		$this.MapObjName         = 'aetherrobe'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A translucent robe that seems to shift with air currents, very light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChimeraHideVest : BEArmor {
	BEChimeraHideVest() : base() {
		$this.Name               = 'Chimera Hide Vest'
		$this.MapObjName         = 'chimerahidevest'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest made from the hides of various monstrous creatures, granting varied resistances.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVampiricRobe : BEArmor {
	BEVampiricRobe() : base() {
		$this.Name               = 'Vampiric Robe'
		$this.MapObjName         = 'vampiricrobe'
		$this.PurchasePrice      = 1550
		$this.SellPrice          = 775
		$this.TargetStats        = @{
			[StatId]::Defense = 3
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that subtly drains life from enemies during combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStormforgedPlate : BEArmor {
	BEStormforgedPlate() : base() {
		$this.Name               = 'Stormforged Plate'
		$this.MapObjName         = 'stormforgedplate'
		$this.PurchasePrice      = 2600
		$this.SellPrice          = 1300
		$this.TargetStats        = @{
			[StatId]::Defense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Plate armor that hums with static electricity, resisting lightning.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEchoingRobe : BEArmor {
	BEEchoingRobe() : base() {
		$this.Name               = 'Echoing Robe'
		$this.MapObjName         = 'echoingrobe'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that amplifies spells, but leaves residual magical echoes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETitansLegacyBreastplate : BEArmor {
	BETitansLegacyBreastplate() : base() {
		$this.Name               = 'Titan''s Legacy Breastplate'
		$this.MapObjName         = 'titanslegacybreastplate'
		$this.PurchasePrice      = 2900
		$this.SellPrice          = 1450
		$this.TargetStats        = @{
			[StatId]::Defense = 39
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A breastplate said to be a fragment of a titan''s armor, immense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamcatcherVest : BEArmor {
	BEDreamcatcherVest() : base() {
		$this.Name               = 'Dreamcatcher Vest'
		$this.MapObjName         = 'dreamcatchervest'
		$this.PurchasePrice      = 380
		$this.SellPrice          = 190
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest woven with mystical strands, protecting against magical sleep.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunkenPlate : BEArmor {
	BESunkenPlate() : base() {
		$this.Name               = 'Sunken Plate'
		$this.MapObjName         = 'sunkenplate'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::Defense = 33
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy plate armor encrusted with barnacles, very resistant to water.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrimsonWitchsGown : BEArmor {
	BECrimsonWitchsGown() : base() {
		$this.Name               = 'Crimson Witch''s Gown'
		$this.MapObjName         = 'crimsonwitchsgown'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A deep crimson gown, enhancing dark and fire-based magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BERoseSilkRobe : BEArmor {
	BERoseSilkRobe() : base() {
		$this.Name               = 'Rose Silk Robe'
		$this.MapObjName         = 'rosesilkrobe'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A delicate pink silk robe, often worn by charming mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMaidensChainmail : BEArmor {
	BEMaidensChainmail() : base() {
		$this.Name               = 'Maiden''s Chainmail'
		$this.MapObjName         = 'maidenschainmail'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Lighter, more flexible chainmail designed for female warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEEnchantedCorset : BEArmor {
	BEEnchantedCorset() : base() {
		$this.Name               = 'Enchanted Corset'
		$this.MapObjName         = 'enchantedcorset'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 2
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A reinforced corset imbued with minor protective enchantments.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGoddesssGown : BEArmor {
	BEGoddesssGown() : base() {
		$this.Name               = 'Goddess''s Gown'
		$this.MapObjName         = 'goddesssgown'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A radiant gown said to be blessed by a deity, offering divine protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEVixensVest : BEArmor {
	BEVixensVest() : base() {
		$this.Name               = 'Vixen''s Vest'
		$this.MapObjName         = 'vixensvest'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sleek, dark vest, often worn by agile and cunning female rogues.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEEmpresssRobe : BEArmor {
	BEEmpresssRobe() : base() {
		$this.Name               = 'Empress''s Robe'
		$this.MapObjName         = 'empresssrobe'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A regal robe, richly embroidered and imbued with subtle power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMoonlitDress : BEArmor {
	BEMoonlitDress() : base() {
		$this.Name               = 'Moonlit Dress'
		$this.MapObjName         = 'moonlitdress'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 23
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A flowing dress that glows softly in the moonlight, enhancing illusion magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDiamondCuirass : BEArmor {
	BEDiamondCuirass() : base() {
		$this.Name               = 'Diamond Cuirass'
		$this.MapObjName         = 'diamondcuirass'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sparkling cuirass inlaid with diamonds, very durable and beautiful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEForestNymphsTunic : BEArmor {
	BEForestNymphsTunic() : base() {
		$this.Name               = 'Forest Nymph''s Tunic'
		$this.MapObjName         = 'forestnymphstunic'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tunic made from living leaves and moss, blending with nature.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBattleMaidensPlate : BEArmor {
	BEBattleMaidensPlate() : base() {
		$this.Name               = 'Battle Maiden''s Plate'
		$this.MapObjName         = 'battlemaidensplate'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 21
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Sturdy plate armor designed for female warriors, allowing flexibility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEQueenofThornsRobe : BEArmor {
	BEQueenofThornsRobe() : base() {
		$this.Name               = 'Queen of Thorns Robe'
		$this.MapObjName         = 'queenofthornsrobe'
		$this.PurchasePrice      = 1450
		$this.SellPrice          = 725
		$this.TargetStats        = @{
			[StatId]::Defense = 2
			[StatId]::MagicDefense = 31
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark, thorny robe, providing protection and minor offensive capabilities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESpiritDancersBlouse : BEArmor {
	BESpiritDancersBlouse() : base() {
		$this.Name               = 'Spirit Dancer''s Blouse'
		$this.MapObjName         = 'spiritdancersblouse'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light blouse that enhances agility and spiritual connection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECrimsonCourtGown : BEArmor {
	BECrimsonCourtGown() : base() {
		$this.Name               = 'Crimson Court Gown'
		$this.MapObjName         = 'crimsoncourtgown'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A luxurious crimson gown, granting slight magical allure.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEShadowHuntresssVest : BEArmor {
	BEShadowHuntresssVest() : base() {
		$this.Name               = 'Shadow Huntress''s Vest'
		$this.MapObjName         = 'shadowhuntresssvest'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark vest optimized for stealth and ranged attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECelestialSorceressGown : BEArmor {
	BECelestialSorceressGown() : base() {
		$this.Name               = 'Celestial Sorceress Gown'
		$this.MapObjName         = 'celestialsorceressgown'
		$this.PurchasePrice      = 2300
		$this.SellPrice          = 1150
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 44
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A magnificent gown adorned with celestial patterns, immensely powerful for magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDesertRoseDress : BEArmor {
	BEDesertRoseDress() : base() {
		$this.Name               = 'Desert Rose Dress'
		$this.MapObjName         = 'desertrosedress'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light, airy dress, comfortable in hot climates, with minor fire resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWinterMaidensRobe : BEArmor {
	BEWinterMaidensRobe() : base() {
		$this.Name               = 'Winter Maiden''s Robe'
		$this.MapObjName         = 'wintermaidensrobe'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that emanates a chilling aura, providing strong cold resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWarriorQueensBreastplate : BEArmor {
	BEWarriorQueensBreastplate() : base() {
		$this.Name               = 'Warrior Queen''s Breastplate'
		$this.MapObjName         = 'warriorqueensbreastplate'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 31
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A fearsome breastplate worn by a powerful female leader.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGothicVest : BEArmor {
	BEGothicVest() : base() {
		$this.Name               = 'Gothic Vest'
		$this.MapObjName         = 'gothicvest'
		$this.PurchasePrice      = 380
		$this.SellPrice          = 190
		$this.TargetStats        = @{
			[StatId]::Defense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark, layered vest with ornate buckles, offers good defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBonePlate : BEArmor {
	BEBonePlate() : base() {
		$this.Name               = 'Bone Plate'
		$this.MapObjName         = 'boneplate'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Armor crafted from hardened bones, eerie but effective.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDeepSeaRobe : BEArmor {
	BEDeepSeaRobe() : base() {
		$this.Name               = 'Deep Sea Robe'
		$this.MapObjName         = 'deepsearobe'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe woven from rare deep-sea fibers, offers strong water resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVolatileVest : BEArmor {
	BEVolatileVest() : base() {
		$this.Name               = 'Volatile Vest'
		$this.MapObjName         = 'volatilevest'
		$this.PurchasePrice      = 420
		$this.SellPrice          = 210
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest that sometimes explodes with magical energy, risky but powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEldritchRobe : BEArmor {
	BEEldritchRobe() : base() {
		$this.Name               = 'Eldritch Robe'
		$this.MapObjName         = 'eldritchrobe'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 36
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that subtly shifts patterns, enhancing forbidden magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidWeaversCuirass : BEArmor {
	BEVoidWeaversCuirass() : base() {
		$this.Name               = 'Void Weaver''s Cuirass'
		$this.MapObjName         = 'voidweaverscuirass'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass that seems to absorb all light, making the wearer harder to hit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInfinityVITurtleArmor : BEArmor {
    BEInfinityVITurtleArmor() : base() {
        $this.Name               = 'Infinity VI Turtle Armor'
        $this.MapObjName         = 'infinityviturtlearmor'
        $this.PurchasePrice      = 300000
        $this.SellPrice          = 0
        $this.TargetStats        = @{
            [StatId]::Defense      = 250
            [StatId]::MagicDefense = 250
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'This also evidently spawns 60K turtles too.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
        $this.TargetGender       = [Gender]::Unisex
    }
}

Class BEBearArmor : BEArmor {
    BEBearArmor() : base() {
        $this.Name               = 'Bear Armor'
        $this.MapObjName         = 'beararmor'
        $this.PurchasePrice      = 0
        $this.SellPrice          = 0
        $this.TargetStats        = @{
            [StatId]::Defense      = 999
            [StatId]::MagicDefense = 999
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'The ultimate in fuzzy armor.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
        $this.TargetGender       = [Gender]::Unisex
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# PAULDRONS
#
#//////////////////////////////////////////////////////////////////////////////

Class BEWovenPauldron : BEPauldron {
	BEWovenPauldron() : base() {
		$this.Name               = 'Woven Pauldron'
		$this.MapObjName         = 'wovenpauldron'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple pauldron woven from sturdy fibers. Offers basic protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELeatherPauldron : BEPauldron {
	BELeatherPauldron() : base() {
		$this.Name               = 'Leather Pauldron'
		$this.MapObjName         = 'leatherpauldron'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crafted from cured leather, providing light defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStuddedPauldron : BEPauldron {
	BEStuddedPauldron() : base() {
		$this.Name               = 'Studded Pauldron'
		$this.MapObjName         = 'studdedpauldron'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Leather pauldron reinforced with metal studs for added protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChainPauldron : BEPauldron {
	BEChainPauldron() : base() {
		$this.Name               = 'Chain Pauldron'
		$this.MapObjName         = 'chainpauldron'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Interlocking metal rings form a flexible and protective pauldron.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEScalePauldron : BEPauldron {
	BEScalePauldron() : base() {
		$this.Name               = 'Scale Pauldron'
		$this.MapObjName         = 'scalepauldron'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Overlapping metal scales provide good defense against various attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBronzePauldron : BEPauldron {
	BEBronzePauldron() : base() {
		$this.Name               = 'Bronze Pauldron'
		$this.MapObjName         = 'bronzepauldron'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Solid bronze pauldron offering decent protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIronPauldron : BEPauldron {
	BEIronPauldron() : base() {
		$this.Name               = 'Iron Pauldron'
		$this.MapObjName         = 'ironpauldron'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy iron pauldron, providing substantial physical defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESteelPauldron : BEPauldron {
	BESteelPauldron() : base() {
		$this.Name               = 'Steel Pauldron'
		$this.MapObjName         = 'steelpauldron'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Forged from strong steel, a reliable choice for warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMithrilPauldron : BEPauldron {
	BEMithrilPauldron() : base() {
		$this.Name               = 'Mithril Pauldron'
		$this.MapObjName         = 'mithrilpauldron'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Lightweight yet incredibly strong, favored by agile fighters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAdamantPauldron : BEPauldron {
	BEAdamantPauldron() : base() {
		$this.Name               = 'Adamant Pauldron'
		$this.MapObjName         = 'adamantpauldron'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Legendary metal pauldron, offering immense protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonhidePauldron : BEPauldron {
	BEDragonhidePauldron() : base() {
		$this.Name               = 'Dragonhide Pauldron'
		$this.MapObjName         = 'dragonhidepauldron'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crafted from the tough hide of a dragon, resistant to many elements.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERunedPauldron : BEPauldron {
	BERunedPauldron() : base() {
		$this.Name               = 'Runed Pauldron'
		$this.MapObjName         = 'runedpauldron'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Etched with ancient runes, granting minor magical resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHeroicPauldron : BEPauldron {
	BEHeroicPauldron() : base() {
		$this.Name               = 'Heroic Pauldron'
		$this.MapObjName         = 'heroicpauldron'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pauldron worn by heroes of old, imbued with fighting spirit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEValiantPauldron : BEPauldron {
	BEValiantPauldron() : base() {
		$this.Name               = 'Valiant Pauldron'
		$this.MapObjName         = 'valiantpauldron'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Signifies courage and strength, often worn by knights.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGloriousPauldron : BEPauldron {
	BEGloriousPauldron() : base() {
		$this.Name               = 'Glorious Pauldron'
		$this.MapObjName         = 'gloriouspauldron'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shining pauldron, symbolizing victory and honor.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEChampionsPauldron : BEPauldron {
	BEChampionsPauldron() : base() {
		$this.Name               = 'Champion''s Pauldron'
		$this.MapObjName         = 'championspauldron'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by the undefeated champions of the arena.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECommandersPauldron : BEPauldron {
	BECommandersPauldron() : base() {
		$this.Name               = 'Commander''s Pauldron'
		$this.MapObjName         = 'commanderspauldron'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grants authority and inspires allies on the battlefield.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEWarlordsPauldron : BEPauldron {
	BEWarlordsPauldron() : base() {
		$this.Name               = 'Warlord''s Pauldron'
		$this.MapObjName         = 'warlordspauldron'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 19
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy and menacing, favored by fierce military leaders.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BERoyalGuardPauldron : BEPauldron {
	BERoyalGuardPauldron() : base() {
		$this.Name               = 'Royal Guard Pauldron'
		$this.MapObjName         = 'royalguardpauldron'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Issued to the elite protectors of the monarchy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESacredPauldron : BEPauldron {
	BESacredPauldron() : base() {
		$this.Name               = 'Sacred Pauldron'
		$this.MapObjName         = 'sacredpauldron'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
			[StatId]::Defense = 21
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blessed by divine power, offering protection against evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEPaladinPauldron : BEPauldron {
	BEPaladinPauldron() : base() {
		$this.Name               = 'Paladin Pauldron'
		$this.MapObjName         = 'paladinpauldron'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by holy warriors dedicated to justice.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECrusaderPauldron : BEPauldron {
	BECrusaderPauldron() : base() {
		$this.Name               = 'Crusader Pauldron'
		$this.MapObjName         = 'crusaderpauldron'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{
			[StatId]::Defense = 23
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy and imposing, a symbol of unwavering faith.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESentinelPauldron : BEPauldron {
	BESentinelPauldron() : base() {
		$this.Name               = 'Sentinel Pauldron'
		$this.MapObjName         = 'sentinelpauldron'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 24
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Designed for vigilant guardians, offering superior defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGuardiansPauldron : BEPauldron {
	BEGuardiansPauldron() : base() {
		$this.Name               = 'Guardian''s Pauldron'
		$this.MapObjName         = 'guardianspauldron'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Imbued with protective magic, shielding its wearer from harm.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDragonbonePauldron : BEPauldron {
	BEDragonbonePauldron() : base() {
		$this.Name               = 'Dragonbone Pauldron'
		$this.MapObjName         = 'dragonbonepauldron'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 26
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Forged from the bones of a fallen dragon, incredibly durable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESoulboundPauldron : BEPauldron {
	BESoulboundPauldron() : base() {
		$this.Name               = 'Soulbound Pauldron'
		$this.MapObjName         = 'soulboundpauldron'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::Defense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Binds to its wearer, enhancing their fighting prowess.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEVanguardPauldron : BEPauldron {
	BEVanguardPauldron() : base() {
		$this.Name               = 'Vanguard Pauldron'
		$this.MapObjName         = 'vanguardpauldron'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Leads the charge, offering robust protection in the front lines.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBulwarkPauldron : BEPauldron {
	BEBulwarkPauldron() : base() {
		$this.Name               = 'Bulwark Pauldron'
		$this.MapObjName         = 'bulwarkpauldron'
		$this.PurchasePrice      = 1450
		$this.SellPrice          = 725
		$this.TargetStats        = @{
			[StatId]::Defense = 29
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An impenetrable defense, almost impossible to breach.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEFortressPauldron : BEPauldron {
	BEFortressPauldron() : base() {
		$this.Name               = 'Fortress Pauldron'
		$this.MapObjName         = 'fortresspauldron'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Turns its wearer into a walking fortress, unyielding.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BETitansPauldron : BEPauldron {
	BETitansPauldron() : base() {
		$this.Name               = 'Titan''s Pauldron'
		$this.MapObjName         = 'titanspauldron'
		$this.PurchasePrice      = 1550
		$this.SellPrice          = 775
		$this.TargetStats        = @{
			[StatId]::Defense = 31
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Said to have been worn by a Titan, incredibly powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEWarriorMaidenPauldron : BEPauldron {
	BEWarriorMaidenPauldron() : base() {
		$this.Name               = 'Warrior Maiden Pauldron'
		$this.MapObjName         = 'warriormaidenpauldron'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Designed for courageous female warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEAmazonianPauldron : BEPauldron {
	BEAmazonianPauldron() : base() {
		$this.Name               = 'Amazonian Pauldron'
		$this.MapObjName         = 'amazonianpauldron'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by the legendary Amazons, light yet strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEValkyriePauldron : BEPauldron {
	BEValkyriePauldron() : base() {
		$this.Name               = 'Valkyrie Pauldron'
		$this.MapObjName         = 'valkyriepauldron'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Shines with divine light, granting protection to its wearer.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEHuntressPauldron : BEPauldron {
	BEHuntressPauldron() : base() {
		$this.Name               = 'Huntress Pauldron'
		$this.MapObjName         = 'huntresspauldron'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows for agile movement while offering decent protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEShieldmaidensPauldron : BEPauldron {
	BEShieldmaidensPauldron() : base() {
		$this.Name               = 'Shieldmaiden''s Pauldron'
		$this.MapObjName         = 'shieldmaidenspauldron'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by fierce shieldmaidens, providing robust defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDaughteroftheForestPauldron : BEPauldron {
	BEDaughteroftheForestPauldron() : base() {
		$this.Name               = 'Daughter of the Forest Pauldron'
		$this.MapObjName         = 'daughteroftheforestpauldron'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 19
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blends with nature, offering subtle protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEQueensGuardPauldron : BEPauldron {
	BEQueensGuardPauldron() : base() {
		$this.Name               = 'Queen''s Guard Pauldron'
		$this.MapObjName         = 'queensguardpauldron'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Elegant yet strong, worn by the elite protectors of the queen.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDivineMaidenPauldron : BEPauldron {
	BEDivineMaidenPauldron() : base() {
		$this.Name               = 'Divine Maiden Pauldron'
		$this.MapObjName         = 'divinemaidenpauldron'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
			[StatId]::Defense = 21
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blessed by ancient goddesses, warding off malevolent forces.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEPriestessPauldron : BEPauldron {
	BEPriestessPauldron() : base() {
		$this.Name               = 'Priestess Pauldron'
		$this.MapObjName         = 'priestesspauldron'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by holy priestesses, offering both defense and spiritual aid.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMysticPauldron : BEPauldron {
	BEMysticPauldron() : base() {
		$this.Name               = 'Mystic Pauldron'
		$this.MapObjName         = 'mysticpauldron'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{
			[StatId]::Defense = 23
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Imbued with arcane energies, enhancing magical defenses.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESorcerersPauldron : BEPauldron {
	BESorcerersPauldron() : base() {
		$this.Name               = 'Sorcerer''s Pauldron'
		$this.MapObjName         = 'sorcererspauldron'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 24
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Favored by powerful sorcerers, enhancing their spellcasting.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArchmagePauldron : BEPauldron {
	BEArchmagePauldron() : base() {
		$this.Name               = 'Archmage Pauldron'
		$this.MapObjName         = 'archmagepauldron'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pauldron of immense magical power, worn by master mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarlockPauldron : BEPauldron {
	BEWarlockPauldron() : base() {
		$this.Name               = 'Warlock Pauldron'
		$this.MapObjName         = 'warlockpauldron'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 26
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Dark and potent, for those who wield forbidden magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEnchantersPauldron : BEPauldron {
	BEEnchantersPauldron() : base() {
		$this.Name               = 'Enchanter''s Pauldron'
		$this.MapObjName         = 'enchanterspauldron'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::Defense = 27
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Enhances enchantments and magical effects.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESagesPauldron : BEPauldron {
	BESagesPauldron() : base() {
		$this.Name               = 'Sage''s Pauldron'
		$this.MapObjName         = 'sagespauldron'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by wise sages, granting insight and magical prowess.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENecromancerPauldron : BEPauldron {
	BENecromancerPauldron() : base() {
		$this.Name               = 'Necromancer Pauldron'
		$this.MapObjName         = 'necromancerpauldron'
		$this.PurchasePrice      = 1450
		$this.SellPrice          = 725
		$this.TargetStats        = @{
			[StatId]::Defense = 29
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows for manipulation of the undead, dark and chilling.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELichPauldron : BEPauldron {
	BELichPauldron() : base() {
		$this.Name               = 'Lich Pauldron'
		$this.MapObjName         = 'lichpauldron'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A relic of immense power, brimming with dark magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEElementalPauldron : BEPauldron {
	BEElementalPauldron() : base() {
		$this.Name               = 'Elemental Pauldron'
		$this.MapObjName         = 'elementalpauldron'
		$this.PurchasePrice      = 1550
		$this.SellPrice          = 775
		$this.TargetStats        = @{
			[StatId]::Defense = 31
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Channels the power of the elements, offering varied resistances.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAstralPauldron : BEPauldron {
	BEAstralPauldron() : base() {
		$this.Name               = 'Astral Pauldron'
		$this.MapObjName         = 'astralpauldron'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Said to be woven from starlight, offering cosmic protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowPauldron : BEPauldron {
	BEShadowPauldron() : base() {
		$this.Name               = 'Shadow Pauldron'
		$this.MapObjName         = 'shadowpauldron'
		$this.PurchasePrice      = 1650
		$this.SellPrice          = 825
		$this.TargetStats        = @{
			[StatId]::Defense = 33
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grants concealment and enhances stealth, for those who walk in shadows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAssassinsPauldron : BEPauldron {
	BEAssassinsPauldron() : base() {
		$this.Name               = 'Assassin''s Pauldron'
		$this.MapObjName         = 'assassinspauldron'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 34
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light and agile, perfect for striking from the shadows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BERoguePauldron : BEPauldron {
	BERoguePauldron() : base() {
		$this.Name               = 'Rogue Pauldron'
		$this.MapObjName         = 'roguepauldron'
		$this.PurchasePrice      = 1750
		$this.SellPrice          = 875
		$this.TargetStats        = @{
			[StatId]::Defense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Designed for cunning rogues, offering minimal hindrance to movement.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEThiefsPauldron : BEPauldron {
	BEThiefsPauldron() : base() {
		$this.Name               = 'Thief''s Pauldron'
		$this.MapObjName         = 'thiefspauldron'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 36
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows for quick escapes and silent movement.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEScoutPauldron : BEPauldron {
	BEScoutPauldron() : base() {
		$this.Name               = 'Scout Pauldron'
		$this.MapObjName         = 'scoutpauldron'
		$this.PurchasePrice      = 1850
		$this.SellPrice          = 925
		$this.TargetStats        = @{
			[StatId]::Defense = 37
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Lightweight and practical for long journeys and reconnaissance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEHuntersPauldron : BEPauldron {
	BEHuntersPauldron() : base() {
		$this.Name               = 'Hunter''s Pauldron'
		$this.MapObjName         = 'hunterspauldron'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Provides decent protection without sacrificing mobility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBrigandsPauldron : BEPauldron {
	BEBrigandsPauldron() : base() {
		$this.Name               = 'Brigand''s Pauldron'
		$this.MapObjName         = 'brigandspauldron'
		$this.PurchasePrice      = 1950
		$this.SellPrice          = 975
		$this.TargetStats        = @{
			[StatId]::Defense = 39
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Roughly made but effective for those who live by their wits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEOutlawPauldron : BEPauldron {
	BEOutlawPauldron() : base() {
		$this.Name               = 'Outlaw Pauldron'
		$this.MapObjName         = 'outlawpauldron'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Favored by those who operate outside the law.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMaraudersPauldron : BEPauldron {
	BEMaraudersPauldron() : base() {
		$this.Name               = 'Marauder''s Pauldron'
		$this.MapObjName         = 'marauderspauldron'
		$this.PurchasePrice      = 2050
		$this.SellPrice          = 1025
		$this.TargetStats        = @{
			[StatId]::Defense = 41
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Aggressive and functional, for those who take what they want.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BENomadPauldron : BEPauldron {
	BENomadPauldron() : base() {
		$this.Name               = 'Nomad Pauldron'
		$this.MapObjName         = 'nomadpauldron'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Defense = 42
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Practical and durable for endless journeys.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEWanderersPauldron : BEPauldron {
	BEWanderersPauldron() : base() {
		$this.Name               = 'Wanderer''s Pauldron'
		$this.MapObjName         = 'wandererspauldron'
		$this.PurchasePrice      = 2150
		$this.SellPrice          = 1075
		$this.TargetStats        = @{
			[StatId]::Defense = 43
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by those who roam the wilderness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEPathfinderPauldron : BEPauldron {
	BEPathfinderPauldron() : base() {
		$this.Name               = 'Pathfinder Pauldron'
		$this.MapObjName         = 'pathfinderpauldron'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::Defense = 44
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Aids in navigating difficult terrain and evading threats.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEExplorersPauldron : BEPauldron {
	BEExplorersPauldron() : base() {
		$this.Name               = 'Explorer''s Pauldron'
		$this.MapObjName         = 'explorerspauldron'
		$this.PurchasePrice      = 2250
		$this.SellPrice          = 1125
		$this.TargetStats        = @{
			[StatId]::Defense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'For venturing into uncharted territories, offering decent protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BETravelersPauldron : BEPauldron {
	BETravelersPauldron() : base() {
		$this.Name               = 'Traveler''s Pauldron'
		$this.MapObjName         = 'travelerspauldron'
		$this.PurchasePrice      = 2300
		$this.SellPrice          = 1150
		$this.TargetStats        = @{
			[StatId]::Defense = 46
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Comfortable and reliable for long expeditions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESurvivorsPauldron : BEPauldron {
	BESurvivorsPauldron() : base() {
		$this.Name               = 'Survivor''s Pauldron'
		$this.MapObjName         = 'survivorspauldron'
		$this.PurchasePrice      = 2350
		$this.SellPrice          = 1175
		$this.TargetStats        = @{
			[StatId]::Defense = 47
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Shows signs of wear but has endured countless hardships.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEFrontierPauldron : BEPauldron {
	BEFrontierPauldron() : base() {
		$this.Name               = 'Frontier Pauldron'
		$this.MapObjName         = 'frontierpauldron'
		$this.PurchasePrice      = 2400
		$this.SellPrice          = 1200
		$this.TargetStats        = @{
			[StatId]::Defense = 48
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Suited for the untamed wilds, offering rugged defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEWastelandPauldron : BEPauldron {
	BEWastelandPauldron() : base() {
		$this.Name               = 'Wasteland Pauldron'
		$this.MapObjName         = 'wastelandpauldron'
		$this.PurchasePrice      = 2450
		$this.SellPrice          = 1225
		$this.TargetStats        = @{
			[StatId]::Defense = 49
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Salvaged and reinforced, offering protection in desolate lands.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BERebelPauldron : BEPauldron {
	BERebelPauldron() : base() {
		$this.Name               = 'Rebel Pauldron'
		$this.MapObjName         = 'rebelpauldron'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Defense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A symbol of defiance, for those who fight against oppression.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDesertWalkerPauldron : BEPauldron {
	BEDesertWalkerPauldron() : base() {
		$this.Name               = 'Desert Walker Pauldron'
		$this.MapObjName         = 'desertwalkerpauldron'
		$this.PurchasePrice      = 2550
		$this.SellPrice          = 1275
		$this.TargetStats        = @{
			[StatId]::Defense = 51
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Designed for endurance in arid environments.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMountainClimberPauldron : BEPauldron {
	BEMountainClimberPauldron() : base() {
		$this.Name               = 'Mountain Climber Pauldron'
		$this.MapObjName         = 'mountainclimberpauldron'
		$this.PurchasePrice      = 2600
		$this.SellPrice          = 1300
		$this.TargetStats        = @{
			[StatId]::Defense = 52
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Aids in scaling peaks and offers protection against falling debris.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGlacierPauldron : BEPauldron {
	BEGlacierPauldron() : base() {
		$this.Name               = 'Glacier Pauldron'
		$this.MapObjName         = 'glacierpauldron'
		$this.PurchasePrice      = 2650
		$this.SellPrice          = 1325
		$this.TargetStats        = @{
			[StatId]::Defense = 53
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Provides warmth and protection in freezing conditions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESwamplandPauldron : BEPauldron {
	BESwamplandPauldron() : base() {
		$this.Name               = 'Swampland Pauldron'
		$this.MapObjName         = 'swamplandpauldron'
		$this.PurchasePrice      = 2700
		$this.SellPrice          = 1350
		$this.TargetStats        = @{
			[StatId]::Defense = 54
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Resistant to moisture and disease, for traversing murky waters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDeepSeaPauldron : BEPauldron {
	BEDeepSeaPauldron() : base() {
		$this.Name               = 'Deep Sea Pauldron'
		$this.MapObjName         = 'deepseapauldron'
		$this.PurchasePrice      = 2750
		$this.SellPrice          = 1375
		$this.TargetStats        = @{
			[StatId]::Defense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Offers protection against the pressures of the ocean depths.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESkyfarerPauldron : BEPauldron {
	BESkyfarerPauldron() : base() {
		$this.Name               = 'Skyfarer Pauldron'
		$this.MapObjName         = 'skyfarerpauldron'
		$this.PurchasePrice      = 2800
		$this.SellPrice          = 1400
		$this.TargetStats        = @{
			[StatId]::Defense = 56
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Lightweight and aerodynamic, for those who travel the skies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECloudWalkerPauldron : BEPauldron {
	BECloudWalkerPauldron() : base() {
		$this.Name               = 'Cloud Walker Pauldron'
		$this.MapObjName         = 'cloudwalkerpauldron'
		$this.PurchasePrice      = 2850
		$this.SellPrice          = 1425
		$this.TargetStats        = @{
			[StatId]::Defense = 57
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows for graceful movement across aerial platforms.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStormforgedPauldron : BEPauldron {
	BEStormforgedPauldron() : base() {
		$this.Name               = 'Stormforged Pauldron'
		$this.MapObjName         = 'stormforgedpauldron'
		$this.PurchasePrice      = 2900
		$this.SellPrice          = 1450
		$this.TargetStats        = @{
			[StatId]::Defense = 58
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Forged in the heart of a storm, crackling with energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETempestPauldron : BEPauldron {
	BETempestPauldron() : base() {
		$this.Name               = 'Tempest Pauldron'
		$this.MapObjName         = 'tempestpauldron'
		$this.PurchasePrice      = 2950
		$this.SellPrice          = 1475
		$this.TargetStats        = @{
			[StatId]::Defense = 59
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Embodies the fury of a storm, enhancing elemental resistances.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZephyrPauldron : BEPauldron {
	BEZephyrPauldron() : base() {
		$this.Name               = 'Zephyr Pauldron'
		$this.MapObjName         = 'zephyrpauldron'
		$this.PurchasePrice      = 3000
		$this.SellPrice          = 1500
		$this.TargetStats        = @{
			[StatId]::Defense = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light as a feather, granting incredible agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGalePauldron : BEPauldron {
	BEGalePauldron() : base() {
		$this.Name               = 'Gale Pauldron'
		$this.MapObjName         = 'galepauldron'
		$this.PurchasePrice      = 3050
		$this.SellPrice          = 1525
		$this.TargetStats        = @{
			[StatId]::Defense = 61
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Channels the power of the wind, offering protection against air currents.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECyclonePauldron : BEPauldron {
	BECyclonePauldron() : base() {
		$this.Name               = 'Cyclone Pauldron'
		$this.MapObjName         = 'cyclonepauldron'
		$this.PurchasePrice      = 3100
		$this.SellPrice          = 1550
		$this.TargetStats        = @{
			[StatId]::Defense = 62
			[StatId]::MagicDefense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by masters of wind magic, creating defensive gusts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEarthenPauldron : BEPauldron {
	BEEarthenPauldron() : base() {
		$this.Name               = 'Earthen Pauldron'
		$this.MapObjName         = 'earthenpauldron'
		$this.PurchasePrice      = 3150
		$this.SellPrice          = 1575
		$this.TargetStats        = @{
			[StatId]::Defense = 63
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Made from compressed earth, offering unparalleled physical defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStonePauldron : BEPauldron {
	BEStonePauldron() : base() {
		$this.Name               = 'Stone Pauldron'
		$this.MapObjName         = 'stonepauldron'
		$this.PurchasePrice      = 3200
		$this.SellPrice          = 1600
		$this.TargetStats        = @{
			[StatId]::Defense = 64
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy and unyielding, providing immense protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGoliathPauldron : BEPauldron {
	BEGoliathPauldron() : base() {
		$this.Name               = 'Goliath Pauldron'
		$this.MapObjName         = 'goliathpauldron'
		$this.PurchasePrice      = 3250
		$this.SellPrice          = 1625
		$this.TargetStats        = @{
			[StatId]::Defense = 65
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Named after the giants of old, granting incredible resilience.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDwarvenPauldron : BEPauldron {
	BEDwarvenPauldron() : base() {
		$this.Name               = 'Dwarven Pauldron'
		$this.MapObjName         = 'dwarvenpauldron'
		$this.PurchasePrice      = 3300
		$this.SellPrice          = 1650
		$this.TargetStats        = @{
			[StatId]::Defense = 66
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Masterfully crafted by dwarves, incredibly sturdy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEOgrePauldron : BEPauldron {
	BEOgrePauldron() : base() {
		$this.Name               = 'Ogre Pauldron'
		$this.MapObjName         = 'ogrepauldron'
		$this.PurchasePrice      = 3350
		$this.SellPrice          = 1675
		$this.TargetStats        = @{
			[StatId]::Defense = 67
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crude but effective, worn by large, brutish fighters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGolemPauldron : BEPauldron {
	BEGolemPauldron() : base() {
		$this.Name               = 'Golem Pauldron'
		$this.MapObjName         = 'golempauldron'
		$this.PurchasePrice      = 3400
		$this.SellPrice          = 1700
		$this.TargetStats        = @{
			[StatId]::Defense = 68
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Imbued with the spirit of a golem, unmoving and strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMagmaPauldron : BEPauldron {
	BEMagmaPauldron() : base() {
		$this.Name               = 'Magma Pauldron'
		$this.MapObjName         = 'magmapauldron'
		$this.PurchasePrice      = 3450
		$this.SellPrice          = 1725
		$this.TargetStats        = @{
			[StatId]::Defense = 69
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Radiates intense heat, offering fire resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVolcanicPauldron : BEPauldron {
	BEVolcanicPauldron() : base() {
		$this.Name               = 'Volcanic Pauldron'
		$this.MapObjName         = 'volcanicpauldron'
		$this.PurchasePrice      = 3500
		$this.SellPrice          = 1750
		$this.TargetStats        = @{
			[StatId]::Defense = 70
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Forged in volcanic fires, resistant to extreme temperatures.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAshPauldron : BEPauldron {
	BEAshPauldron() : base() {
		$this.Name               = 'Ash Pauldron'
		$this.MapObjName         = 'ashpauldron'
		$this.PurchasePrice      = 3550
		$this.SellPrice          = 1775
		$this.TargetStats        = @{
			[StatId]::Defense = 71
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Coated in volcanic ash, offering protection from heat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECinderPauldron : BEPauldron {
	BECinderPauldron() : base() {
		$this.Name               = 'Cinder Pauldron'
		$this.MapObjName         = 'cinderpauldron'
		$this.PurchasePrice      = 3600
		$this.SellPrice          = 1800
		$this.TargetStats        = @{
			[StatId]::Defense = 72
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Still smoldering from its creation, radiates warmth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInfernoPauldron : BEPauldron {
	BEInfernoPauldron() : base() {
		$this.Name               = 'Inferno Pauldron'
		$this.MapObjName         = 'infernopauldron'
		$this.PurchasePrice      = 3650
		$this.SellPrice          = 1825
		$this.TargetStats        = @{
			[StatId]::Defense = 73
			[StatId]::MagicDefense = 19
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blazes with infernal fire, empowering fire defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlacialPauldron : BEPauldron {
	BEGlacialPauldron() : base() {
		$this.Name               = 'Glacial Pauldron'
		$this.MapObjName         = 'glacialpauldron'
		$this.PurchasePrice      = 3700
		$this.SellPrice          = 1850
		$this.TargetStats        = @{
			[StatId]::Defense = 74
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Freezes anything that touches it, offering resistance to ice.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFrostPauldron : BEPauldron {
	BEFrostPauldron() : base() {
		$this.Name               = 'Frost Pauldron'
		$this.MapObjName         = 'frostpauldron'
		$this.PurchasePrice      = 3750
		$this.SellPrice          = 1875
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 21
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Covered in perpetual frost, enhancing ice-based defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBorealPauldron : BEPauldron {
	BEBorealPauldron() : base() {
		$this.Name               = 'Boreal Pauldron'
		$this.MapObjName         = 'borealpauldron'
		$this.PurchasePrice      = 3800
		$this.SellPrice          = 1900
		$this.TargetStats        = @{
			[StatId]::Defense = 76
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Woven with threads of ice, offering chilling protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlizzardPauldron : BEPauldron {
	BEBlizzardPauldron() : base() {
		$this.Name               = 'Blizzard Pauldron'
		$this.MapObjName         = 'blizzardpauldron'
		$this.PurchasePrice      = 3850
		$this.SellPrice          = 1925
		$this.TargetStats        = @{
			[StatId]::Defense = 77
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Summons icy winds to buffet foes, enhancing cold defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOceanicPauldron : BEPauldron {
	BEOceanicPauldron() : base() {
		$this.Name               = 'Oceanic Pauldron'
		$this.MapObjName         = 'oceanicpauldron'
		$this.PurchasePrice      = 3900
		$this.SellPrice          = 1950
		$this.TargetStats        = @{
			[StatId]::Defense = 78
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Shimmers with the colors of the deep sea, resistant to water.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECoralPauldron : BEPauldron {
	BECoralPauldron() : base() {
		$this.Name               = 'Coral Pauldron'
		$this.MapObjName         = 'coralpauldron'
		$this.PurchasePrice      = 3950
		$this.SellPrice          = 1975
		$this.TargetStats        = @{
			[StatId]::Defense = 79
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Made from hardened coral, surprisingly durable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETidalPauldron : BEPauldron {
	BETidalPauldron() : base() {
		$this.Name               = 'Tidal Pauldron'
		$this.MapObjName         = 'tidalpauldron'
		$this.PurchasePrice      = 4000
		$this.SellPrice          = 2000
		$this.TargetStats        = @{
			[StatId]::Defense = 80
			[StatId]::MagicDefense = 23
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Channels the power of the tides, enhancing water defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAbyssalPauldron : BEPauldron {
	BEAbyssalPauldron() : base() {
		$this.Name               = 'Abyssal Pauldron'
		$this.MapObjName         = 'abyssalpauldron'
		$this.PurchasePrice      = 4050
		$this.SellPrice          = 2025
		$this.TargetStats        = @{
			[StatId]::Defense = 81
			[StatId]::MagicDefense = 24
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Pulled from the deepest trenches, exuding an ancient power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunkenPauldron : BEPauldron {
	BESunkenPauldron() : base() {
		$this.Name               = 'Sunken Pauldron'
		$this.MapObjName         = 'sunkenpauldron'
		$this.PurchasePrice      = 4100
		$this.SellPrice          = 2050
		$this.TargetStats        = @{
			[StatId]::Defense = 82
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Waterlogged but incredibly resilient, carries the scent of the ocean.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEElectricPauldron : BEPauldron {
	BEElectricPauldron() : base() {
		$this.Name               = 'Electric Pauldron'
		$this.MapObjName         = 'electricpauldron'
		$this.PurchasePrice      = 4150
		$this.SellPrice          = 2075
		$this.TargetStats        = @{
			[StatId]::Defense = 83
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crackles with static electricity, shocking nearby enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThunderPauldron : BEPauldron {
	BEThunderPauldron() : base() {
		$this.Name               = 'Thunder Pauldron'
		$this.MapObjName         = 'thunderpauldron'
		$this.PurchasePrice      = 4200
		$this.SellPrice          = 2100
		$this.TargetStats        = @{
			[StatId]::Defense = 84
			[StatId]::MagicDefense = 26
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Resonates with the roar of thunder, empowering lightning defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESparkPauldron : BEPauldron {
	BESparkPauldron() : base() {
		$this.Name               = 'Spark Pauldron'
		$this.MapObjName         = 'sparkpauldron'
		$this.PurchasePrice      = 4250
		$this.SellPrice          = 2125
		$this.TargetStats        = @{
			[StatId]::Defense = 85
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Emits small sparks, offering minor electrical resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPlasmaPauldron : BEPauldron {
	BEPlasmaPauldron() : base() {
		$this.Name               = 'Plasma Pauldron'
		$this.MapObjName         = 'plasmapauldron'
		$this.PurchasePrice      = 4300
		$this.SellPrice          = 2150
		$this.TargetStats        = @{
			[StatId]::Defense = 86
			[StatId]::MagicDefense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Generates a field of superheated plasma, for advanced warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERadiantPauldron : BEPauldron {
	BERadiantPauldron() : base() {
		$this.Name               = 'Radiant Pauldron'
		$this.MapObjName         = 'radiantpauldron'
		$this.PurchasePrice      = 4350
		$this.SellPrice          = 2175
		$this.TargetStats        = @{
			[StatId]::Defense = 87
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Glows with a warm light, warding off darkness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELunarPauldron : BEPauldron {
	BELunarPauldron() : base() {
		$this.Name               = 'Lunar Pauldron'
		$this.MapObjName         = 'lunarpauldron'
		$this.PurchasePrice      = 4400
		$this.SellPrice          = 2200
		$this.TargetStats        = @{
			[StatId]::Defense = 88
			[StatId]::MagicDefense = 29
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Shimmers with moonlight, enhancing night-based defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESolarPauldron : BEPauldron {
	BESolarPauldron() : base() {
		$this.Name               = 'Solar Pauldron'
		$this.MapObjName         = 'solarpauldron'
		$this.PurchasePrice      = 4450
		$this.SellPrice          = 2225
		$this.TargetStats        = @{
			[StatId]::Defense = 89
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blazes with the power of the sun, enhancing fire and light defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarlightPauldron : BEPauldron {
	BEStarlightPauldron() : base() {
		$this.Name               = 'Starlight Pauldron'
		$this.MapObjName         = 'starlightpauldron'
		$this.PurchasePrice      = 4500
		$this.SellPrice          = 2250
		$this.TargetStats        = @{
			[StatId]::Defense = 90
			[StatId]::MagicDefense = 31
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Embedded with shimmering stardust, for celestial magic users.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECosmicPauldron : BEPauldron {
	BECosmicPauldron() : base() {
		$this.Name               = 'Cosmic Pauldron'
		$this.MapObjName         = 'cosmicpauldron'
		$this.PurchasePrice      = 4550
		$this.SellPrice          = 2275
		$this.TargetStats        = @{
			[StatId]::Defense = 91
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Connects to the vastness of the cosmos, granting immense power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidPauldron : BEPauldron {
	BEVoidPauldron() : base() {
		$this.Name               = 'Void Pauldron'
		$this.MapObjName         = 'voidpauldron'
		$this.PurchasePrice      = 4600
		$this.SellPrice          = 2300
		$this.TargetStats        = @{
			[StatId]::Defense = 92
			[StatId]::MagicDefense = 33
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Woven from the fabric of the void, absorbing all light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENightfallPauldron : BEPauldron {
	BENightfallPauldron() : base() {
		$this.Name               = 'Nightfall Pauldron'
		$this.MapObjName         = 'nightfallpauldron'
		$this.PurchasePrice      = 4700
		$this.SellPrice          = 2350
		$this.TargetStats        = @{
			[StatId]::Defense = 94
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Enshrouds its wearer in perpetual twilight, aiding stealth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEclipsePauldron : BEPauldron {
	BEEclipsePauldron() : base() {
		$this.Name               = 'Eclipse Pauldron'
		$this.MapObjName         = 'eclipsepauldron'
		$this.PurchasePrice      = 4750
		$this.SellPrice          = 2375
		$this.TargetStats        = @{
			[StatId]::Defense = 95
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Combines light and shadow, offering balanced protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamWeaverPauldron : BEPauldron {
	BEDreamWeaverPauldron() : base() {
		$this.Name               = 'Dream Weaver Pauldron'
		$this.MapObjName         = 'dreamweaverpauldron'
		$this.PurchasePrice      = 4800
		$this.SellPrice          = 2400
		$this.TargetStats        = @{
			[StatId]::Defense = 96
			[StatId]::MagicDefense = 36
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grants access to dreams, allowing for illusory defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiritPauldron : BEPauldron {
	BESpiritPauldron() : base() {
		$this.Name               = 'Spirit Pauldron'
		$this.MapObjName         = 'spiritpauldron'
		$this.PurchasePrice      = 4850
		$this.SellPrice          = 2425
		$this.TargetStats        = @{
			[StatId]::Defense = 97
			[StatId]::MagicDefense = 37
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows communication with spirits, enhancing spiritual defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhantomPauldron : BEPauldron {
	BEPhantomPauldron() : base() {
		$this.Name               = 'Phantom Pauldron'
		$this.MapObjName         = 'phantompauldron'
		$this.PurchasePrice      = 4900
		$this.SellPrice          = 2450
		$this.TargetStats        = @{
			[StatId]::Defense = 98
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Makes its wearer semi-corporeal, allowing them to phase through attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGhostPauldron : BEPauldron {
	BEGhostPauldron() : base() {
		$this.Name               = 'Ghost Pauldron'
		$this.MapObjName         = 'ghostpauldron'
		$this.PurchasePrice      = 4950
		$this.SellPrice          = 2475
		$this.TargetStats        = @{
			[StatId]::Defense = 99
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by spectral beings, offering ethereal protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpecterPauldron : BEPauldron {
	BESpecterPauldron() : base() {
		$this.Name               = 'Specter Pauldron'
		$this.MapObjName         = 'specterpauldron'
		$this.PurchasePrice      = 5000
		$this.SellPrice          = 2500
		$this.TargetStats        = @{
			[StatId]::Defense = 100
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A chilling relic, enhancing fear-inducing defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVampirePauldron : BEPauldron {
	BEVampirePauldron() : base() {
		$this.Name               = 'Vampire Pauldron'
		$this.MapObjName         = 'vampirepauldron'
		$this.PurchasePrice      = 5050
		$this.SellPrice          = 2525
		$this.TargetStats        = @{
			[StatId]::Defense = 101
			[StatId]::MagicDefense = 39
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Feeds on the life force of enemies, restoring health to the wearer.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWerewolfPauldron : BEPauldron {
	BEWerewolfPauldron() : base() {
		$this.Name               = 'Werewolf Pauldron'
		$this.MapObjName         = 'werewolfpauldron'
		$this.PurchasePrice      = 5100
		$this.SellPrice          = 2550
		$this.TargetStats        = @{
			[StatId]::Defense = 102
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Enhances bestial resistance and ferocity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGargoylePauldron : BEPauldron {
	BEGargoylePauldron() : base() {
		$this.Name               = 'Gargoyle Pauldron'
		$this.MapObjName         = 'gargoylepauldron'
		$this.PurchasePrice      = 5150
		$this.SellPrice          = 2575
		$this.TargetStats        = @{
			[StatId]::Defense = 103
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Made from hardened stone, incredibly tough and unyielding.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBasiliskPauldron : BEPauldron {
	BEBasiliskPauldron() : base() {
		$this.Name               = 'Basilisk Pauldron'
		$this.MapObjName         = 'basiliskpauldron'
		$this.PurchasePrice      = 5200
		$this.SellPrice          = 2600
		$this.TargetStats        = @{
			[StatId]::Defense = 104
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Petrifies attackers with its gaze, offering unique defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGriffinPauldron : BEPauldron {
	BEGriffinPauldron() : base() {
		$this.Name               = 'Griffin Pauldron'
		$this.MapObjName         = 'griffinpauldron'
		$this.PurchasePrice      = 5250
		$this.SellPrice          = 2625
		$this.TargetStats        = @{
			[StatId]::Defense = 105
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light and regal, allowing for swift aerial maneuvers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhoenixPauldron : BEPauldron {
	BEPhoenixPauldron() : base() {
		$this.Name               = 'Phoenix Pauldron'
		$this.MapObjName         = 'phoenixpauldron'
		$this.PurchasePrice      = 5300
		$this.SellPrice          = 2650
		$this.TargetStats        = @{
			[StatId]::Defense = 106
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blazes with eternal flame, granting resistance to fire.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEUnicornPauldron : BEPauldron {
	BEUnicornPauldron() : base() {
		$this.Name               = 'Unicorn Pauldron'
		$this.MapObjName         = 'unicornpauldron'
		$this.PurchasePrice      = 5350
		$this.SellPrice          = 2675
		$this.TargetStats        = @{
			[StatId]::Defense = 107
			[StatId]::MagicDefense = 41
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Pure and benevolent, warding off evil and healing wounds.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonKingPauldron : BEPauldron {
	BEDragonKingPauldron() : base() {
		$this.Name               = 'Dragon King Pauldron'
		$this.MapObjName         = 'dragonkingpauldron'
		$this.PurchasePrice      = 5400
		$this.SellPrice          = 2700
		$this.TargetStats        = @{
			[StatId]::Defense = 108
			[StatId]::MagicDefense = 42
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by ancient dragon kings, embodying immense power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESerpentPauldron : BEPauldron {
	BESerpentPauldron() : base() {
		$this.Name               = 'Serpent Pauldron'
		$this.MapObjName         = 'serpentpauldron'
		$this.PurchasePrice      = 5450
		$this.SellPrice          = 2725
		$this.TargetStats        = @{
			[StatId]::Defense = 109
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Slithers with subtle power, enhancing poison resistance and agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiderPauldron : BEPauldron {
	BESpiderPauldron() : base() {
		$this.Name               = 'Spider Pauldron'
		$this.MapObjName         = 'spiderpauldron'
		$this.PurchasePrice      = 5500
		$this.SellPrice          = 2750
		$this.TargetStats        = @{
			[StatId]::Defense = 110
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows for agile movement and offers venom resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEScorpionPauldron : BEPauldron {
	BEScorpionPauldron() : base() {
		$this.Name               = 'Scorpion Pauldron'
		$this.MapObjName         = 'scorpionpauldron'
		$this.PurchasePrice      = 5550
		$this.SellPrice          = 2775
		$this.TargetStats        = @{
			[StatId]::Defense = 111
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Sharp and deadly, enhancing critical resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBeetlePauldron : BEPauldron {
	BEBeetlePauldron() : base() {
		$this.Name               = 'Beetle Pauldron'
		$this.MapObjName         = 'beetlepauldron'
		$this.PurchasePrice      = 5600
		$this.SellPrice          = 2800
		$this.TargetStats        = @{
			[StatId]::Defense = 112
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Hardened carapace provides exceptional defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChitinPauldron : BEPauldron {
	BEChitinPauldron() : base() {
		$this.Name               = 'Chitin Pauldron'
		$this.MapObjName         = 'chitinpauldron'
		$this.PurchasePrice      = 5650
		$this.SellPrice          = 2825
		$this.TargetStats        = @{
			[StatId]::Defense = 113
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Made from the exoskeleton of a giant insect, surprisingly durable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFeyPauldron : BEPauldron {
	BEFeyPauldron() : base() {
		$this.Name               = 'Fey Pauldron'
		$this.MapObjName         = 'feypauldron'
		$this.PurchasePrice      = 5700
		$this.SellPrice          = 2850
		$this.TargetStats        = @{
			[StatId]::Defense = 114
			[StatId]::MagicDefense = 43
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Woven from moonlight and forest magic, offering subtle protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEElvenPauldron : BEPauldron {
	BEElvenPauldron() : base() {
		$this.Name               = 'Elven Pauldron'
		$this.MapObjName         = 'elvenpauldron'
		$this.PurchasePrice      = 5750
		$this.SellPrice          = 2875
		$this.TargetStats        = @{
			[StatId]::Defense = 115
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Graceful and light, crafted with ancient elven techniques.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDrowPauldron : BEPauldron {
	BEDrowPauldron() : base() {
		$this.Name               = 'Drow Pauldron'
		$this.MapObjName         = 'drowpauldron'
		$this.PurchasePrice      = 5800
		$this.SellPrice          = 2900
		$this.TargetStats        = @{
			[StatId]::Defense = 116
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Dark and menacing, crafted by the drow of the underworld.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGnomishPauldron : BEPauldron {
	BEGnomishPauldron() : base() {
		$this.Name               = 'Gnomish Pauldron'
		$this.MapObjName         = 'gnomishpauldron'
		$this.PurchasePrice      = 5850
		$this.SellPrice          = 2925
		$this.TargetStats        = @{
			[StatId]::Defense = 117
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ingeniously crafted with hidden compartments and mechanisms.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGoblinPauldron : BEPauldron {
	BEGoblinPauldron() : base() {
		$this.Name               = 'Goblin Pauldron'
		$this.MapObjName         = 'goblinpauldron'
		$this.PurchasePrice      = 5900
		$this.SellPrice          = 2950
		$this.TargetStats        = @{
			[StatId]::Defense = 118
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crudely assembled but surprisingly effective in a pinch.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOrcPauldron : BEPauldron {
	BEOrcPauldron() : base() {
		$this.Name               = 'Orc Pauldron'
		$this.MapObjName         = 'orcpauldron'
		$this.PurchasePrice      = 5950
		$this.SellPrice          = 2975
		$this.TargetStats        = @{
			[StatId]::Defense = 119
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy and brutal, designed for sheer destructive power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGiantPauldron : BEPauldron {
	BEGiantPauldron() : base() {
		$this.Name               = 'Giant Pauldron'
		$this.MapObjName         = 'giantpauldron'
		$this.PurchasePrice      = 6000
		$this.SellPrice          = 3000
		$this.TargetStats        = @{
			[StatId]::Defense = 120
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Scaled for immense warriors, offering formidable defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDemonPauldron : BEPauldron {
	BEDemonPauldron() : base() {
		$this.Name               = 'Demon Pauldron'
		$this.MapObjName         = 'demonpauldron'
		$this.PurchasePrice      = 6050
		$this.SellPrice          = 3025
		$this.TargetStats        = @{
			[StatId]::Defense = 121
			[StatId]::MagicDefense = 44
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Forged in the depths of hell, imbued with dark, corrupting power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDevilPauldron : BEPauldron {
	BEDevilPauldron() : base() {
		$this.Name               = 'Devil Pauldron'
		$this.MapObjName         = 'devilpauldron'
		$this.PurchasePrice      = 6100
		$this.SellPrice          = 3050
		$this.TargetStats        = @{
			[StatId]::Defense = 122
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A relic of immense evil, granting unholy strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAngelPauldron : BEPauldron {
	BEAngelPauldron() : base() {
		$this.Name               = 'Angel Pauldron'
		$this.MapObjName         = 'angelpauldron'
		$this.PurchasePrice      = 6150
		$this.SellPrice          = 3075
		$this.TargetStats        = @{
			[StatId]::Defense = 123
			[StatId]::MagicDefense = 46
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Shines with divine light, warding off all evil and healing wounds.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECherubPauldron : BEPauldron {
	BECherubPauldron() : base() {
		$this.Name               = 'Cherub Pauldron'
		$this.MapObjName         = 'cherubpauldron'
		$this.PurchasePrice      = 6200
		$this.SellPrice          = 3100
		$this.TargetStats        = @{
			[StatId]::Defense = 124
			[StatId]::MagicDefense = 47
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light and angelic, bestowing blessings upon its wearer.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESeraphPauldron : BEPauldron {
	BESeraphPauldron() : base() {
		$this.Name               = 'Seraph Pauldron'
		$this.MapObjName         = 'seraphpauldron'
		$this.PurchasePrice      = 6250
		$this.SellPrice          = 3125
		$this.TargetStats        = @{
			[StatId]::Defense = 125
			[StatId]::MagicDefense = 48
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pauldron of the highest angels, granting incredible divine power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivinePauldron : BEPauldron {
	BEDivinePauldron() : base() {
		$this.Name               = 'Divine Pauldron'
		$this.MapObjName         = 'divinepauldron'
		$this.PurchasePrice      = 6300
		$this.SellPrice          = 3150
		$this.TargetStats        = @{
			[StatId]::Defense = 126
			[StatId]::MagicDefense = 49
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Imbued with the essence of a god, granting ultimate protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAegisPauldron : BEPauldron {
	BEAegisPauldron() : base() {
		$this.Name               = 'Aegis Pauldron'
		$this.MapObjName         = 'aegispauldron'
		$this.PurchasePrice      = 6350
		$this.SellPrice          = 3175
		$this.TargetStats        = @{
			[StatId]::Defense = 127
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A legendary shield, offering unparalleled defense against all threats.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAdamantinePauldron : BEPauldron {
	BEAdamantinePauldron() : base() {
		$this.Name               = 'Adamantine Pauldron'
		$this.MapObjName         = 'adamantinepauldron'
		$this.PurchasePrice      = 6400
		$this.SellPrice          = 3200
		$this.TargetStats        = @{
			[StatId]::Defense = 128
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'One of the strongest materials known, virtually indestructible.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOrichalcumPauldron : BEPauldron {
	BEOrichalcumPauldron() : base() {
		$this.Name               = 'Orichalcum Pauldron'
		$this.MapObjName         = 'orichalcumpauldron'
		$this.PurchasePrice      = 6450
		$this.SellPrice          = 3225
		$this.TargetStats        = @{
			[StatId]::Defense = 129
			[StatId]::MagicDefense = 51
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A mythical metal, offering incredible magical resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEtheriumPauldron : BEPauldron {
	BEEtheriumPauldron() : base() {
		$this.Name               = 'Etherium Pauldron'
		$this.MapObjName         = 'etheriumpauldron'
		$this.PurchasePrice      = 6500
		$this.SellPrice          = 3250
		$this.TargetStats        = @{
			[StatId]::Defense = 130
			[StatId]::MagicDefense = 52
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Woven from pure magical energy, incredibly light and potent.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidweavePauldron : BEPauldron {
	BEVoidweavePauldron() : base() {
		$this.Name               = 'Voidweave Pauldron'
		$this.MapObjName         = 'voidweavepauldron'
		$this.PurchasePrice      = 6550
		$this.SellPrice          = 3275
		$this.TargetStats        = @{
			[StatId]::Defense = 131
			[StatId]::MagicDefense = 53
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crafted from the threads of nothingness, absorbing all magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETimelessPauldron : BEPauldron {
	BETimelessPauldron() : base() {
		$this.Name               = 'Timeless Pauldron'
		$this.MapObjName         = 'timelesspauldron'
		$this.PurchasePrice      = 6600
		$this.SellPrice          = 3300
		$this.TargetStats        = @{
			[StatId]::Defense = 132
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Unaffected by the flow of time, granting immense durability.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInfinityPauldron : BEPauldron {
	BEInfinityPauldron() : base() {
		$this.Name               = 'Infinity Pauldron'
		$this.MapObjName         = 'infinitypauldron'
		$this.PurchasePrice      = 6650
		$this.SellPrice          = 3325
		$this.TargetStats        = @{
			[StatId]::Defense = 133
			[StatId]::MagicDefense = 54
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Embodies infinite possibilities, granting varied resistances.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECosmicForgePauldron : BEPauldron {
	BECosmicForgePauldron() : base() {
		$this.Name               = 'Cosmic Forge Pauldron'
		$this.MapObjName         = 'cosmicforgepauldron'
		$this.PurchasePrice      = 6700
		$this.SellPrice          = 3350
		$this.TargetStats        = @{
			[StatId]::Defense = 134
			[StatId]::MagicDefense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Forged at the birth of the universe, incredibly powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGenesisPauldron : BEPauldron {
	BEGenesisPauldron() : base() {
		$this.Name               = 'Genesis Pauldron'
		$this.MapObjName         = 'genesispauldron'
		$this.PurchasePrice      = 6750
		$this.SellPrice          = 3375
		$this.TargetStats        = @{
			[StatId]::Defense = 135
			[StatId]::MagicDefense = 56
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pauldron of creation, capable of altering reality.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEApocalypsePauldron : BEPauldron {
	BEApocalypsePauldron() : base() {
		$this.Name               = 'Apocalypse Pauldron'
		$this.MapObjName         = 'apocalypsepauldron'
		$this.PurchasePrice      = 6800
		$this.SellPrice          = 3400
		$this.TargetStats        = @{
			[StatId]::Defense = 136
			[StatId]::MagicDefense = 57
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn during the end of times, immense destructive resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOblivionPauldron : BEPauldron {
	BEOblivionPauldron() : base() {
		$this.Name               = 'Oblivion Pauldron'
		$this.MapObjName         = 'oblivionpauldron'
		$this.PurchasePrice      = 6850
		$this.SellPrice          = 3425
		$this.TargetStats        = @{
			[StatId]::Defense = 137
			[StatId]::MagicDefense = 58
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Drifts from beyond existence, absorbing all it touches.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESingularityPauldron : BEPauldron {
	BESingularityPauldron() : base() {
		$this.Name               = 'Singularity Pauldron'
		$this.MapObjName         = 'singularitypauldron'
		$this.PurchasePrice      = 6900
		$this.SellPrice          = 3450
		$this.TargetStats        = @{
			[StatId]::Defense = 138
			[StatId]::MagicDefense = 59
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Contains the power of a collapsing star, incredibly potent.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEParadoxPauldron : BEPauldron {
	BEParadoxPauldron() : base() {
		$this.Name               = 'Paradox Pauldron'
		$this.MapObjName         = 'paradoxpauldron'
		$this.PurchasePrice      = 6950
		$this.SellPrice          = 3475
		$this.TargetStats        = @{
			[StatId]::Defense = 139
			[StatId]::MagicDefense = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Defies the laws of physics, offering unpredictable defensive effects.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERunicKnightPauldron : BEPauldron {
	BERunicKnightPauldron() : base() {
		$this.Name               = 'Runic Knight Pauldron'
		$this.MapObjName         = 'runicknightpauldron'
		$this.PurchasePrice      = 7000
		$this.SellPrice          = 3500
		$this.TargetStats        = @{
			[StatId]::Defense = 140
			[StatId]::MagicDefense = 61
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Covered in ancient runes, granting both physical and magical defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBattleMagePauldron : BEPauldron {
	BEBattleMagePauldron() : base() {
		$this.Name               = 'Battle Mage Pauldron'
		$this.MapObjName         = 'battlemagepauldron'
		$this.PurchasePrice      = 7050
		$this.SellPrice          = 3525
		$this.TargetStats        = @{
			[StatId]::Defense = 141
			[StatId]::MagicDefense = 62
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows full mobility for spellcasting while offering protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArcaneWarriorPauldron : BEPauldron {
	BEArcaneWarriorPauldron() : base() {
		$this.Name               = 'Arcane Warrior Pauldron'
		$this.MapObjName         = 'arcanewarriorpauldron'
		$this.PurchasePrice      = 7100
		$this.SellPrice          = 3550
		$this.TargetStats        = @{
			[StatId]::Defense = 142
			[StatId]::MagicDefense = 63
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blends magical and physical defense, for versatile fighters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpellbladePauldron : BEPauldron {
	BESpellbladePauldron() : base() {
		$this.Name               = 'Spellblade Pauldron'
		$this.MapObjName         = 'spellbladepauldron'
		$this.PurchasePrice      = 7150
		$this.SellPrice          = 3575
		$this.TargetStats        = @{
			[StatId]::Defense = 143
			[StatId]::MagicDefense = 64
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Enhances both swordplay and spellcasting defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWitchHunterPauldron : BEPauldron {
	BEWitchHunterPauldron() : base() {
		$this.Name               = 'Witch Hunter Pauldron'
		$this.MapObjName         = 'witchhunterpauldron'
		$this.PurchasePrice      = 7200
		$this.SellPrice          = 3600
		$this.TargetStats        = @{
			[StatId]::Defense = 144
			[StatId]::MagicDefense = 65
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Specifically designed to combat magic users, with innate resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEInquisitorPauldron : BEPauldron {
	BEInquisitorPauldron() : base() {
		$this.Name               = 'Inquisitor Pauldron'
		$this.MapObjName         = 'inquisitorpauldron'
		$this.PurchasePrice      = 7250
		$this.SellPrice          = 3625
		$this.TargetStats        = @{
			[StatId]::Defense = 145
			[StatId]::MagicDefense = 66
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by those who seek out and destroy evil, often associated with divine power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEExorcistPauldron : BEPauldron {
	BEExorcistPauldron() : base() {
		$this.Name               = 'Exorcist Pauldron'
		$this.MapObjName         = 'exorcistpauldron'
		$this.PurchasePrice      = 7300
		$this.SellPrice          = 3650
		$this.TargetStats        = @{
			[StatId]::Defense = 146
			[StatId]::MagicDefense = 67
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Designed to ward off demonic entities and evil spirits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BETemplarPauldron : BEPauldron {
	BETemplarPauldron() : base() {
		$this.Name               = 'Templar Pauldron'
		$this.MapObjName         = 'templarpauldron'
		$this.PurchasePrice      = 7350
		$this.SellPrice          = 3675
		$this.TargetStats        = @{
			[StatId]::Defense = 147
			[StatId]::MagicDefense = 68
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A symbol of unwavering faith and military might.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEOraclePauldron : BEPauldron {
	BEOraclePauldron() : base() {
		$this.Name               = 'Oracle Pauldron'
		$this.MapObjName         = 'oraclepauldron'
		$this.PurchasePrice      = 7400
		$this.SellPrice          = 3700
		$this.TargetStats        = @{
			[StatId]::Defense = 148
			[StatId]::MagicDefense = 69
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows glimpses into the future, enhancing foresight and wisdom.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESeerPauldron : BEPauldron {
	BESeerPauldron() : base() {
		$this.Name               = 'Seer Pauldron'
		$this.MapObjName         = 'seerpauldron'
		$this.PurchasePrice      = 7450
		$this.SellPrice          = 3725
		$this.TargetStats        = @{
			[StatId]::Defense = 149
			[StatId]::MagicDefense = 70
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Enhances perception and allows for detection of hidden truths.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEProphetPauldron : BEPauldron {
	BEProphetPauldron() : base() {
		$this.Name               = 'Prophet Pauldron'
		$this.MapObjName         = 'prophetpauldron'
		$this.PurchasePrice      = 7500
		$this.SellPrice          = 3750
		$this.TargetStats        = @{
			[StatId]::Defense = 150
			[StatId]::MagicDefense = 71
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by those who deliver divine messages, granting profound insight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVisionaryPauldron : BEPauldron {
	BEVisionaryPauldron() : base() {
		$this.Name               = 'Visionary Pauldron'
		$this.MapObjName         = 'visionarypauldron'
		$this.PurchasePrice      = 7550
		$this.SellPrice          = 3775
		$this.TargetStats        = @{
			[StatId]::Defense = 151
			[StatId]::MagicDefense = 72
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Inspires allies and reveals weaknesses in enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamersPauldron : BEPauldron {
	BEDreamersPauldron() : base() {
		$this.Name               = 'Dreamer''s Pauldron'
		$this.MapObjName         = 'dreamerspauldron'
		$this.PurchasePrice      = 7600
		$this.SellPrice          = 3800
		$this.TargetStats        = @{
			[StatId]::Defense = 152
			[StatId]::MagicDefense = 73
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows one to traverse dreams and access subconscious powers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMindWeaverPauldron : BEPauldron {
	BEMindWeaverPauldron() : base() {
		$this.Name               = 'Mind Weaver Pauldron'
		$this.MapObjName         = 'mindweaverpauldron'
		$this.PurchasePrice      = 7650
		$this.SellPrice          = 3825
		$this.TargetStats        = @{
			[StatId]::Defense = 153
			[StatId]::MagicDefense = 74
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows for subtle manipulation of thoughts and emotions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETelepathPauldron : BEPauldron {
	BETelepathPauldron() : base() {
		$this.Name               = 'Telepath Pauldron'
		$this.MapObjName         = 'telepathpauldron'
		$this.PurchasePrice      = 7700
		$this.SellPrice          = 3850
		$this.TargetStats        = @{
			[StatId]::Defense = 154
			[StatId]::MagicDefense = 75
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grants the power of telepathy, for mental communication.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIllusionistPauldron : BEPauldron {
	BEIllusionistPauldron() : base() {
		$this.Name               = 'Illusionist Pauldron'
		$this.MapObjName         = 'illusionistpauldron'
		$this.PurchasePrice      = 7750
		$this.SellPrice          = 3875
		$this.TargetStats        = @{
			[StatId]::Defense = 155
			[StatId]::MagicDefense = 76
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Creates convincing illusions and disorients foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETricksterPauldron : BEPauldron {
	BETricksterPauldron() : base() {
		$this.Name               = 'Trickster Pauldron'
		$this.MapObjName         = 'tricksterpauldron'
		$this.PurchasePrice      = 7800
		$this.SellPrice          = 3900
		$this.TargetStats        = @{
			[StatId]::Defense = 156
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows for agile evasions and cunning deceptions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEJesterPauldron : BEPauldron {
	BEJesterPauldron() : base() {
		$this.Name               = 'Jester Pauldron'
		$this.MapObjName         = 'jesterpauldron'
		$this.PurchasePrice      = 7850
		$this.SellPrice          = 3925
		$this.TargetStats        = @{
			[StatId]::Defense = 157
			[StatId]::MagicDefense = 77
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Provides unexpected defenses and chaotic effects.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBardPauldron : BEPauldron {
	BEBardPauldron() : base() {
		$this.Name               = 'Bard Pauldron'
		$this.MapObjName         = 'bardpauldron'
		$this.PurchasePrice      = 7900
		$this.SellPrice          = 3950
		$this.TargetStats        = @{
			[StatId]::Defense = 158
			[StatId]::MagicDefense = 78
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Inspires allies and demoralizes enemies through song.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDancersPauldron : BEPauldron {
	BEDancersPauldron() : base() {
		$this.Name               = 'Dancer''s Pauldron'
		$this.MapObjName         = 'dancerspauldron'
		$this.PurchasePrice      = 7950
		$this.SellPrice          = 3975
		$this.TargetStats        = @{
			[StatId]::Defense = 159
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light and flexible, allowing for graceful movement and evasion.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEAcrobatPauldron : BEPauldron {
	BEAcrobatPauldron() : base() {
		$this.Name               = 'Acrobat Pauldron'
		$this.MapObjName         = 'acrobatpauldron'
		$this.PurchasePrice      = 8000
		$this.SellPrice          = 4000
		$this.TargetStats        = @{
			[StatId]::Defense = 160
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Provides protection without hindering agility and balance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGymnastPauldron : BEPauldron {
	BEGymnastPauldron() : base() {
		$this.Name               = 'Gymnast Pauldron'
		$this.MapObjName         = 'gymnastpauldron'
		$this.PurchasePrice      = 8050
		$this.SellPrice          = 4025
		$this.TargetStats        = @{
			[StatId]::Defense = 161
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Lightweight and ergonomic, for maximum flexibility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDuelistPauldron : BEPauldron {
	BEDuelistPauldron() : base() {
		$this.Name               = 'Duelist Pauldron'
		$this.MapObjName         = 'duelistpauldron'
		$this.PurchasePrice      = 8100
		$this.SellPrice          = 4050
		$this.TargetStats        = @{
			[StatId]::Defense = 162
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Designed for swift, precise movements and countering.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEFencerPauldron : BEPauldron {
	BEFencerPauldron() : base() {
		$this.Name               = 'Fencer Pauldron'
		$this.MapObjName         = 'fencerpauldron'
		$this.PurchasePrice      = 8150
		$this.SellPrice          = 4075
		$this.TargetStats        = @{
			[StatId]::Defense = 163
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light and unrestrictive, for rapid thrusts and parries.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESwashbucklerPauldron : BEPauldron {
	BESwashbucklerPauldron() : base() {
		$this.Name               = 'Swashbuckler Pauldron'
		$this.MapObjName         = 'swashbucklerpauldron'
		$this.PurchasePrice      = 8200
		$this.SellPrice          = 4100
		$this.TargetStats        = @{
			[StatId]::Defense = 164
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Stylish yet practical, for those who fight with flair.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGladiatorPauldron : BEPauldron {
	BEGladiatorPauldron() : base() {
		$this.Name               = 'Gladiator Pauldron'
		$this.MapObjName         = 'gladiatorpauldron'
		$this.PurchasePrice      = 8250
		$this.SellPrice          = 4125
		$this.TargetStats        = @{
			[StatId]::Defense = 165
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Built for the arena, offering robust protection and intimidation.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBerserkerPauldron : BEPauldron {
	BEBerserkerPauldron() : base() {
		$this.Name               = 'Berserker Pauldron'
		$this.MapObjName         = 'berserkerpauldron'
		$this.PurchasePrice      = 8300
		$this.SellPrice          = 4150
		$this.TargetStats        = @{
			[StatId]::Defense = 166
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Infuses its wearer with uncontrolled rage, boosting defense at a cost.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBrutePauldron : BEPauldron {
	BEBrutePauldron() : base() {
		$this.Name               = 'Brute Pauldron'
		$this.MapObjName         = 'brutepauldron'
		$this.PurchasePrice      = 8350
		$this.SellPrice          = 4175
		$this.TargetStats        = @{
			[StatId]::Defense = 167
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy and unforgiving, for overwhelming opponents with raw strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESavagePauldron : BEPauldron {
	BESavagePauldron() : base() {
		$this.Name               = 'Savage Pauldron'
		$this.MapObjName         = 'savagepauldron'
		$this.PurchasePrice      = 8400
		$this.SellPrice          = 4200
		$this.TargetStats        = @{
			[StatId]::Defense = 168
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Made from raw materials, for those who embrace primal combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBarbarianPauldron : BEPauldron {
	BEBarbarianPauldron() : base() {
		$this.Name               = 'Barbarian Pauldron'
		$this.MapObjName         = 'barbarianpauldron'
		$this.PurchasePrice      = 8450
		$this.SellPrice          = 4225
		$this.TargetStats        = @{
			[StatId]::Defense = 169
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Minimal but effective, allowing for swift, powerful strikes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENomadicWarlordPauldron : BEPauldron {
	BENomadicWarlordPauldron() : base() {
		$this.Name               = 'Nomadic Warlord Pauldron'
		$this.MapObjName         = 'nomadicwarlordpauldron'
		$this.PurchasePrice      = 8500
		$this.SellPrice          = 4250
		$this.TargetStats        = @{
			[StatId]::Defense = 170
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Combines mobility with imposing presence, for fierce tribal leaders.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDesertTyrantPauldron : BEPauldron {
	BEDesertTyrantPauldron() : base() {
		$this.Name               = 'Desert Tyrant Pauldron'
		$this.MapObjName         = 'deserttyrantpauldron'
		$this.PurchasePrice      = 8550
		$this.SellPrice          = 4275
		$this.TargetStats        = @{
			[StatId]::Defense = 171
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by rulers of arid lands, exuding oppressive power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEJungleHunterPauldron : BEPauldron {
	BEJungleHunterPauldron() : base() {
		$this.Name               = 'Jungle Hunter Pauldron'
		$this.MapObjName         = 'junglehunterpauldron'
		$this.PurchasePrice      = 8600
		$this.SellPrice          = 4300
		$this.TargetStats        = @{
			[StatId]::Defense = 172
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blends seamlessly with dense foliage, aiding ambushes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEForestProtectorPauldron : BEPauldron {
	BEForestProtectorPauldron() : base() {
		$this.Name               = 'Forest Protector Pauldron'
		$this.MapObjName         = 'forestprotectorpauldron'
		$this.PurchasePrice      = 8650
		$this.SellPrice          = 4325
		$this.TargetStats        = @{
			[StatId]::Defense = 173
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Offers defense while allowing swift movement through woodlands.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIceWardenPauldron : BEPauldron {
	BEIceWardenPauldron() : base() {
		$this.Name               = 'Ice Warden Pauldron'
		$this.MapObjName         = 'icewardenpauldron'
		$this.PurchasePrice      = 8700
		$this.SellPrice          = 4350
		$this.TargetStats        = @{
			[StatId]::Defense = 174
			[StatId]::MagicDefense = 79
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Wards off the bitter cold and enhances ice-based defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMountainKingPauldron : BEPauldron {
	BEMountainKingPauldron() : base() {
		$this.Name               = 'Mountain King Pauldron'
		$this.MapObjName         = 'mountainkingpauldron'
		$this.PurchasePrice      = 8750
		$this.SellPrice          = 4375
		$this.TargetStats        = @{
			[StatId]::Defense = 175
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by dwarven royalty, imbued with the strength of the mountains.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESeaCaptainPauldron : BEPauldron {
	BESeaCaptainPauldron() : base() {
		$this.Name               = 'Sea Captain Pauldron'
		$this.MapObjName         = 'seacaptainpauldron'
		$this.PurchasePrice      = 8800
		$this.SellPrice          = 4400
		$this.TargetStats        = @{
			[StatId]::Defense = 176
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Durable and water-resistant, for those who command the seas.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESkySovereignPauldron : BEPauldron {
	BESkySovereignPauldron() : base() {
		$this.Name               = 'Sky Sovereign Pauldron'
		$this.MapObjName         = 'skysovereignpauldron'
		$this.PurchasePrice      = 8850
		$this.SellPrice          = 4425
		$this.TargetStats        = @{
			[StatId]::Defense = 177
			[StatId]::MagicDefense = 80
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows effortless flight and control over aerial forces.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEUrbanRangerPauldron : BEPauldron {
	BEUrbanRangerPauldron() : base() {
		$this.Name               = 'Urban Ranger Pauldron'
		$this.MapObjName         = 'urbanrangerpauldron'
		$this.PurchasePrice      = 8900
		$this.SellPrice          = 4450
		$this.TargetStats        = @{
			[StatId]::Defense = 178
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blends into city environments, aiding stealth and surveillance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWastelandScavengerPauldron : BEPauldron {
	BEWastelandScavengerPauldron() : base() {
		$this.Name               = 'Wasteland Scavenger Pauldron'
		$this.MapObjName         = 'wastelandscavengerpauldron'
		$this.PurchasePrice      = 8950
		$this.SellPrice          = 4475
		$this.TargetStats        = @{
			[StatId]::Defense = 179
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Patchwork but resilient, for surviving harsh, desolate lands.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPilgrimsPauldron : BEPauldron {
	BEPilgrimsPauldron() : base() {
		$this.Name               = 'Pilgrim''s Pauldron'
		$this.MapObjName         = 'pilgrimspauldron'
		$this.PurchasePrice      = 9000
		$this.SellPrice          = 4500
		$this.TargetStats        = @{
			[StatId]::Defense = 180
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Simple yet enduring, for those on sacred journeys.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAsceticPauldron : BEPauldron {
	BEAsceticPauldron() : base() {
		$this.Name               = 'Ascetic Pauldron'
		$this.MapObjName         = 'asceticpauldron'
		$this.PurchasePrice      = 9050
		$this.SellPrice          = 4525
		$this.TargetStats        = @{
			[StatId]::Defense = 181
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Minimizes distractions, allowing for heightened focus and discipline.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHermitsPauldron : BEPauldron {
	BEHermitsPauldron() : base() {
		$this.Name               = 'Hermit''s Pauldron'
		$this.MapObjName         = 'hermitspauldron'
		$this.PurchasePrice      = 9100
		$this.SellPrice          = 4550
		$this.TargetStats        = @{
			[StatId]::Defense = 182
			[StatId]::MagicDefense = 81
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by reclusive sages, offering subtle, ancient protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMonkPauldron : BEPauldron {
	BEMonkPauldron() : base() {
		$this.Name               = 'Monk Pauldron'
		$this.MapObjName         = 'monkpauldron'
		$this.PurchasePrice      = 9150
		$this.SellPrice          = 4575
		$this.TargetStats        = @{
			[StatId]::Defense = 183
			[StatId]::MagicDefense = 82
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows for agile, unarmed combat while offering spiritual defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZenMasterPauldron : BEPauldron {
	BEZenMasterPauldron() : base() {
		$this.Name               = 'Zen Master Pauldron'
		$this.MapObjName         = 'zenmasterpauldron'
		$this.PurchasePrice      = 9200
		$this.SellPrice          = 4600
		$this.TargetStats        = @{
			[StatId]::Defense = 184
			[StatId]::MagicDefense = 83
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Channels inner peace into powerful, disciplined defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESamuraiPauldron : BEPauldron {
	BESamuraiPauldron() : base() {
		$this.Name               = 'Samurai Pauldron'
		$this.MapObjName         = 'samuraipauldron'
		$this.PurchasePrice      = 9250
		$this.SellPrice          = 4625
		$this.TargetStats        = @{
			[StatId]::Defense = 185
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Refined and honorable, offering balanced defense and attack.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BENinjaPauldron : BEPauldron {
	BENinjaPauldron() : base() {
		$this.Name               = 'Ninja Pauldron'
		$this.MapObjName         = 'ninjapauldron'
		$this.PurchasePrice      = 9300
		$this.SellPrice          = 4650
		$this.TargetStats        = @{
			[StatId]::Defense = 186
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light and stealthy, designed for silent infiltration and swift strikes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKunoichiPauldron : BEPauldron {
	BEKunoichiPauldron() : base() {
		$this.Name               = 'Kunoichi Pauldron'
		$this.MapObjName         = 'kunoichipauldron'
		$this.PurchasePrice      = 9350
		$this.SellPrice          = 4675
		$this.TargetStats        = @{
			[StatId]::Defense = 187
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows for incredibly agile and precise movements in combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BERoninPauldron : BEPauldron {
	BERoninPauldron() : base() {
		$this.Name               = 'Ronin Pauldron'
		$this.MapObjName         = 'roninpauldron'
		$this.PurchasePrice      = 9400
		$this.SellPrice          = 4700
		$this.TargetStats        = @{
			[StatId]::Defense = 188
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by masterless warriors, showing signs of many battles.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEShogunPauldron : BEPauldron {
	BEShogunPauldron() : base() {
		$this.Name               = 'Shogun Pauldron'
		$this.MapObjName         = 'shogunpauldron'
		$this.PurchasePrice      = 9450
		$this.SellPrice          = 4725
		$this.TargetStats        = @{
			[StatId]::Defense = 189
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A symbol of ultimate military authority and power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEmperorsPauldron : BEPauldron {
	BEEmperorsPauldron() : base() {
		$this.Name               = 'Emperor''s Pauldron'
		$this.MapObjName         = 'emperorspauldron'
		$this.PurchasePrice      = 9500
		$this.SellPrice          = 4750
		$this.TargetStats        = @{
			[StatId]::Defense = 190
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Fit for a true ruler, bestowing regal authority and immense protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEmpresssPauldron : BEPauldron {
	BEEmpresssPauldron() : base() {
		$this.Name               = 'Empress''s Pauldron'
		$this.MapObjName         = 'empressspauldron'
		$this.PurchasePrice      = 9550
		$this.SellPrice          = 4775
		$this.TargetStats        = @{
			[StatId]::Defense = 191
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Elegant and formidable, worn by powerful female monarchs.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEScholarPauldron : BEPauldron {
	BEScholarPauldron() : base() {
		$this.Name               = 'Scholar Pauldron'
		$this.MapObjName         = 'scholarpauldron'
		$this.PurchasePrice      = 9600
		$this.SellPrice          = 4800
		$this.TargetStats        = @{
			[StatId]::Defense = 192
			[StatId]::MagicDefense = 84
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Enhances knowledge and understanding, aiding in magical research.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArchivistPauldron : BEPauldron {
	BEArchivistPauldron() : base() {
		$this.Name               = 'Archivist Pauldron'
		$this.MapObjName         = 'archivistpauldron'
		$this.PurchasePrice      = 9650
		$this.SellPrice          = 4825
		$this.TargetStats        = @{
			[StatId]::Defense = 193
			[StatId]::MagicDefense = 85
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Protects ancient knowledge and grants access to forgotten lore.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELibrarianPauldron : BEPauldron {
	BELibrarianPauldron() : base() {
		$this.Name               = 'Librarian Pauldron'
		$this.MapObjName         = 'librarianpauldron'
		$this.PurchasePrice      = 9700
		$this.SellPrice          = 4850
		$this.TargetStats        = @{
			[StatId]::Defense = 194
			[StatId]::MagicDefense = 86
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows for quick access to vast amounts of information.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECuratorPauldron : BEPauldron {
	BECuratorPauldron() : base() {
		$this.Name               = 'Curator Pauldron'
		$this.MapObjName         = 'curatorpauldron'
		$this.PurchasePrice      = 9750
		$this.SellPrice          = 4875
		$this.TargetStats        = @{
			[StatId]::Defense = 195
			[StatId]::MagicDefense = 87
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Preserves precious artifacts and enhances identification abilities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHistorianPauldron : BEPauldron {
	BEHistorianPauldron() : base() {
		$this.Name               = 'Historian Pauldron'
		$this.MapObjName         = 'historianpauldron'
		$this.PurchasePrice      = 9800
		$this.SellPrice          = 4900
		$this.TargetStats        = @{
			[StatId]::Defense = 196
			[StatId]::MagicDefense = 88
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grants insight into the past, revealing hidden truths.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDiplomatPauldron : BEPauldron {
	BEDiplomatPauldron() : base() {
		$this.Name               = 'Diplomat Pauldron'
		$this.MapObjName         = 'diplomatpauldron'
		$this.PurchasePrice      = 9850
		$this.SellPrice          = 4925
		$this.TargetStats        = @{
			[StatId]::Defense = 197
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Enhances charisma and negotiation skills, aiding in peaceful resolutions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMediatorPauldron : BEPauldron {
	BEMediatorPauldron() : base() {
		$this.Name               = 'Mediator Pauldron'
		$this.MapObjName         = 'mediatorpauldron'
		$this.PurchasePrice      = 9900
		$this.SellPrice          = 4950
		$this.TargetStats        = @{
			[StatId]::Defense = 198
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Promotes understanding and de-escalation in conflicts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPeacemakerPauldron : BEPauldron {
	BEPeacemakerPauldron() : base() {
		$this.Name               = 'Peacemaker Pauldron'
		$this.MapObjName         = 'peacemakerpauldron'
		$this.PurchasePrice      = 9950
		$this.SellPrice          = 4975
		$this.TargetStats        = @{
			[StatId]::Defense = 199
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A symbol of hope and unity, capable of calming volatile situations.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWardenofOrderPauldron : BEPauldron {
	BEWardenofOrderPauldron() : base() {
		$this.Name               = 'Warden of Order Pauldron'
		$this.MapObjName         = 'wardenoforderpauldron'
		$this.PurchasePrice      = 10000
		$this.SellPrice          = 5000
		$this.TargetStats        = @{
			[StatId]::Defense = 200
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Upholds justice and maintains balance, with unwavering resolve.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChaosBringerPauldron : BEPauldron {
	BEChaosBringerPauldron() : base() {
		$this.Name               = 'Chaos Bringer Pauldron'
		$this.MapObjName         = 'chaosbringerpauldron'
		$this.PurchasePrice      = 10050
		$this.SellPrice          = 5025
		$this.TargetStats        = @{
			[StatId]::Defense = 201
			[StatId]::MagicDefense = 89
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Embodies pure chaos, creating unpredictable and destructive effects.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInfinityCCTurtlePauldron : BEPauldron {
    BEInfinityCCTurtlePauldron() : base() {
        $this.Name               = 'Infinity CC Turtle Pauldron'
        $this.MapObjName         = 'infinityccturtlepauldron'
        $this.PurchasePrice      = 250000
        $this.SellPrice          = 0
        $this.TargetStats        = @{
            [StatId]::Defense      = 250
            [StatId]::MagicDefense = 250
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'It spawns 1M trees falling down on their head.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
        $this.TargetGender       = [Gender]::Unisex
    }
}

Class BEBearPauldrons : BEPauldron {
    BEBearPauldrons() : base() {
        $this.Name               = 'Bear Pauldrons'
        $this.MapObjName         = 'bearpauldrons'
        $this.PurchasePrice      = 0
        $this.SellPrice          = 0
        $this.TargetStats        = @{
            [StatId]::Defense      = 999
            [StatId]::MagicDefense = 999
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'The ultimate in fuzzy pauldrons.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
        $this.TargetGender       = [Gender]::Unisex
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# GAUNTLETS
#
#//////////////////////////////////////////////////////////////////////////////

Class BEIronGauntlets : BEGauntlets {
	BEIronGauntlets() : base() {
		$this.Name               = 'Iron Gauntlets'
		$this.MapObjName         = 'irongauntlets'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Standard blacksmith-forged gauntlets, offering basic protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELeatherGauntlets : BEGauntlets {
	BELeatherGauntlets() : base() {
		$this.Name               = 'Leather Gauntlets'
		$this.MapObjName         = 'leathergauntlets'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::Defense = 3
			[StatId]::MagicDefense = 4
			[StatId]::Accuracy = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Lightweight leather gloves, offering dexterity with minimal defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBronzeFists : BEGauntlets {
	BEBronzeFists() : base() {
		$this.Name               = 'Bronze Fists'
		$this.MapObjName         = 'bronzefists'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crude but sturdy bronze gauntlets, heavy and reliable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESteelGauntlets : BEGauntlets {
	BESteelGauntlets() : base() {
		$this.Name               = 'Steel Gauntlets'
		$this.MapObjName         = 'steelgauntlets'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Reinforced steel gauntlets, a common choice for adventurers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPaddedMitts : BEGauntlets {
	BEPaddedMitts() : base() {
		$this.Name               = 'Padded Mitts'
		$this.MapObjName         = 'paddedmitts'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::Defense = 4
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Thickly padded gloves, offering surprising magical resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEHuntersGrips : BEGauntlets {
	BEHuntersGrips() : base() {
		$this.Name               = 'Hunter''s Grips'
		$this.MapObjName         = 'huntersgrips'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 5
			[StatId]::Accuracy = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Agile gauntlets favored by hunters, enhancing precision.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarriorsGauntlets : BEGauntlets {
	BEWarriorsGauntlets() : base() {
		$this.Name               = 'Warrior''s Gauntlets'
		$this.MapObjName         = 'warriorsgauntlets'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Solid gauntlets for frontline fighters, focusing on physical defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESorcerersBands : BEGauntlets {
	BESorcerersBands() : base() {
		$this.Name               = 'Sorcerer''s Bands'
		$this.MapObjName         = 'sorcerersbands'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Enchanted wristbands, amplifying magical potency.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChainmailGauntlets : BEGauntlets {
	BEChainmailGauntlets() : base() {
		$this.Name               = 'Chainmail Gauntlets'
		$this.MapObjName         = 'chainmailgauntlets'
		$this.PurchasePrice      = 220
		$this.SellPrice          = 110
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Flexible chainmail providing good all-around protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThiefsGloves : BEGauntlets {
	BEThiefsGloves() : base() {
		$this.Name               = 'Thief''s Gloves'
		$this.MapObjName         = 'thiefsgloves'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{
			[StatId]::Defense = 2
			[StatId]::MagicDefense = 6
			[StatId]::Accuracy = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Thin, dark gloves used for stealth and quick movements.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESentinelGauntlets : BEGauntlets {
	BESentinelGauntlets() : base() {
		$this.Name               = 'Sentinel Gauntlets'
		$this.MapObjName         = 'sentinelgauntlets'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy duty gauntlets for guardians, built for endurance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMysticHandguards : BEGauntlets {
	BEMysticHandguards() : base() {
		$this.Name               = 'Mystic Handguards'
		$this.MapObjName         = 'mystichandguards'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets imbued with faint arcane energy, boosting magic defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGuardCaptainGauntlets : BEGauntlets {
	BEGuardCaptainGauntlets() : base() {
		$this.Name               = 'Guard Captain Gauntlets'
		$this.MapObjName         = 'guardcaptaingauntlets'
		$this.PurchasePrice      = 380
		$this.SellPrice          = 190
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by experienced guards, providing reliable defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBerserkersFists : BEGauntlets {
	BEBerserkersFists() : base() {
		$this.Name               = 'Berserker''s Fists'
		$this.MapObjName         = 'berserkersfists'
		$this.PurchasePrice      = 320
		$this.SellPrice          = 160
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 2
			[StatId]::Accuracy = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crude, spiked gauntlets for aggressive combatants.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEArchersBracers : BEGauntlets {
	BEArchersBracers() : base() {
		$this.Name               = 'Archer''s Bracers'
		$this.MapObjName         = 'archersbracers'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 4
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light and flexible bracers for archers, aiding aim.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHolyGauntlets : BEGauntlets {
	BEHolyGauntlets() : base() {
		$this.Name               = 'Holy Gauntlets'
		$this.MapObjName         = 'holygauntlets'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blessed gauntlets, offering protection against dark forces.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowGrips : BEGauntlets {
	BEShadowGrips() : base() {
		$this.Name               = 'Shadow Grips'
		$this.MapObjName         = 'shadowgrips'
		$this.PurchasePrice      = 260
		$this.SellPrice          = 130
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 10
			[StatId]::Accuracy = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Dark, lightweight gloves for those who operate in shadows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKnightsGauntlets : BEGauntlets {
	BEKnightsGauntlets() : base() {
		$this.Name               = 'Knight''s Gauntlets'
		$this.MapObjName         = 'knightsgauntlets'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Polished and robust gauntlets, fit for a knight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEClericsCuffs : BEGauntlets {
	BEClericsCuffs() : base() {
		$this.Name               = 'Cleric''s Cuffs'
		$this.MapObjName         = 'clericscuffs'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Simple cuffs worn by clerics, aiding in divine magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDraconianClaws : BEGauntlets {
	BEDraconianClaws() : base() {
		$this.Name               = 'Draconian Claws'
		$this.MapObjName         = 'draconianclaws'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets crafted from dragon scales, exceptionally strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEElvenWeaveGloves : BEGauntlets {
	BEElvenWeaveGloves() : base() {
		$this.Name               = 'Elven Weave Gloves'
		$this.MapObjName         = 'elvenweavegloves'
		$this.PurchasePrice      = 420
		$this.SellPrice          = 210
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 20
			[StatId]::Accuracy = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Intricately woven gloves, light and magically resistant.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDwarvenStonefists : BEGauntlets {
	BEDwarvenStonefists() : base() {
		$this.Name               = 'Dwarven Stonefists'
		$this.MapObjName         = 'dwarvenstonefists'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Stone-infused gauntlets, incredibly durable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEnchantedArmbands : BEGauntlets {
	BEEnchantedArmbands() : base() {
		$this.Name               = 'Enchanted Armbands'
		$this.MapObjName         = 'enchantedarmbands'
		$this.PurchasePrice      = 480
		$this.SellPrice          = 240
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Armbands pulsating with magical energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGladiatorsGauntlets : BEGauntlets {
	BEGladiatorsGauntlets() : base() {
		$this.Name               = 'Gladiator''s Gauntlets'
		$this.MapObjName         = 'gladiatorsgauntlets'
		$this.PurchasePrice      = 370
		$this.SellPrice          = 185
		$this.TargetStats        = @{
			[StatId]::Defense = 19
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Rough yet effective gauntlets for arena combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEApprenticesMitts : BEGauntlets {
	BEApprenticesMitts() : base() {
		$this.Name               = 'Apprentice''s Mitts'
		$this.MapObjName         = 'apprenticesmitts'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::Defense = 3
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Basic gloves for a budding spellcaster.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETravelersGloves : BEGauntlets {
	BETravelersGloves() : base() {
		$this.Name               = 'Traveler''s Gloves'
		$this.MapObjName         = 'travelersgloves'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::Defense = 2
			[StatId]::MagicDefense = 3
			[StatId]::Accuracy = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Simple, comfortable gloves for long journeys.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrusadersGauntlets : BEGauntlets {
	BECrusadersGauntlets() : base() {
		$this.Name               = 'Crusader''s Gauntlets'
		$this.MapObjName         = 'crusadersgauntlets'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy, ornate gauntlets for a holy warrior.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMoonlitBands : BEGauntlets {
	BEMoonlitBands() : base() {
		$this.Name               = 'Moonlit Bands'
		$this.MapObjName         = 'moonlitbands'
		$this.PurchasePrice      = 520
		$this.SellPrice          = 260
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Silken bands that shimmer with lunar light, boosting mystical power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEVeteransGrips : BEGauntlets {
	BEVeteransGrips() : base() {
		$this.Name               = 'Veteran''s Grips'
		$this.MapObjName         = 'veteransgrips'
		$this.PurchasePrice      = 410
		$this.SellPrice          = 205
		$this.TargetStats        = @{
			[StatId]::Defense = 21
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Well-worn gauntlets of an experienced fighter.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWyvernClaws : BEGauntlets {
	BEWyvernClaws() : base() {
		$this.Name               = 'Wyvern Claws'
		$this.MapObjName         = 'wyvernclaws'
		$this.PurchasePrice      = 580
		$this.SellPrice          = 290
		$this.TargetStats        = @{
			[StatId]::Defense = 26
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets adorned with wyvern talons, sharp and intimidating.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECelestialGauntlets : BEGauntlets {
	BECelestialGauntlets() : base() {
		$this.Name               = 'Celestial Gauntlets'
		$this.MapObjName         = 'celestialgauntlets'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets said to be forged from starlight, offering divine protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarlocksWraps : BEGauntlets {
	BEWarlocksWraps() : base() {
		$this.Name               = 'Warlock''s Wraps'
		$this.MapObjName         = 'warlockswraps'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Dark wraps enhancing destructive magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEPaladinsVambraces : BEGauntlets {
	BEPaladinsVambraces() : base() {
		$this.Name               = 'Paladin''s Vambraces'
		$this.MapObjName         = 'paladinsvambraces'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Polished vambraces of a sworn protector.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESpiritWovenGloves : BEGauntlets {
	BESpiritWovenGloves() : base() {
		$this.Name               = 'Spirit Woven Gloves'
		$this.MapObjName         = 'spiritwovengloves'
		$this.PurchasePrice      = 460
		$this.SellPrice          = 230
		$this.TargetStats        = @{
			[StatId]::Defense = 11
			[StatId]::MagicDefense = 24
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves woven with spectral threads, offering ethereal defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDarkIronGauntlets : BEGauntlets {
	BEDarkIronGauntlets() : base() {
		$this.Name               = 'Dark Iron Gauntlets'
		$this.MapObjName         = 'darkirongauntlets'
		$this.PurchasePrice      = 620
		$this.SellPrice          = 310
		$this.TargetStats        = @{
			[StatId]::Defense = 29
			[StatId]::MagicDefense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets forged from dark iron, ominous and powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEOraclesHandguards : BEGauntlets {
	BEOraclesHandguards() : base() {
		$this.Name               = 'Oracle''s Handguards'
		$this.MapObjName         = 'oracleshandguards'
		$this.PurchasePrice      = 540
		$this.SellPrice          = 270
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 27
			[StatId]::Accuracy = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Handguards that hum with prophetic energy, aiding foresight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BERoyalGauntlets : BEGauntlets {
	BERoyalGauntlets() : base() {
		$this.Name               = 'Royal Gauntlets'
		$this.MapObjName         = 'royalgauntlets'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 38
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Finely crafted gauntlets, fit for royalty.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAssassinsClaws : BEGauntlets {
	BEAssassinsClaws() : base() {
		$this.Name               = 'Assassin''s Claws'
		$this.MapObjName         = 'assassinsclaws'
		$this.PurchasePrice      = 340
		$this.SellPrice          = 170
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 9
			[StatId]::Accuracy = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Sleek, sharp gauntlets designed for quick strikes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETitansFists : BEGauntlets {
	BETitansFists() : base() {
		$this.Name               = 'Titan''s Fists'
		$this.MapObjName         = 'titansfists'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Massive gauntlets rumored to be from a giant.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEPhoenixGloves : BEGauntlets {
	BEPhoenixGloves() : base() {
		$this.Name               = 'Phoenix Gloves'
		$this.MapObjName         = 'phoenixgloves'
		$this.PurchasePrice      = 720
		$this.SellPrice          = 360
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves said to be touched by a phoenix, offering fiery defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEAbyssalGauntlets : BEGauntlets {
	BEAbyssalGauntlets() : base() {
		$this.Name               = 'Abyssal Gauntlets'
		$this.MapObjName         = 'abyssalgauntlets'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 42
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets from the depths, reeking of darkness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERunesmithsGauntlets : BEGauntlets {
	BERunesmithsGauntlets() : base() {
		$this.Name               = 'Runesmith''s Gauntlets'
		$this.MapObjName         = 'runesmithsgauntlets'
		$this.PurchasePrice      = 780
		$this.SellPrice          = 390
		$this.TargetStats        = @{
			[StatId]::Defense = 36
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets inscribed with powerful runes, enhancing craftsmanship and defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHarpyTalons : BEGauntlets {
	BEHarpyTalons() : base() {
		$this.Name               = 'Harpy Talons'
		$this.MapObjName         = 'harpytalons'
		$this.PurchasePrice      = 390
		$this.SellPrice          = 195
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 7
			[StatId]::Accuracy = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light gauntlets with sharp tips, good for quick attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGorgonsGrip : BEGauntlets {
	BEGorgonsGrip() : base() {
		$this.Name               = 'Gorgon''s Grip'
		$this.MapObjName         = 'gorgonsgrip'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Petrifying gauntlets that can turn foes to stone.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDesertNomadGloves : BEGauntlets {
	BEDesertNomadGloves() : base() {
		$this.Name               = 'Desert Nomad Gloves'
		$this.MapObjName         = 'desertnomadgloves'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{
			[StatId]::Defense = 4
			[StatId]::MagicDefense = 5
			[StatId]::Accuracy = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Dust-resistant gloves for arid environments.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFrostbiteGauntlets : BEGauntlets {
	BEFrostbiteGauntlets() : base() {
		$this.Name               = 'Frostbite Gauntlets'
		$this.MapObjName         = 'frostbitegauntlets'
		$this.PurchasePrice      = 760
		$this.SellPrice          = 380
		$this.TargetStats        = @{
			[StatId]::Defense = 34
			[StatId]::MagicDefense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets radiating chilling energy, freezing foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESunstoneCuffs : BEGauntlets {
	BESunstoneCuffs() : base() {
		$this.Name               = 'Sunstone Cuffs'
		$this.MapObjName         = 'sunstonecuffs'
		$this.PurchasePrice      = 680
		$this.SellPrice          = 340
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Cuffs glowing with warm sunlight, providing healing and protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBeastkinGauntlets : BEGauntlets {
	BEBeastkinGauntlets() : base() {
		$this.Name               = 'Beastkin Gauntlets'
		$this.MapObjName         = 'beastkingauntlets'
		$this.PurchasePrice      = 430
		$this.SellPrice          = 215
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made from tough beast hide, wild and untamed.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGolemGauntlets : BEGauntlets {
	BEGolemGauntlets() : base() {
		$this.Name               = 'Golem Gauntlets'
		$this.MapObjName         = 'golemgauntlets'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy, stone-like gauntlets, nearly indestructible.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShamansHandwraps : BEGauntlets {
	BEShamansHandwraps() : base() {
		$this.Name               = 'Shaman''s Handwraps'
		$this.MapObjName         = 'shamanshandwraps'
		$this.PurchasePrice      = 490
		$this.SellPrice          = 245
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 26
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Simple wraps used in rituals, channeling natural magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZephyrGloves : BEGauntlets {
	BEZephyrGloves() : base() {
		$this.Name               = 'Zephyr Gloves'
		$this.MapObjName         = 'zephyrgloves'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 10
			[StatId]::Accuracy = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves light as air, granting incredible speed and evasion.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVampiresEmbrace : BEGauntlets {
	BEVampiresEmbrace() : base() {
		$this.Name               = 'Vampire''s Embrace'
		$this.MapObjName         = 'vampiresembrace'
		$this.PurchasePrice      = 820
		$this.SellPrice          = 410
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 23
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that seem to drain life from enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreadnoughtGauntlets : BEGauntlets {
	BEDreadnoughtGauntlets() : base() {
		$this.Name               = 'Dreadnought Gauntlets'
		$this.MapObjName         = 'dreadnoughtgauntlets'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Massive, intimidating gauntlets for ultimate defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEFaerieSilkGloves : BEGauntlets {
	BEFaerieSilkGloves() : base() {
		$this.Name               = 'Faerie Silk Gloves'
		$this.MapObjName         = 'faeriesilkgloves'
		$this.PurchasePrice      = 560
		$this.SellPrice          = 280
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves woven from mystical faerie silk, incredibly soft yet protective.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESavageGauntlets : BEGauntlets {
	BESavageGauntlets() : base() {
		$this.Name               = 'Savage Gauntlets'
		$this.MapObjName         = 'savagegauntlets'
		$this.PurchasePrice      = 470
		$this.SellPrice          = 235
		$this.TargetStats        = @{
			[StatId]::Defense = 23
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Brutal, unrefined gauntlets for savage warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStormcallerBands : BEGauntlets {
	BEStormcallerBands() : base() {
		$this.Name               = 'Stormcaller Bands'
		$this.MapObjName         = 'stormcallerbands'
		$this.PurchasePrice      = 880
		$this.SellPrice          = 440
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bands crackling with elemental energy, summoning lightning.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidGauntlets : BEGauntlets {
	BEVoidGauntlets() : base() {
		$this.Name               = 'Void Gauntlets'
		$this.MapObjName         = 'voidgauntlets'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 48
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets from the void, absorbing magical attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivineAegis : BEGauntlets {
	BEDivineAegis() : base() {
		$this.Name               = 'Divine Aegis'
		$this.MapObjName         = 'divineaegis'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets offering supreme divine protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInfernoFists : BEGauntlets {
	BEInfernoFists() : base() {
		$this.Name               = 'Inferno Fists'
		$this.MapObjName         = 'infernofists'
		$this.PurchasePrice      = 920
		$this.SellPrice          = 460
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets ablaze with eternal flames, burning all who touch.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESeraphicMitts : BEGauntlets {
	BESeraphicMitts() : base() {
		$this.Name               = 'Seraphic Mitts'
		$this.MapObjName         = 'seraphicmitts'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Feather-light mitts of angelic origin, offering celestial defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBarbariansCuffs : BEGauntlets {
	BEBarbariansCuffs() : base() {
		$this.Name               = 'Barbarian''s Cuffs'
		$this.MapObjName         = 'barbarianscuffs'
		$this.PurchasePrice      = 160
		$this.SellPrice          = 80
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Rough, leather cuffs for a primal warrior.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BERunepowderGauntlets : BEGauntlets {
	BERunepowderGauntlets() : base() {
		$this.Name               = 'Runepowder Gauntlets'
		$this.MapObjName         = 'runepowdergauntlets'
		$this.PurchasePrice      = 680
		$this.SellPrice          = 340
		$this.TargetStats        = @{
			[StatId]::Defense = 24
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets infused with explosive runepowder.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlacialHandguards : BEGauntlets {
	BEGlacialHandguards() : base() {
		$this.Name               = 'Glacial Handguards'
		$this.MapObjName         = 'glacialhandguards'
		$this.PurchasePrice      = 740
		$this.SellPrice          = 370
		$this.TargetStats        = @{
			[StatId]::Defense = 27
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Handguards emitting an icy aura, slowing enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrimsonGauntlets : BEGauntlets {
	BECrimsonGauntlets() : base() {
		$this.Name               = 'Crimson Gauntlets'
		$this.MapObjName         = 'crimsongauntlets'
		$this.PurchasePrice      = 530
		$this.SellPrice          = 265
		$this.TargetStats        = @{
			[StatId]::Defense = 26
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blood-stained gauntlets of a ruthless warrior.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEmeraldBands : BEGauntlets {
	BEEmeraldBands() : base() {
		$this.Name               = 'Emerald Bands'
		$this.MapObjName         = 'emeraldbands'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 21
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bands gleaming with verdant energy, restoring vitality.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEObsidianFists : BEGauntlets {
	BEObsidianFists() : base() {
		$this.Name               = 'Obsidian Fists'
		$this.MapObjName         = 'obsidianfists'
		$this.PurchasePrice      = 980
		$this.SellPrice          = 490
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets carved from volcanic obsidian, sharp and resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpecterGloves : BEGauntlets {
	BESpecterGloves() : base() {
		$this.Name               = 'Specter Gloves'
		$this.MapObjName         = 'spectergloves'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 33
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves allowing passage through solid objects.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGloomGauntlets : BEGauntlets {
	BEGloomGauntlets() : base() {
		$this.Name               = 'Gloom Gauntlets'
		$this.MapObjName         = 'gloomgauntlets'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that seem to absorb light and hope.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZealotsBracers : BEGauntlets {
	BEZealotsBracers() : base() {
		$this.Name               = 'Zealot''s Bracers'
		$this.MapObjName         = 'zealotsbracers'
		$this.PurchasePrice      = 790
		$this.SellPrice          = 395
		$this.TargetStats        = @{
			[StatId]::Defense = 33
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bracers of a fanatical warrior, inspiring courage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEChronoCuffs : BEGauntlets {
	BEChronoCuffs() : base() {
		$this.Name               = 'Chrono Cuffs'
		$this.MapObjName         = 'chronocuffs'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 25
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Cuffs that subtly manipulate time, improving reaction speed.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENecromancersGrips : BEGauntlets {
	BENecromancersGrips() : base() {
		$this.Name               = 'Necromancer''s Grips'
		$this.MapObjName         = 'necromancersgrips'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 11
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grips that draw power from the deceased.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGolemiteGauntlets : BEGauntlets {
	BEGolemiteGauntlets() : base() {
		$this.Name               = 'Golemite Gauntlets'
		$this.MapObjName         = 'golemitegauntlets'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 48
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy gauntlets made from animated stone.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESilverleafGloves : BEGauntlets {
	BESilverleafGloves() : base() {
		$this.Name               = 'Silverleaf Gloves'
		$this.MapObjName         = 'silverleafgloves'
		$this.PurchasePrice      = 620
		$this.SellPrice          = 310
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 29
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves crafted from mystical silverleaf, light and protective.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEAetherialBands : BEGauntlets {
	BEAetherialBands() : base() {
		$this.Name               = 'Aetherial Bands'
		$this.MapObjName         = 'aetherialbands'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 17
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bands pulsating with pure magical essence.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWyrmhideGauntlets : BEGauntlets {
	BEWyrmhideGauntlets() : base() {
		$this.Name               = 'Wyrmhide Gauntlets'
		$this.MapObjName         = 'wyrmhidegauntlets'
		$this.PurchasePrice      = 720
		$this.SellPrice          = 360
		$this.TargetStats        = @{
			[StatId]::Defense = 31
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made from the tough hide of a lesser wyrm.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneguardGauntlets : BEGauntlets {
	BEStoneguardGauntlets() : base() {
		$this.Name               = 'Stoneguard Gauntlets'
		$this.MapObjName         = 'stoneguardgauntlets'
		$this.PurchasePrice      = 670
		$this.SellPrice          = 335
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets reinforced with elemental earth, sturdy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEOceanicGauntlets : BEGauntlets {
	BEOceanicGauntlets() : base() {
		$this.Name               = 'Oceanic Gauntlets'
		$this.MapObjName         = 'oceanicgauntlets'
		$this.PurchasePrice      = 880
		$this.SellPrice          = 440
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 31
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets smelling of the sea, aiding in water spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBlazefireGauntlets : BEGauntlets {
	BEBlazefireGauntlets() : base() {
		$this.Name               = 'Blazefire Gauntlets'
		$this.MapObjName         = 'blazefiregauntlets'
		$this.PurchasePrice      = 930
		$this.SellPrice          = 465
		$this.TargetStats        = @{
			[StatId]::Defense = 37
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets radiating intense heat, burning enemies on contact.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BELunarGauntlets : BEGauntlets {
	BELunarGauntlets() : base() {
		$this.Name               = 'Lunar Gauntlets'
		$this.MapObjName         = 'lunargauntlets'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 28
			[StatId]::Accuracy = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that glow with soft moonlight, enhancing stealth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESolarBracers : BEGauntlets {
	BESolarBracers() : base() {
		$this.Name               = 'Solar Bracers'
		$this.MapObjName         = 'solarbracers'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 19
			[StatId]::MagicDefense = 26
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bracers that pulse with sun''s energy, healing allies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVanguardGauntlets : BEGauntlets {
	BEVanguardGauntlets() : base() {
		$this.Name               = 'Vanguard Gauntlets'
		$this.MapObjName         = 'vanguardgauntlets'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 52
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'The first line of defense, heavy and reliable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStormforgedFists : BEGauntlets {
	BEStormforgedFists() : base() {
		$this.Name               = 'Stormforged Fists'
		$this.MapObjName         = 'stormforgedfists'
		$this.PurchasePrice      = 960
		$this.SellPrice          = 480
		$this.TargetStats        = @{
			[StatId]::Defense = 39
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets forged in a thunderstorm, crackling with power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZealotGauntlets : BEGauntlets {
	BEZealotGauntlets() : base() {
		$this.Name               = 'Zealot Gauntlets'
		$this.MapObjName         = 'zealotgauntlets'
		$this.PurchasePrice      = 1020
		$this.SellPrice          = 510
		$this.TargetStats        = @{
			[StatId]::Defense = 43
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ornately decorated gauntlets, inspiring divine fury.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEShadowstitchGloves : BEGauntlets {
	BEShadowstitchGloves() : base() {
		$this.Name               = 'Shadowstitch Gloves'
		$this.MapObjName         = 'shadowstitchgloves'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 20
			[StatId]::Accuracy = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves sewn from threads of shadow, providing stealth and agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAncientRuneGauntlets : BEGauntlets {
	BEAncientRuneGauntlets() : base() {
		$this.Name               = 'Ancient Rune Gauntlets'
		$this.MapObjName         = 'ancientrunegauntlets'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{
			[StatId]::Defense = 47
			[StatId]::MagicDefense = 24
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets covered in ancient, forgotten runes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBloodboundGauntlets : BEGauntlets {
	BEBloodboundGauntlets() : base() {
		$this.Name               = 'Bloodbound Gauntlets'
		$this.MapObjName         = 'bloodboundgauntlets'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::Defense = 58
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that empower the wearer with every wound taken.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStarlightGauntlets : BEGauntlets {
	BEStarlightGauntlets() : base() {
		$this.Name               = 'Starlight Gauntlets'
		$this.MapObjName         = 'starlightgauntlets'
		$this.PurchasePrice      = 1080
		$this.SellPrice          = 540
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 36
			[StatId]::Accuracy = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets shimmering with starlight, offering celestial guidance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECrystalineGauntlets : BEGauntlets {
	BECrystalineGauntlets() : base() {
		$this.Name               = 'Crystaline Gauntlets'
		$this.MapObjName         = 'crystalinegauntlets'
		$this.PurchasePrice      = 910
		$this.SellPrice          = 455
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets formed from pure crystal, fragile yet powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGravehandGloves : BEGauntlets {
	BEGravehandGloves() : base() {
		$this.Name               = 'Gravehand Gloves'
		$this.MapObjName         = 'gravehandgloves'
		$this.PurchasePrice      = 770
		$this.SellPrice          = 385
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves that chill to the touch, connected to the underworld.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonhideGauntlets : BEGauntlets {
	BEDragonhideGauntlets() : base() {
		$this.Name               = 'Dragonhide Gauntlets'
		$this.MapObjName         = 'dragonhidegauntlets'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets crafted from the hide of a mature dragon.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDreamweaverBands : BEGauntlets {
	BEDreamweaverBands() : base() {
		$this.Name               = 'Dreamweaver Bands'
		$this.MapObjName         = 'dreamweaverbands'
		$this.PurchasePrice      = 830
		$this.SellPrice          = 415
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 34
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bands that allow the wearer to influence dreams and minds.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEIroncladGauntlets : BEGauntlets {
	BEIroncladGauntlets() : base() {
		$this.Name               = 'Ironclad Gauntlets'
		$this.MapObjName         = 'ironcladgauntlets'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Exceptionally sturdy gauntlets, heavy but impenetrable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulforgedGauntlets : BEGauntlets {
	BESoulforgedGauntlets() : base() {
		$this.Name               = 'Soulforged Gauntlets'
		$this.MapObjName         = 'soulforgedgauntlets'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 68
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets imbued with a captured soul, granting dark power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAngelicGauntlets : BEGauntlets {
	BEAngelicGauntlets() : base() {
		$this.Name               = 'Angelic Gauntlets'
		$this.MapObjName         = 'angelicgauntlets'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets from the heavens, radiating purity and light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDemonicClaws : BEGauntlets {
	BEDemonicClaws() : base() {
		$this.Name               = 'Demonic Claws'
		$this.MapObjName         = 'demonicclaws'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 80
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Vicious gauntlets from the fiery pits, dripping with malice.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEbonGauntlets : BEGauntlets {
	BEEbonGauntlets() : base() {
		$this.Name               = 'Ebon Gauntlets'
		$this.MapObjName         = 'ebongauntlets'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 85
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets forged from solidified darkness, absorbing all light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BERadiantFists : BEGauntlets {
	BERadiantFists() : base() {
		$this.Name               = 'Radiant Fists'
		$this.MapObjName         = 'radiantfists'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 78
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Fists that glow with holy light, scorching evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEVoidforgedGauntlets : BEGauntlets {
	BEVoidforgedGauntlets() : base() {
		$this.Name               = 'Voidforged Gauntlets'
		$this.MapObjName         = 'voidforgedgauntlets'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 90
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets crafted in the heart of the void, immense power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMythrilGauntlets : BEGauntlets {
	BEMythrilGauntlets() : base() {
		$this.Name               = 'Mythril Gauntlets'
		$this.MapObjName         = 'mythrilgauntlets'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::Defense = 95
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of legendary mythril, light yet incredibly strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAdamantiteGauntlets : BEGauntlets {
	BEAdamantiteGauntlets() : base() {
		$this.Name               = 'Adamantite Gauntlets'
		$this.MapObjName         = 'adamantitegauntlets'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Defense = 100
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of the hardest known metal, virtually unbreakable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlimmeringGauntlets : BEGauntlets {
	BEGlimmeringGauntlets() : base() {
		$this.Name               = 'Glimmering Gauntlets'
		$this.MapObjName         = 'glimmeringgauntlets'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that sparkle with a faint, magical light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStonehideGloves : BEGauntlets {
	BEStonehideGloves() : base() {
		$this.Name               = 'Stonehide Gloves'
		$this.MapObjName         = 'stonehidegloves'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves made from petrified animal hide, surprisingly tough.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESilentWraps : BEGauntlets {
	BESilentWraps() : base() {
		$this.Name               = 'Silent Wraps'
		$this.MapObjName         = 'silentwraps'
		$this.PurchasePrice      = 140
		$this.SellPrice          = 70
		$this.TargetStats        = @{
			[StatId]::Defense = 3
			[StatId]::MagicDefense = 7
			[StatId]::Accuracy = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Soft wraps for quiet movement, favored by scouts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWyrmfangGauntlets : BEGauntlets {
	BEWyrmfangGauntlets() : base() {
		$this.Name               = 'Wyrmfang Gauntlets'
		$this.MapObjName         = 'wyrmfanggauntlets'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets tipped with the fangs of a juvenile wyrm.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEWhisperwindBands : BEGauntlets {
	BEWhisperwindBands() : base() {
		$this.Name               = 'Whisperwind Bands'
		$this.MapObjName         = 'whisperwindbands'
		$this.PurchasePrice      = 580
		$this.SellPrice          = 290
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 23
			[StatId]::Accuracy = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bands that carry the faintest whispers, granting keen senses.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOgreGauntlets : BEGauntlets {
	BEOgreGauntlets() : base() {
		$this.Name               = 'Ogre Gauntlets'
		$this.MapObjName         = 'ogregauntlets'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crude and massive gauntlets, for the strongest warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDryadsEmbrace : BEGauntlets {
	BEDryadsEmbrace() : base() {
		$this.Name               = 'Dryad''s Embrace'
		$this.MapObjName         = 'dryadsembrace'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 26
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves woven with living vines, connected to nature''s magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEForgeheartGauntlets : BEGauntlets {
	BEForgeheartGauntlets() : base() {
		$this.Name               = 'Forgeheart Gauntlets'
		$this.MapObjName         = 'forgeheartgauntlets'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets from a master smith''s forge, enduring and hot.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStonetoothFists : BEGauntlets {
	BEStonetoothFists() : base() {
		$this.Name               = 'Stonetooth Fists'
		$this.MapObjName         = 'stonetoothfists'
		$this.PurchasePrice      = 480
		$this.SellPrice          = 240
		$this.TargetStats        = @{
			[StatId]::Defense = 24
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets with jagged, stone-like knuckles.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDeepwoodGrips : BEGauntlets {
	BEDeepwoodGrips() : base() {
		$this.Name               = 'Deepwood Grips'
		$this.MapObjName         = 'deepwoodgrips'
		$this.PurchasePrice      = 360
		$this.SellPrice          = 180
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 15
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves made from ancient forest materials, blending with shadows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECelestialSphereGauntlets : BEGauntlets {
	BECelestialSphereGauntlets() : base() {
		$this.Name               = 'Celestial Sphere Gauntlets'
		$this.MapObjName         = 'celestialspheregauntlets'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets adorned with miniature celestial spheres, aiding astral magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowbinderGauntlets : BEGauntlets {
	BEShadowbinderGauntlets() : base() {
		$this.Name               = 'Shadowbinder Gauntlets'
		$this.MapObjName         = 'shadowbindergauntlets'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that seem to control shadows, binding foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDrakeskinGauntlets : BEGauntlets {
	BEDrakeskinGauntlets() : base() {
		$this.Name               = 'Drakeskin Gauntlets'
		$this.MapObjName         = 'drakeskingauntlets'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 38
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made from the durable hide of a drake.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEChitinousGauntlets : BEGauntlets {
	BEChitinousGauntlets() : base() {
		$this.Name               = 'Chitinous Gauntlets'
		$this.MapObjName         = 'chitinousgauntlets'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets crafted from hardened insect chitin, surprisingly light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVikingsBracers : BEGauntlets {
	BEVikingsBracers() : base() {
		$this.Name               = 'Viking''s Bracers'
		$this.MapObjName         = 'vikingsbracers'
		$this.PurchasePrice      = 330
		$this.SellPrice          = 165
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Sturdy bracers for a seafaring warrior.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESirensGloves : BEGauntlets {
	BESirensGloves() : base() {
		$this.Name               = 'Siren''s Gloves'
		$this.MapObjName         = 'sirensgloves'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves with a captivating aura, charming adversaries.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGargoyleGauntlets : BEGauntlets {
	BEGargoyleGauntlets() : base() {
		$this.Name               = 'Gargoyle Gauntlets'
		$this.MapObjName         = 'gargoylegauntlets'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets resembling gargoyle claws, stony and imposing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEReapersGrasp : BEGauntlets {
	BEReapersGrasp() : base() {
		$this.Name               = 'Reaper''s Grasp'
		$this.MapObjName         = 'reapersgrasp'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that chill the soul, wielding spectral power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunkenGauntlets : BEGauntlets {
	BESunkenGauntlets() : base() {
		$this.Name               = 'Sunken Gauntlets'
		$this.MapObjName         = 'sunkengauntlets'
		$this.PurchasePrice      = 420
		$this.SellPrice          = 210
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Barnacle-encrusted gauntlets from a forgotten wreck.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETempestFists : BEGauntlets {
	BETempestFists() : base() {
		$this.Name               = 'Tempest Fists'
		$this.MapObjName         = 'tempestfists'
		$this.PurchasePrice      = 970
		$this.SellPrice          = 485
		$this.TargetStats        = @{
			[StatId]::Defense = 42
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Fists crackling with the raw energy of a storm.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWispweaveGloves : BEGauntlets {
	BEWispweaveGloves() : base() {
		$this.Name               = 'Wispweave Gloves'
		$this.MapObjName         = 'wispweavegloves'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 32
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves made of ethereal wisp material, nearly invisible.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BENomadsGauntlets : BEGauntlets {
	BENomadsGauntlets() : base() {
		$this.Name               = 'Nomad''s Gauntlets'
		$this.MapObjName         = 'nomadsgauntlets'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Practical and robust gauntlets for a wanderer.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAshwoodGauntlets : BEGauntlets {
	BEAshwoodGauntlets() : base() {
		$this.Name               = 'Ashwood Gauntlets'
		$this.MapObjName         = 'ashwoodgauntlets'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 17
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets carved from ancient ashwood, light and resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBloodsteelGauntlets : BEGauntlets {
	BEBloodsteelGauntlets() : base() {
		$this.Name               = 'Bloodsteel Gauntlets'
		$this.MapObjName         = 'bloodsteelgauntlets'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets forged with blood ritual, dark and potent.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStarfallGauntlets : BEGauntlets {
	BEStarfallGauntlets() : base() {
		$this.Name               = 'Starfall Gauntlets'
		$this.MapObjName         = 'starfallgauntlets'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets embedded with fallen star fragments, radiating power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOraclesTouch : BEGauntlets {
	BEOraclesTouch() : base() {
		$this.Name               = 'Oracle''s Touch'
		$this.MapObjName         = 'oraclestouch'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 36
			[StatId]::Accuracy = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves allowing brief glimpses into the future, improving reaction.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGriffinRidersGauntlets : BEGauntlets {
	BEGriffinRidersGauntlets() : base() {
		$this.Name               = 'Griffin Rider''s Gauntlets'
		$this.MapObjName         = 'griffinridersgauntlets'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Aerodynamic gauntlets for those who ride the skies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOnyxFists : BEGauntlets {
	BEOnyxFists() : base() {
		$this.Name               = 'Onyx Fists'
		$this.MapObjName         = 'onyxfists'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets crafted from dark onyx, absorbing negative energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZephyrweaveGauntlets : BEGauntlets {
	BEZephyrweaveGauntlets() : base() {
		$this.Name               = 'Zephyrweave Gauntlets'
		$this.MapObjName         = 'zephyrweavegauntlets'
		$this.PurchasePrice      = 880
		$this.SellPrice          = 440
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 27
			[StatId]::Accuracy = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets woven from enchanted air, granting swiftness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECragskinGauntlets : BEGauntlets {
	BECragskinGauntlets() : base() {
		$this.Name               = 'Cragskin Gauntlets'
		$this.MapObjName         = 'cragskingauntlets'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made from hardened mountain hide, durable and rugged.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMysticSentinelGauntlets : BEGauntlets {
	BEMysticSentinelGauntlets() : base() {
		$this.Name               = 'Mystic Sentinel Gauntlets'
		$this.MapObjName         = 'mysticsentinelgauntlets'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of an ancient order, protecting magic users.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEInfernalGrips : BEGauntlets {
	BEInfernalGrips() : base() {
		$this.Name               = 'Infernal Grips'
		$this.MapObjName         = 'infernalgrips'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 62
			[StatId]::MagicDefense = 24
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grips that burn with a malevolent fire, searing enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAegisGauntlets : BEGauntlets {
	BEAegisGauntlets() : base() {
		$this.Name               = 'Aegis Gauntlets'
		$this.MapObjName         = 'aegisgauntlets'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets with an invisible shield, deflecting attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidcallersCuffs : BEGauntlets {
	BEVoidcallersCuffs() : base() {
		$this.Name               = 'Voidcaller''s Cuffs'
		$this.MapObjName         = 'voidcallerscuffs'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Cuffs that resonate with the void, amplifying dark spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGravewardGauntlets : BEGauntlets {
	BEGravewardGauntlets() : base() {
		$this.Name               = 'Graveward Gauntlets'
		$this.MapObjName         = 'gravewardgauntlets'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 72
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a silent guardian, protecting sacred grounds.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECelestialHandguards : BEGauntlets {
	BECelestialHandguards() : base() {
		$this.Name               = 'Celestial Handguards'
		$this.MapObjName         = 'celestialhandguards'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 78
			[StatId]::MagicDefense = 33
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Handguards of celestial origin, radiating divine light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEElderwoodGauntlets : BEGauntlets {
	BEElderwoodGauntlets() : base() {
		$this.Name               = 'Elderwood Gauntlets'
		$this.MapObjName         = 'elderwoodgauntlets'
		$this.PurchasePrice      = 980
		$this.SellPrice          = 490
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 20
			[StatId]::Accuracy = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets carved from ancient, sentient wood.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStonefleshGauntlets : BEGauntlets {
	BEStonefleshGauntlets() : base() {
		$this.Name               = 'Stoneflesh Gauntlets'
		$this.MapObjName         = 'stonefleshgauntlets'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that seem to turn skin to stone.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESunblessedGauntlets : BEGauntlets {
	BESunblessedGauntlets() : base() {
		$this.Name               = 'Sunblessed Gauntlets'
		$this.MapObjName         = 'sunblessedgauntlets'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
			[StatId]::Defense = 33
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets infused with the sun''s warmth, healing allies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowfangGloves : BEGauntlets {
	BEShadowfangGloves() : base() {
		$this.Name               = 'Shadowfang Gloves'
		$this.MapObjName         = 'shadowfanggloves'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 25
			[StatId]::Accuracy = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves with retractable shadow claws, for stealthy strikes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWyvernscaleGauntlets : BEGauntlets {
	BEWyvernscaleGauntlets() : base() {
		$this.Name               = 'Wyvernscale Gauntlets'
		$this.MapObjName         = 'wyvernscalegauntlets'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made from the scales of a full-grown wyvern.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStormbreakerGauntlets : BEGauntlets {
	BEStormbreakerGauntlets() : base() {
		$this.Name               = 'Stormbreaker Gauntlets'
		$this.MapObjName         = 'stormbreakergauntlets'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::Defense = 58
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that can channel and disperse stormy energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFeywildGloves : BEGauntlets {
	BEFeywildGloves() : base() {
		$this.Name               = 'Feywild Gloves'
		$this.MapObjName         = 'feywildgloves'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 38
			[StatId]::Accuracy = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves touched by the Feywild, shimmering with magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEAbyssalMawGauntlets : BEGauntlets {
	BEAbyssalMawGauntlets() : base() {
		$this.Name               = 'Abyssal Maw Gauntlets'
		$this.MapObjName         = 'abyssalmawgauntlets'
		$this.PurchasePrice      = 1450
		$this.SellPrice          = 725
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets resembling a gaping maw, crushing foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarforgedGauntlets : BEGauntlets {
	BEStarforgedGauntlets() : base() {
		$this.Name               = 'Starforged Gauntlets'
		$this.MapObjName         = 'starforgedgauntlets'
		$this.PurchasePrice      = 1550
		$this.SellPrice          = 775
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 30
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets forged under a specific constellation, granting luck.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonlordsGauntlets : BEGauntlets {
	BEDragonlordsGauntlets() : base() {
		$this.Name               = 'Dragonlord''s Gauntlets'
		$this.MapObjName         = 'dragonlordsgauntlets'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 88
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets fit for a dragonlord, of immense power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESpiritwalkerGloves : BEGauntlets {
	BESpiritwalkerGloves() : base() {
		$this.Name               = 'Spiritwalker Gloves'
		$this.MapObjName         = 'spiritwalkergloves'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 42
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves that allow brief interaction with spirits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENetheriteGauntlets : BEGauntlets {
	BENetheriteGauntlets() : base() {
		$this.Name               = 'Netherite Gauntlets'
		$this.MapObjName         = 'netheritegauntlets'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 92
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made from a rare, volatile metal.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArcaneWeaveGloves : BEGauntlets {
	BEArcaneWeaveGloves() : base() {
		$this.Name               = 'Arcane Weave Gloves'
		$this.MapObjName         = 'arcaneweavegloves'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves intricately woven with arcane threads, enhancing spellcasting.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEColossusGauntlets : BEGauntlets {
	BEColossusGauntlets() : base() {
		$this.Name               = 'Colossus Gauntlets'
		$this.MapObjName         = 'colossusgauntlets'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 98
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Massive gauntlets for a champion, empowering strikes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEChronoFluxGauntlets : BEGauntlets {
	BEChronoFluxGauntlets() : base() {
		$this.Name               = 'Chrono Flux Gauntlets'
		$this.MapObjName         = 'chronofluxgauntlets'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 35
			[StatId]::Accuracy = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that bend time, granting rapid movements.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidShroudGauntlets : BEGauntlets {
	BEVoidShroudGauntlets() : base() {
		$this.Name               = 'Void Shroud Gauntlets'
		$this.MapObjName         = 'voidshroudgauntlets'
		$this.PurchasePrice      = 1850
		$this.SellPrice          = 925
		$this.TargetStats        = @{
			[StatId]::Defense = 85
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that appear to fade in and out of existence.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELionheartGauntlets : BEGauntlets {
	BELionheartGauntlets() : base() {
		$this.Name               = 'Lionheart Gauntlets'
		$this.MapObjName         = 'lionheartgauntlets'
		$this.PurchasePrice      = 1650
		$this.SellPrice          = 825
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets bearing the symbol of a lion, inspiring courage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEValkyriesVambraces : BEGauntlets {
	BEValkyriesVambraces() : base() {
		$this.Name               = 'Valkyrie''s Vambraces'
		$this.MapObjName         = 'valkyriesvambraces'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 68
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Vambraces adorned with wings, lighter than air yet strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESerpentScaleGauntlets : BEGauntlets {
	BESerpentScaleGauntlets() : base() {
		$this.Name               = 'Serpent Scale Gauntlets'
		$this.MapObjName         = 'serpentscalegauntlets'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made from large serpent scales, flexible and tough.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGolemHandguards : BEGauntlets {
	BEGolemHandguards() : base() {
		$this.Name               = 'Golem Handguards'
		$this.MapObjName         = 'golemhandguards'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Handguards of an ancient golem, incredibly durable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMoonpetalGloves : BEGauntlets {
	BEMoonpetalGloves() : base() {
		$this.Name               = 'Moonpetal Gloves'
		$this.MapObjName         = 'moonpetalgloves'
		$this.PurchasePrice      = 680
		$this.SellPrice          = 340
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 30
			[StatId]::Accuracy = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves woven from moonlit petals, soft and magically potent.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECenturionGauntlets : BEGauntlets {
	BECenturionGauntlets() : base() {
		$this.Name               = 'Centurion Gauntlets'
		$this.MapObjName         = 'centuriongauntlets'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy, practical gauntlets for a seasoned soldier.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESpellboundGauntlets : BEGauntlets {
	BESpellboundGauntlets() : base() {
		$this.Name               = 'Spellbound Gauntlets'
		$this.MapObjName         = 'spellboundgauntlets'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets imbued with a powerful, protective spell.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIronGuardGauntlets : BEGauntlets {
	BEIronGuardGauntlets() : base() {
		$this.Name               = 'Iron Guard Gauntlets'
		$this.MapObjName         = 'ironguardgauntlets'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Reinforced iron gauntlets, preferred by city guards.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERoughspunGrips : BEGauntlets {
	BERoughspunGrips() : base() {
		$this.Name               = 'Roughspun Grips'
		$this.MapObjName         = 'roughspungrips'
		$this.PurchasePrice      = 60
		$this.SellPrice          = 30
		$this.TargetStats        = @{
			[StatId]::Defense = 2
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crude, but surprisingly durable gloves.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBrigandsBracers : BEGauntlets {
	BEBrigandsBracers() : base() {
		$this.Name               = 'Brigand''s Bracers'
		$this.MapObjName         = 'brigandsbracers'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Simple bracers, often found on bandits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZealotsMitts : BEGauntlets {
	BEZealotsMitts() : base() {
		$this.Name               = 'Zealot''s Mitts'
		$this.MapObjName         = 'zealotsmitts'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{
			[StatId]::Defense = 4
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light mitts for a quick, devoted follower.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESilkenGloves : BEGauntlets {
	BESilkenGloves() : base() {
		$this.Name               = 'Silken Gloves'
		$this.MapObjName         = 'silkengloves'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::Defense = 1
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Soft, elegant gloves offering minimal protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEApprenticesGauntlets : BEGauntlets {
	BEApprenticesGauntlets() : base() {
		$this.Name               = 'Apprentice''s Gauntlets'
		$this.MapObjName         = 'apprenticesgauntlets'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Basic gauntlets for those learning the craft.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWanderersCuffs : BEGauntlets {
	BEWanderersCuffs() : base() {
		$this.Name               = 'Wanderer''s Cuffs'
		$this.MapObjName         = 'wandererscuffs'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Durable cuffs for endless travels.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFabledGauntlets : BEGauntlets {
	BEFabledGauntlets() : base() {
		$this.Name               = 'Fabled Gauntlets'
		$this.MapObjName         = 'fabledgauntlets'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Defense = 90
			[StatId]::MagicDefense = 45
			[StatId]::Accuracy = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets spoken of in legends, their power growing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGrimskullGauntlets : BEGauntlets {
	BEGrimskullGauntlets() : base() {
		$this.Name               = 'Grimskull Gauntlets'
		$this.MapObjName         = 'grimskullgauntlets'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets adorned with skulls, intimidating and dark.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECrystalweaveGloves : BEGauntlets {
	BECrystalweaveGloves() : base() {
		$this.Name               = 'Crystalweave Gloves'
		$this.MapObjName         = 'crystalweavegloves'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves woven with fine crystal threads, enhancing focus.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDragonswornGauntlets : BEGauntlets {
	BEDragonswornGauntlets() : base() {
		$this.Name               = 'Dragonsworn Gauntlets'
		$this.MapObjName         = 'dragonsworngauntlets'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 82
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of those who pledge loyalty to dragons.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEternalFlameGauntlets : BEGauntlets {
	BEEternalFlameGauntlets() : base() {
		$this.Name               = 'Eternal Flame Gauntlets'
		$this.MapObjName         = 'eternalflamegauntlets'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 80
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets burning with a non-consuming flame.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWhispersteelGauntlets : BEGauntlets {
	BEWhispersteelGauntlets() : base() {
		$this.Name               = 'Whispersteel Gauntlets'
		$this.MapObjName         = 'whispersteelgauntlets'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 25
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made of a silent, shadowy metal.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneskinGrips : BEGauntlets {
	BEStoneskinGrips() : base() {
		$this.Name               = 'Stoneskin Grips'
		$this.MapObjName         = 'stoneskingrips'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::Defense = 58
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grips that harden the skin, making it resistant.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGoddesssHandguards : BEGauntlets {
	BEGoddesssHandguards() : base() {
		$this.Name               = 'Goddess''s Handguards'
		$this.MapObjName         = 'goddessshandguards'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 95
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Handguards said to be touched by a deity, offering ultimate defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEChampionsGauntlets : BEGauntlets {
	BEChampionsGauntlets() : base() {
		$this.Name               = 'Champion''s Gauntlets'
		$this.MapObjName         = 'championsgauntlets'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::Defense = 100
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a legendary champion, imbued with their might.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWraithtouchGloves : BEGauntlets {
	BEWraithtouchGloves() : base() {
		$this.Name               = 'Wraithtouch Gloves'
		$this.MapObjName         = 'wraithtouchgloves'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves that pass through enemies, leaving a chilling effect.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETitanforgedGauntlets : BEGauntlets {
	BETitanforgedGauntlets() : base() {
		$this.Name               = 'Titanforged Gauntlets'
		$this.MapObjName         = 'titanforgedgauntlets'
		$this.PurchasePrice      = 2400
		$this.SellPrice          = 1200
		$this.TargetStats        = @{
			[StatId]::Defense = 110
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets forged in a titan''s forge, immense and heavy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEtherealBands : BEGauntlets {
	BEEtherealBands() : base() {
		$this.Name               = 'Ethereal Bands'
		$this.MapObjName         = 'etherealbands'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bands composed of pure ether, granting magical prowess.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlademasterGauntlets : BEGauntlets {
	BEBlademasterGauntlets() : base() {
		$this.Name               = 'Blademaster Gauntlets'
		$this.MapObjName         = 'blademastergauntlets'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 10
			[StatId]::Accuracy = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets designed for precision and offensive strikes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOathswornGauntlets : BEGauntlets {
	BEOathswornGauntlets() : base() {
		$this.Name               = 'Oathsworn Gauntlets'
		$this.MapObjName         = 'oathsworngauntlets'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 48
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a sworn knight, unbreakable in their resolve.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESilverlightGloves : BEGauntlets {
	BESilverlightGloves() : base() {
		$this.Name               = 'Silverlight Gloves'
		$this.MapObjName         = 'silverlightgloves'
		$this.PurchasePrice      = 780
		$this.SellPrice          = 390
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 25
			[StatId]::Accuracy = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves that emanate a faint silver light, revealing hidden paths.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGuardiansGrip : BEGauntlets {
	BEGuardiansGrip() : base() {
		$this.Name               = 'Guardian''s Grip'
		$this.MapObjName         = 'guardiansgrip'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 36
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A firm grip for protecting others.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMysticRelicGauntlets : BEGauntlets {
	BEMysticRelicGauntlets() : base() {
		$this.Name               = 'Mystic Relic Gauntlets'
		$this.MapObjName         = 'mysticrelicgauntlets'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets from a forgotten civilization, holding ancient power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowdancerGloves : BEGauntlets {
	BEShadowdancerGloves() : base() {
		$this.Name               = 'Shadowdancer Gloves'
		$this.MapObjName         = 'shadowdancergloves'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 18
			[StatId]::Accuracy = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves allowing swift, silent movement through shadows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBattlewornGauntlets : BEGauntlets {
	BEBattlewornGauntlets() : base() {
		$this.Name               = 'Battleworn Gauntlets'
		$this.MapObjName         = 'battleworngauntlets'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that have seen countless battles, scarred but strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESpiritboundGauntlets : BEGauntlets {
	BESpiritboundGauntlets() : base() {
		$this.Name               = 'Spiritbound Gauntlets'
		$this.MapObjName         = 'spiritboundgauntlets'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that link to a spirit, enhancing defense and magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVenomousGrips : BEGauntlets {
	BEVenomousGrips() : base() {
		$this.Name               = 'Venomous Grips'
		$this.MapObjName         = 'venomousgrips'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 10
			[StatId]::Accuracy = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets dripping with faint poison, for subtle attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZealotsFists : BEGauntlets {
	BEZealotsFists() : base() {
		$this.Name               = 'Zealot''s Fists'
		$this.MapObjName         = 'zealotsfists'
		$this.PurchasePrice      = 520
		$this.SellPrice          = 260
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Fists of a righteous warrior, imbued with fervor.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEmeraldScaleGauntlets : BEGauntlets {
	BEEmeraldScaleGauntlets() : base() {
		$this.Name               = 'Emerald Scale Gauntlets'
		$this.MapObjName         = 'emeraldscalegauntlets'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made from vibrant green dragon scales.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFrostWeaverGloves : BEGauntlets {
	BEFrostWeaverGloves() : base() {
		$this.Name               = 'Frost Weaver Gloves'
		$this.MapObjName         = 'frostweavergloves'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves that manipulate ice, weaving chilling spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEOnyxClawGauntlets : BEGauntlets {
	BEOnyxClawGauntlets() : base() {
		$this.Name               = 'Onyx Claw Gauntlets'
		$this.MapObjName         = 'onyxclawgauntlets'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets with sharp onyx claws, for piercing attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStarshardGauntlets : BEGauntlets {
	BEStarshardGauntlets() : base() {
		$this.Name               = 'Starshard Gauntlets'
		$this.MapObjName         = 'starshardgauntlets'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets embedded with fragments of fallen stars, radiating cosmic energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMoonstoneBracers : BEGauntlets {
	BEMoonstoneBracers() : base() {
		$this.Name               = 'Moonstone Bracers'
		$this.MapObjName         = 'moonstonebracers'
		$this.PurchasePrice      = 980
		$this.SellPrice          = 490
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 38
			[StatId]::Accuracy = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bracers glowing with soft moonstone, aiding nocturnal endeavors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBlazeCoreGauntlets : BEGauntlets {
	BEBlazeCoreGauntlets() : base() {
		$this.Name               = 'Blaze Core Gauntlets'
		$this.MapObjName         = 'blazecoregauntlets'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets with an internal core of fire, burning steadily.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BENightfallGauntlets : BEGauntlets {
	BENightfallGauntlets() : base() {
		$this.Name               = 'Nightfall Gauntlets'
		$this.MapObjName         = 'nightfallgauntlets'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 25
			[StatId]::Accuracy = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that absorb surrounding light, cloaking the wearer.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAncientSteelGauntlets : BEGauntlets {
	BEAncientSteelGauntlets() : base() {
		$this.Name               = 'Ancient Steel Gauntlets'
		$this.MapObjName         = 'ancientsteelgauntlets'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of incredibly old, resilient steel.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivineEssenceGauntlets : BEGauntlets {
	BEDivineEssenceGauntlets() : base() {
		$this.Name               = 'Divine Essence Gauntlets'
		$this.MapObjName         = 'divineessencegauntlets'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 80
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets pulsating with pure divine essence, warding off evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidShardGloves : BEGauntlets {
	BEVoidShardGloves() : base() {
		$this.Name               = 'Void Shard Gloves'
		$this.MapObjName         = 'voidshardgloves'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 48
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves containing fragments of the void, disorienting foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrimsonGuardGauntlets : BEGauntlets {
	BECrimsonGuardGauntlets() : base() {
		$this.Name               = 'Crimson Guard Gauntlets'
		$this.MapObjName         = 'crimsonguardgauntlets'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a crimson guard, stained by many battles.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEnchantresssBands : BEGauntlets {
	BEEnchantresssBands() : base() {
		$this.Name               = 'Enchantress''s Bands'
		$this.MapObjName         = 'enchantresssbands'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 42
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bands for a powerful enchantress, boosting all magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BERuneforgedGauntlets : BEGauntlets {
	BERuneforgedGauntlets() : base() {
		$this.Name               = 'Runeforged Gauntlets'
		$this.MapObjName         = 'runeforgedgauntlets'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets forged with powerful runes, radiating mystical energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWhisperwindGauntlets : BEGauntlets {
	BEWhisperwindGauntlets() : base() {
		$this.Name               = 'Whisperwind Gauntlets'
		$this.MapObjName         = 'whisperwindgauntlets'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 20
			[StatId]::Accuracy = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets light as a breeze, granting unparalleled agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEarthshakerGauntlets : BEGauntlets {
	BEEarthshakerGauntlets() : base() {
		$this.Name               = 'Earthshaker Gauntlets'
		$this.MapObjName         = 'earthshakergauntlets'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that can cause minor tremors with each strike.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESoulfireGrips : BEGauntlets {
	BESoulfireGrips() : base() {
		$this.Name               = 'Soulfire Grips'
		$this.MapObjName         = 'soulfiregrips'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grips that burn with ethereal flame, searing spirits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonheartGauntlets : BEGauntlets {
	BEDragonheartGauntlets() : base() {
		$this.Name               = 'Dragonheart Gauntlets'
		$this.MapObjName         = 'dragonheartgauntlets'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 90
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets from the heart of a dragon, radiating power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECelestialTearGauntlets : BEGauntlets {
	BECelestialTearGauntlets() : base() {
		$this.Name               = 'Celestial Tear Gauntlets'
		$this.MapObjName         = 'celestialteargauntlets'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 95
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets said to be formed from a fallen star''s tear.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAbyssalPlateGauntlets : BEGauntlets {
	BEAbyssalPlateGauntlets() : base() {
		$this.Name               = 'Abyssal Plate Gauntlets'
		$this.MapObjName         = 'abyssalplategauntlets'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Defense = 100
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy gauntlets from the deepest abyss, extremely resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhoenixFeatherGloves : BEGauntlets {
	BEPhoenixFeatherGloves() : base() {
		$this.Name               = 'Phoenix Feather Gloves'
		$this.MapObjName         = 'phoenixfeathergloves'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 48
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves woven with phoenix feathers, offering light and healing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWarlordsGauntlets : BEGauntlets {
	BEWarlordsGauntlets() : base() {
		$this.Name               = 'Warlord''s Gauntlets'
		$this.MapObjName         = 'warlordsgauntlets'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 78
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a fearsome warlord, commanding respect.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDreamsteelGauntlets : BEGauntlets {
	BEDreamsteelGauntlets() : base() {
		$this.Name               = 'Dreamsteel Gauntlets'
		$this.MapObjName         = 'dreamsteelgauntlets'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets crafted from solidified dreams, both light and strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidstoneGauntlets : BEGauntlets {
	BEVoidstoneGauntlets() : base() {
		$this.Name               = 'Voidstone Gauntlets'
		$this.MapObjName         = 'voidstonegauntlets'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 80
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made of voidstone, absorbing all magical attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunpetalHandguards : BEGauntlets {
	BESunpetalHandguards() : base() {
		$this.Name               = 'Sunpetal Handguards'
		$this.MapObjName         = 'sunpetalhandguards'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 40
			[StatId]::Accuracy = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Handguards made from sun-kissed petals, vibrant and delicate.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECrimsonIronGauntlets : BEGauntlets {
	BECrimsonIronGauntlets() : base() {
		$this.Name               = 'Crimson Iron Gauntlets'
		$this.MapObjName         = 'crimsonirongauntlets'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 11
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Iron gauntlets dyed crimson, symbolizing ferocity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWovenVineGloves : BEGauntlets {
	BEWovenVineGloves() : base() {
		$this.Name               = 'Woven Vine Gloves'
		$this.MapObjName         = 'wovenvinegloves'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::Defense = 4
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves crafted from strong, flexible vines.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneSplinterGauntlets : BEGauntlets {
	BEStoneSplinterGauntlets() : base() {
		$this.Name               = 'Stone Splinter Gauntlets'
		$this.MapObjName         = 'stonesplintergauntlets'
		$this.PurchasePrice      = 220
		$this.SellPrice          = 110
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets reinforced with sharp stone splinters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELeatherBoundGauntlets : BEGauntlets {
	BELeatherBoundGauntlets() : base() {
		$this.Name               = 'Leather-Bound Gauntlets'
		$this.MapObjName         = 'leatherboundgauntlets'
		$this.PurchasePrice      = 160
		$this.SellPrice          = 80
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Leather gauntlets reinforced with metal bands.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETravelersBracers : BEGauntlets {
	BETravelersBracers() : base() {
		$this.Name               = 'Traveler''s Bracers'
		$this.MapObjName         = 'travelersbracers'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 3
			[StatId]::Accuracy = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Comfortable bracers for long journeys.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESimpleIronGauntlets : BEGauntlets {
	BESimpleIronGauntlets() : base() {
		$this.Name               = 'Simple Iron Gauntlets'
		$this.MapObjName         = 'simpleirongauntlets'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::Defense = 4
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Basic, unadorned iron gauntlets.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPaddedIronGauntlets : BEGauntlets {
	BEPaddedIronGauntlets() : base() {
		$this.Name               = 'Padded Iron Gauntlets'
		$this.MapObjName         = 'paddedirongauntlets'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Iron gauntlets with padded interior for comfort.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStuddedLeatherGauntlets : BEGauntlets {
	BEStuddedLeatherGauntlets() : base() {
		$this.Name               = 'Studded Leather Gauntlets'
		$this.MapObjName         = 'studdedleathergauntlets'
		$this.PurchasePrice      = 170
		$this.SellPrice          = 85
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Leather gauntlets with small metal studs for added defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBonePlatedGauntlets : BEGauntlets {
	BEBonePlatedGauntlets() : base() {
		$this.Name               = 'Bone-Plated Gauntlets'
		$this.MapObjName         = 'boneplatedgauntlets'
		$this.PurchasePrice      = 210
		$this.SellPrice          = 105
		$this.TargetStats        = @{
			[StatId]::Defense = 11
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made from hardened animal bones.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEScaleMailGauntlets : BEGauntlets {
	BEScaleMailGauntlets() : base() {
		$this.Name               = 'Scale Mail Gauntlets'
		$this.MapObjName         = 'scalemailgauntlets'
		$this.PurchasePrice      = 240
		$this.SellPrice          = 120
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets composed of overlapping metal scales.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHardenedLeatherGloves : BEGauntlets {
	BEHardenedLeatherGloves() : base() {
		$this.Name               = 'Hardened Leather Gloves'
		$this.MapObjName         = 'hardenedleathergloves'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves of exceptionally tough, treated leather.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEForgedSteelGauntlets : BEGauntlets {
	BEForgedSteelGauntlets() : base() {
		$this.Name               = 'Forged Steel Gauntlets'
		$this.MapObjName         = 'forgedsteelgauntlets'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Expertly forged steel gauntlets, balanced for battle.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEReinforcedMitts : BEGauntlets {
	BEReinforcedMitts() : base() {
		$this.Name               = 'Reinforced Mitts'
		$this.MapObjName         = 'reinforcedmitts'
		$this.PurchasePrice      = 190
		$this.SellPrice          = 95
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Mitts with extra padding, offering more protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoldiersGauntlets : BEGauntlets {
	BESoldiersGauntlets() : base() {
		$this.Name               = 'Soldier''s Gauntlets'
		$this.MapObjName         = 'soldiersgauntlets'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Standard issue gauntlets for army soldiers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEAcolytesBands : BEGauntlets {
	BEAcolytesBands() : base() {
		$this.Name               = 'Acolyte''s Bands'
		$this.MapObjName         = 'acolytesbands'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Simple bands for a magical apprentice, aiding their studies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMaraudersGrips : BEGauntlets {
	BEMaraudersGrips() : base() {
		$this.Name               = 'Marauder''s Grips'
		$this.MapObjName         = 'maraudersgrips'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Rough grips favored by raiders, for brutal attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESilverthreadGloves : BEGauntlets {
	BESilverthreadGloves() : base() {
		$this.Name               = 'Silverthread Gloves'
		$this.MapObjName         = 'silverthreadgloves'
		$this.PurchasePrice      = 320
		$this.SellPrice          = 160
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves woven with fine silver thread, light and defensive against dark magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBarbariansClaws : BEGauntlets {
	BEBarbariansClaws() : base() {
		$this.Name               = 'Barbarian''s Claws'
		$this.MapObjName         = 'barbariansclaws'
		$this.PurchasePrice      = 290
		$this.SellPrice          = 145
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crude gauntlets with sharpened edges, for close combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESquiresGauntlets : BEGauntlets {
	BESquiresGauntlets() : base() {
		$this.Name               = 'Squire''s Gauntlets'
		$this.MapObjName         = 'squiresgauntlets'
		$this.PurchasePrice      = 230
		$this.SellPrice          = 115
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets for a young knight in training.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEFightersCuffs : BEGauntlets {
	BEFightersCuffs() : base() {
		$this.Name               = 'Fighter''s Cuffs'
		$this.MapObjName         = 'fighterscuffs'
		$this.PurchasePrice      = 270
		$this.SellPrice          = 135
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Strong cuffs for brawlers and melee combatants.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESpellbindersGloves : BEGauntlets {
	BESpellbindersGloves() : base() {
		$this.Name               = 'Spellbinder''s Gloves'
		$this.MapObjName         = 'spellbindersgloves'
		$this.PurchasePrice      = 360
		$this.SellPrice          = 180
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves designed to assist in the casting of complex spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERangersBracers : BEGauntlets {
	BERangersBracers() : base() {
		$this.Name               = 'Ranger''s Bracers'
		$this.MapObjName         = 'rangersbracers'
		$this.PurchasePrice      = 260
		$this.SellPrice          = 130
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 8
			[StatId]::Accuracy = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light bracers for those who roam the wilderness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHeavyIronGauntlets : BEGauntlets {
	BEHeavyIronGauntlets() : base() {
		$this.Name               = 'Heavy Iron Gauntlets'
		$this.MapObjName         = 'heavyirongauntlets'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Very thick iron gauntlets, slow but incredibly tough.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMysticLeatherGauntlets : BEGauntlets {
	BEMysticLeatherGauntlets() : base() {
		$this.Name               = 'Mystic Leather Gauntlets'
		$this.MapObjName         = 'mysticleathergauntlets'
		$this.PurchasePrice      = 380
		$this.SellPrice          = 190
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Leather gauntlets infused with minor protective charms.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarmastersGauntlets : BEGauntlets {
	BEWarmastersGauntlets() : base() {
		$this.Name               = 'Warmaster''s Gauntlets'
		$this.MapObjName         = 'warmastersgauntlets'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a battle-hardened commander, commanding.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEForestGuardianGloves : BEGauntlets {
	BEForestGuardianGloves() : base() {
		$this.Name               = 'Forest Guardian Gloves'
		$this.MapObjName         = 'forestguardiangloves'
		$this.PurchasePrice      = 310
		$this.SellPrice          = 155
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves crafted from forest materials, blending with nature.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneGauntlets : BEGauntlets {
	BEStoneGauntlets() : base() {
		$this.Name               = 'Stone Gauntlets'
		$this.MapObjName         = 'stonegauntlets'
		$this.PurchasePrice      = 420
		$this.SellPrice          = 210
		$this.TargetStats        = @{
			[StatId]::Defense = 21
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets carved from solid stone, heavy and resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEFrostwornGrips : BEGauntlets {
	BEFrostwornGrips() : base() {
		$this.Name               = 'Frostworn Grips'
		$this.MapObjName         = 'frostworngrips'
		$this.PurchasePrice      = 370
		$this.SellPrice          = 185
		$this.TargetStats        = @{
			[StatId]::Defense = 19
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grips that retain a chilling touch from icy encounters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunkenSilverGauntlets : BEGauntlets {
	BESunkenSilverGauntlets() : base() {
		$this.Name               = 'Sunken Silver Gauntlets'
		$this.MapObjName         = 'sunkensilvergauntlets'
		$this.PurchasePrice      = 480
		$this.SellPrice          = 240
		$this.TargetStats        = @{
			[StatId]::Defense = 24
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Silver gauntlets recovered from a sunken ship, glimmering.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowscaleGloves : BEGauntlets {
	BEShadowscaleGloves() : base() {
		$this.Name               = 'Shadowscale Gloves'
		$this.MapObjName         = 'shadowscalegloves'
		$this.PurchasePrice      = 430
		$this.SellPrice          = 215
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 16
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves made from the scales of a shadowy creature, light and elusive.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKnightErrantGauntlets : BEGauntlets {
	BEKnightErrantGauntlets() : base() {
		$this.Name               = 'Knight-Errant Gauntlets'
		$this.MapObjName         = 'knighterrantgauntlets'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 26
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a wandering knight, reliable and well-kept.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEPriestesssCuffs : BEGauntlets {
	BEPriestesssCuffs() : base() {
		$this.Name               = 'Priestess''s Cuffs'
		$this.MapObjName         = 'priestessscuffs'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 11
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Cuffs worn by priestesses, aiding in benevolent magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDrakehideGloves : BEGauntlets {
	BEDrakehideGloves() : base() {
		$this.Name               = 'Drakehide Gloves'
		$this.MapObjName         = 'drakehidegloves'
		$this.PurchasePrice      = 460
		$this.SellPrice          = 230
		$this.TargetStats        = @{
			[StatId]::Defense = 23
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves made from the hide of a young drake, flexible and tough.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDesertScavengerGrips : BEGauntlets {
	BEDesertScavengerGrips() : base() {
		$this.Name               = 'Desert Scavenger Grips'
		$this.MapObjName         = 'desertscavengergrips'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 3
			[StatId]::Accuracy = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Makeshift grips used by desert scavengers, rugged.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStormchaserGauntlets : BEGauntlets {
	BEStormchaserGauntlets() : base() {
		$this.Name               = 'Stormchaser Gauntlets'
		$this.MapObjName         = 'stormchasergauntlets'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 27
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets designed to withstand and channel lightning.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMoonfallBands : BEGauntlets {
	BEMoonfallBands() : base() {
		$this.Name               = 'Moonfall Bands'
		$this.MapObjName         = 'moonfallbands'
		$this.PurchasePrice      = 490
		$this.SellPrice          = 245
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bands that softly glow, absorbing lunar energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGrizzledVeteransGauntlets : BEGauntlets {
	BEGrizzledVeteransGauntlets() : base() {
		$this.Name               = 'Grizzled Veteran''s Gauntlets'
		$this.MapObjName         = 'grizzledveteransgauntlets'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a truly ancient warrior, scarred and strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEAetherialGauntlets : BEGauntlets {
	BEAetherialGauntlets() : base() {
		$this.Name               = 'Aetherial Gauntlets'
		$this.MapObjName         = 'aetherialgauntlets'
		$this.PurchasePrice      = 520
		$this.SellPrice          = 260
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets infused with faint Aether, granting resilience.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlazeforgedGrips : BEGauntlets {
	BEBlazeforgedGrips() : base() {
		$this.Name               = 'Blazeforged Grips'
		$this.MapObjName         = 'blazeforgedgrips'
		$this.PurchasePrice      = 580
		$this.SellPrice          = 290
		$this.TargetStats        = @{
			[StatId]::Defense = 29
			[StatId]::MagicDefense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grips heated in intense flames, maintaining their warmth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDeepruneGauntlets : BEGauntlets {
	BEDeepruneGauntlets() : base() {
		$this.Name               = 'Deeprune Gauntlets'
		$this.MapObjName         = 'deeprunegauntlets'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets with deeply etched runes, enhancing their power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiritwalkerHandguards : BEGauntlets {
	BESpiritwalkerHandguards() : base() {
		$this.Name               = 'Spiritwalker Handguards'
		$this.MapObjName         = 'spiritwalkerhandguards'
		$this.PurchasePrice      = 540
		$this.SellPrice          = 270
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 24
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Handguards aiding those who commune with spirits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIronboundGauntlets : BEGauntlets {
	BEIronboundGauntlets() : base() {
		$this.Name               = 'Ironbound Gauntlets'
		$this.MapObjName         = 'ironboundgauntlets'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 17
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets tightly bound with iron strips, very durable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWyvernTailGauntlets : BEGauntlets {
	BEWyvernTailGauntlets() : base() {
		$this.Name               = 'Wyvern Tail Gauntlets'
		$this.MapObjName         = 'wyverntailgauntlets'
		$this.PurchasePrice      = 620
		$this.SellPrice          = 310
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 10
			[StatId]::Accuracy = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets ending in a segmented wyvern tail, for agile strikes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunfireGloves : BEGauntlets {
	BESunfireGloves() : base() {
		$this.Name               = 'Sunfire Gloves'
		$this.MapObjName         = 'sunfiregloves'
		$this.PurchasePrice      = 510
		$this.SellPrice          = 255
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 26
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves that radiate soft warmth, comforting and protective.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBarbarianKingGauntlets : BEGauntlets {
	BEBarbarianKingGauntlets() : base() {
		$this.Name               = 'Barbarian King Gauntlets'
		$this.MapObjName         = 'barbariankinggauntlets'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets fit for a tribal leader, raw and powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEShadeclothGloves : BEGauntlets {
	BEShadeclothGloves() : base() {
		$this.Name               = 'Shadecloth Gloves'
		$this.MapObjName         = 'shadeclothgloves'
		$this.PurchasePrice      = 470
		$this.SellPrice          = 235
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 19
			[StatId]::Accuracy = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves made of cloth spun from shadows, very stealthy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrystalSoulGauntlets : BEGauntlets {
	BECrystalSoulGauntlets() : base() {
		$this.Name               = 'Crystal Soul Gauntlets'
		$this.MapObjName         = 'crystalsoulgauntlets'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets embedded with a small crystal, reflecting magical attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGoliathGauntlets : BEGauntlets {
	BEGoliathGauntlets() : base() {
		$this.Name               = 'Goliath Gauntlets'
		$this.MapObjName         = 'goliathgauntlets'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Massive gauntlets designed for a giant''s strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEOraclesVisions : BEGauntlets {
	BEOraclesVisions() : base() {
		$this.Name               = 'Oracle''s Visions'
		$this.MapObjName         = 'oraclesvisions'
		$this.PurchasePrice      = 630
		$this.SellPrice          = 315
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 30
			[StatId]::Accuracy = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves that briefly glimpse the future, boosting evasion.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECrimsonDeathGauntlets : BEGauntlets {
	BECrimsonDeathGauntlets() : base() {
		$this.Name               = 'Crimson Death Gauntlets'
		$this.MapObjName         = 'crimsondeathgauntlets'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 42
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a formidable executioner, stained red.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStormheartGauntlets : BEGauntlets {
	BEStormheartGauntlets() : base() {
		$this.Name               = 'Stormheart Gauntlets'
		$this.MapObjName         = 'stormheartgauntlets'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that seem to beat with a storm''s heart, powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEldritchBands : BEGauntlets {
	BEEldritchBands() : base() {
		$this.Name               = 'Eldritch Bands'
		$this.MapObjName         = 'eldritchbands'
		$this.PurchasePrice      = 780
		$this.SellPrice          = 390
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bands pulsing with otherworldly energy, dangerous yet powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlacialSpikeGauntlets : BEGauntlets {
	BEGlacialSpikeGauntlets() : base() {
		$this.Name               = 'Glacial Spike Gauntlets'
		$this.MapObjName         = 'glacialspikegauntlets'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 48
			[StatId]::MagicDefense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets adorned with sharp ice spikes, chilling to touch.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECelestialTouchGloves : BEGauntlets {
	BECelestialTouchGloves() : base() {
		$this.Name               = 'Celestial Touch Gloves'
		$this.MapObjName         = 'celestialtouchgloves'
		$this.PurchasePrice      = 820
		$this.SellPrice          = 410
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 36
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves that feel like a gentle touch from the heavens.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEAbyssalCoreGauntlets : BEGauntlets {
	BEAbyssalCoreGauntlets() : base() {
		$this.Name               = 'Abyssal Core Gauntlets'
		$this.MapObjName         = 'abyssalcoregauntlets'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets with a core of abyssal energy, consuming magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERuneboundGauntlets : BEGauntlets {
	BERuneboundGauntlets() : base() {
		$this.Name               = 'Runebound Gauntlets'
		$this.MapObjName         = 'runeboundgauntlets'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
			[StatId]::Defense = 52
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets strongly bound by ancient runes, powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulsteelGauntlets : BEGauntlets {
	BESoulsteelGauntlets() : base() {
		$this.Name               = 'Soulsteel Gauntlets'
		$this.MapObjName         = 'soulsteelgauntlets'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets forged from purified souls, radiant and strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonKingGauntlets : BEGauntlets {
	BEDragonKingGauntlets() : base() {
		$this.Name               = 'Dragon King Gauntlets'
		$this.MapObjName         = 'dragonkinggauntlets'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets fit for a true dragon king, absolute power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEPhoenixSoulGauntlets : BEGauntlets {
	BEPhoenixSoulGauntlets() : base() {
		$this.Name               = 'Phoenix Soul Gauntlets'
		$this.MapObjName         = 'phoenixsoulgauntlets'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets with the spirit of a phoenix, granting rebirth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETitanbloodGauntlets : BEGauntlets {
	BETitanbloodGauntlets() : base() {
		$this.Name               = 'Titanblood Gauntlets'
		$this.MapObjName         = 'titanbloodgauntlets'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets stained with titan blood, granting immense strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStarlightWeaveGloves : BEGauntlets {
	BEStarlightWeaveGloves() : base() {
		$this.Name               = 'Starlight Weave Gloves'
		$this.MapObjName         = 'starlightweavegloves'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 42
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves woven from starlight, shimmering and ethereal.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEVoidShroudedGauntlets : BEGauntlets {
	BEVoidShroudedGauntlets() : base() {
		$this.Name               = 'Void Shrouded Gauntlets'
		$this.MapObjName         = 'voidshroudedgauntlets'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 30
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets entirely cloaked in void energy, hard to perceive.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHolyVambraces : BEGauntlets {
	BEHolyVambraces() : base() {
		$this.Name               = 'Holy Vambraces'
		$this.MapObjName         = 'holyvambraces'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::Defense = 62
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Vambraces blessed by sacred rites, warding off evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInfernoCoreGauntlets : BEGauntlets {
	BEInfernoCoreGauntlets() : base() {
		$this.Name               = 'Inferno Core Gauntlets'
		$this.MapObjName         = 'infernocoregauntlets'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 33
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets with a perpetual internal flame, burning hot.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESeraphimsEmbrace : BEGauntlets {
	BESeraphimsEmbrace() : base() {
		$this.Name               = 'Seraphim''s Embrace'
		$this.MapObjName         = 'seraphimsembrace'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 48
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Feathery gloves that feel like an angelic embrace.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDreadskullGauntlets : BEGauntlets {
	BEDreadskullGauntlets() : base() {
		$this.Name               = 'Dreadskull Gauntlets'
		$this.MapObjName         = 'dreadskullgauntlets'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 80
			[StatId]::MagicDefense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets shaped like skulls, exuding fear.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEAstralGauntlets : BEGauntlets {
	BEAstralGauntlets() : base() {
		$this.Name               = 'Astral Gauntlets'
		$this.MapObjName         = 'astralgauntlets'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets connected to the astral plane, enhancing spiritual power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOnyxHeartGauntlets : BEGauntlets {
	BEOnyxHeartGauntlets() : base() {
		$this.Name               = 'Onyx Heart Gauntlets'
		$this.MapObjName         = 'onyxheartgauntlets'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 85
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets with an onyx core, drawing dark energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZephyrSoulGauntlets : BEGauntlets {
	BEZephyrSoulGauntlets() : base() {
		$this.Name               = 'Zephyr Soul Gauntlets'
		$this.MapObjName         = 'zephyrsoulgauntlets'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 35
			[StatId]::Accuracy = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets imbued with the soul of the wind, incredibly light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEarthboundGauntlets : BEGauntlets {
	BEEarthboundGauntlets() : base() {
		$this.Name               = 'Earthbound Gauntlets'
		$this.MapObjName         = 'earthboundgauntlets'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 90
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets rooted to the earth, granting stability.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BELunarEclipseGauntlets : BEGauntlets {
	BELunarEclipseGauntlets() : base() {
		$this.Name               = 'Lunar Eclipse Gauntlets'
		$this.MapObjName         = 'lunareclipsegauntlets'
		$this.PurchasePrice      = 1450
		$this.SellPrice          = 725
		$this.TargetStats        = @{
			[StatId]::Defense = 68
			[StatId]::MagicDefense = 32
			[StatId]::Accuracy = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that dim the light around them, aiding stealth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESolarFlareGauntlets : BEGauntlets {
	BESolarFlareGauntlets() : base() {
		$this.Name               = 'Solar Flare Gauntlets'
		$this.MapObjName         = 'solarflaregauntlets'
		$this.PurchasePrice      = 1550
		$this.SellPrice          = 775
		$this.TargetStats        = @{
			[StatId]::Defense = 72
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that periodically unleash bursts of sunlight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEAbyssalHandguards : BEGauntlets {
	BEAbyssalHandguards() : base() {
		$this.Name               = 'Abyssal Handguards'
		$this.MapObjName         = 'abyssalhandguards'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 98
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Handguards from the deepest, darkest pits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivineAegisGloves : BEGauntlets {
	BEDivineAegisGloves() : base() {
		$this.Name               = 'Divine Aegis Gloves'
		$this.MapObjName         = 'divineaegisgloves'
		$this.PurchasePrice      = 1650
		$this.SellPrice          = 825
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 52
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves that provide an invisible shield, divinely powered.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGrimstoneGauntlets : BEGauntlets {
	BEGrimstoneGauntlets() : base() {
		$this.Name               = 'Grimstone Gauntlets'
		$this.MapObjName         = 'grimstonegauntlets'
		$this.PurchasePrice      = 1750
		$this.SellPrice          = 875
		$this.TargetStats        = @{
			[StatId]::Defense = 82
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets carved from cursed stone, heavy and menacing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEbonShadowGauntlets : BEGauntlets {
	BEEbonShadowGauntlets() : base() {
		$this.Name               = 'Ebon Shadow Gauntlets'
		$this.MapObjName         = 'ebonshadowgauntlets'
		$this.PurchasePrice      = 1850
		$this.SellPrice          = 925
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 35
			[StatId]::Accuracy = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that melt into shadows, making the wearer unseen.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMythrilWeaveGloves : BEGauntlets {
	BEMythrilWeaveGloves() : base() {
		$this.Name               = 'Mythril Weave Gloves'
		$this.MapObjName         = 'mythrilweavegloves'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 38
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves woven from fine mythril, light and extremely strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAdamantiteFistGauntlets : BEGauntlets {
	BEAdamantiteFistGauntlets() : base() {
		$this.Name               = 'Adamantite Fist Gauntlets'
		$this.MapObjName         = 'adamantitefistgauntlets'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 105
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made of pure adamantite, unyielding.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECelestialZenithGauntlets : BEGauntlets {
	BECelestialZenithGauntlets() : base() {
		$this.Name               = 'Celestial Zenith Gauntlets'
		$this.MapObjName         = 'celestialzenithgauntlets'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Defense = 100
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that draw power from the highest heavens.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidHeartGauntlets : BEGauntlets {
	BEVoidHeartGauntlets() : base() {
		$this.Name               = 'Void Heart Gauntlets'
		$this.MapObjName         = 'voidheartgauntlets'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::Defense = 105
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that house a fragment of the void, immense power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonsBreathGauntlets : BEGauntlets {
	BEDragonsBreathGauntlets() : base() {
		$this.Name               = 'Dragon''s Breath Gauntlets'
		$this.MapObjName         = 'dragonsbreathgauntlets'
		$this.PurchasePrice      = 2300
		$this.SellPrice          = 1150
		$this.TargetStats        = @{
			[StatId]::Defense = 110
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets imbued with a dragon''s fiery breath.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarfireGauntlets : BEGauntlets {
	BEStarfireGauntlets() : base() {
		$this.Name               = 'Starfire Gauntlets'
		$this.MapObjName         = 'starfiregauntlets'
		$this.PurchasePrice      = 2400
		$this.SellPrice          = 1200
		$this.TargetStats        = @{
			[StatId]::Defense = 115
			[StatId]::MagicDefense = 42
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets glowing with cosmic fire, scorching foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETrueDivineGauntlets : BEGauntlets {
	BETrueDivineGauntlets() : base() {
		$this.Name               = 'True Divine Gauntlets'
		$this.MapObjName         = 'truedivinegauntlets'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Defense = 120
			[StatId]::MagicDefense = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets said to be worn by gods, ultimate protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulEaterGauntlets : BEGauntlets {
	BESoulEaterGauntlets() : base() {
		$this.Name               = 'Soul Eater Gauntlets'
		$this.MapObjName         = 'souleatergauntlets'
		$this.PurchasePrice      = 2600
		$this.SellPrice          = 1300
		$this.TargetStats        = @{
			[StatId]::Defense = 125
			[StatId]::MagicDefense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that devour the souls of defeated enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWorldshaperGauntlets : BEGauntlets {
	BEWorldshaperGauntlets() : base() {
		$this.Name               = 'Worldshaper Gauntlets'
		$this.MapObjName         = 'worldshapergauntlets'
		$this.PurchasePrice      = 2700
		$this.SellPrice          = 1350
		$this.TargetStats        = @{
			[StatId]::Defense = 130
			[StatId]::MagicDefense = 65
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that hum with world-shaping energy, immense power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunkenKingsGauntlets : BEGauntlets {
	BESunkenKingsGauntlets() : base() {
		$this.Name               = 'Sunken King''s Gauntlets'
		$this.MapObjName         = 'sunkenkingsgauntlets'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a forgotten underwater king, granting aquatic power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESpiritGuardianGauntlets : BEGauntlets {
	BESpiritGuardianGauntlets() : base() {
		$this.Name               = 'Spirit Guardian Gauntlets'
		$this.MapObjName         = 'spiritguardiangauntlets'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets imbued with ancient guardian spirits, protecting all.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWhisperwindGauntletsII : BEGauntlets {
	BEWhisperwindGauntletsII() : base() {
		$this.Name               = 'Whisperwind Gauntlets II'
		$this.MapObjName         = 'whisperwindgauntletsii'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 25
			[StatId]::Accuracy = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Improved Whisperwind Gauntlets, even swifter.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrimsonFuryGauntlets : BEGauntlets {
	BECrimsonFuryGauntlets() : base() {
		$this.Name               = 'Crimson Fury Gauntlets'
		$this.MapObjName         = 'crimsonfurygauntlets'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that boil with controlled rage, increasing strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEmeraldSoulGauntlets : BEGauntlets {
	BEEmeraldSoulGauntlets() : base() {
		$this.Name               = 'Emerald Soul Gauntlets'
		$this.MapObjName         = 'emeraldsoulgauntlets'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets pulsating with emerald energy, enhancing vitality.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEOnyxShadowGauntlets : BEGauntlets {
	BEOnyxShadowGauntlets() : base() {
		$this.Name               = 'Onyx Shadow Gauntlets'
		$this.MapObjName         = 'onyxshadowgauntlets'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of pure shadow, absorbing all light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarfallGauntletsII : BEGauntlets {
	BEStarfallGauntletsII() : base() {
		$this.Name               = 'Starfall Gauntlets II'
		$this.MapObjName         = 'starfallgauntletsii'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Enhanced Starfall Gauntlets, stronger cosmic energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMoonstoneEclipseGauntlets : BEGauntlets {
	BEMoonstoneEclipseGauntlets() : base() {
		$this.Name               = 'Moonstone Eclipse Gauntlets'
		$this.MapObjName         = 'moonstoneeclipsegauntlets'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 40
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bracers that absorb moonlight, enhancing night vision and stealth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBlazecoreGauntletsII : BEGauntlets {
	BEBlazecoreGauntletsII() : base() {
		$this.Name               = 'Blazecore Gauntlets II'
		$this.MapObjName         = 'blazecoregauntletsii'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 80
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Improved Blazecore Gauntlets, hotter and more resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BENightfallGauntletsII : BEGauntlets {
	BENightfallGauntletsII() : base() {
		$this.Name               = 'Nightfall Gauntlets II'
		$this.MapObjName         = 'nightfallgauntletsii'
		$this.PurchasePrice      = 1450
		$this.SellPrice          = 725
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 30
			[StatId]::Accuracy = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More potent Nightfall Gauntlets, deeper shadows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAncientSteelGauntletsII : BEGauntlets {
	BEAncientSteelGauntletsII() : base() {
		$this.Name               = 'Ancient Steel Gauntlets II'
		$this.MapObjName         = 'ancientsteelgauntletsii'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Further reinforced Ancient Steel Gauntlets, nearly unbreakable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivineRadianceGauntlets : BEGauntlets {
	BEDivineRadianceGauntlets() : base() {
		$this.Name               = 'Divine Radiance Gauntlets'
		$this.MapObjName         = 'divineradiancegauntlets'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 85
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets emanating intense divine light, scorching foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidShardGauntletsII : BEGauntlets {
	BEVoidShardGauntletsII() : base() {
		$this.Name               = 'Void Shard Gauntlets II'
		$this.MapObjName         = 'voidshardgauntletsii'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 52
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More powerful Void Shard Gauntlets, stronger disorientation.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrimsonGuardGauntletsII : BEGauntlets {
	BECrimsonGuardGauntletsII() : base() {
		$this.Name               = 'Crimson Guard Gauntlets II'
		$this.MapObjName         = 'crimsonguardgauntletsii'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Superior Crimson Guard Gauntlets, even more ferocious.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEnchantresssEmbrace : BEGauntlets {
	BEEnchantresssEmbrace() : base() {
		$this.Name               = 'Enchantress''s Embrace'
		$this.MapObjName         = 'enchantresssembrace'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Advanced bands for a master enchantress, supreme magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BERuneforgedGauntletsII : BEGauntlets {
	BERuneforgedGauntletsII() : base() {
		$this.Name               = 'Runeforged Gauntlets II'
		$this.MapObjName         = 'runeforgedgauntletsii'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More powerful Runeforged Gauntlets, stronger mystical energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEarthshakerGauntletsII : BEGauntlets {
	BEEarthshakerGauntletsII() : base() {
		$this.Name               = 'Earthshaker Gauntlets II'
		$this.MapObjName         = 'earthshakergauntletsii'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Improved Earthshaker Gauntlets, causing stronger tremors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESoulfireGripsII : BEGauntlets {
	BESoulfireGripsII() : base() {
		$this.Name               = 'Soulfire Grips II'
		$this.MapObjName         = 'soulfiregripsii'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More potent Soulfire Grips, searing spirits with greater intensity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonheartGauntletsII : BEGauntlets {
	BEDragonheartGauntletsII() : base() {
		$this.Name               = 'Dragonheart Gauntlets II'
		$this.MapObjName         = 'dragonheartgauntletsii'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 95
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets radiating even greater draconic power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECelestialTearGauntletsII : BEGauntlets {
	BECelestialTearGauntletsII() : base() {
		$this.Name               = 'Celestial Tear Gauntlets II'
		$this.MapObjName         = 'celestialteargauntletsii'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Defense = 100
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Enhanced Celestial Tear Gauntlets, drawing more cosmic power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAbyssalPlateGauntletsII : BEGauntlets {
	BEAbyssalPlateGauntletsII() : base() {
		$this.Name               = 'Abyssal Plate Gauntlets II'
		$this.MapObjName         = 'abyssalplategauntletsii'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::Defense = 105
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Further hardened Abyssal Plate Gauntlets, incredibly resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhoenixFeatherGlovesII : BEGauntlets {
	BEPhoenixFeatherGlovesII() : base() {
		$this.Name               = 'Phoenix Feather Gloves II'
		$this.MapObjName         = 'phoenixfeatherglovesii'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 52
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More protective Phoenix Feather Gloves, enhanced healing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWarlordsFuryGauntlets : BEGauntlets {
	BEWarlordsFuryGauntlets() : base() {
		$this.Name               = 'Warlord''s Fury Gauntlets'
		$this.MapObjName         = 'warlordsfurygauntlets'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 82
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets boiling with warlord''s fury, inspiring fear.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDreamsteelGauntletsII : BEGauntlets {
	BEDreamsteelGauntletsII() : base() {
		$this.Name               = 'Dreamsteel Gauntlets II'
		$this.MapObjName         = 'dreamsteelgauntletsii'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 80
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Improved Dreamsteel Gauntlets, lighter and stronger.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidstoneGauntletsII : BEGauntlets {
	BEVoidstoneGauntletsII() : base() {
		$this.Name               = 'Voidstone Gauntlets II'
		$this.MapObjName         = 'voidstonegauntletsii'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 85
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Superior Voidstone Gauntlets, absorbing more magical attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunpetalHandguardsII : BEGauntlets {
	BESunpetalHandguardsII() : base() {
		$this.Name               = 'Sunpetal Handguards II'
		$this.MapObjName         = 'sunpetalhandguardsii'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 45
			[StatId]::Accuracy = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More vibrant Sunpetal Handguards, enhanced healing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEHeavyChainmailGauntlets : BEGauntlets {
	BEHeavyChainmailGauntlets() : base() {
		$this.Name               = 'Heavy Chainmail Gauntlets'
		$this.MapObjName         = 'heavychainmailgauntlets'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Dense chainmail gauntlets, offering robust defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlessedSilverGauntlets : BEGauntlets {
	BEBlessedSilverGauntlets() : base() {
		$this.Name               = 'Blessed Silver Gauntlets'
		$this.MapObjName         = 'blessedsilvergauntlets'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made of purified silver, effective against undead.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreadKnightGauntlets : BEGauntlets {
	BEDreadKnightGauntlets() : base() {
		$this.Name               = 'Dread Knight Gauntlets'
		$this.MapObjName         = 'dreadknightgauntlets'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a fearsome dark knight, chilling to the touch.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEFeyIronGauntlets : BEGauntlets {
	BEFeyIronGauntlets() : base() {
		$this.Name               = 'Fey Iron Gauntlets'
		$this.MapObjName         = 'feyirongauntlets'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets crafted from special Fey iron, resistant to magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESerpentTongueGloves : BEGauntlets {
	BESerpentTongueGloves() : base() {
		$this.Name               = 'Serpent Tongue Gloves'
		$this.MapObjName         = 'serpenttonguegloves'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 12
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves with a subtle serpentine pattern, aiding in swiftness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrusadersMightGauntlets : BEGauntlets {
	BECrusadersMightGauntlets() : base() {
		$this.Name               = 'Crusader''s Might Gauntlets'
		$this.MapObjName         = 'crusadersmightgauntlets'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavily fortified gauntlets of a valiant crusader.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMoonlitDewGloves : BEGauntlets {
	BEMoonlitDewGloves() : base() {
		$this.Name               = 'Moonlit Dew Gloves'
		$this.MapObjName         = 'moonlitdewgloves'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves shimmering with moonlight dew, granting restorative power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESentinelsBulwark : BEGauntlets {
	BESentinelsBulwark() : base() {
		$this.Name               = 'Sentinel''s Bulwark'
		$this.MapObjName         = 'sentinelsbulwark'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 42
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that seem to project a defensive aura.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEWildheartGauntlets : BEGauntlets {
	BEWildheartGauntlets() : base() {
		$this.Name               = 'Wildheart Gauntlets'
		$this.MapObjName         = 'wildheartgauntlets'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 26
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made from primal beast hide, granting strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThunderclapGauntlets : BEGauntlets {
	BEThunderclapGauntlets() : base() {
		$this.Name               = 'Thunderclap Gauntlets'
		$this.MapObjName         = 'thunderclapgauntlets'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that resonate with thunder, stunning foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiritwovenArmbands : BEGauntlets {
	BESpiritwovenArmbands() : base() {
		$this.Name               = 'Spiritwoven Armbands'
		$this.MapObjName         = 'spiritwovenarmbands'
		$this.PurchasePrice      = 720
		$this.SellPrice          = 360
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 33
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Armbands intricately woven with spiritual energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDragonshardGauntlets : BEGauntlets {
	BEDragonshardGauntlets() : base() {
		$this.Name               = 'Dragonshard Gauntlets'
		$this.MapObjName         = 'dragonshardgauntlets'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets embedded with fragments of dragon shards, immensely powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarforgedVambraces : BEGauntlets {
	BEStarforgedVambraces() : base() {
		$this.Name               = 'Starforged Vambraces'
		$this.MapObjName         = 'starforgedvambraces'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 22
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Vambraces forged under a specific constellation, granting luck.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGravecallerGauntlets : BEGauntlets {
	BEGravecallerGauntlets() : base() {
		$this.Name               = 'Gravecaller Gauntlets'
		$this.MapObjName         = 'gravecallergauntlets'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that hum with the whispers of the deceased, aiding necromancy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECelestialBlessingGauntlets : BEGauntlets {
	BECelestialBlessingGauntlets() : base() {
		$this.Name               = 'Celestial Blessing Gauntlets'
		$this.MapObjName         = 'celestialblessinggauntlets'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 78
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets blessed by celestial beings, divine protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidheartGrips : BEGauntlets {
	BEVoidheartGrips() : base() {
		$this.Name               = 'Voidheart Grips'
		$this.MapObjName         = 'voidheartgrips'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 82
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grips that feel cold to the touch, connected to the void.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArcaneSentinelGauntlets : BEGauntlets {
	BEArcaneSentinelGauntlets() : base() {
		$this.Name               = 'Arcane Sentinel Gauntlets'
		$this.MapObjName         = 'arcanesentinelgauntlets'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 42
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of an ancient order of arcane guardians, robust.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELionheartVambraces : BEGauntlets {
	BELionheartVambraces() : base() {
		$this.Name               = 'Lionheart Vambraces'
		$this.MapObjName         = 'lionheartvambraces'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 72
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Vambraces bearing the crest of a lion, inspiring courage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEValkyriesWingsGloves : BEGauntlets {
	BEValkyriesWingsGloves() : base() {
		$this.Name               = 'Valkyrie''s Wings Gloves'
		$this.MapObjName         = 'valkyrieswingsgloves'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 45
			[StatId]::Accuracy = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves with feather-like lightness, allowing swift movement.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESerpentfangGauntlets : BEGauntlets {
	BESerpentfangGauntlets() : base() {
		$this.Name               = 'Serpentfang Gauntlets'
		$this.MapObjName         = 'serpentfanggauntlets'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 38
			[StatId]::MagicDefense = 15
			[StatId]::Accuracy = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets with venomous serpent fangs, for deadly strikes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGolemLordGauntlets : BEGauntlets {
	BEGolemLordGauntlets() : base() {
		$this.Name               = 'Golem Lord Gauntlets'
		$this.MapObjName         = 'golemlordgauntlets'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a golem lord, commanding immense strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMoonpetalGauntlets : BEGauntlets {
	BEMoonpetalGauntlets() : base() {
		$this.Name               = 'Moonpetal Gauntlets'
		$this.MapObjName         = 'moonpetalgauntlets'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 35
			[StatId]::Accuracy = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made of moonlight-infused petals, magically potent.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECenturionsLegacyGauntlets : BEGauntlets {
	BECenturionsLegacyGauntlets() : base() {
		$this.Name               = 'Centurion''s Legacy Gauntlets'
		$this.MapObjName         = 'centurionslegacygauntlets'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a legendary centurion, carrying his might.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESpellboundGauntletsII : BEGauntlets {
	BESpellboundGauntletsII() : base() {
		$this.Name               = 'Spellbound Gauntlets II'
		$this.MapObjName         = 'spellboundgauntletsii'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 33
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More potent Spellbound Gauntlets, stronger protective spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIronGuardGauntletsII : BEGauntlets {
	BEIronGuardGauntletsII() : base() {
		$this.Name               = 'Iron Guard Gauntlets II'
		$this.MapObjName         = 'ironguardgauntletsii'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Reinforced Iron Guard Gauntlets, sturdier.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBrigandsPlatedBracers : BEGauntlets {
	BEBrigandsPlatedBracers() : base() {
		$this.Name               = 'Brigand''s Plated Bracers'
		$this.MapObjName         = 'brigandsplatedbracers'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy plated bracers favored by elite brigands.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZealotsVengeanceGauntlets : BEGauntlets {
	BEZealotsVengeanceGauntlets() : base() {
		$this.Name               = 'Zealot''s Vengeance Gauntlets'
		$this.MapObjName         = 'zealotsvengeancegauntlets'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a vengeful zealot, empowering their strikes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESilkenEnchantmentGloves : BEGauntlets {
	BESilkenEnchantmentGloves() : base() {
		$this.Name               = 'Silken Enchantment Gloves'
		$this.MapObjName         = 'silkenenchantmentgloves'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Silken gloves imbued with potent enchantments, boosting magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEApprenticesRunebands : BEGauntlets {
	BEApprenticesRunebands() : base() {
		$this.Name               = 'Apprentice''s Runebands'
		$this.MapObjName         = 'apprenticesrunebands'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Basic runebands for a magic apprentice, aiding their studies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWanderersIronGauntlets : BEGauntlets {
	BEWanderersIronGauntlets() : base() {
		$this.Name               = 'Wanderer''s Iron Gauntlets'
		$this.MapObjName         = 'wanderersirongauntlets'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Iron gauntlets for a seasoned wanderer, robust and practical.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFabledChampionGauntlets : BEGauntlets {
	BEFabledChampionGauntlets() : base() {
		$this.Name               = 'Fabled Champion Gauntlets'
		$this.MapObjName         = 'fabledchampiongauntlets'
		$this.PurchasePrice      = 2800
		$this.SellPrice          = 1400
		$this.TargetStats        = @{
			[StatId]::Defense = 135
			[StatId]::MagicDefense = 70
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a fabled champion, unmatched power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGrimskullLordGauntlets : BEGauntlets {
	BEGrimskullLordGauntlets() : base() {
		$this.Name               = 'Grimskull Lord Gauntlets'
		$this.MapObjName         = 'grimskulllordgauntlets'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 85
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a grimskull lord, radiating immense dread.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECrystalweaveGlovesII : BEGauntlets {
	BECrystalweaveGlovesII() : base() {
		$this.Name               = 'Crystalweave Gloves II'
		$this.MapObjName         = 'crystalweaveglovesii'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Improved Crystalweave Gloves, enhancing focus further.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDragonswornGauntletsII : BEGauntlets {
	BEDragonswornGauntletsII() : base() {
		$this.Name               = 'Dragonsworn Gauntlets II'
		$this.MapObjName         = 'dragonsworngauntletsii'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 90
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More potent Dragonsworn Gauntlets, stronger loyalty to dragons.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEternalFlameGauntletsII : BEGauntlets {
	BEEternalFlameGauntletsII() : base() {
		$this.Name               = 'Eternal Flame Gauntlets II'
		$this.MapObjName         = 'eternalflamegauntletsii'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 95
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Stronger Eternal Flame Gauntlets, more intense heat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWhispersteelGauntletsII : BEGauntlets {
	BEWhispersteelGauntletsII() : base() {
		$this.Name               = 'Whispersteel Gauntlets II'
		$this.MapObjName         = 'whispersteelgauntletsii'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 30
			[StatId]::Accuracy = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Further enhanced Whispersteel Gauntlets, more silent and potent.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneskinGripsII : BEGauntlets {
	BEStoneskinGripsII() : base() {
		$this.Name               = 'Stoneskin Grips II'
		$this.MapObjName         = 'stoneskingripsii'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::Defense = 62
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More powerful Stoneskin Grips, turning skin to tougher stone.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGoddesssTouchGauntlets : BEGauntlets {
	BEGoddesssTouchGauntlets() : base() {
		$this.Name               = 'Goddess''s Touch Gauntlets'
		$this.MapObjName         = 'goddessstouchgauntlets'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Defense = 100
			[StatId]::MagicDefense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets said to be touched by a goddess, supreme defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEChampionsGloryGauntlets : BEGauntlets {
	BEChampionsGloryGauntlets() : base() {
		$this.Name               = 'Champion''s Glory Gauntlets'
		$this.MapObjName         = 'championsglorygauntlets'
		$this.PurchasePrice      = 2300
		$this.SellPrice          = 1150
		$this.TargetStats        = @{
			[StatId]::Defense = 105
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets radiating the glory of a champion, inspiring allies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWraithtouchGlovesII : BEGauntlets {
	BEWraithtouchGlovesII() : base() {
		$this.Name               = 'Wraithtouch Gloves II'
		$this.MapObjName         = 'wraithtouchglovesii'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More potent Wraithtouch Gloves, chilling effect intensified.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETitanforgedGauntletsII : BEGauntlets {
	BETitanforgedGauntletsII() : base() {
		$this.Name               = 'Titanforged Gauntlets II'
		$this.MapObjName         = 'titanforgedgauntletsii'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Defense = 120
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Even more massive Titanforged Gauntlets, immense and heavy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEtherealBandsII : BEGauntlets {
	BEEtherealBandsII() : base() {
		$this.Name               = 'Ethereal Bands II'
		$this.MapObjName         = 'etherealbandsii'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More pure Ethereal Bands, granting greater magical prowess.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlademasterGauntletsII : BEGauntlets {
	BEBlademasterGauntletsII() : base() {
		$this.Name               = 'Blademaster Gauntlets II'
		$this.MapObjName         = 'blademastergauntletsii'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 15
			[StatId]::Accuracy = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Enhanced Blademaster Gauntlets, greater precision and offense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOathswornGauntletsII : BEGauntlets {
	BEOathswornGauntletsII() : base() {
		$this.Name               = 'Oathsworn Gauntlets II'
		$this.MapObjName         = 'oathsworngauntletsii'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 52
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More potent Oathsworn Gauntlets, unwavering resolve.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESilverlightGlovesII : BEGauntlets {
	BESilverlightGlovesII() : base() {
		$this.Name               = 'Silverlight Gloves II'
		$this.MapObjName         = 'silverlightglovesii'
		$this.PurchasePrice      = 880
		$this.SellPrice          = 440
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 30
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Brighter Silverlight Gloves, revealing more hidden paths.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGuardiansResolveGauntlets : BEGauntlets {
	BEGuardiansResolveGauntlets() : base() {
		$this.Name               = 'Guardian''s Resolve Gauntlets'
		$this.MapObjName         = 'guardiansresolvegauntlets'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets imbued with a guardian''s unwavering resolve.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMysticRelicGauntletsII : BEGauntlets {
	BEMysticRelicGauntletsII() : base() {
		$this.Name               = 'Mystic Relic Gauntlets II'
		$this.MapObjName         = 'mysticrelicgauntletsii'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More powerful Mystic Relic Gauntlets, holding stronger ancient power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowdancerGlovesII : BEGauntlets {
	BEShadowdancerGlovesII() : base() {
		$this.Name               = 'Shadowdancer Gloves II'
		$this.MapObjName         = 'shadowdancerglovesii'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 22
			[StatId]::Accuracy = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More advanced Shadowdancer Gloves, allowing greater agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBattlewornGauntletsII : BEGauntlets {
	BEBattlewornGauntletsII() : base() {
		$this.Name               = 'Battleworn Gauntlets II'
		$this.MapObjName         = 'battleworngauntletsii'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 38
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Battleworn Gauntlets hardened by more battles, even stronger.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESpiritboundGauntletsII : BEGauntlets {
	BESpiritboundGauntletsII() : base() {
		$this.Name               = 'Spiritbound Gauntlets II'
		$this.MapObjName         = 'spiritboundgauntletsii'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More potent Spiritbound Gauntlets, stronger link to spirits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVenomousGripsII : BEGauntlets {
	BEVenomousGripsII() : base() {
		$this.Name               = 'Venomous Grips II'
		$this.MapObjName         = 'venomousgripsii'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 12
			[StatId]::Accuracy = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More potent Venomous Grips, dripping with stronger poison.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZealotsHolyFists : BEGauntlets {
	BEZealotsHolyFists() : base() {
		$this.Name               = 'Zealot''s Holy Fists'
		$this.MapObjName         = 'zealotsholyfists'
		$this.PurchasePrice      = 620
		$this.SellPrice          = 310
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Fists of a truly righteous zealot, imbued with divine fervor.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEmeraldScaleGauntletsII : BEGauntlets {
	BEEmeraldScaleGauntletsII() : base() {
		$this.Name               = 'Emerald Scale Gauntlets II'
		$this.MapObjName         = 'emeraldscalegauntletsii'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More vibrant Emerald Scale Gauntlets, stronger protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFrostWeaverGlovesII : BEGauntlets {
	BEFrostWeaverGlovesII() : base() {
		$this.Name               = 'Frost Weaver Gloves II'
		$this.MapObjName         = 'frostweaverglovesii'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Improved Frost Weaver Gloves, manipulating ice with greater skill.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEOnyxClawGauntletsII : BEGauntlets {
	BEOnyxClawGauntletsII() : base() {
		$this.Name               = 'Onyx Claw Gauntlets II'
		$this.MapObjName         = 'onyxclawgauntletsii'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More potent Onyx Claw Gauntlets, for deeper piercing attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStarshardGauntletsII : BEGauntlets {
	BEStarshardGauntletsII() : base() {
		$this.Name               = 'Starshard Gauntlets II'
		$this.MapObjName         = 'starshardgauntletsii'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More powerful Starshard Gauntlets, radiating stronger cosmic energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMoonstoneBracersII : BEGauntlets {
	BEMoonstoneBracersII() : base() {
		$this.Name               = 'Moonstone Bracers II'
		$this.MapObjName         = 'moonstonebracersii'
		$this.PurchasePrice      = 1080
		$this.SellPrice          = 540
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 42
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Brighter Moonstone Bracers, enhancing nocturnal endeavors further.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBlazecoreGauntletsIII : BEGauntlets {
	BEBlazecoreGauntletsIII() : base() {
		$this.Name               = 'Blazecore Gauntlets III'
		$this.MapObjName         = 'blazecoregauntletsiii'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 85
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ultimate Blazecore Gauntlets, intensely hot and resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BENightfallGauntletsIII : BEGauntlets {
	BENightfallGauntletsIII() : base() {
		$this.Name               = 'Nightfall Gauntlets III'
		$this.MapObjName         = 'nightfallgauntletsiii'
		$this.PurchasePrice      = 1550
		$this.SellPrice          = 775
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 35
			[StatId]::Accuracy = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Final tier Nightfall Gauntlets, deepest shadows, supreme stealth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAncientSteelGauntletsIII : BEGauntlets {
	BEAncientSteelGauntletsIII() : base() {
		$this.Name               = 'Ancient Steel Gauntlets III'
		$this.MapObjName         = 'ancientsteelgauntletsiii'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ancient Steel Gauntlets of ultimate durability, unyielding.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivineEssenceGauntletsIII : BEGauntlets {
	BEDivineEssenceGauntletsIII() : base() {
		$this.Name               = 'Divine Essence Gauntlets III'
		$this.MapObjName         = 'divineessencegauntletsiii'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 90
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ultimate Divine Essence Gauntlets, radiating pure divine power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidShardGlovesIII : BEGauntlets {
	BEVoidShardGlovesIII() : base() {
		$this.Name               = 'Void Shard Gloves III'
		$this.MapObjName         = 'voidshardglovesiii'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 58
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Final tier Void Shard Gloves, supreme disorientation.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrimsonGuardGauntletsIII : BEGauntlets {
	BECrimsonGuardGauntletsIII() : base() {
		$this.Name               = 'Crimson Guard Gauntlets III'
		$this.MapObjName         = 'crimsonguardgauntletsiii'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crimson Guard Gauntlets of unparalleled ferocity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEnchantresssGrasp : BEGauntlets {
	BEEnchantresssGrasp() : base() {
		$this.Name               = 'Enchantress''s Grasp'
		$this.MapObjName         = 'enchantresssgrasp'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ultimate bands for an enchantress, absolute magical power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BERuneforgedGauntletsIII : BEGauntlets {
	BERuneforgedGauntletsIII() : base() {
		$this.Name               = 'Runeforged Gauntlets III'
		$this.MapObjName         = 'runeforgedgauntletsiii'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ultimate Runeforged Gauntlets, absolute mystical power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEarthshakerGauntletsIII : BEGauntlets {
	BEEarthshakerGauntletsIII() : base() {
		$this.Name               = 'Earthshaker Gauntlets III'
		$this.MapObjName         = 'earthshakergauntletsiii'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 80
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ultimate Earthshaker Gauntlets, causing devastating tremors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESoulfireGripsIII : BEGauntlets {
	BESoulfireGripsIII() : base() {
		$this.Name               = 'Soulfire Grips III'
		$this.MapObjName         = 'soulfiregripsiii'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Final tier Soulfire Grips, searing spirits with maximum intensity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonheartGauntletsIII : BEGauntlets {
	BEDragonheartGauntletsIII() : base() {
		$this.Name               = 'Dragonheart Gauntlets III'
		$this.MapObjName         = 'dragonheartgauntletsiii'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Defense = 100
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets radiating the heart of a true dragon, immense power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECelestialTearGauntletsIII : BEGauntlets {
	BECelestialTearGauntletsIII() : base() {
		$this.Name               = 'Celestial Tear Gauntlets III'
		$this.MapObjName         = 'celestialteargauntletsiii'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::Defense = 105
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ultimate Celestial Tear Gauntlets, drawing maximum cosmic power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAbyssalPlateGauntletsIII : BEGauntlets {
	BEAbyssalPlateGauntletsIII() : base() {
		$this.Name               = 'Abyssal Plate Gauntlets III'
		$this.MapObjName         = 'abyssalplategauntletsiii'
		$this.PurchasePrice      = 2300
		$this.SellPrice          = 1150
		$this.TargetStats        = @{
			[StatId]::Defense = 110
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Final tier Abyssal Plate Gauntlets, unyielding resilience.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhoenixFeatherGlovesIII : BEGauntlets {
	BEPhoenixFeatherGlovesIII() : base() {
		$this.Name               = 'Phoenix Feather Gloves III'
		$this.MapObjName         = 'phoenixfeatherglovesiii'
		$this.PurchasePrice      = 1450
		$this.SellPrice          = 725
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 58
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ultimate Phoenix Feather Gloves, supreme healing and protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWarlordsDominionGauntlets : BEGauntlets {
	BEWarlordsDominionGauntlets() : base() {
		$this.Name               = 'Warlord''s Dominion Gauntlets'
		$this.MapObjName         = 'warlordsdominiongauntlets'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 88
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that command absolute dominion, inspiring awe.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDreamsteelGauntletsIII : BEGauntlets {
	BEDreamsteelGauntletsIII() : base() {
		$this.Name               = 'Dreamsteel Gauntlets III'
		$this.MapObjName         = 'dreamsteelgauntletsiii'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 85
			[StatId]::MagicDefense = 42
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ultimate Dreamsteel Gauntlets, impossibly light and strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidstoneGauntletsIII : BEGauntlets {
	BEVoidstoneGauntletsIII() : base() {
		$this.Name               = 'Voidstone Gauntlets III'
		$this.MapObjName         = 'voidstonegauntletsiii'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 90
			[StatId]::MagicDefense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Final tier Voidstone Gauntlets, absorbing all magical attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunpetalHandguardsIII : BEGauntlets {
	BESunpetalHandguardsIII() : base() {
		$this.Name               = 'Sunpetal Handguards III'
		$this.MapObjName         = 'sunpetalhandguardsiii'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 50
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ultimate Sunpetal Handguards, vibrant and supremely healing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEInfinityCCTurtleGauntlets : BEGauntlets {
    BEInfinityCCTurtleGauntlets() : base() {
        $this.Name = 'Infinity CC Turtle Gauntlets'
        $this.MapObjName = 'infinityccturtlegauntlets'
        $this.PurchasePrice = 230000
        $this.SellPrice = 0
        $this.TargetStats = @{
            [StatId]::Defense = 250
            [StatId]::MagicDefense = 250
            [StatId]::Accuracy = 250
        }
        $this.CanAddToInventory = $true
        $this.ExamineString = 'It sprays out lava.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
        $this.TargetGender = [Gender]::Unisex
    }
}

Class BEBearGauntlets : BEGauntlets {
    BEBearGauntlets() : base() {
        $this.Name               = 'Bear Gauntlets'
        $this.MapObjName         = 'beargauntlets'
        $this.PurchasePrice      = 0
        $this.SellPrice          = 0
        $this.TargetStats        = @{
            [StatId]::Defense      = 999
            [StatId]::MagicDefense = 999
            [StatId]::Accuracy     = 999
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'The ultimate in fuzzy gauntlets.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
        $this.TargetGender       = [Gender]::Unisex
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# GREAVES
#
#//////////////////////////////////////////////////////////////////////////////

Class BELeatherGreaves : BEGreaves {
	BELeatherGreaves() : base() {
		$this.Name               = 'Leather Greaves'
		$this.MapObjName         = 'leathergreaves'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Simple leather leg guards, offering basic protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPaddedGreaves : BEGreaves {
	BEPaddedGreaves() : base() {
		$this.Name               = 'Padded Greaves'
		$this.MapObjName         = 'paddedgreaves'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 3
			[StatId]::Speed = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Lightly padded greaves for agile combatants.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBronzeGreaves : BEGreaves {
	BEBronzeGreaves() : base() {
		$this.Name               = 'Bronze Greaves'
		$this.MapObjName         = 'bronzegreaves'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Sturdy bronze leg protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIronGreaves : BEGreaves {
	BEIronGreaves() : base() {
		$this.Name               = 'Iron Greaves'
		$this.MapObjName         = 'irongreaves'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Common iron greaves, reliable and strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESteelGreaves : BEGreaves {
	BESteelGreaves() : base() {
		$this.Name               = 'Steel Greaves'
		$this.MapObjName         = 'steelgreaves'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy steel greaves, offering solid defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChainmailGreaves : BEGreaves {
	BEChainmailGreaves() : base() {
		$this.Name               = 'Chainmail Greaves'
		$this.MapObjName         = 'chainmailgreaves'
		$this.PurchasePrice      = 420
		$this.SellPrice          = 210
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Flexible chainmail leg guards, good against piercing attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPlateGreaves : BEGreaves {
	BEPlateGreaves() : base() {
		$this.Name               = 'Plate Greaves'
		$this.MapObjName         = 'plategreaves'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Full plate leg armor, excellent protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMithrilGreaves : BEGreaves {
	BEMithrilGreaves() : base() {
		$this.Name               = 'Mithril Greaves'
		$this.MapObjName         = 'mithrilgreaves'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 15
			[StatId]::Speed = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves crafted from light and strong mithril.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAdamantGreaves : BEGreaves {
	BEAdamantGreaves() : base() {
		$this.Name               = 'Adamant Greaves'
		$this.MapObjName         = 'adamantgreaves'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Nearly impenetrable greaves made from adamant ore.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonhideGreaves : BEGreaves {
	BEDragonhideGreaves() : base() {
		$this.Name               = 'Dragonhide Greaves'
		$this.MapObjName         = 'dragonhidegreaves'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves made from the tough hide of a dragon.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEElvenGreaves : BEGreaves {
	BEElvenGreaves() : base() {
		$this.Name               = 'Elven Greaves'
		$this.MapObjName         = 'elvengreaves'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 25
			[StatId]::Speed = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Graceful greaves favored by elves, light and protective.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDwarvenGreaves : BEGreaves {
	BEDwarvenGreaves() : base() {
		$this.Name               = 'Dwarven Greaves'
		$this.MapObjName         = 'dwarvengreaves'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Robust greaves forged by dwarven artisans.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowGreaves : BEGreaves {
	BEShadowGreaves() : base() {
		$this.Name               = 'Shadow Greaves'
		$this.MapObjName         = 'shadowgreaves'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 28
			[StatId]::Speed = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves imbued with dark energies, granting stealth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEHolyGreaves : BEGreaves {
	BEHolyGreaves() : base() {
		$this.Name               = 'Holy Greaves'
		$this.MapObjName         = 'holygreaves'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blessed greaves that ward off evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMysticGreaves : BEGreaves {
	BEMysticGreaves() : base() {
		$this.Name               = 'Mystic Greaves'
		$this.MapObjName         = 'mysticgreaves'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that enhance magical aptitude.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarriorGreaves : BEGreaves {
	BEWarriorGreaves() : base() {
		$this.Name               = 'Warrior Greaves'
		$this.MapObjName         = 'warriorgreaves'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Standard issue greaves for a seasoned warrior.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKnightGreaves : BEGreaves {
	BEKnightGreaves() : base() {
		$this.Name               = 'Knight Greaves'
		$this.MapObjName         = 'knightgreaves'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves fit for a noble knight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESentinelGreaves : BEGreaves {
	BESentinelGreaves() : base() {
		$this.Name               = 'Sentinel Greaves'
		$this.MapObjName         = 'sentinelgreaves'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 38
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy greaves designed for defensive stances.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEScoutGreaves : BEGreaves {
	BEScoutGreaves() : base() {
		$this.Name               = 'Scout Greaves'
		$this.MapObjName         = 'scoutgreaves'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 8
			[StatId]::Speed = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light greaves for quick movement and evasion.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERangerGreaves : BEGreaves {
	BERangerGreaves() : base() {
		$this.Name               = 'Ranger Greaves'
		$this.MapObjName         = 'rangergreaves'
		$this.PurchasePrice      = 380
		$this.SellPrice          = 190
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 14
			[StatId]::Speed = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves suitable for wilderness survival.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBerserkerGreaves : BEGreaves {
	BEBerserkerGreaves() : base() {
		$this.Name               = 'Berserker Greaves'
		$this.MapObjName         = 'berserkergreaves'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for those who fight with unrestrained fury.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEPaladinGreaves : BEGreaves {
	BEPaladinGreaves() : base() {
		$this.Name               = 'Paladin Greaves'
		$this.MapObjName         = 'paladingreaves'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a holy warrior, offering divine protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESorcererGreaves : BEGreaves {
	BESorcererGreaves() : base() {
		$this.Name               = 'Sorcerer Greaves'
		$this.MapObjName         = 'sorcerergreaves'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light greaves that aid in spellcasting.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarlockGreaves : BEGreaves {
	BEWarlockGreaves() : base() {
		$this.Name               = 'Warlock Greaves'
		$this.MapObjName         = 'warlockgreaves'
		$this.PurchasePrice      = 520
		$this.SellPrice          = 260
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for those who dabble in dark magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAdeptGreaves : BEGreaves {
	BEAdeptGreaves() : base() {
		$this.Name               = 'Adept Greaves'
		$this.MapObjName         = 'adeptgreaves'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves worn by skilled practitioners.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGuardianGreaves : BEGreaves {
	BEGuardianGreaves() : base() {
		$this.Name               = 'Guardian Greaves'
		$this.MapObjName         = 'guardiangreaves'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 42
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves designed to protect the wearer at all costs.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHeroicGreaves : BEGreaves {
	BEHeroicGreaves() : base() {
		$this.Name               = 'Heroic Greaves'
		$this.MapObjName         = 'heroicgreaves'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves worn by legendary heroes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEImperialGreaves : BEGreaves {
	BEImperialGreaves() : base() {
		$this.Name               = 'Imperial Greaves'
		$this.MapObjName         = 'imperialgreaves'
		$this.PurchasePrice      = 720
		$this.SellPrice          = 360
		$this.TargetStats        = @{
			[StatId]::Defense = 33
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of the imperial guard, highly polished.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERoyalGreaves : BEGreaves {
	BERoyalGreaves() : base() {
		$this.Name               = 'Royal Greaves'
		$this.MapObjName         = 'royalgreaves'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves fit for royalty, exquisitely crafted.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETravelerGreaves : BEGreaves {
	BETravelerGreaves() : base() {
		$this.Name               = 'Traveler Greaves'
		$this.MapObjName         = 'travelergreaves'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::Defense = 4
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Simple and comfortable greaves for long journeys.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHunterGreaves : BEGreaves {
	BEHunterGreaves() : base() {
		$this.Name               = 'Hunter Greaves'
		$this.MapObjName         = 'huntergreaves'
		$this.PurchasePrice      = 320
		$this.SellPrice          = 160
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 10
			[StatId]::Speed = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves designed for tracking and hunting.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMercenaryGreaves : BEGreaves {
	BEMercenaryGreaves() : base() {
		$this.Name               = 'Mercenary Greaves'
		$this.MapObjName         = 'mercenarygreaves'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a hired blade, practical and durable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGladiatorGreaves : BEGreaves {
	BEGladiatorGreaves() : base() {
		$this.Name               = 'Gladiator Greaves'
		$this.MapObjName         = 'gladiatorgreaves'
		$this.PurchasePrice      = 680
		$this.SellPrice          = 340
		$this.TargetStats        = @{
			[StatId]::Defense = 36
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy greaves worn by arena champions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBarbarianGreaves : BEGreaves {
	BEBarbarianGreaves() : base() {
		$this.Name               = 'Barbarian Greaves'
		$this.MapObjName         = 'barbariangreaves'
		$this.PurchasePrice      = 480
		$this.SellPrice          = 240
		$this.TargetStats        = @{
			[StatId]::Defense = 26
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crude but effective greaves of a barbarian.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDruidGreaves : BEGreaves {
	BEDruidGreaves() : base() {
		$this.Name               = 'Druid Greaves'
		$this.MapObjName         = 'druidgreaves'
		$this.PurchasePrice      = 580
		$this.SellPrice          = 290
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves made from natural materials, attuned to nature.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEClericGreaves : BEGreaves {
	BEClericGreaves() : base() {
		$this.Name               = 'Cleric Greaves'
		$this.MapObjName         = 'clericgreaves'
		$this.PurchasePrice      = 620
		$this.SellPrice          = 310
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves blessed by divine power, for healing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMonkGreaves : BEGreaves {
	BEMonkGreaves() : base() {
		$this.Name               = 'Monk Greaves'
		$this.MapObjName         = 'monkgreaves'
		$this.PurchasePrice      = 360
		$this.SellPrice          = 180
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 16
			[StatId]::Speed = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light greaves for martial arts practitioners.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESamuraiGreaves : BEGreaves {
	BESamuraiGreaves() : base() {
		$this.Name               = 'Samurai Greaves'
		$this.MapObjName         = 'samuraigreaves'
		$this.PurchasePrice      = 780
		$this.SellPrice          = 390
		$this.TargetStats        = @{
			[StatId]::Defense = 34
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a disciplined warrior from the East.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BENinjaGreaves : BEGreaves {
	BENinjaGreaves() : base() {
		$this.Name               = 'Ninja Greaves'
		$this.MapObjName         = 'ninjagreaves'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 18
			[StatId]::Speed = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light and silent greaves for covert operations.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETemplarGreaves : BEGreaves {
	BETemplarGreaves() : base() {
		$this.Name               = 'Templar Greaves'
		$this.MapObjName         = 'templargreaves'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Holy greaves worn by zealous protectors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEnchantedGreaves : BEGreaves {
	BEEnchantedGreaves() : base() {
		$this.Name               = 'Enchanted Greaves'
		$this.MapObjName         = 'enchantedgreaves'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves imbued with a minor enchantment.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrystallineGreaves : BEGreaves {
	BECrystallineGreaves() : base() {
		$this.Name               = 'Crystalline Greaves'
		$this.MapObjName         = 'crystallinegreaves'
		$this.PurchasePrice      = 980
		$this.SellPrice          = 490
		$this.TargetStats        = @{
			[StatId]::Defense = 38
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves crafted from durable crystals.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVolcanicGreaves : BEGreaves {
	BEVolcanicGreaves() : base() {
		$this.Name               = 'Volcanic Greaves'
		$this.MapObjName         = 'volcanicgreaves'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 48
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves forged near volcanic heat, resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOceanicGreaves : BEGreaves {
	BEOceanicGreaves() : base() {
		$this.Name               = 'Oceanic Greaves'
		$this.MapObjName         = 'oceanicgreaves'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves found in the depths of the ocean, resistant to water.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEForestGreaves : BEGreaves {
	BEForestGreaves() : base() {
		$this.Name               = 'Forest Greaves'
		$this.MapObjName         = 'forestgreaves'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 17
			[StatId]::MagicDefense = 15
			[StatId]::Speed = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that blend with natural surroundings.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDesertGreaves : BEGreaves {
	BEDesertGreaves() : base() {
		$this.Name               = 'Desert Greaves'
		$this.MapObjName         = 'desertgreaves'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves suitable for arid environments.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArcticGreaves : BEGreaves {
	BEArcticGreaves() : base() {
		$this.Name               = 'Arctic Greaves'
		$this.MapObjName         = 'arcticgreaves'
		$this.PurchasePrice      = 470
		$this.SellPrice          = 235
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves designed for cold climates.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarfallGreaves : BEGreaves {
	BEStarfallGreaves() : base() {
		$this.Name               = 'Starfall Greaves'
		$this.MapObjName         = 'starfallgreaves'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves said to be crafted from fallen stars.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunstoneGreaves : BEGreaves {
	BESunstoneGreaves() : base() {
		$this.Name               = 'Sunstone Greaves'
		$this.MapObjName         = 'sunstonegreaves'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::Defense = 52
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that shimmer with solar energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMoonstoneGreaves : BEGreaves {
	BEMoonstoneGreaves() : base() {
		$this.Name               = 'Moonstone Greaves'
		$this.MapObjName         = 'moonstonegreaves'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that glow with lunar power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAetherGreaves : BEGreaves {
	BEAetherGreaves() : base() {
		$this.Name               = 'Aether Greaves'
		$this.MapObjName         = 'aethergreaves'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves from another dimension, ethereal.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidGreaves : BEGreaves {
	BEVoidGreaves() : base() {
		$this.Name               = 'Void Greaves'
		$this.MapObjName         = 'voidgreaves'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that draw power from the void.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiritGreaves : BEGreaves {
	BESpiritGreaves() : base() {
		$this.Name               = 'Spirit Greaves'
		$this.MapObjName         = 'spiritgreaves'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that resonate with spiritual energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAncientGreaves : BEGreaves {
	BEAncientGreaves() : base() {
		$this.Name               = 'Ancient Greaves'
		$this.MapObjName         = 'ancientgreaves'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 58
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves from a forgotten civilization.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELegendaryGreaves : BEGreaves {
	BELegendaryGreaves() : base() {
		$this.Name               = 'Legendary Greaves'
		$this.MapObjName         = 'legendarygreaves'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves spoken of in ancient tales.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGodlyGreaves : BEGreaves {
	BEGodlyGreaves() : base() {
		$this.Name               = 'Godly Greaves'
		$this.MapObjName         = 'godlygreaves'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Defense = 90
			[StatId]::MagicDefense = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves worn by deities, immense power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEApprenticeGreaves : BEGreaves {
	BEApprenticeGreaves() : base() {
		$this.Name               = 'Apprentice Greaves'
		$this.MapObjName         = 'apprenticegreaves'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::Defense = 3
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Basic greaves for aspiring adventurers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEJourneymanGreaves : BEGreaves {
	BEJourneymanGreaves() : base() {
		$this.Name               = 'Journeyman Greaves'
		$this.MapObjName         = 'journeymangreaves'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for those gaining experience.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMasterGreaves : BEGreaves {
	BEMasterGreaves() : base() {
		$this.Name               = 'Master Greaves'
		$this.MapObjName         = 'mastergreaves'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves worn by true masters of their craft.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGrandmasterGreaves : BEGreaves {
	BEGrandmasterGreaves() : base() {
		$this.Name               = 'Grandmaster Greaves'
		$this.MapObjName         = 'grandmastergreaves'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of unparalleled skill and defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVanguardGreaves : BEGreaves {
	BEVanguardGreaves() : base() {
		$this.Name               = 'Vanguard Greaves'
		$this.MapObjName         = 'vanguardgreaves'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 38
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for the front lines of battle.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEReconGreaves : BEGreaves {
	BEReconGreaves() : base() {
		$this.Name               = 'Recon Greaves'
		$this.MapObjName         = 'recongreaves'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 10
			[StatId]::Speed = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light greaves for reconnaissance missions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECommandoGreaves : BEGreaves {
	BECommandoGreaves() : base() {
		$this.Name               = 'Commando Greaves'
		$this.MapObjName         = 'commandogreaves'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for elite fighting units.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEPathfinderGreaves : BEGreaves {
	BEPathfinderGreaves() : base() {
		$this.Name               = 'Pathfinder Greaves'
		$this.MapObjName         = 'pathfindergreaves'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 12
			[StatId]::Speed = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for charting unknown territories.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWandererGreaves : BEGreaves {
	BEWandererGreaves() : base() {
		$this.Name               = 'Wanderer Greaves'
		$this.MapObjName         = 'wanderergreaves'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 6
			[StatId]::Speed = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for eternal travelers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENomadGreaves : BEGreaves {
	BENomadGreaves() : base() {
		$this.Name               = 'Nomad Greaves'
		$this.MapObjName         = 'nomadgreaves'
		$this.PurchasePrice      = 220
		$this.SellPrice          = 110
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 7
			[StatId]::Speed = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for those who live on the move.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPilgrimGreaves : BEGreaves {
	BEPilgrimGreaves() : base() {
		$this.Name               = 'Pilgrim Greaves'
		$this.MapObjName         = 'pilgrimgreaves'
		$this.PurchasePrice      = 240
		$this.SellPrice          = 120
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for spiritual journeys.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrusaderGreaves : BEGreaves {
	BECrusaderGreaves() : base() {
		$this.Name               = 'Crusader Greaves'
		$this.MapObjName         = 'crusadergreaves'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{
			[StatId]::Defense = 42
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a holy warrior on a quest.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEInquisitorGreaves : BEGreaves {
	BEInquisitorGreaves() : base() {
		$this.Name               = 'Inquisitor Greaves'
		$this.MapObjName         = 'inquisitorgreaves'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
			[StatId]::Defense = 38
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for those who seek out heresy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEZealotGreaves : BEGreaves {
	BEZealotGreaves() : base() {
		$this.Name               = 'Zealot Greaves'
		$this.MapObjName         = 'zealotgreaves'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of unwavering devotion.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEFanaticGreaves : BEGreaves {
	BEFanaticGreaves() : base() {
		$this.Name               = 'Fanatic Greaves'
		$this.MapObjName         = 'fanaticgreaves'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of extreme fervor.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESentryGreaves : BEGreaves {
	BESentryGreaves() : base() {
		$this.Name               = 'Sentry Greaves'
		$this.MapObjName         = 'sentrygreaves'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for watchful guards.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWatchmanGreaves : BEGreaves {
	BEWatchmanGreaves() : base() {
		$this.Name               = 'Watchman Greaves'
		$this.MapObjName         = 'watchmangreaves'
		$this.PurchasePrice      = 680
		$this.SellPrice          = 340
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for night patrols.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMilitiaGreaves : BEGreaves {
	BEMilitiaGreaves() : base() {
		$this.Name               = 'Militia Greaves'
		$this.MapObjName         = 'militiagreaves'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for civilian defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEConscriptGreaves : BEGreaves {
	BEConscriptGreaves() : base() {
		$this.Name               = 'Conscript Greaves'
		$this.MapObjName         = 'conscriptgreaves'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Basic greaves for newly drafted soldiers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOfficerGreaves : BEGreaves {
	BEOfficerGreaves() : base() {
		$this.Name               = 'Officer Greaves'
		$this.MapObjName         = 'officergreaves'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves worn by military officers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECommanderGreaves : BEGreaves {
	BECommanderGreaves() : base() {
		$this.Name               = 'Commander Greaves'
		$this.MapObjName         = 'commandergreaves'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a battle hardened commander.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGeneralGreaves : BEGreaves {
	BEGeneralGreaves() : base() {
		$this.Name               = 'General Greaves'
		$this.MapObjName         = 'generalgreaves'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves fit for a military general.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEmperorGreaves : BEGreaves {
	BEEmperorGreaves() : base() {
		$this.Name               = 'Emperor Greaves'
		$this.MapObjName         = 'emperorgreaves'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of an undisputed ruler.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEmpressGreaves : BEGreaves {
	BEEmpressGreaves() : base() {
		$this.Name               = 'Empress Greaves'
		$this.MapObjName         = 'empressgreaves'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 58
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a powerful female ruler.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEHeroineGreaves : BEGreaves {
	BEHeroineGreaves() : base() {
		$this.Name               = 'Heroine Greaves'
		$this.MapObjName         = 'heroinegreaves'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 48
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a celebrated female hero.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEChampionGreaves : BEGreaves {
	BEChampionGreaves() : base() {
		$this.Name               = 'Champion Greaves'
		$this.MapObjName         = 'championgreaves'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of an undisputed champion.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEVictorGreaves : BEGreaves {
	BEVictorGreaves() : base() {
		$this.Name               = 'Victor Greaves'
		$this.MapObjName         = 'victorgreaves'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 48
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves worn by those who claim victory.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETriumphGreaves : BEGreaves {
	BETriumphGreaves() : base() {
		$this.Name               = 'Triumph Greaves'
		$this.MapObjName         = 'triumphgreaves'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 52
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves signifying great success.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAuraGreaves : BEGreaves {
	BEAuraGreaves() : base() {
		$this.Name               = 'Aura Greaves'
		$this.MapObjName         = 'auragreaves'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that emanate a protective aura.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESanctuaryGreaves : BEGreaves {
	BESanctuaryGreaves() : base() {
		$this.Name               = 'Sanctuary Greaves'
		$this.MapObjName         = 'sanctuarygreaves'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that offer a sense of peace.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESeraphGreaves : BEGreaves {
	BESeraphGreaves() : base() {
		$this.Name               = 'Seraph Greaves'
		$this.MapObjName         = 'seraphgreaves'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 62
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of angelic origin.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECherubGreaves : BEGreaves {
	BECherubGreaves() : base() {
		$this.Name               = 'Cherub Greaves'
		$this.MapObjName         = 'cherubgreaves'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 40
			[StatId]::Speed = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light and protective greaves.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEArchangelGreaves : BEGreaves {
	BEArchangelGreaves() : base() {
		$this.Name               = 'Archangel Greaves'
		$this.MapObjName         = 'archangelgreaves'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of the highest order of angels.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDemonGreaves : BEGreaves {
	BEDemonGreaves() : base() {
		$this.Name               = 'Demon Greaves'
		$this.MapObjName         = 'demongreaves'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves infused with demonic power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEFiendGreaves : BEGreaves {
	BEFiendGreaves() : base() {
		$this.Name               = 'Fiend Greaves'
		$this.MapObjName         = 'fiendgreaves'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a malevolent spirit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEImpGreaves : BEGreaves {
	BEImpGreaves() : base() {
		$this.Name               = 'Imp Greaves'
		$this.MapObjName         = 'impgreaves'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Small but surprisingly tough greaves.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGoblinGreaves : BEGreaves {
	BEGoblinGreaves() : base() {
		$this.Name               = 'Goblin Greaves'
		$this.MapObjName         = 'goblingreaves'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::Defense = 4
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crude greaves taken from goblins.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOrcishGreaves : BEGreaves {
	BEOrcishGreaves() : base() {
		$this.Name               = 'Orcish Greaves'
		$this.MapObjName         = 'orcishgreaves'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy and brutal greaves of orcs.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEOgreGreaves : BEGreaves {
	BEOgreGreaves() : base() {
		$this.Name               = 'Ogre Greaves'
		$this.MapObjName         = 'ogregreaves'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Massive greaves for immense creatures.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGiantGreaves : BEGreaves {
	BEGiantGreaves() : base() {
		$this.Name               = 'Giant Greaves'
		$this.MapObjName         = 'giantgreaves'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 38
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves sized for colossal beings.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BETitanGreaves : BEGreaves {
	BETitanGreaves() : base() {
		$this.Name               = 'Titan Greaves'
		$this.MapObjName         = 'titangreaves'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 72
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of legendary titans, immensely strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonlordGreaves : BEGreaves {
	BEDragonlordGreaves() : base() {
		$this.Name               = 'Dragonlord Greaves'
		$this.MapObjName         = 'dragonlordgreaves'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::Defense = 80
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves worn by a dragonlord.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEWyvernGreaves : BEGreaves {
	BEWyvernGreaves() : base() {
		$this.Name               = 'Wyvern Greaves'
		$this.MapObjName         = 'wyverngreaves'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves crafted from wyvern scales.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhoenixGreaves : BEGreaves {
	BEPhoenixGreaves() : base() {
		$this.Name               = 'Phoenix Greaves'
		$this.MapObjName         = 'phoenixgreaves'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that glow with fiery essence.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGriffinGreaves : BEGreaves {
	BEGriffinGreaves() : base() {
		$this.Name               = 'Griffin Greaves'
		$this.MapObjName         = 'griffingreaves'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 25
			[StatId]::Speed = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that grant swiftness and grace.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEUnicornGreaves : BEGreaves {
	BEUnicornGreaves() : base() {
		$this.Name               = 'Unicorn Greaves'
		$this.MapObjName         = 'unicorngreaves'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Pure greaves, associated with healing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEPegasusGreaves : BEGreaves {
	BEPegasusGreaves() : base() {
		$this.Name               = 'Pegasus Greaves'
		$this.MapObjName         = 'pegasusgreaves'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 20
			[StatId]::Speed = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that feel weightless.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHarpyGreaves : BEGreaves {
	BEHarpyGreaves() : base() {
		$this.Name               = 'Harpy Greaves'
		$this.MapObjName         = 'harpygreaves'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 15
			[StatId]::Speed = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that aid in agile aerial combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESphinxGreaves : BEGreaves {
	BESphinxGreaves() : base() {
		$this.Name               = 'Sphinx Greaves'
		$this.MapObjName         = 'sphinxgreaves'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of ancient wisdom and defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBasiliskGreaves : BEGreaves {
	BEBasiliskGreaves() : base() {
		$this.Name               = 'Basilisk Greaves'
		$this.MapObjName         = 'basiliskgreaves'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves made from basilisk hide, resistant to petrification.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHydraGreaves : BEGreaves {
	BEHydraGreaves() : base() {
		$this.Name               = 'Hydra Greaves'
		$this.MapObjName         = 'hydragreaves'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 58
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of multi-headed beasts, regenerating.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKrakenGreaves : BEGreaves {
	BEKrakenGreaves() : base() {
		$this.Name               = 'Kraken Greaves'
		$this.MapObjName         = 'krakengreaves'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 52
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves from the depths, granting water resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMinotaurGreaves : BEGreaves {
	BEMinotaurGreaves() : base() {
		$this.Name               = 'Minotaur Greaves'
		$this.MapObjName         = 'minotaurgreaves'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 42
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of brute strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECentaurGreaves : BEGreaves {
	BECentaurGreaves() : base() {
		$this.Name               = 'Centaur Greaves'
		$this.MapObjName         = 'centaurgreaves'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 15
			[StatId]::Speed = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for equestrian warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGorgonGreaves : BEGreaves {
	BEGorgonGreaves() : base() {
		$this.Name               = 'Gorgon Greaves'
		$this.MapObjName         = 'gorgongreaves'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves offering protection from petrification.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWerewolfGreaves : BEGreaves {
	BEWerewolfGreaves() : base() {
		$this.Name               = 'Werewolf Greaves'
		$this.MapObjName         = 'werewolfgreaves'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 18
			[StatId]::Speed = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a shapeshifter, enhances agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEVampireGreaves : BEGreaves {
	BEVampireGreaves() : base() {
		$this.Name               = 'Vampire Greaves'
		$this.MapObjName         = 'vampiregreaves'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that drain life from foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZombieGreaves : BEGreaves {
	BEZombieGreaves() : base() {
		$this.Name               = 'Zombie Greaves'
		$this.MapObjName         = 'zombiegreaves'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Rotting greaves, barely functional.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESkeletonGreaves : BEGreaves {
	BESkeletonGreaves() : base() {
		$this.Name               = 'Skeleton Greaves'
		$this.MapObjName         = 'skeletongreaves'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::Defense = 3
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bony greaves, surprisingly light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGhostGreaves : BEGreaves {
	BEGhostGreaves() : base() {
		$this.Name               = 'Ghost Greaves'
		$this.MapObjName         = 'ghostgreaves'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ethereal greaves, difficult to hit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpecterGreaves : BEGreaves {
	BESpecterGreaves() : base() {
		$this.Name               = 'Specter Greaves'
		$this.MapObjName         = 'spectergreaves'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a powerful phantom.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELichGreaves : BEGreaves {
	BELichGreaves() : base() {
		$this.Name               = 'Lich Greaves'
		$this.MapObjName         = 'lichgreaves'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of an undead sorcerer.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMummyGreaves : BEGreaves {
	BEMummyGreaves() : base() {
		$this.Name               = 'Mummy Greaves'
		$this.MapObjName         = 'mummygreaves'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 38
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bandaged greaves, ancient and cursed.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGargoyleGreaves : BEGreaves {
	BEGargoyleGreaves() : base() {
		$this.Name               = 'Gargoyle Greaves'
		$this.MapObjName         = 'gargoylegreaves'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Stone greaves, offering immense defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGolemGreaves : BEGreaves {
	BEGolemGreaves() : base() {
		$this.Name               = 'Golem Greaves'
		$this.MapObjName         = 'golemgreaves'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves crafted from enchanted stone.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAutomatonGreaves : BEGreaves {
	BEAutomatonGreaves() : base() {
		$this.Name               = 'Automaton Greaves'
		$this.MapObjName         = 'automatongreaves'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 48
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Mechanical greaves, precisely engineered.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEClockworkGreaves : BEGreaves {
	BEClockworkGreaves() : base() {
		$this.Name               = 'Clockwork Greaves'
		$this.MapObjName         = 'clockworkgreaves'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 52
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves with intricate clockwork mechanisms.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESteamGreaves : BEGreaves {
	BESteamGreaves() : base() {
		$this.Name               = 'Steam Greaves'
		$this.MapObjName         = 'steamgreaves'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves powered by steam, heavy but powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMagitechGreaves : BEGreaves {
	BEMagitechGreaves() : base() {
		$this.Name               = 'Magitech Greaves'
		$this.MapObjName         = 'magitechgreaves'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves combining magic and technology.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArcaneGreaves : BEGreaves {
	BEArcaneGreaves() : base() {
		$this.Name               = 'Arcane Greaves'
		$this.MapObjName         = 'arcanegreaves'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves infused with raw arcane power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEtherealGreaves : BEGreaves {
	BEEtherealGreaves() : base() {
		$this.Name               = 'Ethereal Greaves'
		$this.MapObjName         = 'etherealgreaves'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 48
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves existing between realms, difficult to perceive.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAstralGreaves : BEGreaves {
	BEAstralGreaves() : base() {
		$this.Name               = 'Astral Greaves'
		$this.MapObjName         = 'astralgreaves'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 52
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that draw power from the stars.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECosmicGreaves : BEGreaves {
	BECosmicGreaves() : base() {
		$this.Name               = 'Cosmic Greaves'
		$this.MapObjName         = 'cosmicgreaves'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of the cosmos, vast and powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENebulaGreaves : BEGreaves {
	BENebulaGreaves() : base() {
		$this.Name               = 'Nebula Greaves'
		$this.MapObjName         = 'nebulagreaves'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves shimmering with cosmic dust.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGalacticGreaves : BEGreaves {
	BEGalacticGreaves() : base() {
		$this.Name               = 'Galactic Greaves'
		$this.MapObjName         = 'galacticgreaves'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 58
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves from beyond the galaxy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERunicGreaves : BEGreaves {
	BERunicGreaves() : base() {
		$this.Name               = 'Runic Greaves'
		$this.MapObjName         = 'runicgreaves'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves inscribed with ancient runes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlyphGreaves : BEGreaves {
	BEGlyphGreaves() : base() {
		$this.Name               = 'Glyph Greaves'
		$this.MapObjName         = 'glyphgreaves'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 38
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves adorned with powerful magical symbols.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESigilGreaves : BEGreaves {
	BESigilGreaves() : base() {
		$this.Name               = 'Sigil Greaves'
		$this.MapObjName         = 'sigilgreaves'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves bearing potent magical sigils.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECabalGreaves : BEGreaves {
	BECabalGreaves() : base() {
		$this.Name               = 'Cabal Greaves'
		$this.MapObjName         = 'cabalgreaves'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 42
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a secret magical society.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECultistGreaves : BEGreaves {
	BECultistGreaves() : base() {
		$this.Name               = 'Cultist Greaves'
		$this.MapObjName         = 'cultistgreaves'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves worn by a dark cult.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEHereticGreaves : BEGreaves {
	BEHereticGreaves() : base() {
		$this.Name               = 'Heretic Greaves'
		$this.MapObjName         = 'hereticgreaves'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of those who defy dogma.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEApostateGreaves : BEGreaves {
	BEApostateGreaves() : base() {
		$this.Name               = 'Apostate Greaves'
		$this.MapObjName         = 'apostategreaves'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of one who has renounced their faith.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BERebelGreaves : BEGreaves {
	BERebelGreaves() : base() {
		$this.Name               = 'Rebel Greaves'
		$this.MapObjName         = 'rebelgreaves'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 15
			[StatId]::Speed = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of resistance fighters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOutlawGreaves : BEGreaves {
	BEOutlawGreaves() : base() {
		$this.Name               = 'Outlaw Greaves'
		$this.MapObjName         = 'outlawgreaves'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 12
			[StatId]::Speed = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for those living outside the law.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBanditGreaves : BEGreaves {
	BEBanditGreaves() : base() {
		$this.Name               = 'Bandit Greaves'
		$this.MapObjName         = 'banditgreaves'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves favored by brigands.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThiefGreaves : BEGreaves {
	BEThiefGreaves() : base() {
		$this.Name               = 'Thief Greaves'
		$this.MapObjName         = 'thiefgreaves'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 7
			[StatId]::Speed = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light greaves for stealthy operatives.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERogueGreaves : BEGreaves {
	BERogueGreaves() : base() {
		$this.Name               = 'Rogue Greaves'
		$this.MapObjName         = 'roguegreaves'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 10
			[StatId]::Speed = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for cunning and agile adventurers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAssassinGreaves : BEGreaves {
	BEAssassinGreaves() : base() {
		$this.Name               = 'Assassin Greaves'
		$this.MapObjName         = 'assassingreaves'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 18
			[StatId]::Speed = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves designed for silent kills.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEExecutionerGreaves : BEGreaves {
	BEExecutionerGreaves() : base() {
		$this.Name               = 'Executioner Greaves'
		$this.MapObjName         = 'executionergreaves'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy greaves for those who carry out sentences.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BETorturerGreaves : BEGreaves {
	BETorturerGreaves() : base() {
		$this.Name               = 'Torturer Greaves'
		$this.MapObjName         = 'torturergreaves'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of those who inflict pain.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESlayerGreaves : BEGreaves {
	BESlayerGreaves() : base() {
		$this.Name               = 'Slayer Greaves'
		$this.MapObjName         = 'slayergreaves'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 38
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a monster hunter.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVanquisherGreaves : BEGreaves {
	BEVanquisherGreaves() : base() {
		$this.Name               = 'Vanquisher Greaves'
		$this.MapObjName         = 'vanquishergreaves'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of one who utterly defeats their foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEConquerorGreaves : BEGreaves {
	BEConquerorGreaves() : base() {
		$this.Name               = 'Conqueror Greaves'
		$this.MapObjName         = 'conquerorgreaves'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a victorious leader.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BETyrantGreaves : BEGreaves {
	BETyrantGreaves() : base() {
		$this.Name               = 'Tyrant Greaves'
		$this.MapObjName         = 'tyrantgreaves'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 42
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of an oppressive ruler.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDespotGreaves : BEGreaves {
	BEDespotGreaves() : base() {
		$this.Name               = 'Despot Greaves'
		$this.MapObjName         = 'despotgreaves'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of an absolute ruler.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEOverlordGreaves : BEGreaves {
	BEOverlordGreaves() : base() {
		$this.Name               = 'Overlord Greaves'
		$this.MapObjName         = 'overlordgreaves'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a supreme master.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEWarlordGreaves : BEGreaves {
	BEWarlordGreaves() : base() {
		$this.Name               = 'Warlord Greaves'
		$this.MapObjName         = 'warlordgreaves'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 58
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a powerful military leader.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEChieftainGreaves : BEGreaves {
	BEChieftainGreaves() : base() {
		$this.Name               = 'Chieftain Greaves'
		$this.MapObjName         = 'chieftaingreaves'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a tribal leader.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEShamanGreaves : BEGreaves {
	BEShamanGreaves() : base() {
		$this.Name               = 'Shaman Greaves'
		$this.MapObjName         = 'shamangreaves'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a spiritual guide.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEOracleGreaves : BEGreaves {
	BEOracleGreaves() : base() {
		$this.Name               = 'Oracle Greaves'
		$this.MapObjName         = 'oraclegreaves'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that enhance prophetic visions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESeerGreaves : BEGreaves {
	BESeerGreaves() : base() {
		$this.Name               = 'Seer Greaves'
		$this.MapObjName         = 'seergreaves'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that reveal hidden truths.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEProphetGreaves : BEGreaves {
	BEProphetGreaves() : base() {
		$this.Name               = 'Prophet Greaves'
		$this.MapObjName         = 'prophetgreaves'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a divine messenger.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESageGreaves : BEGreaves {
	BESageGreaves() : base() {
		$this.Name               = 'Sage Greaves'
		$this.MapObjName         = 'sagegreaves'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of profound wisdom.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEScholarGreaves : BEGreaves {
	BEScholarGreaves() : base() {
		$this.Name               = 'Scholar Greaves'
		$this.MapObjName         = 'scholargreaves'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves worn by academic scholars.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELibrarianGreaves : BEGreaves {
	BELibrarianGreaves() : base() {
		$this.Name               = 'Librarian Greaves'
		$this.MapObjName         = 'librariangreaves'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for diligent keepers of knowledge.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHistorianGreaves : BEGreaves {
	BEHistorianGreaves() : base() {
		$this.Name               = 'Historian Greaves'
		$this.MapObjName         = 'historiangreaves'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for those who study the past.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArchivistGreaves : BEGreaves {
	BEArchivistGreaves() : base() {
		$this.Name               = 'Archivist Greaves'
		$this.MapObjName         = 'archivistgreaves'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for protectors of ancient records.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArtisanGreaves : BEGreaves {
	BEArtisanGreaves() : base() {
		$this.Name               = 'Artisan Greaves'
		$this.MapObjName         = 'artisangreaves'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves worn by skilled craftspeople.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEngineerGreaves : BEGreaves {
	BEEngineerGreaves() : base() {
		$this.Name               = 'Engineer Greaves'
		$this.MapObjName         = 'engineergreaves'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of mechanical innovators.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInventorGreaves : BEGreaves {
	BEInventorGreaves() : base() {
		$this.Name               = 'Inventor Greaves'
		$this.MapObjName         = 'inventorgreaves'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for creative minds.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAlchemistGreaves : BEGreaves {
	BEAlchemistGreaves() : base() {
		$this.Name               = 'Alchemist Greaves'
		$this.MapObjName         = 'alchemistgreaves'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for those who transmute elements.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChemistGreaves : BEGreaves {
	BEChemistGreaves() : base() {
		$this.Name               = 'Chemist Greaves'
		$this.MapObjName         = 'chemistgreaves'
		$this.PurchasePrice      = 580
		$this.SellPrice          = 290
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for scientific experimenters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBotanistGreaves : BEGreaves {
	BEBotanistGreaves() : base() {
		$this.Name               = 'Botanist Greaves'
		$this.MapObjName         = 'botanistgreaves'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for plant specialists.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZoologistGreaves : BEGreaves {
	BEZoologistGreaves() : base() {
		$this.Name               = 'Zoologist Greaves'
		$this.MapObjName         = 'zoologistgreaves'
		$this.PurchasePrice      = 420
		$this.SellPrice          = 210
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for animal researchers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGeologistGreaves : BEGreaves {
	BEGeologistGreaves() : base() {
		$this.Name               = 'Geologist Greaves'
		$this.MapObjName         = 'geologistgreaves'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for earth scientists.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAstronomerGreaves : BEGreaves {
	BEAstronomerGreaves() : base() {
		$this.Name               = 'Astronomer Greaves'
		$this.MapObjName         = 'astronomergreaves'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for star gazers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhilosopherGreaves : BEGreaves {
	BEPhilosopherGreaves() : base() {
		$this.Name               = 'Philosopher Greaves'
		$this.MapObjName         = 'philosophergreaves'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for deep thinkers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDiplomatGreaves : BEGreaves {
	BEDiplomatGreaves() : base() {
		$this.Name               = 'Diplomat Greaves'
		$this.MapObjName         = 'diplomatgreaves'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for negotiators and envoys.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMediatorGreaves : BEGreaves {
	BEMediatorGreaves() : base() {
		$this.Name               = 'Mediator Greaves'
		$this.MapObjName         = 'mediatorgreaves'
		$this.PurchasePrice      = 320
		$this.SellPrice          = 160
		$this.TargetStats        = @{
			[StatId]::Defense = 11
			[StatId]::MagicDefense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for resolving conflicts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEmissaryGreaves : BEGreaves {
	BEEmissaryGreaves() : base() {
		$this.Name               = 'Emissary Greaves'
		$this.MapObjName         = 'emissarygreaves'
		$this.PurchasePrice      = 380
		$this.SellPrice          = 190
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for special representatives.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAmbassadorGreaves : BEGreaves {
	BEAmbassadorGreaves() : base() {
		$this.Name               = 'Ambassador Greaves'
		$this.MapObjName         = 'ambassadorgreaves'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for high-ranking envoys.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESenatorGreaves : BEGreaves {
	BESenatorGreaves() : base() {
		$this.Name               = 'Senator Greaves'
		$this.MapObjName         = 'senatorgreaves'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a governmental official.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMagistrateGreaves : BEGreaves {
	BEMagistrateGreaves() : base() {
		$this.Name               = 'Magistrate Greaves'
		$this.MapObjName         = 'magistrategreaves'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a civil officer.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEJudgeGreaves : BEGreaves {
	BEJudgeGreaves() : base() {
		$this.Name               = 'Judge Greaves'
		$this.MapObjName         = 'judgegreaves'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a judicial authority.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESheriffGreaves : BEGreaves {
	BESheriffGreaves() : base() {
		$this.Name               = 'Sheriff Greaves'
		$this.MapObjName         = 'sheriffgreaves'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a law enforcer.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMarshalGreaves : BEGreaves {
	BEMarshalGreaves() : base() {
		$this.Name               = 'Marshal Greaves'
		$this.MapObjName         = 'marshalgreaves'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a high-ranking law officer.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEInvestigatorGreaves : BEGreaves {
	BEInvestigatorGreaves() : base() {
		$this.Name               = 'Investigator Greaves'
		$this.MapObjName         = 'investigatorgreaves'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for detectives.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAnalystGreaves : BEGreaves {
	BEAnalystGreaves() : base() {
		$this.Name               = 'Analyst Greaves'
		$this.MapObjName         = 'analystgreaves'
		$this.PurchasePrice      = 380
		$this.SellPrice          = 190
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for data examination.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEForensicGreaves : BEGreaves {
	BEForensicGreaves() : base() {
		$this.Name               = 'Forensic Greaves'
		$this.MapObjName         = 'forensicgreaves'
		$this.PurchasePrice      = 420
		$this.SellPrice          = 210
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for crime scene analysis.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETacticianGreaves : BEGreaves {
	BETacticianGreaves() : base() {
		$this.Name               = 'Tactician Greaves'
		$this.MapObjName         = 'tacticiangreaves'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for strategic thinkers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStrategistGreaves : BEGreaves {
	BEStrategistGreaves() : base() {
		$this.Name               = 'Strategist Greaves'
		$this.MapObjName         = 'strategistgreaves'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for grand scale planning.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BELogisticsGreaves : BEGreaves {
	BELogisticsGreaves() : base() {
		$this.Name               = 'Logistics Greaves'
		$this.MapObjName         = 'logisticsgreaves'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for supply management.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERecruiterGreaves : BEGreaves {
	BERecruiterGreaves() : base() {
		$this.Name               = 'Recruiter Greaves'
		$this.MapObjName         = 'recruitergreaves'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for enlisting new members.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETrainerGreaves : BEGreaves {
	BETrainerGreaves() : base() {
		$this.Name               = 'Trainer Greaves'
		$this.MapObjName         = 'trainergreaves'
		$this.PurchasePrice      = 320
		$this.SellPrice          = 160
		$this.TargetStats        = @{
			[StatId]::Defense = 11
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for skill development.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMentorGreaves : BEGreaves {
	BEMentorGreaves() : base() {
		$this.Name               = 'Mentor Greaves'
		$this.MapObjName         = 'mentorgreaves'
		$this.PurchasePrice      = 380
		$this.SellPrice          = 190
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for guiding others.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInstructorGreaves : BEGreaves {
	BEInstructorGreaves() : base() {
		$this.Name               = 'Instructor Greaves'
		$this.MapObjName         = 'instructorgreaves'
		$this.PurchasePrice      = 420
		$this.SellPrice          = 210
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for teaching new techniques.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECoachGreaves : BEGreaves {
	BECoachGreaves() : base() {
		$this.Name               = 'Coach Greaves'
		$this.MapObjName         = 'coachgreaves'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for athletic guidance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEProspectorGreaves : BEGreaves {
	BEProspectorGreaves() : base() {
		$this.Name               = 'Prospector Greaves'
		$this.MapObjName         = 'prospectorgreaves'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for mineral seekers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMinerGreaves : BEGreaves {
	BEMinerGreaves() : base() {
		$this.Name               = 'Miner Greaves'
		$this.MapObjName         = 'minergreaves'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for underground excavation.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEQuarrymanGreaves : BEGreaves {
	BEQuarrymanGreaves() : base() {
		$this.Name               = 'Quarryman Greaves'
		$this.MapObjName         = 'quarrymangreaves'
		$this.PurchasePrice      = 320
		$this.SellPrice          = 160
		$this.TargetStats        = @{
			[StatId]::Defense = 11
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for stone extraction.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEExcavatorGreaves : BEGreaves {
	BEExcavatorGreaves() : base() {
		$this.Name               = 'Excavator Greaves'
		$this.MapObjName         = 'excavatorgreaves'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for deep digging.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDelverGreaves : BEGreaves {
	BEDelverGreaves() : base() {
		$this.Name               = 'Delver Greaves'
		$this.MapObjName         = 'delvergreaves'
		$this.PurchasePrice      = 380
		$this.SellPrice          = 190
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for exploring subterranean depths.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpeleologistGreaves : BEGreaves {
	BESpeleologistGreaves() : base() {
		$this.Name               = 'Speleologist Greaves'
		$this.MapObjName         = 'speleologistgreaves'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for cave explorers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECavernGreaves : BEGreaves {
	BECavernGreaves() : base() {
		$this.Name               = 'Cavern Greaves'
		$this.MapObjName         = 'caverngreaves'
		$this.PurchasePrice      = 420
		$this.SellPrice          = 210
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for damp cave environments.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGrottoGreaves : BEGreaves {
	BEGrottoGreaves() : base() {
		$this.Name               = 'Grotto Greaves'
		$this.MapObjName         = 'grottogreaves'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for small cave systems.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESubterraneanGreaves : BEGreaves {
	BESubterraneanGreaves() : base() {
		$this.Name               = 'Subterranean Greaves'
		$this.MapObjName         = 'subterraneangreaves'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for underground travel.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEUnderdarkGreaves : BEGreaves {
	BEUnderdarkGreaves() : base() {
		$this.Name               = 'Underdark Greaves'
		$this.MapObjName         = 'underdarkgreaves'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves for the deep and dangerous underground.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAbyssalGreaves : BEGreaves {
	BEAbyssalGreaves() : base() {
		$this.Name               = 'Abyssal Greaves'
		$this.MapObjName         = 'abyssalgreaves'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 48
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves from the deepest chasms.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInfernalGreaves : BEGreaves {
	BEInfernalGreaves() : base() {
		$this.Name               = 'Infernal Greaves'
		$this.MapObjName         = 'infernalgreaves'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 52
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves forged in the fires of hell.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDemonicGreaves : BEGreaves {
	BEDemonicGreaves() : base() {
		$this.Name               = 'Demonic Greaves'
		$this.MapObjName         = 'demonicgreaves'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves infused with the essence of demons.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEFallenGreaves : BEGreaves {
	BEFallenGreaves() : base() {
		$this.Name               = 'Fallen Greaves'
		$this.MapObjName         = 'fallengreaves'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a corrupted warrior.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECorruptedGreaves : BEGreaves {
	BECorruptedGreaves() : base() {
		$this.Name               = 'Corrupted Greaves'
		$this.MapObjName         = 'corruptedgreaves'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves twisted by dark forces.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlightedGreaves : BEGreaves {
	BEBlightedGreaves() : base() {
		$this.Name               = 'Blighted Greaves'
		$this.MapObjName         = 'blightedgreaves'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves afflicted by a terrible curse.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPlaguedGreaves : BEGreaves {
	BEPlaguedGreaves() : base() {
		$this.Name               = 'Plagued Greaves'
		$this.MapObjName         = 'plaguedgreaves'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves spreading disease and decay.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENecroticGreaves : BEGreaves {
	BENecroticGreaves() : base() {
		$this.Name               = 'Necrotic Greaves'
		$this.MapObjName         = 'necroticgreaves'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 48
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves linked to death magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BERevenantGreaves : BEGreaves {
	BERevenantGreaves() : base() {
		$this.Name               = 'Revenant Greaves'
		$this.MapObjName         = 'revenantgreaves'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 42
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of one returned from the grave.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEPhantomGreaves : BEGreaves {
	BEPhantomGreaves() : base() {
		$this.Name               = 'Phantom Greaves'
		$this.MapObjName         = 'phantomgreaves'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of an elusive spirit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadeGreaves : BEGreaves {
	BEShadeGreaves() : base() {
		$this.Name               = 'Shade Greaves'
		$this.MapObjName         = 'shadegreaves'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a shadowy entity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWraithGreaves : BEGreaves {
	BEWraithGreaves() : base() {
		$this.Name               = 'Wraith Greaves'
		$this.MapObjName         = 'wraithgreaves'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a malevolent specter.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBansheeGreaves : BEGreaves {
	BEBansheeGreaves() : base() {
		$this.Name               = 'Banshee Greaves'
		$this.MapObjName         = 'bansheegreaves'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that emit a mournful wail.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESuccubusGreaves : BEGreaves {
	BESuccubusGreaves() : base() {
		$this.Name               = 'Succubus Greaves'
		$this.MapObjName         = 'succubusgreaves'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a seductive demon.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEIncubusGreaves : BEGreaves {
	BEIncubusGreaves() : base() {
		$this.Name               = 'Incubus Greaves'
		$this.MapObjName         = 'incubusgreaves'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a charming demon.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESirenGreaves : BEGreaves {
	BESirenGreaves() : base() {
		$this.Name               = 'Siren Greaves'
		$this.MapObjName         = 'sirengreaves'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that lure sailors to their doom.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDryadGreaves : BEGreaves {
	BEDryadGreaves() : base() {
		$this.Name               = 'Dryad Greaves'
		$this.MapObjName         = 'dryadgreaves'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves made from living wood, attuned to forests.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BENymphGreaves : BEGreaves {
	BENymphGreaves() : base() {
		$this.Name               = 'Nymph Greaves'
		$this.MapObjName         = 'nymphgreaves'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a beautiful nature spirit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESylphGreaves : BEGreaves {
	BESylphGreaves() : base() {
		$this.Name               = 'Sylph Greaves'
		$this.MapObjName         = 'sylphgreaves'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 20
			[StatId]::Speed = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light greaves of an air spirit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEUndineGreaves : BEGreaves {
	BEUndineGreaves() : base() {
		$this.Name               = 'Undine Greaves'
		$this.MapObjName         = 'undinegreaves'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a water spirit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESalamanderGreaves : BEGreaves {
	BESalamanderGreaves() : base() {
		$this.Name               = 'Salamander Greaves'
		$this.MapObjName         = 'salamandergreaves'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a fire spirit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGnomeGreaves : BEGreaves {
	BEGnomeGreaves() : base() {
		$this.Name               = 'Gnome Greaves'
		$this.MapObjName         = 'gnomegreaves'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Small but sturdy greaves, crafted by gnomes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPixieGreaves : BEGreaves {
	BEPixieGreaves() : base() {
		$this.Name               = 'Pixie Greaves'
		$this.MapObjName         = 'pixiegreaves'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 10
			[StatId]::Speed = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Tiny and almost weightless greaves.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEFairyGreaves : BEGreaves {
	BEFairyGreaves() : base() {
		$this.Name               = 'Fairy Greaves'
		$this.MapObjName         = 'fairygreaves'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 12
			[StatId]::Speed = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Delicate and enchanting greaves.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESpriteGreaves : BEGreaves {
	BESpriteGreaves() : base() {
		$this.Name               = 'Sprite Greaves'
		$this.MapObjName         = 'spritegreaves'
		$this.PurchasePrice      = 170
		$this.SellPrice          = 85
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 10
			[StatId]::Speed = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Nimble greaves of a playful spirit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BELeprechaunGreaves : BEGreaves {
	BELeprechaunGreaves() : base() {
		$this.Name               = 'Leprechaun Greaves'
		$this.MapObjName         = 'leprechaungreaves'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that bring good fortune.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGoblinoidGreaves : BEGreaves {
	BEGoblinoidGreaves() : base() {
		$this.Name               = 'Goblinoid Greaves'
		$this.MapObjName         = 'goblinoidgreaves'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 4
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves favored by various goblinoid races.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKoboldGreaves : BEGreaves {
	BEKoboldGreaves() : base() {
		$this.Name               = 'Kobold Greaves'
		$this.MapObjName         = 'koboldgreaves'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::Defense = 3
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crude greaves of kobolds.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGnollGreaves : BEGreaves {
	BEGnollGreaves() : base() {
		$this.Name               = 'Gnoll Greaves'
		$this.MapObjName         = 'gnollgreaves'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Rough greaves of hyena folk.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBugbearGreaves : BEGreaves {
	BEBugbearGreaves() : base() {
		$this.Name               = 'Bugbear Greaves'
		$this.MapObjName         = 'bugbeargreaves'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy greaves of bugbears.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEOgreMageGreaves : BEGreaves {
	BEOgreMageGreaves() : base() {
		$this.Name               = 'Ogre Mage Greaves'
		$this.MapObjName         = 'ogremagegreaves'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a powerful ogre mage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BETrollGreaves : BEGreaves {
	BETrollGreaves() : base() {
		$this.Name               = 'Troll Greaves'
		$this.MapObjName         = 'trollgreaves'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves with regenerative properties.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBeastGreaves : BEGreaves {
	BEBeastGreaves() : base() {
		$this.Name               = 'Beast Greaves'
		$this.MapObjName         = 'beastgreaves'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves made from monstrous beast hides.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHunterKillerGreaves : BEGreaves {
	BEHunterKillerGreaves() : base() {
		$this.Name               = 'Hunter Killer Greaves'
		$this.MapObjName         = 'hunterkillergreaves'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves designed for tracking and eliminating targets.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEPunisherGreaves : BEGreaves {
	BEPunisherGreaves() : base() {
		$this.Name               = 'Punisher Greaves'
		$this.MapObjName         = 'punishergreaves'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of relentless retribution.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEAvengerGreaves : BEGreaves {
	BEAvengerGreaves() : base() {
		$this.Name               = 'Avenger Greaves'
		$this.MapObjName         = 'avengergreaves'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 42
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of righteous vengeance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BERedeemerGreaves : BEGreaves {
	BERedeemerGreaves() : base() {
		$this.Name               = 'Redeemer Greaves'
		$this.MapObjName         = 'redeemergreaves'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that bring salvation.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEVindicatorGreaves : BEGreaves {
	BEVindicatorGreaves() : base() {
		$this.Name               = 'Vindicator Greaves'
		$this.MapObjName         = 'vindicatorgreaves'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 48
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of justified defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGloryGreaves : BEGreaves {
	BEGloryGreaves() : base() {
		$this.Name               = 'Glory Greaves'
		$this.MapObjName         = 'glorygreaves'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves signifying great honor and fame.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEValorGreaves : BEGreaves {
	BEValorGreaves() : base() {
		$this.Name               = 'Valor Greaves'
		$this.MapObjName         = 'valorgreaves'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves embodying courage and bravery.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChivalryGreaves : BEGreaves {
	BEChivalryGreaves() : base() {
		$this.Name               = 'Chivalry Greaves'
		$this.MapObjName         = 'chivalrygreaves'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 48
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves upholding the ideals of knighthood.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEHonorGreaves : BEGreaves {
	BEHonorGreaves() : base() {
		$this.Name               = 'Honor Greaves'
		$this.MapObjName         = 'honorgreaves'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves symbolizing integrity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEJusticeGreaves : BEGreaves {
	BEJusticeGreaves() : base() {
		$this.Name               = 'Justice Greaves'
		$this.MapObjName         = 'justicegreaves'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of unwavering fairness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERighteousGreaves : BEGreaves {
	BERighteousGreaves() : base() {
		$this.Name               = 'Righteous Greaves'
		$this.MapObjName         = 'righteousgreaves'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 38
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of moral rectitude.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVirtueGreaves : BEGreaves {
	BEVirtueGreaves() : base() {
		$this.Name               = 'Virtue Greaves'
		$this.MapObjName         = 'virtuegreaves'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves representing moral excellence.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPurityGreaves : BEGreaves {
	BEPurityGreaves() : base() {
		$this.Name               = 'Purity Greaves'
		$this.MapObjName         = 'puritygreaves'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of untainted essence.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEInnocenceGreaves : BEGreaves {
	BEInnocenceGreaves() : base() {
		$this.Name               = 'Innocence Greaves'
		$this.MapObjName         = 'innocencegreaves'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of a pure heart.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEHopeGreaves : BEGreaves {
	BEHopeGreaves() : base() {
		$this.Name               = 'Hope Greaves'
		$this.MapObjName         = 'hopegreaves'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that inspire optimism.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFaithGreaves : BEGreaves {
	BEFaithGreaves() : base() {
		$this.Name               = 'Faith Greaves'
		$this.MapObjName         = 'faithgreaves'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of unwavering belief.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECharityGreaves : BEGreaves {
	BECharityGreaves() : base() {
		$this.Name               = 'Charity Greaves'
		$this.MapObjName         = 'charitygreaves'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that embody benevolence.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECourageGreaves : BEGreaves {
	BECourageGreaves() : base() {
		$this.Name               = 'Courage Greaves'
		$this.MapObjName         = 'couragegreaves'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that instill bravery.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWisdomGreaves : BEGreaves {
	BEWisdomGreaves() : base() {
		$this.Name               = 'Wisdom Greaves'
		$this.MapObjName         = 'wisdomgreaves'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves of profound insight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKnowledgeGreaves : BEGreaves {
	BEKnowledgeGreaves() : base() {
		$this.Name               = 'Knowledge Greaves'
		$this.MapObjName         = 'knowledgegreaves'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that hold vast information.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETruthGreaves : BEGreaves {
	BETruthGreaves() : base() {
		$this.Name               = 'Truth Greaves'
		$this.MapObjName         = 'truthgreaves'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that reveal falsehoods.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDisciplineGreaves : BEGreaves {
	BEDisciplineGreaves() : base() {
		$this.Name               = 'Discipline Greaves'
		$this.MapObjName         = 'disciplinegreaves'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that promote self-control.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPatienceGreaves : BEGreaves {
	BEPatienceGreaves() : base() {
		$this.Name               = 'Patience Greaves'
		$this.MapObjName         = 'patiencegreaves'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that foster endurance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPerseveranceGreaves : BEGreaves {
	BEPerseveranceGreaves() : base() {
		$this.Name               = 'Perseverance Greaves'
		$this.MapObjName         = 'perseverancegreaves'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Greaves that encourage persistence.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInfinityMTurtleGreaves : BEGreaves {
    BEInfinityMTurtleGreaves() : base() {
		$this.Name               = 'Infinity M Turtle Greaves'
		$this.MapObjName         = 'infinitymturtlegreaves'
		$this.PurchasePrice      = 750000
		$this.SellPrice          = 0
		$this.TargetStats        = @{
			[StatId]::Defense = 255
			[StatId]::MagicDefense = 255
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'They shoot out Minecraft Creepers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
    }
}

Class BEBearGreaves : BEGreaves {
    BEBearGreaves() : base() {
		$this.Name               = 'Bear Greaves'
		$this.MapObjName         = 'beargreaves'
		$this.PurchasePrice      = 0
		$this.SellPrice          = 0
		$this.TargetStats        = @{
			[StatId]::Defense      = 999
			[StatId]::MagicDefense = 999
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'The ultimate in fuzzy greaves.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# BOOTS
#
#//////////////////////////////////////////////////////////////////////////////

Class BELeatherBoots : BEBoots {
	BELeatherBoots() : base() {
		$this.Name               = 'Leather Boots'
		$this.MapObjName         = 'leatherboots'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::Defense = 3
			[StatId]::MagicDefense = 1
			[StatId]::Speed = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Basic leather boots, offering minimal protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPaddedBoots : BEBoots {
	BEPaddedBoots() : base() {
		$this.Name               = 'Padded Boots'
		$this.MapObjName         = 'paddedboots'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 4
			[StatId]::MagicDefense = 2
			[StatId]::Speed = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Lightly padded boots for comfortable movement.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBronzeBoots : BEBoots {
	BEBronzeBoots() : base() {
		$this.Name               = 'Bronze Boots'
		$this.MapObjName         = 'bronzeboots'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Sturdy bronze boots, providing decent foot protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIronBoots : BEBoots {
	BEIronBoots() : base() {
		$this.Name               = 'Iron Boots'
		$this.MapObjName         = 'ironboots'
		$this.PurchasePrice      = 220
		$this.SellPrice          = 110
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Common iron boots, robust and reliable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESteelBoots : BEBoots {
	BESteelBoots() : base() {
		$this.Name               = 'Steel Boots'
		$this.MapObjName         = 'steelboots'
		$this.PurchasePrice      = 320
		$this.SellPrice          = 160
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy steel boots, offering solid defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChainmailBoots : BEBoots {
	BEChainmailBoots() : base() {
		$this.Name               = 'Chainmail Boots'
		$this.MapObjName         = 'chainmailboots'
		$this.PurchasePrice      = 380
		$this.SellPrice          = 190
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Flexible chainmail foot protection, good against piercing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPlateBoots : BEBoots {
	BEPlateBoots() : base() {
		$this.Name               = 'Plate Boots'
		$this.MapObjName         = 'plateboots'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Full plate foot armor, excellent protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMithrilBoots : BEBoots {
	BEMithrilBoots() : base() {
		$this.Name               = 'Mithril Boots'
		$this.MapObjName         = 'mithrilboots'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 12
			[StatId]::Speed = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots crafted from light and strong mithril.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAdamantBoots : BEBoots {
	BEAdamantBoots() : base() {
		$this.Name               = 'Adamant Boots'
		$this.MapObjName         = 'adamantboots'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Nearly impenetrable boots made from adamant ore.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonhideBoots : BEBoots {
	BEDragonhideBoots() : base() {
		$this.Name               = 'Dragonhide Boots'
		$this.MapObjName         = 'dragonhideboots'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 36
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots made from the tough hide of a dragon.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEElvenBoots : BEBoots {
	BEElvenBoots() : base() {
		$this.Name               = 'Elven Boots'
		$this.MapObjName         = 'elvenboots'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 20
			[StatId]::Speed = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Graceful boots favored by elves, light and agile.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDwarvenBoots : BEBoots {
	BEDwarvenBoots() : base() {
		$this.Name               = 'Dwarven Boots'
		$this.MapObjName         = 'dwarvenboots'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Robust boots forged by dwarven artisans.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowBoots : BEBoots {
	BEShadowBoots() : base() {
		$this.Name               = 'Shadow Boots'
		$this.MapObjName         = 'shadowboots'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 25
			[StatId]::Speed = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots imbued with dark energies, granting stealth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEHolyBoots : BEBoots {
	BEHolyBoots() : base() {
		$this.Name               = 'Holy Boots'
		$this.MapObjName         = 'holyboots'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 29
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blessed boots that ward off evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMysticBoots : BEBoots {
	BEMysticBoots() : base() {
		$this.Name               = 'Mystic Boots'
		$this.MapObjName         = 'mysticboots'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that enhance magical aptitude.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarriorBoots : BEBoots {
	BEWarriorBoots() : base() {
		$this.Name               = 'Warrior Boots'
		$this.MapObjName         = 'warriorboots'
		$this.PurchasePrice      = 380
		$this.SellPrice          = 190
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Standard issue boots for a seasoned warrior.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKnightBoots : BEBoots {
	BEKnightBoots() : base() {
		$this.Name               = 'Knight Boots'
		$this.MapObjName         = 'knightboots'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 27
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots fit for a noble knight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESentinelBoots : BEBoots {
	BESentinelBoots() : base() {
		$this.Name               = 'Sentinel Boots'
		$this.MapObjName         = 'sentinelboots'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy boots designed for defensive stances.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEScoutBoots : BEBoots {
	BEScoutBoots() : base() {
		$this.Name               = 'Scout Boots'
		$this.MapObjName         = 'scoutboots'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 7
			[StatId]::Speed = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light boots for quick movement and evasion.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERangerBoots : BEBoots {
	BERangerBoots() : base() {
		$this.Name               = 'Ranger Boots'
		$this.MapObjName         = 'rangerboots'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 12
			[StatId]::Speed = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots suitable for wilderness survival.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBerserkerBoots : BEBoots {
	BEBerserkerBoots() : base() {
		$this.Name               = 'Berserker Boots'
		$this.MapObjName         = 'berserkerboots'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for those who fight with unrestrained fury.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEPaladinBoots : BEBoots {
	BEPaladinBoots() : base() {
		$this.Name               = 'Paladin Boots'
		$this.MapObjName         = 'paladinboots'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 37
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a holy warrior, offering divine protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESorcererBoots : BEBoots {
	BESorcererBoots() : base() {
		$this.Name               = 'Sorcerer Boots'
		$this.MapObjName         = 'sorcererboots'
		$this.PurchasePrice      = 420
		$this.SellPrice          = 210
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light boots that aid in spellcasting.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarlockBoots : BEBoots {
	BEWarlockBoots() : base() {
		$this.Name               = 'Warlock Boots'
		$this.MapObjName         = 'warlockboots'
		$this.PurchasePrice      = 480
		$this.SellPrice          = 240
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for those who dabble in dark magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAdeptBoots : BEBoots {
	BEAdeptBoots() : base() {
		$this.Name               = 'Adept Boots'
		$this.MapObjName         = 'adeptboots'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots worn by skilled practitioners.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGuardianBoots : BEBoots {
	BEGuardianBoots() : base() {
		$this.Name               = 'Guardian Boots'
		$this.MapObjName         = 'guardianboots'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 38
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots designed to protect the wearer at all costs.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHeroicBoots : BEBoots {
	BEHeroicBoots() : base() {
		$this.Name               = 'Heroic Boots'
		$this.MapObjName         = 'heroicboots'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots worn by legendary heroes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEImperialBoots : BEBoots {
	BEImperialBoots() : base() {
		$this.Name               = 'Imperial Boots'
		$this.MapObjName         = 'imperialboots'
		$this.PurchasePrice      = 680
		$this.SellPrice          = 340
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of the imperial guard, highly polished.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERoyalBoots : BEBoots {
	BERoyalBoots() : base() {
		$this.Name               = 'Royal Boots'
		$this.MapObjName         = 'royalboots'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots fit for royalty, exquisitely crafted.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETravelerBoots : BEBoots {
	BETravelerBoots() : base() {
		$this.Name               = 'Traveler Boots'
		$this.MapObjName         = 'travelerboots'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::Defense = 3
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Simple and comfortable boots for long journeys.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHunterBoots : BEBoots {
	BEHunterBoots() : base() {
		$this.Name               = 'Hunter Boots'
		$this.MapObjName         = 'hunterboots'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 9
			[StatId]::Speed = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots designed for tracking and hunting.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMercenaryBoots : BEBoots {
	BEMercenaryBoots() : base() {
		$this.Name               = 'Mercenary Boots'
		$this.MapObjName         = 'mercenaryboots'
		$this.PurchasePrice      = 260
		$this.SellPrice          = 130
		$this.TargetStats        = @{
			[StatId]::Defense = 11
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a hired blade, practical and durable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGladiatorBoots : BEBoots {
	BEGladiatorBoots() : base() {
		$this.Name               = 'Gladiator Boots'
		$this.MapObjName         = 'gladiatorboots'
		$this.PurchasePrice      = 620
		$this.SellPrice          = 310
		$this.TargetStats        = @{
			[StatId]::Defense = 33
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy boots worn by arena champions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBarbarianBoots : BEBoots {
	BEBarbarianBoots() : base() {
		$this.Name               = 'Barbarian Boots'
		$this.MapObjName         = 'barbarianboots'
		$this.PurchasePrice      = 440
		$this.SellPrice          = 220
		$this.TargetStats        = @{
			[StatId]::Defense = 23
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crude but effective boots of a barbarian.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDruidBoots : BEBoots {
	BEDruidBoots() : base() {
		$this.Name               = 'Druid Boots'
		$this.MapObjName         = 'druidboots'
		$this.PurchasePrice      = 530
		$this.SellPrice          = 265
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots made from natural materials, attuned to nature.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEClericBoots : BEBoots {
	BEClericBoots() : base() {
		$this.Name               = 'Cleric Boots'
		$this.MapObjName         = 'clericboots'
		$this.PurchasePrice      = 570
		$this.SellPrice          = 285
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 26
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots blessed by divine power, for healing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMonkBoots : BEBoots {
	BEMonkBoots() : base() {
		$this.Name               = 'Monk Boots'
		$this.MapObjName         = 'monkboots'
		$this.PurchasePrice      = 330
		$this.SellPrice          = 165
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 14
			[StatId]::Speed = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light boots for martial arts practitioners.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESamuraiBoots : BEBoots {
	BESamuraiBoots() : base() {
		$this.Name               = 'Samurai Boots'
		$this.MapObjName         = 'samuraiboots'
		$this.PurchasePrice      = 720
		$this.SellPrice          = 360
		$this.TargetStats        = @{
			[StatId]::Defense = 31
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a disciplined warrior from the East.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BENinjaBoots : BEBoots {
	BENinjaBoots() : base() {
		$this.Name               = 'Ninja Boots'
		$this.MapObjName         = 'ninjaboots'
		$this.PurchasePrice      = 460
		$this.SellPrice          = 230
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 16
			[StatId]::Speed = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light and silent boots for covert operations.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETemplarBoots : BEBoots {
	BETemplarBoots() : base() {
		$this.Name               = 'Templar Boots'
		$this.MapObjName         = 'templarboots'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Holy boots worn by zealous protectors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEnchantedBoots : BEBoots {
	BEEnchantedBoots() : base() {
		$this.Name               = 'Enchanted Boots'
		$this.MapObjName         = 'enchantedboots'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 23
			[StatId]::MagicDefense = 23
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots imbued with a minor enchantment.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrystallineBoots : BEBoots {
	BECrystallineBoots() : base() {
		$this.Name               = 'Crystalline Boots'
		$this.MapObjName         = 'crystallineboots'
		$this.PurchasePrice      = 920
		$this.SellPrice          = 460
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots crafted from durable crystals.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVolcanicBoots : BEBoots {
	BEVolcanicBoots() : base() {
		$this.Name               = 'Volcanic Boots'
		$this.MapObjName         = 'volcanicboots'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 43
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots forged near volcanic heat, resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOceanicBoots : BEBoots {
	BEOceanicBoots() : base() {
		$this.Name               = 'Oceanic Boots'
		$this.MapObjName         = 'oceanicboots'
		$this.PurchasePrice      = 980
		$this.SellPrice          = 490
		$this.TargetStats        = @{
			[StatId]::Defense = 37
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots found in the depths of the ocean, resistant to water.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEForestBoots : BEBoots {
	BEForestBoots() : base() {
		$this.Name               = 'Forest Boots'
		$this.MapObjName         = 'forestboots'
		$this.PurchasePrice      = 460
		$this.SellPrice          = 230
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 13
			[StatId]::Speed = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that blend with natural surroundings.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDesertBoots : BEBoots {
	BEDesertBoots() : base() {
		$this.Name               = 'Desert Boots'
		$this.MapObjName         = 'desertboots'
		$this.PurchasePrice      = 420
		$this.SellPrice          = 210
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots suitable for arid environments.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArcticBoots : BEBoots {
	BEArcticBoots() : base() {
		$this.Name               = 'Arctic Boots'
		$this.MapObjName         = 'arcticboots'
		$this.PurchasePrice      = 440
		$this.SellPrice          = 220
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots designed for cold climates.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarfallBoots : BEBoots {
	BEStarfallBoots() : base() {
		$this.Name               = 'Starfall Boots'
		$this.MapObjName         = 'starfallboots'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots said to be crafted from fallen stars.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunstoneBoots : BEBoots {
	BESunstoneBoots() : base() {
		$this.Name               = 'Sunstone Boots'
		$this.MapObjName         = 'sunstoneboots'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::Defense = 47
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that shimmer with solar energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMoonstoneBoots : BEBoots {
	BEMoonstoneBoots() : base() {
		$this.Name               = 'Moonstone Boots'
		$this.MapObjName         = 'moonstoneboots'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 33
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that glow with lunar power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAetherBoots : BEBoots {
	BEAetherBoots() : base() {
		$this.Name               = 'Aether Boots'
		$this.MapObjName         = 'aetherboots'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots from another dimension, ethereal.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidBoots : BEBoots {
	BEVoidBoots() : base() {
		$this.Name               = 'Void Boots'
		$this.MapObjName         = 'voidboots'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that draw power from the void.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiritBoots : BEBoots {
	BESpiritBoots() : base() {
		$this.Name               = 'Spirit Boots'
		$this.MapObjName         = 'spiritboots'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that resonate with spiritual energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAncientBoots : BEBoots {
	BEAncientBoots() : base() {
		$this.Name               = 'Ancient Boots'
		$this.MapObjName         = 'ancientboots'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 53
			[StatId]::MagicDefense = 33
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots from a forgotten civilization.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELegendaryBoots : BEBoots {
	BELegendaryBoots() : base() {
		$this.Name               = 'Legendary Boots'
		$this.MapObjName         = 'legendaryboots'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots spoken of in ancient tales.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGodlyBoots : BEBoots {
	BEGodlyBoots() : base() {
		$this.Name               = 'Godly Boots'
		$this.MapObjName         = 'godlyboots'
		$this.PurchasePrice      = 2400
		$this.SellPrice          = 1200
		$this.TargetStats        = @{
			[StatId]::Defense = 85
			[StatId]::MagicDefense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots worn by deities, immense power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEApprenticeBoots : BEBoots {
	BEApprenticeBoots() : base() {
		$this.Name               = 'Apprentice Boots'
		$this.MapObjName         = 'apprenticeboots'
		$this.PurchasePrice      = 60
		$this.SellPrice          = 30
		$this.TargetStats        = @{
			[StatId]::Defense = 2
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Basic boots for aspiring adventurers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEJourneymanBoots : BEBoots {
	BEJourneymanBoots() : base() {
		$this.Name               = 'Journeyman Boots'
		$this.MapObjName         = 'journeymanboots'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for those gaining experience.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMasterBoots : BEBoots {
	BEMasterBoots() : base() {
		$this.Name               = 'Master Boots'
		$this.MapObjName         = 'masterboots'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 37
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots worn by true masters of their craft.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGrandmasterBoots : BEBoots {
	BEGrandmasterBoots() : base() {
		$this.Name               = 'Grandmaster Boots'
		$this.MapObjName         = 'grandmasterboots'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of unparalleled skill and defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVanguardBoots : BEBoots {
	BEVanguardBoots() : base() {
		$this.Name               = 'Vanguard Boots'
		$this.MapObjName         = 'vanguardboots'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for the front lines of battle.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEReconBoots : BEBoots {
	BEReconBoots() : base() {
		$this.Name               = 'Recon Boots'
		$this.MapObjName         = 'reconboots'
		$this.PurchasePrice      = 320
		$this.SellPrice          = 160
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 8
			[StatId]::Speed = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light boots for reconnaissance missions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECommandoBoots : BEBoots {
	BECommandoBoots() : base() {
		$this.Name               = 'Commando Boots'
		$this.MapObjName         = 'commandoboots'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 37
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for elite fighting units.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEPathfinderBoots : BEBoots {
	BEPathfinderBoots() : base() {
		$this.Name               = 'Pathfinder Boots'
		$this.MapObjName         = 'pathfinderboots'
		$this.PurchasePrice      = 370
		$this.SellPrice          = 185
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 10
			[StatId]::Speed = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for charting unknown territories.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWandererBoots : BEBoots {
	BEWandererBoots() : base() {
		$this.Name               = 'Wanderer Boots'
		$this.MapObjName         = 'wandererboots'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 5
			[StatId]::Speed = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for eternal travelers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENomadBoots : BEBoots {
	BENomadBoots() : base() {
		$this.Name               = 'Nomad Boots'
		$this.MapObjName         = 'nomadboots'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 6
			[StatId]::Speed = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for those who live on the move.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPilgrimBoots : BEBoots {
	BEPilgrimBoots() : base() {
		$this.Name               = 'Pilgrim Boots'
		$this.MapObjName         = 'pilgrimboots'
		$this.PurchasePrice      = 220
		$this.SellPrice          = 110
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for spiritual journeys.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrusaderBoots : BEBoots {
	BECrusaderBoots() : base() {
		$this.Name               = 'Crusader Boots'
		$this.MapObjName         = 'crusaderboots'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
			[StatId]::Defense = 39
			[StatId]::MagicDefense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a holy warrior on a quest.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEInquisitorBoots : BEBoots {
	BEInquisitorBoots() : base() {
		$this.Name               = 'Inquisitor Boots'
		$this.MapObjName         = 'inquisitorboots'
		$this.PurchasePrice      = 980
		$this.SellPrice          = 490
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 29
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for those who seek out heresy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEZealotBoots : BEBoots {
	BEZealotBoots() : base() {
		$this.Name               = 'Zealot Boots'
		$this.MapObjName         = 'zealotboots'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of unwavering devotion.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEFanaticBoots : BEBoots {
	BEFanaticBoots() : base() {
		$this.Name               = 'Fanatic Boots'
		$this.MapObjName         = 'fanaticboots'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 29
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of extreme fervor.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESentryBoots : BEBoots {
	BESentryBoots() : base() {
		$this.Name               = 'Sentry Boots'
		$this.MapObjName         = 'sentryboots'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 27
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for watchful guards.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWatchmanBoots : BEBoots {
	BEWatchmanBoots() : base() {
		$this.Name               = 'Watchman Boots'
		$this.MapObjName         = 'watchmanboots'
		$this.PurchasePrice      = 630
		$this.SellPrice          = 315
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for night patrols.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMilitiaBoots : BEBoots {
	BEMilitiaBoots() : base() {
		$this.Name               = 'Militia Boots'
		$this.MapObjName         = 'militiaboots'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for civilian defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEConscriptBoots : BEBoots {
	BEConscriptBoots() : base() {
		$this.Name               = 'Conscript Boots'
		$this.MapObjName         = 'conscriptboots'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{
			[StatId]::Defense = 4
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Basic boots for newly drafted soldiers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOfficerBoots : BEBoots {
	BEOfficerBoots() : base() {
		$this.Name               = 'Officer Boots'
		$this.MapObjName         = 'officerboots'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots worn by military officers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECommanderBoots : BEBoots {
	BECommanderBoots() : base() {
		$this.Name               = 'Commander Boots'
		$this.MapObjName         = 'commanderboots'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 37
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a battle hardened commander.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGeneralBoots : BEBoots {
	BEGeneralBoots() : base() {
		$this.Name               = 'General Boots'
		$this.MapObjName         = 'generalboots'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 42
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots fit for a military general.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEmperorBoots : BEBoots {
	BEEmperorBoots() : base() {
		$this.Name               = 'Emperor Boots'
		$this.MapObjName         = 'emperorboots'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of an undisputed ruler.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEmpressBoots : BEBoots {
	BEEmpressBoots() : base() {
		$this.Name               = 'Empress Boots'
		$this.MapObjName         = 'empressboots'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 53
			[StatId]::MagicDefense = 33
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a powerful female ruler.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEHeroineBoots : BEBoots {
	BEHeroineBoots() : base() {
		$this.Name               = 'Heroine Boots'
		$this.MapObjName         = 'heroineboots'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 43
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a celebrated female hero.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEChampionBoots : BEBoots {
	BEChampionBoots() : base() {
		$this.Name               = 'Champion Boots'
		$this.MapObjName         = 'championboots'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of an undisputed champion.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEVictorBoots : BEBoots {
	BEVictorBoots() : base() {
		$this.Name               = 'Victor Boots'
		$this.MapObjName         = 'victorboots'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 43
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots worn by those who claim victory.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETriumphBoots : BEBoots {
	BETriumphBoots() : base() {
		$this.Name               = 'Triumph Boots'
		$this.MapObjName         = 'triumphboots'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 47
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots signifying great success.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAuraBoots : BEBoots {
	BEAuraBoots() : base() {
		$this.Name               = 'Aura Boots'
		$this.MapObjName         = 'auraboots'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 27
			[StatId]::MagicDefense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that emanate a protective aura.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESanctuaryBoots : BEBoots {
	BESanctuaryBoots() : base() {
		$this.Name               = 'Sanctuary Boots'
		$this.MapObjName         = 'sanctuaryboots'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 37
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that offer a sense of peace.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESeraphBoots : BEBoots {
	BESeraphBoots() : base() {
		$this.Name               = 'Seraph Boots'
		$this.MapObjName         = 'seraphboots'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 57
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of angelic origin.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECherubBoots : BEBoots {
	BECherubBoots() : base() {
		$this.Name               = 'Cherub Boots'
		$this.MapObjName         = 'cherubboots'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 35
			[StatId]::Speed = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light and protective boots.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEArchangelBoots : BEBoots {
	BEArchangelBoots() : base() {
		$this.Name               = 'Archangel Boots'
		$this.MapObjName         = 'archangelboots'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of the highest order of angels.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDemonBoots : BEBoots {
	BEDemonBoots() : base() {
		$this.Name               = 'Demon Boots'
		$this.MapObjName         = 'demonboots'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots infused with demonic power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEFiendBoots : BEBoots {
	BEFiendBoots() : base() {
		$this.Name               = 'Fiend Boots'
		$this.MapObjName         = 'fiendboots'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a malevolent spirit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEImpBoots : BEBoots {
	BEImpBoots() : base() {
		$this.Name               = 'Imp Boots'
		$this.MapObjName         = 'impboots'
		$this.PurchasePrice      = 230
		$this.SellPrice          = 115
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Small but surprisingly tough boots.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGoblinBoots : BEBoots {
	BEGoblinBoots() : base() {
		$this.Name               = 'Goblin Boots'
		$this.MapObjName         = 'goblinboots'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::Defense = 3
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crude boots taken from goblins.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOrcishBoots : BEBoots {
	BEOrcishBoots() : base() {
		$this.Name               = 'Orcish Boots'
		$this.MapObjName         = 'orcishboots'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy and brutal boots of orcs.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEOgreBoots : BEBoots {
	BEOgreBoots() : base() {
		$this.Name               = 'Ogre Boots'
		$this.MapObjName         = 'ogreboots'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Massive boots for immense creatures.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGiantBoots : BEBoots {
	BEGiantBoots() : base() {
		$this.Name               = 'Giant Boots'
		$this.MapObjName         = 'giantboots'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots sized for colossal beings.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BETitanBoots : BEBoots {
	BETitanBoots() : base() {
		$this.Name               = 'Titan Boots'
		$this.MapObjName         = 'titanboots'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 67
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of legendary titans, immensely strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonlordBoots : BEBoots {
	BEDragonlordBoots() : base() {
		$this.Name               = 'Dragonlord Boots'
		$this.MapObjName         = 'dragonlordboots'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots worn by a dragonlord.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEWyvernBoots : BEBoots {
	BEWyvernBoots() : base() {
		$this.Name               = 'Wyvern Boots'
		$this.MapObjName         = 'wyvernboots'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots crafted from wyvern scales.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhoenixBoots : BEBoots {
	BEPhoenixBoots() : base() {
		$this.Name               = 'Phoenix Boots'
		$this.MapObjName         = 'phoenixboots'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that glow with fiery essence.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGriffinBoots : BEBoots {
	BEGriffinBoots() : base() {
		$this.Name               = 'Griffin Boots'
		$this.MapObjName         = 'griffinboots'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 22
			[StatId]::Speed = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that grant swiftness and grace.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEUnicornBoots : BEBoots {
	BEUnicornBoots() : base() {
		$this.Name               = 'Unicorn Boots'
		$this.MapObjName         = 'unicornboots'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Pure boots, associated with healing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEPegasusBoots : BEBoots {
	BEPegasusBoots() : base() {
		$this.Name               = 'Pegasus Boots'
		$this.MapObjName         = 'pegasusboots'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 18
			[StatId]::Speed = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that feel weightless.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHarpyBoots : BEBoots {
	BEHarpyBoots() : base() {
		$this.Name               = 'Harpy Boots'
		$this.MapObjName         = 'harpyboots'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 13
			[StatId]::Speed = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that aid in agile aerial combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESphinxBoots : BEBoots {
	BESphinxBoots() : base() {
		$this.Name               = 'Sphinx Boots'
		$this.MapObjName         = 'sphinxboots'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of ancient wisdom and defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBasiliskBoots : BEBoots {
	BEBasiliskBoots() : base() {
		$this.Name               = 'Basilisk Boots'
		$this.MapObjName         = 'basiliskboots'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 37
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots made from basilisk hide, resistant to petrification.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHydraBoots : BEBoots {
	BEHydraBoots() : base() {
		$this.Name               = 'Hydra Boots'
		$this.MapObjName         = 'hydraboots'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 53
			[StatId]::MagicDefense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of multi-headed beasts, regenerating.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKrakenBoots : BEBoots {
	BEKrakenBoots() : base() {
		$this.Name               = 'Kraken Boots'
		$this.MapObjName         = 'krakenboots'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 47
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots from the depths, granting water resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMinotaurBoots : BEBoots {
	BEMinotaurBoots() : base() {
		$this.Name               = 'Minotaur Boots'
		$this.MapObjName         = 'minotaurboots'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 39
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of brute strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECentaurBoots : BEBoots {
	BECentaurBoots() : base() {
		$this.Name               = 'Centaur Boots'
		$this.MapObjName         = 'centaurboots'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 27
			[StatId]::MagicDefense = 13
			[StatId]::Speed = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for equestrian warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGorgonBoots : BEBoots {
	BEGorgonBoots() : base() {
		$this.Name               = 'Gorgon Boots'
		$this.MapObjName         = 'gorgonboots'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots offering protection from petrification.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWerewolfBoots : BEBoots {
	BEWerewolfBoots() : base() {
		$this.Name               = 'Werewolf Boots'
		$this.MapObjName         = 'werewolfboots'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 27
			[StatId]::MagicDefense = 16
			[StatId]::Speed = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a shapeshifter, enhances agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEVampireBoots : BEBoots {
	BEVampireBoots() : base() {
		$this.Name               = 'Vampire Boots'
		$this.MapObjName         = 'vampireboots'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that drain life from foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZombieBoots : BEBoots {
	BEZombieBoots() : base() {
		$this.Name               = 'Zombie Boots'
		$this.MapObjName         = 'zombieboots'
		$this.PurchasePrice      = 40
		$this.SellPrice          = 20
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Rotting boots, barely functional.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESkeletonBoots : BEBoots {
	BESkeletonBoots() : base() {
		$this.Name               = 'Skeleton Boots'
		$this.MapObjName         = 'skeletonboots'
		$this.PurchasePrice      = 60
		$this.SellPrice          = 30
		$this.TargetStats        = @{
			[StatId]::Defense = 2
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bony boots, surprisingly light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGhostBoots : BEBoots {
	BEGhostBoots() : base() {
		$this.Name               = 'Ghost Boots'
		$this.MapObjName         = 'ghostboots'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 27
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ethereal boots, difficult to hit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpecterBoots : BEBoots {
	BESpecterBoots() : base() {
		$this.Name               = 'Specter Boots'
		$this.MapObjName         = 'specterboots'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a powerful phantom.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELichBoots : BEBoots {
	BELichBoots() : base() {
		$this.Name               = 'Lich Boots'
		$this.MapObjName         = 'lichboots'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 37
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of an undead sorcerer.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMummyBoots : BEBoots {
	BEMummyBoots() : base() {
		$this.Name               = 'Mummy Boots'
		$this.MapObjName         = 'mummyboots'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bandaged boots, ancient and cursed.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGargoyleBoots : BEBoots {
	BEGargoyleBoots() : base() {
		$this.Name               = 'Gargoyle Boots'
		$this.MapObjName         = 'gargoyleboots'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Stone boots, offering immense defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGolemBoots : BEBoots {
	BEGolemBoots() : base() {
		$this.Name               = 'Golem Boots'
		$this.MapObjName         = 'golemboots'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots crafted from enchanted stone.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAutomatonBoots : BEBoots {
	BEAutomatonBoots() : base() {
		$this.Name               = 'Automaton Boots'
		$this.MapObjName         = 'automatonboots'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 43
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Mechanical boots, precisely engineered.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEClockworkBoots : BEBoots {
	BEClockworkBoots() : base() {
		$this.Name               = 'Clockwork Boots'
		$this.MapObjName         = 'clockworkboots'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 47
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots with intricate clockwork mechanisms.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESteamBoots : BEBoots {
	BESteamBoots() : base() {
		$this.Name               = 'Steam Boots'
		$this.MapObjName         = 'steamboots'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots powered by steam, heavy but powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMagitechBoots : BEBoots {
	BEMagitechBoots() : base() {
		$this.Name               = 'Magitech Boots'
		$this.MapObjName         = 'magitechboots'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots combining magic and technology.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArcaneBoots : BEBoots {
	BEArcaneBoots() : base() {
		$this.Name               = 'Arcane Boots'
		$this.MapObjName         = 'arcaneboots'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 27
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots infused with raw arcane power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEtherealBoots : BEBoots {
	BEEtherealBoots() : base() {
		$this.Name               = 'Ethereal Boots'
		$this.MapObjName         = 'etherealboots'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 43
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots existing between realms, difficult to perceive.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAstralBoots : BEBoots {
	BEAstralBoots() : base() {
		$this.Name               = 'Astral Boots'
		$this.MapObjName         = 'astralboots'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 37
			[StatId]::MagicDefense = 47
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that draw power from the stars.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECosmicBoots : BEBoots {
	BECosmicBoots() : base() {
		$this.Name               = 'Cosmic Boots'
		$this.MapObjName         = 'cosmicboots'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of the cosmos, vast and powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENebulaBoots : BEBoots {
	BENebulaBoots() : base() {
		$this.Name               = 'Nebula Boots'
		$this.MapObjName         = 'nebulaboots'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots shimmering with cosmic dust.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGalacticBoots : BEBoots {
	BEGalacticBoots() : base() {
		$this.Name               = 'Galactic Boots'
		$this.MapObjName         = 'galacticboots'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 53
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots from beyond the galaxy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERunicBoots : BEBoots {
	BERunicBoots() : base() {
		$this.Name               = 'Runic Boots'
		$this.MapObjName         = 'runicboots'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots inscribed with ancient runes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlyphBoots : BEBoots {
	BEGlyphBoots() : base() {
		$this.Name               = 'Glyph Boots'
		$this.MapObjName         = 'glyphboots'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots adorned with powerful magical symbols.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESigilBoots : BEBoots {
	BESigilBoots() : base() {
		$this.Name               = 'Sigil Boots'
		$this.MapObjName         = 'sigilboots'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 37
			[StatId]::MagicDefense = 29
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots bearing potent magical sigils.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECabalBoots : BEBoots {
	BECabalBoots() : base() {
		$this.Name               = 'Cabal Boots'
		$this.MapObjName         = 'cabalboots'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 39
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a secret magical society.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECultistBoots : BEBoots {
	BECultistBoots() : base() {
		$this.Name               = 'Cultist Boots'
		$this.MapObjName         = 'cultistboots'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots worn by a dark cult.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEHereticBoots : BEBoots {
	BEHereticBoots() : base() {
		$this.Name               = 'Heretic Boots'
		$this.MapObjName         = 'hereticboots'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 27
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of those who defy dogma.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEApostateBoots : BEBoots {
	BEApostateBoots() : base() {
		$this.Name               = 'Apostate Boots'
		$this.MapObjName         = 'apostateboots'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 29
			[StatId]::MagicDefense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of one who has renounced their faith.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BERebelBoots : BEBoots {
	BERebelBoots() : base() {
		$this.Name               = 'Rebel Boots'
		$this.MapObjName         = 'rebelboots'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 13
			[StatId]::Speed = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of resistance fighters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOutlawBoots : BEBoots {
	BEOutlawBoots() : base() {
		$this.Name               = 'Outlaw Boots'
		$this.MapObjName         = 'outlawboots'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 19
			[StatId]::MagicDefense = 10
			[StatId]::Speed = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for those living outside the law.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBanditBoots : BEBoots {
	BEBanditBoots() : base() {
		$this.Name               = 'Bandit Boots'
		$this.MapObjName         = 'banditboots'
		$this.PurchasePrice      = 370
		$this.SellPrice          = 185
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots favored by brigands.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThiefBoots : BEBoots {
	BEThiefBoots() : base() {
		$this.Name               = 'Thief Boots'
		$this.MapObjName         = 'thiefboots'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 6
			[StatId]::Speed = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light boots for stealthy operatives.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERogueBoots : BEBoots {
	BERogueBoots() : base() {
		$this.Name               = 'Rogue Boots'
		$this.MapObjName         = 'rogueboots'
		$this.PurchasePrice      = 370
		$this.SellPrice          = 185
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 9
			[StatId]::Speed = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for cunning and agile adventurers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAssassinBoots : BEBoots {
	BEAssassinBoots() : base() {
		$this.Name               = 'Assassin Boots'
		$this.MapObjName         = 'assassinboots'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 16
			[StatId]::Speed = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots designed for silent kills.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEExecutionerBoots : BEBoots {
	BEExecutionerBoots() : base() {
		$this.Name               = 'Executioner Boots'
		$this.MapObjName         = 'executionerboots'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy boots for those who carry out sentences.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BETorturerBoots : BEBoots {
	BETorturerBoots() : base() {
		$this.Name               = 'Torturer Boots'
		$this.MapObjName         = 'torturerboots'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 27
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of those who inflict pain.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESlayerBoots : BEBoots {
	BESlayerBoots() : base() {
		$this.Name               = 'Slayer Boots'
		$this.MapObjName         = 'slayerboots'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a monster hunter.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVanquisherBoots : BEBoots {
	BEVanquisherBoots() : base() {
		$this.Name               = 'Vanquisher Boots'
		$this.MapObjName         = 'vanquisherboots'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of one who utterly defeats their foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEConquerorBoots : BEBoots {
	BEConquerorBoots() : base() {
		$this.Name               = 'Conqueror Boots'
		$this.MapObjName         = 'conquerorboots'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a victorious leader.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BETyrantBoots : BEBoots {
	BETyrantBoots() : base() {
		$this.Name               = 'Tyrant Boots'
		$this.MapObjName         = 'tyrantboots'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 39
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of an oppressive ruler.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDespotBoots : BEBoots {
	BEDespotBoots() : base() {
		$this.Name               = 'Despot Boots'
		$this.MapObjName         = 'despotboots'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 42
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of an absolute ruler.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEOverlordBoots : BEBoots {
	BEOverlordBoots() : base() {
		$this.Name               = 'Overlord Boots'
		$this.MapObjName         = 'overlordboots'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a supreme master.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEWarlordBoots : BEBoots {
	BEWarlordBoots() : base() {
		$this.Name               = 'Warlord Boots'
		$this.MapObjName         = 'warlordboots'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 53
			[StatId]::MagicDefense = 29
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a powerful military leader.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEChieftainBoots : BEBoots {
	BEChieftainBoots() : base() {
		$this.Name               = 'Chieftain Boots'
		$this.MapObjName         = 'chieftainboots'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a tribal leader.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEShamanBoots : BEBoots {
	BEShamanBoots() : base() {
		$this.Name               = 'Shaman Boots'
		$this.MapObjName         = 'shamanboots'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a spiritual guide.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEOracleBoots : BEBoots {
	BEOracleBoots() : base() {
		$this.Name               = 'Oracle Boots'
		$this.MapObjName         = 'oracleboots'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that enhance prophetic visions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESeerBoots : BEBoots {
	BESeerBoots() : base() {
		$this.Name               = 'Seer Boots'
		$this.MapObjName         = 'seerboots'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that reveal hidden truths.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEProphetBoots : BEBoots {
	BEProphetBoots() : base() {
		$this.Name               = 'Prophet Boots'
		$this.MapObjName         = 'prophetboots'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a divine messenger.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESageBoots : BEBoots {
	BESageBoots() : base() {
		$this.Name               = 'Sage Boots'
		$this.MapObjName         = 'sageboots'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 37
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of profound wisdom.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEScholarBoots : BEBoots {
	BEScholarBoots() : base() {
		$this.Name               = 'Scholar Boots'
		$this.MapObjName         = 'scholarboots'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots worn by academic scholars.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELibrarianBoots : BEBoots {
	BELibrarianBoots() : base() {
		$this.Name               = 'Librarian Boots'
		$this.MapObjName         = 'librarianboots'
		$this.PurchasePrice      = 320
		$this.SellPrice          = 160
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for diligent keepers of knowledge.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHistorianBoots : BEBoots {
	BEHistorianBoots() : base() {
		$this.Name               = 'Historian Boots'
		$this.MapObjName         = 'historianboots'
		$this.PurchasePrice      = 370
		$this.SellPrice          = 185
		$this.TargetStats        = @{
			[StatId]::Defense = 11
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for those who study the past.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArchivistBoots : BEBoots {
	BEArchivistBoots() : base() {
		$this.Name               = 'Archivist Boots'
		$this.MapObjName         = 'archivistboots'
		$this.PurchasePrice      = 420
		$this.SellPrice          = 210
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for protectors of ancient records.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArtisanBoots : BEBoots {
	BEArtisanBoots() : base() {
		$this.Name               = 'Artisan Boots'
		$this.MapObjName         = 'artisanboots'
		$this.PurchasePrice      = 230
		$this.SellPrice          = 115
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots worn by skilled craftspeople.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEngineerBoots : BEBoots {
	BEEngineerBoots() : base() {
		$this.Name               = 'Engineer Boots'
		$this.MapObjName         = 'engineerboots'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of mechanical innovators.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInventorBoots : BEBoots {
	BEInventorBoots() : base() {
		$this.Name               = 'Inventor Boots'
		$this.MapObjName         = 'inventorboots'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for creative minds.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAlchemistBoots : BEBoots {
	BEAlchemistBoots() : base() {
		$this.Name               = 'Alchemist Boots'
		$this.MapObjName         = 'alchemistboots'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for those who transmute elements.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChemistBoots : BEBoots {
	BEChemistBoots() : base() {
		$this.Name               = 'Chemist Boots'
		$this.MapObjName         = 'chemistboots'
		$this.PurchasePrice      = 530
		$this.SellPrice          = 265
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for scientific experimenters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBotanistBoots : BEBoots {
	BEBotanistBoots() : base() {
		$this.Name               = 'Botanist Boots'
		$this.MapObjName         = 'botanistboots'
		$this.PurchasePrice      = 370
		$this.SellPrice          = 185
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for plant specialists.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZoologistBoots : BEBoots {
	BEZoologistBoots() : base() {
		$this.Name               = 'Zoologist Boots'
		$this.MapObjName         = 'zoologistboots'
		$this.PurchasePrice      = 390
		$this.SellPrice          = 195
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for animal researchers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGeologistBoots : BEBoots {
	BEGeologistBoots() : base() {
		$this.Name               = 'Geologist Boots'
		$this.MapObjName         = 'geologistboots'
		$this.PurchasePrice      = 420
		$this.SellPrice          = 210
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for earth scientists.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAstronomerBoots : BEBoots {
	BEAstronomerBoots() : base() {
		$this.Name               = 'Astronomer Boots'
		$this.MapObjName         = 'astronomerboots'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for star gazers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhilosopherBoots : BEBoots {
	BEPhilosopherBoots() : base() {
		$this.Name               = 'Philosopher Boots'
		$this.MapObjName         = 'philosopherboots'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for deep thinkers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDiplomatBoots : BEBoots {
	BEDiplomatBoots() : base() {
		$this.Name               = 'Diplomat Boots'
		$this.MapObjName         = 'diplomatboots'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for negotiators and envoys.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMediatorBoots : BEBoots {
	BEMediatorBoots() : base() {
		$this.Name               = 'Mediator Boots'
		$this.MapObjName         = 'mediatorboots'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for resolving conflicts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEmissaryBoots : BEBoots {
	BEEmissaryBoots() : base() {
		$this.Name               = 'Emissary Boots'
		$this.MapObjName         = 'emissaryboots'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for special representatives.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAmbassadorBoots : BEBoots {
	BEAmbassadorBoots() : base() {
		$this.Name               = 'Ambassador Boots'
		$this.MapObjName         = 'ambassadorboots'
		$this.PurchasePrice      = 420
		$this.SellPrice          = 210
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for high-ranking envoys.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESenatorBoots : BEBoots {
	BESenatorBoots() : base() {
		$this.Name               = 'Senator Boots'
		$this.MapObjName         = 'senatorboots'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a governmental official.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMagistrateBoots : BEBoots {
	BEMagistrateBoots() : base() {
		$this.Name               = 'Magistrate Boots'
		$this.MapObjName         = 'magistrateboots'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a civil officer.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEJudgeBoots : BEBoots {
	BEJudgeBoots() : base() {
		$this.Name               = 'Judge Boots'
		$this.MapObjName         = 'judgeboots'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a judicial authority.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESheriffBoots : BEBoots {
	BESheriffBoots() : base() {
		$this.Name               = 'Sheriff Boots'
		$this.MapObjName         = 'sheriffboots'
		$this.PurchasePrice      = 370
		$this.SellPrice          = 185
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a law enforcer.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMarshalBoots : BEBoots {
	BEMarshalBoots() : base() {
		$this.Name               = 'Marshal Boots'
		$this.MapObjName         = 'marshalboots'
		$this.PurchasePrice      = 420
		$this.SellPrice          = 210
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a high-ranking law officer.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEInvestigatorBoots : BEBoots {
	BEInvestigatorBoots() : base() {
		$this.Name               = 'Investigator Boots'
		$this.MapObjName         = 'investigatorboots'
		$this.PurchasePrice      = 320
		$this.SellPrice          = 160
		$this.TargetStats        = @{
			[StatId]::Defense = 11
			[StatId]::MagicDefense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for detectives.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAnalystBoots : BEBoots {
	BEAnalystBoots() : base() {
		$this.Name               = 'Analyst Boots'
		$this.MapObjName         = 'analystboots'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for data examination.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEForensicBoots : BEBoots {
	BEForensicBoots() : base() {
		$this.Name               = 'Forensic Boots'
		$this.MapObjName         = 'forensicboots'
		$this.PurchasePrice      = 390
		$this.SellPrice          = 195
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for crime scene analysis.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETacticianBoots : BEBoots {
	BETacticianBoots() : base() {
		$this.Name               = 'Tactician Boots'
		$this.MapObjName         = 'tacticianboots'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for strategic thinkers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStrategistBoots : BEBoots {
	BEStrategistBoots() : base() {
		$this.Name               = 'Strategist Boots'
		$this.MapObjName         = 'strategistboots'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for grand scale planning.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BELogisticsBoots : BEBoots {
	BELogisticsBoots() : base() {
		$this.Name               = 'Logistics Boots'
		$this.MapObjName         = 'logisticsboots'
		$this.PurchasePrice      = 370
		$this.SellPrice          = 185
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for supply management.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERecruiterBoots : BEBoots {
	BERecruiterBoots() : base() {
		$this.Name               = 'Recruiter Boots'
		$this.MapObjName         = 'recruiterboots'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for enlisting new members.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETrainerBoots : BEBoots {
	BETrainerBoots() : base() {
		$this.Name               = 'Trainer Boots'
		$this.MapObjName         = 'trainerboots'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for skill development.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMentorBoots : BEBoots {
	BEMentorBoots() : base() {
		$this.Name               = 'Mentor Boots'
		$this.MapObjName         = 'mentorboots'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for guiding others.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInstructorBoots : BEBoots {
	BEInstructorBoots() : base() {
		$this.Name               = 'Instructor Boots'
		$this.MapObjName         = 'instructorboots'
		$this.PurchasePrice      = 390
		$this.SellPrice          = 195
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for teaching new techniques.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECoachBoots : BEBoots {
	BECoachBoots() : base() {
		$this.Name               = 'Coach Boots'
		$this.MapObjName         = 'coachboots'
		$this.PurchasePrice      = 320
		$this.SellPrice          = 160
		$this.TargetStats        = @{
			[StatId]::Defense = 11
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for athletic guidance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEProspectorBoots : BEBoots {
	BEProspectorBoots() : base() {
		$this.Name               = 'Prospector Boots'
		$this.MapObjName         = 'prospectorboots'
		$this.PurchasePrice      = 230
		$this.SellPrice          = 115
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for mineral seekers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMinerBoots : BEBoots {
	BEMinerBoots() : base() {
		$this.Name               = 'Miner Boots'
		$this.MapObjName         = 'minerboots'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for underground excavation.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEQuarrymanBoots : BEBoots {
	BEQuarrymanBoots() : base() {
		$this.Name               = 'Quarryman Boots'
		$this.MapObjName         = 'quarrymanboots'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for stone extraction.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEExcavatorBoots : BEBoots {
	BEExcavatorBoots() : base() {
		$this.Name               = 'Excavator Boots'
		$this.MapObjName         = 'excavatorboots'
		$this.PurchasePrice      = 320
		$this.SellPrice          = 160
		$this.TargetStats        = @{
			[StatId]::Defense = 11
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for deep digging.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDelverBoots : BEBoots {
	BEDelverBoots() : base() {
		$this.Name               = 'Delver Boots'
		$this.MapObjName         = 'delverboots'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for exploring subterranean depths.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpeleologistBoots : BEBoots {
	BESpeleologistBoots() : base() {
		$this.Name               = 'Speleologist Boots'
		$this.MapObjName         = 'speleologistboots'
		$this.PurchasePrice      = 370
		$this.SellPrice          = 185
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for cave explorers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECavernBoots : BEBoots {
	BECavernBoots() : base() {
		$this.Name               = 'Cavern Boots'
		$this.MapObjName         = 'cavernboots'
		$this.PurchasePrice      = 390
		$this.SellPrice          = 195
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for damp cave environments.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGrottoBoots : BEBoots {
	BEGrottoBoots() : base() {
		$this.Name               = 'Grotto Boots'
		$this.MapObjName         = 'grottoboots'
		$this.PurchasePrice      = 370
		$this.SellPrice          = 185
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for small cave systems.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESubterraneanBoots : BEBoots {
	BESubterraneanBoots() : base() {
		$this.Name               = 'Subterranean Boots'
		$this.MapObjName         = 'subterraneanboots'
		$this.PurchasePrice      = 420
		$this.SellPrice          = 210
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for underground travel.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEUnderdarkBoots : BEBoots {
	BEUnderdarkBoots() : base() {
		$this.Name               = 'Underdark Boots'
		$this.MapObjName         = 'underdarkboots'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 37
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots for the deep and dangerous underground.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAbyssalBoots : BEBoots {
	BEAbyssalBoots() : base() {
		$this.Name               = 'Abyssal Boots'
		$this.MapObjName         = 'abyssalboots'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 43
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots from the deepest chasms.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInfernalBoots : BEBoots {
	BEInfernalBoots() : base() {
		$this.Name               = 'Infernal Boots'
		$this.MapObjName         = 'infernalboots'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 47
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots forged in the fires of hell.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDemonicBoots : BEBoots {
	BEDemonicBoots() : base() {
		$this.Name               = 'Demonic Boots'
		$this.MapObjName         = 'demonicboots'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots infused with the essence of demons.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEFallenBoots : BEBoots {
	BEFallenBoots() : base() {
		$this.Name               = 'Fallen Boots'
		$this.MapObjName         = 'fallenboots'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 37
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a corrupted warrior.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECorruptedBoots : BEBoots {
	BECorruptedBoots() : base() {
		$this.Name               = 'Corrupted Boots'
		$this.MapObjName         = 'corruptedboots'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots twisted by dark forces.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlightedBoots : BEBoots {
	BEBlightedBoots() : base() {
		$this.Name               = 'Blighted Boots'
		$this.MapObjName         = 'blightedboots'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots afflicted by a terrible curse.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPlaguedBoots : BEBoots {
	BEPlaguedBoots() : base() {
		$this.Name               = 'Plagued Boots'
		$this.MapObjName         = 'plaguedboots'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 29
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots spreading disease and decay.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENecroticBoots : BEBoots {
	BENecroticBoots() : base() {
		$this.Name               = 'Necrotic Boots'
		$this.MapObjName         = 'necroticboots'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 43
			[StatId]::MagicDefense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots linked to death magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BERevenantBoots : BEBoots {
	BERevenantBoots() : base() {
		$this.Name               = 'Revenant Boots'
		$this.MapObjName         = 'revenantboots'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 39
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of one returned from the grave.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEPhantomBoots : BEBoots {
	BEPhantomBoots() : base() {
		$this.Name               = 'Phantom Boots'
		$this.MapObjName         = 'phantomboots'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 27
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of an elusive spirit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadeBoots : BEBoots {
	BEShadeBoots() : base() {
		$this.Name               = 'Shade Boots'
		$this.MapObjName         = 'shadeboots'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a shadowy entity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWraithBoots : BEBoots {
	BEWraithBoots() : base() {
		$this.Name               = 'Wraith Boots'
		$this.MapObjName         = 'wraithboots'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 29
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a malevolent specter.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBansheeBoots : BEBoots {
	BEBansheeBoots() : base() {
		$this.Name               = 'Banshee Boots'
		$this.MapObjName         = 'bansheeboots'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that emit a mournful wail.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESuccubusBoots : BEBoots {
	BESuccubusBoots() : base() {
		$this.Name               = 'Succubus Boots'
		$this.MapObjName         = 'succubusboots'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 29
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a seductive demon.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEIncubusBoots : BEBoots {
	BEIncubusBoots() : base() {
		$this.Name               = 'Incubus Boots'
		$this.MapObjName         = 'incubusboots'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 29
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a charming demon.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESirenBoots : BEBoots {
	BESirenBoots() : base() {
		$this.Name               = 'Siren Boots'
		$this.MapObjName         = 'sirenboots'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that lure sailors to their doom.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDryadBoots : BEBoots {
	BEDryadBoots() : base() {
		$this.Name               = 'Dryad Boots'
		$this.MapObjName         = 'dryadboots'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots made from living wood, attuned to forests.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BENymphBoots : BEBoots {
	BENymphBoots() : base() {
		$this.Name               = 'Nymph Boots'
		$this.MapObjName         = 'nymphboots'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a beautiful nature spirit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESylphBoots : BEBoots {
	BESylphBoots() : base() {
		$this.Name               = 'Sylph Boots'
		$this.MapObjName         = 'sylphboots'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 18
			[StatId]::Speed = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light boots of an air spirit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEUndineBoots : BEBoots {
	BEUndineBoots() : base() {
		$this.Name               = 'Undine Boots'
		$this.MapObjName         = 'undineboots'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a water spirit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESalamanderBoots : BEBoots {
	BESalamanderBoots() : base() {
		$this.Name               = 'Salamander Boots'
		$this.MapObjName         = 'salamanderboots'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a fire spirit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGnomeBoots : BEBoots {
	BEGnomeBoots() : base() {
		$this.Name               = 'Gnome Boots'
		$this.MapObjName         = 'gnomeboots'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Small but sturdy boots, crafted by gnomes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPixieBoots : BEBoots {
	BEPixieBoots() : base() {
		$this.Name               = 'Pixie Boots'
		$this.MapObjName         = 'pixieboots'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{
			[StatId]::Defense = 4
			[StatId]::MagicDefense = 9
			[StatId]::Speed = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Tiny and almost weightless boots.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEFairyBoots : BEBoots {
	BEFairyBoots() : base() {
		$this.Name               = 'Fairy Boots'
		$this.MapObjName         = 'fairyboots'
		$this.PurchasePrice      = 160
		$this.SellPrice          = 80
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 10
			[StatId]::Speed = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Delicate and enchanting boots.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESpriteBoots : BEBoots {
	BESpriteBoots() : base() {
		$this.Name               = 'Sprite Boots'
		$this.MapObjName         = 'spriteboots'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 9
			[StatId]::Speed = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Nimble boots of a playful spirit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BELeprechaunBoots : BEBoots {
	BELeprechaunBoots() : base() {
		$this.Name               = 'Leprechaun Boots'
		$this.MapObjName         = 'leprechaunboots'
		$this.PurchasePrice      = 230
		$this.SellPrice          = 115
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that bring good fortune.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGoblinoidBoots : BEBoots {
	BEGoblinoidBoots() : base() {
		$this.Name               = 'Goblinoid Boots'
		$this.MapObjName         = 'goblinoidboots'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::Defense = 3
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots favored by various goblinoid races.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKoboldBoots : BEBoots {
	BEKoboldBoots() : base() {
		$this.Name               = 'Kobold Boots'
		$this.MapObjName         = 'koboldboots'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::Defense = 2
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crude boots of kobolds.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGnollBoots : BEBoots {
	BEGnollBoots() : base() {
		$this.Name               = 'Gnoll Boots'
		$this.MapObjName         = 'gnollboots'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 4
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Rough boots of hyena folk.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBugbearBoots : BEBoots {
	BEBugbearBoots() : base() {
		$this.Name               = 'Bugbear Boots'
		$this.MapObjName         = 'bugbearboots'
		$this.PurchasePrice      = 160
		$this.SellPrice          = 80
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy boots of bugbears.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEOgreMageBoots : BEBoots {
	BEOgreMageBoots() : base() {
		$this.Name               = 'Ogre Mage Boots'
		$this.MapObjName         = 'ogremageboots'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a powerful ogre mage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BETrollBoots : BEBoots {
	BETrollBoots() : base() {
		$this.Name               = 'Troll Boots'
		$this.MapObjName         = 'trollboots'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 27
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots with regenerative properties.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBeastBoots : BEBoots {
	BEBeastBoots() : base() {
		$this.Name               = 'Beast Boots'
		$this.MapObjName         = 'beastboots'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots made from monstrous beast hides.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHunterKillerBoots : BEBoots {
	BEHunterKillerBoots() : base() {
		$this.Name               = 'Hunter Killer Boots'
		$this.MapObjName         = 'hunterkillerboots'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots designed for tracking and eliminating targets.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEPunisherBoots : BEBoots {
	BEPunisherBoots() : base() {
		$this.Name               = 'Punisher Boots'
		$this.MapObjName         = 'punisherboots'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 37
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of relentless retribution.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEAvengerBoots : BEBoots {
	BEAvengerBoots() : base() {
		$this.Name               = 'Avenger Boots'
		$this.MapObjName         = 'avengerboots'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 39
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of righteous vengeance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BERedeemerBoots : BEBoots {
	BERedeemerBoots() : base() {
		$this.Name               = 'Redeemer Boots'
		$this.MapObjName         = 'redeemerboots'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 42
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that bring salvation.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEVindicatorBoots : BEBoots {
	BEVindicatorBoots() : base() {
		$this.Name               = 'Vindicator Boots'
		$this.MapObjName         = 'vindicatorboots'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of justified defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGloryBoots : BEBoots {
	BEGloryBoots() : base() {
		$this.Name               = 'Glory Boots'
		$this.MapObjName         = 'gloryboots'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 47
			[StatId]::MagicDefense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots signifying great honor and fame.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEValorBoots : BEBoots {
	BEValorBoots() : base() {
		$this.Name               = 'Valor Boots'
		$this.MapObjName         = 'valorboots'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 29
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots embodying courage and bravery.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChivalryBoots : BEBoots {
	BEChivalryBoots() : base() {
		$this.Name               = 'Chivalry Boots'
		$this.MapObjName         = 'chivalryboots'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots upholding the ideals of knighthood.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEHonorBoots : BEBoots {
	BEHonorBoots() : base() {
		$this.Name               = 'Honor Boots'
		$this.MapObjName         = 'honorboots'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 42
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots symbolizing integrity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEJusticeBoots : BEBoots {
	BEJusticeBoots() : base() {
		$this.Name               = 'Justice Boots'
		$this.MapObjName         = 'justiceboots'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 37
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of unwavering fairness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERighteousBoots : BEBoots {
	BERighteousBoots() : base() {
		$this.Name               = 'Righteous Boots'
		$this.MapObjName         = 'righteousboots'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of moral rectitude.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVirtueBoots : BEBoots {
	BEVirtueBoots() : base() {
		$this.Name               = 'Virtue Boots'
		$this.MapObjName         = 'virtueboots'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots representing moral excellence.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPurityBoots : BEBoots {
	BEPurityBoots() : base() {
		$this.Name               = 'Purity Boots'
		$this.MapObjName         = 'purityboots'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 29
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of untainted essence.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEInnocenceBoots : BEBoots {
	BEInnocenceBoots() : base() {
		$this.Name               = 'Innocence Boots'
		$this.MapObjName         = 'innocenceboots'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 27
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of a pure heart.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEHopeBoots : BEBoots {
	BEHopeBoots() : base() {
		$this.Name               = 'Hope Boots'
		$this.MapObjName         = 'hopeboots'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that inspire optimism.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFaithBoots : BEBoots {
	BEFaithBoots() : base() {
		$this.Name               = 'Faith Boots'
		$this.MapObjName         = 'faithboots'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of unwavering belief.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECharityBoots : BEBoots {
	BECharityBoots() : base() {
		$this.Name               = 'Charity Boots'
		$this.MapObjName         = 'charityboots'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that embody benevolence.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECourageBoots : BEBoots {
	BECourageBoots() : base() {
		$this.Name               = 'Courage Boots'
		$this.MapObjName         = 'courageboots'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that instill bravery.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWisdomBoots : BEBoots {
	BEWisdomBoots() : base() {
		$this.Name               = 'Wisdom Boots'
		$this.MapObjName         = 'wisdomboots'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots of profound insight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKnowledgeBoots : BEBoots {
	BEKnowledgeBoots() : base() {
		$this.Name               = 'Knowledge Boots'
		$this.MapObjName         = 'knowledgeboots'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 19
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that hold vast information.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETruthBoots : BEBoots {
	BETruthBoots() : base() {
		$this.Name               = 'Truth Boots'
		$this.MapObjName         = 'truthboots'
		$this.PurchasePrice      = 420
		$this.SellPrice          = 210
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that reveal falsehoods.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDisciplineBoots : BEBoots {
	BEDisciplineBoots() : base() {
		$this.Name               = 'Discipline Boots'
		$this.MapObjName         = 'disciplineboots'
		$this.PurchasePrice      = 370
		$this.SellPrice          = 185
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that promote self-control.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPatienceBoots : BEBoots {
	BEPatienceBoots() : base() {
		$this.Name               = 'Patience Boots'
		$this.MapObjName         = 'patienceboots'
		$this.PurchasePrice      = 320
		$this.SellPrice          = 160
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that foster endurance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPerseveranceBoots : BEBoots {
	BEPerseveranceBoots() : base() {
		$this.Name               = 'Perseverance Boots'
		$this.MapObjName         = 'perseveranceboots'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Boots that encourage persistence.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInfinityITurtleBoots : BEBoots {
    BEInfinityITurtleBoots() : base() {
		$this.Name               = 'Infinity I Turtle Boots'
		$this.MapObjName         = 'infinityiturtleboots'
		$this.PurchasePrice      = 370000
		$this.SellPrice          = 0
		$this.TargetStats        = @{
			[StatId]::Defense = 255
			[StatId]::MagicDefense = 255
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'They bounce you really high.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
    }
}

Class BEBearBoots : BEBoots {
    BEBearBoots() : base() {
		$this.Name               = 'Bear Boots'
		$this.MapObjName         = 'bearboots'
		$this.PurchasePrice      = 0
		$this.SellPrice          = 0
		$this.TargetStats        = @{
			[StatId]::Defense      = 999
			[StatId]::MagicDefense = 999
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'The ultimate in fuzzy footwear.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# JEWELRY
#
#//////////////////////////////////////////////////////////////////////////////

Class BECopperRing : BEJewelry {
	BECopperRing() : base() {
		$this.Name               = 'Copper Ring'
		$this.MapObjName         = 'copperring'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{
			[StatId]::Defense = 1
			[StatId]::MagicDefense = 1
			[StatId]::Luck = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple, unadorned copper ring.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIronPendant : BEJewelry {
	BEIronPendant() : base() {
		$this.Name               = 'Iron Pendant'
		$this.MapObjName         = 'ironpendant'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy iron pendant, often worn by warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESilverBracelet : BEJewelry {
	BESilverBracelet() : base() {
		$this.Name               = 'Silver Bracelet'
		$this.MapObjName         = 'silverbracelet'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A delicate silver bracelet, popular among magic users.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGoldNecklace : BEJewelry {
	BEGoldNecklace() : base() {
		$this.Name               = 'Gold Necklace'
		$this.MapObjName         = 'goldnecklace'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::Luck = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A gleaming gold necklace, a sign of wealth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBronzeBrooch : BEJewelry {
	BEBronzeBrooch() : base() {
		$this.Name               = 'Bronze Brooch'
		$this.MapObjName         = 'bronzebrooch'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small bronze brooch, often used to fasten cloaks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWoodenBeads : BEJewelry {
	BEWoodenBeads() : base() {
		$this.Name               = 'Wooden Beads'
		$this.MapObjName         = 'woodenbeads'
		$this.PurchasePrice      = 60
		$this.SellPrice          = 30
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Simple wooden beads, sometimes used in rituals.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELeatherCharm : BEJewelry {
	BELeatherCharm() : base() {
		$this.Name               = 'Leather Charm'
		$this.MapObjName         = 'leathercharm'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::Luck = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small leather charm, believed to ward off evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBoneEarring : BEJewelry {
	BEBoneEarring() : base() {
		$this.Name               = 'Bone Earring'
		$this.MapObjName         = 'boneearring'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::Accuracy = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An earring crafted from polished bone.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BERubyRing : BEJewelry {
	BERubyRing() : base() {
		$this.Name               = 'Ruby Ring'
		$this.MapObjName         = 'rubyring'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::Defense = 1
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
			[StatId]::Luck = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A gold ring set with a sparkling ruby.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESapphirePendant : BEJewelry {
	BESapphirePendant() : base() {
		$this.Name               = 'Sapphire Pendant'
		$this.MapObjName         = 'sapphirependant'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 2
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A silver pendant featuring a deep blue sapphire.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEmeraldBracelet : BEJewelry {
	BEEmeraldBracelet() : base() {
		$this.Name               = 'Emerald Bracelet'
		$this.MapObjName         = 'emeraldbracelet'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 1
			[StatId]::MagicAttack = 2
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A verdant emerald bracelet, granting a touch of nature''s magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDiamondNecklace : BEJewelry {
	BEDiamondNecklace() : base() {
		$this.Name               = 'Diamond Necklace'
		$this.MapObjName         = 'diamondnecklace'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Luck = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dazzling diamond necklace, exuding prestige.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAmethystBrooch : BEJewelry {
	BEAmethystBrooch() : base() {
		$this.Name               = 'Amethyst Brooch'
		$this.MapObjName         = 'amethystbrooch'
		$this.PurchasePrice      = 380
		$this.SellPrice          = 190
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A purple amethyst brooch, known to enhance wisdom.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEOpalRing : BEJewelry {
	BEOpalRing() : base() {
		$this.Name               = 'Opal Ring'
		$this.MapObjName         = 'opalring'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 2
			[StatId]::MagicDefense = 2
			[StatId]::Luck = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An iridescent opal ring, rumored to bring good fortune.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGarnetAmulet : BEJewelry {
	BEGarnetAmulet() : base() {
		$this.Name               = 'Garnet Amulet'
		$this.MapObjName         = 'garnetamulet'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark red garnet amulet, radiating fortitude.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEJadeAnklet : BEJewelry {
	BEJadeAnklet() : base() {
		$this.Name               = 'Jade Anklet'
		$this.MapObjName         = 'jadeanklet'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 1
			[StatId]::Speed = 1
			[StatId]::Luck = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A serene jade anklet, promoting calm and focus.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD  +$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECoralBrooch : BEJewelry {
	BECoralBrooch() : base() {
		$this.Name               = 'Coral Brooch'
		$this.MapObjName         = 'coralbrooch'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A delicate coral brooch, whispering of ocean depths.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEOnyxRing : BEJewelry {
	BEOnyxRing() : base() {
		$this.Name               = 'Onyx Ring'
		$this.MapObjName         = 'onyxring'
		$this.PurchasePrice      = 420
		$this.SellPrice          = 210
		$this.TargetStats        = @{
			[StatId]::Defense = 1
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A jet black onyx ring, absorbing negative energies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEQuartzPendant : BEJewelry {
	BEQuartzPendant() : base() {
		$this.Name               = 'Quartz Pendant'
		$this.MapObjName         = 'quartzpendant'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A clear quartz pendant, amplifying magical energies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunstoneRing : BEJewelry {
	BESunstoneRing() : base() {
		$this.Name               = 'Sunstone Ring'
		$this.MapObjName         = 'sunstonering'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
			[StatId]::Luck = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vibrant sunstone ring, imbued with solar warmth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarSapphireBrooch : BEJewelry {
	BEStarSapphireBrooch() : base() {
		$this.Name               = 'Star Sapphire Brooch'
		$this.MapObjName         = 'starsapphirebrooch'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 3
			[StatId]::MagicDefense = 3
			[StatId]::Luck = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rare star sapphire brooch, said to grant wishes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDragonScaleNecklace : BEJewelry {
	BEDragonScaleNecklace() : base() {
		$this.Name               = 'Dragon Scale Necklace'
		$this.MapObjName         = 'dragonscalenecklace'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Attack = 2
			[StatId]::Defense = 3
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A necklace made of hardened dragon scales, very protective.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEPhoenixFeatherEarring : BEJewelry {
	BEPhoenixFeatherEarring() : base() {
		$this.Name               = 'Phoenix Feather Earring'
		$this.MapObjName         = 'phoenixfeatherearring'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Speed = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An earring with a vibrant phoenix feather, granting swiftness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEUnicornHornCharm : BEJewelry {
	BEUnicornHornCharm() : base() {
		$this.Name               = 'Unicorn Horn Charm'
		$this.MapObjName         = 'unicornhorncharm'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 1
			[StatId]::MagicAttack = 2
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A charm crafted from a fragment of unicorn horn, for purity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGriffinClawPendant : BEJewelry {
	BEGriffinClawPendant() : base() {
		$this.Name               = 'Griffin Claw Pendant'
		$this.MapObjName         = 'griffinclawpendant'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Attack = 2
			[StatId]::Defense = 1
			[StatId]::Accuracy = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A fierce griffin claw pendant, enhancing predatory instincts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEVampireFangNecklace : BEJewelry {
	BEVampireFangNecklace() : base() {
		$this.Name               = 'Vampire Fang Necklace'
		$this.MapObjName         = 'vampirefangnecklace'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark necklace adorned with a vampire fang, siphoning life.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWerewolfClawRing : BEJewelry {
	BEWerewolfClawRing() : base() {
		$this.Name               = 'Werewolf Claw Ring'
		$this.MapObjName         = 'werewolfclawring'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Attack = 2
			[StatId]::Speed = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ring with a werewolf claw, granting ferocity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BELichPhylactery : BEJewelry {
	BELichPhylactery() : base() {
		$this.Name               = 'Lich Phylactery'
		$this.MapObjName         = 'lichphylactery'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 2
			[StatId]::MagicAttack = 4
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark, pulsating phylactery, containing a lich''s essence.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEElementalOrb : BEJewelry {
	BEElementalOrb() : base() {
		$this.Name               = 'Elemental Orb'
		$this.MapObjName         = 'elementalorb'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::Defense = 1
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A glowing orb containing elemental power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChaosEmerald : BEJewelry {
	BEChaosEmerald() : base() {
		$this.Name               = 'Chaos Emerald'
		$this.MapObjName         = 'chaosemerald'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Attack = 2
			[StatId]::Defense = 2
			[StatId]::MagicAttack = 2
			[StatId]::MagicDefense = 2
			[StatId]::Speed = 2
			[StatId]::Luck = 2
			[StatId]::Accuracy = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A chaotic emerald, distorting reality.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD  +$($this.TargetStats[[StatId]::Luck]) LCK  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOrderGem : BEJewelry {
	BEOrderGem() : base() {
		$this.Name               = 'Order Gem'
		$this.MapObjName         = 'ordergem'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::Defense = 1
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
			[StatId]::Speed = 1
			[StatId]::Luck = 1
			[StatId]::Accuracy = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A perfectly balanced gem, promoting harmony.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Speed]) SPD  +$($this.TargetStats[[StatId]::Luck]) LCK  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELightCrystal : BEJewelry {
	BELightCrystal() : base() {
		$this.Name               = 'Light Crystal'
		$this.MapObjName         = 'lightcrystal'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 3
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A radiant crystal, emitting pure light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDarkShard : BEJewelry {
	BEDarkShard() : base() {
		$this.Name               = 'Dark Shard'
		$this.MapObjName         = 'darkshard'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::MagicAttack = 4
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A jagged dark shard, filled with malevolence.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStarfallFragment : BEJewelry {
	BEStarfallFragment() : base() {
		$this.Name               = 'Starfall Fragment'
		$this.MapObjName         = 'starfallfragment'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Speed = 3
			[StatId]::Luck = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A fragment of a fallen star, shimmering with cosmic energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD  +$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidStone : BEJewelry {
	BEVoidStone() : base() {
		$this.Name               = 'Void Stone'
		$this.MapObjName         = 'voidstone'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 2
			[StatId]::MagicAttack = 3
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A stone that absorbs all light, connected to the void.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiritEssence : BEJewelry {
	BESpiritEssence() : base() {
		$this.Name               = 'Spirit Essence'
		$this.MapObjName         = 'spiritessence'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 2
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vial containing a concentrated spirit essence.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulGem : BEJewelry {
	BESoulGem() : base() {
		$this.Name               = 'Soul Gem'
		$this.MapObjName         = 'soulgem'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::MagicAttack = 3
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A gem that holds a captured soul, eerie but powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELifebloodAmulet : BEJewelry {
	BELifebloodAmulet() : base() {
		$this.Name               = 'Lifeblood Amulet'
		$this.MapObjName         = 'lifebloodamulet'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An amulet pulsating with life energy, granting vitality.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDeathwhisperRing : BEJewelry {
	BEDeathwhisperRing() : base() {
		$this.Name               = 'Deathwhisper Ring'
		$this.MapObjName         = 'deathwhisperring'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ring that whispers of death, chilling to the touch.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETimeBenderChronometer : BEJewelry {
	BETimeBenderChronometer() : base() {
		$this.Name               = 'Time Bender Chronometer'
		$this.MapObjName         = 'timebenderchronometer'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Speed = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A complex chronometer, subtly altering the flow of time.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpaceWarpCube : BEJewelry {
	BESpaceWarpCube() : base() {
		$this.Name               = 'Space Warp Cube'
		$this.MapObjName         = 'spacewarpcube'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Accuracy = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small cube that momentarily bends space.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERealityAnchor : BEJewelry {
	BERealityAnchor() : base() {
		$this.Name               = 'Reality Anchor'
		$this.MapObjName         = 'realityanchor'
		$this.PurchasePrice      = 2300
		$this.SellPrice          = 1150
		$this.TargetStats        = @{
			[StatId]::Defense = 3
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy anchor that stabilizes reality.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamcatcherBrooch : BEJewelry {
	BEDreamcatcherBrooch() : base() {
		$this.Name               = 'Dreamcatcher Brooch'
		$this.MapObjName         = 'dreamcatcherbrooch'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
			[StatId]::Luck = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A delicate brooch woven to capture pleasant dreams.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BENightmareShard : BEJewelry {
	BENightmareShard() : base() {
		$this.Name               = 'Nightmare Shard'
		$this.MapObjName         = 'nightmareshard'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A jagged shard that induces terrifying nightmares.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BERainbowPrism : BEJewelry {
	BERainbowPrism() : base() {
		$this.Name               = 'Rainbow Prism'
		$this.MapObjName         = 'rainbowprism'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 2
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A faceted prism that refracts light into a rainbow.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEclipsePendant : BEJewelry {
	BEEclipsePendant() : base() {
		$this.Name               = 'Eclipse Pendant'
		$this.MapObjName         = 'eclipsependant'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::Defense = 1
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark pendant resembling an eclipse, symbolizing balance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAuroraCirclet : BEJewelry {
	BEAuroraCirclet() : base() {
		$this.Name               = 'Aurora Circlet'
		$this.MapObjName         = 'auroracirclet'
		$this.PurchasePrice      = 720
		$this.SellPrice          = 360
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 2
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shimmering circlet that glows with aurora colors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECometTailEarring : BEJewelry {
	BECometTailEarring() : base() {
		$this.Name               = 'Comet Tail Earring'
		$this.MapObjName         = 'comettailearring'
		$this.PurchasePrice      = 680
		$this.SellPrice          = 340
		$this.TargetStats        = @{
			[StatId]::Speed = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An earring with a fragment resembling a comet''s tail, increasing speed.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMeteoriteFragment : BEJewelry {
	BEMeteoriteFragment() : base() {
		$this.Name               = 'Meteorite Fragment'
		$this.MapObjName         = 'meteoritefragment'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rough meteorite fragment, strangely heavy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlackHoleCore : BEJewelry {
	BEBlackHoleCore() : base() {
		$this.Name               = 'Black Hole Core'
		$this.MapObjName         = 'blackholecore'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 5
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiny, dense core that draws in surrounding energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESupernovaGem : BEJewelry {
	BESupernovaGem() : base() {
		$this.Name               = 'Supernova Gem'
		$this.MapObjName         = 'supernovagem'
		$this.PurchasePrice      = 2300
		$this.SellPrice          = 1150
		$this.TargetStats        = @{
			[StatId]::Attack = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A gem that pulses with immense destructive energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECosmicDustVial : BEJewelry {
	BECosmicDustVial() : base() {
		$this.Name               = 'Cosmic Dust Vial'
		$this.MapObjName         = 'cosmicdustvial'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 3
			[StatId]::MagicDefense = 3
			[StatId]::Luck = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vial filled with shimmering cosmic dust.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENebulaCloudPin : BEJewelry {
	BENebulaCloudPin() : base() {
		$this.Name               = 'Nebula Cloud Pin'
		$this.MapObjName         = 'nebulacloudpin'
		$this.PurchasePrice      = 1750
		$this.SellPrice          = 875
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 3
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pin with a swirling nebula trapped within.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGalaxyPearl : BEJewelry {
	BEGalaxyPearl() : base() {
		$this.Name               = 'Galaxy Pearl'
		$this.MapObjName         = 'galaxypearl'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Luck = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pearl that reflects entire galaxies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDimensionShifter : BEJewelry {
	BEDimensionShifter() : base() {
		$this.Name               = 'Dimension Shifter'
		$this.MapObjName         = 'dimensionshifter'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Speed = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small device that can momentarily shift dimensions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulboundToken : BEJewelry {
	BESoulboundToken() : base() {
		$this.Name               = 'Soulbound Token'
		$this.MapObjName         = 'soulboundtoken'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Attack = 2
			[StatId]::Defense = 2
			[StatId]::MagicAttack = 2
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A token bound to a powerful soul, granting shared power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAncestralRing : BEJewelry {
	BEAncestralRing() : base() {
		$this.Name               = 'Ancestral Ring'
		$this.MapObjName         = 'ancestralring'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 1
			[StatId]::MagicAttack = 2
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ring passed down through generations, holding ancient wisdom.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHeirloomBrooch : BEJewelry {
	BEHeirloomBrooch() : base() {
		$this.Name               = 'Heirloom Brooch'
		$this.MapObjName         = 'heirloombrooch'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Luck = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A family heirloom, imbued with sentimental value.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERelicMedallion : BEJewelry {
	BERelicMedallion() : base() {
		$this.Name               = 'Relic Medallion'
		$this.MapObjName         = 'relicmedallion'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Attack = 2
			[StatId]::Defense = 2
			[StatId]::MagicAttack = 2
			[StatId]::MagicDefense = 2
			[StatId]::Luck = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A powerful medallion from a forgotten age.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESacredTear : BEJewelry {
	BESacredTear() : base() {
		$this.Name               = 'Sacred Tear'
		$this.MapObjName         = 'sacredtear'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A drop of solidified sacred tear, offering healing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEProfaneMark : BEJewelry {
	BEProfaneMark() : base() {
		$this.Name               = 'Profane Mark'
		$this.MapObjName         = 'profanemark'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Attack = 2
			[StatId]::MagicAttack = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark mark, radiating unholy energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBlessedCharm : BEJewelry {
	BEBlessedCharm() : base() {
		$this.Name               = 'Blessed Charm'
		$this.MapObjName         = 'blessedcharm'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 1
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small charm blessed by a deity, granting protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECursedAmulet : BEJewelry {
	BECursedAmulet() : base() {
		$this.Name               = 'Cursed Amulet'
		$this.MapObjName         = 'cursedamulet'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::Defense = 1
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An amulet that brings misfortune to its wearer.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFortuneCoin : BEJewelry {
	BEFortuneCoin() : base() {
		$this.Name               = 'Fortune Coin'
		$this.MapObjName         = 'fortunecoin'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Luck = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A coin that seems to always land on its desired side.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMisfortuneToken : BEJewelry {
	BEMisfortuneToken() : base() {
		$this.Name               = 'Misfortune Token'
		$this.MapObjName         = 'misfortunetoken'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A token that brings bad luck.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWhisperwindEarring : BEJewelry {
	BEWhisperwindEarring() : base() {
		$this.Name               = 'Whisperwind Earring'
		$this.MapObjName         = 'whisperwindearring'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Accuracy = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An earring that carries whispers on the wind, granting insight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEThunderclapBracelet : BEJewelry {
	BEThunderclapBracelet() : base() {
		$this.Name               = 'Thunderclap Bracelet'
		$this.MapObjName         = 'thunderclapbracelet'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::MagicAttack = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bracelet that hums with static, occasionally discharging electricity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEFirestormNecklace : BEJewelry {
	BEFirestormNecklace() : base() {
		$this.Name               = 'Firestorm Necklace'
		$this.MapObjName         = 'firestormnecklace'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Attack = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A necklace that feels warm to the touch, capable of igniting minor flames.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFrostbiteRing : BEJewelry {
	BEFrostbiteRing() : base() {
		$this.Name               = 'Frostbite Ring'
		$this.MapObjName         = 'frostbitering'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ring that chills the finger, capable of producing ice.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEarthbindAmulet : BEJewelry {
	BEEarthbindAmulet() : base() {
		$this.Name               = 'Earthbind Amulet'
		$this.MapObjName         = 'earthbindamulet'
		$this.PurchasePrice      = 780
		$this.SellPrice          = 390
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An amulet made of rough stone, rooting the wearer to the ground.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWaterflowBrooch : BEJewelry {
	BEWaterflowBrooch() : base() {
		$this.Name               = 'Waterflow Brooch'
		$this.MapObjName         = 'waterflowbrooch'
		$this.PurchasePrice      = 720
		$this.SellPrice          = 360
		$this.TargetStats        = @{
			[StatId]::Speed = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A brooch that seems to flow like water, granting agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEAirtwistCirclet : BEJewelry {
	BEAirtwistCirclet() : base() {
		$this.Name               = 'Airtwist Circlet'
		$this.MapObjName         = 'airtwistcirclet'
		$this.PurchasePrice      = 680
		$this.SellPrice          = 340
		$this.TargetStats        = @{
			[StatId]::Speed = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light circlet that allows the wearer to feel air currents.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowgraspGauntlet : BEJewelry {
	BEShadowgraspGauntlet() : base() {
		$this.Name               = 'Shadowgrasp Gauntlet'
		$this.MapObjName         = 'shadowgraspgauntlet'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::Defense = 1
			[StatId]::Speed = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A gauntlet designed to blend into shadows, enhancing stealth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BELightbringerCharm : BEJewelry {
	BELightbringerCharm() : base() {
		$this.Name               = 'Lightbringer Charm'
		$this.MapObjName         = 'lightbringercharm'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 2
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A charm that emits a soft glow, dispelling darkness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVenomthornRing : BEJewelry {
	BEVenomthornRing() : base() {
		$this.Name               = 'Venomthorn Ring'
		$this.MapObjName         = 'venomthornring'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Attack = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ring with a sharp, poisoned thorn.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlazeHeart : BEJewelry {
	BEBlazeHeart() : base() {
		$this.Name               = 'Blaze Heart'
		$this.MapObjName         = 'blazeheart'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Attack = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small, pulsating gem that burns with intense heat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlacierCore : BEJewelry {
	BEGlacierCore() : base() {
		$this.Name               = 'Glacier Core'
		$this.MapObjName         = 'glaciercore'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shard of eternal ice, chilling to the bone.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETempestTear : BEJewelry {
	BETempestTear() : base() {
		$this.Name               = 'Tempest Tear'
		$this.MapObjName         = 'tempesttear'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A solidified tear from a storm, granting control over wind.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEQuakeStone : BEJewelry {
	BEQuakeStone() : base() {
		$this.Name               = 'Quake Stone'
		$this.MapObjName         = 'quakestone'
		$this.PurchasePrice      = 1450
		$this.SellPrice          = 725
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy stone that resonates with seismic energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETidalCurrentPearl : BEJewelry {
	BETidalCurrentPearl() : base() {
		$this.Name               = 'Tidal Current Pearl'
		$this.MapObjName         = 'tidalcurrentpearl'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::Speed = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pearl that gently pulls and pushes, aiding movement.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIroncladRing : BEJewelry {
	BEIroncladRing() : base() {
		$this.Name               = 'Ironclad Ring'
		$this.MapObjName         = 'ironcladring'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy iron ring, offering basic defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESteelHeartMedallion : BEJewelry {
	BESteelHeartMedallion() : base() {
		$this.Name               = 'Steel Heart Medallion'
		$this.MapObjName         = 'steelheartmedallion'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy steel medallion, for unwavering resolve.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESilverthreadChain : BEJewelry {
	BESilverthreadChain() : base() {
		$this.Name               = 'Silverthread Chain'
		$this.MapObjName         = 'silverthreadchain'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A finely woven silver chain, for subtle magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGoldweaveBrooch : BEJewelry {
	BEGoldweaveBrooch() : base() {
		$this.Name               = 'Goldweave Brooch'
		$this.MapObjName         = 'goldweavebrooch'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Luck = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A brooch woven with gold threads, enhancing beauty.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEPlatinumAmulet : BEJewelry {
	BEPlatinumAmulet() : base() {
		$this.Name               = 'Platinum Amulet'
		$this.MapObjName         = 'platinumamulet'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 1
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sleek platinum amulet, radiating sophistication.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETitaniumRing : BEJewelry {
	BETitaniumRing() : base() {
		$this.Name               = 'Titanium Ring'
		$this.MapObjName         = 'titaniumring'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A lightweight but incredibly strong titanium ring.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMythrilCirclet : BEJewelry {
	BEMythrilCirclet() : base() {
		$this.Name               = 'Mythril Circlet'
		$this.MapObjName         = 'mythrilcirclet'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 2
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shimmering mythril circlet, for adept spellcasters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEAdamantitePendant : BEJewelry {
	BEAdamantitePendant() : base() {
		$this.Name               = 'Adamantite Pendant'
		$this.MapObjName         = 'adamantitependant'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark, heavy adamantite pendant, for ultimate defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEObsidianCharm : BEJewelry {
	BEObsidianCharm() : base() {
		$this.Name               = 'Obsidian Charm'
		$this.MapObjName         = 'obsidiancharm'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 1
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A black obsidian charm, absorbing dark energies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrystalTear : BEJewelry {
	BECrystalTear() : base() {
		$this.Name               = 'Crystal Tear'
		$this.MapObjName         = 'crystaltear'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A single, perfectly formed crystal tear.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGeodeFragment : BEJewelry {
	BEGeodeFragment() : base() {
		$this.Name               = 'Geode Fragment'
		$this.MapObjName         = 'geodefragment'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rough geode fragment, sparkling with hidden crystals.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAmberEarring : BEJewelry {
	BEAmberEarring() : base() {
		$this.Name               = 'Amber Earring'
		$this.MapObjName         = 'amberearring'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A warm amber earring, preserving ancient energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEJetBracelet : BEJewelry {
	BEJetBracelet() : base() {
		$this.Name               = 'Jet Bracelet'
		$this.MapObjName         = 'jetbracelet'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A glossy black jet bracelet, for subtle power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BETurquoiseNecklace : BEJewelry {
	BETurquoiseNecklace() : base() {
		$this.Name               = 'Turquoise Necklace'
		$this.MapObjName         = 'turquoisenecklace'
		$this.PurchasePrice      = 480
		$this.SellPrice          = 240
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vibrant turquoise necklace, connecting to the sky.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEPeridotRing : BEJewelry {
	BEPeridotRing() : base() {
		$this.Name               = 'Peridot Ring'
		$this.MapObjName         = 'peridotring'
		$this.PurchasePrice      = 470
		$this.SellPrice          = 235
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bright green peridot ring, radiating freshness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBloodstoneAmulet : BEJewelry {
	BEBloodstoneAmulet() : base() {
		$this.Name               = 'Bloodstone Amulet'
		$this.MapObjName         = 'bloodstoneamulet'
		$this.PurchasePrice      = 520
		$this.SellPrice          = 260
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark green bloodstone amulet, rumored to stop bleeding.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BELapisLazuliBrooch : BEJewelry {
	BELapisLazuliBrooch() : base() {
		$this.Name               = 'Lapis Lazuli Brooch'
		$this.MapObjName         = 'lapislazulibrooch'
		$this.PurchasePrice      = 460
		$this.SellPrice          = 230
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A deep blue lapis lazuli brooch, for inner peace.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMalachiteRing : BEJewelry {
	BEMalachiteRing() : base() {
		$this.Name               = 'Malachite Ring'
		$this.MapObjName         = 'malachitering'
		$this.PurchasePrice      = 490
		$this.SellPrice          = 245
		$this.TargetStats        = @{
			[StatId]::Defense = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A patterned malachite ring, for grounding energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMoonpetalCharm : BEJewelry {
	BEMoonpetalCharm() : base() {
		$this.Name               = 'Moonpetal Charm'
		$this.MapObjName         = 'moonpetalcharm'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A charm made from a petal bathed in moonlight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESunpetalBrooch : BEJewelry {
	BESunpetalBrooch() : base() {
		$this.Name               = 'Sunpetal Brooch'
		$this.MapObjName         = 'sunpetalbrooch'
		$this.PurchasePrice      = 620
		$this.SellPrice          = 310
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A brooch made from a petal warmed by sunlight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarflakeEarring : BEJewelry {
	BEStarflakeEarring() : base() {
		$this.Name               = 'Starflake Earring'
		$this.MapObjName         = 'starflakeearring'
		$this.PurchasePrice      = 580
		$this.SellPrice          = 290
		$this.TargetStats        = @{
			[StatId]::Speed = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A delicate earring resembling a starflake, for swiftness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECloudspunThread : BEJewelry {
	BECloudspunThread() : base() {
		$this.Name               = 'Cloudspun Thread'
		$this.MapObjName         = 'cloudspunthread'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Speed = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A strand of thread woven from clouds, incredibly light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMistveilShawl : BEJewelry {
	BEMistveilShawl() : base() {
		$this.Name               = 'Mistveil Shawl'
		$this.MapObjName         = 'mistveilshawl'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 1
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shimmering shawl that creates a light mist.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGossamerFilament : BEJewelry {
	BEGossamerFilament() : base() {
		$this.Name               = 'Gossamer Filament'
		$this.MapObjName         = 'gossamerfilament'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Speed = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An almost invisible filament, for subtle movements.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZephyrFeather : BEJewelry {
	BEZephyrFeather() : base() {
		$this.Name               = 'Zephyr Feather'
		$this.MapObjName         = 'zephyrfeather'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Speed = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A feather from the swift zephyr bird, granting speed.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDewdropPendant : BEJewelry {
	BEDewdropPendant() : base() {
		$this.Name               = 'Dewdrop Pendant'
		$this.MapObjName         = 'dewdroppendant'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pendant with a perpetual dewdrop, refreshing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BERiverstoneRing : BEJewelry {
	BERiverstoneRing() : base() {
		$this.Name               = 'Riverstone Ring'
		$this.MapObjName         = 'riverstonering'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A smooth riverstone ring, providing calm.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWaterfallGem : BEJewelry {
	BEWaterfallGem() : base() {
		$this.Name               = 'Waterfall Gem'
		$this.MapObjName         = 'waterfallgem'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A gem that constantly reflects flowing water.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMountainheartMedallion : BEJewelry {
	BEMountainheartMedallion() : base() {
		$this.Name               = 'Mountainheart Medallion'
		$this.MapObjName         = 'mountainheartmedallion'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rough medallion from the heart of a mountain, unyielding.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEForestwhisperCharm : BEJewelry {
	BEForestwhisperCharm() : base() {
		$this.Name               = 'Forestwhisper Charm'
		$this.MapObjName         = 'forestwhispercharm'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A charm that seems to hum with the sounds of the forest.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDesertRoseBrooch : BEJewelry {
	BEDesertRoseBrooch() : base() {
		$this.Name               = 'Desert Rose Brooch'
		$this.MapObjName         = 'desertrosebrooch'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A delicate brooch resembling a desert rose, enduring.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEIceboundShard : BEJewelry {
	BEIceboundShard() : base() {
		$this.Name               = 'Icebound Shard'
		$this.MapObjName         = 'iceboundshard'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 1
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shard of perpetually frozen ice, chilling to the touch.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVolcanoEmber : BEJewelry {
	BEVolcanoEmber() : base() {
		$this.Name               = 'Volcano Ember'
		$this.MapObjName         = 'volcanoember'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::MagicAttack = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small ember from a volcano, radiating heat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStormcloudEarring : BEJewelry {
	BEStormcloudEarring() : base() {
		$this.Name               = 'Stormcloud Earring'
		$this.MapObjName         = 'stormcloudearring'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An earring that crackles with faint static electricity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEQuicksandHourglass : BEJewelry {
	BEQuicksandHourglass() : base() {
		$this.Name               = 'Quicksand Hourglass'
		$this.MapObjName         = 'quicksandhourglass'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiny hourglass with perpetually shifting sand.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMirageDustVial : BEJewelry {
	BEMirageDustVial() : base() {
		$this.Name               = 'Mirage Dust Vial'
		$this.MapObjName         = 'miragedustvial'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vial of shimmering dust that creates illusions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEchoingConch : BEJewelry {
	BEEchoingConch() : base() {
		$this.Name               = 'Echoing Conch'
		$this.MapObjName         = 'echoingconch'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Luck = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A conch shell that echoes faint sounds of the past.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWhisperingWillowAmulet : BEJewelry {
	BEWhisperingWillowAmulet() : base() {
		$this.Name               = 'Whispering Willow Amulet'
		$this.MapObjName         = 'whisperingwillowamulet'
		$this.PurchasePrice      = 680
		$this.SellPrice          = 340
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An amulet carved from whispering willow wood.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEThornsEmbraceRing : BEJewelry {
	BEThornsEmbraceRing() : base() {
		$this.Name               = 'Thorns Embrace Ring'
		$this.MapObjName         = 'thornsembracering'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ring resembling thorny vines, protective.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPetalfallNecklace : BEJewelry {
	BEPetalfallNecklace() : base() {
		$this.Name               = 'Petalfall Necklace'
		$this.MapObjName         = 'petalfallnecklace'
		$this.PurchasePrice      = 720
		$this.SellPrice          = 360
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A necklace adorned with perpetually falling petals, ethereal.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECinderstoneBracelet : BEJewelry {
	BECinderstoneBracelet() : base() {
		$this.Name               = 'Cinderstone Bracelet'
		$this.MapObjName         = 'cinderstonebracelet'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bracelet made of cooled volcanic cinder.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBramblethornBrooch : BEJewelry {
	BEBramblethornBrooch() : base() {
		$this.Name               = 'Bramblethorn Brooch'
		$this.MapObjName         = 'bramblethornbrooch'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A brooch shaped like thorny brambles, deterring.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarlightCirclet : BEJewelry {
	BEStarlightCirclet() : base() {
		$this.Name               = 'Starlight Circlet'
		$this.MapObjName         = 'starlightcirclet'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 3
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A circlet that seems to gather starlight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMoonglowPendant : BEJewelry {
	BEMoonglowPendant() : base() {
		$this.Name               = 'Moonglow Pendant'
		$this.MapObjName         = 'moonglowpendant'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 2
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pendant that emits a soft, ethereal glow.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESunbeamBrooch : BEJewelry {
	BESunbeamBrooch() : base() {
		$this.Name               = 'Sunbeam Brooch'
		$this.MapObjName         = 'sunbeambrooch'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 2
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A brooch that captures a single, perpetual sunbeam.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAuroraBorealisGem : BEJewelry {
	BEAuroraBorealisGem() : base() {
		$this.Name               = 'Aurora Borealis Gem'
		$this.MapObjName         = 'auroraborealisgem'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 3
			[StatId]::MagicDefense = 3
			[StatId]::Luck = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A gem that shimmers with the colors of the aurora.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECometDustVial : BEJewelry {
	BECometDustVial() : base() {
		$this.Name               = 'Comet Dust Vial'
		$this.MapObjName         = 'cometdustvial'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Speed = 2
			[StatId]::Luck = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vial filled with the dust of a passing comet.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD  +$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMeteorShowerFragment : BEJewelry {
	BEMeteorShowerFragment() : base() {
		$this.Name               = 'Meteor Shower Fragment'
		$this.MapObjName         = 'meteorshowerfragment'
		$this.PurchasePrice      = 1450
		$this.SellPrice          = 725
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A fragment from a spectacular meteor shower.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPlanetaryRing : BEJewelry {
	BEPlanetaryRing() : base() {
		$this.Name               = 'Planetary Ring'
		$this.MapObjName         = 'planetaryring'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 2
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ring that has miniature planets orbiting it.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECelestialSphereEarring : BEJewelry {
	BECelestialSphereEarring() : base() {
		$this.Name               = 'Celestial Sphere Earring'
		$this.MapObjName         = 'celestialsphereearring'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 3
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An earring with a tiny celestial sphere.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEAndromedaCharm : BEJewelry {
	BEAndromedaCharm() : base() {
		$this.Name               = 'Andromeda Charm'
		$this.MapObjName         = 'andromedacharm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Accuracy = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A charm depicting the Andromeda galaxy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMilkyWayBracelet : BEJewelry {
	BEMilkyWayBracelet() : base() {
		$this.Name               = 'Milky Way Bracelet'
		$this.MapObjName         = 'milkywaybracelet'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 4
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bracelet that seems to swirl with countless stars.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENebulaHeart : BEJewelry {
	BENebulaHeart() : base() {
		$this.Name               = 'Nebula Heart'
		$this.MapObjName         = 'nebulaheart'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 4
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pulsating gem that resembles a distant nebula.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEQuasarShard : BEJewelry {
	BEQuasarShard() : base() {
		$this.Name               = 'Quasar Shard'
		$this.MapObjName         = 'quasarshard'
		$this.PurchasePrice      = 2400
		$this.SellPrice          = 1200
		$this.TargetStats        = @{
			[StatId]::Attack = 3
			[StatId]::MagicAttack = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shard from a quasar, radiating immense energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPulsarCore : BEJewelry {
	BEPulsarCore() : base() {
		$this.Name               = 'Pulsar Core'
		$this.MapObjName         = 'pulsarcore'
		$this.PurchasePrice      = 2300
		$this.SellPrice          = 1150
		$this.TargetStats        = @{
			[StatId]::Speed = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rapidly spinning core, generating powerful magnetic fields.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECosmicStringFragment : BEJewelry {
	BECosmicStringFragment() : base() {
		$this.Name               = 'Cosmic String Fragment'
		$this.MapObjName         = 'cosmicstringfragment'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Accuracy = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A fragment of an infinitely thin cosmic string.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMultiverseKey : BEJewelry {
	BEMultiverseKey() : base() {
		$this.Name               = 'Multiverse Key'
		$this.MapObjName         = 'multiversekey'
		$this.PurchasePrice      = 2600
		$this.SellPrice          = 1300
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A key rumored to unlock doors between dimensions.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamWeaverLoom : BEJewelry {
	BEDreamWeaverLoom() : base() {
		$this.Name               = 'Dream Weaver Loom'
		$this.MapObjName         = 'dreamweaverloom'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 2
			[StatId]::MagicDefense = 2
			[StatId]::Luck = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiny loom that subtly influences dreams.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BENightWalkerShroud : BEJewelry {
	BENightWalkerShroud() : base() {
		$this.Name               = 'Night Walker Shroud'
		$this.MapObjName         = 'nightwalkershroud'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Speed = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small piece of shroud that aids in moving unseen.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDaybreakPendant : BEJewelry {
	BEDaybreakPendant() : base() {
		$this.Name               = 'Daybreak Pendant'
		$this.MapObjName         = 'daybreakpendant'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pendant that always seems to catch the first rays of dawn.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETwilightBrooch : BEJewelry {
	BETwilightBrooch() : base() {
		$this.Name               = 'Twilight Brooch'
		$this.MapObjName         = 'twilightbrooch'
		$this.PurchasePrice      = 920
		$this.SellPrice          = 460
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A brooch that shimmers with the colors of dusk.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDuskpetalEarring : BEJewelry {
	BEDuskpetalEarring() : base() {
		$this.Name               = 'Duskpetal Earring'
		$this.MapObjName         = 'duskpetalearring'
		$this.PurchasePrice      = 880
		$this.SellPrice          = 440
		$this.TargetStats        = @{
			[StatId]::Speed = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An earring made from a petal that blooms only at dusk.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDawnfeatherCharm : BEJewelry {
	BEDawnfeatherCharm() : base() {
		$this.Name               = 'Dawnfeather Charm'
		$this.MapObjName         = 'dawnfeathercharm'
		$this.PurchasePrice      = 870
		$this.SellPrice          = 435
		$this.TargetStats        = @{
			[StatId]::Speed = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A charm with a feather from a bird that sings at dawn.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGlimmergemRing : BEJewelry {
	BEGlimmergemRing() : base() {
		$this.Name               = 'Glimmergem Ring'
		$this.MapObjName         = 'glimmergemring'
		$this.PurchasePrice      = 780
		$this.SellPrice          = 390
		$this.TargetStats        = @{
			[StatId]::Luck = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ring with a gem that always seems to glimmer.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFlickerflamePendant : BEJewelry {
	BEFlickerflamePendant() : base() {
		$this.Name               = 'Flickerflame Pendant'
		$this.MapObjName         = 'flickerflamependant'
		$this.PurchasePrice      = 820
		$this.SellPrice          = 410
		$this.TargetStats        = @{
			[StatId]::Attack = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pendant with a perpetual, tiny flame.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESparklightCirclet : BEJewelry {
	BESparklightCirclet() : base() {
		$this.Name               = 'Sparklight Circlet'
		$this.MapObjName         = 'sparklightcirclet'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A circlet that emits tiny, harmless sparks of light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEShimmerstoneBracelet : BEJewelry {
	BEShimmerstoneBracelet() : base() {
		$this.Name               = 'Shimmerstone Bracelet'
		$this.MapObjName         = 'shimmerstonebracelet'
		$this.PurchasePrice      = 730
		$this.SellPrice          = 365
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bracelet made of stones that subtly shimmer.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlowwormLamp : BEJewelry {
	BEGlowwormLamp() : base() {
		$this.Name               = 'Glowworm Lamp'
		$this.MapObjName         = 'glowwormlamp'
		$this.PurchasePrice      = 680
		$this.SellPrice          = 340
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiny lamp containing a perpetual glowworm.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFireflyJar : BEJewelry {
	BEFireflyJar() : base() {
		$this.Name               = 'Firefly Jar'
		$this.MapObjName         = 'fireflyjar'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A miniature jar containing perpetually glowing fireflies.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWillothewispOrb : BEJewelry {
	BEWillothewispOrb() : base() {
		$this.Name               = 'Willothewisp Orb'
		$this.MapObjName         = 'willothewisporb'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 2
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small orb that floats and bobs like a will-o-the-wisp.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFadingEmber : BEJewelry {
	BEFadingEmber() : base() {
		$this.Name               = 'Fading Ember'
		$this.MapObjName         = 'fadingember'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dying ember that occasionally flares.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEternalFlameMedallion : BEJewelry {
	BEEternalFlameMedallion() : base() {
		$this.Name               = 'Eternal Flame Medallion'
		$this.MapObjName         = 'eternalflamemedallion'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Attack = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A medallion with a small, perpetual flame.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEPermafrostShard : BEJewelry {
	BEPermafrostShard() : base() {
		$this.Name               = 'Permafrost Shard'
		$this.MapObjName         = 'permafrostshard'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shard of ice that never melts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEverflowingDrop : BEJewelry {
	BEEverflowingDrop() : base() {
		$this.Name               = 'Everflowing Drop'
		$this.MapObjName         = 'everflowingdrop'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A drop of water that never dries.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBoundlessAirCirclet : BEJewelry {
	BEBoundlessAirCirclet() : base() {
		$this.Name               = 'Boundless Air Circlet'
		$this.MapObjName         = 'boundlessaircirclet'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{
			[StatId]::Speed = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A circlet that allows the wearer to breathe freely.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEUnyieldingEarthRing : BEJewelry {
	BEUnyieldingEarthRing() : base() {
		$this.Name               = 'Unyielding Earth Ring'
		$this.MapObjName         = 'unyieldingearthring'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ring made of solid earth, incredibly durable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESilentStepAnklet : BEJewelry {
	BESilentStepAnklet() : base() {
		$this.Name               = 'Silent Step Anklet'
		$this.MapObjName         = 'silentstepanklet'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Speed = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An anklet that muffles footsteps, for stealth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETrueSightLens : BEJewelry {
	BETrueSightLens() : base() {
		$this.Name               = 'True Sight Lens'
		$this.MapObjName         = 'truesightlens'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Accuracy = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A monocle that allows the wearer to see hidden things.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFortressHeartstone : BEJewelry {
	BEFortressHeartstone() : base() {
		$this.Name               = 'Fortress Heartstone'
		$this.MapObjName         = 'fortressheartstone'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heart shaped stone that provides immense defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESorcerersEye : BEJewelry {
	BESorcerersEye() : base() {
		$this.Name               = 'Sorcerer''s Eye'
		$this.MapObjName         = 'sorcererseye'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An ominous eye shaped gem, enhancing dark magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESagesMindstone : BEJewelry {
	BESagesMindstone() : base() {
		$this.Name               = 'Sage''s Mindstone'
		$this.MapObjName         = 'sagesmindstone'
		$this.PurchasePrice      = 1650
		$this.SellPrice          = 825
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A smooth, polished stone that enhances intellect.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAcrobatsCharm : BEJewelry {
	BEAcrobatsCharm() : base() {
		$this.Name               = 'Acrobat''s Charm'
		$this.MapObjName         = 'acrobatscharm'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Speed = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small charm that aids in agility and balance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMarksmansScope : BEJewelry {
	BEMarksmansScope() : base() {
		$this.Name               = 'Marksman''s Scope'
		$this.MapObjName         = 'marksmansscope'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Accuracy = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A miniature scope that enhances accuracy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBerserkersRageGem : BEJewelry {
	BEBerserkersRageGem() : base() {
		$this.Name               = 'Berserker''s Rage Gem'
		$this.MapObjName         = 'berserkersragegem'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Attack = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A volatile gem that pulses with raw anger.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGuardiansAegis : BEJewelry {
	BEGuardiansAegis() : base() {
		$this.Name               = 'Guardian''s Aegis'
		$this.MapObjName         = 'guardiansaegis'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small shield shaped amulet, for staunch defenders.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEPaladinsVowRing : BEJewelry {
	BEPaladinsVowRing() : base() {
		$this.Name               = 'Paladin''s Vow Ring'
		$this.MapObjName         = 'paladinsvowring'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::Defense = 1
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ring that glows faintly, symbolizing a holy vow.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEPriestesssBlessingBead : BEJewelry {
	BEPriestesssBlessingBead() : base() {
		$this.Name               = 'Priestess''s Blessing Bead'
		$this.MapObjName         = 'priestesssblessingbead'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A single bead imbued with divine blessing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWitchsBrewVial : BEJewelry {
	BEWitchsBrewVial() : base() {
		$this.Name               = 'Witch''s Brew Vial'
		$this.MapObjName         = 'witchsbrewvial'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small vial containing a bubbling, potent brew.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BENecromancersTotem : BEJewelry {
	BENecromancersTotem() : base() {
		$this.Name               = 'Necromancer''s Totem'
		$this.MapObjName         = 'necromancerstotem'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark totem crafted from bone and shadows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBardsLyrePin : BEJewelry {
	BEBardsLyrePin() : base() {
		$this.Name               = 'Bard''s Lyre Pin'
		$this.MapObjName         = 'bardslyrepin'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small pin shaped like a lyre, enhancing charm.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERoguesDaggerClip : BEJewelry {
	BERoguesDaggerClip() : base() {
		$this.Name               = 'Rogue''s Dagger Clip'
		$this.MapObjName         = 'roguesdaggerclip'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::Speed = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A clip shaped like a small dagger, for quick action.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarriorsCrest : BEJewelry {
	BEWarriorsCrest() : base() {
		$this.Name               = 'Warrior''s Crest'
		$this.MapObjName         = 'warriorscrest'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Attack = 2
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small crest, symbolizing strength and courage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEArchersQuiverPin : BEJewelry {
	BEArchersQuiverPin() : base() {
		$this.Name               = 'Archer''s Quiver Pin'
		$this.MapObjName         = 'archersquiverpin'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Accuracy = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pin shaped like a small quiver, enhancing precision.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThiefsLockpickCharm : BEJewelry {
	BEThiefsLockpickCharm() : base() {
		$this.Name               = 'Thief''s Lockpick Charm'
		$this.MapObjName         = 'thiefslockpickcharm'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Speed = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A charm resembling a tiny lockpick, for nimble fingers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAssassinsPoisonVial : BEJewelry {
	BEAssassinsPoisonVial() : base() {
		$this.Name               = 'Assassin''s Poison Vial'
		$this.MapObjName         = 'assassinspoisonvial'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiny vial of potent, slow acting poison.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHealersAnkh : BEJewelry {
	BEHealersAnkh() : base() {
		$this.Name               = 'Healer''s Ankh'
		$this.MapObjName         = 'healersankh'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An ankh symbol, for rapid recovery.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEArtificersCogwheel : BEJewelry {
	BEArtificersCogwheel() : base() {
		$this.Name               = 'Artificer''s Cogwheel'
		$this.MapObjName         = 'artificerscogwheel'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiny, perpetually turning cogwheel.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEScholarsQuillBrooch : BEJewelry {
	BEScholarsQuillBrooch() : base() {
		$this.Name               = 'Scholar''s Quill Brooch'
		$this.MapObjName         = 'scholarsquillbrooch'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A brooch shaped like a quill, enhancing learning.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMerchantsScaleCharm : BEJewelry {
	BEMerchantsScaleCharm() : base() {
		$this.Name               = 'Merchant''s Scale Charm'
		$this.MapObjName         = 'merchantsscalecharm'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Luck = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A charm shaped like a tiny balance scale, for good deals.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFarmersScythePin : BEJewelry {
	BEFarmersScythePin() : base() {
		$this.Name               = 'Farmer''s Scythe Pin'
		$this.MapObjName         = 'farmersscythepin'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Luck = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pin shaped like a miniature scythe, for good harvests.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFishermansHookPendant : BEJewelry {
	BEFishermansHookPendant() : base() {
		$this.Name               = 'Fisherman''s Hook Pendant'
		$this.MapObjName         = 'fishermanshookpendant'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Luck = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pendant shaped like a fish hook, for bountiful catches.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEHuntersTrapBadge : BEJewelry {
	BEHuntersTrapBadge() : base() {
		$this.Name               = 'Hunter''s Trap Badge'
		$this.MapObjName         = 'hunterstrapbadge'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Accuracy = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A badge resembling a small trap, for tracking.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECooksLadlePin : BEJewelry {
	BECooksLadlePin() : base() {
		$this.Name               = 'Cook''s Ladle Pin'
		$this.MapObjName         = 'cooksladlepin'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pin shaped like a small ladle, for culinary prowess.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlacksmithsHammerCharm : BEJewelry {
	BEBlacksmithsHammerCharm() : base() {
		$this.Name               = 'Blacksmith''s Hammer Charm'
		$this.MapObjName         = 'blacksmithshammercharm'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Attack = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A charm shaped like a tiny hammer, for crafting.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BETailorsNeedleBrooch : BEJewelry {
	BETailorsNeedleBrooch() : base() {
		$this.Name               = 'Tailor''s Needle Brooch'
		$this.MapObjName         = 'tailorsneedlebrooch'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A brooch shaped like a needle, for fine stitching.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECarpentersSawPendant : BEJewelry {
	BECarpentersSawPendant() : base() {
		$this.Name               = 'Carpenter''s Saw Pendant'
		$this.MapObjName         = 'carpenterssawpendant'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Attack = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pendant shaped like a small saw, for construction.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEJewelersLoupeRing : BEJewelry {
	BEJewelersLoupeRing() : base() {
		$this.Name               = 'Jeweler''s Loupe Ring'
		$this.MapObjName         = 'jewelersloupering'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Accuracy = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ring with a tiny magnifying glass, for discerning details.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAlchemistsMortarPin : BEJewelry {
	BEAlchemistsMortarPin() : base() {
		$this.Name               = 'Alchemist''s Mortar Pin'
		$this.MapObjName         = 'alchemistsmortarpin'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pin shaped like a mortar and pestle, for potions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBrewersTankardCharm : BEJewelry {
	BEBrewersTankardCharm() : base() {
		$this.Name               = 'Brewer''s Tankard Charm'
		$this.MapObjName         = 'brewerstankardcharm'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A charm shaped like a miniature tankard, for hearty drinks.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGamblersDice : BEJewelry {
	BEGamblersDice() : base() {
		$this.Name               = 'Gambler''s Dice'
		$this.MapObjName         = 'gamblersdice'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Luck = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiny pair of perpetually tumbling dice.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEJestersBell : BEJewelry {
	BEJestersBell() : base() {
		$this.Name               = 'Jester''s Bell'
		$this.MapObjName         = 'jestersbell'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Speed = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small, perpetually jingling bell.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDancersRibbon : BEJewelry {
	BEDancersRibbon() : base() {
		$this.Name               = 'Dancer''s Ribbon'
		$this.MapObjName         = 'dancersribbon'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Speed = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A delicate ribbon that flows gracefully.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESingersVoiceCharm : BEJewelry {
	BESingersVoiceCharm() : base() {
		$this.Name               = 'Singer''s Voice Charm'
		$this.MapObjName         = 'singersvoicecharm'
		$this.PurchasePrice      = 620
		$this.SellPrice          = 310
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A charm that subtly enhances the voice.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEActorsMaskPin : BEJewelry {
	BEActorsMaskPin() : base() {
		$this.Name               = 'Actor''s Mask Pin'
		$this.MapObjName         = 'actorsmaskpin'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Luck = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pin shaped like a theatrical mask, for performance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArtistsBrushBrooch : BEJewelry {
	BEArtistsBrushBrooch() : base() {
		$this.Name               = 'Artist''s Brush Brooch'
		$this.MapObjName         = 'artistsbrushbrooch'
		$this.PurchasePrice      = 680
		$this.SellPrice          = 340
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A brooch shaped like a paint brush, for creativity.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESculptorsChiselPendant : BEJewelry {
	BESculptorsChiselPendant() : base() {
		$this.Name               = 'Sculptor''s Chisel Pendant'
		$this.MapObjName         = 'sculptorschiselpendant'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Attack = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pendant shaped like a tiny chisel, for precision.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWritersInkwellCharm : BEJewelry {
	BEWritersInkwellCharm() : base() {
		$this.Name               = 'Writer''s Inkwell Charm'
		$this.MapObjName         = 'writersinkwellcharm'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A charm shaped like an inkwell, for inspiration.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMusiciansClefPin : BEJewelry {
	BEMusiciansClefPin() : base() {
		$this.Name               = 'Musician''s Clef Pin'
		$this.MapObjName         = 'musiciansclefpin'
		$this.PurchasePrice      = 620
		$this.SellPrice          = 310
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pin shaped like a musical clef, for harmony.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEExplorersCompass : BEJewelry {
	BEExplorersCompass() : base() {
		$this.Name               = 'Explorer''s Compass'
		$this.MapObjName         = 'explorerscompass'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Accuracy = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiny compass that always points true.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENavigatorsSextantCharm : BEJewelry {
	BENavigatorsSextantCharm() : base() {
		$this.Name               = 'Navigator''s Sextant Charm'
		$this.MapObjName         = 'navigatorssextantcharm'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Accuracy = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A charm shaped like a miniature sextant, for guidance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECartographersScroll : BEJewelry {
	BECartographersScroll() : base() {
		$this.Name               = 'Cartographer''s Scroll'
		$this.MapObjName         = 'cartographersscroll'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A miniature scroll that always unrolls to a map.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArchaeologistsTrowel : BEJewelry {
	BEArchaeologistsTrowel() : base() {
		$this.Name               = 'Archaeologist''s Trowel'
		$this.MapObjName         = 'archaeologiststrowel'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiny trowel for uncovering ancient secrets.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELinguistsRosettaStone : BEJewelry {
	BELinguistsRosettaStone() : base() {
		$this.Name               = 'Linguist''s Rosetta Stone'
		$this.MapObjName         = 'linguistsrosettastone'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small fragment resembling the Rosetta Stone, for understanding languages.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBotanistsLeafBrooch : BEJewelry {
	BEBotanistsLeafBrooch() : base() {
		$this.Name               = 'Botanist''s Leaf Brooch'
		$this.MapObjName         = 'botanistsleafbrooch'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A brooch shaped like a perfect leaf, for plant growth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEZoologistsPawPrint : BEJewelry {
	BEZoologistsPawPrint() : base() {
		$this.Name               = 'Zoologist''s Paw Print'
		$this.MapObjName         = 'zoologistspawprint'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A charm with a delicate paw print, for animal empathy.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGeologistsPickaxePin : BEJewelry {
	BEGeologistsPickaxePin() : base() {
		$this.Name               = 'Geologist''s Pickaxe Pin'
		$this.MapObjName         = 'geologistspickaxepin'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pin shaped like a tiny pickaxe, for mineral detection.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEAstronomersTelescope : BEJewelry {
	BEAstronomersTelescope() : base() {
		$this.Name               = 'Astronomer''s Telescope'
		$this.MapObjName         = 'astronomerstelescope'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 2
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiny telescope that reveals distant stars.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOceanographersWaveCharm : BEJewelry {
	BEOceanographersWaveCharm() : base() {
		$this.Name               = 'Oceanographer''s Wave Charm'
		$this.MapObjName         = 'oceanographerswavecharm'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A charm shaped like a perfect wave, for navigating seas.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEClimatologistsCloudPin : BEJewelry {
	BEClimatologistsCloudPin() : base() {
		$this.Name               = 'Climatologist''s Cloud Pin'
		$this.MapObjName         = 'climatologistscloudpin'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pin shaped like a small cloud, for predicting weather.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETherapistsCalmingGem : BEJewelry {
	BETherapistsCalmingGem() : base() {
		$this.Name               = 'Therapist''s Calming Gem'
		$this.MapObjName         = 'therapistscalminggem'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A gem that emits a soothing aura, for mental peace.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhilosophersStoneFragment : BEJewelry {
	BEPhilosophersStoneFragment() : base() {
		$this.Name               = 'Philosopher''s Stone Fragment'
		$this.MapObjName         = 'philosophersstonefragment'
		$this.PurchasePrice      = 2800
		$this.SellPrice          = 1400
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::Defense = 1
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
			[StatId]::Luck = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiny fragment of the legendary Philosopher''s Stone.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWanderersBootsCharm : BEJewelry {
	BEWanderersBootsCharm() : base() {
		$this.Name               = 'Wanderer''s Boots Charm'
		$this.MapObjName         = 'wanderersbootscharm'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Speed = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A charm shaped like a tiny boot, for long journeys.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPilgrimsScallopShell : BEJewelry {
	BEPilgrimsScallopShell() : base() {
		$this.Name               = 'Pilgrim''s Scallop Shell'
		$this.MapObjName         = 'pilgrimsscallopshell'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small scallop shell, symbolizing a completed journey.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHermitsLanternPin : BEJewelry {
	BEHermitsLanternPin() : base() {
		$this.Name               = 'Hermit''s Lantern Pin'
		$this.MapObjName         = 'hermitslanternpin'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pin shaped like a small lantern, for solitary exploration.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAsceticsSimpleCord : BEJewelry {
	BEAsceticsSimpleCord() : base() {
		$this.Name               = 'Ascetic''s Simple Cord'
		$this.MapObjName         = 'asceticssimplecord'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A plain cord, representing simplicity and detachment.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMonksPrayerBeads : BEJewelry {
	BEMonksPrayerBeads() : base() {
		$this.Name               = 'Monk''s Prayer Beads'
		$this.MapObjName         = 'monksprayerbeads'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small string of prayer beads, for meditation.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarriorMonksFistCharm : BEJewelry {
	BEWarriorMonksFistCharm() : base() {
		$this.Name               = 'Warrior Monk''s Fist Charm'
		$this.MapObjName         = 'warriormonksfistcharm'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A charm shaped like a clenched fist, for martial discipline.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BERogueMonksShadowStep : BEJewelry {
	BERogueMonksShadowStep() : base() {
		$this.Name               = 'Rogue Monk''s Shadow Step'
		$this.MapObjName         = 'roguemonksshadowstep'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Speed = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small shadow-like charm, aiding in silent movement.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPaladinsOathScroll : BEJewelry {
	BEPaladinsOathScroll() : base() {
		$this.Name               = 'Paladin''s Oath Scroll'
		$this.MapObjName         = 'paladinsoathscroll'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A miniature scroll inscribed with a holy oath.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEClericsDivineSymbol : BEJewelry {
	BEClericsDivineSymbol() : base() {
		$this.Name               = 'Cleric''s Divine Symbol'
		$this.MapObjName         = 'clericsdivinesymbol'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small, glowing divine symbol.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDruidsVineCharm : BEJewelry {
	BEDruidsVineCharm() : base() {
		$this.Name               = 'Druid''s Vine Charm'
		$this.MapObjName         = 'druidsvinecharm'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 2
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A charm woven from living vines, connecting to nature.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBardsHarmonyGem : BEJewelry {
	BEBardsHarmonyGem() : base() {
		$this.Name               = 'Bard''s Harmony Gem'
		$this.MapObjName         = 'bardsharmonygem'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 2
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A gem that resonates with perfect harmony.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESorcerersFocusCrystal : BEJewelry {
	BESorcerersFocusCrystal() : base() {
		$this.Name               = 'Sorcerer''s Focus Crystal'
		$this.MapObjName         = 'sorcerersfocuscrystal'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crystal that enhances magical concentration.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarlocksPactSigil : BEJewelry {
	BEWarlocksPactSigil() : base() {
		$this.Name               = 'Warlock''s Pact Sigil'
		$this.MapObjName         = 'warlockspactsigil'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark sigil representing a forbidden pact.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BENecromancersBoneDust : BEJewelry {
	BENecromancersBoneDust() : base() {
		$this.Name               = 'Necromancer''s Bone Dust'
		$this.MapObjName         = 'necromancersbonedust'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small pouch of fine bone dust, for raising the dead.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESummonersBindingCircle : BEJewelry {
	BESummonersBindingCircle() : base() {
		$this.Name               = 'Summoner''s Binding Circle'
		$this.MapObjName         = 'summonersbindingcircle'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A miniature binding circle, for controlling summoned beings.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEnchantersGlyph : BEJewelry {
	BEEnchantersGlyph() : base() {
		$this.Name               = 'Enchanter''s Glyph'
		$this.MapObjName         = 'enchantersglyph'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 3
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small, glowing glyph, for imbuing items.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIllusionistsMirrorShard : BEJewelry {
	BEIllusionistsMirrorShard() : base() {
		$this.Name               = 'Illusionist''s Mirror Shard'
		$this.MapObjName         = 'illusionistsmirrorshard'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A fragment of a mirror that reflects illusions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivinersPendulum : BEJewelry {
	BEDivinersPendulum() : base() {
		$this.Name               = 'Diviner''s Pendulum'
		$this.MapObjName         = 'divinerspendulum'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Luck = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small pendulum that sways to reveal truths.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAbjurersWardingCircle : BEJewelry {
	BEAbjurersWardingCircle() : base() {
		$this.Name               = 'Abjurer''s Warding Circle'
		$this.MapObjName         = 'abjurerswardingcircle'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiny warding circle, for defensive spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEConjurersOrb : BEJewelry {
	BEConjurersOrb() : base() {
		$this.Name               = 'Conjurer''s Orb'
		$this.MapObjName         = 'conjurersorb'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 2
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small orb that can manifest minor objects.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETransmutersCatalyst : BEJewelry {
	BETransmutersCatalyst() : base() {
		$this.Name               = 'Transmuter''s Catalyst'
		$this.MapObjName         = 'transmuterscatalyst'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small, heavy catalyst that aids in transformations.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEvokersFocusGem : BEJewelry {
	BEEvokersFocusGem() : base() {
		$this.Name               = 'Evoker''s Focus Gem'
		$this.MapObjName         = 'evokersfocusgem'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A gem that intensifies elemental spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEConjurationBell : BEJewelry {
	BEConjurationBell() : base() {
		$this.Name               = 'Conjuration Bell'
		$this.MapObjName         = 'conjurationbell'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiny bell that rings to summon familiars.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMysticsThirdEye : BEJewelry {
	BEMysticsThirdEye() : base() {
		$this.Name               = 'Mystic''s Third Eye'
		$this.MapObjName         = 'mysticsthirdeye'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Accuracy = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An eye-shaped gem, for enhanced perception.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERunemastersStone : BEJewelry {
	BERunemastersStone() : base() {
		$this.Name               = 'Runemaster''s Stone'
		$this.MapObjName         = 'runemastersstone'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::Defense = 1
			[StatId]::MagicAttack = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A stone engraved with powerful runes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInventorsBlueprintFragment : BEJewelry {
	BEInventorsBlueprintFragment() : base() {
		$this.Name               = 'Inventor''s Blueprint Fragment'
		$this.MapObjName         = 'inventorsblueprintfragment'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A fragment of an ingenious blueprint.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGolemCoreFragment : BEJewelry {
	BEGolemCoreFragment() : base() {
		$this.Name               = 'Golem Core Fragment'
		$this.MapObjName         = 'golemcorefragment'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A piece of a golem''s core, slightly humming.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAutomatonGear : BEJewelry {
	BEAutomatonGear() : base() {
		$this.Name               = 'Automaton Gear'
		$this.MapObjName         = 'automatongear'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A perfectly crafted gear from an ancient automaton.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEClockworkHeart : BEJewelry {
	BEClockworkHeart() : base() {
		$this.Name               = 'Clockwork Heart'
		$this.MapObjName         = 'clockworkheart'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Speed = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A miniature clockwork heart, ticking softly.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESteamValvePin : BEJewelry {
	BESteamValvePin() : base() {
		$this.Name               = 'Steam Valve Pin'
		$this.MapObjName         = 'steamvalvepin'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pin shaped like a tiny steam valve, for mechanical control.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMagitechBattery : BEJewelry {
	BEMagitechBattery() : base() {
		$this.Name               = 'Magitech Battery'
		$this.MapObjName         = 'magitechbattery'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 3
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small battery that stores both magic and electricity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArcaniteShard : BEJewelry {
	BEArcaniteShard() : base() {
		$this.Name               = 'Arcanite Shard'
		$this.MapObjName         = 'arcaniteshard'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::MagicAttack = 4
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shimmering shard of pure arcanite.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicAttack]) MAT  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEtherealWeaveBracelet : BEJewelry {
	BEEtherealWeaveBracelet() : base() {
		$this.Name               = 'Ethereal Weave Bracelet'
		$this.MapObjName         = 'etherealweavebracelet'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Speed = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bracelet woven from ethereal threads, making the wearer less corporeal.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAstralCompass : BEJewelry {
	BEAstralCompass() : base() {
		$this.Name               = 'Astral Compass'
		$this.MapObjName         = 'astralcompass'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A compass that points to different astral planes.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECosmicWhisperPearl : BEJewelry {
	BECosmicWhisperPearl() : base() {
		$this.Name               = 'Cosmic Whisper Pearl'
		$this.MapObjName         = 'cosmicwhisperpearl'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pearl that seems to hum with the sounds of the cosmos.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDimensionKnot : BEJewelry {
	BEDimensionKnot() : base() {
		$this.Name               = 'Dimension Knot'
		$this.MapObjName         = 'dimensionknot'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tangled knot of dimensional threads.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERealityThread : BEJewelry {
	BERealityThread() : base() {
		$this.Name               = 'Reality Thread'
		$this.MapObjName         = 'realitythread'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A single, unbroken thread of reality.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEQuantumFluxCrystal : BEJewelry {
	BEQuantumFluxCrystal() : base() {
		$this.Name               = 'Quantum Flux Crystal'
		$this.MapObjName         = 'quantumfluxcrystal'
		$this.PurchasePrice      = 2300
		$this.SellPrice          = 1150
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crystal that vibrates with quantum fluctuations.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETemporalAnomalyShard : BEJewelry {
	BETemporalAnomalyShard() : base() {
		$this.Name               = 'Temporal Anomaly Shard'
		$this.MapObjName         = 'temporalanomalyshard'
		$this.PurchasePrice      = 2400
		$this.SellPrice          = 1200
		$this.TargetStats        = @{
			[StatId]::Speed = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shard that seems to slightly distort time around it.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGravitonCoil : BEJewelry {
	BEGravitonCoil() : base() {
		$this.Name               = 'Graviton Coil'
		$this.MapObjName         = 'gravitoncoil'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small coil that subtly alters gravity.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInfinityIITurtleNecklace : BEJewelry {
    BEInfinityIITurtleNecklace() : base() {
		$this.Name               = 'Infinity II Turtle Necklace'
		$this.MapObjName         = 'infinityiiturtlenecklace'
		$this.PurchasePrice      = 240000
		$this.SellPrice          = 0
		$this.TargetStats        = @{
			[StatId]::Speed = 250
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Because mom will like it if you wear it. And it''s littered with glitter!'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
    }
}

Class BEBearEarrings : BEJewelry {
    BEBearEarrings() : base() {
		$this.Name               = 'Bear Earrings'
		$this.MapObjName         = 'bearearrings'
		$this.PurchasePrice      = 0
		$this.SellPrice          = 0
		$this.TargetStats        = @{
			[StatId]::Speed    = 999
            [StatId]::Accuracy = 999
            [StatId]::Luck     = 999
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'The ultimate in fuzzy ear accessories.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD  +$($this.TargetStats[[StatId]::Accuracy]) ACC  +$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# CAPES
#
#//////////////////////////////////////////////////////////////////////////////

Class BETatteredCape : BECape {
	BETatteredCape() : base() {
		$this.Name               = 'Tattered Cape'
		$this.MapObjName         = 'tatteredcape'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A worn and torn cape, offering minimal protection.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEClothCape : BECape {
	BEClothCape() : base() {
		$this.Name               = 'Cloth Cape'
		$this.MapObjName         = 'clothcape'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple cloth cape, light and unassuming.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELeatherCape : BECape {
	BELeatherCape() : base() {
		$this.Name               = 'Leather Cape'
		$this.MapObjName         = 'leathercape'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy leather cape, providing a touch of defense.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETravelerCape : BECape {
	BETravelerCape() : base() {
		$this.Name               = 'Traveler Cape'
		$this.MapObjName         = 'travelercape'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Luck = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A durable cape designed for long journeys.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHunterCape : BECape {
	BEHunterCape() : base() {
		$this.Name               = 'Hunter Cape'
		$this.MapObjName         = 'huntercape'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Speed = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A practical cape favored by trackers and hunters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERogueCape : BECape {
	BERogueCape() : base() {
		$this.Name               = 'Rogue Cape'
		$this.MapObjName         = 'roguecape'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Speed = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark cape, ideal for blending into shadows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESorcererCape : BECape {
	BESorcererCape() : base() {
		$this.Name               = 'Sorcerer Cape'
		$this.MapObjName         = 'sorcerercape'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A flowing cape, subtly enhancing magical flow.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEPriestessCape : BECape {
	BEPriestessCape() : base() {
		$this.Name               = 'Priestess Cape'
		$this.MapObjName         = 'priestesscape'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pure white cape, imbued with a gentle blessing.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWarriorCape : BECape {
	BEWarriorCape() : base() {
		$this.Name               = 'Warrior Cape'
		$this.MapObjName         = 'warriorcape'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robust cape, offering minor protection in combat.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEKnightCape : BECape {
	BEKnightCape() : base() {
		$this.Name               = 'Knight Cape'
		$this.MapObjName         = 'knightcape'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy cape, signifying duty and honor.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEElvenweaveCape : BECape {
	BEElvenweaveCape() : base() {
		$this.Name               = 'Elvenweave Cape'
		$this.MapObjName         = 'elvenweavecape'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Speed = 1
			[StatId]::Accuracy = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A finely woven cape, light and graceful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDwarvenHearthCape : BECape {
	BEDwarvenHearthCape() : base() {
		$this.Name               = 'Dwarven Hearth Cape'
		$this.MapObjName         = 'dwarvenhearthcape'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A thick, warm cape from dwarven forges.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEShadowsEmbraceCape : BECape {
	BEShadowsEmbraceCape() : base() {
		$this.Name               = 'Shadows Embrace Cape'
		$this.MapObjName         = 'shadowsembracecape'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Speed = 3
			[StatId]::Luck = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cape that seems to absorb light, aiding in stealth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD  +$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunlitCape : BECape {
	BESunlitCape() : base() {
		$this.Name               = 'Sunlit Cape'
		$this.MapObjName         = 'sunlitcape'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Luck = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cape that glows faintly with solar energy, inspiring hope.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMoonwhisperCape : BECape {
	BEMoonwhisperCape() : base() {
		$this.Name               = 'Moonwhisper Cape'
		$this.MapObjName         = 'moonwhispercape'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Accuracy = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark cape that seems to hum with lunar power, aiding intuition.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDragonscaleCape : BECape {
	BEDragonscaleCape() : base() {
		$this.Name               = 'Dragonscale Cape'
		$this.MapObjName         = 'dragonscalecape'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cape crafted from the durable scales of a dragon.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhoenixwingCape : BECape {
	BEPhoenixwingCape() : base() {
		$this.Name               = 'Phoenixwing Cape'
		$this.MapObjName         = 'phoenixwingcape'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Speed = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cape made from the vibrant feathers of a phoenix, surprisingly light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlessedHeroCape : BECape {
	BEBlessedHeroCape() : base() {
		$this.Name               = 'Blessed Hero Cape'
		$this.MapObjName         = 'blessedherocape'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Luck = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cape worn by a legendary hero, imbued with divine favor.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStarlightWeaveCape : BECape {
	BEStarlightWeaveCape() : base() {
		$this.Name               = 'Starlight Weave Cape'
		$this.MapObjName         = 'starlightweavecape'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Luck = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cape woven from threads infused with starlight, subtly enhancing luck.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidTouchedCape : BECape {
	BEVoidTouchedCape() : base() {
		$this.Name               = 'Void Touched Cape'
		$this.MapObjName         = 'voidtouchedcape'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Accuracy = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cape that seems to draw power from the void, unsettling yet potent.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEWhisperingWoodsCape : BECape {
	BEWhisperingWoodsCape() : base() {
		$this.Name               = 'Whispering Woods Cape'
		$this.MapObjName         = 'whisperingwoodscape'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Speed = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cape woven from ancient forest materials, attuned to nature.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Speed]) SPD"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEStormfrontCape : BECape {
	BEStormfrontCape() : base() {
		$this.Name               = 'Stormfront Cape'
		$this.MapObjName         = 'stormfrontcape'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cape that crackles with faint static, hinting at elemental power.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlacierwindCape : BECape {
	BEGlacierwindCape() : base() {
		$this.Name               = 'Glacierwind Cape'
		$this.MapObjName         = 'glacierwindcape'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cape that feels perpetually cold, offering resistance to heat.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrimsonSorceressCape : BECape {
	BECrimsonSorceressCape() : base() {
		$this.Name               = 'Crimson Sorceress Cape'
		$this.MapObjName         = 'crimsonsorceresscape'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{
			[StatId]::Accuracy = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A deep red cape, favored by powerful female magic users.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BERoyalSentinelCape : BECape {
	BERoyalSentinelCape() : base() {
		$this.Name               = 'Royal Sentinel Cape'
		$this.MapObjName         = 'royalsentinelcape'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A finely embroidered cape, worn by the elite royal guard.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEInfinityIVTurtleCape : BECape {
    BEInfinityIVTurtleCape() : base() {
		$this.Name               = 'Infinity IV Turtle Cape'
		$this.MapObjName         = 'infinityivturtlecape'
		$this.PurchasePrice      = 140000
		$this.SellPrice          = 0
		$this.TargetStats        = @{
            [StatId]::Luck = 250
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'I would give Cici a flower!'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
    }
}

Class BEBearCape : BECape {
    BEBearCape() : base() {
		$this.Name               = 'Bear Cape'
		$this.MapObjName         = 'bearcape'
		$this.PurchasePrice      = 0
		$this.SellPrice          = 0
		$this.TargetStats        = @{
            [StatId]::Luck = 999
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'The ultimate in fuzzy capes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Luck]) LCK"
		$this.TargetGender       = [Gender]::Unisex
    }
}










###############################################################################
#
# S08
#
# FAST NOISE LITE IMPLEMENTATION
#
###############################################################################

Class FastNoiseLite {
    Static [Int64]$PRIMEX         = 501125321
    Static [Int64]$PRIMEY         = 1136930381
    Static [Int64]$PRIMEZ         = 1720413743
    Static [Int64]$HASH_MAGIC     = 0x27D4EB2D
    Static [Int64]$HASHCALC_MAGIC = 2147483648
    Static [Int64]$SEEDADD_MAGIC  = 1293373
    Static [Int64]$APRIMEXMULT2   = [FastNoiseLite]::PRIMEX * 2
    Static [Int64]$APRIMEYMULT2   = [FastNoiseLite]::PRIMEY * 2
    Static [Int64]$APRIMEZMULT2   = [FastNoiseLite]::PRIMEZ * 2
    
    Static [Single]$SQRT3                     = 1.7320508075688772935274463415059
    Static [Single]$PLANARIMPROVEA_MAGIC      = 0.211324865405187
    Static [Single]$PLANARIMPROVEZSCALE_MAGIC = 0.577350269189626
    Static [Single]$SIMPLEXVALMODA_MAGIC      = 32.69428253173828125
    Static [Single]$A2DIV3                    = 2 / 3

    Static [Single[]]$GRADIENTS2D = @(
        0.130526192220052,  0.99144486137381,   0.38268343236509,   0.923879532511287,  0.608761429008721,  0.793353340291235,  0.793353340291235,  0.608761429008721,
        0.923879532511287,  0.38268343236509,   0.99144486137381,   0.130526192220051,  0.99144486137381,  -0.130526192220051,  0.923879532511287, -0.38268343236509,
        0.793353340291235, -0.60876142900872,   0.608761429008721, -0.793353340291235,  0.38268343236509,  -0.923879532511287,  0.130526192220052, -0.99144486137381,
        -0.130526192220052, -0.99144486137381,  -0.38268343236509,  -0.923879532511287, -0.608761429008721, -0.793353340291235, -0.793353340291235, -0.608761429008721,
        -0.923879532511287, -0.38268343236509,  -0.99144486137381,  -0.130526192220052, -0.99144486137381,   0.130526192220051, -0.923879532511287,  0.38268343236509,
        -0.793353340291235,  0.608761429008721, -0.608761429008721,  0.793353340291235, -0.38268343236509,   0.923879532511287, -0.130526192220052,  0.99144486137381,
        0.130526192220052,  0.99144486137381,   0.38268343236509,   0.923879532511287,  0.608761429008721,  0.793353340291235,  0.793353340291235,  0.608761429008721,
        0.923879532511287,  0.38268343236509,   0.99144486137381,   0.130526192220051,  0.99144486137381,  -0.130526192220051,  0.923879532511287, -0.38268343236509,
        0.793353340291235, -0.60876142900872,   0.608761429008721, -0.793353340291235,  0.38268343236509,  -0.923879532511287,  0.130526192220052, -0.99144486137381,
        -0.130526192220052, -0.99144486137381,  -0.38268343236509,  -0.923879532511287, -0.608761429008721, -0.793353340291235, -0.793353340291235, -0.608761429008721,
        -0.923879532511287, -0.38268343236509,  -0.99144486137381,  -0.130526192220052, -0.99144486137381,   0.130526192220051, -0.923879532511287,  0.38268343236509,
        -0.793353340291235,  0.608761429008721, -0.608761429008721,  0.793353340291235, -0.38268343236509,   0.923879532511287, -0.130526192220052,  0.99144486137381,
        0.130526192220052,  0.99144486137381,   0.38268343236509,   0.923879532511287,  0.608761429008721,  0.793353340291235,  0.793353340291235,  0.608761429008721,
        0.923879532511287,  0.38268343236509,   0.99144486137381,   0.130526192220051,  0.99144486137381,  -0.130526192220051,  0.923879532511287, -0.38268343236509,
        0.793353340291235, -0.60876142900872,   0.608761429008721, -0.793353340291235,  0.38268343236509,  -0.923879532511287,  0.130526192220052, -0.99144486137381,
        -0.130526192220052, -0.99144486137381,  -0.38268343236509,  -0.923879532511287, -0.608761429008721, -0.793353340291235, -0.793353340291235, -0.608761429008721,
        -0.923879532511287, -0.38268343236509,  -0.99144486137381,  -0.130526192220052, -0.99144486137381,   0.130526192220051, -0.923879532511287,  0.38268343236509,
        -0.793353340291235,  0.608761429008721, -0.608761429008721,  0.793353340291235, -0.38268343236509,   0.923879532511287, -0.130526192220052,  0.99144486137381,
        0.130526192220052,  0.99144486137381,   0.38268343236509,   0.923879532511287,  0.608761429008721,  0.793353340291235,  0.793353340291235,  0.608761429008721,
        0.923879532511287,  0.38268343236509,   0.99144486137381,   0.130526192220051,  0.99144486137381,  -0.130526192220051,  0.923879532511287, -0.38268343236509,
        0.793353340291235, -0.60876142900872,   0.608761429008721, -0.793353340291235,  0.38268343236509,  -0.923879532511287,  0.130526192220052, -0.99144486137381,
        -0.130526192220052, -0.99144486137381,  -0.38268343236509,  -0.923879532511287, -0.608761429008721, -0.793353340291235, -0.793353340291235, -0.608761429008721,
        -0.923879532511287, -0.38268343236509,  -0.99144486137381,  -0.130526192220052, -0.99144486137381,   0.130526192220051, -0.923879532511287,  0.38268343236509,
        -0.793353340291235,  0.608761429008721, -0.608761429008721,  0.793353340291235, -0.38268343236509,   0.923879532511287, -0.130526192220052,  0.99144486137381,
        0.130526192220052,  0.99144486137381,   0.38268343236509,   0.923879532511287,  0.608761429008721,  0.793353340291235,  0.793353340291235,  0.608761429008721,
        0.923879532511287,  0.38268343236509,   0.99144486137381,   0.130526192220051,  0.99144486137381,  -0.130526192220051,  0.923879532511287, -0.38268343236509,
        0.793353340291235, -0.60876142900872,   0.608761429008721, -0.793353340291235,  0.38268343236509,  -0.923879532511287,  0.130526192220052, -0.99144486137381,
        -0.130526192220052, -0.99144486137381,  -0.38268343236509,  -0.923879532511287, -0.608761429008721, -0.793353340291235, -0.793353340291235, -0.608761429008721,
        -0.923879532511287, -0.38268343236509,  -0.99144486137381,  -0.130526192220052, -0.99144486137381,   0.130526192220051, -0.923879532511287,  0.38268343236509,
        -0.793353340291235,  0.608761429008721, -0.608761429008721,  0.793353340291235, -0.38268343236509,   0.923879532511287, -0.130526192220052,  0.99144486137381,
        0.38268343236509,   0.923879532511287,  0.923879532511287,  0.38268343236509,   0.923879532511287, -0.38268343236509,   0.38268343236509,  -0.923879532511287,
        -0.38268343236509,  -0.923879532511287, -0.923879532511287, -0.38268343236509,  -0.923879532511287,  0.38268343236509,  -0.38268343236509,   0.923879532511287
    )

    Static [Single[]]$RANDVECS2D = @(
        -0.2700222198, -0.9628540911, 0.3863092627, -0.9223693152, 0.04444859006, -0.999011673, -0.5992523158, -0.8005602176, -0.7819280288, 0.6233687174, 0.9464672271, 0.3227999196, -0.6514146797, -0.7587218957, 0.9378472289, 0.347048376,
        -0.8497875957, -0.5271252623, -0.879042592, 0.4767432447, -0.892300288, -0.4514423508, -0.379844434, -0.9250503802, -0.9951650832, 0.0982163789, 0.7724397808, -0.6350880136, 0.7573283322, -0.6530343002, -0.9928004525, -0.119780055,
        -0.0532665713, 0.9985803285, 0.9754253726, -0.2203300762, -0.7665018163, 0.6422421394, 0.991636706, 0.1290606184, -0.994696838, 0.1028503788, -0.5379205513, -0.84299554, 0.5022815471, -0.8647041387, 0.4559821461, -0.8899889226,
        -0.8659131224, -0.5001944266, 0.0879458407, -0.9961252577, -0.5051684983, 0.8630207346, 0.7753185226, -0.6315704146, -0.6921944612, 0.7217110418, -0.5191659449, -0.8546734591, 0.8978622882, -0.4402764035, -0.1706774107, 0.9853269617,
        -0.9353430106, -0.3537420705, -0.9992404798, 0.03896746794, -0.2882064021, -0.9575683108, -0.9663811329, 0.2571137995, -0.8759714238, -0.4823630009, -0.8303123018, -0.5572983775, 0.05110133755, -0.9986934731, -0.8558373281, -0.5172450752,
        0.09887025282, 0.9951003332, 0.9189016087, 0.3944867976, -0.2439375892, -0.9697909324, -0.8121409387, -0.5834613061, -0.9910431363, 0.1335421355, 0.8492423985, -0.5280031709, -0.9717838994, -0.2358729591, 0.9949457207, 0.1004142068,
        0.6241065508, -0.7813392434, 0.662910307, 0.7486988212, -0.7197418176, 0.6942418282, -0.8143370775, -0.5803922158, 0.104521054, -0.9945226741, -0.1065926113, -0.9943027784, 0.445799684, -0.8951327509, 0.105547406, 0.9944142724,
        -0.992790267, 0.1198644477, -0.8334366408, 0.552615025, 0.9115561563, -0.4111755999, 0.8285544909, -0.5599084351, 0.7217097654, -0.6921957921, 0.4940492677, -0.8694339084, -0.3652321272, -0.9309164803, -0.9696606758, 0.2444548501,
        0.08925509731, -0.996008799, 0.5354071276, -0.8445941083, -0.1053576186, 0.9944343981, -0.9890284586, 0.1477251101, 0.004856104961, 0.9999882091, 0.9885598478, 0.1508291331, 0.9286129562, -0.3710498316, -0.5832393863, -0.8123003252,
        0.3015207509, 0.9534596146, -0.9575110528, 0.2883965738, 0.9715802154, -0.2367105511, 0.229981792, 0.9731949318, 0.955763816, -0.2941352207, 0.740956116, 0.6715534485, -0.9971513787, -0.07542630764, 0.6905710663, -0.7232645452,
        -0.290713703, -0.9568100872, 0.5912777791, -0.8064679708, -0.9454592212, -0.325740481, 0.6664455681, 0.74555369, 0.6236134912, 0.7817328275, 0.9126993851, -0.4086316587, -0.8191762011, 0.5735419353, -0.8812745759, -0.4726046147,
        0.9953313627, 0.09651672651, 0.9855650846, -0.1692969699, -0.8495980887, 0.5274306472, 0.6174853946, -0.7865823463, 0.8508156371, 0.52546432, 0.9985032451, -0.05469249926, 0.1971371563, -0.9803759185, 0.6607855748, -0.7505747292,
        -0.03097494063, 0.9995201614, -0.6731660801, 0.739491331, -0.7195018362, -0.6944905383, 0.9727511689, 0.2318515979, 0.9997059088, -0.0242506907, 0.4421787429, -0.8969269532, 0.9981350961, -0.061043673, -0.9173660799, -0.3980445648,
        -0.8150056635, -0.5794529907, -0.8789331304, 0.4769450202, 0.0158605829, 0.999874213, -0.8095464474, 0.5870558317, -0.9165898907, -0.3998286786, -0.8023542565, 0.5968480938, -0.5176737917, 0.8555780767, -0.8154407307, -0.5788405779,
        0.4022010347, -0.9155513791, -0.9052556868, -0.4248672045, 0.7317445619, 0.6815789728, -0.5647632201, -0.8252529947, -0.8403276335, -0.5420788397, -0.9314281527, 0.363925262, 0.5238198472, 0.8518290719, 0.7432803869, -0.6689800195,
        -0.985371561, -0.1704197369, 0.4601468731, 0.88784281, 0.825855404, 0.5638819483, 0.6182366099, 0.7859920446, 0.8331502863, -0.553046653, 0.1500307506, 0.9886813308, -0.662330369, -0.7492119075, -0.668598664, 0.743623444,
        0.7025606278, 0.7116238924, -0.5419389763, -0.8404178401, -0.3388616456, 0.9408362159, 0.8331530315, 0.5530425174, -0.2989720662, -0.9542618632, 0.2638522993, 0.9645630949, 0.124108739, -0.9922686234, -0.7282649308, -0.6852956957,
        0.6962500149, 0.7177993569, -0.9183535368, 0.3957610156, -0.6326102274, -0.7744703352, -0.9331891859, -0.359385508, -0.1153779357, -0.9933216659, 0.9514974788, -0.3076565421, -0.08987977445, -0.9959526224, 0.6678496916, 0.7442961705,
        0.7952400393, -0.6062947138, -0.6462007402, -0.7631674805, -0.2733598753, 0.9619118351, 0.9669590226, -0.254931851, -0.9792894595, 0.2024651934, -0.5369502995, -0.8436138784, -0.270036471, -0.9628500944, -0.6400277131, 0.7683518247,
        -0.7854537493, -0.6189203566, 0.06005905383, -0.9981948257, -0.02455770378, 0.9996984141, -0.65983623, 0.751409442, -0.6253894466, -0.7803127835, -0.6210408851, -0.7837781695, 0.8348888491, 0.5504185768, -0.1592275245, 0.9872419133,
        0.8367622488, 0.5475663786, -0.8675753916, -0.4973056806, -0.2022662628, -0.9793305667, 0.9399189937, 0.3413975472, 0.9877404807, -0.1561049093, -0.9034455656, 0.4287028224, 0.1269804218, -0.9919052235, -0.3819600854, 0.924178821,
        0.9754625894, 0.2201652486, -0.3204015856, -0.9472818081, -0.9874760884, 0.1577687387, 0.02535348474, -0.9996785487, 0.4835130794, -0.8753371362, -0.2850799925, -0.9585037287, -0.06805516006, -0.99768156, -0.7885244045, -0.6150034663,
        0.3185392127, -0.9479096845, 0.8880043089, 0.4598351306, 0.6476921488, -0.7619021462, 0.9820241299, 0.1887554194, 0.9357275128, -0.3527237187, -0.8894895414, 0.4569555293, 0.7922791302, 0.6101588153, 0.7483818261, 0.6632681526,
        -0.7288929755, -0.6846276581, 0.8729032783, -0.4878932944, 0.8288345784, 0.5594937369, 0.08074567077, 0.9967347374, 0.9799148216, -0.1994165048, -0.580730673, -0.8140957471, -0.4700049791, -0.8826637636, 0.2409492979, 0.9705377045,
        0.9437816757, -0.3305694308, -0.8927998638, -0.4504535528, -0.8069622304, 0.5906030467, 0.06258973166, 0.9980393407, -0.9312597469, 0.3643559849, 0.5777449785, 0.8162173362, -0.3360095855, -0.941858566, 0.697932075, -0.7161639607,
        -0.002008157227, -0.9999979837, -0.1827294312, -0.9831632392, -0.6523911722, 0.7578824173, -0.4302626911, -0.9027037258, -0.9985126289, -0.05452091251, -0.01028102172, -0.9999471489, -0.4946071129, 0.8691166802, -0.2999350194, 0.9539596344,
        0.8165471961, 0.5772786819, 0.2697460475, 0.962931498, -0.7306287391, -0.6827749597, -0.7590952064, -0.6509796216, -0.907053853, 0.4210146171, -0.5104861064, -0.8598860013, 0.8613350597, 0.5080373165, 0.5007881595, -0.8655698812,
        -0.654158152, 0.7563577938, -0.8382755311, -0.545246856, 0.6940070834, 0.7199681717, 0.06950936031, 0.9975812994, 0.1702942185, -0.9853932612, 0.2695973274, 0.9629731466, 0.5519612192, -0.8338697815, 0.225657487, -0.9742067022,
        0.4215262855, -0.9068161835, 0.4881873305, -0.8727388672, -0.3683854996, -0.9296731273, -0.9825390578, 0.1860564427, 0.81256471, 0.5828709909, 0.3196460933, -0.9475370046, 0.9570913859, 0.2897862643, -0.6876655497, -0.7260276109,
        -0.9988770922, -0.047376731, -0.1250179027, 0.992154486, -0.8280133617, 0.560708367, 0.9324863769, -0.3612051451, 0.6394653183, 0.7688199442, -0.01623847064, -0.9998681473, -0.9955014666, -0.09474613458, -0.81453315, 0.580117012,
        0.4037327978, -0.9148769469, 0.9944263371, 0.1054336766, -0.1624711654, 0.9867132919, -0.9949487814, -0.100383875, -0.6995302564, 0.7146029809, 0.5263414922, -0.85027327, -0.5395221479, 0.841971408, 0.6579370318, 0.7530729462,
        0.01426758847, -0.9998982128, -0.6734383991, 0.7392433447, 0.639412098, -0.7688642071, 0.9211571421, 0.3891908523, -0.146637214, -0.9891903394, -0.782318098, 0.6228791163, -0.5039610839, -0.8637263605, -0.7743120191, -0.6328039957
    )

    Static [Single[]]$GRADIENTS3D = @(
        0, 1, 1, 0,  0,-1, 1, 0,  0, 1,-1, 0,  0,-1,-1, 0,
        1, 0, 1, 0, -1, 0, 1, 0,  1, 0,-1, 0, -1, 0,-1, 0,
        1, 1, 0, 0, -1, 1, 0, 0,  1,-1, 0, 0, -1,-1, 0, 0,
        0, 1, 1, 0,  0,-1, 1, 0,  0, 1,-1, 0,  0,-1,-1, 0,
        1, 0, 1, 0, -1, 0, 1, 0,  1, 0,-1, 0, -1, 0,-1, 0,
        1, 1, 0, 0, -1, 1, 0, 0,  1,-1, 0, 0, -1,-1, 0, 0,
        0, 1, 1, 0,  0,-1, 1, 0,  0, 1,-1, 0,  0,-1,-1, 0,
        1, 0, 1, 0, -1, 0, 1, 0,  1, 0,-1, 0, -1, 0,-1, 0,
        1, 1, 0, 0, -1, 1, 0, 0,  1,-1, 0, 0, -1,-1, 0, 0,
        0, 1, 1, 0,  0,-1, 1, 0,  0, 1,-1, 0,  0,-1,-1, 0,
        1, 0, 1, 0, -1, 0, 1, 0,  1, 0,-1, 0, -1, 0,-1, 0,
        1, 1, 0, 0, -1, 1, 0, 0,  1,-1, 0, 0, -1,-1, 0, 0,
        0, 1, 1, 0,  0,-1, 1, 0,  0, 1,-1, 0,  0,-1,-1, 0,
        1, 0, 1, 0, -1, 0, 1, 0,  1, 0,-1, 0, -1, 0,-1, 0,
        1, 1, 0, 0, -1, 1, 0, 0,  1,-1, 0, 0, -1,-1, 0, 0,
        1, 1, 0, 0,  0,-1, 1, 0, -1, 1, 0, 0,  0,-1,-1, 0
    )

    Static [Single[]]$RANDVECS3D = @(
        -0.7292736885, -0.6618439697, 0.1735581948, 0, 0.790292081, -0.5480887466, -0.2739291014, 0, 0.7217578935, 0.6226212466, -0.3023380997, 0, 0.565683137, -0.8208298145, -0.0790000257, 0, 0.760049034, -0.5555979497, -0.3370999617, 0, 0.3713945616, 0.5011264475, 0.7816254623, 0, -0.1277062463, -0.4254438999, -0.8959289049, 0, -0.2881560924, -0.5815838982, 0.7607405838, 0,
        0.5849561111, -0.662820239, -0.4674352136, 0, 0.3307171178, 0.0391653737, 0.94291689, 0, 0.8712121778, -0.4113374369, -0.2679381538, 0, 0.580981015, 0.7021915846, 0.4115677815, 0, 0.503756873, 0.6330056931, -0.5878203852, 0, 0.4493712205, 0.601390195, 0.6606022552, 0, -0.6878403724, 0.09018890807, -0.7202371714, 0, -0.5958956522, -0.6469350577, 0.475797649, 0,
        -0.5127052122, 0.1946921978, -0.8361987284, 0, -0.9911507142, -0.05410276466, -0.1212153153, 0, -0.2149721042, 0.9720882117, -0.09397607749, 0, -0.7518650936, -0.5428057603, 0.3742469607, 0, 0.5237068895, 0.8516377189, -0.02107817834, 0, 0.6333504779, 0.1926167129, -0.7495104896, 0, -0.06788241606, 0.3998305789, 0.9140719259, 0, -0.5538628599, -0.4729896695, -0.6852128902, 0,
        -0.7261455366, -0.5911990757, 0.3509933228, 0, -0.9229274737, -0.1782808786, 0.3412049336, 0, -0.6968815002, 0.6511274338, 0.3006480328, 0, 0.9608044783, -0.2098363234, -0.1811724921, 0, 0.06817146062, -0.9743405129, 0.2145069156, 0, -0.3577285196, -0.6697087264, -0.6507845481, 0, -0.1868621131, 0.7648617052, -0.6164974636, 0, -0.6541697588, 0.3967914832, 0.6439087246, 0,
        0.6993340405, -0.6164538506, 0.3618239211, 0, -0.1546665739, 0.6291283928, 0.7617583057, 0, -0.6841612949, -0.2580482182, -0.6821542638, 0, 0.5383980957, 0.4258654885, 0.7271630328, 0, -0.5026987823, -0.7939832935, -0.3418836993, 0, 0.3202971715, 0.2834415347, 0.9039195862, 0, 0.8683227101, -0.0003762656404, -0.4959995258, 0, 0.791120031, -0.08511045745, 0.6057105799, 0,
        -0.04011016052, -0.4397248749, 0.8972364289, 0, 0.9145119872, 0.3579346169, -0.1885487608, 0, -0.9612039066, -0.2756484276, 0.01024666929, 0, 0.6510361721, -0.2877799159, -0.7023778346, 0, -0.2041786351, 0.7365237271, 0.644859585, 0, -0.7718263711, 0.3790626912, 0.5104855816, 0, -0.3060082741, -0.7692987727, 0.5608371729, 0, 0.454007341, -0.5024843065, 0.7357899537, 0,
        0.4816795475, 0.6021208291, -0.6367380315, 0, 0.6961980369, -0.3222197429, 0.641469197, 0, -0.6532160499, -0.6781148932, 0.3368515753, 0, 0.5089301236, -0.6154662304, -0.6018234363, 0, -0.1635919754, -0.9133604627, -0.372840892, 0, 0.52408019, -0.8437664109, 0.1157505864, 0, 0.5902587356, 0.4983817807, -0.6349883666, 0, 0.5863227872, 0.494764745, 0.6414307729, 0,
        0.6779335087, 0.2341345225, 0.6968408593, 0, 0.7177054546, -0.6858979348, 0.120178631, 0, -0.5328819713, -0.5205125012, 0.6671608058, 0, -0.8654874251, -0.0700727088, -0.4960053754, 0, -0.2861810166, 0.7952089234, 0.5345495242, 0, -0.04849529634, 0.9810836427, -0.1874115585, 0, -0.6358521667, 0.6058348682, 0.4781800233, 0, 0.6254794696, -0.2861619734, 0.7258696564, 0,
        -0.2585259868, 0.5061949264, -0.8227581726, 0, 0.02136306781, 0.5064016808, -0.8620330371, 0, 0.200111773, 0.8599263484, 0.4695550591, 0, 0.4743561372, 0.6014985084, -0.6427953014, 0, 0.6622993731, -0.5202474575, -0.5391679918, 0, 0.08084972818, -0.6532720452, 0.7527940996, 0, -0.6893687501, 0.0592860349, 0.7219805347, 0, -0.1121887082, -0.9673185067, 0.2273952515, 0,
        0.7344116094, 0.5979668656, -0.3210532909, 0, 0.5789393465, -0.2488849713, 0.7764570201, 0, 0.6988182827, 0.3557169806, -0.6205791146, 0, -0.8636845529, -0.2748771249, -0.4224826141, 0, -0.4247027957, -0.4640880967, 0.777335046, 0, 0.5257722489, -0.8427017621, 0.1158329937, 0, 0.9343830603, 0.316302472, -0.1639543925, 0, -0.1016836419, -0.8057303073, -0.5834887393, 0,
        -0.6529238969, 0.50602126, -0.5635892736, 0, -0.2465286165, -0.9668205684, -0.06694497494, 0, -0.9776897119, -0.2099250524, -0.007368825344, 0, 0.7736893337, 0.5734244712, 0.2694238123, 0, -0.6095087895, 0.4995678998, 0.6155736747, 0, 0.5794535482, 0.7434546771, 0.3339292269, 0, -0.8226211154, 0.08142581855, 0.5627293636, 0, -0.510385483, 0.4703667658, 0.7199039967, 0,
        -0.5764971849, -0.07231656274, -0.8138926898, 0, 0.7250628871, 0.3949971505, -0.5641463116, 0, -0.1525424005, 0.4860840828, -0.8604958341, 0, -0.5550976208, -0.4957820792, 0.667882296, 0, -0.1883614327, 0.9145869398, 0.357841725, 0, 0.7625556724, -0.5414408243, -0.3540489801, 0, -0.5870231946, -0.3226498013, -0.7424963803, 0, 0.3051124198, 0.2262544068, -0.9250488391, 0,
        0.6379576059, 0.577242424, -0.5097070502, 0, -0.5966775796, 0.1454852398, -0.7891830656, 0, -0.658330573, 0.6555487542, -0.3699414651, 0, 0.7434892426, 0.2351084581, 0.6260573129, 0, 0.5562114096, 0.8264360377, -0.0873632843, 0, -0.3028940016, -0.8251527185, 0.4768419182, 0, 0.1129343818, -0.985888439, -0.1235710781, 0, 0.5937652891, -0.5896813806, 0.5474656618, 0,
        0.6757964092, -0.5835758614, -0.4502648413, 0, 0.7242302609, -0.1152719764, 0.6798550586, 0, -0.9511914166, 0.0753623979, -0.2992580792, 0, 0.2539470961, -0.1886339355, 0.9486454084, 0, 0.571433621, -0.1679450851, -0.8032795685, 0, -0.06778234979, 0.3978269256, 0.9149531629, 0, 0.6074972649, 0.733060024, -0.3058922593, 0, -0.5435478392, 0.1675822484, 0.8224791405, 0,
        -0.5876678086, -0.3380045064, -0.7351186982, 0, -0.7967562402, 0.04097822706, -0.6029098428, 0, -0.1996350917, 0.8706294745, 0.4496111079, 0, -0.02787660336, -0.9106232682, -0.4122962022, 0, -0.7797625996, -0.6257634692, 0.01975775581, 0, -0.5211232846, 0.7401644346, -0.4249554471, 0, 0.8575424857, 0.4053272873, -0.3167501783, 0, 0.1045223322, 0.8390195772, -0.5339674439, 0,
        0.3501822831, 0.9242524096, -0.1520850155, 0, 0.1987849858, 0.07647613266, 0.9770547224, 0, 0.7845996363, 0.6066256811, -0.1280964233, 0, 0.09006737436, -0.9750989929, -0.2026569073, 0, -0.8274343547, -0.542299559, 0.1458203587, 0, -0.3485797732, -0.415802277, 0.840000362, 0, -0.2471778936, -0.7304819962, -0.6366310879, 0, -0.3700154943, 0.8577948156, 0.3567584454, 0,
        0.5913394901, -0.548311967, -0.5913303597, 0, 0.1204873514, -0.7626472379, -0.6354935001, 0, 0.616959265, 0.03079647928, 0.7863922953, 0, 0.1258156836, -0.6640829889, -0.7369967419, 0, -0.6477565124, -0.1740147258, -0.7417077429, 0, 0.6217889313, -0.7804430448, -0.06547655076, 0, 0.6589943422, -0.6096987708, 0.4404473475, 0, -0.2689837504, -0.6732403169, -0.6887635427, 0,
        -0.3849775103, 0.5676542638, 0.7277093879, 0, 0.5754444408, 0.8110471154, -0.1051963504, 0, 0.9141593684, 0.3832947817, 0.131900567, 0, -0.107925319, 0.9245493968, 0.3654593525, 0, 0.377977089, 0.3043148782, 0.8743716458, 0, -0.2142885215, -0.8259286236, 0.5214617324, 0, 0.5802544474, 0.4148098596, -0.7008834116, 0, -0.1982660881, 0.8567161266, -0.4761596756, 0,
        -0.03381553704, 0.3773180787, -0.9254661404, 0, -0.6867922841, -0.6656597827, 0.2919133642, 0, 0.7731742607, -0.2875793547, -0.5652430251, 0, -0.09655941928, 0.9193708367, -0.3813575004, 0, 0.2715702457, -0.9577909544, -0.09426605581, 0, 0.2451015704, -0.6917998565, -0.6792188003, 0, 0.977700782, -0.1753855374, 0.1155036542, 0, -0.5224739938, 0.8521606816, 0.02903615945, 0,
        -0.7734880599, -0.5261292347, 0.3534179531, 0, -0.7134492443, -0.269547243, 0.6467878011, 0, 0.1644037271, 0.5105846203, -0.8439637196, 0, 0.6494635788, 0.05585611296, 0.7583384168, 0, -0.4711970882, 0.5017280509, -0.7254255765, 0, -0.6335764307, -0.2381686273, -0.7361091029, 0, -0.9021533097, -0.270947803, -0.3357181763, 0, -0.3793711033, 0.872258117, 0.3086152025, 0,
        -0.6855598966, -0.3250143309, 0.6514394162, 0, 0.2900942212, -0.7799057743, -0.5546100667, 0, -0.2098319339, 0.85037073, 0.4825351604, 0, -0.4592603758, 0.6598504336, -0.5947077538, 0, 0.8715945488, 0.09616365406, -0.4807031248, 0, -0.6776666319, 0.7118504878, -0.1844907016, 0, 0.7044377633, 0.312427597, 0.637304036, 0, -0.7052318886, -0.2401093292, -0.6670798253, 0,
        0.081921007, -0.7207336136, -0.6883545647, 0, -0.6993680906, -0.5875763221, -0.4069869034, 0, -0.1281454481, 0.6419895885, 0.7559286424, 0, -0.6337388239, -0.6785471501, -0.3714146849, 0, 0.5565051903, -0.2168887573, -0.8020356851, 0, -0.5791554484, 0.7244372011, -0.3738578718, 0, 0.1175779076, -0.7096451073, 0.6946792478, 0, -0.6134619607, 0.1323631078, 0.7785527795, 0,
        0.6984635305, -0.02980516237, -0.715024719, 0, 0.8318082963, -0.3930171956, 0.3919597455, 0, 0.1469576422, 0.05541651717, -0.9875892167, 0, 0.708868575, -0.2690503865, 0.6520101478, 0, 0.2726053183, 0.67369766, -0.68688995, 0, -0.6591295371, 0.3035458599, -0.6880466294, 0, 0.4815131379, -0.7528270071, 0.4487723203, 0, 0.9430009463, 0.1675647412, -0.2875261255, 0,
        0.434802957, 0.7695304522, -0.4677277752, 0, 0.3931996188, 0.594473625, 0.7014236729, 0, 0.7254336655, -0.603925654, 0.3301814672, 0, 0.7590235227, -0.6506083235, 0.02433313207, 0, -0.8552768592, -0.3430042733, 0.3883935666, 0, -0.6139746835, 0.6981725247, 0.3682257648, 0, -0.7465905486, -0.5752009504, 0.3342849376, 0, 0.5730065677, 0.810555537, -0.1210916791, 0,
        -0.9225877367, -0.3475211012, -0.167514036, 0, -0.7105816789, -0.4719692027, -0.5218416899, 0, -0.08564609717, 0.3583001386, 0.929669703, 0, -0.8279697606, -0.2043157126, 0.5222271202, 0, 0.427944023, 0.278165994, 0.8599346446, 0, 0.5399079671, -0.7857120652, -0.3019204161, 0, 0.5678404253, -0.5495413974, -0.6128307303, 0, -0.9896071041, 0.1365639107, -0.04503418428, 0,
        -0.6154342638, -0.6440875597, 0.4543037336, 0, 0.1074204368, -0.7946340692, 0.5975094525, 0, -0.3595449969, -0.8885529948, 0.28495784, 0, -0.2180405296, 0.1529888965, 0.9638738118, 0, -0.7277432317, -0.6164050508, -0.3007234646, 0, 0.7249729114, -0.00669719484, 0.6887448187, 0, -0.5553659455, -0.5336586252, 0.6377908264, 0, 0.5137558015, 0.7976208196, -0.3160000073, 0,
        -0.3794024848, 0.9245608561, -0.03522751494, 0, 0.8229248658, 0.2745365933, -0.4974176556, 0, -0.5404114394, 0.6091141441, 0.5804613989, 0, 0.8036581901, -0.2703029469, 0.5301601931, 0, 0.6044318879, 0.6832968393, 0.4095943388, 0, 0.06389988817, 0.9658208605, -0.2512108074, 0, 0.1087113286, 0.7402471173, -0.6634877936, 0, -0.713427712, -0.6926784018, 0.1059128479, 0,
        0.6458897819, -0.5724548511, -0.5050958653, 0, -0.6553931414, 0.7381471625, 0.159995615, 0, 0.3910961323, 0.9188871375, -0.05186755998, 0, -0.4879022471, -0.5904376907, 0.6429111375, 0, 0.6014790094, 0.7707441366, -0.2101820095, 0, -0.5677173047, 0.7511360995, 0.3368851762, 0, 0.7858573506, 0.226674665, 0.5753666838, 0, -0.4520345543, -0.604222686, -0.6561857263, 0,
        0.002272116345, 0.4132844051, -0.9105991643, 0, -0.5815751419, -0.5162925989, 0.6286591339, 0, -0.03703704785, 0.8273785755, 0.5604221175, 0, -0.5119692504, 0.7953543429, -0.3244980058, 0, -0.2682417366, -0.9572290247, -0.1084387619, 0, -0.2322482736, -0.9679131102, -0.09594243324, 0, 0.3554328906, -0.8881505545, 0.2913006227, 0, 0.7346520519, -0.4371373164, 0.5188422971, 0,
        0.9985120116, 0.04659011161, -0.02833944577, 0, -0.3727687496, -0.9082481361, 0.1900757285, 0, 0.91737377, -0.3483642108, 0.1925298489, 0, 0.2714911074, 0.4147529736, -0.8684886582, 0, 0.5131763485, -0.7116334161, 0.4798207128, 0, -0.8737353606, 0.18886992, -0.4482350644, 0, 0.8460043821, -0.3725217914, 0.3814499973, 0, 0.8978727456, -0.1780209141, -0.4026575304, 0,
        0.2178065647, -0.9698322841, -0.1094789531, 0, -0.1518031304, -0.7788918132, -0.6085091231, 0, -0.2600384876, -0.4755398075, -0.8403819825, 0, 0.572313509, -0.7474340931, -0.3373418503, 0, -0.7174141009, 0.1699017182, -0.6756111411, 0, -0.684180784, 0.02145707593, -0.7289967412, 0, -0.2007447902, 0.06555605789, -0.9774476623, 0, -0.1148803697, -0.8044887315, 0.5827524187, 0,
        -0.7870349638, 0.03447489231, 0.6159443543, 0, -0.2015596421, 0.6859872284, 0.6991389226, 0, -0.08581082512, -0.10920836, -0.9903080513, 0, 0.5532693395, 0.7325250401, -0.396610771, 0, -0.1842489331, -0.9777375055, -0.1004076743, 0, 0.0775473789, -0.9111505856, 0.4047110257, 0, 0.1399838409, 0.7601631212, -0.6344734459, 0, 0.4484419361, -0.845289248, 0.2904925424, 0
    )

    [Int64]$Seed                                           = 1337
    [Int64]$Octaves                                        = 3
    [Single]$Frequency                                     = 0.01
    [Single]$Lacunarity                                    = 2
    [Single]$Gain                                          = 0.5
    [Single]$WeightedStrength                              = 0
    [Single]$PingPongStrength                              = 2
    [Single]$FractalBounding                               = 1 / 1.75
    [Single]$CellularJitterModifier                        = 1
    [Single]$DomainWarpAmp                                 = 1
    [FnlNoiseType]$NoiseType                               = [FnlNoiseType]::OpenSimplex2
    [FnlRotationType3D]$RotationType3D                     = [FnlRotationType3D]::None
    [FnlTransformType3D]$TransformType3D                   = [FnlTransformType3D]::DefaultOpenSimplex2
    [FnlTransformType3D]$WarpTransformType3D               = [FnlTransformType3D]::DefaultOpenSimplex2
    [FnlFractalType]$FractalType                           = [FnlFractalType]::None
    [FnlCellularDistanceFunction]$CellularDistanceFunction = [FnlCellularDistanceFunction]::EuclideanSq
    [FnlCellularReturnType]$CellularReturnType             = [FnlCellularReturnType]::Distance
    [FnlDomainWarpType]$DomainWarpType                     = [FnlDomainWarpType]::OpenSimplex2

    FastNoiseLite() {}

    ###########################################################################
    #
    # NOTE THAT THE FOLLOWING METHODS WERE INLINED IN THE C# SOURCE.
    # POWERSHELL DOESN'T SUPPORT INLINING, SO THERE *MAY* BE SOME PERFORMANCE
    # DECAY HERE.
    #
    ###########################################################################
    Static [Single]FastMin(
        [Single]$A,
        [Single]$B
    ) {
        Return $A -LT $B ? $A : $B
    }

    Static [Single]FastMax(
        [Single]$A,
        [Single]$B
    ) {
        Return $A -GT $B ? $A : $B
    }

    Static [Single]FastAbs(
        [Single]$F
    ) {
        Return $F -LT 0 ? $F * -1 : $F
    }

    Static [Single]FastSqrt(
        [Single]$F
    ) {
        Return ([Single]([System.Math]::Sqrt($F))) # SQRT RETURNS DOUBLE, SO THIS CAST MAY MAKE SENSE, BUT WE MAY LOSE RESOLUTION
    }

    Static [Int64]FastFloor(
        [Single]$F
    ) {
        Return $F -GE 0 ? ([Int64]$F) : ([Int64]$F) - 1
    }

    Static [Int64]FastRound(
        [Single]$F
    ) {
        Return $F -GE 0 ? ([Int64]($F + 0.5)) : ([Int64]($F - 0.5))
    }

    Static [Single]Lerp(
        [Single]$A,
        [Single]$B,
        [Single]$T
    ) {
        Return $A + $T * ($B - $A)
    }

    Static [Single]InterpHermite(
        [Single]$T
    ) {
        Return $T * $T * (3 - 2 * $T)
    }

    Static [Single]InterpQuintic(
        [Single]$T
    ) {
        Return $T * $T * $T * ($T * ($T * 6 - 15) + 10)
    }

    Static [Single]CubicLerp(
        [Single]$A,
        [Single]$B,
        [Single]$C,
        [Single]$D,
        [Single]$T
    ) {
        [Single]$P = ($D - $C) - ($A - $B)

        Return $T * $T * $T * $P + $T * $T * (($A - $B) - $P) + $T * ($C - $A) + $B
    }

    Static [Int64]Hash(
        [Int64]$ASeed,
        [Int64]$XPrimed,
        [Int64]$YPrimed
    ) {
        [Int64]$Hash  = $ASeed -BXOR $XPrimed -BXOR $YPrimed
        $Hash        *= [FastNoiseLite]::HASH_MAGIC

        Return $Hash
    }

    Static [Int64]Hash(
        [Int64]$ASeed,
        [Int64]$XPrimed,
        [Int64]$YPrimed,
        [Int64]$ZPrimed
    ) {
        [Int64]$Hash  = $ASeed -BXOR $XPrimed -BXOR $YPrimed -BXOR $ZPrimed
        $Hash        *= [FastNoiseLite]::HASH_MAGIC

        Return $Hash
    }

    Static [Single]ValCoord(
        [Int64]$ASeed,
        [Int64]$XPrimed,
        [Int64]$YPrimed
    ) {
        [Int64]$Hash  = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed)
        $Hash        *= $Hash
        $Hash         = $Hash -BXOR ($Hash -SHL 19) # ORIGINAL STATEMENT WAS hash ^= hash << 19;

        Return $Hash * (1 / [FastNoiseLite]::HASHCALC_MAGIC)
    }

    Static [Single]ValCoord(
        [Int64]$ASeed,
        [Int64]$XPrimed,
        [Int64]$YPrimed,
        [Int64]$ZPrimed
    ) {
        [Int64]$Hash  = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed, $ZPrimed)
        $Hash        *= $Hash
        $Hash         = $Hash -BXOR ($Hash -SHL 19) # ORIGINAL STATEMENT WAS hash ^= hash << 19;

        Return $Hash * (1 / [FastNoiseLite]::HASHCALC_MAGIC)
    }

    Static [Single]GradCoord(
        [Int64]$ASeed,
        [Int64]$XPrimed,
        [Int64]$YPrimed,
        [Single]$Xd,
        [Single]$Yd
    ) {
        [Int64]$Hash = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed)
        $Hash        = $Hash -BXOR ($Hash -SHR 15) # ORIGINAL STATEMENT WAS hash ^= hash >> 15;
        $Hash        = $Hash -BAND (127 -SHL 1) # ORIGINAL STATEMENT WAS  hash &= 127 << 1;

        [Single]$Xg = [FastNoiseLite]::GRADIENTS2D[$Hash]
        [Single]$Yg = [FastNoiseLite]::GRADIENTS2D[($Hash -BOR 1)]

        Return $Xd * $Xg + $Yd * $Yg
    }

    Static [Single]GradCoord(
        [Int64]$ASeed,
        [Int64]$XPrimed,
        [Int64]$YPrimed,
        [Int64]$ZPrimed,
        [Single]$Xd,
        [Single]$Yd,
        [Single]$Zd
    ) {
        [Int64]$Hash = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed, $ZPrimed)
        $Hash        = $Hash -BXOR ($Hash -SHR 15) # ORIGINAL STATEMENT WAS hash ^= hash >> 15;
        $Hash        = $Hash -BAND (63 -SHL 2) # ORIGINAL STATEMENT WAS  hash &= 63 << 2;

        [Single]$Xg = [FastNoiseLite]::GRADIENTS3D[$Hash]
        [Single]$Yg = [FastNoiseLite]::GRADIENTS3D[($Hash -BOR 1)]
        [Single]$Zg = [FastNoiseLite]::GRADIENTS3D[($Hash -BOR 2)]

        Return $Xd * $Xg + $Yd * $Yg + $Zd * $Zg
    }

    ###########################################################################
    #
    # THE ORIGINAL SOURCE FOR THIS METHOD IS AS FOLLOWS:
    #
    #     private static void GradCoordOut(int seed, int xPrimed, int yPrimed, out Single xo, out Single yo)
    #     {
    #     int hash = Hash(seed, xPrimed, yPrimed) & (255 << 1);
    #
    #     xo = RandVecs2D[hash];
    #     yo = RandVecs2D[hash | 1];
    #     }
    #
    # USING REF ARGS IN LIEU OF OUT SHOULD BE SATISFACTORY HERE
    #
    ###########################################################################
    Static [Void]GradCoordOut(
        [Int64]$ASeed,
        [Int64]$XPrimed,
        [Int64]$YPrimed,
        [Ref]$Xo,
        [Ref]$Yo
    ) {
        [Int64]$Hash = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed) -BAND (255 -SHL 1)

        $Xo.Value = [FastNoiseLite]::RANDVECS2D[$Hash]
        $Yo.Value = [FastNoiseLite]::RANDVECS2D[($Hash -BOR 1)]
    }

    Static [Void]GradCoordOut(
        [Int64]$ASeed,
        [Int64]$XPrimed,
        [Int64]$YPrimed,
        [Int64]$ZPrimed,
        [Ref]$Xo,
        [Ref]$Yo,
        [Ref]$Zo
    ) {
        [Int64]$Hash = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed) -BAND (255 -SHL 2)

        $Xo.Value = [FastNoiseLite]::RANDVECS2D[$Hash]
        $Yo.Value = [FastNoiseLite]::RANDVECS2D[($Hash -BOR 1)]
        $Zo.Value = [FastNoiseLite]::RANDVECS2D[($Hash -BOR 2)]
    }

    Static [Void]GradCoordDual(
        [Int64]$ASeed,
        [Int64]$XPrimed,
        [Int64]$YPrimed,
        [Single]$Xd,
        [Single]$Yd,
        [Ref]$Xo,
        [Ref]$Yo
    ) {
        [Int64]$Hash   = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed)
        [Int64]$Index1 = $Hash -BAND (127 -SHL 1)
        [Int64]$Index2 = ($Hash -SHR 7) -BAND (255 -SHL 1)
        [Single]$Xg    = [FastNoiseLite]::GRADIENTS2D[$Index1]
        [Single]$Yg    = [FastNoiseLite]::GRADIENTS2D[($Index1 -BOR 1)]
        [Single]$Xgo   = [FastNoiseLite]::RANDVECS2D[$Index2]
        [Single]$Ygo   = [FastNoiseLite]::RANDVECS2D[($Index2 -BOR 1)]
        [Single]$Value = $Xd * $Xg + $Yd * $Yg

        $Xo.Value = $Value * $Xgo
        $Yo.Value = $Value * $Ygo
    }

    Static [Void]GradCoordDual(
        [Int64]$ASeed,
        [Int64]$XPrimed,
        [Int64]$YPrimed,
        [Int64]$ZPrimed,
        [Single]$Xd,
        [Single]$Yd,
        [Single]$Zd,
        [Ref]$Xo,
        [Ref]$Yo,
        [Ref]$Zo
    ) {
        [Int64]$Hash   = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed, $ZPrimed)
        [Int64]$Index1 = $Hash -BAND (63 -SHL 2)
        [Int64]$Index2 = ($Hash -SHR 6) -BAND (255 -SHL 2)
        [Single]$Xg    = [FastNoiseLite]::GRADIENTS3D[$Index1]
        [Single]$Yg    = [FastNoiseLite]::GRADIENTS3D[($Index1 -BOR 1)]
        [Single]$Zg    = [FastNoiseLite]::GRADIENTS2D[($Index1 -BOR 2)]
        [Single]$Xgo   = [FastNoiseLite]::RANDVECS3D[$Index2]
        [Single]$Ygo   = [FastNoiseLite]::RANDVECS3D[($Index2 -BOR 1)]
        [Single]$Zgo   = [FastNoiseLite]::RANDVECS3D[($Index2 -BOR 2)]
        [Single]$Value = $Xd * $Xg + $Yd * $Yg + $Zd * $Zg

        $Xo.Value = $Value * $Xgo
        $Yo.Value = $Value * $Ygo
        $Zo.Value = $Value * $Zgo
    }

    [Void]SetNoiseType(
        [FnlNoiseType]$NoiseType
    ) {
        $this.NoiseType = $NoiseType
        $this.UpdateTransformType3D()
    }

    [Void]SetRotationType3D(
        [FnlRotationType3D]$RotationType3D
    ) {
        $this.RotationType3D = $RotationType3D
        $this.UpdateTransformType3D()
        $this.UpdateWarpTransformType3D()
    }

    [Void]SetFractalOctaves(
        [Int64]$Octaves
    ) {
        $this.Octaves = $Octaves
        $this.CalculateFractalBounding()
    }

    [Void]SetFractalGain(
        [Single]$Gain
    ) {
        $this.Gain = $Gain
        $this.CalculateFractalBounding()
    }

    [Void]SetDomainWarpType(
        [FnlDomainWarpType]$DomainWarpType
    ) {
        $this.DomainWarpType = $DomainWarpType
        $this.UpdateWarpTransformType3D()
    }

    [Single]GetNoise(
        [Single]$X,
        [Single]$Y
    ) {
        $this.TransformNoiseCoordinate(([Ref]$X), ([Ref]$Y))

        Switch($this.FractalType) {
            ([FnlFractalType]::FBm) {
                Return $this.GenFractalFBm($X, $Y)
            }

            ([FnlFractalType]::Ridged) {
                Return $this.GenFractalRidged($X, $Y)
            }

            ([FnlFractalType]::PingPong) {
                Return $this.GenFractalPingPong($X, $Y)
            }

            Default {
                Return $this.GenNoiseSingle($this.Seed, $X, $Y)
            }
        }

        # THIS CODE PATH ISN'T CONSIDERED IN THE ORIGINAL SOURCE, SO I'LL JUST INCLUDE THE DEFAULT CASE HERE
        # THIS IS MORE SO THE LINTER WILL SHUT UP, BUT JUSTIN CASE
        Return $this.GenNoiseSingle($this.Seed, $X, $Y)
    }

    [Single]GetNoise(
        [Single]$X,
        [Single]$Y,
        [Single]$Z
    ) {
        $this.TransformNoiseCoordinate(([Ref]$X), ([Ref]$Y), ([Ref]$Z))

        Switch($this.FractalType) {
            ([FnlFractalType]::FBm) {
                Return $this.GenFractalFBm($X, $Y, $Z)
            }

            ([FnlFractalType]::Ridged) {
                Return $this.GenFractalRidged($X, $Y, $Z)
            }

            ([FnlFractalType]::PingPong) {
                Return $this.GenFractalPingPong($X, $Y, $Z)
            }

            Default {
                Return $this.GenNoiseSingle($this.Seed, $X, $Y, $Z)
            }
        }

        # THIS CODE PATH ISN'T CONSIDERED IN THE ORIGINAL SOURCE, SO I'LL JUST INCLUDE THE DEFAULT CASE HERE
        # THIS IS MORE SO THE LINTER WILL SHUT UP, BUT JUSTIN CASE
        Return $this.GenNoiseSingle($this.Seed, $X, $Y, $Z)
    }

    [Void]DomainWarp(
        [Ref]$X,
        [Ref]$Y
    ) {
        Switch($this.FractalType) {
            ([FnlFractalType]::DomainWarpProgressive) {
                $this.DomainWarpFractalProgressive($X, $Y)

                Break
            }

            ([FnlFractalType]::DomainWarpIndependent) {
                $this.DomainWarpFractalIndependent($X, $Y)

                Break
            }

            Default {
                $this.DomainWarpSingle($X, $Y)

                Break
            }
        }

        $this.DomainWarpSingle($X, $Y)
    }

    [Void]DomainWarp(
        [Ref]$X,
        [Ref]$Y,
        [Ref]$Z
    ) {
        Switch($this.FractalType) {
            ([FnlFractalType]::DomainWarpProgressive) {
                $this.DomainWarpFractalProgressive($X, $Y, $Z)

                Break
            }

            ([FnlFractalType]::DomainWarpIndependent) {
                $this.DomainWarpFractalIndependent($X, $Y, $Z)

                Break
            }

            Default {
                $this.DomainWarpSingle($X, $Y, $Z)

                Break
            }
        }

        $this.DomainWarpSingle($X, $Y, $Z)
    }

    [Single]PingPong(
        [Single]$T
    ) {
        $T = $T - ([Int64]($T * 0.5)) * 2

        Return $T -LT 1 ? $T : 2 - $T
    }

    [Void]CalculateFractalBounding() {
        [Single]$LGain       = [FastNoiseLite]::FastAbs($this.Gain)
        [Single]$LAmp        = $LGain
        [Single]$LAmpFractal = 1

        For([Int64]$I = 1; $I -LT $this.Octaves; $I++) {
            $LAmpFractal += $LAmp
            $LAmp        *= $LGain
        }

        $this.FractalBounding = 1 / $LAmpFractal
    }

    [Single]GenNoiseSingle(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y
    ) {
        Switch($this.NoiseType) {
            ([FnlNoiseType]::OpenSimplex2) {
                Return $this.SingleSimplex($ASeed, $X, $Y)
            }

            ([FnlNoiseType]::OpenSimplex2S) {
                Return $this.SingleOpenSimplex2S($ASeed, $X, $Y)
            }

            ([FnlNoiseType]::Cellular) {
                Return $this.SingleCellular($ASeed, $X, $Y)
            }

            ([FnlNoiseType]::Perlin) {
                Return $this.SinglePerlin($ASeed, $X, $Y)
            }

            ([FnlNoiseType]::ValueCubic) {
                Return $this.SingleValueCubic($ASeed, $X, $Y)
            }

            ([FnlNoiseType]::Value) {
                Return $this.SingleValue($ASeed, $X, $Y)
            }

            Default {
                Return 0
            }
        }

        Return 0
    }

    [Single]GenNoiseSingle(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y,
        [Single]$Z
    ) {
        Switch($this.NoiseType) {
            ([FnlNoiseType]::OpenSimplex2) {
                Return $this.SingleSimplex($ASeed, $X, $Y, $Z)
            }

            ([FnlNoiseType]::OpenSimplex2S) {
                Return $this.SingleOpenSimplex2S($ASeed, $X, $Y, $Z)
            }

            ([FnlNoiseType]::Cellular) {
                Return $this.SingleCellular($ASeed, $X, $Y, $Z)
            }

            ([FnlNoiseType]::Perlin) {
                Return $this.SinglePerlin($ASeed, $X, $Y, $Z)
            }

            ([FnlNoiseType]::ValueCubic) {
                Return $this.SingleValueCubic($ASeed, $X, $Y, $Z)
            }

            ([FnlNoiseType]::Value) {
                Return $this.SingleValue($ASeed, $X, $Y, $Z)
            }

            Default {
                Return 0
            }
        }

        Return 0
    }

    [Void]TransformNoiseCoordinate(
        [Ref]$X,
        [Ref]$Y
    ) {
        $X.Value *= $this.Frequency
        $Y.Value *= $this.Frequency

        Switch($this.NoiseType) {
            ($_ -EQ [FnlNoiseType]::OpenSimplex2 -OR $_ -EQ [FnlNoiseType]::OpenSimplex2S) {
                [Single]$F2 = 0.5 * ([FastNoiseLite]::SQRT3 - 1)
                [Single]$T  = ($X.Value + $Y.Value) * $F2

                $X.Value += $T
                $Y.Value += $T

                Break
            }

            Default {
                Break
            }
        }

        Return
    }

    [Void]TransformNoiseCoordinate(
        [Ref]$X,
        [Ref]$Y,
        [Ref]$Z
    ) {
        $X.Value *= $this.Frequency
        $Y.Value *= $this.Frequency
        $Z.Value *= $this.Frequency

        Switch($this.TransformType3D) {
            ([FnlTransformType3D]::ImproveXYPlanes) {
                [Single]$Xy = $X.Value + $Y.Value
                [Single]$S2 = $Xy * -[FastNoiseLite]::PLANARIMPROVEA_MAGIC

                $Z.Value *= [FastNoiseLite]::PLANARIMPROVEZSCALE_MAGIC
                $X.Value += $S2 - $Z.Value
                $Y.Value += $S2 - $Z.Value
                $Z.Value += $Xy * [FastNoiseLite]::PLANARIMPROVEZSCALE_MAGIC

                Break
            }

            ([FnlTransformType3D]::ImproveXZPlanes) {
                [Single]$Xz = $X.Value + $Z.Value
                [Single]$S2 = $Xz * -[FastNoiseLite]::PLANARIMPROVEA_MAGIC

                $Y.Value *= [FastNoiseLite]::PLANARIMPROVEZSCALE_MAGIC
                $X.Value += $S2 - $Z.Value
                $Y.Value += $S2 - $Z.Value
                $Z.Value += $Xz * [FastNoiseLite]::PLANARIMPROVEZSCALE_MAGIC

                Break
            }

            ([FnlTransformType3D]::DefaultOpenSimplex2) {
                [Single]$R = ($X.Value + $Y.Value + $Z.Value) * [FastNoiseLite]::A2DIV3

                $X.Value = $R - $X.Value
                $Y.Value = $R - $Y.Value
                $Z.Value = $R - $Z.Value

                Break
            }

            Default {
                Break
            }
        }

        Return
    }

    [Void]UpdateTransformType3D() {
        Switch($this.RotationType3D) {
            ([FnlRotationType3D]::ImproveXYPlanes) {
                $this.TransformType3D = [FnlTransformType3D]::ImproveXYPlanes

                Break
            }

            ([FnlRotationType3D]::ImproveXZPlanes) {
                $this.TransformType3D = [FnlTransformType3D]::ImproveXZPlanes

                Break
            }

            Default {
                Switch($this.NoiseType) {
                    ($_ -EQ [FnlNoiseType]::OpenSimplex2 -OR $_ -EQ [FnlNoiseType]::OpenSimplex2S) {
                        $this.TransformType3D = [FnlTransformType3D]::DefaultOpenSimplex2

                        Break
                    }

                    Default {
                        $this.TransformType3D = [FnlTransformType3D]::None

                        Break
                    }
                }

                Break
            }
        }

        Return
    }

    [Void]TransformDomainWarpCoordinate(
        [Ref]$X,
        [Ref]$Y
    ) {
        Switch($this.DomainWarpType) {
            ($_ -EQ [FnlDomainWarpType]::OpenSimplex2 -OR $_ -EQ [FnlDomainWarpType]::OpenSimplex2Reduced) {
                [Single]$F2 = 0.5 * ([FastNoiseLite]::SQRT3 - 1)
                [Single]$T  = ($X.Value + $Y.Value) * $F2

                $X.Value += $T
                $Y.Value += $T

                Break
            }

            Default {
                Break
            }
        }

        Return
    }

    [Void]TransformDomainWarpCoordinate(
        [Ref]$X,
        [Ref]$Y,
        [Ref]$Z
    ) {
        Switch($this.WarpTransformType3D) {
            ([FnlTransformType3D]::ImproveXYPlanes) {
                [Single]$Xy = $X.Value + $Y.Value
                [Single]$S2 = $Xy * -[FastNoiseLite]::PLANARIMPROVEA_MAGIC

                $Z.Value *= [FastNoiseLite]::PLANARIMPROVEZSCALE_MAGIC
                $X.Value += $S2 - $Z.Value
                $Y.Value += $S2 - $Z.Value
                $Z.Value += $Xy * [FastNoiseLite]::PLANARIMPROVEZSCALE_MAGIC

                Break
            }

            ([FnlTransformType3D]::ImproveXZPlanes) {
                [Single]$Xz = $X.Value + $Z.Value
                [Single]$S2 = $Xz * -[FastNoiseLite]::PLANARIMPROVEA_MAGIC

                $Y.Value *= [FastNoiseLite]::PLANARIMPROVEZSCALE_MAGIC
                $X.Value += $S2 - $Y.Value
                $Z.Value += $S2 - $Y.Value
                $Y.Value += $Xz * [FastNoiseLite]::PLANARIMPROVEZSCALE_MAGIC

                Break
            }

            ([FnlTransformType3D]::DefaultOpenSimplex2) {
                [Single]$R = ($X.Value + $Y.Value + $Z.Value) * [FastNoiseLite]::A2DIV3

                $X.Value = $R - $X.Value
                $Y.Value = $R - $Y.Value
                $Z.Value = $R - $Z.Value

                Break
            }

            Default {
                Break
            }
        }

        Return
    }

    [Void]UpdateWarpTransformType3D() {
        Switch($this.RotationType3D) {
            ([FnlRotationType3D]::ImproveXYPlanes) {
                $this.WarpTransformType3D = [FnlTransformType3D]::ImproveXYPlanes

                Break
            }

            ([FnlRotationType3D]::ImproveXZPlanes) {
                $this.WarpTransformType3D = [FnlTransformType3D]::ImproveXZPlanes

                Break
            }

            Default {
                Switch($this.DomainWarpType) {
                    ($_ -EQ [FnlDomainWarpType]::OpenSimplex2 -OR $_ -EQ [FnlDomainWarpType]::OpenSimplex2Reduced) {
                        $this.WarpTransformType3D = [FnlTransformType3D]::DefaultOpenSimplex2

                        Break
                    }

                    Default {
                        $this.WarpTransformType3D = [FnlTransformType3D]::None

                        Break
                    }
                }

                Break
            }
        }

        Return
    }

    [Single]GenFractalFBm(
        [Single]$X,
        [Single]$Y
    ) {
        [Int64]$ASeed = $this.Seed
        [Single]$Sum  = 0
        [Single]$Amp  = $this.FractalBounding

        For([Int64]$I = 0; $I -LT $this.Octaves; $I++) {
            [Single]$Noise = $this.GenNoiseSingle($ASeed++, $X, $Y)

            $Sum += $Noise * $Amp
            $Amp *= $this.Lerp(1, [FastNoiseLite]::FastMin($Noise + 1, 2) * 0.5, $this.WeightedStrength)
            $X   *= $this.Lacunarity
            $Y   *= $this.Lacunarity
            $Amp *= $this.Gain
        }

        Return $Sum
    }

    [Single]GenFractalFBm(
        [Single]$X,
        [Single]$Y,
        [Single]$Z
    ) {
        [Int64]$ASeed = $this.Seed
        [Single]$Sum  = 0
        [Single]$Amp  = $this.FractalBounding

        For([Int64]$I = 0; $I -LT $this.Octaves; $I++) {
            [Single]$Noise = $this.GenNoiseSingle($ASeed++, $X, $Y, $Z)

            $Sum += $Noise * $Amp
            $Amp *= $this.Lerp(1, [FastNoiseLite]::FastMin($Noise + 1, 2) * 0.5, $this.WeightedStrength)
            $X   *= $this.Lacunarity
            $Y   *= $this.Lacunarity
            $Z   *= $this.Lacunarity
            $Amp *= $this.Gain
        }

        Return $Sum
    }

    [Single]GenFractalRidged(
        [Single]$X,
        [Single]$Y
    ) {
        [Int64]$ASeed = $this.Seed
        [Single]$Sum  = 0
        [Single]$Amp  = $this.FractalBounding

        For([Int64]$I = 0; $I -LT $this.Octaves; $I++) {
            [Single]$Noise = [FastNoiseLite]::FastAbs($this.GenNoiseSingle($ASeed++, $X, $Y))

            $Sum += ($Noise * -2 + 1) * $Amp
            $Amp *= $this.Lerp(1, 1 - $Noise, $this.WeightedStrength)
            $X   *= $this.Lacunarity
            $Y   *= $this.Lacunarity
            $Amp *= $this.Gain
        }

        Return $Sum
    }

    [Single]GenFractalRidged(
        [Single]$X,
        [Single]$Y,
        [Single]$Z
    ) {
        [Int64]$ASeed = $this.Seed
        [Single]$Sum  = 0
        [Single]$Amp  = $this.FractalBounding

        For([Int64]$I = 0; $I -LT $this.Octaves; $I++) {
            [Single]$Noise = [FastNoiseLite]::FastAbs($this.GenNoiseSingle($ASeed++, $X, $Y, $Z))

            $Sum += ($Noise * -2 + 1) * $Amp
            $Amp *= $this.Lerp(1, 1 - $Noise, $this.WeightedStrength)
            $X   *= $this.Lacunarity
            $Y   *= $this.Lacunarity
            $Z   *= $this.Lacunarity
            $Amp *= $this.Gain
        }

        Return $Sum
    }

    [Single]GenFractalPingPong(
        [Single]$X,
        [Single]$Y
    ) {
        [Int64]$ASeed = $this.Seed
        [Single]$Sum  = 0
        [Single]$Amp  = $this.FractalBounding

        For([Int64]$I = 0; $I -LT $this.Octaves; $I++) {
            [Single]$Noise = $this.PingPong(($this.GenNoiseSingle($ASeed++, $X, $Y) + 1) * $this.PingPongStrength)

            $Sum += ($Noise - 0.5) * 2 * $Amp
            $Amp *= $this.Lerp(1, $Noise, $this.WeightedStrength)
            $X   *= $this.Lacunarity
            $Y   *= $this.Lacunarity
            $Amp *= $this.Gain
        }

        Return $Sum
    }

    [Single]GenFractalPingPong(
        [Single]$X,
        [Single]$Y,
        [Single]$Z
    ) {
        [Int64]$ASeed = $this.Seed
        [Single]$Sum  = 0
        [Single]$Amp  = $this.FractalBounding

        For([Int64]$I = 0; $I -LT $this.Octaves; $I++) {
            [Single]$Noise = $this.PingPong(($this.GenNoiseSingle($ASeed++, $X, $Y, $Z) + 1) * $this.PingPongStrength)

            $Sum += ($Noise - 0.5) * 2 * $Amp
            $Amp *= $this.Lerp(1, $Noise, $this.WeightedStrength)
            $X   *= $this.Lacunarity
            $Y   *= $this.Lacunarity
            $Z   *= $this.Lacunarity
            $Amp *= $this.Gain
        }

        Return $Sum
    }

    [Single]SingleSimplex(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y
    ) {
        [Single]$G2   = (3 - [FastNoiseLite]::SQRT3) / 6
        [Single]$G2m1 = $G2 - 1
        [Single]$G2a1 = 1 - 2 * $G2
        [Single]$G2a2 = 2 * $G2m1
        [Int64]$I     = [FastNoiseLite]::FastFloor($X)
        [Int64]$J     = [FastNoiseLite]::FastFloor($Y)
        [Single]$Xi   = ([Single]($X - $I))
        [Single]$Yi   = ([Single]($Y - $J))
        [Single]$T    = ($Xi + $Yi) * $G2
        [Single]$X0   = $Xi - $T
        [Single]$Y0   = $Yi - $T
        [Single]$N0   = 0
        [Single]$N1   = 0
        [Single]$N2   = 0

        $I *= [FastNoiseLite]::PRIMEX
        $J *= [FastNoiseLite]::PRIMEY

        [Single]$A  = 0.5 - $X0 * $X0 - $Y0 * $Y0

        If($A -LE 0) {
            $N0 = 0
        } Else {
            $N0 = $A * $A * $A * $A * [FastNoiseLite]::GradCoord($ASeed, $I, $J, $X0, $Y0)
        }

        [Single]$C  = ([Single](2 * $G2a1 * (1 / $G2 - 2)) * $T + ([Single](-2 * $G2a1 * $G2a1) + $A))

        If($C -LE 0) {
            $N2 = 0
        } Else {
            [Single]$X2 = $X0 + $G2a2
            [Single]$Y2 = $Y0 + $G2a2

            $N2 = $C * $C * $C * $C * [FastNoiseLite]::GradCoord($ASeed, $I + [FastNoiseLite]::PRIMEX, $J + [FastNoiseLite]::PRIMEY, $X2, $Y2)
        }

        If($Y0 -GT $X0) {
            [Single]$X1 = $X0 + $G2
            [Single]$Y1 = $Y0 + $G2m1
            [Single]$B  = 0.5 - $X1 * $X1 - $Y1 * $Y1

            If($B -LE 0) {
                $N1 = 0
            } Else {
                $N1 = $B * $B * $B * $B * [FastNoiseLite]::GradCoord($ASeed, $I, $J + [FastNoiseLite]::PRIMEY, $X1, $Y1)
            }
        } Else {
            [Single]$X1 = $X0 + $G2m1
            [Single]$Y1 = $Y0 + $G2
            [Single]$B  = 0.5 - $X1 * $X1 - $Y1 * $Y1

            If($B -LE 0) {
                $N1 = 0
            } Else {
                $N1 = $B * $B * $B * $B * [FastNoiseLite]::GradCoord($ASeed, $I + [FastNoiseLite]::PRIMEX, $J, $X1, $Y1)
            }
        }

        Return ($N0 + $N1 + $N2) * 99.83685446303647
    }

    [Single]SingleOpenSimplex2(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y,
        [Single]$Z
    ) {
        [Int64]$I      = [FastNoiseLite]::FastRound($X)
        [Int64]$J      = [FastNoiseLite]::FastRound($Y)
        [Int64]$K      = [FastNoiseLite]::FastRound($Z)
        [Single]$X0    = ([Single]($X - $I))
        [Single]$Y0    = ([Single]($Y - $J))
        [Single]$Z0    = ([Single]($Z - $K))
        [Int64]$XNSign = ([Int64](-1 - $X0) -BOR 1)
        [Int64]$YNSign = ([Int64](-1 - $Y0) -BOR 1)
        [Int64]$ZNSign = ([Int64](-1 - $Z0) -BOR 1)
        [Single]$Ax0   = $XNSign * -$X0
        [Single]$Ay0   = $YNSign * -$Y0
        [Single]$Az0   = $ZNSign * -$Z0
    
        $I *= [FastNoiseLite]::PRIMEX
        $J *= [FastNoiseLite]::PRIMEY
        $K *= [FastNoiseLite]::PRIMEZ
    
        [Single]$Value = 0
        [Single]$A     = (0.6 - $X0 * $X0) - ($Y0 * $Y0 + $Z0 * $Z0)
    
        For([Int64]$L = 0; ; $L++) {
            If($A -GT 0) {
                $Value += $A * $A * $A * $A * [FastNoiseLite]::GradCoord($ASeed, $I, $J, $K, $X0, $Y0, $Z0)
            }

            If($Ax0 -GE $Ay0 -AND $Ax0 -GE $Az0) {
                [Single]$B  = $A + $Ax0 + $Ax0

                If($B -GT 1) {
                    $B     -= 1
                    $Value += $B * $B * $B * $B * [FastNoiseLite]::GradCoord($ASeed, $I - $XNSign * [FastNoiseLite]::PRIMEX, $J, $K, $X0 + $XNSign, $Y0, $Z0)
                }
            } Elseif($Ay0 -GT $Ax0 -AND $Ay0 -GE $Az0) {
                [Single]$B  = $A + $Ay0 + $Ay0

                If($B -GT 1) {
                    $B     -= 1
                    $Value += $B * $B * $B * $B * [FastNoiseLite]::GradCoord($ASeed, $I, $J - $YNSign * [FastNoiseLite]::PRIMEY, $K, $X0, $Y0 + $YNSign, $Z0)
                }
            } Else {
                [Single]$B  = $A + $Az0 + $Az0

                If($B -GT 1) {
                    $B     -= 1
                    $Value += $B * $B * $B * $B * [FastNoiseLite]::GradCoord($ASeed, $I, $J, $K - $ZNSign * [FastNoiseLite]::PRIMEZ, $X0, $Y0, $Z0 + $ZNSign)
                }
            }

            If($L == 1) {
                Break
            }

            $Ax0     = 0.5 - $Ax0
            $Ay0     = 0.5 - $Ay0
            $Az0     = 0.5 - $Az0
            $X0      = $XNSign * $Ax0
            $Y0      = $YNSign * $Ay0
            $Z0      = $ZNSign * $Az0
            $A      += (0.75 - $Ax0) - ($Ay0 + $Az0)
            $I      += ($XNSign -SHR 1) -BAND [FastNoiseLite]::PRIMEX
            $J      += ($YNSign -SHR 1) -BAND [FastNoiseLite]::PRIMEY
            $K      += ($ZNSign -SHR 1) -BAND [FastNoiseLite]::PRIMEZ
            $XNSign  = -$XNSign
            $YNSign  = -$YNSign
            $ZNSign  = -$ZNSign
            $ASeed   = -BNOT $ASeed
        }

        Return $Value * [FastNoiseLite]::SIMPLEXVALMODA_MAGIC
    }

    [Single]SingleOpenSimplex2S(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y
    ) {
        [Single]$G2   = (3 - [FastNoiseLite]::SQRT3) / 6
        [Single]$G2m1 = $G2 - 1
        [Single]$G2a1 = 1 - 2 * $G2
        [Int64]$I     = [FastNoiseLite]::FastFloor($X)
        [Int64]$J     = [FastNoiseLite]::FastFloor($Y)
        [Single]$Xi   = ([Single]($X - $I))
        [Single]$Yi   = ([Single]($Y - $J))

        $I *= [FastNoiseLite]::PRIMEX
        $J *= [FastNoiseLite]::PRIMEY

        [Int64]$I1     = $I + [FastNoiseLite]::PRIMEX
        [Int64]$J1     = $J + [FastNoiseLite]::PRIMEY
        [Single]$T     = ($Xi + $Yi) * $G2
        [Single]$X0    = $Xi - $T
        [Single]$Y0    = $Yi - $T
        [Single]$A0    = [FastNoiseLite]::A2DIV3 - $X0 * $X0 - $Y0 * $Y0
        [Single]$Value = $A0 * $A0 * $A0 * $A0 * [FastNoiseLite]::GradCoord($ASeed, $I, $J, $X0, $Y0)
        [Single]$A1    = ([Single](2 * $G2a1 * (1 / $G2 - 2)) * $T + ([Single](-2 * $G2a1 * $G2a1) + $A0))
        [Single]$X1    = $X0 - $G2a1
        [Single]$Y1    = $Y0 - $G2a1

        $Value += $A1 * $A1 * $A1 * $A1 * [FastNoiseLite]::GradCoord($ASeed, $I1, $J1, $X1, $Y1)

        [Single]$Xmyi = $Xi - $Yi

        If($T -GT $G2) {
            If($Xi + $Xmyi -GT 1) {
                [Single]$X2  = $X0 + (3 * $G2 - 2)
                [Single]$Y2  = $Y0 + (3 * $G2 - 1)
                [Single]$A2  = [FastNoiseLite]::A2DIV3 - $X2 * $X2 - $Y2 * $Y2

                If($A2 -GT 0) {
                    $Value += $A2 * $A2 * $A2 * $A2 * [FastNoiseLite]::GradCoord($ASeed, $I + ([FastNoiseLite]::PRIMEX -SHL 1), $J + [FastNoiseLite]::PRIMEY, $X2, $Y2)
                }
            } Else {
                [Single]$X2  = $X0 + $G2
                [Single]$Y2  = $Y0 + $G2m1
                [Single]$A2  = [FastNoiseLite]::A2DIV3 - $X2 * $X2 - $Y2 * $Y2

                If($A2 -GT 0) {
                    $Value += $A2 * $A2 * $A2 * $A2 * [FastNoiseLite]::GradCoord($ASeed, $I, $J + [FastNoiseLite]::PRIMEY, $X2, $Y2)
                }
            }

            If($Yi - $Xmyi -GT 1) {
                [Single]$X3  = $X0 + $G2m1
                [Single]$Y3  = $Y0 + $G2
                [Single]$A3  = [FastNoiseLite]::A2DIV3 - $X3 * $X3 - $Y3 * $Y3

                If($A3 -GT 0) {
                    $Value += $A3 * $A3 * $A3 * $A3 * [FastNoiseLite]::GradCoord($ASeed, $I + [FastNoiseLite]::PRIMEX, $J, $X3, $Y3)
                }
            }
        } Else {
            If($Xi + $Xmyi -LT 0) {
                [Single]$X2  = $X0 + $G2m1
                [Single]$Y2  = $Y0 - $G2
                [Single]$A2  = [FastNoiseLite]::A2DIV3 - $X2 * $X2 - $Y2 * $Y2

                If($A2 -GT 0) {
                    $Value += $A2 * $A2 * $A2 * $A2 * [FastNoiseLite]::GradCoord($ASeed, $I - [FastNoiseLite]::PRIMEX, $J, $X2, $Y2)
                }
            } Else {
                [Single]$X2  = $X0 + $G2m1
                [Single]$Y2  = $Y0 - $G2
                [Single]$A2  = [FastNoiseLite]::A2DIV3 - $X2 * $X2 - $Y2 * $Y2

                If($A2 -GT 0) {
                    $Value += $A2 * $A2 * $A2 * $A2 * [FastNoiseLite]::GradCoord($ASeed, $I + [FastNoiseLite]::PRIMEX, $J, $X2, $Y2)
                }
            }

            If($Yi -LT $Xmyi) {
                [Single]$X2  = $X0 - $G2
                [Single]$Y2  = $Y0 - $G2m1
                [Single]$A2  = [FastNoiseLite]::A2DIV3 - $X2 * $X2 - $Y2 * $Y2

                If($A2 -GT 0) {
                    $Value += $A2 * $A2 * $A2 * $A2 * [FastNoiseLite]::GradCoord($ASeed, $I, $J - [FastNoiseLite]::PRIMEY, $X2, $Y2)
                }
            } Else {
                [Single]$X2  = $X0 + $G2
                [Single]$Y2  = $Y0 + $G2m1
                [Single]$A2  = [FastNoiseLite]::A2DIV3 - $X2 * $X2 - $Y2 * $Y2

                If($A2 -GT 0) {
                    $Value += $A2 * $A2 * $A2 * $A2 * [FastNoiseLite]::GradCoord($ASeed, $I, $J + [FastNoiseLite]::PRIMEY, $X2, $Y2)
                }
            }
        }

        Return $Value * 18.24196194486065
    }

    [Single]SingleOpenSimplex2S(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y,
        [Single]$Z
    ) {
        [Int64]$I   = [FastNoiseLite]::FastFloor($X)
        [Int64]$J   = [FastNoiseLite]::FastFloor($Y)
        [Int64]$K   = [FastNoiseLite]::FastFloor($Z)
        [Single]$Xi = ([Single]($X - $I))
        [Single]$Yi = ([Single]($Y - $J))
        [Single]$Zi = ([Single]($Z - $K))

        $I *= [FastNoiseLite]::PRIMEX
        $J *= [FastNoiseLite]::PRIMEY
        $K *= [FastNoiseLite]::PRIMEZ

        [Int64]$Seed2  = $ASeed + [FastNoiseLite]::SEEDADD_MAGIC
        [Int64]$XNMask = ([Int64](0.5 - $Xi))
        [Int64]$YNMask = ([Int64](0.5 - $Yi))
        [Int64]$ZNMask = ([Int64](0.5 - $Zi))
        [Single]$X0    = $Xi + $XNMask
        [Single]$Y0    = $Yi + $YNMask
        [Single]$Z0    = $Zi + $ZNMask
        [Single]$A0    = 0.75 - $X0 * $X0 - $Y0 * $Y0 - $Z0 * $Z0
        [Single]$Value = $A0 * $A0 * $A0 * $A0 * [FastNoiseLite]::GradCoord(
            $ASeed,
            $I + ($XNMask -BAND [FastNoiseLite]::PRIMEX),
            $J + ($YNMask -BAND [FastNoiseLite]::PRIMEY),
            $K + ($ZNMask -BAND [FastNoiseLite]::PRIMEZ),
            $X0, $Y0, $Z0
        )

        [Single]$X1   = $Xi - 0.5
        [Single]$Y1   = $Yi - 0.5
        [Single]$Z1   = $Zi - 0.5
        [Single]$A1   = 0.75 - $X1 * $X1 - $Y1 * $Y1 - $Z1 * $Z1
        $Value       += $A1 * $A1 * $A1 * $A1 * [FastNoiseLite]::GradCoord(
            $Seed2,
            $I + [FastNoiseLite]::PRIMEX,
            $J + [FastNoiseLite]::PRIMEY,
            $K + [FastNoiseLite]::PRIMEZ,
            $X1, $Y1, $Z1
        )

        [Single]$XAFlipMask0 = (($XNMask -BOR 1) -SHL 1) * $X1
        [Single]$YAFlipMask0 = (($YNMask -BOR 1) -SHL 1) * $Y1
        [Single]$ZAFlipMask0 = (($ZNMask -BOR 1) -SHL 1) * $Z1
        [Single]$XAFlipMask1 = (-2 - ($XNMask -SHL 2)) * $X1 - 1
        [Single]$YAFlipMask1 = (-2 - ($YNMask -SHL 2)) * $Y1 - 1
        [Single]$ZAFlipMask1 = (-2 - ($ZNMask -SHL 2)) * $Z1 - 1
        [Boolean]$Skip5      = $false
        [Single]$A2          = $XAFlipMask0 + $A0

        If($A2 -GT 0) {
            [Single]$X2 = $X0 - ($XNMask -BOR 1)
            [Single]$Y2 = $Y0
            [Single]$Z2 = $Z0

            $Value += $A2 * $A2 * $A2 * $A2 * [FastNoiseLite]::GradCoord(
                $ASeed,
                $I + (-BNOT $XNMask -BAND [FastNoiseLite]::PRIMEX),
                $J + ($YNMask -BAND [FastNoiseLite]::PRIMEY),
                $K + ($ZNMask -BAND [FastNoiseLite]::PRIMEZ),
                $X2, $Y2, $Z2
            )
        } Else {
            [Single]$A3  = $YAFlipMask0 + $ZAFlipMask0 + $A0

            If($A3 -GT 0) {
                [Single]$X3 = $X0
                [Single]$Y3 = $Y0 - ($YNMask -BOR 1)
                [Single]$Z3 = $Z0 - ($ZNMask -BOR 1)

                $Value += $A3 * $A3 * $A3 * $A3 * [FastNoiseLite]::GradCoord(
                    $ASeed,
                    $I + ($XNMask -BAND [FastNoiseLite]::PRIMEX),
                    $J + (-BNOT $YNMask -BAND [FastNoiseLite]::PRIMEY),
                    $K + (-BNOT $ZNMask -BAND [FastNoiseLite]::PRIMEZ),
                    $X3, $Y3, $Z3
                )
            }

            [Single]$A4  = $XAFlipMask1 + $A1

            If($A4 -GT 0) {
                [Single]$X4 = ($XNMask -BOR 1) + $X1
                [Single]$Y4 = $Y1
                [Single]$Z4 = $Z1

                $Value += $A4 * $A4 * $A4 * $A4 * [FastNoiseLite]::GradCoord(
                    $Seed2,
                    $I + ($XNMask -BAND [FastNoiseLite]::APRIMEXMULT2),
                    $J + [FastNoiseLite]::PRIMEY,
                    $K + [FastNoiseLite]::PRIMEZ,
                    $X4, $Y4, $Z4
                )
                $Skip5 = $true
            }
        }

        [Boolean]$Skip9 = $false
        [Single]$A6     = $YAFlipMask0 + $A0

        If($A6 -GT 0) {
            [Single]$X6 = $X0
            [Single]$Y6 = $Y0 - ($YNMask -BOR 1)
            [Single]$Z6 = $Z0

            $Value += $A6 * $A6 * $A6 * $A6 * [FastNoiseLite]::GradCoord(
                $ASeed,
                $I + ($XNMask -BAND [FastNoiseLite]::PRIMEX),
                $J + (-BNOT $YNMask -BAND [FastNoiseLite]::PRIMEY),
                $K + ($ZNMask -BAND [FastNoiseLite]::PRIMEZ),
                $X6, $Y6, $Z6
            )
        } Else {
            [Single]$A7  = $XAFlipMask0 + $ZAFlipMask0 + $A0

            If($A7 -GT 0) {
                [Single]$X7 = $X0 - ($XNMask -BOR 1)
                [Single]$Y7 = $Y0
                [Single]$Z7 = $Z0 - ($ZNMask -BOR 1)

                $Value += $A7 * $A7 * $A7 * $A7 * [FastNoiseLite]::GradCoord(
                    $ASeed,
                    $I + (-BNOT $XNMask -BAND [FastNoiseLite]::PRIMEX),
                    $J + ($YNMask -BAND [FastNoiseLite]::PRIMEY),
                    $K + (-BNOT $ZNMask -BAND [FastNoiseLite]::PRIMEZ),
                    $X7, $Y7, $Z7
                )
            }

            [Single]$A8  = $YAFlipMask1 + $A1

            If($A8 -GT 0) {
                [Single]$X8 = $X1
                [Single]$Y8 = ($YNMask -BOR 1) + $Y1
                [Single]$Z8 = $Z1

                $Value += $A8 * $A8 * $A8 * $A8 * [FastNoiseLite]::GradCoord(
                    $Seed2,
                    $I + [FastNoiseLite]::PRIMEX,
                    $J + ($YNMask -BAND ([FastNoiseLite]::PRIMEY -SHL 1)),
                    $K + [FastNoiseLite]::PRIMEZ,
                    $X8, $Y8, $Z8
                )
                $Skip9 = $true
            }
        }

        [Boolean]$SkipD = $false
        [Single]$Aa     = $ZAFlipMask0 + $A0

        If($Aa -GT 0) {
            [Single]$Xa = $X0
            [Single]$Ya = $Y0
            [Single]$Za = $Z0 - ($ZNMask -BOR 1)

            $Value += $Aa * $Aa * $Aa * $Aa * [FastNoiseLite]::GradCoord(
                $ASeed,
                $I + ($XNMask -BAND [FastNoiseLite]::PRIMEX),
                $J + ($YNMask -BAND [FastNoiseLite]::PRIMEY),
                $K + (-BNOT $ZNMask -BAND [FastNoiseLite]::PRIMEZ),
                $Xa, $Ya, $Za
            )
        } Else {
            [Single]$Ab  = $XAFlipMask0 + $YAFlipMask0 + $A0

            If($Ab -GT 0) {
                [Single]$Xb = $X0 - ($XNMask -BOR 1)
                [Single]$Yb = $Y0 - ($YNMask -BOR 1)
                [Single]$Zb = $Z0

                $Value += $Ab * $Ab * $Ab * $Ab * [FastNoiseLite]::GradCoord(
                    $ASeed,
                    $I + (-BNOT $XNMask -BAND [FastNoiseLite]::PRIMEX),
                    $J + (-BNOT $YNMask -BAND [FastNoiseLite]::PRIMEY),
                    $K + ($ZNMask -BAND [FastNoiseLite]::PRIMEZ),
                    $Xb, $Yb, $Zb
                )
            }

            [Single]$Ac  = $ZAFlipMask1 + $A1

            If($Ac -GT 0) {
                [Single]$Xc = $X1
                [Single]$Yc = $Y1
                [Single]$Zc = ($ZNMask -BOR 1) + $Z1

                $Value += $Ac * $Ac * $Ac * $Ac * [FastNoiseLite]::GradCoord(
                    $Seed2,
                    $I + [FastNoiseLite]::PRIMEX,
                    $J + [FastNoiseLite]::PRIMEY,
                    $K + ($ZNMask -BAND ([FastNoiseLite]::PRIMEZ -SHL 1)),
                    $Xc, $Yc, $Zc
                )
                $SkipD = $true
            }
        }

        If(-NOT $Skip5) {
            [Single]$A5  = $YAFlipMask1 + $ZAFlipMask1 + $A1

            If($A5 -GT 0) {
                [Single]$X5 = $X1
                [Single]$Y5 = ($YNMask -BOR 1) + $Y1
                [Single]$Z5 = ($ZNMask -BOR 1) + $Z1

                $Value += $A5 * $A5 * $A5 * $A5 * [FastNoiseLite]::GradCoord(
                    $Seed2,
                    $I + [FastNoiseLite]::PRIMEX,
                    $J + ($YNMask -BAND ([FastNoiseLite]::PRIMEY -SHL 1)),
                    $K + ($ZNMask -BAND ([FastNoiseLite]::PRIMEZ -SHL 1)),
                    $X5, $Y5, $Z5
                )
            }
        }

        If(-NOT $Skip9) {
            [Single]$A9  = $XAFlipMask1 + $ZAFlipMask1 + $A1

            If($A9 -GT 0) {
                [Single]$X9 = ($XNMask -BOR 1) + $X1
                [Single]$Y9 = $Y1
                [Single]$Z9 = ($ZNMask -BOR 1) + $Z1

                $Value += $A9 * $A9 * $A9 * $A9 * [FastNoiseLite]::GradCoord(
                    $Seed2,
                    $I + ($XNMask -BAND [FastNoiseLite]::APRIMEXMULT2),
                    $J + [FastNoiseLite]::PRIMEY,
                    $K + ($ZNMask -BAND ([FastNoiseLite]::PRIMEZ -SHL 1)),
                    $X9, $Y9, $Z9
                )
            }
        }

        If(-NOT $SkipD) {
            [Single]$Ad  = $XAFlipMask1 + $YAFlipMask1 + $A1

            If($Ad -GT 0) {
                [Single]$Xd = ($XNMask -BOR 1) + $X1
                [Single]$Yd = ($YNMask -BOR 1) + $Y1
                [Single]$Zd = $Z1

                $Value += $Ad * $Ad * $Ad * $Ad * [FastNoiseLite]::GradCoord(
                    $Seed2,
                    $I + ($XNMask -BAND ([FastNoiseLite]::PRIMEX -SHL 1)),
                    $J + ($YNMask -BAND ([FastNoiseLite]::PRIMEY -SHL 1)),
                    $K + [FastNoiseLite]::PRIMEZ,
                    $Xd, $Yd, $Zd
                )
            }
        }

        Return $Value * 9.046026385208288
    }

    [Single]SingleCellular(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y
    ) {
        [Int64]$Xr              = [FastNoiseLite]::FastRound($X)
        [Int64]$Yr              = [FastNoiseLite]::FastRound($Y)
        [Int64]$ClosestHash     = 0
        [Int64]$XPrimed         = ($Xr - 1) * [FastNoiseLite]::PRIMEX
        [Int64]$YPrimedBase     = ($Yr - 1) * [FastNoiseLite]::PRIMEY
        [Single]$Distance0      = [Single]::MaxValue
        [Single]$Distance1      = [Single]::MaxValue
        [Single]$CellularJitter = 0.43701595 * $this.CellularJitterModifier

        Switch($this.CellularDistanceFunction) {
            { $_ -EQ [FnlCellularDistanceFunction]::Euclidean -OR $_ -EQ [FnlCellularDistanceFunction]::EuclideanSq } {
                For([Int64]$Xi = $Xr - 1; $Xi -LE $Xr + 1; $Xi++) {
                    [Int64]$YPrimed = $YPrimedBase

                    For([Int64]$Yi = $Yr - 1; $Yi -LE $Yr - 1; $Yi++) {
                        [Int64]$AHash        = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed)
                        [Int64]$Idx          = $AHash -BAND (255 -SHL 1)
                        [Single]$VecX        = ([Single]($Xi - $X) + [FastNoiseLite]::RANDVECS2D[$Idx] * $CellularJitter)
                        [Single]$VecY        = ([Single]($Yi - $Y) + [FastNoiseLite]::RANDVECS2D[$Idx -BOR 1] * $CellularJitter)
                        [Single]$NewDistance = $VecX * $VecX + $VecY * $VecY

                        $Distance1 = [FastNoiseLite]::FastMax([FastNoiseLite]::FastMin($Distance1, $NewDistance), $Distance0)
                        If($NewDistance -LT $Distance0) {
                            $Distance0   = $NewDistance
                            $ClosestHash = $AHash
                        }

                        $YPrimed += [FastNoiseLite]::PRIMEY
                    }

                    $XPrimed += [FastNoiseLite]::PRIMEX
                }

                Break
            }

            ([FnlCellularDistanceFunction]::Manhattan) {
                For([Int64]$Xi = $Xr - 1; $Xi -LE $Xr + 1; $Xi++) {
                    [Int64]$YPrimed = $YPrimedBase

                    For([Int64]$Yi = $Yr - 1; $Yi -LE $Yr + 1; $Yi++) {
                        [Int64]$AHash        = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed)
                        [Int64]$Idx          = $AHash -BAND (255 -SHL 1)
                        [Single]$VecX        = ([Single]($Xi - $X) + [FastNoiseLite]::RANDVECS2D[$Idx] * $CellularJitter)
                        [Single]$VecY        = ([Single]($Yi - $Y) + [FastNoiseLite]::RANDVECS2D[$Idx -BOR 1] * $CellularJitter)
                        [Single]$NewDistance = [FastNoiseLite]::FastAbs($VecX) + [FastNoiseLite]::FastAbs($VecY)

                        $Distance1 = [FastNoiseLite]::FastMax([FastNoiseLite]::FastMin($Distance1, $NewDistance), $Distance0)
                        If($NewDistance -LT $Distance0) {
                            $Distance0   = $NewDistance
                            $ClosestHash = $AHash
                        }

                        $YPrimed += [FastNoiseLite]::PRIMEY
                    }

                    $XPrimed += [FastNoiseLite]::PRIMEX
                }

                Break
            }

            ([FnlCellularDistanceFunction]::Hybrid) {
                For([Int64]$Xi = $Xr - 1; $Xi -LE $Xr + 1; $Xi++) {
                    [Int64]$YPrimed = $YPrimedBase

                    For([Int64]$Yi = $Yr - 1; $Yi -LE $Yr + 1; $Yi++) {
                        [Int64]$AHash        = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed)
                        [Int64]$Idx          = $AHash -BAND (255 -SHL 1)
                        [Single]$VecX        = ([Single]($Xi - $X) + [FastNoiseLite]::RANDVECS2D[$Idx] * $CellularJitter)
                        [Single]$VecY        = ([Single]($Yi - $Y) + [FastNoiseLite]::RANDVECS2D[$Idx -BOR 1] * $CellularJitter)
                        [Single]$NewDistance = ([FastNoiseLite]::FastAbs($VecX) + [FastNoiseLite]::FastAbs($VecY)) + ($VecX * $VecX + $VecY * $VecY)

                        $Distance1 = [FastNoiseLite]::FastMax([FastNoiseLite]::FastMin($Distance0))
                        If($NewDIstance -LT $Distance0) {
                            $Distance0   = $NewDistance
                            $ClosestHash = $AHash
                        }

                        $YPrimed += [FastNoiseLite]::PRIMEY
                    }

                    $XPrimed += [FastNoiseLite]::PRIMEX
                }

                Break
            }

            Default { # SAME AS FIRST CASE
                For([Int64]$Xi = $Xr - 1; $Xi -LE $Xr + 1; $Xi++) {
                    [Int64]$YPrimed = $YPrimedBase

                    For([Int64]$Yi = $Yr - 1; $Yi -LE $Yr - 1; $Yi++) {
                        [Int64]$AHash        = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed)
                        [Int64]$Idx          = $AHash -BAND (255 -SHL 1)
                        [Single]$VecX        = ([Single]($Xi - $X) + [FastNoiseLite]::RANDVECS2D[$Idx] * $CellularJitter)
                        [Single]$VecY        = ([Single]($Yi - $Y) + [FastNoiseLite]::RANDVECS2D[$Idx -BOR 1] * $CellularJitter)
                        [Single]$NewDistance = $VecX * $VecX + $VecY * $VecY

                        $Distance1 = [FastNoiseLite]::FastMax([FastNoiseLite]::FastMin($Distance1, $NewDistance), $Distance0)
                        If($NewDistance -LT $Distance0) {
                            $Distance0   = $NewDistance
                            $ClosestHash = $AHash
                        }

                        $YPrimed += [FastNoiseLite]::PRIMEY
                    }

                    $XPrimed += [FastNoiseLite]::PRIMEX
                }

                Break
            }
        }

        If($this.CellularDistanceFunction -EQ [FnlCellularDistanceFunction]::Euclidean -AND $this.CellularReturnType -GE [FnlCellularReturnType]::Distance) {
            $Distance0 = [FastNoiseLite]::FastSqrt($Distance0)

            If($this.CellularReturnType -GE [FnlCellularReturnType]::Distance2) {
                $Distance1 = [FastNoiseLite]::FastSqrt($Distance1)
            }
        }

        Switch($this.CellularReturnType) {
            ([FnlCellularReturnType]::CellValue) {
                Return $ClosestHash * (1 / [FastNoiseLite]::HASHCALC_MAGIC)
            }

            ([FnlCellularReturnType]::Distance) {
                Return $Distance0 - 1
            }

            ([FnlCellularReturnType]::Distance2) {
                Return $Distance1 - 1
            }

            ([FnlCellularReturnType]::Distance2Add) {
                Return ($Distance1 + $Distance0) * 0.5 - 1
            }

            ([FnlCellularReturnType]::Distance2Sub) {
                Return $Distance1 - $Distance0 - 1
            }

            ([FnlCellularReturnType]::Distance2Mul) {
                Return $Distance1 * $Distance0 * 0.5 - 1
            }

            ([FnlCellularReturnType]::Distance2Div) {
                Return $Distance0 / $Distance1 - 1
            }

            Default {
                Return 0
            }
        }

        Return 0
    }

    [Single]SingleCellular(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y,
        [Single]$Z
    ) {
        [Int64]$Xr              = [FastNoiseLite]::FastRound($X)
        [Int64]$Yr              = [FastNoiseLite]::FastRound($Y)
        [Int64]$Zr              = [FastNoiseLite]::FastRound($Z)
        [Int64]$ClosestHash     = 0
        [Single]$Distance0      = [Single]::MaxValue
        [Single]$Distance1      = [Single]::MaxValue
        [Single]$CellularJitter = 0.39614353 * $this.CellularJitterModifier
        [Int64]$XPrimed         = ($Xr - 1) * [FastNoiseLite]::PRIMEX
        [Int64]$YPrimedBase     = ($Yr - 1) * [FastNoiseLite]::PRIMEY
        [Int64]$ZPrimedBase     = ($Zr - 1) * [FastNoiseLite]::PRIMEZ

        Switch($this.CellularDistanceFunction) {
            { $_ -EQ [FnlCellularDistanceFunction]::Euclidean -OR $_ -EQ [FnlCellularDistanceFunction]::EuclideanSq } {
                For([Int64]$Xi = $Xr - 1; $Xi -LE $Xr; $Xi++) {
                    [Int64]$YPrimed = $YPrimedBase

                    For([Int64]$Yi = $Yr - 1; $Yi -LE $Yr; $Yi++) {
                        [Int64]$ZPrimed = $ZPrimedBase

                        For([Int64]$Zi = $Zr - 1; $Zi -LE $Zr; $Zi++) {
                            [Int64]$AHash        = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed, $ZPrimed)
                            [Int64]$Idx          = $AHash -BAND (255 -SHL 2)
                            [Single]$VecX        = ([Single]($Xi - $X) + [FastNoiseLite]::RANDVECS3D[$Idx] * $CellularJitter)
                            [Single]$VecY        = ([Single]($Yi - $Y) + [FastNoiseLite]::RANDVECS3D[$Idx -BOR 1] * $CellularJitter)
                            [Single]$VecZ        = ([Single]($Zi - $Z) + [FastNoiseLite]::RANDVECS3D[$Idx -BOR 2] * $CellularJitter)
                            [Single]$NewDistance = $VecX * $VecX + $VecY * $VecY + $VecZ * $VecZ

                            $Distance1 = [FastNoiseLite]::FastMax([FastNoiseLite]::FastMin($Distance1, $NewDistance), $Distance0)
                            If($NewDistance -LT $Distance0) {
                                $Distance0   = $NewDistance
                                $ClosestHash = $AHash
                            }

                            $ZPrimed += [FastNoiseLite]::PRIMEZ
                        }

                        $YPrimed += [FastNoiseLite]::PRIMEY
                    }

                    $XPrimed += [FastNoiseLite]::PRIMEX
                }

                Break
            }

            ([FnlCellularDistanceFunction]::Manhattan) {
                For([Int64]$Xi = $Xr - 1; $Xi -LE $Xr; $Xi++) {
                    [Int64]$YPrimed = $YPrimedBase

                    For([Int64]$Yi = $Yr - 1; $Yi -LE $Yr; $Yi++) {
                        [Int64]$ZPrimed = $ZPrimedBase

                        For([Int64]$Zi = $Zr - 1; $Zi -LE $Zr + 1; $Zi++) {
                            [Int64]$AHash        = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed, $ZPrimed)
                            [Int64]$Idx          = $AHash -BAND (255 -SHL 2)
                            [Single]$VecX        = ([Single]($Xi - $X) + [FastNoiseLite]::RANDVECS3D[$Idx] * $CellularJitter)
                            [Single]$VecY        = ([Single]($Yi - $Y) + [FastNoiseLite]::RANDVECS3D[$Idx -BOR 1] * $CellularJitter)
                            [Single]$VecZ        = ([Single]($Zi - $Z) + [FastNoiseLite]::RANDVECS3D[$Idx -BOR 2] * $CellularJitter)
                            [Single]$NewDistance = [FastNoiseLite]::FastAbs($VecX) + [FastNoiseLite]::FastAbs($VecY) + [FastNoiseLite]::FastAbs($VecZ)

                            $Distance1 = [FastNoiseLite]::FastMax([FastNoiseLite]::FastMin($Distance1, $NewDistance), $Distance0)
                            If($NewDistance -LT $Distance0) {
                                $Distance0   = $NewDistance
                                $ClosestHash = $AHash
                            }

                            $ZPrimed += [FastNoiseLite]::PRIMEZ
                        }

                        $YPrimed += [FastNoiseLite]::PRIMEY
                    }

                    $XPrimed += [FastNoiseLite]::PRIMEX
                }

                Break
            }

            ([FnlCellularDistanceFunction]::Hybrid) {
                For([Int64]$Xi = $Xr - 1; $Xi -LE $Xr + 1; $Xi++) {
                    [Int64]$YPrimed = $YPrimedBase

                    For([Int64]$Yi = $Yr - 1; $Yi -LE $Yr + 1; $Yi++) {
                        [Int64]$ZPrimed = $ZPrimedBase

                        For([Int64]$Zi = $Zr - 1; $Zi -LE $Zr + 1; $Zi++) {
                            [Int64]$AHash        = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed, $ZPrimed)
                            [Int64]$Idx          = $AHash -BAND (255 -SHL 2)
                            [Single]$VecX        = ([Single]($Xi - $X) + [FastNoiseLite]::RANDVECS3D[$Idx] * $CellularJitter)
                            [Single]$VecY        = ([Single]($Yi - $Y) + [FastNoiseLite]::RANDVECS3D[$Idx -BOR 1] * $CellularJitter)
                            [Single]$VecZ        = ([Single]($Zi - $Z) + [FastNoiseLite]::RANDVECS3D[$Idx -BOR 2] * $CellularJitter)
                            [Single]$NewDistance = (
                                [FastNoiseLite]::FastAbs($VecX) +
                                [FastNoiseLite]::FastAbs($VecY) +
                                [FastNoiseLite]::FastAbs($VecZ)
                            ) + (
                                $VecX * $VecX +
                                $VecY * $VecY +
                                $VecZ * $VecZ
                            )

                            $Distance1 = [FastNoiseLite]::FastMax([FastNoiseLite]::FastMin($Distance1, $NewDistance), $Distance0)
                            If($NewDistance -LT $Distance0) {
                                $Distance0   = $NewDistance
                                $ClosestHash = $AHash
                            }

                            $Zprimed += [FastNoiseLite]::PRIMEZ
                        }

                        $YPrimed += [FastNoiseLite]::PRIMEY
                    }

                    $XPrimed += [FastNoiseLite]::PRIMEX
                }

                Break
            }

            Default {
                Break
            }
        }

        If($this.CellularDistanceFunction -EQ [FnlCellularDistanceFunction]::Euclidean -AND $this.CellularReturnType -GE [FnlCellularReturnType]::Distance) {
            $Distance0 = [FastNoiseLite]::FastSqrt($Distance0)

            If($this.CellularReturnType -GE [FnlCellularReturnType].Distance2) {
                $Distance1 = [FastNoiseLite]::FastSqrt($Distance1)
            }
        }

        Switch($this.CellularReturnType) {
            ([FnlCellularReturnType]::CellValue) {
                Return $ClosestHash * (1 / [FastNoiseLite]::HASHCALC_MAGIC)
            }

            ([FnlCellularReturnType]::Distance) {
                Return $Distance0 - 1
            }

            ([FnlCellularReturnType]::Distance2) {
                Return $Distance1 - 1
            }

            ([FnlCellularReturnType]::Distance2Add) {
                Return ($Distance1 + $Distance0) * 0.5 - 1
            }

            ([FnlCellularReturnType]::Distance2Sub) {
                Return $Distance1 - $Distance0 - 1
            }

            ([FnlCellularReturnType]::Distance2Mul) {
                Return $Distance1 * $Distance0 * 0.5 - 1
            }

            ([FnlCellularReturnType]::Distance2Div) {
                Return $Distance0 / $Distance1 - 1
            }

            Default {
                Return 0
            }
        }

        Return 0
    }

    [Single]SinglePerlin(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y
    ) {
        [Int64]$X0   = [FastNoiseLite]::FastFloor($X)
        [Int64]$Y0   = [FastNoiseLite]::FastFloor($Y)
        [Single]$Xd0 = ([Single]($X - $X0))
        [Single]$Yd0 = ([Single]($Y - $Y0))
        [Single]$Xd1 = $Xd0 - 1
        [Single]$Yd1 = $Yd0 - 1
        [Single]$Xs  = [FastNoiseLite]::InterpQuintic($Xd0)
        [Single]$Ys  = [FastNoiseLite]::InterpQuintic($Yd0)

        $X0 *= [FastNoiseLite]::PRIMEX
        $Y0 *= [FastNoiseLite]::PRIMEY

        [Int64]$X1 = $X0 + [FastNoiseLite]::PRIMEX
        [Int64]$Y1 = $Y0 + [FastNoiseLite]::PRIMEY

        [Single]$Xf0 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::GradCoord($ASeed, $X0, $Y0, $Xd0, $Yd0),
            [FastNoiseLite]::GradCoord($ASeed, $X1, $Y0, $Xd1, $Yd0),
            $Xs
        )
        [Single]$Xf1 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::GradCoord($ASeed, $X0, $Y1, $Xd0, $Yd1),
            [FastNoiseLite]::GradCoord($ASeed, $X1, $Y1, $Xd1, $Yd1),
            $Xs
        )

        Return [FastNoiseLite]::Lerp($Xf0, $Xf1, $Ys) * 1.4247691104677813
    }

    [Single]SinglePerlin(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y,
        [Single]$Z
    ) {
        [Int64]$X0   = [FastNoiseLite]::FastFloor($X)
        [Int64]$Y0   = [FastNoiseLite]::FastFloor($Y)
        [Int64]$Z0   = [FastNoiseLite]::FastFloor($Z)
        [Single]$Xd0 = ([Single]($X - $X0))
        [Single]$Yd0 = ([Single]($Y - $Y0))
        [Single]$Zd0 = ([Single]($Z - $Z0))
        [Single]$Xd1 = $Xd0 - 1
        [Single]$Yd1 = $Yd0 - 1
        [Single]$Zd1 = $Zd0 - 1
        [Single]$Xs  = [FastNoiseLite]::InterpQuintic($Xd0)
        [Single]$Ys  = [FastNoiseLite]::InterpQuintic($Yd0)
        [Single]$Zs  = [FastNoiseLite]::InterpQuintic($Zd0)

        $X0 *= [FastNoiseLite]::PRIMEX
        $Y0 *= [FastNoiseLite]::PRIMEY
        $Z0 *= [FastNoiseLite]::PRIMEZ

        [Int64]$X1 = $X0 + [FastNoiseLite]::PRIMEX
        [Int64]$Y1 = $Y0 + [FastNoiseLite]::PRIMEY
        [Int64]$Z1 = $Z0 + [FastNoiseLite]::PRIMEZ

        [Single]$Xf00 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::GradCoord(
                $ASeed,
                $X0, $Y0, $Z0,
                $Xd0, $Yd0, $Zd0
            ),
            [FastNoiseLite]::GradCoord(
                $ASeed,
                $X1, $Y0, $Z0,
                $Xd1, $Yd0, $Zd0
            ),
            $Xs
        )
        [Single]$Xf10 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::GradCoord(
                $ASeed,
                $X0, $Y1, $Z0,
                $Xd0, $Yd1, $Zd0
            ),
            [FastNoiseLite]::GradCoord(
                $ASeed,
                $X1, $Y1, $Z0,
                $Xd1, $Yd1, $Zd0
            ),
            $Xs
        )
        [Single]$Xf01 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::GradCoord(
                $ASeed,
                $X0, $Y0, $Z1,
                $Xd0, $Yd0, $Zd1
            ),
            [FastNoiseLite]::GradCoord(
                $ASeed,
                $X1, $Y0, $Z1,
                $Xd1, $Yd0, $Zd1
            ),
            $Xs
        )
        [Single]$Xf11 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::GradCoord(
                $ASeed,
                $X0, $Y1, $Z1,
                $Xd0, $Yd1, $Zd1
            ),
            [FastNoiseLite]::GradCoord(
                $ASeed,
                $X1, $Y1, $Z1,
                $Xd1, $Yd1, $Zd1
            ),
            $Xs
        )

        [Single]$Yf0 = [FastNoiseLite]::Lerp($Xf00, $Xf10, $Ys)
        [Single]$Yf1 = [FastNoiseLite]::Lerp($Xf01, $Xf11, $Ys)

        Return [FastNoiseLite]::Lerp($Yf0, $Yf1, $Zs) * 0.964921414852142333984375
    }

    [Single]SingleValueCubic(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y
    ) {
        [Int64]$X1  = [FastNoiseLite]::FastFloor($X)
        [Int64]$Y1  = [FastNoiseLite]::FastFloor($Y)
        [Single]$Xs = ([Single]($X - $X1))
        [Single]$Ys = ([Single]($Y - $Y1))

        $X1 *= [FastNoiseLite]::PRIMEX
        $Y1 *= [FastNoiseLite]::PRIMEY

        [Int64]$X0 = $X1 - [FastNoiseLite]::PRIMEX
        [Int64]$Y0 = $Y1 - [FastNoiseLite]::PRIMEY
        [Int64]$X2 = $X1 + [FastNoiseLite]::PRIMEX
        [Int64]$Y2 = $Y1 + [FastNoiseLite]::PRIMEY
        
        # THE FOLLOWING TWO STATEMENTS ORIGINALLY USED UNCHECKED STATEMENTS IN THE ARITHMETIC.
        # POWERSHELL DOESN'T REALLY OFFER THIS, SO A FIXED CEILING COMPENSATING CONTROL IS
        # USED (WHICH WOULD LIKELY BE THE SAME RESULT IN C# GIVEN THE BEHAVIOR OF THE UNCHECKED OPERATION,
        # SAVE THE LACK OF A THROWN EXCEPTION).
        #
        # ANOTHER SANITY CHECK HERE IS TO USE INT64 RATHER THAN INT. INT MASKS TO INT32, AND AN OVERFLOW WILL THROW
        # AN EXCEPTION IN POWERSHELL (SYSTEM.OVERFLOWEXCEPTION).
        [Int64]$X3 = $X1 + (([FastNoiseLite]::APRIMEXMULT2 -GT [Int64]::MaxValue) ? [Int64]::MaxValue : [FastNoiseLite]::APRIMEXMULT2)
        [Int64]$Y3 = $Y1 + (([FastNoiseLite]::APRIMEYMULT2 -GT [Int64]::MaxValue) ? [Int64]::MaxValue : [FastNoiseLite]::APRIMEYMULT2)

        Return [FastNoiseLite]::CubicLerp(
            [FastNoiseLite]::CubicLerp(
                [FastNoiseLite]::ValCoord($ASeed, $X0, $Y0),
                [FastNoiseLite]::ValCoord($ASeed, $X1, $Y0),
                [FastNoiseLite]::ValCoord($ASeed, $X2, $Y0),
                [FastNoiseLite]::ValCoord($ASeed, $X3, $Y0),
                $Xs
            ),
            [FastNoiseLite]::CubicLerp(
                [FastNoiseLite]::ValCoord($ASeed, $X0, $Y1),
                [FastNoiseLite]::ValCoord($ASeed, $X1, $Y1),
                [FastNoiseLite]::ValCoord($ASeed, $X2, $Y1),
                [FastNoiseLite]::ValCoord($ASeed, $X3, $Y1),
                $Xs
            ),
            [FastNoiseLite]::CubicLerp(
                [FastNoiseLite]::ValCoord($ASeed, $X0, $Y2),
                [FastNoiseLite]::ValCoord($ASeed, $X1, $Y2),
                [FastNoiseLite]::ValCoord($ASeed, $X2, $Y2),
                [FastNoiseLite]::ValCoord($ASeed, $X3, $Y2),
                $Xs
            ),
            [FastNoiseLite]::CubicLerp(
                [FastNoiseLite]::ValCoord($ASeed, $X0, $Y3),
                [FastNoiseLite]::ValCoord($ASeed, $X1, $Y3),
                [FastNoiseLite]::ValCoord($ASeed, $X2, $Y3),
                [FastNoiseLite]::ValCoord($ASeed, $X3, $Y3),
                $Xs
            ),
            $Ys
        ) * (1 / (1.5 * 1.5))
    }

    [Single]SingleValueCubic(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y,
        [Single]$Z
    ) {
        [Int64]$X1  = [FastNoiseLite]::FastFloor($X)
        [Int64]$Y1  = [FastNoiseLite]::FastFloor($Y)
        [Int64]$Z1  = [FastNoiseLite]::FastFloor($Z)
        [Single]$Xs = ([Single]($X - $X1))
        [Single]$Ys = ([Single]($Y - $Y1))
        [Single]$Zs = ([Single]($Z - $Z1))

        $X1 *= [FastNoiseLite]::PRIMEX
        $Y1 *= [FastNoiseLite]::PRIMEY
        $Z1 *= [FastNoiseLite]::PRIMEZ

        [Int64]$X0 = $X1 - [FastNoiseLite]::PRIMEX
        [Int64]$Y0 = $Y1 - [FastNoiseLite]::PRIMEY
        [Int64]$Z0 = $Z1 - [FastNoiseLite]::PRIMEZ
        [Int64]$X2 = $X1 + [FastNoiseLite]::PRIMEX
        [Int64]$Y2 = $Y1 + [FastNoiseLite]::PRIMEY
        [Int64]$Z2 = $Z1 + [FastNoiseLite]::PRIMEZ

        # THE FOLLOWING THREE STATEMENTS ORIGINALLY USED UNCHECKED STATEMENTS IN THE ARITHMETIC.
        # POWERSHELL DOESN'T REALLY OFFER THIS, SO A FIXED CEILING COMPENSATING CONTROL IS
        # USED (WHICH WOULD LIKELY BE THE SAME RESULT IN C# GIVEN THE BEHAVIOR OF THE UNCHECKED OPERATION,
        # SAVE THE LACK OF A THROWN EXCEPTION).
        #
        # ANOTHER SANITY CHECK HERE IS TO USE INT64 RATHER THAN INT. INT MASKS TO INT32, AND AN OVERFLOW WILL THROW
        # AN EXCEPTION IN POWERSHELL (SYSTEM.OVERFLOWEXCEPTION).
        [Int64]$X3 = $X1 + (([FastNoiseLite]::APRIMEXMULT2 -GT [Int64]::MaxValue) ? [Int64]::MaxValue : [FastNoiseLite]::APRIMEXMULT2)
        [Int64]$Y3 = $Y1 + (([FastNoiseLite]::APRIMEYMULT2 -GT [Int64]::MaxValue) ? [Int64]::MaxValue : [FastNoiseLite]::APRIMEYMULT2)
        [Int64]$Z3 = $Z1 + (([FastNoiseLite]::APRIMEZMULT2 -GT [Int64]::MaxValue) ? [Int64]::MaxValue : [FastNoiseLite]::APRIMEZMULT2)

        Return [FastNoiseLite]::CubicLerp(
            [FastNoiseLite]::CubicLerp(
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y0, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y0, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y0, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y0, $Z0),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y1, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y1, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y1, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y1, $Z0),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y2, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y2, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y2, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y2, $Z0),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y3, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y3, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y3, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y3, $Z0),
                    $Xs
                ),
                $Ys
            ),
            [FastNoiseLite]::CubicLerp(
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y0, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y0, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y0, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y0, $Z1),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y1, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y1, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y1, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y1, $Z1),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y2, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y2, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y2, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y2, $Z1),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y3, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y3, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y3, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y3, $Z1),
                    $Xs
                ),
                $Ys
            ),
            [FastNoiseLite]::CubicLerp(
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y0, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y0, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y0, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y0, $Z2),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y1, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y1, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y1, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y1, $Z2),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y2, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y2, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y2, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y2, $Z2),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y3, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y3, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y3, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y3, $Z2),
                    $Xs
                ),
                $Ys
            ),
            [FastNoiseLite]::CubicLerp(
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y0, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y0, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y0, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y0, $Z3),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y1, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y1, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y1, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y1, $Z3),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y2, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y2, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y2, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y2, $Z3),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y3, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y3, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y3, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y3, $Z3),
                    $Xs
                ),
                $Ys
            ),
            $Zs
        ) * (1 / (1.5 * 1.5 * 1.5))
    }

    [Single]SingleValue(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y
    ) {
        [Int64]$X0  = [FastNoiseLite]::FastFloor($X)
        [Int64]$Y0  = [FastNoiseLite]::FastFloor($Y)
        [Single]$Xs = [FastNoiseLite]::InterpHermite(([Single]($X - $X0)))
        [Single]$Ys = [FastNoiseLite]::InterpHermite(([Single]($Y - $Y0)))

        $X0 *= [FastNoiseLite]::PRIMEX
        $Y0 *= [FastNoiseLite]::PRIMEY

        [Int64]$X1 = $X0 + [FastNoiseLite]::PRIMEX
        [Int64]$Y1 = $Y0 + [FastNoiseLite]::PRIMEY

        [Single]$Xf0 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::ValCoord($ASeed, $X0, $Y0),
            [FastNoiseLite]::ValCoord($ASeed, $X1, $Y0),
            $Xs
        )
        [Single]$Xf1 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::ValCoord($ASeed, $X0, $Y1),
            [FastNoiseLite]::ValCoord($ASeed, $X1, $Y1),
            $Xs
        )

        Return [FastNoiseLite]::Lerp($Xf0, $Xf1, $Ys)
    }

    [Single]SingleValue(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y,
        [Single]$Z
    ) {
        [Int64]$X0  = [FastNoiseLite]::FastFloor($X)
        [Int64]$Y0  = [FastNoiseLite]::FastFloor($Y)
        [Int64]$Z0  = [FastNoiseLite]::FastFloor($Z)
        [Single]$Xs = [FastNoiseLite]::InterpHermite(([Single]($X - $X0)))
        [Single]$Ys = [FastNoiseLite]::InterpHermite(([Single]($Y - $Y0)))
        [Single]$Zs = [FastNoiseLite]::InterpHermite(([Single]($Z - $Z0)))

        $X0 *= [FastNoiseLite]::PRIMEX
        $Y0 *= [FastNoiseLite]::PRIMEY
        $Z0 *= [FastNoiseLite]::PRIMEZ

        [Int64]$X1 = $X0 + [FastNoiseLite]::PRIMEX
        [Int64]$Y1 = $Y0 + [FastNoiseLite]::PRIMEY
        [Int64]$Z1 = $Z0 + [FastNoiseLite]::PRIMEZ

        [Single]$Xf00 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::ValCoord($ASeed, $X0, $Y0, $Z0),
            [FastNoiseLite]::ValCoord($ASeed, $X1, $Y0, $Z0),
            $Xs
        )
        [Single]$Xf10 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::ValCoord($ASeed, $X0, $Y1, $Z0),
            [FastNoiseLite]::ValCoord($ASeed, $X1, $Y1, $Z0),
            $Xs
        )
        [Single]$Xf01 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::ValCoord($ASeed, $X0, $Y0, $Z1),
            [FastNoiseLite]::ValCoord($ASeed, $X1, $Y0, $Z1),
            $Xs
        )
        [Single]$Xf11 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::ValCoord($ASeed, $X0, $Y1, $Z1),
            [FastNoiseLite]::ValCoord($ASeed, $X1, $Y1, $Z1),
            $Xs
        )

        [Single]$Yf0 = [FastNoiseLite]::Lerp($Xf00, $Xf10, $Ys)
        [Single]$Yf1 = [FastNoiseLite]::Lerp($Xf01, $Xf11, $Ys)

        Return [FastNoiseLite]::Lerp($Yf0, $Yf1, $Zs)
    }

    [Void]DoSingleDomainWarp(
        [Int64]$ASeed,
        [Single]$Amp,
        [Single]$Freq,
        [Single]$X,
        [Single]$Y,
        [Ref]$Xr,
        [Ref]$Yr

    ) {
        Switch($this.DomainWarpType) {
            ([FnlDomainWarpType]::OpenSimplex2) {
                $this.SingleDomainWarpOpenSimplex2Gradient($ASeed, $Amp * [FastNoiseLite]::SIMPLEXVALMODA_MAGIC, $Freq, $X, $Y, $Xr, $Yr, $false)

                Break
            }

            ([FnlDomainWarpType]::OpenSimplex2Reduced) {
                $this.SingleDomainWarpSimplexGradient($ASeed, $Amp * 16.0, $Freq, $X, $Y, $Xr, $Yr, $true)

                Break
            }

            ([FnlDomainWarpType]::BasicGrid) {
                $this.SingleDomainWarpBasicGrid($ASeed, $Amp, $Freq, $X, $Y, $Xr, $Yr)

                Break
            }

            Default {
                Break
            }
        }
    }

    [Void]DoSingleDomainWarp(
        [Int64]$ASeed,
        [Single]$Amp,
        [Single]$Freq,
        [Single]$X,
        [Single]$Y,
        [Single]$Z,
        [Ref]$Xr,
        [Ref]$Yr,
        [Ref]$Zr
    ) {
        Switch($this.DomainWarpType) {
            ([FnlDomainWarpType]::OpenSimplex2) {
                $this.SingleDomainWarpOpenSimplex2Gradient($ASeed, $Amp * [FastNoiseLite]::SIMPLEXVALMODA_MAGIC, $Freq, $X, $Y, $Z, $Xr, $Yr, $Zr, $false)

                Break
            }

            ([FnlDomainWarpType]::OpenSimplex2Reduced) {
                $this.SingleDomainWarpOpenSimplex2Gradient($ASeed, $Amp * 7.71604938271605, $Freq, $X, $Y, $Z, $Xr, $Yr, $Zr, $true)

                Break
            }

            ([FnlDomainWarpType]::BasicGrid) {
                $this.SingleDomainWarpBasicGrid($ASeed, $Amp, $Freq, $X, $Y, $Z, $Xr, $Yr, $Zr)

                Break
            }

            Default {
                Break
            }
        }
    }

    [Void]DomainWarpSingle(
        [Ref]$X,
        [Ref]$Y
    ) {
        [Int64]$ASeed = $this.Seed
        [Single]$Amp  = $this.DomainWarpAmp * $this.FractalBounding
        [Single]$Freq = $this.Frequency
        [Single]$Xs   = $X.Value
        [Single]$Ys   = $Y.Value

        $this.TransformDomainWarpCoordinate(([Ref]$Xs), ([Ref]$Ys))
        $this.DoSingleDomainWarp($ASeed, $Amp, $Freq, $Xs, $Ys, $X, $Y)
    }

    [Void]DomainWarpSingle(
        [Ref]$X,
        [Ref]$Y,
        [Ref]$Z
    ) {
        [Int64]$ASeed = $this.Seed
        [Single]$Amp  = $this.DomainWarpAmp * $this.FractalBounding
        [Single]$Freq = $this.Frequency
        [Single]$Xs   = $X.Value
        [Single]$Ys   = $Y.Value
        [Single]$Zs   = $Z.Value

        $this.TransformDomainWarpCoordinate(([Ref]$Xs), ([Ref]$Ys), ([Ref]$Zs))
        $this.DoSingleDomainWarp($ASeed, $Amp, $Freq, $Xs, $Ys, $Zs, $X, $Y, $Z)
    }

    [Void]DomainWarpFractalProgressive(
        [Ref]$X,
        [Ref]$Y
    ) {
        [Int64]$Aseed = $this.Seed
        [Single]$Amp  = $this.DomainWarpAmp * $this.FractalBounding
        [Single]$Freq = $this.Frequency

        For([Int64]$I = 0; $I -LT $this.Octaves; $I++) {
            [Single]$Xs = $X.Value
            [Single]$Ys = $Y.Value

            $this.TransformDomainWarpCoordinate(([Ref]$Xs), ([Ref]$Ys))
            $this.DoSingleDomainWarp($ASeed, $Amp, $Freq, $Xs, $Ys, $X, $Y)

            $ASeed++
            $Amp  *= $this.Gain
            $Freq *= $this.Lacunarity
        }
    }

    [Void]DomainWarpFractalProgressive(
        [Ref]$X,
        [Ref]$Y,
        [Ref]$Z
    ) {
        [Int64]$ASeed = $this.Seed
        [Single]$Amp  = $this.DomainWarpAmp * $this.FractalBounding
        [Single]$Freq = $this.Frequency

        For([Int64]$I = 0; $I -LT $this.Octaves; $I++) {
            [Single]$Xs = $X.Value
            [Single]$Ys = $Y.Value
            [Single]$Zs = $Z.Value

            $this.TransformDomainWarpCoordinate(([Ref]$Xs), ([Ref]$Ys), ([Ref]$Zs))
            $this.DoSingleDomainWarp($ASeed, $Amp, $Freq, $Xs, $Ys, $Zs, $X, $Y, $Z)

            $ASeed++
            $Amp  *= $this.Gain
            $Freq *= $this.Lacunarity
        }
    }

    [Void]DomainWarpFractalIndependent(
        [Ref]$X,
        [Ref]$Y
    ) {
        [Int64]$ASeed = $this.Seed
        [Single]$Xs   = $X.Value
        [Single]$Ys   = $Y.Value
        [Single]$Amp  = $this.DomainWarpAmp * $this.FractalBounding
        [Single]$Freq = $this.Frequency

        $this.TransformDomainWarpCoordinate(([Ref]$Xs), ([Ref]$Ys))

        For([Int64]$I = 0; $I -LT $this.Octaves; $I++) {
            $this.DoSingleDomainWarp($ASeed, $Amp, $Freq, $Xs, $Ys, $X, $Y)

            $ASeed++
            $Amp  *= $this.Gain
            $Freq *= $this.Lacunarity
        }
    }

    [Void]DomainWarpFractalIndependent(
        [Ref]$X,
        [Ref]$Y,
        [Ref]$Z
    ) {
        [Int64]$ASeed = $this.Seed
        [Single]$Xs   = $X.Value
        [Single]$Ys   = $Y.Value
        [Single]$Zs   = $Z.Value
        [Single]$Amp  = $this.DomainWarpAmp * $this.FractalBounding
        [Single]$Freq = $this.Frequency

        $this.TransformDomainWarpCoordinate(([Ref]$Xs), ([Ref]$Ys), ([Ref]$Zs))

        For([Int64]$I = 0; $I -LT $this.Octaves; $I++) {
            $this.DoSingleDomainWarp($ASeed, $Amp, $Freq, $Xs, $Ys, $Zs, $X, $Y, $Z)

            $ASeed++
            $Amp  *= $this.Gain
            $Freq *= $this.Lacunarity
        }
    }

    [Void]SingleDomainWarpBasicGrid(
        [Int64]$ASeed,
        [Single]$WarpAmp,
        [Single]$AFrequency,
        [Single]$X,
        [Single]$Y,
        [Ref]$Xr,
        [Ref]$Yr
    ) {
        [Single]$Xf = $X * $AFrequency
        [Single]$Yf = $Y * $AFrequency
        [Int64]$X0  = [FastNoiseLite]::FastFloor($Xf)
        [Int64]$Y0  = [FastNoiseLite]::FastFloor($Yf)
        [Single]$Xs = [FastNoiseLite]::InterpHermite(([Single]($Xf - $X0)))
        [Single]$Ys = [FastNoiseLite]::InterpHermite(([Single]($Yf - $Y0)))

        $X0 *= [FastNoiseLite]::PRIMEX
        $Y0 *= [FastNoiseLite]::PRIMEY

        [Int64]$X1    = $X0 + [FastNoiseLite]::PRIMEX
        [Int64]$Y1    = $Y0 + [FastNoiseLite]::PRIMEY
        [Int64]$Hash0 = [FastNoiseLite]::Hash($ASeed, $X0, $Y0) -BAND (255 -SHL 1)
        [Int64]$Hash1 = [FastNoiseLite]::Hash($ASeed, $X1, $Y1) -BAND (255 -SHL 1)

        [Single]$Lx0x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS2D[$Hash0],
            [FastNoiseLite]::RANDVECS2D[$Hash1],
            $Xs
        )
        [Single]$Ly0x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS2D[$Hash0 -BOR 1],
            [FastNoiseLite]::RANDVECS2D[$Hash1 -BOR 1],
            $Xs
        )

        $Hash0 = [FastNoiseLite]::Hash($ASeed, $X0, $Y1) -BAND (255 -SHL 1)
        $Hash1 = [FastNoiseLite]::Hash($Aseed, $X1, $Y1) -BAND (255 -SHL 1)

        [Single]$Lx1x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS2D[$Hash0],
            [FastNoiseLite]::RANDVECS2D[$Hash1],
            $Xs
        )
        [Single]$Ly1x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS2D[$Hash0 -BOR 1],
            [FastNoiseLite]::RANDVECS2D[$Hash1 -BOR 1],
            $Xs
        )

        $Xr.Value += [FastNoiseLite]::Lerp($Lx0x, $Lx1x, $Ys) * $WarpAmp
        $Yr.Value += [FastNoiseLite]::Lerp($Ly0x, $Ly1x, $Ys) * $WarpAmp
    }

    [Void]SingleDomainWarpBasicGrid(
        [Int64]$ASeed,
        [Single]$WarpAmp,
        [Single]$AFrequency,
        [Single]$X,
        [Single]$Y,
        [Single]$Z,
        [Ref]$Xr,
        [Ref]$Yr,
        [Ref]$Zr
    ) {
        [Single]$Xf = $X * $AFrequency
        [Single]$Yf = $Y * $AFrequency
        [Single]$Zf = $Z * $AFrequency
        [Int64]$X0  = [FastNoiseLite]::FastFloor($Xf)
        [Int64]$Y0  = [FastNoiseLite]::FastFloor($Yf)
        [Int64]$Z0  = [FastNoiseLite]::FastFloor($Zf)
        [Single]$Xs = [FastNoiseLite]::InterpHermite(([Single]($Xf - $X0)))
        [Single]$Ys = [FastNoiseLite]::InterpHermite(([Single]($Yf - $Y0)))
        [Single]$Zs = [FastNoiseLite]::InterpHermite(([Single]($Zf - $Z0)))

        $X0 *= [FastNoiseLite]::PRIMEX
        $Y0 *= [FastNoiseLite]::PRIMEY
        $Z0 *= [FastNoiseLite]::PRIMEZ

        [Int64]$X1    = $X0 + [FastNoiseLite]::PRIMEX
        [Int64]$Y1    = $Y0 + [FastNoiseLite]::PRIMEY
        [Int64]$Z1    = $Z0 + [FastNoiseLite]::PRIMEZ
        [Int64]$Hash0 = [FastNoiseLite]::Hash($ASeed, $X0, $Y0, $Z0) -BAND (255 -SHL 2)
        [Int64]$Hash1 = [FastNoiseLite]::Hash($ASeed, $X1, $Y0, $Z0) -BAND (255 -SHL 2)

        [Single]$Lx0x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0],
            [FastNoiseLite]::RANDVECS3D[$Hash1],
            $Xs
        )
        [Single]$Ly0x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0 -BOR 1],
            [FastNoiseLite]::RANDVECS3D[$Hash1 -BOR 1],
            $Xs
        )
        [Single]$Lz0x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0 -BOR 2],
            [FastNoiseLite]::RANDVECS3D[$Hash1 -BOR 2],
            $Xs
        )

        $Hash0 = [FastNoiseLite]::Hash($ASeed, $X0, $Y1, $Z0) -BAND (255 -SHL 2)
        $Hash1 = [FastNoiseLite]::Hash($Aseed, $X1, $Y1, $Z0) -BAND (255 -SHL 2)

        [Single]$Lx1x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0],
            [FastNoiseLite]::RANDVECS3D[$Hash1],
            $Xs
        )
        [Single]$Ly1x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0 -BOR 1],
            [FastNoiseLite]::RANDVECS3D[$Hash1 -BOR 1],
            $Xs
        )
        [Single]$Lz1x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0 -BOR 2],
            [FastNoiseLite]::RANDVECS3D[$Hash1 -BOR 2],
            $Xs
        )

        [Single]$Lx0y = [FastNoiseLite]::Lerp($Lx0x, $Lx1x, $Ys)
        [Single]$Ly0y = [FastNoiseLite]::Lerp($Ly0x, $Ly1x, $Ys)
        [Single]$Lz0y = [FastNoiseLite]::Lerp($Lz0x, $Lz1x, $Ys)

        $Hash0 = [FastNoiseLite]::Hash($ASeed, $X0, $Y0, $Z1) -BAND (255 -SHL 2)
        $Hash1 = [FastNoiseLite]::Hash($ASeed, $X1, $Y0, $Z1) -BAND (255 -SHL 2)

        $Lx0x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0],
            [FastNoiseLite]::RANDVECS3D[$Hash1],
            $Xs
        )
        $Ly0x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0 -BOR 1],
            [FastNoiseLite]::RANDVECS3D[$Hash1 -BOR 1],
            $Xs
        )
        $Lz0x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0 -BOR 2],
            [FastNoiseLite]::RANDVECS3D[$Hash1 -BOR 2],
            $Xs
        )

        $Hash0 = [FastNoiseLite]::Hash($ASeed, $X0, $Y1, $Z1) -BAND (255 -SHL 2)
        $Hash1 = [FastNoiseLite]::Hash($ASeed, $X1, $Y1, $Z1) -BAND (255 -SHL 2)

        $Lx1x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0],
            [FastNoiseLite]::RANDVECS3D[$Hash1],
            $Xs
        )
        $Ly1x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0 -BOR 1],
            [FastNoiseLite]::RANDVECS3D[$Hash0 -BOR 1],
            $Xs
        )
        $Lz1x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0 -BOR 2],
            [FastNoiseLite]::RANDVECS3D[$Hash1 -BOR 2],
            $Xs
        )

        $Xr.Value += [FastNoiseLite]::Lerp(
            $Lx0y,
            [FastNoiseLite]::Lerp(
                $Lx0x,
                $Lx1x,
                $Ys
            ),
            $Zs
        ) * $WarpAmp
        $Yr.Value += [FastNoiseLite]::Lerp(
            $Ly0y,
            [FastNoiseLite]::Lerp(
                $Ly0x,
                $Ly1x,
                $Ys
            ),
            $Zs
        ) * $WarpAmp
        $Zr.Value += [FastNoiseLite]::Lerp(
            $Lz0y,
            [FastNoiseLite]::Lerp(
                $Ly0x,
                $Lz1x,
                $Ys
            ),
            $Zs
        ) * $WarpAmp
    }

    [Void]SingleDomainWarpSimplexGradient(
        [Int64]$ASeed,
        [Single]$WarpAmp,
        [Single]$AFrequency,
        [Single]$X,
        [Single]$Y,
        [Ref]$Xr,
        [Ref]$Yr,
        [Boolean]$OutGradOnly
    ) {
        [Single]$G2   = (3 - [FastNoiseLite]::SQRT3) / 6
        [Single]$G2m1 = $G2 - 1
        [Single]$G2a1 = 1 - 2 * $G2

        $X *= $AFrequency
        $Y *= $AFrequency

        [Int64]$I   = [FastNoiseLite]::FastFloor($X)
        [Int64]$J   = [FastNoiseLite]::FastFloor($Y)
        [Single]$Xi = ([Single]($X - $I))
        [Single]$Yi = ([Single]($Y - $J))
        [Single]$T  = ($Xi + $Yi) * $G2
        [Single]$X0 = $Xi - $T
        [Single]$Y0 = $Yi - $T

        $I *= [FastNoiseLite]::PRIMEX
        $J *= [FastNoiseLite]::PRIMEY

        [Single]$Vx = 0
        [Single]$Vy = 0
        [Single]$A  = 0.5 - $X0 * $X0 - $Y0 * $Y0
        [Single]$A2 = $A * $A

        If($A -GT 0) {
            [Single]$Aaaa = $A2 * $A2
            [Single]$Xo   = 0
            [Single]$Yo   = 0

            If($OutGradOnly -EQ $true) {
                [FastNoiseLite]::GradCoordOut($ASeed, $I, $J, ([Ref]$Xo), ([Ref]$Yo))
            } Else {
                [FastNoiseLite]::GradCoordDual($ASeed, $I, $J, $X0, $Y0, ([Ref]$Xo), ([Ref]$Yo))
            }
            $Vx += $Aaaa * $Xo
            $Vy += $Aaaa * $Yo
        }

        [Single]$C = ([Single](
            2 * $G2a1 * (1 / $G2 - 2)) * $T +
            ([Single](-2 * $G2a1 * $G2a1) + $A)
        )
        [Single]$C2 = $C * $C

        If($C -GT 0) {
            [Single]$X2   = $X0 + (2 * $G2m1)
            [Single]$Y2   = $Y0 + (2 * $G2m1)
            [Single]$Cccc = $C2 * $C2
            [Single]$Xo   = 0
            [Single]$Yo   = 0

            If($OutGradOnly -EQ $true) {
                [FastNoiseLite]::GradCoordOut($ASeed, $I + [FastNoiseLite]::PRIMEX, $J + [FastNoiseLite]::PRIMEY, ([Ref]$Xo), ([Ref]$Yo))
            } Else {
                [FastNoiseLite]::GradCoordDual($ASeed, $I + [FastNoiseLite]::PRIMEX, $J + [FastNoiseLite]::PRIMEY, $X2, $Y2, ([Ref]$Xo), ([Ref]$Yo))
            }

            $Vx += $Cccc * $Xo
            $Vy += $Cccc * $Yo
        }

        If($Y0 -GT $X0) {
            [Single]$X1 = $X0 + $G2
            [Single]$Y1 = $Y0 + $G2m1
            [Single]$B  = 0.5 - $X1 * $X1 - $Y1 * $Y1
            [Single]$B2 = $B * $B

            If($B -GT 0) {
                [Single]$Bbbb = $B2 * $B2
                [Single]$Xo   = 0
                [Single]$Yo   = 0

                If($OutGradOnly -EQ $true) {
                    [FastNoiseLite]::GradCoordOut($ASeed, $I, $J + [FastNoiseLite]::PRIMEY, ([Ref]$Xo), ([Ref]$Yo))
                } Else {
                    [FastNoiseLite]::GradCoordDual($ASeed, $I, $J + [FastNoiseLite]::PRIMEY, $X1, $Y1, ([Ref]$Xo), ([Ref]$Yo))
                }

                $Vx += $Bbbb * $Xo
                $Vy += $Bbbb * $Yo
            }
        } Else {
            [Single]$X1 = $X0 + $G2m1
            [Single]$Y1 = $Y0 + $G2
            [Single]$B  = 0.5 - $X1 * $X1 - $Y1 * $Y1
            [Single]$B2 = $B * $B

            If($B -GT 0) {
                [Single]$Bbbb = $B2 * $B2
                [Single]$Xo   = 0
                [Single]$Yo   = 0

                If($OutGradOnly -EQ $true) {
                    [FastNoiseLite]::GradCoordOut($ASeed, $I + [FastNoiseLite]::PRIMEX, $J, ([Ref]$Xo), ([Ref]$Yo))
                } Else {
                    [FastNoiseLite]::GradCoordDual($ASeed, $I + [FastNoiseLite]::PRIMEX, $J, $X1, $Y1, ([Ref]$Xo), ([Ref]$Yo))
                }

                $Vx += $Bbbb * $Xo
                $Vy += $Bbbb * $Yo
            }
        }

        $Xr.Value += $Vx * $WarpAmp
        $Yr.Value += $Vy * $WarpAmp
    }

    [Void]SingleDomainWarpOpenSimplex2Gradient(
        [Int64]$ASeed,
        [Single]$WarpAmp,
        [Single]$AFrequency,
        [Single]$X,
        [Single]$Y,
        [Single]$Z,
        [Ref]$Xr,
        [Ref]$Yr,
        [Ref]$Zr,
        [Boolean]$OutGradOnly
    ) {
        $X *= $AFrequency
        $Y *= $AFrequency
        $Z *= $AFrequency

        [Int64]$I      = [FastNoiseLite]::FastRound($X)
        [Int64]$J      = [FastNoiseLite]::FastRound($Y)
        [Int64]$K      = [FastNoiseLite]::FastRound($Z)
        [Single]$X0    = ([Single]($X - $I))
        [Single]$Y0    = ([Single]($Y - $J))
        [Single]$Z0    = ([Single]($Z - $K))
        [Int64]$XNSign = ([Int64](-$X0 - 1) -BOR 1)
        [Int64]$YNSign = ([Int64](-$Y0 - 1) -BOR 1)
        [Int64]$ZNSign = ([Int64](-$Z0 - 1) -BOR 1)
        [Single]$Ax0   = $XNSign * -$X0
        [Single]$Ay0   = $YNSign * -$Y0
        [Single]$Az0   = $ZNSign * -$Z0

        $I *= [FastNoiseLite]::PRIMEX
        $J *= [FastNoiseLite]::PRIMEY
        $K *= [FastNoiseLite]::PRIMEZ

        [Single]$Vx = 0
        [Single]$Vy = 0
        [Single]$Vz = 0
        [Single]$A  = (0.6 - $X0 * $X0)- ($Y0 * $Y0 + $Z0 * $Z0)
        [Single]$A2 = $A * $A

        For([Int64]$L = 0; ; $L++) {
            If($A -GT 0) {
                [Single]$Aaaa = $A2 * $A2
                [Single]$Xo   = 0
                [Single]$Yo   = 0
                [Single]$Zo   = 0

                If($OutGradOnly -EQ $true) {
                    [FastNoiseLite]::GradCoordOut($ASeed, $I, $J, $K, ([Ref]$Xo), ([Ref]$Yo), ([Ref]$Zo))
                } Else {
                    [FastNoiseLite]::GradCoordDual($ASeed, $I, $J, $K, $X0, $Y0, $Z0, ([Ref]$Xo), ([Ref]$Yo), ([Ref]$Zo))
                }

                $Vx += $Aaaa * $Xo
                $Vy += $Aaaa * $Yo
                $Vz += $Aaaa * $Zo
            }

            [Int64]$I1  = $I
            [Int64]$J1  = $J
            [Int64]$K1  = $K
            [Single]$B  = $A
            [Single]$B2 = $B * $B
            [Single]$X1 = $X0
            [Single]$Y1 = $Y0
            [Single]$Z1 = $Z0

            If($Ax0 -GE $Ay0 -AND $Ax0 -GE $Az0) {
                $X1 += $XNSign
                $B  += $Ax0 + $Ax0
                $I1 -= $XNSign + [FastNoiseLite]::PRIMEX
            } Elseif($Ay0 -GT $Ax0 -AND $Ay0 -GE $Az0) {
                $Y1 += $YNSign
                $B  += $Ay0 + $Ay0
                $J1 -= $YNSign * [FastNoiseLite]::PRIMEY
            } Else {
                $Z1 += $ZNSign
                $B  += $Az0 + $Az0
                $K1 -= $ZNSign * [FastNoiseLite]::PRIMEZ
            }

            If($B -GT 1) {
                $B -= 1

                [Single]$Bbbb = $B2 * $B2
                [Single]$Xo   = 0
                [Single]$Yo   = 0
                [Single]$Zo   = 0

                If($OutGradOnly -EQ $true) {
                    [FastNoiseLite]::GradCoordOut($ASeed, $I, $J, $K, ([Ref]$Xo), ([Ref]$Yo), ([Ref]$Zo))
                } Else {
                    [FastNoiseLite]::GradCoordDual($ASeed, $I1, $J1, $K1, $X1, $Y1, $Z1, ([Ref]$Xo), ([Ref]$Yo), ([Ref]$Zo))
                }

                $Vx += $Bbbb * $Xo
                $Vy += $Bbbb * $Yo
                $Vz += $Bbbb * $Zo
            }

            If($L -EQ 1) {
                Break
            }

            $Ax0     = 0.5 - $Ax0
            $Ay0     = 0.5 - $Ay0
            $Az0     = 0.5 - $Az0
            $X0      = $XNSign * $Ax0
            $Y0      = $YNSign * $Ay0
            $Z0      = $ZNSign * $Az0
            $A      += (0.75 - $Ax0) - ($Ay0 + $Az0)
            $I      += ($XNSign -SHR 1) -BAND [FastNoiseLite]::PRIMEX
            $J      += ($YNSign -SHR 1) -BAND [FastNoiseLite]::PRIMEY
            $K      += ($ZNSign -SHR 1) -BAND [FastNoiseLite]::PRIMEZ
            $XNSign  = -$XNSign
            $YNSign  = -$YNSign
            $ZNSign  = -$ZNSign
            $ASeed  += [FastNoiseLite]::SEEDADD_MAGIC
        }

        $Xr.Value += $Vx * $WarpAmp
        $Yr.Value += $Vy * $WarpAmp
        $Zr.Value += $Vz * $WarpAmp
    }
}










###############################################################################
#
# S09
#
# BUFFER MANAGER CLASS
#
# MANAGES A SET OF BUFFER STORES TO KEEP THE STATE OF THE GAME BUFFER IN.
#
###############################################################################

Class BufferManager {
    [BufferCell[,]]$ScreenBufferA
    [BufferCell[,]]$ScreenBufferB

    BufferManager() {
        $this.ScreenBufferA = New-Object 'BufferCell[,]' 80, 80
        $this.ScreenBufferB = New-Object 'BufferCell[,]' 80, 80
    }

    [Void]CopyActiveToBufferA() {
        $this.ScreenBufferA = $Script:Rui.GetBufferContents([Rectangle]::new(0, 0, 80, 80))
    }

    [Void]CopyActiveToBufferAWithWipe() {
        $this.ScreenBufferA = $Script:Rui.GetBufferContents([Rectangle]::new(0, 0, 80, 80))
        Clear-Host
    }

    [Void]CopyActiveToBufferB() {
        $this.ScreenBufferB = $Script:Rui.GetBufferContents([Rectangle]::new(0, 0, 80, 80))
    }

    [Void]CopyActiveToBufferBWithWipe() {
        $this.ScreenBufferB = $Script:Rui.GetBufferContents([Rectangle]::new(0, 0, 80, 80))
        Clear-Host
    }

    [Void]SwapAToB() {
        $this.ScreenBufferB = $this.ScreenBufferA
    }

    [Void]SwapBToA() {
        $this.ScreenBufferA = $this.ScreenBufferB
    }

    [Void]RestoreBufferAToActive() {
        Clear-Host
        $Script:Rui.SetBufferContents([Coordinates]::new(0, 0), $this.ScreenBufferA)
        $this.ScreenBufferA = New-Object 'BufferCell[,]' 80, 80
    }

    [Void]RestoreBufferBToActive() {
        Clear-Host
        $Script:Rui.SetBufferContents([Coordinates]::new(0, 0), $this.ScreenBufferB)
        $this.ScreenBufferB = New-Object 'BufferCell[,]' 80, 80
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# UIE CONTAINER
#
# THE ROOT CONTAINER FOR ANY UI ELEMENT.
#
#//////////////////////////////////////////////////////////////////////////////

Class UIEContainer {
    [ATCoordinates]$LeftTop
    [ATCoordinates]$RightBottom
    [Int]$Width
    [Int]$Height
    [Stack[UIEContainer]]$Children
    [UIELayout]$Layout

    UIEContainer() {
        $this.LeftTop     = [ATCoordinates]::new()
        $this.RightBottom = [ATCoordinates]::new()
        $this.Width       = 0
        $this.Height      = 0
        $this.Children    = [Stack[UIEContainer]]::new()
        $this.Layout      = [UIELayout]::Vertical
    }

    [Void]UpdateDimensions() {
        If($this.Children.Count -EQ 0) {
            $this.Width  = $this.LeftTop.Column + $this.RightBottom.Column
            $this.Height = $this.LeftTop.Row + $this.RightBottom.Row
        } Else {
            $this.Width  = 0
            $this.Height = 0
    
            Foreach($Child in $this.Children) {
                $this.Width  += $Child.Width
                $this.Height += $Child.Height
            }
        }
    }

    [Void]PushChild(
        [UIEContainer]$Child
    ) {
        If($null -EQ $Child) {
            # PROBABLY SHOULD DO SOMETHING A LITTLE DIFFERENT HERE, BUT WHATEVER
            Return
        }

        Switch($this.Layout) {
            ([UIELayout]::Horizontal) {
                If($this.Children.Count -GT 1) {
                    [UIEContainer]$Top = $this.Children.Peek()

                    $Child.LeftTop.Column = $Top.RightBottom.Column + 2
                    $Child.LeftTop.Row    = $Top.LeftTop.Row

                    $this.Children.Push($Child)
                    $this.UpdateDimensions()
                } Else {
                    $this.Children.Push($Child)
                    $this.UpdateDimensions()
                }
            }

            ([UIELayout]::Vertical) {
                If($this.Children.Count -GT 1) {
                    [UIEContainer]$Top = $this.Children.Peek()

                    # THIS PADDING CALCULATION MIGHT NEED ADJUSTED
                    $Child.LeftTop.Row = $Top.RightBottom.Row + 2

                    # ALIGN LEFT TO THE ABOVE CONTAINER
                    $Child.LeftTop.Column = $Top.LeftTop.Column

                    $this.Children.Push($Child)

                    $this.UpdateDimensions()
                } Else {
                    $this.Children.Push($Child)
                    $this.UpdateDimensions()
                }
            }

            Default {}
        }
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# WINDOW BASE
#
# INTENDED TO BE USED AS THE FOUNDATION FOR MORE SPECIFIC "WINDOWS". THIS CLASS
# ISN'T INTENDED TO BE INSTANTIATED DIRECTLY FOR ANY REASON OTHER THAN TESTING.
#
# THE VERSION SHOWN HERE IS DERIVED FROM BURNT LATTE. IT EXTENDS THE ORIGINAL
# DESIGN BY ADDING SUPPORT FOR INDEPENDENT LEFT AND RIGHT BORDER CHARACTERS,
# AS WELL AS ADDING A TITLE. LEGACY DERIVED CLASSES WILL BE REQUIRED TO CHANGE
# CERTAIN INITIALIZATION PROCESSES TO FACILITATE DERIVATION FROM THIS VERSION.
#
# THE INCLUSION OF THE SECONDARY CONSTRUCTOR IS FOR POSTERITY. IT'S CURRENTLY
# UNCLEAR IF THIS CONSTRUCTOR IS USED. THIS SHOULD BE CLEANED UP LATER.
#
# NEWER ADDITIONS TO THIS CODE ARE INTENDED TO ADD CORNER CHARACTERS TO THE
# SPEC. THIS IS A DERIVATIVE OF PWSHSPECTRECONSOLE (THANKS TO TRACKD FOR THIS).
# I WASN'T DOING THIS ORIGINALLY, AND IT SEEMS LIKE IT MAY GIVE A BIT OF A
# BETTER VISUAL EXPERIENCE, ESPCIALLY SINCE I MAY NOT BE ABLE TO USE SAID
# LIBRARY TO RENDER THE GAME AFTER TALKING WITH HIM.
#
#//////////////////////////////////////////////////////////////////////////////

Class WindowBase {
    [ATCoordinates]$LeftTop
    [ATCoordinates]$RightBottom
    [ConsoleColor24[]]$BorderDrawColors
    [Boolean[]]$BorderDrawDirty
    [Int]$Width
    [Int]$Height

    [String]$Title
    [Boolean]$UseTitle
    [Boolean]$TitleDirty
    [Boolean]$ComplexTitle
    [ConsoleColor24]$TitleColor

    WindowBase() {
        $this.LeftTop          = [ATCoordinatesNone]::new()
        $this.RightBottom      = [ATCoordinatesNone]::new()
        $this.BorderDrawColors = [ConsoleColor24[]](
            [CCWindowBorderDefault24]::new(),
            [CCWindowBorderDefault24]::new(),
            [CCWindowBorderDefault24]::new(),
            [CCWindowBorderDefault24]::new(),
            [CCWindowBorderDefault24]::new(),
            [CCWindowBorderDefault24]::new(),
            [CCWindowBorderDefault24]::new(),
            [CCWindowBorderDefault24]::new()
        )
        $this.BorderDrawDirty = [Boolean[]](
            $true,
            $true,
            $true,
            $true
        )
        $this.Title        = ''
        $this.UseTitle     = $false
        $this.TitleDirty   = $false
        $this.ComplexTitle = $false
        $this.TitleColor   = [CCTextDefault24]::new()
        $this.UpdateDimensions()
    }

    [Void]Draw() {
        [ATStringComposite]$Bt = [ATStringComposite]::new()
        [ATStringComposite]$Bb = [ATStringComposite]::new()
        [ATStringComposite]$Bl = [ATStringComposite]::new()
        [ATStringComposite]$Br = [ATStringComposite]::new()

        If($this.BorderDrawDirty[[WindowBorderPart]::Top] -EQ $true) {
            $Bt = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $this.BorderDrawColors[[WindowBorderPart]::LeftTop]
                        Coordinates     = $this.LeftTop
                    }
                    UserData = $($Script:CurrentWindowDesign[[WindowBorderPart]::LeftTop])
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $this.BorderDrawColors[[WindowBorderPart]::Top]
                    }

                    # I HAVE OFFICIALLY COMMITTED THE CARDINAL SIN OF MULTIPLYING A STRING WITH AN INTEGER
                    # TO REPEAT INLINE.
                    # FUCK ME. FUCK ME. FUCK ME.
                    UserData = $($Script:CurrentWindowDesign[[WindowBorderPart]::Top] * ($this.Width - 1))
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $this.BorderDrawColors[[WindowBorderPart]::RightTop]
                    }
                    UserData   = $($Script:CurrentWindowDesign[[WindowBorderPart]::RightTop])
                    UseATReset = $true
                }
            ))
            $this.BorderDrawDirty[[WindowBorderPartDirty]::Top] = $false
        }

        If($this.BorderDrawDirty[[WindowBorderPartDirty]::Bottom] -EQ $true) {
            $Bb = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $this.BorderDrawColors[[WindowBorderPart]::LeftBottom]
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.RightBottom.Row
                            Column = $this.LeftTop.Column
                        }
                    }
                    UserData = $($Script:CurrentWindowDesign[[WindowBorderPart]::LeftBottom])
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $this.BorderDrawColors[[WindowBorderPart]::Bottom]
                    }
                    UserData = $($Script:CurrentWindowDesign[[WindowBorderPart]::Bottom] * ($this.Width - 1))
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $this.BorderDrawColors[[WindowBorderPart]::RightBottom]
                    }
                    UserData   = $($Script:CurrentWindowDesign[[WindowBorderPart]::RightBottom])
                    UseATReset = $true
                }
            ))
            $this.BorderDrawDirty[[WindowBorderPartDirty]::Bottom] = $false
        }

        If($this.BorderDrawDirty[[WindowBorderPartDirty]::Left] -EQ $true) {
            # THE CORNERS WILL ALREADY HAVE BEEN DRAWN AT THIS POINT, SO WE JUST NEED TO REPEAT THE LEFT CHARACTER VERTICALLY
            $Bl = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $this.BorderDrawColors[[WindowBorderPart]::Left]
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.LeftTop.Row + 1
                            Column = $this.LeftTop.Column
                        }
                    }
                    UserData = $(
                        Invoke-Command -ScriptBlock {
                            [String]$T = ''

                            For($A = 0; $A -LT $this.Height; $A++) {
                                [ATCoordinates]$B = [ATCoordinates]@{
                                    Row    = ($this.LeftTop.Row + 1) + $A
                                    Column = $this.LeftTop.Column
                                }
                                $T += "$($Script:CurrentWindowDesign[[WindowBorderPart]::Left])$($B.ToAnsiControlSequenceString())"
                            }

                            Return $T
                        }
                    )
                }
            ))
            $this.BorderDrawDirty[[WindowBorderPartDirty]::Left] = $true
        }

        If($this.BorderDrawDirty[[WindowBorderPartDirty]::Right] -EQ $true) {
            $Br = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $this.BorderDrawColors[[WindowBorderPart]::Right]
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.LeftTop.Row + 1
                            Column = $this.RightBottom.Column
                        }
                    }
                    UserData = $(
                        Invoke-Command -ScriptBlock {
                            [String]$T = ''

                            For($A = 0; $A -LT $this.Height; $A++) {
                                [ATCoordinates]$B = [ATCoordinates]@{
                                    Row    = ($this.LeftTop.Row + 1) + $A
                                    Column = $this.RightBottom.Column
                                }
                                $T += "$($Script:CurrentWindowDesign[[WindowBorderPart]::Right])$($B.ToAnsiControlSequenceString())"
                            }

                            Return $T
                        }
                    )
                }
            ))
            $this.BorderDrawDirty[[WindowBorderPartDirty]::Right] = $false
        }

        Write-Host "$($Bt.ToAnsiControlSequenceString())$($Bb.ToAnsiControlSequenceString())$($Bl.ToAnsiControlSequenceString())$($Br.ToAnsiControlSequenceString())"

        If($this.UseTitle -EQ $true) {
            If($this.TitleDirty -EQ $true) {
                [ATString]$A = [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        # ForegroundColor = $this.TitleColor
                        Coordinates = [ATCoordinates]@{
                            Row    = $this.LeftTop.Row
                            Column = $this.LeftTop.Column + 2
                        }
                    }
                    UserData   = $this.Title
                    UseATReset = $true
                }

                Write-Host "$($A.ToAnsiControlSequenceString())"
                $this.TitleDirty = $false
            }
        }
    }

    [Void]UpdateDimensions() {
        $this.Width  = $this.RightBottom.Column - $this.LeftTop.Column
        $this.Height = $this.RightBottom.Row - $this.LeftTop.Row
    }

    [Void]SetupTitle(
        [String]$Title,
        [ConsoleColor24]$Color
    ) {
        $this.UseTitle   = $true
        $this.TitleDirty = $true
        $this.Title      = $Title
        $this.TitleColor = $Color
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# STATUS WINDOW
#
# USED IN THE WORLD NAVIGATION STATE/SCREEN, THIS WINDOW SHOWS VERY BASIC
# STATISTICS ABOUT THE PLAYER. THE NAME OF THIS OBJECT SHOULD REALLY BE 
# CHANGED TO BETTER REFLECT ITS INTENDED USE. THIS NAME IS A VESTIGE FROM THE
# ORIGINAL CODE BASE.
#
# THIS CODE HAS ALSO BEEN DRAMATICALLY SIMPLIFIED FROM ITS ORIGINAL DESIGN.
# ONE OF THE MAJOR COMPONENTS THAT'S BEEN REMOVED IS CROSS PLATFORM SUPPORT
# IN THE DRAW METHOD. THIS VESTIGE IS NO LONGER NECESSARY SINCE THE CODE WILL
# NO LONGER BE PORTABLE BY DESIGN.
#
#//////////////////////////////////////////////////////////////////////////////

Class StatusWindow : WindowBase {
    Static [Int]$PlayerStatDrawColumn = 3
    Static [Int]$PlayerNameDrawRow    = 2
    Static [Int]$PlayerHpDrawRow      = 4
    Static [Int]$PlayerMpDrawRow      = 6
    Static [Int]$PlayerGoldDrawRow    = 9
    Static [Int]$WindowLTRow          = 1
    Static [Int]$WindowLTColumn       = 1
    Static [Int]$WindowRBRow          = 10
    Static [Int]$WindowRBColumn       = 19

    Static [String]$LineBlank   = '                '
    Static [String]$WindowTitle = 'Status'

    Static [ATCoordinates]$PlayerNameDrawCoordinates = [ATCoordinates]::new([StatusWindow]::PlayerNameDrawRow, [StatusWindow]::PlayerStatDrawColumn)
    Static [ATCoordinates]$PlayerHpDrawCoordinates   = [ATCoordinates]::new([StatusWindow]::PlayerHpDrawRow, [StatusWindow]::PlayerStatDrawColumn)
    Static [ATCoordinates]$PlayerMpDrawCoordinates   = [ATCoordinates]::new([StatusWindow]::PlayerMpDrawRow, [StatusWindow]::PlayerStatDrawColumn)
    Static [ATCoordinates]$PlayerGoldDrawCoordinates = [ATCoordinates]::new([StatusWindow]::PlayerGoldDrawRow, [StatusWindow]::PlayerStatDrawColumn)

    [Boolean]$PlayerNameDrawDirty
    [Boolean]$PlayerHpDrawDirty
    [Boolean]$PlayerMpDrawDirty
    [Boolean]$PlayerGoldDrawDirty

    [ATString]$LineBlankActual

    StatusWindow() : base() {
        $this.LeftTop          = [ATCoordinates]::new([StatusWindow]::WindowLTRow, [StatusWindow]::WindowLTColumn)
        $this.RightBottom      = [ATCoordinates]::new([StatusWindow]::WindowRBRow, [StatusWindow]::WindowRBColumn)

        $this.UpdateDimensions()
        $this.SetupTitle([StatusWindow]::WindowTitle, [CCTextDefault24]::new())

        $this.PlayerNameDrawDirty = $true
        $this.PlayerHpDrawDirty   = $true
        $this.PlayerMpDrawDirty   = $true
        $this.PlayerGoldDrawDirty = $true
        $this.LineBlankActual     = [ATString]@{
            Prefix = [ATStringPrefix]@{
                Coordinates = [ATCoordinates]::new()
            }
            UserData   = "$([StatusWindow]::LineBlank)"
            UseATReset = $true
        }
    }

    [Void]Draw() {
        ([WindowBase]$this).Draw()

        If($this.PlayerNameDrawDirty -EQ $true) {
            [ATString]$A = [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:ThePlayer.NameDrawColor
                    Coordinates     = [StatusWindow]::PlayerNameDrawCoordinates
                }
                UserData   = $Script:ThePlayer.Name
                UseATReset = $true
            }
            $this.LineBlankActual.Prefix.Coordinates = [StatusWindow]::PlayerNameDrawCoordinates
            Write-Host "$($this.LineBlankActual.ToAnsiControlSequenceString())$($A.ToAnsiControlSequenceString())"
            $this.PlayerNameDrawDirty = $false
        }

        If($this.PlayerHpDrawDirty -EQ $true) {
            [String]$A               = ''
            [ATStringComposite]$Line = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                        Coordinates     = [StatusWindow]::PlayerHpDrawCoordinates
                    }
                    UserData = 'H '
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [BattleEntityProperty]::StatNumDrawColorSafe
                    }
                    UserData = "$($Script:ThePlayer.Stats[[StatId]::HitPoints].Base)`n`t"
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData = '/ '
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [BattleEntityProperty]::StatNumDrawColorSafe
                    }
                    UserData   = "$($Script:ThePlayer.Stats[[StatId]::HitPoints].Max)"
                    UseATReset = $true
                }
            ))

            Switch($Script:ThePlayer.Stats[[StatId]::HitPoints].State) {
                ([StatNumberState]::Normal) {
                    $A += "$($Line.ToAnsiControlSequenceString())"

                    Break
                }

                ([StatNumberState]::Caution) {
                    $Line.CompositeActual[1].Prefix.ForegroundColor = [BattleEntityProperty]::StatNumDrawColorCaution
                    $Line.CompositeActual[3].Prefix.ForegroundColor = [BattleEntityProperty]::StatNumDrawColorCaution
                    $A += "$($Line.ToAnsiControlSequenceString())"

                    Break
                }

                ([StatNumberState]::Danger) {
                    $Line.CompositeActual[1].Prefix.ForegroundColor = [BattleEntityProperty]::StatNumDrawColorDanger
                    $Line.CompositeActual[3].Prefix.ForegroundColor = [BattleEntityProperty]::StatNumDrawColorDanger
                    $A += "$($Line.ToAnsiControlSequenceString())"

                    Break
                }

                Default {
                    $A += "$($Line.ToAnsiControlSequenceString())"

                    Break
                }
            }

            ###################################################################
            #
            # MAKE A FUCKING MENTAL NOTE THAT THIS IS ABSOLUTELY NECESSARY!!!
            #
            # I TOTALLY FORGOT WHY I NEEDED THIS, AND NOW I REMEMBER!
            #
            # IF LINEBLANKACTUAL.PREFIX.COORDINATES IS ASSIGNED TO PLAYERHPDRAWCOORDINATES,
            # THE STATEMENT THAT POSTFIXES THE ROW VALUE WILL MODIFY PLAYERHPDRAWCOORDINATES
            # AND CAUSE SUBSEQUENT DRAWS TO TRAIL DOWN THE SCREEN, WHICH IS TOTAL BULLSHIT!!!
            # IMPLICIT COPY IS TOO MUCH TO ASK EVIDENTLY.
            #
            ###################################################################
            $this.LineBlankActual.Prefix.Coordinates = [ATCoordinates]::new([StatusWindow]::PlayerHpDrawCoordinates)
            Write-Host "$($this.LineBlankActual.ToAnsiControlSequenceString())"
            $this.LineBlankActual.Prefix.Coordinates.Row++
            Write-Host "$($this.LineBlankActual.ToAnsiControlSequenceString())$($A)"
            $this.PlayerHpDrawDirty = $false
        }

        If($this.PlayerMpDrawDirty -EQ $true) {
            [String]$A = ''
            [ATStringComposite]$Line = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                        Coordinates     = [StatusWindow]::PlayerMpDrawCoordinates
                    }
                    UserData = 'M '
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [BattleEntityProperty]::StatNumDrawColorSafe
                    }
                    UserData = "$($Script:ThePlayer.Stats[[StatId]::MagicPoints].Base)`n`t"
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData = '/ '
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [BattleEntityProperty]::StatNumDrawColorSafe
                    }
                    UserData   = "$($Script:ThePlayer.Stats[[StatId]::MagicPoints].Max)"
                    UseATReset = $true
                }
            ))

            Switch($Script:ThePlayer.Stats[[StatId]::MagicPoints].State) {
                ([StatNumberState]::Normal) {
                    $A += "$($Line.ToAnsiControlSequenceString())"

                    Break
                }

                ([StatNumberState]::Caution) {
                    $Line.CompositeActual[1].Prefix.ForegroundColor = [BattleEntityProperty]::StatNumDrawColorCaution
                    $Line.CompositeActual[3].Prefix.ForegroundColor = [BattleEntityProperty]::StatNumDrawColorCaution
                    $A += "$($Line.ToAnsiControlSequenceString())"

                    Break
                }

                ([StatNumberState]::Danger) {
                    $Line.CompositeActual[1].Prefix.ForegroundColor = [BattleEntityProperty]::StatNumDrawColorDanger
                    $Line.CompositeActual[3].Prefix.ForegroundColor = [BattleEntityProperty]::StatNumDrawColorDanger
                    $A += "$($Line.ToAnsiControlSequenceString())"

                    Break
                }

                Default {
                    $A += "$($Line.ToAnsiControlSequenceString())"

                    Break
                }
            }

            $this.LineBlankActual.Prefix.Coordinates = [ATCoordinates]::new([StatusWindow]::PlayerMpDrawCoordinates)
            Write-Host "$($this.LineBlankActual.ToAnsiControlSequenceString())"
            $this.LineBlankActual.Prefix.Coordinates.Row++
            Write-Host "$($this.LineBlankActual.ToAnsiControlSequenceString())$($a)"
            $this.PlayerMpDrawDirty = $false
        }

        If($this.PlayerGoldDrawDirty -EQ $true) {
            [ATStringComposite]$Line = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [Player]::GoldDrawColor
                        Coordinates     = [StatusWindow]::PlayerGoldDrawCoordinates
                    }
                    UserData = "$($Script:ThePlayer.CurrentGold)"
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = 'G'
                    UseATReset = $true
                }
            ))

            $this.LineBlankActual.Prefix.Coordinates = [ATCoordinates]::new([StatusWindow]::PlayerGoldDrawCoordinates)
            Write-Host "$($this.LineBlankActual.ToAnsiControlSequenceString())$($Line.ToAnsiControlSequenceString())"
            $this.PlayerGoldDrawDirty = $false
        }
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# COMMAND WINDOW
#
# THIS IS THE WINDOW THAT ALLOWS THE USER TO INPUT COMMANDS AND ALSO SHOWS THE
# COMMAND HISTORY (FIVE MOST RECENT COMMANDS).
#
#//////////////////////////////////////////////////////////////////////////////

Class CommandWindow : WindowBase {
    Static [Int]$CommandHistoryARef    = 0
    Static [Int]$CommandHistoryBRef    = 1
    Static [Int]$CommandHistoryCRef    = 2
    Static [Int]$CommandHistoryDRef    = 3
    Static [Int]$CommandHistoryERef    = 4
    Static [Int]$WindowLTRow           = 12
    Static [Int]$WindowLTColumn        = 1
    Static [Int]$WindowRBRow           = 20
    Static [Int]$WindowRBColumn        = 19
    Static [Int]$DrawColumnOffset      = 1
    Static [Int]$DrawDivRowOffset      = 2
    Static [Int]$DrawHistoryDRowOffset = 3
    Static [Int]$DrawHistoryCRowOffset = 4
    Static [Int]$DrawHistoryBRowOffset = 5
    Static [Int]$DrawHistoryARowOffset = 6
    Static [Int]$DrawHistoryERowOffset = 7

    Static [String]$CommandBlankData = '                 '
    Static [String]$WindowCommandDiv = '─────────────────'
    Static [String]$WindowTitle      = 'Commands'

    Static [ATCoordinates]$CommandDivDrawCoordinates      = [ATCoordinatesNone]::new()
    Static [ATCoordinates]$CommandHistoryEDrawCoordinates = [ATCoordinatesNone]::new()
    Static [ATCoordinates]$CommandHistoryDDrawCoordinates = [ATCoordinatesNone]::new()
    Static [ATCoordinates]$CommandHistoryCDrawCoordinates = [ATCoordinatesNone]::new()
    Static [ATCoordinates]$CommandHistoryBDrawCoordinates = [ATCoordinatesNone]::new()
    Static [ATCoordinates]$CommandHistoryADrawCoordinates = [ATCoordinatesNone]::new()

    Static [ConsoleColor24]$HistoryEntryValid   = [CCAppleNGreenLight24]::new()
    Static [ConsoleColor24]$HistoryEntryError   = [CCAppleNRedLight24]::new()
    Static [ConsoleColor24]$HistoryBlankColor   = [CCBlack24]::new()
    Static [ConsoleColor24]$CommandDivDrawColor = [CCTextDefault24]::new()
    Static [ATString]$CommandDiv                = [ATStringNone]::new()
    Static [ATString]$CommandBlank              = [ATStringNone]::new()
    Static [ATString]$CommandHistBlank          = [ATStringNone]::new()

    [ATString]$CommandActual
    [ATString[]]$CommandHistory

    [Boolean]$CommandDivDirty
    [Boolean]$CommandHistoryDirty

    CommandWindow() : base() {
        $this.LeftTop          = [ATCoordinates]::new([CommandWindow]::WindowLTRow, [CommandWindow]::WindowLTColumn)
        $this.RightBottom      = [ATCoordinates]::new([CommandWindow]::WindowRBRow, [CommandWindow]::WindowRBColumn)

        $this.UpdateDimensions()
        $this.SetupTitle([CommandWindow]::WindowTitle, [CCTextDefault24]::new())

        $this.CommandDivDirty     = $true
        $this.CommandHistoryDirty = $false
        [Int]$rowBase             = $this.RightBottom.Row
        [Int]$columnBase          = $this.LeftTop.Column + [CommandWindow]::DrawColumnOffset

        [CommandWindow]::CommandDivDrawCoordinates = [ATCoordinates]@{
            Row    = ($rowBase - [CommandWindow]::DrawDivRowOffset)
            Column = $columnBase
        }
        [CommandWindow]::CommandHistoryEDrawCoordinates = [ATCoordinates]@{
            Row    = $rowBase - [CommandWindow]::DrawHistoryERowOffset
            Column = $columnBase
        }
        [CommandWindow]::CommandHistoryDDrawCoordinates = [ATCoordinates]@{
            Row    = $rowBase - [CommandWindow]::DrawHistoryDRowOffset
            Column = $columnBase
        }
        [CommandWindow]::CommandHistoryCDrawCoordinates = [ATCoordinates]@{
            Row    = $rowBase - [CommandWindow]::DrawHistoryCRowOffset
            Column = $columnBase
        }
        [CommandWindow]::CommandHistoryBDrawCoordinates = [ATCoordinates]@{
            Row    = $rowBase - [CommandWindow]::DrawHistoryBRowOffset
            Column = $columnBase
        }
        [CommandWindow]::CommandHistoryADrawCoordinates = [ATCoordinates]@{
            Row    = $rowBase - [CommandWindow]::DrawHistoryARowOffset
            Column = $columnBase
        }

        [CommandWindow]::CommandDiv = [ATString]@{
            Prefix = [ATStringPrefix]@{
                ForegroundColor = [CommandWindow]::CommandDivDrawColor
                Coordinates     = [CommandWindow]::CommandDivDrawCoordinates
            }
            UserData   = "$([CommandWindow]::WindowCommandDiv)"
            UseATReset = $true
        }
        [CommandWindow]::CommandBlank = [ATString]@{
            Prefix = [ATStringPrefix]@{
                ForegroundColor = [CommandWindow]::HistoryBlankColor
            }
            UserData   = "$([CommandWindow]::CommandBlankData)"
            UseATReset = $true
        }
        [CommandWindow]::CommandHistBlank = [ATString]@{
            Prefix = [ATStringPrefix]@{
                ForegroundColor = [CommandWindow]::HistoryBlankColor
            }
            UserData   = "$([CommandWindow]::CommandBlankData)"
            UseATReset = $true
        }

        $this.CommandActual                                       = [ATStringNone]::new()
        $this.CommandHistory                                      = New-Object 'ATString[]' 5
        $this.CommandHistory[[CommandWindow]::CommandHistoryARef] = [ATString]@{
            Prefix = [ATStringPrefix]@{
                ForegroundColor = [CCTextDefault24]::new()
                Coordinates     = [CommandWindow]::CommandHistoryADrawCoordinates
            }
            UserData   = "$([CommandWindow]::CommandBlank.UserData)"
            UseATReset = $true
        }
        $this.CommandHistory[[CommandWindow]::CommandHistoryBRef] = [ATString]@{
            Prefix = [ATStringPrefix]@{
                ForegroundColor = [CCTextDefault24]::new()
                Coordinates     = [CommandWindow]::CommandHistoryBDrawCoordinates
            }
            UserData   = "$([CommandWindow]::CommandBlank.UserData)"
            UseATReset = $true
        }
        $this.CommandHistory[[CommandWindow]::CommandHistoryCRef] = [ATString]@{
            Prefix = [ATStringPrefix]@{
                ForegroundColor = [CCTextDefault24]::new()
                Coordinates     = [CommandWindow]::CommandHistoryCDrawCoordinates
            }
            UserData   = "$([CommandWindow]::CommandBlank.UserData)"
            UseATReset = $true
        }
        $this.CommandHistory[[CommandWindow]::CommandHistoryDRef] = [ATString]@{
            Prefix = [ATStringPrefix]@{
                ForegroundColor = [CCTextDefault24]::new()
                Coordinates     = [CommandWindow]::CommandHistoryDDrawCoordinates
            }
            UserData   = "$([CommandWindow]::CommandBlank.UserData)"
            UseATReset = $true
        }
        $this.CommandHistory[[CommandWindow]::CommandHistoryERef] = [ATString]@{
            Prefix = [ATStringPrefix]@{
                ForegroundColor = [CCTextDefault24]::new()
                Coordinates     = [CommandWindow]::CommandHistoryEDrawCoordinates
            }
            UserData   = "$([CommandWindow]::CommandBlank.UserData)"
            UseATReset = $true
        }
    }

    [Void]Draw() {
        ([WindowBase]$this).Draw()
        If($this.CommandDivDirty -EQ $true) {
            Write-Host "$([CommandWindow]::CommandDiv.ToAnsiControlSequenceString())"
            $this.CommandDivDirty = $false
        }
        If($this.CommandHistoryDirty -EQ $true) {
            [CommandWindow]::CommandHistBlank.Prefix.Coordinates = [CommandWindow]::CommandHistoryDDrawCoordinates
            Write-Host "$([CommandWindow]::CommandHistBlank.ToAnsiControlSequenceString())$($this.CommandHistory[[CommandWindow]::CommandHistoryDRef].ToAnsiControlSequenceString())"
            [CommandWindow]::CommandHistBlank.Prefix.Coordinates = [CommandWindow]::CommandHistoryCDrawCoordinates
            Write-Host "$([CommandWindow]::CommandHistBlank.ToAnsiControlSequenceString())$($this.CommandHistory[[CommandWindow]::CommandHistoryCRef].ToAnsiControlSequenceString())"
            [CommandWindow]::CommandHistBlank.Prefix.Coordinates = [CommandWindow]::CommandHistoryBDrawCoordinates
            Write-Host "$([CommandWindow]::CommandHistBlank.ToAnsiControlSequenceString())$($this.CommandHistory[[CommandWindow]::CommandHistoryBRef].ToAnsiControlSequenceString())"
            [CommandWindow]::CommandHistBlank.Prefix.Coordinates = [CommandWindow]::CommandHistoryADrawCoordinates
            Write-Host "$([CommandWindow]::CommandHistBlank.ToAnsiControlSequenceString())$($this.CommandHistory[[CommandWindow]::CommandHistoryARef].ToAnsiControlSequenceString())"
            [CommandWindow]::CommandHistBlank.Prefix.Coordinates = [CommandWindow]::CommandHistoryEDrawCoordinates
            Write-Host "$([CommandWindow]::CommandHistBlank.ToAnsiControlSequenceString())$($this.CommandHistory[[CommandWindow]::CommandHistoryERef].ToAnsiControlSequenceString())"
            $this.CommandHistoryDirty = $false
        }
    }

    [Void]HandleInput() {
        $Script:Rui.CursorPosition = $Script:DefaultCursorCoordinates.ToAutomationCoordinates()
        $keyCap = $Script:Rui.ReadKey('IncludeKeyDown')
        While($keyCap.VirtualKeyCode -NE 13) {
            $cpx = $Script:Rui.CursorPosition.X
            If($cpx -GE 18) {
                Break
            }
            Switch($keyCap.VirtualKeyCode) {
                8 { # Backspace
                    $fpx = $Script:Rui.CursorPosition.X
                    If($fpx -GT $Script:DefaultCursorCoordinates.Row) {
                        Write-Host " `b" -NoNewLine
                        If($this.CommandActual.UserData.Length -GT 0) {
                            $this.CommandActual.UserData = $this.CommandActual.UserData.Remove($this.CommandActual.UserData.Length - 1, 1)
                        }
                    } Elseif($fpx -LT $Script:DefaultCursorCoordinates.Row) {
                        $Script:Rui.CursorPosition = $Script:DefaultCursorCoordinates.ToAutomationCoordinates()
                    } Elseif($fpx -EQ $Script:DefaultCursorCoordinates.Row) {
                        Write-Host " `b" -NoNewline
                        If($this.CommandActual.UserData.Length -GT 0) {
                            $this.CommandActual.UserData = $this.CommandActual.UserData.Remove($this.CommandActual.UserData.Length - 1, 1)
                        }
                    }
                }

                Default {
                    $this.CommandActual.UserData += $keyCap.Character
                }
            }
            $keyCap = $Script:Rui.ReadKey('IncludeKeyDown')
        }
        $this.InvokeCommandParser()
    }

    [Void]InvokeCommandParser() {
        $Script:Rui.CursorPosition = $Script:DefaultCursorCoordinates.ToAutomationCoordinates()
        Write-Host "$([CommandWindow]::CommandBlank.ToAnsiControlSequenceString())" -NoNewline
        $Script:Rui.CursorPosition = $Script:DefaultCursorCoordinates.ToAutomationCoordinates()

        If([String]::IsNullOrEmpty($this.CommandActual.UserData.Trim()) -EQ $true) {
            $Script:TheMessageWindow.WriteBadCommandRetortMessage()
            $this.CommandActual.UserData = ''

            Return
        } Else {
            $cmdactSplit = $this.CommandActual.UserData.Trim()
            $cmdactSplit = -SPLIT $this.CommandActual.UserData
            $rootFound   = $Script:TheCommandTable.GetEnumerator() | Where-Object { $_.Name -IEQ $cmdactSplit[0] }
            If($null -NE $rootFound) {
                Switch($cmdactSplit.Length) {
                    1 {
                        Invoke-Command $rootFound.Value
                    }

                    2 {
                        Invoke-Command $rootFound.Value -ArgumentList $cmdactSplit[1]
                    }

                    3 {
                        Invoke-Command $rootFound.Value -ArgumentList $cmdactSplit[1], $cmdactSplit[2]
                    }

                    Default {
                        $Script:TheCommandWindow.UpdateCommandHistory($false)
                        $Script:TheMessageWindow.WriteBadCommandRetortMessage()
                    }
                }
            } Else {
                $Script:TheCommandWindow.UpdateCommandHistory($false)
                $Script:TheMessageWindow.WriteBadCommandRetortMessage()

                Return
            }
        }
    }

    [Void]UpdateCommandHistory(
        [Boolean]$CmdValid
    ) {
        $this.CommandHistory[[CommandWindow]::CommandHistoryERef].UserData               = $this.CommandHistory[[CommandWindow]::CommandHistoryARef].UserData
        $this.CommandHistory[[CommandWindow]::CommandHistoryERef].Prefix.Decorations     = $this.CommandHistory[[CommandWindow]::CommandHistoryARef].Prefix.Decorations
        $this.CommandHistory[[CommandWindow]::CommandHistoryERef].Prefix.ForegroundColor = $this.CommandHistory[[CommandWindow]::CommandHistoryARef].Prefix.ForegroundColor
        $this.CommandHistory[[CommandWindow]::CommandHistoryARef].UserData               = $this.CommandHistory[[CommandWindow]::CommandHistoryBRef].UserData
        $this.CommandHistory[[CommandWindow]::CommandHistoryARef].Prefix.Decorations     = $this.CommandHistory[[CommandWindow]::CommandHistoryBRef].Prefix.Decorations
        $this.CommandHistory[[CommandWindow]::CommandHistoryARef].Prefix.ForegroundColor = $this.CommandHistory[[CommandWindow]::CommandHistoryBRef].Prefix.ForegroundColor
        $this.CommandHistory[[CommandWindow]::CommandHistoryBRef].UserData               = $this.CommandHistory[[CommandWindow]::CommandHistoryCRef].UserData
        $this.CommandHistory[[CommandWindow]::CommandHistoryBRef].Prefix.Decorations     = $this.CommandHistory[[CommandWindow]::CommandHistoryCRef].Prefix.Decorations
        $this.CommandHistory[[CommandWindow]::CommandHistoryBRef].Prefix.ForegroundColor = $this.CommandHistory[[CommandWindow]::CommandHistoryCRef].Prefix.ForegroundColor
        $this.CommandHistory[[CommandWindow]::CommandHistoryCRef].UserData               = $this.CommandHistory[[CommandWindow]::CommandHistoryDRef].UserData
        $this.CommandHistory[[CommandWindow]::CommandHistoryCRef].Prefix.Decorations     = $this.CommandHistory[[CommandWindow]::CommandHistoryDRef].Prefix.Decorations
        $this.CommandHistory[[CommandWindow]::CommandHistoryCRef].Prefix.ForegroundColor = $this.CommandHistory[[CommandWindow]::CommandHistoryDRef].Prefix.ForegroundColor
        $this.CommandHistory[[CommandWindow]::CommandHistoryDRef].UserData               = $this.CommandActual.UserData
        If($CmdValid -EQ $true) {
            $this.CommandHistory[[CommandWindow]::CommandHistoryDRef].Prefix.ForegroundColor = [CommandWindow]::HistoryEntryValid
            $this.CommandHistory[[CommandWindow]::CommandHistoryDRef].Prefix.Decorations     = [ATDecorationNone]::new()
        } Else {
            $this.CommandHistory[[CommandWindow]::CommandHistoryDRef].Prefix.ForegroundColor = [CommandWindow]::HistoryEntryError
            $this.CommandHistory[[CommandWindow]::CommandHistoryDRef].Prefix.Decorations = [ATDecoration]@{
                Blink = $true
            }
        }
        $this.CommandActual.UserData = ''
        $this.CommandHistoryDirty    = $true
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# SCENE WINDOW
#
# THIS WINDOW DISPLAYS AN IMAGE FOR THE CURRENT MAP TILE. THIS IS A VISUAL
# HACK TO GIVE A VISUAL FLAIR TO THE PROGRAM.
#
#//////////////////////////////////////////////////////////////////////////////

Class SceneWindow : WindowBase {
    Static [Int]$WindowLTRow           = 1
    Static [Int]$WindowLTColumn        = 30
    Static [Int]$WindowRBRow           = 20
    Static [Int]$WindowRBColumn        = 79
    Static [Int]$ImageDrawRowOffset    = [SceneWindow]::WindowLTRow + 1
    Static [Int]$ImageDrawColumnOffset = [SceneWindow]::WindowLTColumn + 1

    Static [String]$WindowTitle = 'Scene'

    Static [ATCoordinates]$SceneImageDrawCoordinates = [ATCoordinatesNone]::new()

    [Boolean]$SceneImageDirty
    [SceneImage]$Image

    SceneWindow() : base() {
        $this.LeftTop     = [ATCoordinates]::new([SceneWindow]::WindowLTRow, [SceneWindow]::WindowLTColumn)
        $this.RightBottom = [ATCoordinates]::new([SceneWindow]::WindowRBRow, [SceneWindow]::WindowRBColumn)

        $this.UpdateDimensions()
        $this.SetupTitle([SceneWindow]::WindowTitle, [CCTextDefault24]::new())

        $this.SceneImageDirty = $true
        $this.Image           = [SIEmpty]::new()

        [SceneWindow]::SceneImageDrawCoordinates = [ATCoordinates]@{
            Row    = [SceneWindow]::ImageDrawRowOffset
            Column = [SceneWindow]::ImageDrawColumnOffset
        }
    }

    [Void]Draw() {
        ([WindowBase]$this).Draw()

        If($this.SceneImageDirty -EQ $true) {
            # THRE MAY BE AN OPPORTUNITY TO DO SOMETHING A BIT DIFFERENT HERE
            $this.Image = $Script:CurrentMap.GetTileAtPlayerCoordinates().BackgroundImage
            Write-Host "$($this.Image.ToAnsiControlSequenceString())"
            $this.SceneImageDirty = $false
        }
    }

    [Void]UpdateCurrentImage(
        [SceneImage]$NewImage
    ) {
        $this.Image           = $NewImage
        $this.SceneImageDirty = $true
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# MESSAGE WINDOW
#
# THIS WINDOW DISPLAYS MESSAGES IN THE MAP NAVIGATION SCREEN.
#
#//////////////////////////////////////////////////////////////////////////////

Class MessageWindow : WindowBase {
    Static [Int]$MessageHistoryARef = 0
    Static [Int]$MessageHistoryBRef = 1
    Static [Int]$MessageHistoryCRef = 2
    Static [Int]$WindowLTRow        = 21
    Static [Int]$WindowLTColumn     = 1
    Static [Int]$WindowRBRow        = 25
    Static [Int]$WindowRBColumn     = 79

    Static [String]$WindowTitle = 'Messages'

    Static [ATCoordinates]$MessageADrawCoordinates = [ATCoordinatesNone]::new()
    Static [ATCoordinates]$MessageBDrawCoordinates = [ATCoordinatesNone]::new()
    Static [ATCoordinates]$MessageCDrawCoordinates = [ATCoordinatesNone]::new()

    Static [ATString]$MessageWindowBlank = [ATStringNone]::new()

    [ATStringComposite[]]$MessageHistory

    [Boolean]$MessageADirty
    [Boolean]$MessageBDirty
    [Boolean]$MessageCDirty

    MessageWindow() : base() {
        $this.LeftTop     = [ATCoordinates]::new([MessageWindow]::WindowLTRow, [MessageWindow]::WindowLTColumn)
        $this.RightBottom = [ATCoordinates]::new([MessageWindow]::WindowRBRow, [MessageWindow]::WindowRBColumn)

        $this.UpdateDimensions()
        $this.SetupTitle([MessageWindow]::WindowTitle, [CCTextDefault24]::new())

        [MessageWindow]::MessageCDrawCoordinates = [ATCoordinates]@{
            Row    = ($this.RightBottom.Row - 1)
            Column = ($this.LeftTop.Column + 1)
        }
        [MessageWindow]::MessageBDrawCoordinates = [ATCoordinates]@{
            Row    = ([MessageWindow]::MessageCDrawCoordinates.Row - 1)
            Column = ($this.LeftTop.Column + 1)
        }
        [MessageWindow]::MessageADrawCoordinates = [ATCoordinates]@{
            Row    = ([MessageWindow]::MessageBDrawCoordinates.Row - 1)
            Column = ($this.LeftTop.Column + 1)
        }
        [MessageWindow]::MessageWindowBlank = [ATString]@{
            Prefix     = [ATStringPrefix]::new()
            UserData   = '                                                                             '
            UseATReset = $true
        }
        $this.MessageHistory = @(
            [ATStringComposite]::new(),
            [ATStringComposite]::new(),
            [ATStringComposite]::new()
        )
        $this.MessageHistory[[MessageWindow]::MessageHistoryARef].CompositeActual[0].Prefix.Coordinates = [MessageWindow]::MessageADrawCoordinates
        $this.MessageHistory[[MessageWindow]::MessageHistoryBRef].CompositeActual[0].Prefix.Coordinates = [MessageWindow]::MessageBDrawCoordinates
        $this.MessageHistory[[MessageWindow]::MessageHistoryCRef].CompositeActual[0].Prefix.Coordinates = [MessageWindow]::MessageCDrawCoordinates
    }

    [Void]Draw() {
        ([WindowBase]$this).Draw()

        If($this.MessageADirty -EQ $true) {
            [MessageWindow]::MessageWindowBlank.Prefix.Coordinates = [MessageWindow]::MessageADrawCoordinates
            Write-Host "$([MessageWindow]::MessageWindowBlank.ToAnsiControlSequenceString())$([MessageWindow]::MessageADrawCoordinates.ToAnsiControlSequenceString())$($this.MessageHistory[[MessageWindow]::MessageHistoryARef].ToAnsiControlSequenceString())"
            $this.MessageADirty = $false
        }
        If($this.MessageBDirty -EQ $true) {
            [MessageWindow]::MessageWindowBlank.Prefix.Coordinates = [MessageWindow]::MessageBDrawCoordinates
            Write-Host "$([MessageWindow]::MessageWindowBlank.ToAnsiControlSequenceString())$([MessageWindow]::MessageBDrawCoordinates.ToAnsiControlSequenceString())$($this.MessageHistory[[MessageWindow]::MessageHistoryBRef].ToAnsiControlSequenceString())"
            $this.MessageBDirty = $false
        }
        If($this.MessageCDirty -EQ $true) {
            [MessageWindow]::MessageWindowBlank.Prefix.Coordinates = [MessageWindow]::MessageCDrawCoordinates
            Write-Host "$([MessageWindow]::MessageWindowBlank.ToAnsiControlSequenceString())$([MessageWindow]::MessageCDrawCoordinates.ToAnsiControlSequenceString())$($this.MessageHistory[[MessageWindow]::MessageHistoryCRef].ToAnsiControlSequenceString())"
            $this.MessageCDirty = $false
        }
    }

    [Void]WriteMessageComposite(
        [ATString[]]$Composite
    ) {
        $this.MessageHistory[[MessageWindow]::MessageHistoryARef].CompositeActual = [List[ATString]]::new($this.MessageHistory[[MessageWindow]::MessageHistoryBRef].CompositeActual)
        $this.MessageHistory[[MessageWindow]::MessageHistoryBRef].CompositeActual = [List[ATString]]::new($this.MessageHistory[[MessageWindow]::MessageHistoryCRef].CompositeActual)
        $this.MessageHistory[[MessageWindow]::MessageHistoryCRef].CompositeActual = [List[ATString]]::new($Composite)
        $this.MessageADirty                                                       = $true
        $this.MessageBDirty                                                       = $true
        $this.MessageCDirty                                                       = $true
    }

    [Void]WriteBadCommandMessage(
        [String]$Command
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                    Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                }
                UserData   = "$($Command)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' isn''t a valid command.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBadArg0Message(
        [String]$Command,
        [String]$Arg0
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = 'We can''t '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                    Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                }
                UserData   = "$($Command)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' with a(n) '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                }
                UserData   = "$($Arg0)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = '.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBadArg1Message(
        [String]$Command,
        [String]$Arg0,
        [String]$Arg1
    ) {
		$this.WriteMessageComposite(@(
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = 'We can''t '
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCAppleYellowDark24]::new()
					Decorations     = [ATDecoration]@{
						Blink = $true
					}
				}
				UserData   = "$($Command)"
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = ' with a(n) '
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCAppleYellowDark24]::new()
					Decorations     = [ATDecoration]@{
						Blink = $true
					}
				}
				UserData   = "$($Arg0)"
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = ' and a(n) '
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCAppleYellowDark24]::new()
					Decorations     = [ATDecoration]@{
						Blink = $true
					}
				}
				UserData   = "$($Arg1)"
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = '.'
				UseATReset = $true
			}
		))
    }

    [Void]WriteSomethingBadMessage() {
		$this.WriteMessageComposite(@(
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = 'I''m God, and I don''t know what just happened...'
				UseATReset = $true
			}
		))
    }

    [Void]WriteInvisibleWallEncounteredMessage() {
		$this.WriteMessageComposite(@(
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = 'The invisible wall blocks your path...'
				UseATReset = $true
			}
		))
    }

    [Void]WriteYouShallNotPassMessage() {
		$this.WriteMessageComposite(@(
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = 'The path you asked for is impossible...'
				UseATReset = $true
			}
		))
    }

    [Void]WriteMapNoItemsFoundMessage() {
		$this.WriteMessageComposite(@(
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = 'There''s nothing of interest here.'
				UseATReset = $true
			}
		))
    }

    [Void]WriteMapInvalidItemMessage(
        [String]$ItemName
    ) {
		$this.WriteMessageComposite(@(
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = 'There''s no '
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCAppleYellowDark24]::new()
					Decorations     = [ATDecoration]@{
						Blink = $true
					}
				}
				UserData   = "$($ItemName)"
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = ' here.'
				UseATReset = $true
			}
		))
    }

    [Void]WriteItemTakenMessage(
        [String]$ItemName
    ) {
		$this.WriteMessageComposite(@(
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = 'I''ve taken the '
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCAppleYellowDark24]::new()
					Decorations     = [ATDecoration]@{
						Blink = $true
					}
				}
				UserData   = "$($ItemName)"
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = ' and put it in my pocket.'
				UseATReset = $true
			}
		))
    }

    [Void]WriteItemCantTakeMessage(
        [String]$ItemName
    ) {
		$this.WriteMessageComposite(@(
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = 'It''s not possible to take the '
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCAppleYellowDark24]::new()
					Decorations     = [ATDecoration]@{
						Blink = $true
					}
				}
				UserData   = "$($ItemName)"
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = '.'
				UseATReset = $true
			}
		))
    }

    [Void]WriteCmdExtraArgsWarning(
        [String]$Command,
        [String[]]$ExtraArgs
    ) {
		$this.WriteMessageComposite(@(
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCAppleNPinkLight24]::new()
					Decorations     = [ATDecoration]@{
						Blink = $true
					}
				}
				UserData   = "$($Command)"
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = ' has garbage: '
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCAppleNYellowDark24]::new()
					Decorations     = [ATDecoration]@{
						Blink = $true
					}
				}
				UserData   = "$($ExtraArgs)"
				UseATReset = $true
			}
		))
    }

    [Void]WriteBadCommandRetortMessage() {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleNRedDark24]::new()
                }
                UserData   = "$($Script:BadCommandRetorts | Get-Random)"
                UseATReset = $true
            }
        ))
    }

    [Void]WriteCantUseItemMessage(
        [String]$Source,
        [String]$Target
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                }
                UserData   = 'Can''t use a(n) '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = "$($Source)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                }
                UserData   = ' on a(n) '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = "$($Target)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                }
                UserData   = '.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteCantUseItemOnSelfMessage(
        [String]$ItemName
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                }
                UserData   = 'I can''t use '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = "$($ItemName)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                }
                UserData   = ' on myself.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteNoItemInInvMessage(
        [String]$DesiredItem
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                }
                UserData   = 'There ain''t no '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = "$($DesiredItem)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                }
                UserData   = ' in your pockets guv''.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteNoItemTargetMessage(
        [String]$Source
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                }
                UserData   = 'You need to tell me what you want to use the '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = "$($Source)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                }
                UserData   = ' on.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteItemUseUnsureMessage(
        [String]$Target
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                }
                UserData   = 'I have no idea how to use a(n) '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = "$($Target)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                }
                UserData   = '.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteCantDropMultMessage() {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = 'Can''t drop all those items at once, bruh.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteItemDroppedMessage(
        [String]$ItemName
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = 'Dropped '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = "$($ItemName)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' from your inventory.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteMilkUseOkayMessage() {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = 'Hmmm. Delicious cow juice.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteMilkUseSpoiledMessage() {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = 'Now that wasn''t very smart, was it?'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteMilkUseNotNowMessage() {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = 'There''s no need to drink this now.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteTiedRopeToTreeMessage() {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = 'I''ve tied the '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = 'Rope'
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' to the '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = 'Tree'
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = '.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteLookMessage(
        [String]$ItemSetA,
        [String]$ItemSetB,
        [Boolean]$UseSetB
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = 'I can see the following things here:'
                UseATReset = $true
            }
        ))
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowLight24]::new()
                }
                UserData   = "$($ItemSetA)"
                UseATReset = $true
            }
        ))
        If($UseSetB -EQ $true) {
            $this.WriteMessageComposite(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAppleYellowLight24]::new()
                    }
                    UserData   = "$($ItemSetB)"
                    UseATReset = $true
                }
            ))
        }
    }

    [Void]WriteItemExamineMessage(
        [String]$ExamineString
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleMintDark24]::new()
                }
                UserData   = "$($ExamineString)"
                UseATReset = $true
            }
        ))
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# INVENTORY WINDOW
#
# AS WITH OTHER CLASSES, THE NAME OF THIS CLASS IS A BIT OF A MISNOMER.
# SPECIFICALLY, THIS CLASS INCORPORATES MULTIPLE WINDOWS TOGETHER INTO A SINGLE
# SCREEN. ALSO, THIS INVENTORY COVERS THE PLAYER'S ITEM INVENTORY AND NOT THE
# BATTLE ACTION INVENTORY, SO THERE'S A BIT TO BE DESIRED HERE. THIS WILL BE
# WORKED ON AFTER COVERAGE IS COMPLETED.
#
#//////////////////////////////////////////////////////////////////////////////

Class InventoryWindow : WindowBase {
    Static [Int]$WindowLTRow    = 1
    Static [Int]$WindowLTColumn = 1
    Static [Int]$WindowBRRow    = 20
    Static [Int]$WindowBRColumn = 79

    Static [String]$WindowTitle = 'Inventory'

    Static [String]$IChevronCharacter           = '❱'
    Static [String]$IChevronBlankCharacter      = ' '
    Static [String]$PagingChevronRightCharacter = "`u{1433}"
    Static [String]$PagingChevronLeftCharacter  = "`u{1438}"
    Static [String]$PagingChevronBlankCharater  = ' '

    Static [String]$DivLineHorizontalString = '─────────────────────────────────────────────────────────────────────────────'
    Static [String]$ZpLineBlank             = '                                                                             '
    Static [String]$DescLineBlank           = '                                                                          '
    Static [String]$ItemLabelBlank          = '               '

    Static [ATString]$PagingChevronRight = [ATString]@{
        Prefix = [ATStringPrefix]@{
            ForegroundColor = [CCAppleYellowLight24]::new()
            Coordinates     = [ATCoordinates]@{
                Row    = 2
                Column = 77
            }
        }
        UserData   = "$([InventoryWindow]::PagingChevronRightCharacter)"
        UseATReset = $true
    }
    Static [ATString]$PagingChevronLeft = [ATString]@{
        Prefix = [ATStringPrefix]@{
            ForegroundColor = [CCAppleYellowLight24]::new()
            Coordinates     = [ATCoordinates]@{
                Row    = 2
                Column = 3
            }
        }
        UserData   = "$([InventoryWindow]::PagingChevronLeftCharacter)"
        UseATReset = $true
    }
    Static [ATString]$PagingChevronRightBlank = [ATString]@{
        Prefix = [ATStringPrefix]@{
            ForegroundColor = [CCAppleMintLight24]::new()
            Coordinates     = [ATCoordinates]@{
                Row    = 2
                Column = 77
            }
        }
        UserData   = "$([InventoryWindow]::PagingChevronBlankCharater)"
        UseATReset = $true
    }
    Static [ATString]$PagingChevronLeftBlank = [ATString]@{
        Prefix = [ATStringPrefix]@{
            Coordinates = [ATCoordinates]@{
                Row    = 2
                Column = 3
            }
        }
        UserData   = "$([InventoryWindow]::PagingChevronBlankCharater)"
        UseATReset = $true
    }
    Static [ATString]$DivLineHorizontal = [ATString]@{
        Prefix = [ATStringPrefix]@{
            ForegroundColor = [CCTextDefault24]::new()
            Coordinates     = [ATCoordinates]@{
                Row    = 13
                Column = 2
            }
        }
        UserData   = "$([InventoryWindow]::DivLineHorizontalString)"
        UseATReset = $true
    }

    Static [Boolean]$DebugMode     = $false
    Static [Int]$MoronCounter      = 0
    Static [String]$ZeroPagePrompt = 'You have no items in your inventory.'

    [Boolean]$PlayerChevronDirty
    [Boolean]$PagingChevronRightDirty
    [Boolean]$PagingChevronLeftDirty
    [Boolean]$ItemsListDirty
    [Boolean]$CurrentPageDirty
    [Boolean]$PlayerChevronVisible
    [Boolean]$PagingChevronRightVisible
    [Boolean]$PagingChevronLeftVisible
    [Boolean]$ZeroPageActive
    [Boolean]$MoronPageActive
    [Boolean]$BookDirty
    [Boolean]$ActiveItemBlinking
    [Boolean]$DivLineDirty
    [Boolean]$ItemDescDirty
    [Boolean]$ZpBlankedDirty
    [Boolean]$ZpPromptDirty

    [Int]$ItemsPerPage
    [Int]$NumPages
    [Int]$CurrentPage
    [Int]$ActiveIChevronIndex
    [List[MapTileObject]]$PageRefs
    [List[ValueTuple[[ATString], [Boolean]]]]$IChevrons
    [List[ATString]]$ItemLabels
    [List[ATString]]$ItemLabelBlanks

    InventoryWindow() : base() {
        $this.LeftTop          = [ATCoordinates]@{
            Row    = [InventoryWindow]::WindowLTRow
            Column = [InventoryWindow]::WindowLTColumn
        }
        $this.RightBottom      = [ATCoordinates]@{
            Row    = [InventoryWindow]::WindowBRRow
            Column = [InventoryWindow]::WindowBRColumn
        }

        $this.UpdateDimensions()
        $this.SetupTitle([InventoryWindow]::WindowTitle, [CCTextDefault24]::new())

        $this.PlayerChevronDirty        = $true
        $this.PagingChevronRightDirty   = $true
        $this.PagingChevronLeftDirty    = $true
        $this.ItemsListDirty            = $true
        $this.CurrentPageDirty          = $true
        $this.PlayerChevronVisible      = $true
        $this.PagingChevronRightVisible = $false
        $this.PagingChevronLeftVisible  = $false
        $this.ZeroPageActive            = $false
        $this.MoronPageActive           = $false
        $this.BookDirty                 = $true
        $this.ActiveItemBlinking        = $false
        $this.DivLineDirty              = $true
        $this.ItemDescDirty             = $true
        $this.ZpBlankedDirty            = $true
        $this.ZpPromptDirty             = $true
        $this.ItemsPerPage              = 10
        $this.NumPages                  = 1
        $this.CurrentPage               = 1
        $this.PageRefs                  = [List[MapTileObject]]::new()

        $this.CreateIChevrons()
    }

    [Void]Draw() {
        ([WindowBase]$this).Draw()

        If($this.BookDirty -EQ $true) {
            $this.CalculateNumPages()
            $this.BookDirty = $false
        }
        If($this.CurrentPageDirty -EQ $true) {
            $this.PopulatePage()
        }
        If($this.ZeroPageActive -EQ $true) {
            If($this.MoronPageActive -EQ $true) {
                $this.WriteMoronPage()
            } Else {
                $this.WriteZeroInventoryPage()
            }
        } Else {
            If($this.DivLineDirty -EQ $true) {
                Write-Host "$([InventoryWindow]::DivLineHorizontal.ToAnsiControlSequenceString())"
                $this.DivLineDirty = $false
            }
            If(($this.PlayerChevronVisible -EQ $true) -AND ($this.PlayerChevronDirty -EQ $true)) {
                Foreach($ic in $this.IChevrons) {
                    Write-Host "$($ic.Item1.ToAnsiControlSequenceString())"
                }
                $this.PlayerChevronDirty = $false
            }
            If($this.NumPages -GT 1) {
                If($this.CurrentPage -EQ 1) {
                    If($this.PagingChevronLeftVisible -EQ $true) {
                        Write-Host "$([InventoryWindow]::PagingChevronLeftBlank.ToAnsiControlSequenceString())"
                        $this.PagingChevronLeftVisible = $false
                        $this.PagingChevronLeftDirty   = $true
                    }
                    If($this.PagingChevronRightVisible -EQ $false) {
                        $this.PagingChevronRightVisible = $true
                    }
                    If(($this.PagingChevronRightVisible -EQ $true) -AND ($this.PagingChevronRightDirty -EQ $true)) {
                        Write-Host "$([InventoryWindow]::PagingChevronRight.ToAnsiControlSequenceString())"
                        $this.PagingChevronRightDirty = $false
                    }
                } Elseif(($this.CurrentPage -GT 1) -AND ($this.CurrentPage -LT $this.NumPages)) {
                    If($this.PagingChevronLeftVisible -EQ $false) {
                        $this.PagingChevronLeftVisible = $true
                    }
                    If($this.PagingChevronRightVisible -EQ $false) {
                        $this.PagingChevronRightVisible = $true
                    }
                    If(($this.PagingChevronRightVisible -EQ $true) -AND ($this.PagingChevronRightDirty -EQ $true)) {
                        Write-Host "$([InventoryWindow]::PagingChevronRight.ToAnsiControlSequenceString())"
                        $this.PagingChevronRightDirty = $false
                    }
                    If(($this.PagingChevronLeftVisible -EQ $true) -AND ($this.PagingChevronLeftDirty -EQ $true)) {
                        Write-Host "$([InventoryWindow]::PagingChevronLeft.ToAnsiControlSequenceString())"
                        $this.PagingChevronLeftDirty = $false
                    }
                } Elseif($this.CurrentPage -GE $this.NumPages) {
                    If($this.PagingChevronRightVisible -EQ $true) {
                        Write-Host "$([InventoryWindow]::PagingChevronRightBlank.ToAnsiControlSequenceString())"
                        $this.PagingChevronRightVisible = $false
                        $this.PagingChevronRightDirty   = $true
                    }
                    If($this.PagingChevronLeftVisible -EQ $false) {
                        $this.PagingChevronLeftVisible = $true
                    }
                    If(($this.PagingChevronLeftVisible -EQ $true) -AND ($this.PagingChevronLeftDirty -EQ $true)) {
                        Write-Host "$([InventoryWindow]::PagingChevronLeft.ToAnsiControlSequenceString())"
                        $this.PagingChevronLeftDirty = $false
                    }
                }
            } Elseif($this.NumPages -EQ 1) {
                If($this.PagingChevronLeftVisible -EQ $true) {
                    $this.PagingChevronLeftVisible = $false
                }
                If($this.PagingChevronRightVisible -EQ $true) {
                    $this.PagingChevronRightVisible = $false
                }
                If($this.PagingChevronLeftVisible -EQ $false) {
                    Write-Host "$([InventoryWindow]::PagingChevronLeftBlank.ToAnsiControlSequenceString())"
                }
                If($this.PagingChevronRightVisible -EQ $false) {
                    Write-Host "$([InventoryWindow]::PagingChevronRightBlank.ToAnsiControlSequenceString())"
                }
            }
            If($this.ActiveItemBlinking -EQ $false) {
                $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations = [ATDecoration]@{
                    Blink = $true
                }
                $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCListItemCurrentHighlight24]::new()
                $this.ItemsListDirty                                               = $true
                $this.ActiveItemBlinking                                           = $true
            }
            If($this.ItemsListDirty -EQ $true) {
                $this.WriteItemLabels()
                Write-Host "$([ATControlSequences]::CursorHide)"
                $this.ItemsListDirty = $false
            }
            If($this.ItemDescDirty -EQ $true) {
                [ATString]$b = [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = 15
                            Column = 4
                        }
                    }
                    UserData   = [InventoryWindow]::DescLineBlank
                    UseATReset = $true
                }
                [ATString]$d = [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = 15
                            Column = 4
                        }
                    }
                    UserData   = $this.PageRefs[$this.ActiveIChevronIndex].ExamineString
                    UseATReset = $true
                }
                [ATString]$f = [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = 16
                            Column = 4
                        }
                    }
                    UserData   = [InventoryWindow]::DescLineBlank
                    UseATReset = $true
                }
                [ATString]$e = [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCApplePinkLight24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = 16
                            Column = 4
                        }
                    }
                    UserData   = $this.PageRefs[$this.ActiveIChevronIndex].PlayerEffectString
                    UseATReset = $true
                }
                [ATString]$h = [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = 17
                            Column = 4
                        }
                    }
                    UserData   = [InventoryWindow]::DescLineBlank
                    UseATReset = $true
                }
                [ATString]$i = [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAppleYellowLight24]::new()
                        Decorations     = [ATDecoration]@{
                            Blink  = $true
                            Italic = $true
                        }
                        Coordinates = [ATCoordinates]@{
                            Row    = 17
                            Column = 4
                        }
                    }
                    UserData   = ($this.PageRefs[$this.ActiveIChevronIndex].KeyItem -EQ $true ? 'KEY ITEM' : '')
                    UseATReset = $true
                }
                Write-Host "$($b.ToAnsiControlSequenceString())$($d.ToAnsiControlSequenceString())$($f.ToAnsiControlSequenceString())$($e.ToAnsiControlSequenceString())$($h.ToAnsiControlSequenceString())$($i.ToAnsiControlSequenceString())"
            }
        }
    }

    [Void]CreateIChevrons() {
        $this.IChevrons = [List[ValueTuple[[ATString], [Boolean]]]]::new()
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = 3
                        Column = 15
                    }
                }
                UserData   = [InventoryWindow]::IChevronCharacter
                UseATReset = $true
            },
            $true
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = 5
                        Column = 15
                    }
                }
                UserData = [InventoryWindow]::IChevronBlankCharacter
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates      = [ATCoordinates]@{
                        Row    = 7
                        Column = 15
                    }
                }
                UserData = [InventoryWindow]::IChevronBlankCharacter
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = 9
                        Column = 15
                    }
                }
                UserData = [InventoryWindow]::IChevronBlankCharacter
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = 11
                        Column = 15
                    }
                }
                UserData = [InventoryWindow]::IChevronBlankCharacter
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = 3
                        Column = 50
                    }
                }
                UserData = [InventoryWindow]::IChevronBlankCharacter
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = 5
                        Column = 50
                    }
                }
                UserData = [InventoryWindow]::IChevronBlankCharacter
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = 7
                        Column = 50
                    }
                }
                UserData = [InventoryWindow]::IChevronBlankCharacter
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = 9
                        Column = 50
                    }
                }
                UserData = [InventoryWindow]::IChevronBlankCharacter
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = 11
                        Column = 50
                    }
                }
                UserData = [InventoryWindow]::IChevronBlankCharacter
            },
            $false
        ))
    }

    [Void]CreateItemLabels() {
        $this.ItemLabels = [List[ATString]]::new()
        [Int]$c          = 0

        Foreach($i in $this.PageRefs) {
            $this.ItemLabels.Add(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.IChevrons[$c].Item1.Prefix.Coordinates.Row
                            Column = $this.IChevrons[$c].Item1.Prefix.Coordinates.Column + 2
                        }
                    }
                    UserData = $i.Name
                    UseATReset = $true
                }
            )
            $c++ # FYI - This was intentional
        }
        $this.ResetIChevronPosition()
        $this.CreateItemLabelBlanks()
    }

    [Void]CreateItemLabelBlanks() {
        $this.ItemLabelBlanks = [List[ATString]]::new()
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = 3
                        Column = 17
                    }
                }
                UserData   = [InventoryWindow]::ItemLabelBlank
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = 5
                        Column = 17
                    }
                }
                UserData   = [InventoryWindow]::ItemLabelBlank
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = 7
                        Column = 17
                    }
                }
                UserData   = [InventoryWindow]::ItemLabelBlank
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = 9
                        Column = 17
                    }
                }
                UserData   = [InventoryWindow]::ItemLabelBlank
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = 11
                        Column = 17
                    }
                }
                UserData   = [InventoryWindow]::ItemLabelBlank
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = 3
                        Column = 52
                    }
                }
                UserData   = [InventoryWindow]::ItemLabelBlank
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = 5
                        Column = 52
                    }
                }
                UserData   = [InventoryWindow]::ItemLabelBlank
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = 7
                        Column = 52
                    }
                }
                UserData   = [InventoryWindow]::ItemLabelBlank
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = 9
                        Column = 52
                    }
                }
                UserData   = [InventoryWindow]::ItemLabelBlank
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = 11
                        Column = 52
                    }
                }
                UserData   = [InventoryWindow]::ItemLabelBlank
                UseATReset = $true
            }
        )
    }

    [Void]CalculateNumPages() {
        $pp = $Script:ThePlayer.Inventory.Count / $this.ItemsPerPage
        If($pp -LT 1) {
            $this.NumPages = 1
        } Else {
            $this.NumPages = [Math]::Ceiling($pp)
        }
        If($this.CurrentPage -GT $this.NumPages) {
            $this.CurrentPage = $this.NumPages
        }
    }

    [Void]TurnPageForward() {
        If(($this.CurrentPage + 1) -LE $this.NumPages) {
            $this.CurrentPage++
            $this.CurrentPageDirty   = $true
            $this.ActiveItemBlinking = $false
            $this.ItemDescDirty      = $true
        }
    }

    [Void]TurnPageBackward() {
        If(($this.CurrentPage - 1) -GE 1) {
            $this.CurrentPage--
            $this.CurrentPageDirty   = $true
            $this.ActiveItemBlinking = $false
            $this.ItemDescDirty      = $true
        }
    }

    [Void]PopulatePage() {
        If($Script:ThePlayer.Inventory.Count -LE 0) {
            $this.ZeroPageActive   = $true
            $this.CurrentPageDirty = $false
            $this.ZpPromptDirty    = $true
            $this.ZpBlankedDirty   = $true

            If([InventoryWindow]::MoronCounter -LT 20) {
                [InventoryWindow]::MoronCounter++
            } Else {
                $this.MoronPageActive = $true
            }
        } Else {
            $this.PageRefs        = [List[MapTileObject]]::new()
            $this.ZeroPageActive  = $false
            $this.MoronPageActive = $false
            $rs                   = (($this.CurrentPage * $this.ItemsPerPage) - $this.ItemsPerPage)
            $rs                   = [Math]::Clamp($rs, 0, [Int]::MaxValue)
            $re                   = 10

            Try {
                $this.PageRefs = $Script:ThePlayer.Inventory.GetRange($rs, $re)
            } Catch {
                $this.PageRefs = $Script:ThePlayer.Inventory.GetRange($rs, ($Script:ThePlayer.Inventory.Count - $rs))
            }
            $this.CreateItemLabels()
            $this.ItemsListDirty   = $true
            $this.CurrentPageDirty = $false
        }
    }

    [Void]WriteItemLabels() {
        Foreach($i in $this.ItemLabelBlanks) {
            Write-Host "$($i.ToAnsiControlSequenceString())"
        }
        Foreach($i in $this.ItemLabels) {
            Write-Host "$($i.ToAnsiControlSequenceString())"
        }
    }

    [ATString]GetActiveIChevron() {
        $this.ActiveIChevronIndex = 0
        Foreach($a in $this.IChevrons) {
            If($a.Item2 -EQ $true) {
                Return $a.Item1
            }
            $this.ActiveIChevronIndex++
        }
        $this.ActiveIChevronIndex                        = 0
        $this.IChevrons[$this.ActiveIChevronIndex].Item2 = $true

        Return $this.IChevrons[$this.ActiveIChevronIndex].Item1
    }

    [Void]WriteZeroInventoryPage() {
        If($this.ZpBlankedDirty -EQ $true) {
            Foreach($a in 2..19) {
                [ATString]$b = [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $a
                            Column = 2
                        }
                    }
                    UserData   = [InventoryWindow]::ZpLineBlank
                    UseATReset = $true
                }
                Write-Host "$($b.ToAnsiControlSequenceString())"
            }
            $this.ZpBlankedDirty = $false
        }
        If($this.ZpPromptDirty -EQ $true) {
            [ATString]$a = [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.Height / 2
                        Column = ($this.Width / 2) - ([InventoryWindow]::ZeroPagePrompt.Length / 2)
                    }
                }
                UserData   = [InventoryWindow]::ZeroPagePrompt
                UseATReset = $true
            }
            Write-Host "$($a.ToAnsiControlSequenceString())"
            $this.ZpPromptDirty = $false
        }
    }

    [Void]WriteMoronPage() {}

    [Void]ResetIChevronPosition() {
        $this.IChevrons[$this.ActiveIChevronIndex].Item2          = $false
        $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData = [InventoryWindow]::IChevronBlankCharacter
        Try {
            $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecorationNone]::new()
            $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCTextDefault24]::new()
        } Catch {}
        $this.ActiveIChevronIndex                                          = 0
        $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $true
        $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = [InventoryWindow]::IChevronCharacter
        $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecoration]@{
            Blink = $true
        }
        $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCApplePinkLight24]::new()
        $this.PlayerChevronDirty                                           = $true
        $this.ActiveItemBlinking                                           = $false
        $this.ItemDescDirty                                                = $true
    }

    [Void]HandleInput() {
        $keyCap = $(Get-Host).UI.RawUI.ReadKey('IncludeKeyDown, NoEcho')

        #######################################################################
        #
        # BECAUSE POWERSHELL HAS BEEN REALLY WEIRD ABOUT MAPPING THE VALUE
        # OF VIRTUALKEYCODE TO AN ENUMERATION, TYPED OR OTHERWISE, I SHOULD
        # COMMENT THE MAPPINGS HERE SO THAT IT'S OBVIOUS WHAT KEY IS DOING
        # WHAT.
        #
        #######################################################################
        Switch($keyCap.VirtualKeyCode) {
            27 {
                $Script:ThePreviousGlobalGameState = $Script:TheGlobalGameState
                $Script:TheGlobalGameState         = [GameStatePrimary]::GamePlayScreen
            }

            38 {
                If(($this.ActiveIChevronIndex - 1) -GE 0) {
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $false
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = [InventoryWindow]::IChevronBlankCharacter
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecorationNone]::new()
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCTextDefault24]::new()
                    $this.ActiveIChevronIndex--
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $true
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = [InventoryWindow]::IChevronCharacter
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCApplePinkLight24]::new()
                }
                $this.PlayerChevronDirty = $true
                $this.ActiveItemBlinking = $false
                $this.ItemDescDirty      = $true
            }

            40 {
                If(($this.ActiveIChevronIndex + 1) -LT $this.PageRefs.Count) {
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $false
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = [InventoryWindow]::IChevronBlankCharacter
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecorationNone]::new()
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCTextDefault24]::new()
                    $this.ActiveIChevronIndex++
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $true
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = [InventoryWindow]::IChevronCharacter
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCApplePinkLight24]::new()
                }
                $this.PlayerChevronDirty                                               = $true
                $this.ActiveItemBlinking                                               = $false
                $this.ItemDescDirty                                                    = $true
            }

            39 {
                If(($this.ActiveIChevronIndex + 5) -LT $this.PageRefs.Count) {
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $false
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = [InventoryWindow]::IChevronBlankCharacter
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecorationNone]::new()
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCTextDefault24]::new()
                    $this.ActiveIChevronIndex += 5
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $true
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = [InventoryWindow]::IChevronCharacter
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCApplePinkLight24]::new()
                }
                $this.PlayerChevronDirty                                               = $true
                $this.ActiveItemBlinking                                               = $false
                $this.ItemDescDirty                                                    = $true
            }

            37 {
                If(($this.ActiveIChevronIndex -5) -GE 0) {
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $false
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = [InventoryWindow]::IChevronBlankCharacter
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecorationNone]::new()
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCTextDefault24]::new()
                    $this.ActiveIChevronIndex -= 5
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $true
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = [InventoryWindow]::IChevronCharacter
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCApplePinkLight24]::new()
                }
                $this.PlayerChevronDirty                                               = $true
                $this.ActiveItemBlinking                                               = $false
                $this.ItemDescDirty                                                    = $true
            }

            68 {
                $this.TurnPageForward()
            }

            65 {
                $this.TurnPageBackward()
            }

            83 {
                Switch($this.CurrentPage) {
                    1 {
                        [ItemRemovalStatus]$a = $Script:ThePlayer.RemoveInventoryItemByIndex($this.ActiveIChevronIndex)
                        If($a -EQ [ItemRemovalStatus]::Success) {
                            [Console]::Beep(493.9, 250)
                            [Console]::Beep((493.9 * 2), 250)
                            $this.BookDirty        = $true
                            $this.CurrentPageDirty = $true

                            Return
                        }
                        [Console]::Beep(493.9, 250)
                        [Console]::Beep((493.9 / 2), 250)
                    }

                    { $_ -GT 1 } {
                        [Int]$a               = ((10 * ($this.CurrentPage - 1)) + $this.ActiveIChevronIndex)
                        [ItemRemovalStatus]$b = $Script:ThePlayer.RemoveInventoryItemByIndex($a)
                        If($b -EQ [ItemRemovalStatus]::Success) {
                            [Console]::Beep(493.9, 250)
                            [Console]::Beep((493.9 * 2), 250)
                            $this.BookDirty        = $true
                            $this.CurrentPageDirty = $true

                            Return
                        }
                        [Console]::Beep(493.9, 250)
                        [Console]::Beep((493.9 / 2), 250)
                    }
                }
            }
        }
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# BATTLE ENTITY STATUS WINDOW
#
# THIS IS THE STATUS WINDOW THAT DISPLAYS THE STATUS OF A BATTLE ENTITY IN THE
# BATTLE SCREEN.
#
# BECAUSE IN THE BATTLE SCREEN MULTIPLE INSTANCES OF THIS WINDOW EXIST, THERE
# ARE SOME ANTI-PATTERNS EXHIBITED HERE IN RELATION TO THE OTHER WINDOWS. THE
# FOLLOWING VARIABLES ARE DEMOTED FROM STATIC TO INSTANCE MEMBERS:
#
# WINDOWLTROW
# WINDOWLTCOLUMN
# WINDOWRBROW
# WINDOWRBCOLUMN
#
#//////////////////////////////////////////////////////////////////////////////

Class BattleEntityStatusWindow : WindowBase {
    Static [String]$FullLineBlankActual    = '                '

    [ATCoordinates]$HpDrawCoordinates
    [ATCoordinates]$MpDrawCoordinates
    [ATCoordinates]$StatL1DrawCoordinates
    [ATCoordinates]$StatL2DrawCoordinates
    [ATCoordinates]$StatL3DrawCoordinates
    [ATCoordinates]$StatL4DrawCoordinates
    [Int]$WindowLTRow
    [Int]$WindowLTColumn
    [Int]$WindowRBRow
    [Int]$WindowRBColumn
    [Boolean]$HpDrawDirty
    [Boolean]$MpDrawDirty
    [Boolean]$StatL1DrawDirty
    [Boolean]$StatL2DrawDirty
    [Boolean]$StatL3DrawDirty
    [Boolean]$StatL4DrawDirty
    [Boolean]$EntityBattlePhaseActive
    [Boolean]$HasSetEntityActive
    [ATString]$FullLineBlank
    [ATStringComposite]$HpDrawString
    [ATStringComposite]$MpDrawString
    [ATStringComposite]$StatL1DrawString
    [ATStringComposite]$StatL2DrawString
    [ATStringComposite]$StatL3DrawString
    [ATStringComposite]$StatL4DrawString
    [BattleEntity]$BERef

    BattleEntityStatusWindow() : base() {
        $this.WindowLTRow    = 1
        $this.WindowLTColumn = 1
        $this.WindowRBRow    = 1
        $this.WindowRBColumn = 1
        $this.LeftTop = [ATCoordinates]@{
            Row    = $this.WindowLTRow
            Column = $this.WindowLTColumn
        }
        $this.RightBottom = [ATCoordinates]@{
            Row    = $this.WindowRBRow
            Column = $this.WindowRBColumn
        }

        $this.UpdateDimensions()

        [Int]$ColDef = $this.LeftTop.Column + 2
        $this.HpDrawCoordinates = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 2
            Column = $ColDef
        }
        $this.MpDrawCoordinates = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 5
            Column = $ColDef
        }
        $this.StatL1DrawCoordinates = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 9
            Column = $ColDef
        }
        $this.StatL2DrawCoordinates = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 11
            Column = $ColDef
        }
        $this.StatL3DrawCoordinates = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 13
            Column = $ColDef
        }
        $this.StatL4DrawCoordinates = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 15
            Column = $ColDef
        }
        $this.HpDrawDirty             = $true
        $this.MpDrawDirty             = $true
        $this.StatL1DrawDirty         = $true
        $this.StatL2DrawDirty         = $true
        $this.StatL3DrawDirty         = $true
        $this.StatL4DrawDirty         = $true
        $this.EntityBattlePhaseActive = $false
        $this.HasSetEntityActive      = $false
        $this.BERef                   = $null
        $this.FullLineBlank           = [ATString]@{
            UserData   = [BattleEntityStatusWindow]::FullLineBlankActual
            UseATReset = $true
        }
    }

    BattleEntityStatusWindow(
        [Int]$WindowLTRow,
        [Int]$WindowLTColumn,
        [Int]$WindowRBRow,
        [Int]$WindowRBColumn,
        [BattleEntity]$BERef
    ) : base() {
        $this.WindowLTRow    = $WindowLTRow
        $this.WindowLTColumn = $WindowLTColumn
        $this.WindowRBRow    = $WindowRBRow
        $this.WindowRBColumn = $WindowRBColumn
        $this.LeftTop = [ATCoordinates]@{
            Row    = $this.WindowLTRow
            Column = $this.WindowLTColumn
        }
        $this.RightBottom = [ATCoordinates]@{
            Row    = $this.WindowRBRow
            Column = $this.WindowRBColumn
        }

        $this.UpdateDimensions()

        [Int]$ColDef = $this.LeftTop.Column + 2
        $this.HpDrawCoordinates = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 2
            Column = $ColDef
        }
        $this.MpDrawCoordinates = [ATCoordinates]@{
            Row    = $this.HpDrawCoordinates.Row + 3
            Column = $ColDef
        }
        $this.StatL1DrawCoordinates = [ATCoordinates]@{
            Row    = $this.MpDrawCoordinates.Row + 3
            Column = $ColDef
        }
        $this.StatL2DrawCoordinates = [ATCoordinates]@{
            Row    = $this.StatL1DrawCoordinates.Row + 2
            Column = $ColDef
        }
        $this.StatL3DrawCoordinates = [ATCoordinates]@{
            Row    = $this.StatL2DrawCoordinates.Row + 2
            Column = $ColDef
        }
        $this.StatL4DrawCoordinates = [ATCoordinates]@{
            Row    = $this.StatL3DrawCoordinates.Row + 2
            Column = $ColDef
        }
        $this.HpDrawDirty             = $true
        $this.MpDrawDirty             = $true
        $this.StatL1DrawDirty         = $true
        $this.StatL2DrawDirty         = $true
        $this.StatL3DrawDirty         = $true
        $this.StatL4DrawDirty         = $true
        $this.EntityBattlePhaseActive = $false
        $this.HasSetEntityActive      = $false
        $this.BERef                   = $BERef
        $this.FullLineBlank           = [ATString]@{
            Prefix     = [ATStringPrefix]::new()
            UserData   = [BattleEntityStatusWindow]::FullLineBlankActual
            UseATReset = $true
        }

        $this.SetupTitle("$(
            (
                [ATStringComposite]::new(@(
                    [ATString]@{
                        Prefix = [ATStringPrefix]@{
                            ForegroundColor = $Script:BATAdornmentCharTable[$this.BERef.Affinity].Item2
                        }
                        UserData   = "$($Script:BATAdornmentCharTable[$this.BERef.Affinity].Item1)"
                        UseATReset = $true
                    },
                    [ATString]@{
                        Prefix = [ATStringPrefix]@{
                            ForegroundColor = $this.BERef.NameDrawColor
                        }
                        UserData   = " $($this.BERef.Name)"
                        UseATReset = $true
                    }
                ))
            ).ToAnsiControlSequenceString()
        )", $this.BERef.NameDrawColor)
    }

    [Void]Draw() {
        If(($this.EntityBattlePhaseActive -EQ $true) -AND ($this.HasSetEntityActive -EQ $false)) {
            $this.BorderDrawColors = [ConsoleColor24[]](
                [CCAppleYellowDark24]::new(),
                [CCAppleYellowDark24]::new(),
                [CCAppleYellowDark24]::new(),
                [CCAppleYellowDark24]::new(),
                [CCAppleYellowDark24]::new(),
                [CCAppleYellowDark24]::new(),
                [CCAppleYellowDark24]::new(),
                [CCAppleYellowDark24]::new()
            )
            $this.BorderDrawDirty = [Boolean[]](
                $true,
                $true,
                $true,
                $true,
                $true,
                $true,
                $true,
                $true
            )
            $this.HasSetEntityActive = $true
            $this.TitleDirty         = $true
        } Elseif($this.EntityBattlePhaseActive -EQ $false) {
            $this.BorderDrawColors = [ConsoleColor24[]](
                [CCWindowBorderDefault24]::new(),
                [CCWindowBorderDefault24]::new(),
                [CCWindowBorderDefault24]::new(),
                [CCWindowBorderDefault24]::new(),
                [CCWindowBorderDefault24]::new(),
                [CCWindowBorderDefault24]::new(),
                [CCWindowBorderDefault24]::new(),
                [CCWindowBorderDefault24]::new()
            )
            $this.BorderDrawDirty = [Boolean[]](
                $true,
                $true,
                $true,
                $true,
                $true,
                $true,
                $true,
                $true
            )
            $this.HasSetEntityActive = $false
            $this.TitleDirty         = $true
        }

        ([WindowBase]$this).Draw()
        If($this.HpDrawDirty -EQ $true) {
            $this.CreateHpDrawString()
            $this.FullLineBlank.Prefix.Coordinates = [ATCoordinates]::new($this.HpDrawCoordinates)
            Write-Host "$($this.FullLineBlank.ToAnsiControlSequenceString())"
            $this.FullLineBlank.Prefix.Coordinates.Row++
            Write-Host "$($this.FullLineBlank.ToAnsiControlSequenceString())$($this.HpDrawString.ToAnsiControlSequenceString())"
            $this.HpDrawDirty = $false
        }
        If($this.MpDrawDirty -EQ $true) {
            $this.CreateMpDrawString()
            $this.FullLineBlank.Prefix.Coordinates = [ATCoordinates]::new($this.MpDrawCoordinates)
            Write-Host "$($this.FullLineBlank.ToAnsiControlSequenceString())$($this.MpDrawString.ToAnsiControlSequenceString())"
            $this.MpDrawDirty = $false
        }
        If($this.StatL1DrawDirty -EQ $true) {
            $this.CreateStatL1DrawString()
            $this.FullLineBlank.Prefix.Coordinates = [ATCoordinates]::new($this.StatL1DrawCoordinates)
            Write-Host "$($this.FullLineBlank.ToAnsiControlSequenceString())$($this.StatL1DrawString.ToAnsiControlSequenceString())"
            $this.StatL1DrawDirty = $false
        }
        If($this.StatL2DrawDirty -EQ $true) {
            $this.CreateStatL2DrawString()
            $this.FullLineBlank.Prefix.Coordinates = [ATCoordinates]::new($this.StatL2DrawCoordinates)
            Write-Host "$($this.FullLineBlank.ToAnsiControlSequenceString())$($this.StatL2DrawString.ToAnsiControlSequenceString())"
            $this.StatL2DrawDirty = $false
        }
        If($this.StatL3DrawDirty -EQ $true) {
            $this.CreateStatL3DrawString()
            $this.FullLineBlank.Prefix.Coordinates = [ATCoordinates]::new($this.StatL3DrawCoordinates)
            Write-Host "$($this.FullLineBlank.ToAnsiControlSequenceString())$($this.StatL3DrawString.ToAnsiControlSequenceString())"
            $this.StatL3DrawDirty = $false
        }
        If($this.StatL4DrawDirty -EQ $true) {
            $this.CreateStatL4DrawString()
            $this.FullLineBlank.Prefix.Coordinates = [ATCoordinates]::new($this.StatL4DrawCoordinates)
            Write-Host "$($this.FullLineBlank.ToAnsiControlSequenceString())$($this.StatL4DrawString.ToAnsiControlSequenceString())"
            $this.StatL4DrawDirty = $false
        }
    }

    [Void]CreateHpDrawString() {
        [ConsoleColor24]$NumDrawColor = [CCTextDefault24]::new()
        [ATDecoration]$NumDeco        = [ATDecorationNone]::new()

        Switch($this.BERef.Stats[[StatId]::HitPoints].State) {
            ([StatNumberState]::Normal) {
                $NumDrawColor = [BattleEntityProperty]::StatNumDrawColorSafe
            }

            ([StatNumberState]::Caution) {
                $NumDrawColor = [BattleEntityProperty]::StatNumDrawColorCaution
            }

            ([StatNumberState]::Danger) {
                $NumDrawColor = [BattleEntityProperty]::StatNumDrawColorDanger
                $NumDeco      = [ATDecoration]@{
                    Blink = $true
                }
            }

            Default {
                $NumDrawColor = [BattleEntityProperty]::StatNumDrawColorSafe
            }
        }

        $this.HpDrawString = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates     = $this.HpDrawCoordinates
                }
                UserData = 'H '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $NumDrawColor
                    Decorations     = $NumDeco
                }
                UserData = "$($this.BERef.Stats[[StatId]::HitPoints].Base)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.HpDrawCoordinates.Row + 1
                        Column = $this.HpDrawCoordinates.Column + 6
                    }
                }
                UserData = '/ '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $NumDrawColor
                    Decorations     = $NumDeco
                }
                UserData   = "$($this.BERef.Stats[[StatId]::HitPoints].Max)"
                UseATReset = $true
            }
        ))
    }

    [Void]CreateMpDrawString() {
        [ConsoleColor24]$NumDrawColor = [CCTextDefault24]::new()
        [ATDecoration]$NumDeco        = [ATDecorationNone]::new()

        Switch($this.BERef.Stats[[StatId]::MagicPoints].State) {
            ([StatNumberState]::Normal) {
                $NumDrawColor = [BattleEntityProperty]::StatNumDrawColorSafe
            }

            ([StatNumberState]::Caution) {
                $NumDrawColor = [BattleEntityProperty]::StatNumDrawColorCaution
            }

            ([StatNumberState]::Danger) {
                $NumDrawColor = [BattleEntityProperty]::StatNumDrawColorDanger
                $NumDeco      = [ATDecoration]@{
                    Blink = $true
                }
            }

            Default {
                $NumDrawColor = [BattleEntityProperty]::StatNumDrawColorSafe
            }
        }

        $this.MpDrawString = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates     = $this.MpDrawCoordinates
                }
                UserData = 'M '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $NumDrawColor
                    Decorations     = $NumDeco
                }
                UserData = "$($this.BERef.Stats[[StatId]::MagicPoints].Base)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.MpDrawCoordinates.Row + 1
                        Column = $this.MpDrawCoordinates.Column + 6
                    }
                }
                UserData = '/ '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $NumDrawColor
                    Decorations     = $NumDeco
                }
                UserData   = "$($this.BERef.Stats[[StatId]::MagicPoints].Max)"
                UseATReset = $true
            }
        ))
    }

    [Void]CreateStatL1DrawString() {
        [BattleEntityProperty]$AtkStat = $this.BERef.Stats[[StatId]::Attack]
        [BattleEntityProperty]$DefStat = $this.BERef.Stats[[StatId]::Defense]
        [ConsoleColor24]$AtkDrawColor  = [CCTextDefault24]::new()
        [ConsoleColor24]$DefDrawColor  = [CCTextDefault24]::new()
        [String]$AtkStatSignStr        = ''
        [String]$DefStatSignStr        = ''
        [String]$AtkStatFmtStr         = ''
        [String]$DefStatFmtStr         = ''

        If($AtkStat.AugmentTurnDuration -GT 0) {
            Switch($AtkStat.BaseAugmentValue) {
                { $_ -GT 0 } {
                    $AtkDrawColor   = [BattleEntityProperty]::StatAugDrawColorPositive
                    $AtkStatSignStr = '+'
                }

                { $_ -LT 0 } {
                    $AtkDrawColor   = [BattleEntityProperty]::StatAugDrawColorNegative
                    $AtkStatSignStr = '-'
                }

                Default {
                    $AtkDrawColor   = [CCTextDefault24]::new()
                    $AtkStatSignStr = ' '
                }
            }
        } Else {
            $AtkDrawColor   = [CCTextDefault24]::new()
            $AtkStatSignStr = ' '
        }
        If($AtkStat.Base -LT 10) {
            $AtkStatFmtStr = "{0:d2}" -F $AtkStat.Base
        } Elseif($AtkStat.Base -GE 10) {
            $AtkStatFmtStr = "$($AtkStat.Base)"
        }

        If($DefStat.AugmentTurnDuration -GT 0) {
            Switch($DefStat.BaseAugmentValue) {
                { $_ -GT 0 } {
                    $DefDrawColor   = [BattleEntityProperty]::StatAugDrawColorPositive
                    $DefStatSignStr = '+'
                }

                { $_ -LT 0 } {
                    $DefDrawColor   = [BattleEntityProperty]::StatAugDrawColorNegative
                    $DefStatSignStr = '-'
                }

                Default {
                    $DefDrawColor   = [CCTextDefault24]::new()
                    $DefStatSignStr = ' '
                }
            }
        } Else {
            $DefDrawColor   = [CCTextDefault24]::new()
            $DefStatSignStr = ' '
        }
        If($DefStat.Base -LT 10) {
            $DefStatFmtStr = "{0:d2}" -F $DefStat.Base
        } Elseif($DefStat.Base -GE 10) {
            $DefStatFmtStr = "$($DefStat.Base)"
        }

        $this.StatL1DrawString = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates     = $this.StatL1DrawCoordinates
                }
                UserData = 'ATK '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $AtkDrawColor
                }
                UserData = "$($AtkStatSignStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $AtkDrawColor
                }
                UserData = "$($AtkStatFmtStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = ' DEF '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $DefDrawColor
                }
                UserData = "$($DefStatSignStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $DefDrawColor
                }
                UserData   = "$($DefStatFmtStr)"
                UseATReset = $true
            }
        ))
    }

    [Void]CreateStatL2DrawString() {
        [BattleEntityProperty]$MatStat = $this.BERef.Stats[[StatId]::MagicAttack]
        [BattleEntityProperty]$MdfStat = $this.BERef.Stats[[StatId]::MagicDefense]
        [ConsoleColor24]$MatDrawColor  = [CCTextDefault24]::new()
        [ConsoleColor24]$MdfDrawColor  = [CCTextDefault24]::new()
        [String]$MatStatSignStr        = ''
        [String]$MdfStatSignStr        = ''
        [String]$MatStatFmtStr         = ''
        [String]$MdfStatFmtStr         = ''

        If($MatStat.AugmentTurnDuration -GT 0) {
            Switch($MatStat.BaseAugmentValue) {
                { $_ -GT 0 } {
                    $MatDrawColor   = [BattleEntityProperty]::StatAugDrawColorPositive
                    $MatStatSignStr = '+'
                }

                { $_ -LT 0 } {
                    $MatDrawColor = [BattleEntityProperty]::StatAugDrawColorNegative
                    $MatStatSignStr = '-'
                }

                Default {
                    $MatDrawColor   = [CCTextDefault24]::new()
                    $MatStatSignStr = ' '
                }
            }
        } Else {
            $MatDrawColor   = [CCTextDefault24]::new()
            $MatStatSignStr = ' '
        }
        If($MatStat.Base -LT 10) {
            $MatStatFmtStr = "{0:d2}" -F $MatStat.Base
        } Elseif($MatStat.Base -GE 10) {
            $MatStatFmtStr = "$($MatStat.Base)"
        }

        If($MdfStat.AugmentTurnDuration -GT 0) {
            Switch($MdfStat.BaseAugmentValue) {
                { $_ -GT 0 } {
                    $MdfDrawColor   = [BattleEntityProperty]::StatAugDrawColorPositive
                    $MdfStatSignStr = '+'
                }

                { $_ -LT 0 } {
                    $MdfDrawColor   = [BattleEntityProperty]::StatAugDrawColorNegative
                    $MdfStatSignStr = '-'
                }

                Default {
                    $MdfDrawColor   = [CCTextDefault24]::new()
                    $MdfStatSignStr = ' '
                }
            }
        } Else {
            $MdfDrawColor   = [CCTextDefault24]::new()
            $MdfStatSignStr = ' '
        }
        If($MdfStat.Base -LT 10) {
            $MdfStatFmtStr = "{0:d2}" -F $MdfStat.Base
        } Elseif($MdfStat.Base -GE 10) {
            $MdfStatFmtStr = "$($MdfStat.Base)"
        }

        $this.StatL2DrawString = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates     = $this.StatL2DrawCoordinates
                }
                UserData = 'MAT '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $MatDrawColor
                }
                UserData = "$($MatStatSignStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $MatDrawColor
                }
                UserData = "$($MatStatFmtStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = ' MDF '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $MdfDrawColor
                }
                UserData = "$($MdfStatSignStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $MdfDrawColor
                }
                UserData   = "$($MdfStatFmtStr)"
                UseATReset = $true
            }
        ))
    }

    [Void]CreateStatL3DrawString() {
        [BattleEntityProperty]$SpdStat = $this.BERef.Stats[[StatId]::Speed]
        [BattleEntityProperty]$AccStat = $this.BERef.Stats[[StatId]::Accuracy]
        [ConsoleColor24]$SpdDrawColor  = [CCTextDefault24]::new()
        [ConsoleColor24]$AccDrawColor  = [CCTextDefault24]::new()
        [String]$SpdStatSignStr        = ''
        [String]$AccStatSignStr        = ''
        [String]$SpdStatFmtStr         = ''
        [String]$AccStatFmtStr         = ''

        If($SpdStat.AugmentTurnDuration -GT 0) {
            Switch($SpdStat.BaseAugmentValue) {
                { $_ -GT 0 } {
                    $SpdDrawColor   = [BattleEntityProperty]::StatAugDrawColorPositive
                    $SpdStatSignStr = '+'
                }

                { $_ -LT 0 } {
                    $SpdDrawColor = [BattleEntityProperty]::StatAugDrawColorNegative
                    $SpdStatSignStr = '-'
                }

                Default {
                    $SpdDrawColor   = [CCTextDefault24]::new()
                    $SpdStatSignStr = ' '
                }
            }
        } Else {
            $SpdDrawColor   = [CCTextDefault24]::new()
            $SpdStatSignStr = ' '
        }
        If($SpdStat.Base -LT 10) {
            $SpdStatFmtStr = "{0:d2}" -F $SpdStat.Base
        } Elseif($SpdStat.Base -GE 10) {
            $SpdStatFmtStr = "$($SpdStat.Base)"
        }

        If($AccStat.AugmentTurnDuration -GT 0) {
            Switch($AccStat.BaseAugmentValue) {
                { $_ -GT 0 } {
                    $AccDrawColor   = [BattleEntityProperty]::StatAugDrawColorPositive
                    $AccStatSignStr = '+'
                }

                { $_ -LT 0 } {
                    $AccDrawColor   = [BattleEntityProperty]::StatAugDrawColorNegative
                    $AccStatSignStr = '-'
                }

                Default {
                    $AccDrawColor   = [CCTextDefault24]::new()
                    $AccStatSignStr = ' '
                }
            }
        } Else {
            $AccDrawColor   = [CCTextDefault24]::new()
            $AccStatSignStr = ' '
        }
        If($AccStat.Base -LT 10) {
            $AccStatFmtStr = "{0:d2}" -F $AccStat.Base
        } Elseif($AccStat.Base -GE 10) {
            $AccStatFmtStr = "$($AccStat.Base)"
        }

        $this.StatL3DrawString = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates     = $this.StatL3DrawCoordinates
                }
                UserData = 'SPD '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $SpdDrawColor
                }
                UserData = "$($SpdStatSignStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $SpdDrawColor
                }
                UserData = "$($SpdStatFmtStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = ' ACC '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $AccDrawColor
                }
                UserData = "$($AccStatSignStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $AccDrawColor
                }
                UserData   = "$($AccStatFmtStr)"
                UseATReset = $true
            }
        ))
    }

    [Void]CreateStatL4DrawString() {
        [BattleEntityProperty]$LckStat = $this.BERef.Stats[[StatId]::Luck]
        [ConsoleColor24]$LckDrawColor  = [CCTextDefault24]::new()
        [String]$LckStatSignStr        = ''
        [String]$LckStatFmtStr         = ''

        If($LckStat.AugmentTurnDuration -GT 0) {
            Switch($LckStat.BaseAugmentValue) {
                { $_ -GT 0 } {
                    $LckDrawColor   = [BattleEntityProperty]::StatAugDrawColorPositive
                    $LckStatSignStr = '+'
                }

                { $_ -LT 0 } {
                    $LckDrawColor   = [BattleEntityProperty]::StatAugDrawColorNegative
                    $LckStatSignStr = '-'
                }

                Default {
                    $LckDrawColor   = [CCTextDefault24]::new()
                    $LckStatSignStr = ' '
                }
            }
        } Else {
            $LckDrawColor   = [CCTextDefault24]::new()
            $LckStatSignStr = ' '
        }
        If($LckStat.Base -LT 10) {
            $LckStatFmtStr = "{0:d2}" -F $LckStat.Base
        } Elseif($LckStat.Base -GE 10) {
            $LckStatFmtStr = "$($LckStat.Base)"
        }

        $this.StatL4DrawString = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates     = $this.StatL4DrawCoordinates
                }
                UserData = 'LCK '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $LckDrawColor
                }
                UserData = "$($LckStatSignStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $LckDrawColor
                }
                UserData   = "$($LckStatFmtStr)"
                UseATReset = $true
            }
        ))
    }

    [Void]SetAllFlagsDirty() {
        $this.HpDrawDirty     = $true
        $this.MpDrawDirty     = $true
        $this.StatL1DrawDirty = $true
        $this.StatL2DrawDirty = $true
        $this.StatL3DrawDirty = $true
        $this.StatL4DrawDirty = $true
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# BATTLE PLAYER ACTION WINDOW
#
#//////////////////////////////////////////////////////////////////////////////

Class BattlePlayerActionWindow : WindowBase {
    Static [Int]$WindowLTRow    = 18
    Static [Int]$WindowLTColumn = 1
    Static [Int]$WindowRBRow    = 23
    Static [Int]$WindowRBCOlumn = 19

    Static [String]$PlayerChevronCharacter      = '❱'
    Static [String]$PlayerChevronBlankCharacter = ' '
    Static [String]$WindowTitle                 = 'Actions'

    Static [ATString]$PlayerChevron = [ATString]@{
        Prefix = [ATStringPrefix]@{
            ForegroundColor = [CCTextDefault24]::new()
        }
        UserData   = "$([BattlePlayerActionWindow]::PlayerChevronCharacter)"
        UseATReset = $true
    }
    Static [ATString]$PlayerChevronBlank = [ATString]@{
        UserData   = "$([BattlePlayerActionWindow]::PlayerChevronBlankCharacter)"
        UseATReset = $true
    }

    [Int]$ActiveChevronIndex
    [Boolean]$PlayerChevronDirty
    [Boolean]$ActiveItemBlinking
    [Boolean]$ActionADrawDirty
    [Boolean]$ActionBDrawDirty
    [Boolean]$ActionCDrawDirty
    [Boolean]$ActionDDrawDirty
    [ATCoordinates]$ActionADrawCoords
    [ATCoordinates]$ActionBDrawCoords
    [ATCoordinates]$ActionCDrawCoords
    [ATCoordinates]$ActionDDrawCoords
    [List[ValueTuple[[ATString], [Boolean]]]]$Chevrons

    BattlePlayerActionWindow() : base() {
        $this.LeftTop = [ATCoordinates]@{
            Row    = [BattlePlayerActionWindow]::WindowLTRow
            Column = [BattlePlayerActionWindow]::WindowLTColumn
        }
        $this.RightBottom = [ATCoordinates]@{
            Row    = [BattlePlayerActionWindow]::WindowRBRow
            Column = [BattlePlayerActionWindow]::WindowRBColumn
        }

        $this.UpdateDimensions()

        $this.SetupTitle([BattlePlayerActionWindow]::WindowTitle, [CCTextDefault24]::new())

        $this.ActiveChevronIndex = 0
        $this.PlayerChevronDirty = $true
        $this.ActiveItemBlinking = $false
        $this.ActionADrawDirty   = $true
        $this.ActionBDrawDirty   = $true
        $this.ActionCDrawDirty   = $true
        $this.ActionDDrawDirty   = $true
        $this.ActionADrawCoords = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 1
            Column = $this.LeftTop.Column + 3
        }
        $this.ActionBDrawCoords = [ATCoordinates]@{
            Row    = $this.ActionADrawCoords.Row + 1
            Column = $this.ActionADrawCoords.Column
        }
        $this.ActionCDrawCoords = [ATCoordinates]@{
            Row    = $this.ActionBDrawCoords.Row + 1
            Column = $this.ActionBDrawCoords.Column
        }
        $this.ActionDDrawCoords = [ATCoordinates]@{
            Row    = $this.ActionCDrawCoords.Row + 1
            Column = $this.ActionCDrawCoords.Column
        }
        $this.CreateChevrons()
    }

    [Void]CreateChevrons() {
        $this.Chevrons = [List[ValueTuple[[ATString], [Boolean]]]]::new()
        $this.Chevrons.Add(
            [ValueTuple]::Create(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAppleGreenLight24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.ActionADrawCoords.Row
                            Column = $this.ActionADrawCoords.Column - 2
                        }
                    }
                    UserData   = "$([BattlePlayerActionWindow]::PlayerChevronCharacter)"
                    UseATReset = $true
                },
                $true
            )
        )
        $this.Chevrons.Add(
            [ValueTuple]::Create(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAppleGreenLight24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.ActionBDrawCoords.Row
                            Column = $this.ActionBDrawCoords.Column - 2
                        }
                    }
                    UserData   = "$([BattlePlayerActionWindow]::PlayerChevronBlankCharacter)"
                    UseATReset = $true
                },
                $false
            )
        )
        $this.Chevrons.Add(
            [ValueTuple]::Create(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAppleGreenLight24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.ActionCDrawCoords.Row
                            Column = $this.ActionCDrawCoords.Column - 2
                        }
                    }
                    UserData   = "$([BattlePlayerActionWindow]::PlayerChevronBlankCharacter)"
                    UseATReset = $true
                },
                $false
            )
        )
        $this.Chevrons.Add(
            [ValueTuple]::Create(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAppleGreenLight24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.ActionDDrawCoords.Row
                            Column = $this.ActionDDrawCoords.Column - 2
                        }
                    }
                    UserData   = "$([BattlePlayerActionWindow]::PlayerChevronBlankCharacter)"
                    UseATReset = $true
                },
                $false
            )
        )
    }

    [ATString]GetActiveChevron() {
        Foreach($a in $this.Chevrons) {
            If($a.Item2 -EQ $true) {
                Return $a.Item1
            }
        }
        $this.ActiveChevronIndex                       = 0
        $this.Chevrons[$this.ActiveChevronIndex].Item2 = $true

        Return $this.Chevrons[$this.ActiveChevronIndex].Item1
    }

    [Void]ResetChevronPosition() {
        $this.Chevrons[$this.ActiveChevronIndex].Item2          = $false
        $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([BattlePlayerActionWindow]::PlayerChevronBlankCharacter)"
        $this.ActiveChevronIndex                                = 0
        $this.Chevrons[$this.ActiveChevronIndex].Item2          = $true
        $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([BattlePlayerActionWindow]::PlayerChevronCharacter)"
    }

    [Void]Draw() {
        ([WindowBase]$this).Draw()

        If($this.ActionADrawDirty -EQ $true) {
            [ATStringComposite]$a = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::A].Type].Item2
                        Coordinates     = $this.ActionADrawCoords
                    }
                    UserData   = "$($Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::A].Type].Item1)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = " $($Script:ThePlayer.ActionListing[[ActionSlot]::A].Name)"
                    UseATReset = $true
                }
            ))
            Write-Host "$($a.ToAnsiControlSequenceString())"
            $this.ActionADrawDirty = $false
        }
        If($this.ActionBDrawDirty -EQ $true) {
            [ATStringComposite]$a = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::B].Type].Item2
                        Coordinates     = $this.ActionBDrawCoords
                    }
                    UserData   = "$($Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::B].Type].Item1)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = " $($Script:ThePlayer.ActionListing[[ActionSlot]::B].Name)"
                    UseATReset = $true
                }
            ))
            Write-Host "$($a.ToAnsiControlSequenceString())"
            $this.ActionBDrawDirty = $false
        }
        If($this.ActionCDrawDirty -EQ $true) {
            [ATStringComposite]$a = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::C].Type].Item2
                        Coordinates     = $this.ActionCDrawCoords
                    }
                    UserData   = "$($Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::C].Type].Item1)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = " $($Script:ThePlayer.ActionListing[[ActionSlot]::C].Name)"
                    UseATReset = $true
                }
            ))
            Write-Host "$($a.ToAnsiControlSequenceString())"
            $this.ActionCDrawDirty = $false
        }
        If($this.ActionDDrawDirty -EQ $true) {
            [ATStringComposite]$a = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::D].Type].Item2
                        Coordinates     = $this.ActionDDrawCoords
                    }
                    UserData   = "$($Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::D].Type].Item1)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = " $($Script:ThePlayer.ActionListing[[ActionSlot]::D].Name)"
                    UseATReset = $true
                }
            ))
            Write-Host "$($a.ToAnsiControlSequenceString())"
            $this.ActionDDrawDirty = $false
        }
        If($this.PlayerChevronDirty -EQ $true) {
            Foreach($c in $this.Chevrons) {
                Write-Host "$($c.Item1.ToAnsiControlSequenceString())"
            }
            $this.PlayerChevronDirty = $false
        }
    }

    [BattleAction]HandleInput() {
        $keyCap = $(Get-Host).UI.RawUI.ReadKey('IncludeKeyDown, NoEcho')
        Switch($keyCap.VirtualKeyCode) {
            13 {
                Switch($this.ActiveChevronIndex) {
                    0 {
                        If(($Script:ThePlayer.ActionListing[[ActionSlot]::A].MpCost -GT 0) -AND ($Script:ThePlayer.Stats[[StatId]::MagicPoints].Base -LT $Script:ThePlayer.ActionListing[[ActionSlot]::A].MpCost)) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBattleNem)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}
                            $Script:TheBattleStatusMessageWindow.WriteNotEnoughMpMessage()
                            $Script:TheBattleStatusMessageWindow.Draw()

                            Return $null
                        }

                        Return $Script:ThePlayer.ActionListing[[ActionSlot]::A]
                    }

                    1 {
                        If(($Script:ThePlayer.ActionListing[[ActionSlot]::B].MpCost -GT 0) -AND ($Script:ThePlayer.Stats[[StatId]::MagicPoints].Base -LT $Script:ThePlayer.ActionListing[[ActionSlot]::B].MpCost)) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBattleNem)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}
                            $Script:TheBattleStatusMessageWindow.WriteNotEnoughMpMessage()
                            $Script:TheBattleStatusMessageWindow.Draw()

                            Return $null
                        }

                        Return $Script:ThePlayer.ActionListing[[ActionSlot]::B]
                    }

                    2 {
                        If(($Script:ThePlayer.ActionListing[[ActionSlot]::C].MpCost -GT 0) -AND ($Script:ThePlayer.Stats[[StatId]::MagicPoints].Base -LT $Script:ThePlayer.ActionListing[[ActionSlot]::C].MpCost)) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBattleNem)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}
                            $Script:TheBattleStatusMessageWindow.WriteNotEnoughMpMessage()
                            $Script:TheBattleStatusMessageWindow.Draw()

                            Return $null
                        }

                        Return $Script:ThePlayer.ActionListing[[ActionSlot]::C]
                    }

                    3 {
                        If(($Script:ThePlayer.ActionListing[[ActionSlot]::D].MpCost -GT 0) -AND ($Script:ThePlayer.Stats[[StatId]::MagicPoints].Base -LT $Script:ThePlayer.ActionListing[[ActionSlot]::D].MpCost)) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBattleNem)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}
                            $Script:TheBattleStatusMessageWindow.WriteNotEnoughMpMessage()
                            $Script:TheBattleStatusMessageWindow.Draw()

                            Return $null
                        }

                        Return $Script:ThePlayer.ActionListing[[ActionSlot]::D]
                    }

                    Default {
                        Return $null
                    }
                }
            }

            38 {
                Try {
                    $Script:TheSfxMPlayer.Open($Script:SfxUiChevronMove)
                    $Script:TheSfxMPlayer.Play()
                } Catch {
                    Write-Host 'Blew up'
                }
                If(($this.ActiveChevronIndex - 1) -LT 0) {
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $false
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([BattlePlayerActionWindow]::PlayerChevronBlankCharacter)"
                    $this.ActiveChevronIndex                                = 3
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $true
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([BattlePlayerActionWindow]::PlayerChevronCharacter)"
                } Elseif(($this.ActiveChevronIndex - 1) -GE 0) {
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $false
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([BattlePlayerActionWindow]::PlayerChevronBlankCharacter)"
                    $this.ActiveChevronIndex--
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $true
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([BattlePlayerActionWindow]::PlayerChevronCharacter)"
                }
                $this.PlayerChevronDirty = $true
            }

            40 {
                Try {
                    $Script:TheSfxMPlayer.Open($Script:SfxUiChevronMove)
                    $Script:TheSfxMPlayer.Play()
                } Catch {
                    Write-Host 'Blew up'
                }
                If(($this.ActiveChevronIndex + 1) -GT 3) {
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $false
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([BattlePlayerActionWindow]::PlayerChevronBlankCharacter)"
                    $this.ActiveChevronIndex                                = 0
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $true
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([BattlePlayerActionWindow]::PlayerChevronCharacter)"
                } Elseif(($this.ActiveChevronIndex + 1) -LE 3) {
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $false
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([BattlePlayerActionWindow]::PlayerChevronBlankCharacter)"
                    $this.ActiveChevronIndex++
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $true
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([BattlePlayerActionWindow]::PlayerChevronCharacter)"
                }
                $this.PlayerChevronDirty = $true
            }
        }

        Return $null
    }

    [Void]SetAllActionDrawDirty() {
        $this.ActionADrawDirty = $true
        $this.ActionBDrawDirty = $true
        $this.ActionCDrawDirty = $true
        $this.ActionDDrawDirty = $true
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# BATTLE STATUS MESSAGE WINDOW
#
#//////////////////////////////////////////////////////////////////////////////

Class BattleStatusMessageWindow : WindowBase {
    Static [Int]$MessageHistoryARef = 0
    Static [Int]$MessageHistoryBRef = 1
    Static [Int]$MessageHistoryCRef = 2
    Static [Int]$MessageHistoryDRef = 3
    Static [Int]$MessageHistoryERef = 4
    Static [Int]$WindowLTRow        = 18
    Static [Int]$WindowLTColumn     = 22
    Static [Int]$WindowRBRow        = 24
    Static [Int]$WindowRBColumn     = 81

    Static [String]$MessageBlankActual = '                                                         '
    Static [String]$WindowTitle        = 'Log'

    Static [Single]$MessageSleepTime = 0.2

    [Boolean]$MessageADirty
    [Boolean]$MessageBDirty
    [Boolean]$MessageCDirty
    [Boolean]$MessageDDirty
    [Boolean]$MessageEDirty
    [ATString]$MessageBlank
    [ATCoordinates]$MessageADrawCoords
    [ATCoordinates]$MessageBDrawCoords
    [ATCoordinates]$MessageCDrawCoords
    [ATCoordinates]$MessageDDrawCoords
    [ATCoordinates]$MessageEDrawCoords
    [ATStringComposite[]]$MessageHistory

    BattleStatusMessageWindow() : base() {
        $this.LeftTop = [ATCoordinates]@{
            Row    = [BattleStatusMessageWindow]::WindowLTRow
            Column = [BattleStatusMessageWindow]::WindowLTColumn
        }
        $this.RightBottom = [ATCoordinates]@{
            Row    = [BattleStatusMessageWindow]::WindowRBRow
            Column = [BattleStatusMessageWindow]::WindowRBColumn
        }

        $this.UpdateDimensions()

        $this.SetupTitle([BattleStatusMessageWindow]::WindowTitle, [CCTextDefault24]::new())

        $this.MessageADirty = $false
        $this.MessageBDirty = $false
        $this.MessageCDirty = $false
        $this.MessageDDirty = $false
        $this.MessageEDirty = $false

        $this.MessageBlank = [ATString]@{
            Prefix     = [ATStringPrefix]::new()
            UserData   = "$([BattleStatusMessageWindow]::MessageBlankActual)"
            UseATReset = $true
        }

        $this.MessageADrawCoords = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 1
            Column = $this.LeftTop.Column + 1
        }
        $this.MessageBDrawCoords = [ATCoordinates]@{
            Row    = $this.MessageADrawCoords.Row + 1
            Column = $this.MessageADrawCoords.Column
        }
        $this.MessageCDrawCoords = [ATCoordinates]@{
            Row    = $this.MessageBDrawCoords.Row + 1
            Column = $this.MessageBDrawCoords.Column
        }
        $this.MessageDDrawCoords = [ATCoordinates]@{
            Row    = $this.MessageCDrawCoords.Row + 1
            Column = $this.MessageCDrawCoords.Column
        }
        $this.MessageEDrawCoords = [ATCoordinates]@{
            Row    = $this.MessageDDrawCoords.Row + 1
            Column = $this.MessageDDrawCoords.Column
        }

        $this.MessageHistory = [ATStringComposite[]](
            [ATStringComposite]::new(),
            [ATStringComposite]::new(),
            [ATStringComposite]::new(),
            [ATStringComposite]::new(),
            [ATStringComposite]::new()
        )
        $this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryARef].CompositeActual[0].Prefix.Coordinates = $this.MessageADrawCoords
        $this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryBRef].CompositeActual[0].Prefix.Coordinates = $this.MessageBDrawCoords
        $this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryCRef].CompositeActual[0].Prefix.Coordinates = $this.MessageCDrawCoords
        $this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryDRef].CompositeActual[0].Prefix.Coordinates = $this.MessageDDrawCoords
        $this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryERef].CompositeActual[0].Prefix.Coordinates = $this.MessageEDrawCoords
    }

    [Void]Draw() {
        ([WindowBase]$this).Draw()

        If($this.MessageEDirty -EQ $true) {
            $this.MessageBlank.Prefix.Coordinates = $this.MessageEDrawCoords
            Write-Host "$($this.MessageBlank.ToAnsiControlSequenceString())$($this.MessageEDrawCoords.ToAnsiControlSequenceString())$($this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryERef].ToAnsiControlSequenceString())"
            $this.MessageEDirty = $false
            Start-Sleep -Seconds $([BattleStatusMessageWindow]::MessageSleepTime)
        }
        If($this.MessageDDirty -EQ $true) {
            $this.MessageBlank.Prefix.Coordinates = $this.MessageDDrawCoords
            Write-Host "$($this.MessageBlank.ToAnsiControlSequenceString())$($this.MessageDDrawCoords.ToAnsiControlSequenceString())$($this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryDRef].ToAnsiControlSequenceString())"
            $this.MessageDDirty = $false
            Start-Sleep -Seconds $([BattleStatusMessageWindow]::MessageSleepTime)
        }
        If($this.MessageCDirty -EQ $true) {
            $this.MessageBlank.Prefix.Coordinates = $this.MessageCDrawCoords
            Write-Host "$($this.MessageBlank.ToAnsiControlSequenceString())$($this.MessageCDrawCoords.ToAnsiControlSequenceString())$($this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryCRef].ToAnsiControlSequenceString())"
            $this.MessageCDirty = $false
            Start-Sleep -Seconds $([BattleStatusMessageWindow]::MessageSleepTime)
        }
        If($this.MessageBDirty -EQ $true) {
            $this.MessageBlank.Prefix.Coordinates = $this.MessageBDrawCoords
            Write-Host "$($this.MessageBlank.ToAnsiControlSequenceString())$($this.MessageBDrawCoords.ToAnsiControlSequenceString())$($this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryBRef].ToAnsiControlSequenceString())"
            $this.MessageBDirty = $false
            Start-Sleep -Seconds $([BattleStatusMessageWindow]::MessageSleepTime)
        }
        If($this.MessageADirty -EQ $true) {
            $this.MessageBlank.Prefix.Coordinates = $this.MessageADrawCoords
            Write-Host "$($this.MessageBlank.ToAnsiControlSequenceString())$($this.MessageADrawCoords.ToAnsiControlSequenceString())$($this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryARef].ToAnsiControlSequenceString())"
            $this.MessageADirty = $false
            Start-Sleep -Seconds $([BattleStatusMessageWindow]::MessageSleepTime + 0.4)
        }
    }

    [Void]WriteMessageComposite(
        [ATString[]]$ATComposite
    ) {
        $this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryARef].CompositeActual = [List[ATString]]::new($this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryBRef].CompositeActual)
        $this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryBRef].CompositeActual = [List[ATString]]::new($this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryCRef].CompositeActual)
        $this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryCRef].CompositeActual = [List[ATString]]::new($this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryDRef].CompositeActual)
        $this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryDRef].CompositeActual = [List[ATString]]::new($this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryERef].CompositeActual)
        $this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryERef]                 = [ATStringComposite]::new($ATComposite)

        $this.MessageADirty = $true
        $this.MessageBDirty = $true
        $this.MessageCDirty = $true
        $this.MessageDDirty = $true
        $this.MessageEDirty = $true
    }

    [Void]WriteNotEnoughMpMessage() {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleVYellowADark24]::new()
                    Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                }
                UserData   = 'Not enough MP!'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteEntityUsesMessage(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' uses '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Action.Name)"
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBarSwc(
        [BattleAction]$Action
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Action.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' was successful! '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowLight24]::new()
                    Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                }
                UserData   = 'CRITICAL!'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBarAff(
        [BattleAction]$Action
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Action.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' was successful! '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowLight24]::new()
                    Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                }
                UserData   = 'AFFINITY!'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBarCritAff(
        [BattleAction]$Action
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Action.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = ' was successful! '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowLight24]::new()
                    Decorations = [ATDecoration]@{
                        Blink = $true
                    }
                }
                UserData   = 'CRIT AND AFFINITY!'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBarSuccess(
        [BattleAction]$Action
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Action.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' was successful!'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBarFailMissed(
        [BattleAction]$Action
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Action.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' missed!'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBarFailFailed(
        [BattleAction]$Action
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Action.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' failed!'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatPhysical(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' hit '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATSTringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' for '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Result.ActionEffectSum)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' damage.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatElementalFire(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' burned '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATSTringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' for '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Result.ActionEffectSum)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' damage.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatElementalWater(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' soaked '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATSTringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' for '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Result.ActionEffectSum)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' damage.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatElementalEarth(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' stoned '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATSTringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' for '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Result.ActionEffectSum)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' damage.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatElementalWind(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' sheared '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATSTringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' for '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Result.ActionEffectSum)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' damage.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatElementalLight(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' cast holy power on '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATSTringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' for '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Result.ActionEffectSum)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' damage.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatElementalDark(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' cast unholy power on '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATSTringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' for '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Result.ActionEffectSum)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' damage.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatElementalIce(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' froze '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATSTringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' for '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Result.ActionEffectSum)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' damage.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatMagicPoison(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' poisoned '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATSTringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' for '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Result.ActionEffectSum)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' damage.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatMagicConfuse(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' confused '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = '!'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatMagicSleep(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' put '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' to sleep!'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatMagicAging(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' made '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' grow old!'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatMagicHealing(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        If($Originator == $Target) {
            # Healed themselves
            $this.WriteMessageComposite(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $Originator.NameDrawColor
                    }
                    UserData   = "$($Originator.Name)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = ' healed themself '
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAppleGreenLight24]::new()
                    }
                    UserData   = "$($Result.ActionEfffectSum)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = '!'
                    UseATReset = $true
                }
            ))
        } Else {
            # Healed Target
            $this.WriteMessageComposite(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $Originator.NameDrawColor
                    }
                    UserData   = "$($Originator.Name)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = ' healed '
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $Target.NameDrawColor
                    }
                    UserData   = "$($Target.Name)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = ' for '
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAppleGreenLight24]::new()
                    }
                    UserData   = "$($Result.ActionEfffectSum)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = '!'
                    UseATReset = $true
                }
            ))
        }
    }

    [Void]WriteEntityCantActMessage(
        [BattleEntity]$Originator
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData = "$($Originator.Name)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' is unable to act!'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBattleWonMessage() {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = 'You''ve won the battle!'
                UseATReset = $true
            }
        ))
    }
	
	[Void]WriteBattleLostMessage() {
		$this.WriteMessageComposite(@(
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = 'You''ve lost the battle.'
				UseATReset = $true
			}
		))
	}
	
	[Void]WriteGameOverMessage() {
		$this.WriteMessageComposite(@(
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = 'GAME OVER'
				UseATReset = $true
			}
		))
	}

    [Void]WriteBattleEndPrompt() {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = 'Press ''Enter'' to exit.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteSpoilsMessage(
        [EnemyBattleEntity]$Opponent
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Opponent.NameDrawColor
                }
                UserData   = "$($Opponent.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' dropped '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = "$($Opponent.SpoilsGold)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' gold.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteItemsFoundMessage(
        [String]$ItemNames
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = 'Also found '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = "$($ItemNames)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = '.'
                UseATReset = $true
            }
        ))
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# BATTLE ENEMY IMAGE WINDOW
#
#//////////////////////////////////////////////////////////////////////////////

Class BattleEnemyImageWindow : WindowBase {
    Static [Int]$WindowLTRow           = 1
    Static [Int]$WindowLTColumn        = 43
    Static [Int]$WindowRBRow           = 17
    Static [Int]$WindowRBColumn        = 81
    Static [Int]$ImageDrawRowOffset    = [BattleEnemyImageWindow]::WindowLTRow + 1
    Static [Int]$ImageDrawColumnOffset = [BattleEnemyImageWindow]::WindowLTColumn + 1

    [Boolean]$ImageDirty
    [ATCoordinates]$ImageDrawCoords
    [EnemyEntityImage]$Image

    BattleEnemyImageWindow() : base() {
        $this.LeftTop = [ATCoordinates]@{
            Row    = [BattleEnemyImageWindow]::WindowLTRow
            Column = [BattleEnemyImageWindow]::WindowLTColumn
        }
        $this.RightBottom = [ATCoordinates]@{
            Row    = [BattleEnemyImageWindow]::WindowRBRow
            Column = [BattleEnemyImageWindow]::WindowRBColumn
        }

        $this.UpdateDimensions()

        $this.SetupTitle("$($Script:TheCurrentEnemy.Name)", [CCTextDefault24]::new())

        $this.ImageDirty      = $true
        $this.Image           = [EEIEmpty]::new()
        $this.ImageDrawCoords = [ATCoordinates]@{
            Row    = [BattleEnemyImageWindow]::ImageDrawRowOffset
            Column = [BattleEnemyImageWindow]::ImageDrawColumnOffset
        }
    }

    [Void]Draw() {
        ([WindowBase]$this).Draw()
        If($this.ImageDirty -EQ $true) {
            $this.Image = $Script:TheCurrentEnemy.Image
            Write-Host "$($this.Image.ToAnsiControlSequenceString())"
            $this.ImageDirty = $false
        }
    }
}





###############################################################################
#
# STATUS HUD WINDOW
#
###############################################################################
Class StatusHudWindow : WindowBase {
    Static [Int]$WindowLTRow    = 1
    Static [Int]$WindowLTColumn = 1
    Static [Int]$WindowRBRow    = 3
    Static [Int]$WindowRBColumn = 80

    Static [String]$LineBlankStr = '                                                                              '
    Static [String]$WindowTitle  = 'Status'

    [Boolean]$StatLineDrawDirty
    [ATString]$LineBlank
    [ATCoordinates]$StatLineDrawCoords
    [ATCoordinates]$StatSeparatorDrawCoords
    [ATStringComposite]$StatLineActual

    StatusHudWindow() : base() {
        $this.LeftTop = [ATCoordinates]@{
            Row    = [StatusHudWindow]::WindowLTRow
            Column = [StatusHudWindow]::WindowLTColumn
        }
        $this.RightBottom = [ATCoordinates]@{
            Row    = [StatusHudWindow]::WindowRBRow
            Column = [StatusHudWindow]::WindowRBColumn
        }

        $this.UpdateDimensions()

        $this.StatLineDrawDirty = $true
        $this.LineBlank = [ATString]@{
            UserData   = [StatusHudWindow]::LineBlankStr
            UseATReset = $true
        }
        $this.StatLineDrawCoords = [ATCoordinates]@{
            Row    = 2
            Column = 3
        }
        $this.StatSeparatorDrawCoords = [ATCoordinates]@{
            Row    = 2
            Column = [StatusHudWindow]::WindowRBColumn - 48
        }

        $this.SetupTitle([StatusHudWindow]::WindowTitle, [CCTextDefault24]::new())
    }

    [Void]Draw() {
        ([WindowBase]$this).Draw()

        If($this.StatLineDrawDirty -EQ $true) {
            $this.ComposeStatLineString()
            $this.LineBlank.Prefix.Coordinates = [ATCoordinates]::new($this.StatLineDrawCoords)
            Write-Host "$($this.LineBlank.ToAnsiControlSequenceString())$($this.StatLineActual.ToAnsiControlSequenceString())"
            $this.StatLineDrawDirty = $false
        }

        # FOR SOME REASON, THE SETUP TITLE CAUSES THE LEFT BAR TO DISAPPEAR?
        # THIS IS REQUIRED TO DEAL WITH THAT.
        ([WindowBase]$this).Draw()
    }

    [Void]ComposeStatLineString() {
        [String]$AtkStatFmtStr = ''
        [String]$DefStatFmtStr = ''
        [String]$MatStatFmtStr = ''
        [String]$MdfStatFmtStr = ''
        [String]$SpdStatFmtStr = ''
        [String]$AccStatFmtStr = ''
        [String]$LckStatFmtStr = ''
        [String]$AtkDispStr    = 'ATK:'
        [String]$DefDispStr    = 'DEF:'
        [String]$MatDispStr    = 'MAT:'
        [String]$MdfDispStr    = 'MDF:'
        [String]$SpdDispStr    = 'SPD:'
        [String]$AccDispStr    = 'ACC:'
        [String]$LckDispStr    = 'LCK:'

        If($Script:ThePlayer.Stats[[StatId]::Attack].Base -LT 10) {
            $AtkStatFmtStr = "{0:d2}" -F $Script:ThePlayer.Stats[[StatId]::Attack].Base
        } Elseif($Script:ThePlayer.Stats[[StatId]::Attack].Base -GE 10) {
            $AtkStatFmtStr = "$($Script:ThePlayer.Stats[[StatId]::Attack].Base)"
        }
        If($Script:ThePlayer.Stats[[StatId]::Defense].Base -LT 10) {
            $DefStatFmtStr = "{0:d2}" -F $Script:ThePlayer.Stats[[StatId]::Defense].Base
        } Elseif($Script:ThePlayer.Stats[[StatId]::Defense].Base -GE 10) {
            $DefStatFmtStr = "$($Script:ThePlayer.Stats[[StatId]::Defense].Base)"
        }
        If($Script:ThePlayer.Stats[[StatId]::MagicAttack].Base -LT 10) {
            $MatStatFmtStr = "{0:d2}" -F $Script:ThePlayer.Stats[[StatId]::MagicAttack].Base
        } Elseif($Script:ThePlayer.Stats[[StatId]::MagicAttack].Base -GE 10) {
            $MatStatFmtStr = "$($Script:ThePlayer.Stats[[StatId]::MagicAttack].Base)"
        }
        If($Script:ThePlayer.Stats[[StatId]::MagicDefense].Base -LT 10) {
            $MdfStatFmtStr = "{0:d2}" -F $Script:ThePlayer.Stats[[StatId]::MagicDefense].Base
        } Elseif($Script:ThePlayer.Stats[[StatId]::MagicDefense].Base -GE 10) {
            $MdfStatFmtStr = "$($Script:ThePlayer.Stats[[StatId]::MagicDefense].Base)"
        }
        If($Script:ThePlayer.Stats[[StatId]::Speed].Base -LT 10) {
            $SpdStatFmtStr = "{0:d2}" -F $Script:ThePlayer.Stats[[StatId]::Speed].Base
        } Elseif($Script:ThePlayer.Stats[[StatId]::Speed].Base -GE 10) {
            $SpdStatFmtStr = "$($Script:ThePlayer.Stats[[StatId]::Speed].Base)"
        }
        If($Script:ThePlayer.Stats[[StatId]::Accuracy].Base -LT 10) {
            $AccStatFmtStr = "{0:d2}" -F $Script:ThePlayer.Stats[[StatId]::Accuracy].Base
        } Elseif($Script:ThePlayer.Stats[[StatId]::Accuracy].Base -GE 10) {
            $AccStatFmtStr = "$($Script:ThePlayer.Stats[[StatId]::Accuracy].Base)"
        }
        If($Script:ThePlayer.Stats[[StatId]::Luck].Base -LT 10) {
            $LckStatFmtStr = "{0:d2}" -F $Script:ThePlayer.Stats[[StatId]::Luck].Base
        } Elseif($Script:ThePlayer.Stats[[StatId]::Luck].Base -GE 10) {
            $LckStatFmtStr = "$($Script:ThePlayer.Stats[[StatId]::Luck].Base)"
        }

        $this.StatLineActual = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Script:ThePlayer.Affinity].Item2
                    Coordinates     = [ATCoordinates]::new($this.StatLineDrawCoords)
                }
                UserData = "$($Script:BATAdornmentCharTable[$Script:ThePlayer.Affinity].Item1) "
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($Script:ThePlayer.Name)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates     = [ATCoordinates]::new($this.StatSeparatorDrawCoords)
                }
                UserData = "$($AtkDispStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($AtkStatFmtStr) "
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($DefDispStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($DefStatFmtStr) "
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($MatDispStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($MatStatFmtStr) "
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($MdfDispStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($MdfStatFmtStr) "
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($SpdDispStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($SpdStatFmtStr) "
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($AccDispStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($AccStatFmtStr) "
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($LckDispStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = "$($LckStatFmtStr)"
                UseATReset = $true
            }
        ))
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# STATUS TECHNIQUE SELECTION WINDOW
#
#//////////////////////////////////////////////////////////////////////////////

Class StatusTechniqueSelectionWindow : WindowBase {
    Static [Int]$WindowLTRow    = 4
    Static [Int]$WindowLTColumn = 1
    Static [Int]$WindowRBRow    = 9
    Static [Int]$WindowRBColumn = 19

    Static [String]$PlayerChevronCharacter      = '❱'
    Static [String]$PlayerChevronBlankCharacter = ' '
    Static [String]$NameBlank                   = '              '
    Static [String]$WindowTitle                 = 'Equipped'

    Static [ATString]$PlayerChevron = [ATString]@{
        Prefix = [ATStringPrefix]@{
            ForegroundColor = [CCTextDefault24]::new()
        }
        UserData   = "$([StatusTechniqueSelectionWindow]::PlayerChevronCharacter)"
        UseATReset = $true
    }
    Static [ATString]$PlayerChevronBlank = [ATString]@{
        UserData   = "$([StatusTechniqueSelectionWindow]::PlayerChevronBlankCharacter)"
        UseATReset = $true
    }
    Static [ATString]$BaNameBlank = [ATString]@{
        Prefix     = [ATStringPrefix]::new()
        UserData   = "$([StatusTechniqueSelectionWindow]::NameBlank)"
        UseATReset = $true
    }

    [Int]$ActiveChevronIndex
    [Boolean]$PlayerChevronDirty
    [Boolean]$ActiveItemBlinking
    [Boolean]$ActionADrawDirty
    [Boolean]$ActionBDrawDirty
    [Boolean]$ActionCDrawDirty
    [Boolean]$ActionDDrawDirty
    [Boolean]$IsActive
    [ATCoordinates]$ActionADrawCoords
    [ATCoordinates]$ActionBDrawCoords
    [ATCoordinates]$ActionCDrawCoords
    [ATCoordinates]$ActionDDrawCoords
    [List[ValueTuple[[ATString], [Boolean]]]]$Chevrons

    StatusTechniqueSelectionWindow() : base() {
        $this.LeftTop = [ATCoordinates]@{
            Row    = [StatusTechniqueSelectionWindow]::WindowLTRow
            Column = [StatusTechniqueSelectionWindow]::WindowLTColumn
        }
        $this.RightBottom = [ATCoordinates]@{
            Row    = [StatusTechniqueSelectionWindow]::WindowRBRow
            Column = [StatusTechniqueSelectionWindow]::WindowRBColumn
        }

        $this.UpdateDimensions()

        $this.ActiveChevronIndex = 0
        $this.PlayerChevronDirty = $true
        $this.ActiveItemBlinking = $false
        $this.ActionADrawDirty   = $true
        $this.ActionBDrawDirty   = $true
        $this.ActionCDrawDirty   = $true
        $this.ActionDDrawDirty   = $true
        $this.IsActive           = $true
        $this.ActionADrawCoords = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 1
            Column = $this.LeftTop.Column + 3
        }
        $this.ActionBDrawCoords = [ATCoordinates]@{
            Row    = $this.ActionADrawCoords.Row + 1
            Column = $this.ActionADrawCoords.Column
        }
        $this.ActionCDrawCoords = [ATCoordinates]@{
            Row    = $this.ActionBDrawCoords.Row + 1
            Column = $this.ActionBDrawCoords.Column
        }
        $this.ActionDDrawCoords = [ATCoordinates]@{
            Row    = $this.ActionCDrawCoords.Row + 1
            Column = $this.ActionCDrawCoords.Column
        }
        $this.CreateChevrons()

        $this.SetupTitle([StatusTechniqueSelectionWindow]::WindowTitle, [CCTextDefault24]::new())
    }

    [Void]CreateChevrons() {
        $this.Chevrons = [List[ValueTuple[[ATString], [Boolean]]]]::new()
        $this.Chevrons.Add(
            [ValueTuple]::Create(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAPpleGreenLight24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.ActionADrawCoords.Row
                            Column = $this.ActionADrawCoords.Column - 2
                        }
                    }
                    UserData   = "$([StatusTechniqueSelectionWindow]::PlayerChevronCharacter)"
                    UseATReset = $true
                },
                $true
            )
        )
        $this.Chevrons.Add(
            [ValueTuple]::Create(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAPpleGreenLight24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.ActionBDrawCoords.Row
                            Column = $this.ActionBDrawCoords.Column - 2
                        }
                    }
                    UserData   = "$([StatusTechniqueSelectionWindow]::PlayerChevronBlankCharacter)"
                    UseATReset = $true
                },
                $false
            )
        )
        $this.Chevrons.Add(
            [ValueTuple]::Create(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAPpleGreenLight24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.ActionCDrawCoords.Row
                            Column = $this.ActionCDrawCoords.Column - 2
                        }
                    }
                    UserData   = "$([StatusTechniqueSelectionWindow]::PlayerChevronBlankCharacter)"
                    UseATReset = $true
                },
                $false
            )
        )
        $this.Chevrons.Add(
            [ValueTuple]::Create(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAPpleGreenLight24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.ActionDDrawCoords.Row
                            Column = $this.ActionDDrawCoords.Column - 2
                        }
                    }
                    UserData   = "$([StatusTechniqueSelectionWindow]::PlayerChevronBlankCharacter)"
                    UseATReset = $true
                },
                $false
            )
        )
    }

    [ATString]GetActiveChevron() {
        Foreach($a in $this.Chevrons) {
            If($a.Item2 -EQ $true) {
                Return $a.Item1
            }
        }
        $this.ActiveChevronIndex                       = 0
        $this.Chevrons[$this.ActiveChevronIndex].Item2 = $true

        Return $this.Chevrons[$this.ActiveChevronIndex].Item1
    }

    [Void]ResetChevronPosition() {
        $this.Chevrons[$this.ActiveChevronIndex].Item2          = $false
        $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([StatusTechniqueSelectionWindow]::PlayerChevronBlankCharacter)"
        $this.ActiveChevronIndex                                = 0
        $this.Chevrons[$this.ActiveChevronIndex].Item2          = $true
        $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([StatusTechniqueSelectionWindow]::PlayerChevronCharacter)"
    }

    [Void]Draw() {
        ([WindowBase]$this).Draw()

        If($this.ActionADrawDirty -EQ $true) {
            [StatusTechniqueSelectionWindow]::BaNameBlank.Prefix.Coordinates = [ATCoordinates]@{
                Row    = $this.ActionADrawCoords.Row
                Column = $this.ActionADrawCoords.Column + 1
            }
            [ATStringComposite]$a = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::A].Type].Item2
                        Coordinates     = $this.ActionADrawCoords
                    }
                    UserData   = "$($Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::A].Type].Item1)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = " $($Script:ThePlayer.ActionListing[[ActionSlot]::A].Name)"
                    UseATReset = $true
                }
            ))
            Write-Host "$([StatusTechniqueSelectionWindow]::BaNameBlank.ToAnsiControlSequenceString())$($a.ToAnsiControlSequenceString())"
            $this.ActionADrawDirty = $false
        }
        If($this.ActionBDrawDirty -EQ $true) {
            [StatusTechniqueSelectionWindow]::BaNameBlank.Prefix.Coordinates = [ATCoordinates]@{
                Row    = $this.ActionBDrawCoords.Row
                Column = $this.ActionBDrawCoords.Column + 1
            }
            [ATStringComposite]$a = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::B].Type].Item2
                        Coordinates     = $this.ActionBDrawCoords
                    }
                    UserData   = "$($Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::B].Type].Item1)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = " $($Script:ThePlayer.ActionListing[[ActionSlot]::B].Name)"
                    UseATReset = $true
                }
            ))
            Write-Host "$([StatusTechniqueSelectionWindow]::BaNameBlank.ToAnsiControlSequenceString())$($a.ToAnsiControlSequenceString())"
            $this.ActionBDrawDirty = $false
        }
        If($this.ActionCDrawDirty -EQ $true) {
            [StatusTechniqueSelectionWindow]::BaNameBlank.Prefix.Coordinates = [ATCoordinates]@{
                Row    = $this.ActionCDrawCoords.Row
                Column = $this.ActionCDrawCoords.Column + 1
            }
            [ATStringComposite]$a = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::C].Type].Item2
                        Coordinates     = $this.ActionCDrawCoords
                    }
                    UserData   = "$($Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::C].Type].Item1)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = " $($Script:ThePlayer.ActionListing[[ActionSlot]::C].Name)"
                    UseATReset = $true
                }
            ))
            Write-Host "$([StatusTechniqueSelectionWindow]::BaNameBlank.ToAnsiControlSequenceString())$($a.ToAnsiControlSequenceString())"
            $this.ActionCDrawDirty = $false
        }
        If($this.ActionDDrawDirty -EQ $true) {
            [StatusTechniqueSelectionWindow]::BaNameBlank.Prefix.Coordinates = [ATCoordinates]@{
                Row    = $this.ActionDDrawCoords.Row
                Column = $this.ActionDDrawCoords.Column + 1
            }
            [ATStringComposite]$a = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::D].Type].Item2
                        Coordinates     = $this.ActionDDrawCoords
                    }
                    UserData   = "$($Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::D].Type].Item1)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = " $($Script:ThePlayer.ActionListing[[ActionSlot]::D].Name)"
                    UseATReset = $true
                }
            ))
            Write-Host "$([StatusTechniqueSelectionWindow]::BaNameBlank.ToAnsiControlSequenceString())$($a.ToAnsiControlSequenceString())"
            $this.ActionDDrawDirty = $false
        }
        If($this.PlayerChevronDirty -EQ $true) {
            If($this.IsActive -EQ $true) {
                Foreach($c in $this.Chevrons) {
                    $c.Item1.Prefix.ForegroundColor = [CCAppleNGreenLight24]::new()
                    Write-Host "$($c.Item1.ToAnsiControlSequenceString())"
                }
            } Else {
                Foreach($c in $this.Chevrons) {
                    $c.Item1.Prefix.ForegroundColor = [CCAppleNOrangeLight24]::new()
                    Write-Host "$($c.Item1.ToAnsiControlSequenceString())"
                }
            }
            $this.PlayerChevronDirty = $false
        }
    }

    [Void]HandleInput() {
        $keyCap = $(Get-Host).UI.RawUI.ReadKey('IncludeKeyDown, NoEcho')
        Switch($keyCap.VirtualKeyCode) {
            13 {
                Switch($this.ActiveChevronIndex) {
                    0 {
                        $Script:StatusEsSelectedSlot = [ActionSlot]::A
                    }

                    1 {
                        $Script:StatusEsSelectedSlot = [ActionSlot]::B
                    }

                    2 {
                        $Script:StatusEsSelectedSlot = [ActionSlot]::C
                    }

                    3 {
                        $Script:StatusEsSelectedSlot = [ActionSlot]::D
                    }
                }
                $Script:StatusScreenMode = [StatusScreenMode]::TechInventorySelection
            }

            27 {
                $Script:ThePreviousGlobalGameState = $Script:TheGlobalGameState
                $Script:TheGlobalGameState         = [GameStatePrimary]::GamePlayScreen
            }

            38 {
                Try {
                    $Script:TheSfxMPlayer.Open($Script:SfxUiChevronMove)
                    $Script:TheSfxMPlayer.Play()
                } Catch {
                    Write-Host 'Blew up.'
                }

                If(($this.ActiveChevronIndex - 1) -LT 0) {
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $false
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([StatusTechniqueSelectionWindow]::PlayerChevronBlankCharacter)"
                    $this.ActiveChevronIndex                                = 3
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $true
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([StatusTechniqueSelectionWindow]::PlayerChevronCharacter)"
                } Elseif(($this.ActiveChevronIndex - 1) -GE 0) {
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $false
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([StatusTechniqueSelectionWindow]::PlayerChevronBlankCharacter)"
                    $this.ActiveChevronIndex--
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $true
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([StatusTechniqueSelectionWindow]::PlayerChevronCharacter)"
                }
                $this.PlayerChevronDirty = $true
            }

            40 {
                Try {
                    $Script:TheSfxMPlayer.Open($Script:SfxUiChevronMove)
                    $Script:TheSfxMPlayer.Play()
                } Catch {
                    Write-Host 'Blew up'
                }
                If(($this.ActiveChevronIndex + 1) -GT 3) {
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $false
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([StatusTechniqueSelectionWindow]::PlayerChevronBlankCharacter)"
                    $this.ActiveChevronIndex                                = 0
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $true
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([StatusTechniqueSelectionWindow]::PlayerChevronCharacter)"
                } Elseif(($this.ActiveChevronIndex + 1) -LE 3) {
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $false
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([StatusTechniqueSelectionWindow]::PlayerChevronBlankCharacter)"
                    $this.ActiveChevronIndex++
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $true
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([StatusTechniqueSelectionWindow]::PlayerChevronCharacter)"
                }
                $this.PlayerChevronDirty = $true
            }
        }
    }

    [Void]SetAllActionDrawDirty() {
        $this.ActionADrawDirty = $true
        $this.ActionBDrawDirty = $true
        $this.ActionCDrawDirty = $true
        $this.ActionDDrawDirty = $true
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# STATUS TECHNIQUE INVENTORY WINDOW
#
#//////////////////////////////////////////////////////////////////////////////

Class StatusTechniqueInventoryWindow : WindowBase {
    Static [Int]$WindowLTRow    = 4
    Static [Int]$WindowLTColumn = 22
    Static [Int]$WindowRBRow    = 16
    Static [Int]$WindowRBColumn = 80

    Static [String]$IChevronCharacter           = '❱'
    Static [String]$IChevronCharacterBlank      = ' '
    Static [String]$PagingChevronRightCharacter = "`u{1433}"
    Static [String]$PagingChevronLeftCharacter  = "`u{1438}"
    Static [String]$PagingChevronBlankCharacter = ' '
    Static [String]$DivLineHorizontalString     = '─────────────────────────────────────────────────────────'
    Static [String]$ZpLineBlank                 = '                                                         '
    Static [String]$DescLineBlank               = '                                                         '
    Static [String]$ZeroPagePrompt              = 'You have no techniques in your inventory.'
    Static [String]$WindowTitle                 = 'Inventory'

    Static [ATString]$PagingChevronRight = [ATString]@{
        Prefix = [ATStringPrefix]@{
            ForegroundColor = [CCAppleYellowLight24]::new()
        }
        UserData   = "$([StatusTechniqueInventoryWindow]::PagingChevronRightCharacter)"
        UseATReset = $true
    }
    Static [ATString]$PagingChevronLeft = [ATString]@{
        Prefix = [ATStringPrefix]@{
            ForegroundColor = [CCAppleYellowLight24]::new()
        }
        UserData   = "$([StatusTechniqueInventoryWindow]::PagingChevronLeftCharacter)"
        UseATReset = $true
    }
    Static [ATString]$PagingChevronRightBlank = [ATStringNone]::new()
    Static [ATString]$PagingChevronLeftBlank = [ATStringNone]::new()
    Static [ATString]$DivLineHorizontal = [ATString]@{
        Prefix = [ATStringPrefix]@{
            ForegroundColor = [CCTextDefault24]::new()
        }
        UserData   = "$([StatusTechniqueInventoryWindow]::DivLineHorizontalString)"
        UseATReset = $true
    }

    Static [Boolean]$DebugMode = $false

    [Int]$ItemsPerPage
    [Int]$NumPages
    [Int]$CurrentPage
    [Int]$ActiveIChevronIndex
    [Boolean]$PlayerChevronDirty
    [Boolean]$PagingChevronRightDirty
    [Boolean]$PagingChevronLeftDirty
    [Boolean]$ItemsListDirty
    [Boolean]$CurrentPageDirty
    [Boolean]$PlayerChevronVisible
    [Boolean]$PagingChevronRightVisible
    [Boolean]$PagingChevronLeftVisible
    [Boolean]$ZeroPageActive
    [Boolean]$BookDirty
    [Boolean]$ActiveItemBlinking
    [Boolean]$DivLineDirty
    [Boolean]$ItemDescDirty
    [Boolean]$ZpBlankedDirty
    [Boolean]$ZpPromptDirty
    [Boolean]$IsActive
    [Boolean]$IsBlanked
    [List[ATString]]$ItemLabels
    [List[ATString]]$ItemLabelBlanks
    [List[BattleAction]]$PageRefs
    [List[ValueTuple[[ATString], [Boolean]]]]$IChevrons

    StatusTechniqueInventoryWindow() : base() {
        $this.LeftTop = [ATCoordinates]@{
            Row    = [StatusTechniqueInventoryWindow]::WindowLTRow
            Column = [StatusTechniqueInventoryWindow]::WindowLTColumn
        }
        $this.RightBottom = [ATCoordinates]@{
            Row    = [StatusTechniqueInventoryWindow]::WindowRBRow
            Column = [StatusTechniqueInventoryWindow]::WindowRBColumn
        }

        $this.UpdateDimensions()

        $this.SetupTitle([StatusTechniqueInventoryWindow]::WindowTitle, [CCTextDefault24]::new())

        $this.ItemsPerPage              = 10
        $this.NumPages                  = 1
        $this.CurrentPage               = 1
        $this.ActiveIChevronIndex       = 0
        $this.PlayerChevronDirty        = $true
        $this.PagingChevronRightDirty   = $true
        $this.PagingChevronLeftDirty    = $true
        $this.ItemsListDirty            = $true
        $this.CurrentPageDirty          = $true
        $this.PlayerChevronVisible      = $true
        $this.PagingChevronRightVisible = $false
        $this.PagingChevronLeftVisible  = $false
        $this.ZeroPageActive            = $false
        $this.BookDirty                 = $true
        $this.ActiveItemBlinking        = $false
        $this.DivLineDirty              = $true
        $this.ItemDescDirty             = $true
        $this.ZpBlankedDirty            = $true
        $this.ZpPromptDirty             = $true
        $this.IsActive                  = $false
        $this.IsBlanked                 = $false
        $this.PageRefs                  = $null

        $this.CreateIChevrons()
        $this.ConfigurePagingChevrons()
        $this.ConfigureDivLine()
    }

    [Void]Draw() {
        ([WindowBase]$this).Draw()

        If($this.IsActive -EQ $true) {
            $this.IsBlanked = $false
            If($this.BookDirty -EQ $true) {
                $this.CalculateNumPages()
                $this.BookDirty = $false
            }
            If($this.CurrentPageDirty -EQ $true) {
                $this.PopulatePage()
            }
            If($this.ZeroPageActive -EQ $true) {
                $this.WriteZeroInventoryPage()
            } Else {
                If($this.DivLineDirty -EQ $true) {
                    Write-Host "$([StatusTechniqueInventoryWindow]::DivLineHorizontal.ToAnsiControlSequenceString())"
                    $this.DivLineDirty = $false
                }
                If($this.PlayerChevronVisible -EQ $true -AND $this.PlayerChevronDirty -EQ $true) {
                    Foreach($ic in $this.IChevrons) {
                        Write-Host "$($ic.Item1.ToAnsiControlSequenceString())"
                    }
                    $this.PlayerChevronDirty = $false
                }
                If($this.NumPages -GT 1) {
                    If($this.CurrentPage -EQ 1) {
                        If($this.PagingChevronLeftVisible -EQ $true) {
                            Write-Host "$([StatusTechniqueInventoryWindow]::PagingChevronLeftBlank.ToAnsiControlSequenceString())"
                            $this.PagingChevronLeftVisible = $false
                            $this.PagingChevronLeftDirty   = $true
                        }
                        If($this.PagingChevronRightVisible -EQ $false) {
                            $this.PagingChevronRightVisible = $true
                        }
                        If(($this.PagingChevronRightVisible -EQ $true) -AND ($this.PagingChevronRightDirty -EQ $true)) {
                            Write-Host "$([StatusTechniqueInventoryWindow]::PagingChevronRight.ToAnsiControlSequenceString())"
                            $this.PagingChevronRightDirty = $false
                        }
                    } Elseif(($this.CurrentPage -GT 1) -AND ($this.CurrentPage -LT $this.NumPages)) {
                        If($this.PagingChevronLeftVisible -EQ $false) {
                            $this.PagingChevronLeftVisible = $true
                        }
                        If($this.PagingChevronRightVisible -EQ $false) {
                            $this.PagingChevronRightVisible = $true
                        }
                        If(($this.PagingChevronRightVisible -EQ $true) -AND ($this.PagingChevronRightDirty -EQ $true)) {
                            Write-Host "$([StatusTechniqueInventoryWindow]::PagingChevronLeft.ToAnsiControlSequenceString())"
                            $this.PagingChevronRightDirty = $false
                        }
                        If(($this.PagingChevronLeftVisible -EQ $true) -AND ($this.PagingChevronLeftDirty -EQ $true)) {
                            Write-Host "$([StatusTechniqueInventoryWindow]::PagingChevronRight.ToAnsiControlSequenceString())"
                            $this.PagingChevronLeftDirty = $false
                        }
                    } Elseif($this.CurrentPage -GE $this.NumPages) {
                        If($this.PagingChevronRightVisible -EQ $true) {
                            Write-Host "$([StatusTechniqueInventoryWindow]::PagingChevronRightBlank.ToAnsiControlSequenceString())"
                            $this.PagingChevronRightVisible = $false
                            $this.PagingChevronRightDirty   = $true
                        }
                        If($this.PagingChevronLeftVisible -EQ $false) {
                            $this.PagingChevronLeftVisible = $true
                        }
                        If(($this.PagingChevronLeftVisible -EQ $true) -AND ($this.PagingChevronLeftDirty -EQ $true)) {
                            Write-Host "$([StatusTechniqueInventoryWindow]::PagingChevronLeft.ToAnsiControlSequenceString())"
                            $this.PagingChevronLeftDirty = $false
                        }
                    }
                } Elseif($this.NumPages -EQ 1) {
                    If($this.PagingChevronLeftVisible -EQ $true) {
                        $this.PagingChevronLeftVisible = $false
                    }
                    If($this.PagingChevronRightVisible -EQ $true) {
                        $this.PagingChevronRightVisible = $false
                    }
                    If($this.PagingChevronLeftVisible -EQ $false) {
                        Write-Host "$([StatusTechniqueInventoryWindow]::PagingChevronLeftBlank.ToAnsiControlSequenceString())"
                    }
                    If($this.PagingChevronRightVisible -EQ $false) {
                        Write-Host "$([StatusTechniqueInventoryWindow]::PagingChevronRightBlank.ToAnsiControlSequenceString())"
                    }
                }
                If($this.ActiveItemBlinking -EQ $false) {
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations = [ATDecoration]@{
                        Blink = $true
                    }
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCListItemCurrentHighlight24]::new()
                    $this.ItemsListDirty                                               = $true
                    $this.ActiveItemBlinking                                           = $true
                }
                If($this.ItemsListDirty -EQ $true) {
                    $this.WriteItemLabels()
                    Write-Host "$([ATControlSequences]::CursorHide)"
                    $this.ItemsListDirty = $false
                }
                If($this.ItemDescDirty -EQ $true) {
                    [ATStringComposite]$a = [ATStringComposite]::new(@(
                        [ATString]@{
                            Prefix = [ATStringPrefix]@{
                                ForegroundColor = [CCTextDefault24]::new()
                                Coordinates     = [ATCoordinates]@{
                                    Row    = $this.RightBottom.Row - 3
                                    Column = $this.LeftTop.Column + 1
                                }
                            }
                            UserData   = "$([StatusTechniqueInventoryWindow]::DescLineBlank)"
                            UseATReset = $true
                        },
                        [ATString]@{
                            Prefix = [ATStringPrefix]@{
                                ForegroundColor = [CCTextDefault24]::new()
                                Coordinates     = [ATCoordinates]@{
                                    Row    = $this.RightBottom.Row - 3
                                    Column = $this.LeftTop.Column + 2
                                }
                            }
                            UserData   = "$($this.PageRefs[$this.ActiveIChevronIndex].Description)"
                            UseATReset = $true
                        },
                        [ATString]@{
                            Prefix = [ATStringPrefix]@{
                                ForegroundColor = [CCTextDefault24]::new()
                                Coordinates     = [ATCoordinates]@{
                                    Row    = $this.RightBottom.Row - 1
                                    Column = $this.LeftTop.Column + 1
                                }
                            }
                            UserData   = "$([StatusTechniqueInventoryWindow]::DescLineBlank)"
                            UseATReset = $true
                        },
                        [ATString]@{
                            Prefix = [ATStringPrefix]@{
                                ForegroundColor = [CCTextDefault24]::new()
                                Coordinates     = [ATCoordinates]@{
                                    Row    = $this.RightBottom.Row - 1
                                    Column = $this.LeftTop.Column + 2
                                }
                            }
                            UserData = 'AFF: '
                        },
                        [ATString]@{
                            Prefix = [ATStringPrefix]@{
                                ForegroundColor = $Script:BATAdornmentCharTable[$this.PageRefs[$this.ActiveIChevronIndex].Type].Item2
                            }
                            UserData   = "$($Script:BATAdornmentCharTable[$this.PageRefs[$this.ActiveIChevronIndex].Type].Item1)"
                            UseATReset = $true
                        },
                        [ATString]@{
                            Prefix = [ATStringPrefix]@{
                                ForegroundColor = [CCTextDefault24]::new()
                            }
                            UserData   = "   PWR: $($this.PageRefs[$this.ActiveIChevronIndex].EffectValue)   MP COST: $("{0:d2}" -F $this.PageRefs[$this.ActiveIChevronIndex].MpCost)   CHANCE: $("{0:f0}" -F ($this.PageRefs[$this.ActiveIChevronIndex].Chance * 100))%"
                            UseATReset = $true
                        }
                    ))
                    Write-Host "$($a.ToAnsiControlSequenceString())"
                }
            }
        } Else {
            If($this.IsBlanked -EQ $false) {
                Foreach($Row in 5..15) {
                    [ATString]$a = [ATString]@{
                        Prefix = [ATStringPrefix]@{
                            Coordinates = [ATCoordinates]@{
                                Row    = $Row
                                Column = $this.LeftTop.Column + 1
                            }
                        }
                        UserData   = "$([StatusTechniqueInventoryWindow]::ZpLineBlank)"
                        UseATReset = $true
                    }
                    Write-Host "$($a.ToAnsiControlSequenceString())"
                }
                $this.IsBlanked = $true
            }
        }
    }

    [Void]CreateIChevrons() {
        $this.IChevrons = [List[ValueTuple[[ATString], [Boolean]]]]::new()
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 2
                        Column = $this.LeftTop.Column + 1
                    }
                }
                UserData   = "$([StatusTechniqueInventoryWindow]::IChevronCharacter)"
                UseATReset = $true
            },
            $true
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 3
                        Column = $this.LeftTop.Column + 1
                    }
                }
                UserData   = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                UseATReset = $true
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 4
                        Column = $this.LeftTop.Column + 1
                    }
                }
                UserData   = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                UseATReset = $true
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 5
                        Column = $this.LeftTop.Column + 1
                    }
                }
                UserData   = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                UseATReset = $true
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 6
                        Column = $this.LeftTop.Column + 1
                    }
                }
                UserData   = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                UseATReset = $true
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 2
                        Column = $this.RightBottom.Column - 17
                    }
                }
                UserData   = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                UseATReset = $true
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 3
                        Column = $this.RightBottom.Column - 17
                    }
                }
                UserData   = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                UseATReset = $true
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 4
                        Column = $this.RightBottom.Column - 17
                    }
                }
                UserData   = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                UseATReset = $true
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 5
                        Column = $this.RightBottom.Column - 17
                    }
                }
                UserData   = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                UseATReset = $true
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 6
                        Column = $this.RightBottom.Column - 17
                    }
                }
                UserData   = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                UseATReset = $true
            },
            $false
        ))
    }

    [Void]CreateItemLabels() {
        $this.ItemLabels = [List[ATString]]::new()
        [Int]$c = 0

        Foreach($i in $this.PageRefs) {
            $this.ItemLabels.Add(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.IChevrons[$c].Item1.Prefix.Coordinates.Row
                            Column = $this.IChevrons[$c].Item1.Prefix.Coordinates.Column + 2
                        }
                    }
                    UserData   = "$($i.Name)"
                    UseATReset = $true
                }
            )
            $c++ # TOTALLY A PROGRAMMER JOKE
        }
        $this.ResetIChevronPositions()
        $this.CreateItemLabelBlanks()
    }

    [Void]CreateItemLabelBlanks() {
        $this.ItemLabelBlanks = [List[ATString]]::new()
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 2
                        Column = $this.LeftTop.Column + 2
                    }
                }
                UserData   = '               '
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 3
                        Column = $this.LeftTop.Column + 2
                    }
                }
                UserData   = '               '
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 4
                        Column = $this.LeftTop.Column + 2
                    }
                }
                UserData   = '               '
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 5
                        Column = $this.LeftTop.Column + 2
                    }
                }
                UserData   = '               '
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 6
                        Column = $this.LeftTop.Column + 2
                    }
                }
                UserData   = '               '
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 2
                        Column = $this.RightBottom.Column - 16
                    }
                }
                UserData   = '               '
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 3
                        Column = $this.RightBottom.Column - 16
                    }
                }
                UserData   = '               '
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 4
                        Column = $this.RightBottom.Column - 16
                    }
                }
                UserData   = '               '
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 5
                        Column = $this.RightBottom.Column - 16
                    }
                }
                UserData   = '               '
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 6
                        Column = $this.RightBottom.Column - 16
                    }
                }
                UserData   = '               '
                UseATReset = $true
            }
        )
    }

    [Void]CalculateNumPages() {
        $pp = $Script:ThePlayer.ActionInventory.Listing.Count / $this.ItemsPerPage
        If($pp -LT 1) {
            $this.NumPages = 1
        } Else {
            $this.NumPages = [Math]::Ceiling($pp)
        }
        If($this.CurrentPage -GT $this.NumPages) {
            $this.CurrentPage = $this.NumPages
        }
    }

    [Void]TurnPageForward() {
        If(($this.CurrentPage + 1) -LE $this.NumPages) {
            $this.CurrentPage++
            $this.CurrentPageDirty   = $true
            $this.ActiveItemBlinking = $false
            $this.ItemDescDirty      = $true
        }
    }

    [Void]TurnPageBackward() {
        If(($this.CurrentPage - 1) -GE 1) {
            $this.CurrentPage--
            $this.CurrentPageDirty   = $true
            $this.ActiveItemBlinking = $false
            $this.ItemDescDirty      = $true
        }
    }

    [Void]PopulatePage() {
        If($Script:ThePlayer.ActionInventory.Listing.Count -LE 0) {
            $this.ZeroPageActive   = $true
            $this.CurrentPageDirty = $false
            $this.ZpPromptDirty    = $true
            $this.ZpBlankedDirty   = $true
        } Else {
            $this.PageRefs       = [List[BattleAction]]::new()
            $this.ZeroPageActive = $false
            $rs                  = (($this.CurrentPage * $this.ItemsPerPage) - $this.ItemsPerPage)
            $rs                  = [Math]::Clamp($rs, 0, [Int]::MaxValue)
            $re                  = 10
            
            Try {
                $this.PageRefs = $Script:ThePlayer.ActionInventory.Listing.GetRange($rs, $re)
            } Catch {
                $this.PageRefs = $Script:ThePlayer.ActionInventory.Listing.GetRange($rs, ($Script:ThePlayer.ActionInventory.Listing.Count - $rs))
            }
            $this.CreateItemLabels()
            $this.ItemsListDirty   = $true
            $this.CurrentPageDirty = $false
        }
    }

    [Void]WriteItemLabels() {
        Foreach($i in $this.ItemLabelBlanks) {
            Write-Host "$($i.ToAnsiControlSequenceString())"
        }
        Foreach($i in $this.ItemLabels) {
            Write-Host "$($i.ToAnsiControlSequenceString())"
        }
    }

    [ATString]GetActiveIChevron() {
        $this.ActiveIChevronIndex = 0

        Foreach($a in $this.IChevrons) {
            If($a.Item2 -EQ $true) {
                Return $a.Item1
            }
            $this.ActiveIChevronIndex++
        }
        $this.ActiveIChevronIndex                        = 0
        $this.IChevrons[$this.ActiveIChevronIndex].Item2 = $true

        Return $this.IChevrons[$this.ActiveIChevronIndex].Item1
    }

    [Void]WriteZeroInventoryPage() {
        If($this.ZpBlankedDirty -EQ $true) {
            Foreach($a in 5..15) {
                [ATString]$b = [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                        BackgroundColor = [CCAppleBlueDark24]::new()
                        Coordinates = [ATCoordinates]@{
                            Row    = $a
                            Column = $this.LeftTop.Column + 1
                        }
                    }
                    UserData   = "$([StatusTechniqueInventoryWindow]::ZpLineBlank)"
                    UseATReset = $true
                }
                Write-Host "$($b.ToAnsiControlSequenceString())"
            }
            $this.ZpBlankedDirty = $false
        }
        If($this.ZpPromptDirty -EQ $true) {
            [ATString]$a = [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + ($this.Height / 2)
                        Column = $this.LeftTop.Column + (($this.Width / 2) - ([StatusTechniqueInventoryWindow]::ZeroPagePrompt.Length / 2))
                    }
                }
                UserData   = "$([StatusTechniqueInventoryWindow]::ZeroPagePrompt)"
                UseATReset = $true
            }
            Write-Host "$($a.ToAnsiControlSequenceString())"
            $this.ZpPromptDirty = $false
        }
    }

    [Void]WriteMoronPage() {}

    [Void]ResetIChevronPositions() {
        $this.IChevrons[$this.ActiveIChevronIndex].Item2          = $false
        $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
        Try {
            $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecorationNone]::new()
            $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCTextDefault24]::new()
        } Catch {}
        $this.ActiveIChevronIndex                                      = 0
        $this.IChevrons[$this.ActiveIChevronIndex].Item2               = $true
        $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData      = "$([StatusTechniqueInventoryWindow]::IChevronCharacter)"
        $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations = [ATDecoration]@{
            Blink = $true
        }
        $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCApplePinkLight24]::new()
        $this.PlayerChevronDirty                                           = $true
        $this.ActiveItemBlinking                                           = $false
        $this.ItemDescDirty                                                = $true
    }

    [Void]HandleInput() {
        $keyCap = $(Get-Host).UI.RawUI.ReadKey('IncludeKeyDown, NoEcho')
        Switch($keyCap.VirtualKeyCode) {
            13 {
                $Script:StatusIsSelected      = $this.PageRefs[$this.ActiveIChevronIndex]
                [BattleAction]$EquippedAction = $Script:ThePlayer.ActionListing[$Script:StatusEsSelectedSlot]
                If($null -EQ $EquippedAction) {
                    $Script:ThePlayer.ActionListing[$Script:StatusEsSelectedSlot] = [BattleAction]::new($Script:StatusIsSelected)
                    $Script:ThePlayer.ActionInventory.RemoveActionByName($Script:StatusIsSelected.Name)
                } Else {
                    [Int]$RootCollectionIndex = $this.CurrentPage -EQ 1 ? $this.ActiveIChevronIndex : ((($this.CurrentPage - 1) * $this.ItemsPerPage) + $this.ActiveIChevronIndex)
                    $Script:ThePlayer.ActionListing[$Script:StatusEsSelectedSlot]   = [BattleAction]::new($Script:StatusIsSelected)
                    $Script:ThePlayer.ActionInventory.Listing[$RootCollectionIndex] = [BattleAction]::new($EquippedAction)
                }
                $Script:StatusScreenMode = [StatusScreenMode]::EquippedTechSelection
            }

            27 {
                $Script:StatusScreenMode = [StatusScreenMode]::EquippedTechSelection
            }

            38 {
                Try {
                    $Script:TheSfxMPlayer.Open($Script:SfxUiChevronMove)
                    $Script:TheSfxMPlayer.Play()
                } Catch {
                    Write-Host 'Blew up.'
                }
                If(($this.ActiveIChevronIndex -1) -GE 0) {
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $false
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecorationNone]::new()
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCTextDefault24]::new()
                    $this.ActiveIChevronIndex--
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $true
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = "$([StatusTechniqueInventoryWindow]::IChevronCharacter)"
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCApplePinkLight24]::new()
                }
                $this.PlayerChevronDirty = $true
                $this.ActiveItemBlinking = $false
                $this.ItemDescDirty      = $true
                $this.DivLineDirty       = $true
            }

            40 {
                Try {
                    $Script:TheSfxMPlayer.Open($Script:SfxUiChevronMove)
                    $Script:TheSfxMPlayer.Play()
                } Catch {
                    Write-Host 'Blew up.'
                }
                If(($this.ActiveIChevronIndex + 1) -LT $this.PageRefs.Count) {
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $false
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecorationNone]::new()
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCTextDefault24]::new()
                    $this.ActiveIChevronIndex++
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $true
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = "$([StatusTechniqueInventoryWindow]::IChevronCharacter)"
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCApplePinkLight24]::new()
                }
                $this.PlayerChevronDirty = $true
                $this.ActiveItemBlinking = $false
                $this.ItemDescDirty      = $true
                $this.DivLineDirty       = $true
            }

            39 {
                Try {
                    $Script:TheSfxMPlayer.Open($Script:SfxUiChevronMove)
                    $Script:TheSfxMPlayer.Play()
                } Catch {
                    Write-Host 'Blew up.'
                }
                If(($this.ActiveIChevronIndex + 5) -LT $this.PageRefs.Count) {
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $false
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecorationNone]::new()
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCTextDefault24]::new()
                    $this.ActiveIChevronIndex += 5
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $true
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = "$([StatusTechniqueInventoryWindow]::IChevronCharacter)"
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCApplePinkLight24]::new()
                }
                $this.PlayerChevronDirty = $true
                $this.ActiveItemBlinking = $false
                $this.ItemDescDirty      = $true
                $this.DivLineDirty       = $true
            }

            37 {
                Try {
                    $Script:TheSfxMPlayer.Open($Script:SfxUiChevronMove)
                    $Script:TheSfxMPlayer.Play()
                } Catch {
                    Write-Host 'Blew up.'
                }
                If(($this.ActiveIChevronIndex - 5) -GE 0) {
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $false
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecorationNone]::new()
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCTextDefault24]::new()
                    $this.ActiveIChevronIndex -= 5
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $true
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = "$([StatusTechniqueInventoryWindow]::IChevronCharacter)"
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCApplePinkLight24]::new()
                }
                $this.PlayerChevronDirty = $true
                $this.ActiveItemBlinking = $false
                $this.ItemDescDirty      = $true
                $this.DivLineDirty       = $true
            }

            68 {
                $this.TurnPageForward()
            }

            65 {
                $this.TurnPageBackward()
            }
        }
    }

    [Void]ConfigurePagingChevrons() {
        [StatusTechniqueInventoryWindow]::PagingChevronRight.Prefix.Coordinates = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 1
            Column = $this.RightBottom.Column - 2
        }
        [StatusTechniqueInventoryWindow]::PagingChevronRightBlank = [ATString]@{
            Prefix     = [ATStringPrefix]::new()
            UserData   = ' '
            UseATReset = $true
        }
        [StatusTechniqueInventoryWindow]::PagingChevronRightBlank.Prefix.Coordinates = [ATCoordinates]::new([StatusTechniqueInventoryWindow]::PagingChevronRight.Prefix.Coordinates)
        [StatusTechniqueInventoryWindow]::PagingChevronLeft.Prefix.Coordinates = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 1
            Column = $this.LeftTop.Column + 2
        }
        [StatusTechniqueInventoryWindow]::PagingChevronLeftBlank = [ATString]@{
            Prefix     = [ATStringPrefix]::new()
            UserData   = ' '
            UseATReset = $true
        }
        [StatusTechniqueInventoryWindow]::PagingChevronLeftBlank.Prefix.Coordinates = [ATCoordinates]::new([StatusTechniqueInventoryWindow]::PagingChevronLeft.Prefix.Coordinates)
    }

    [Void]ConfigureDivLine() {
        [StatusTechniqueInventoryWindow]::DivLineHorizontal.Prefix.Coordinates = [ATCoordinates]@{
            Row    = $this.RightBottom.Row - 4
            Column = $this.LeftTop.Column + 1
        }
    }

    [Void]SetFlagsDirty() {
        $this.BookDirty        = $true
        $this.CurrentPageDirty = $true
        $this.DivLineDirty     = $true
        $this.CurrentPage      = 1
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# BATTLE PHASE INDICATOR
#
#//////////////////////////////////////////////////////////////////////////////

Class BattlePhaseIndicator {
    [Boolean]$IndicatorDrawDirty
    [ATCoordinates]$IndicatorDrawCoords
    [ATStringComposite]$IndicatorStringActual
    [ATStringComposite]$IndicatorStringBlank

    BattlePhaseIndicator() {
        $this.IndicatorDrawCoords = [ATCoordinates]@{
            Row    = 24
            Column = 1
        }
    }

    [Void]Draw(
        [BattleEntity]$ActingEntity
    ) {
        If($this.IndicatorDrawDirty -EQ $true) {
            $this.IndicatorStringBlank = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCApplePinkLight24]::new()
                        Coordinates     = $this.IndicatorDrawCoords
                    }
                    UserData = 'Turn: '
                },
                [ATString]@{
                    UserData   = '              '
                    UseATReset = $true
                }
            ))
            $this.IndicatorStringActual = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCApplePinkLight24]::new()
                        Coordinates     = $this.IndicatorDrawCoords
                    }
                    UserData = 'Turn: '
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $ActingEntity.NameDrawColor
                    }
                    UserData   = "$($ActingEntity.Name)"
                    UseATReset = $true
                }
            ))
            Write-Host "$($this.IndicatorStringBlank.ToAnsiControlSequenceString())$($this.IndicatorStringActual.ToAnsiControlSequenceString())"
            # I'M OMITTING THE ORIGINAL CALL I MADE HERE TO RESET THE CURSOR POSITION TO ORIGIN - SEEMS LIKE A SHIT CALL TO MAKE
            $this.IndicatorDrawDirty = $true
        }
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# SPLASH SCREEN A (SSA) "FIGLET"
#
# I'M HIJACKING THE FIGLET!
#
# ... SORT OF. IT'S HARD CODED. DOES THIS STILL COUNT?
#
#//////////////////////////////////////////////////////////////////////////////

Class SSAFiglet {
    # I DID IT AGAIN! FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    Static [String]$LineBlankData = ' ' * $Script:MaxWidth

    # THIS LOOKS REALLY NEAT IN HERE
    # DOESN'T LINE UP FOR SHIT IN THE CODE, BUT WHATEVS
    Static [String]$TitleDataLine1 = '     ░        ░░  ░░░░░░░░       ░░░░      ░░░       ░░░        ░░░      ░░     '
    Static [String]$TitleDataLine2 = '     ▒  ▒▒▒▒▒▒▒▒  ▒▒▒▒▒▒▒▒  ▒▒▒▒  ▒▒  ▒▒▒▒  ▒▒  ▒▒▒▒  ▒▒▒▒▒  ▒▒▒▒▒  ▒▒▒▒  ▒     '
    Static [String]$TitleDataLine3 = '     ▓      ▓▓▓▓  ▓▓▓▓▓▓▓▓  ▓▓▓▓  ▓▓  ▓▓▓▓  ▓▓       ▓▓▓▓▓▓  ▓▓▓▓▓  ▓▓▓▓  ▓     '
    Static [String]$TitleDataLine4 = '     █  ████████  ████████  ████  ██  ████  ██  ███  ██████  █████        █     '
    Static [String]$TitleDataLine5 = '     █        ██        ██       ████      ███  ████  ██        ██  ████  █     '

    Static [Int]$DrawTop  = 1
    Static [Int]$DrawLeft = 1

    [Boolean]$Dirty
    [ATStringComposite]$Title

    SSAFiglet() {
        $this.Dirty = $true
        $this.Title = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row    = [SSAFiglet]::DrawTop
                        Column = [SSAFiglet]::DrawLeft
                    }
                }
                UserData   = "$([SSAFiglet]::LineBlankData)"
                UseATReset = $true
            }
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleNMintLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSAFiglet]::DrawTop
                        Column = [SSAFiglet]::DrawLeft
                    }
                }
                UserData   = "$([SSAFiglet]::TitleDataLine1)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row    = [SSAFiglet]::DrawTop + 1
                        Column = [SSAFiglet]::DrawLeft
                    }
                }
                UserData   = "$([SSAFiglet]::LineBlankData)"
                UseATReset = $true
            }
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleNGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSAFiglet]::DrawTop + 1
                        Column = [SSAFiglet]::DrawLeft
                    }
                }
                UserData   = "$([SSAFiglet]::TitleDataLine2)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row    = [SSAFiglet]::DrawTop + 2
                        Column = [SSAFiglet]::DrawLeft
                    }
                }
                UserData   = "$([SSAFiglet]::LineBlankData)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleNMintLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSAFiglet]::DrawTop + 2
                        Column = [SSAFiglet]::DrawLeft
                    }
                }
                UserData   = "$([SSAFiglet]::TitleDataLine3)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row    = [SSAFiglet]::DrawTop + 3
                        Column = [SSAFiglet]::DrawLeft
                    }
                }
                UserData   = "$([SSAFiglet]::LineBlankData)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleNGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSAFiglet]::DrawTop + 3
                        Column = [SSAFiglet]::DrawLeft
                    }
                }
                UserData   = "$([SSAFiglet]::TitleDataLine4)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row    = [SSAFiglet]::DrawTop + 4
                        Column = [SSAFiglet]::DrawLeft
                    }
                }
                UserData   = "$([SSAFiglet]::LineBlankData)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleNMintLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSAFiglet]::DrawTop + 4
                        Column = [SSAFiglet]::DrawLeft
                    }
                }
                UserData   = "$([SSAFiglet]::TitleDataLine5)"
                UseATReset = $true
            }
        ))
    }

    [Void]Draw() {
        If($this.Dirty -EQ $true) {
            Write-Host "$($this.Title.CompositeActual[0].ToAnsiControlSequenceString())$($this.Title.CompositeActual[1].ToAnsiControlSequenceString())"
            Start-Sleep -Seconds 0.75
            Write-Host "$($this.Title.CompositeActual[2].ToAnsiControlSequenceString())$($this.Title.CompositeActual[3].ToAnsiControlSequenceString())"
            Start-Sleep -Seconds 0.75
            Write-Host "$($this.Title.CompositeActual[4].ToAnsiControlSequenceString())$($this.Title.CompositeActual[5].ToAnsiControlSequenceString())"
            Start-Sleep -Seconds 0.75
            Write-Host "$($this.Title.CompositeActual[6].ToAnsiControlSequenceString())$($this.Title.CompositeActual[7].ToAnsiControlSequenceString())"
            Start-Sleep -Seconds 0.75
            Write-Host "$($this.Title.CompositeActual[8].ToAnsiControlSequenceString())$($this.Title.CompositeActual[9].ToAnsiControlSequenceString())"
            Start-Sleep -Seconds 0.75
            $this.Dirty = $false
        }
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# SSA SUBTITLE
#
#//////////////////////////////////////////////////////////////////////////////

Class SSASubtitle {
    Static [Int]$DrawTop  = 9
    Static [Int]$DrawLeft = 33

    [Boolean]$Dirty
    [ATStringComposite]$Text

    SSASubtitle() {
        $this.Dirty = $true
        $this.Text  = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft
                    }
                }
                UserData   = 'A'
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 1
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 1
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 2
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 2
                    }
                }
                UserData   = 'N'
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 3
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 3
                    }
                }
                UserData   = 'O'
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 4
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 4
                    }
                }
                UserData   = 'T'
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 5
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 5
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 6
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 6
                    }
                }
                UserData   = 'G'
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 7
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 7
                    }
                }
                UserData   = 'A'
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 8
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 8
                    }
                }
                UserData   = 'R'
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 9
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 9
                    }
                }
                UserData   = 'Y'
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 10
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 10
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 11
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 11
                    }
                }
                UserData   = 'G'
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 12
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 12
                    }
                }
                UserData   = 'A'
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 13
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 13
                    }
                }
                UserData   = 'M'
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 14
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 14
                    }
                }
                UserData   = 'E'
                UseATReset = $true
            }
        ))
    }

    [Void]Draw() {
        $this.Text.CompositeActual[1].Prefix.ForegroundColor = [CCRandom24]::new()
        $this.Text.CompositeActual[5].Prefix.ForegroundColor = [CCRandom24]::new()
        $this.Text.CompositeActual[7].Prefix.ForegroundColor = [CCRandom24]::new()
        $this.Text.CompositeActual[9].Prefix.ForegroundColor = [CCRandom24]::new()
        $this.Text.CompositeActual[13].Prefix.ForegroundColor = [CCRandom24]::new()
        $this.Text.CompositeActual[15].Prefix.ForegroundColor = [CCRandom24]::new()
        $this.Text.CompositeActual[17].Prefix.ForegroundColor = [CCRandom24]::new()
        $this.Text.CompositeActual[19].Prefix.ForegroundColor = [CCRandom24]::new()
        $this.Text.CompositeActual[23].Prefix.ForegroundColor = [CCRandom24]::new()
        $this.Text.CompositeActual[25].Prefix.ForegroundColor = [CCRandom24]::new()
        $this.Text.CompositeActual[27].Prefix.ForegroundColor = [CCRandom24]::new()
        $this.Text.CompositeActual[29].Prefix.ForegroundColor = [CCRandom24]::new()

        If($this.Dirty -EQ $true) {
            Write-Host "$($this.Text.ToAnsiControlSequenceString())"
            $this.Dirty = $false
        }
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# SSA PRESS ENTER PROMPT
#
#//////////////////////////////////////////////////////////////////////////////

Class SSAPressEnterPrompt {
    Static [Int]$DrawTop    = 15
    Static [Int]$DrawLeft   = 35
    Static [Int]$DataLength = 11

    Static [String]$LineBlankData = ' ' * [SSAPressEnterPrompt]::DataLength

    [Boolean]$Dirty
    [Boolean]$DrawMode
    [ATStringComposite]$Text

    SSAPressEnterPrompt() {
        $this.Dirty    = $true
        $this.DrawMode = $false
        $this.Text     = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSAPressEnterPrompt]::DrawTop
                        Column = [SSAPressEnterPrompt]::DrawLeft
                    }
                }
                UserData   = "$([SSAPressEnterPrompt]::LineBlankData)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSAPressEnterPrompt]::DrawTop
                        Column = [SSAPressEnterPrompt]::DrawLeft
                    }
                }
                UserData   = 'PRESS ENTER'
                UseATReset = $true
            }
        ))
    }

    [Void]Draw() {
        If($this.Dirty -EQ $true) {
            If($this.DrawMode -EQ $false) {
                Write-Host "$($this.Text.CompositeActual[0].ToAnsiControlSequenceString())"
                $this.Dirty = $false
            } Else {
                Write-Host "$($this.Text.CompositeActual[1].ToAnsiControlSequenceString())"
                $this.Dirty = $false
            }
        }
    }
}









#//////////////////////////////////////////////////////////////////////////////
#
# PS NAME ENTRY WINDOW
#
# A WINDOW THAT ALLOWS THE USER TO INPUT THE DESIRED PLAYER'S NAME.
#
#//////////////////////////////////////////////////////////////////////////////

Class PSNameEntryWindow : WindowBase {
    Static [Int]$WindowLTRow = 1
    Static [Int]$WindowLTColumn = 1
    Static [Int]$WindowRBRow = 3
    Static [Int]$WindowRBColumn = 16
    
    Static [String]$WindowTitle = 'Name'
    
    # I'M NOT SURE THAT I'D NEED THIS, BUT WE'LL LEAVE IT HERE FOR GIGGLES
    Static [String]$NameBlankData = ' ' * ([PSNameEntryWindow]::WindowRBColumn - 2)
    
    [ATString]$NameActual
    [ATString]$NameBlankActual
    
    PSNameEntryWindow() : base() {
        $this.LeftTop = [ATCoordinates]@{
            Row = [PSNameEntryWindow]::WindowLTRow
            Column = [PSNameEntryWindow]::WindowLTColumn
        }
        $this.RightBottom = [ATCoordinates]@{
            Row = [PSNameEntryWindow]::WindowRBRow
            Column = [PSNameEntryWindow]::WindowRBColumn
        }
        
        $this.UpdateDimensions()
        $this.SetupTitle([PSNameEntryWindow]::WindowTitle, [CCTextDefault24]::new())
        
        $this.NameActual = [ATString]@{
            Prefix = [ATStringPrefix]@{
                Coordinates = [ATCoordinates]@{
                    Row = 10
                    Column = 1
                }
            }
            UseATReset = $true
        }
        $this.NameBlankActual = [ATString]@{
            Prefix = [ATStringPrefix]@{
                Coordinates = [ATCoordinates]@{
                    Row = 2
                    Column = 2
                }
            }
            UserData = [PSNameEntryWindow]::NameBlankData
            UseATReset = $true
        }
    }
    
    [Void]Draw() {
        ([WindowBase]$this).Draw()
    }
    
    [Void]HandleInput() {
        $Script:Rui.CursorPosition = ([ATCoordinates]@{ Row = 2; Column = 1 }).ToAutomationCoordinates()
        $KeyCap = $Script:Rui.ReadKey('IncludeKeyDown, NoEcho')
        
        While($KeyCap.VirtualKeyCode -NE 13) {
            $CPX = $Script:Rui.CursorPosition.X

            Switch($KeyCap.VirtualKeyCode) {
                8 {
                    $fpx = $Script:Rui.CursorPosition.X
                    If($fpx -GT 2) {
                        Write-Host "`b `b" -NoNewLine
                        If($this.NameActual.UserData.Length -GT 0) {
                            $this.NameActual.UserData = $this.NameActual.UserData.Remove($this.NameActual.UserData.Length - 1, 1)
                        }
                    } Elseif($fpx -LT 2) {
                        $Script:Rui.CursorPosition = ([ATCoordinates]@{ Row = 2; Column = 1 }).ToAutomationCoordinates()
                    } Elseif($fpx -EQ 2) {
                        Write-Host " `b" -NoNewline
                        If($this.NameActual.UserData.Length -GT 0) {
                            $this.NameActual.UserData = $this.NameActual.UserData.Remove($this.NameActual.UserData.Length - 1, 1)
                        }
                    }

                    Break
                }

                Default {
                    $FPX = $Script:Rui.CursorPosition.X
                    
                    If($FPX -GE ([PSNameEntryWindow]::WindowRBColumn - 2)) {
                        Break
                    } Else {
                        Write-Host "$($KeyCap.Character)" -NoNewLine
                        $this.NameActual.UserData += $KeyCap.Character
                    }
                    
                    Break
                }
            }
            
            $KeyCap = $Script:Rui.ReadKey('IncludeKeyDown, NoEcho')
        }
        
        # THIS SHOULD LIKELY HAPPEN WHEN THE USER COMES BACK TO THIS STATE FROM A FORWARD STATE
        # Write-Host "$($this.NameBlankActual.ToAnsiControlSequenceString())"
        
        # PLAY A SFX TO ACK THE ENTRY
        Try {
            $Script:TheSfxMPlayer.Open($Script:SfxUiSelectionValid)
            $Script:TheSfxMPlayer.Play()
        } Catch {}
        
        # AT THIS POINT, WE'D NEED TO CHANGE SUBSTATE
        $Script:ThePssSubstate = [PlayerSetupScreenStates]::PlayerSetupGenderSelection
        
        # WRITE THE HIDE CURSOR CSI
        Write-Host "$([ATControlSequences]::CursorHide)"
    }
}









#//////////////////////////////////////////////////////////////////////////////
#
# PS GENDER SELECTION WINDOW
#
# ALLOWS THE PLAYER TO SELECT A GENDER FOR THEIR CHARACTER.
#
#//////////////////////////////////////////////////////////////////////////////

Class PSGenderSelectionWindow : WindowBase {
    Static [Int]$WindowLTRow    = 1
    Static [Int]$WindowLTColumn = 25
    Static [Int]$WindowRBRow    = 3
    Static [Int]$WindowRBColumn = 36

    Static [String]$PlayerChevronCharacter      = '❱'
    Static [String]$PlayerChevronBlankCharacter = ' '
    Static [String]$MaleSymbol                  = '♂'
    Static [String]$FemaleSymbol                = '♀'
    Static [String]$WindowTitle                 = 'Gender'

    [Int]$ActiveChevronIndex
    [Boolean]$PlayerChevronDirty
    [Boolean]$MaleSymbolDirty
    [Boolean]$FemaleSymbolDirty
    [Boolean]$IsActive
    [ATCoordinates]$MaleSymbolDrawCoords
    [ATCoordinates]$FemaleSymbolDrawCoords
    [List[ValueTuple[[ATString], [Boolean]]]]$Chevrons
    [ATString]$MaleDisplay
    [ATString]$FemaleDisplay

    PSGenderSelectionWindow() : base() {
        $this.LeftTop = [ATCoordinates]@{
            Row    = [PSGenderSelectionWindow]::WindowLTRow
            Column = [PSGenderSelectionWindow]::WindowLTColumn
        }
        $this.RightBottom = [ATCoordinates]@{
            Row    = [PSGenderSelectionWindow]::WindowRBRow
            Column = [PSGenderSelectionWindow]::WindowRBColumn
        }

        $this.UpdateDimensions()
        $this.SetupTitle([PSGenderSelectionWindow]::WindowTitle, [CCTextDefault24]::new())

        $this.ActiveChevronIndex = 0
        $this.PlayerChevronDirty = $true
        $this.MaleSymbolDirty    = $true
        $this.FemaleSymbolDirty  = $true
        $this.IsActive           = $false

        $this.MaleSymbolDrawCoords = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 1
            Column = $this.LeftTop.Column + 3
        }
        $this.FemaleSymbolDrawCoords = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 1
            Column = $this.LeftTop.Column + 8
        }

        $this.MaleDisplay = [ATString]@{
            Prefix = [ATStringPrefix]@{
                ForegroundColor = [CCTextDefault24]::new()
                Coordinates     = $this.MaleSymbolDrawCoords
            }
            UserData   = [PSGenderSelectionWindow]::MaleSymbol
            UseATReset = $true
        }
        $this.FemaleDisplay = [ATString]@{
            Prefix = [ATStringPrefix]@{
                ForegroundColor = [CCTextDefault24]::new()
                Coordinates     = $this.FemaleSymbolDrawCoords
            }
            UserData   = [PSGenderSelectionWindow]::FemaleSymbol
            UseATReset = $true
        }

        $this.CreateChevrons()
    }

    [Void]CreateChevrons() {
        $this.Chevrons = [List[ValueTuple[[ATString], [Boolean]]]]::new()
        $this.Chevrons.Add(
            [ValueTuple]::Create(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAppleGreenLight24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.MaleSymbolDrawCoords.Row
                            Column = $this.MaleSymbolDrawCoords.Column - 1
                        }
                    }
                    UserData   = "$([PSGenderSelectionWindow]::PlayerChevronCharacter)"
                    UseATReset = $true
                },
                $true
            )
        )
        $this.Chevrons.Add(
            [ValueTuple]::Create(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAppleGreenLight24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.FemaleSymbolDrawCoords.Row
                            Column = $this.FemaleSymbolDrawCoords.Column - 1
                        }
                    }
                    UserData   = "$([PSGenderSelectionWindow]::PlayerChevronBlankCharacter)"
                    UseATReset = $true
                },
                $false
            )
        )
    }

    [Void]Draw() {
        ([WindowBase]$this).Draw()

        If($this.MaleSymbolDirty -EQ $true) {
            Write-Host "$($this.MaleDisplay.ToAnsiControlSequenceString())"
            $this.MaleSymbolDirty = $false
        }

        If($this.FemaleSymbolDirty -EQ $true) {
            Write-Host "$($this.FemaleDisplay.ToAnsiControlSequenceString())"
            $this.FemaleSymbolDirty = $false
        }

        If($this.PlayerChevronDirty -EQ $true -OR $this.IsActive -EQ $true) {
            Foreach($c in $this.Chevrons) {
                If($this.IsActive -EQ $true) {
                    $c.Item1.Prefix.ForegroundColor = [CCAppleNGreenLight24]::new()
                } Else {
                    $c.Item1.Prefix.ForegroundColor = [CCAppleNOrangeLight24]::new()
                }
                Write-Host "$($c.Item1.ToAnsiControlSequenceString())"
            }
            $this.PlayerChevronDirty = $false
        }
    }

    [Void]HandleInput() {
        $keyCap = $(Get-Host).UI.RawUI.ReadKey('IncludeKeyDown, NoEcho')
        Switch($keyCap.VirtualKeyCode) {
            13 { # ENTER
                Try {
                    $Script:TheSfxMPlayer.Open($Script:SfxUiSelectionValid)
                    $Script:TheSfxMPlayer.Play()
                } Catch {}

                $Script:ThePssSubstate = [PlayerSetupScreenStates]::PlayerSetupPointAllocate
            }
            
            27 { # ESCAPE
                Try {
                    $Script:TheSfxMPlayer.Open($Script:SfxUiChevronMove)
                    $Script:TheSfxMPlayer.Play()
                } Catch {}
                
                $Script:ThePssSubstate = [PlayerSetupScreenStates]::PlayerSetupNameEntry
            }
            
            37 { # LEFT ARROW
                Try {
                    $Script:TheSfxMPlayer.Open($Script:SfxUiChevronMove)
                    $Script:TheSfxMPlayer.Play()
                } Catch {}
                
                $this.Chevrons[$this.ActiveChevronIndex].Item2          = $false
                $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = [PSGenderSelectionWindow]::PlayerChevronBlankCharacter
                $this.ActiveChevronIndex                                = ($this.ActiveChevronIndex - 1 + $this.Chevrons.Count) % $this.Chevrons.Count
                $this.Chevrons[$this.ActiveChevronIndex].Item2          = $true
                $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = [PSGenderSelectionWindow]::PlayerChevronCharacter
                $this.PlayerChevronDirty                                = $true
            }
            
            39 { # RIGHT ARROW
                Try {
                    $Script:TheSfxMPlayer.Open($Script:SfxUiChevronMove)
                    $Script:TheSfxMPlayer.Play()
                } Catch {}
                
                $this.Chevrons[$this.ActiveChevronIndex].Item2          = $false
                $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = [PSGenderSelectionWindow]::PlayerChevronBlankCharacter
                $this.ActiveChevronIndex                                = ($this.ActiveChevronIndex + 1) % $this.Chevrons.Count
                $this.Chevrons[$this.ActiveChevronIndex].Item2          = $true
                $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = [PSGenderSelectionWindow]::PlayerChevronCharacter
                $this.PlayerChevronDirty                                = $true
            }
        }
    }

    [Void]SetAsActive() {
        $this.IsActive                                          = $true
        $this.PlayerChevronDirty                                = $true
        $this.MaleSymbolDirty                                   = $true
        $this.FemaleSymbolDirty                                 = $true
        $this.Chevrons[$this.ActiveChevronIndex].Item2          = $false
        $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = [PSGenderSelectionWindow]::PlayerChevronBlankCharacter
        $this.ActiveChevronIndex                                = 0 # Reset to male as default selection
        $this.Chevrons[$this.ActiveChevronIndex].Item2          = $true
        $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = [PSGenderSelectionWindow]::PlayerChevronCharacter
        $this.PlayerChevronDirty                                = $true
    }

    [Void]SetAsInactive() {
        $this.IsActive           = $false
        $this.PlayerChevronDirty = $true
    }
}









#//////////////////////////////////////////////////////////////////////////////
#
# PS BONUS POINT ALLOC WINDOW
#
# ALLOWS THE PLAYER TO ALLOCATE BONUS POINTS TO THE RANDOMLY GENERATED STATS.
# THESE STATS CAN BE REROLLED BY PRESSING THE R KEY.
#
#//////////////////////////////////////////////////////////////////////////////

Class PSBonusPointAllocWindow : WindowBase {
    Static [Int]$WindowLTRow = 5
    Static [Int]$WindowLTColumn = 1
    Static [Int]$WindowRBRow = 15
    Static [Int]$WindowRBColumn = 22
    
    Static [String]$WindowTitle = 'Bonus Points'
    Static [String]$PointsLeftData = 'Points Left: '
    Static [String]$AtkPromptData = 'ATK: '
    Static [String]$DefPromptData = 'DEF: '
    Static [String]$MatPromptData = 'MAT: '
    Static [String]$MdfPromptData = 'MDF: '
    Static [String]$SpdPromptData = 'SPD: '
    Static [String]$AccPromptData = 'ACC: '
    Static [String]$LckPromptData = 'LCK: '
    Static [String]$ChevronLeftData = "`u{27E8}"
    Static [String]$ChevronRightData = "`u{27E9}"
    Static [String]$NumberDialLeftArrowData = "`u{23F4}"
    Static [String]$NumberDialRightArrowData = "`u{23F5}"
    
    Static [ConsoleColor24]$NumberDialActiveColor = [CCAppleNPinkLight24]::new()
    
    [Int]$PointsPool
    [Int]$AtkPoints
    [Int]$DefPoints
    [Int]$MatPoints
    [Int]$MdfPoints
    [Int]$SpdPoints
    [Int]$AccPoints
    [Int]$LckPoints
    [Int]$AtkModPoints
    [Int]$DefModPoints
    [Int]$MatModPoints
    [Int]$MdfModPoints
    [Int]$SpdModPoints
    [Int]$AccModPoints
    [Int]$LckModPoints
    
    [Boolean]$PointsLeftPromptDirty
    [Boolean]$AtkPromptDirty
    [Boolean]$DefPromptDirty
    [Boolean]$MatPromptDirty
    [Boolean]$MdfPromptDirty
    [Boolean]$SpdPromptDirty
    [Boolean]$AccPromptDirty
    [Boolean]$LckPromptDirty
    [Boolean]$PointsLeftDataDirty
    [Boolean]$AtkDataDirty
    [Boolean]$DefDataDirty
    [Boolean]$MatDataDirty
    [Boolean]$MdfDataDirty
    [Boolean]$SpdDataDirty
    [Boolean]$AccDataDirty
    [Boolean]$LckDataDirty
    
    [ATStringComposite]$PointsLeftActual
    [ATStringComposite]$AtkPromptActual
    [ATStringComposite]$DefPromptActual
    [ATStringComposite]$MatPromptActual
    [ATStringComposite]$MdfPromptActual
    [ATStringComposite]$SpdPromptActual
    [ATStringComposite]$AccPromptActual
    [ATStringComposite]$LckPromptActual
    
    [PSBonusPointAllocState]$State

    PSBonusPointAllocWindow() : base() {
        $this.LeftTop = [ATCoordinates]@{
            Row    = [PSBonusPointAllocWindow]::WindowLTRow
            Column = [PSBonusPointAllocWindow]::WindowLTColumn
        }
        $this.RightBottom = [ATCoordinates]@{
            Row    = [PSBonusPointAllocWindow]::WindowRBRow
            Column = [PSBonusPointAllocWindow]::WindowRBColumn
        }
        
        $this.UpdateDimensions()
        $this.SetupTitle([PSBonusPointAllocWindow]::WindowTitle, [CCTextDefault24]::new())
        
        $this.PointsLeftPromptDirty = $true
        $this.AtkPromptDirty = $true
        $this.DefPromptDirty = $true
        $this.MatPromptDirty = $true
        $this.MdfPromptDirty = $true
        $this.SpdPromptDirty = $true
        $this.AccPromptDirty = $true
        $this.LckPromptDirty = $true
        $this.PointsLeftDataDirty = $false
        $this.AtkDataDirty = $false
        $this.DefDataDirty = $false
        $this.MatDataDirty = $false
        $this.MdfDataDirty = $false
        $this.SpdDataDirty = $false
        $this.AccDataDirty = $false
        $this.LckDataDirty = $false
        $this.State = [PSBonusPointAllocState]::AtkPointsMod
        $this.PointsPool = 10
        $this.AtkPoints = 0
        $this.DefPoints = 0
        $this.MatPoints = 0
        $this.MdfPoints = 0
        $this.SpdPoints = 0
        $this.AccPoints = 0
        $this.LckPoints = 0
        $this.AtkModPoints = 0
        $this.DefModPoints = 0
        $this.MatModPoints = 0
        $this.MdfModPoints = 0
        $this.SpdModPoints = 0
        $this.AccModPoints = 0
        $this.LckModPoints = 0        
        
        $this.GenerateStats()
        
        $this.SetupPointsLeftActual()
        $this.SetupAtkPromptActual()
        $this.SetupDefPromptActual()
        $this.SetupMatPromptActual()
        $this.SetupMdfPromptActual()
        $this.SetupSpdPromptActual()
        $this.SetupAccPromptActual()
        $this.SetupLckPromptActual()
        
        $this.UpdateStateTargetVisuals()
    }
    
    [Void]GenerateStats() {
        $this.AtkPoints = (Get-Random -Minimum 3 -Maximum 15)
        $this.DefPoints = (Get-Random -Minimum 3 -Maximum 15)
        $this.MatPoints = (Get-Random -Minimum 3 -Maximum 15)
        $this.MdfPoints = (Get-Random -Minimum 3 -Maximum 15)
        $this.SpdPoints = (Get-Random -Minimum 3 -Maximum 15)
        $this.AccPoints = (Get-Random -Minimum 3 -Maximum 15)
        $this.LckPoints = (Get-Random -Minimum 3 -Maximum 15)
    }
    
    [Void]CycleStateForward() {
        Switch($this.State) {
            ([PSBonusPointAllocState]::AtkPointsMod) {
                $this.State = [PSBonusPointAllocState]::DefPointsMod
                
                $this.AtkPromptActual.CompositeActual[0].Prefix.Decorations = [ATDecorationNone]::new()
                $this.AtkPromptActual.CompositeActual[0].Prefix.ForegroundColor = [CCTextDefault24]::new()
                $this.AtkPromptActual.CompositeActual[2].Prefix.Decorations = [ATDecorationNone]::new()
                $this.AtkPromptDirty = $true
                
                Break
            }
            
            ([PSBonusPointAllocState]::DefPointsMod) {
                $this.State = [PSBonusPointAllocState]::MatPointsMod
                
                $this.DefPromptActual.CompositeActual[0].Prefix.Decorations = [ATDecorationNone]::new()
                $this.DefPromptActual.CompositeActual[0].Prefix.ForegroundColor = [CCTextDefault24]::new()
                $this.DefPromptActual.CompositeActual[2].Prefix.Decorations = [ATDecorationNone]::new()
                $this.DefPromptDirty = $true
                
                Break
            }
            
            ([PSBonusPointAllocState]::MatPointsMod) {
                $this.State = [PSBonusPointAllocState]::MdfPointsMod
                
                $this.MatPromptActual.CompositeActual[0].Prefix.Decorations = [ATDecorationNone]::new()
                $this.MatPromptActual.CompositeActual[0].Prefix.ForegroundColor = [CCTextDefault24]::new()
                $this.MatPromptActual.CompositeActual[2].Prefix.Decorations = [ATDecorationNone]::new()
                $this.MatPromptDirty = $true
                
                Break
            }
            
            ([PSBonusPointAllocState]::MdfPointsMod) {
                $this.State = [PSBonusPointAllocState]::SpdPointsMod
                
                $this.MdfPromptActual.CompositeActual[0].Prefix.Decorations = [ATDecorationNone]::new()
                $this.MdfPromptActual.CompositeActual[0].Prefix.ForegroundColor = [CCTextDefault24]::new()
                $this.MdfPromptActual.CompositeActual[2].Prefix.Decorations = [ATDecorationNone]::new()
                $this.MdfPromptDirty = $true
                
                Break
            }
            
            ([PSBonusPointAllocState]::SpdPointsMod) {
                $this.State = [PSBonusPointAllocState]::AccPointsMod
                
                $this.SpdPromptActual.CompositeActual[0].Prefix.Decorations = [ATDecorationNone]::new()
                $this.SpdPromptActual.CompositeActual[0].Prefix.ForegroundColor = [CCTextDefault24]::new()
                $this.SpdPromptActual.CompositeActual[2].Prefix.Decorations = [ATDecorationNone]::new()
                $this.SpdPromptDirty = $true
                
                Break
            }
            
            ([PSBonusPointAllocState]::AccPointsMod) {
                $this.State = [PSBonusPointAllocState]::LckPointsMod
                
                $this.AccPromptActual.CompositeActual[0].Prefix.Decorations = [ATDecorationNone]::new()
                $this.AccPromptActual.CompositeActual[0].Prefix.ForegroundColor = [CCTextDefault24]::new()
                $this.AccPromptActual.CompositeActual[2].Prefix.Decorations = [ATDecorationNone]::new()
                $this.AccPromptDirty = $true
                
                Break
            }
            
            ([PSBonusPointAllocState]::LckPointsMod) {
                $this.State = [PSBonusPointAllocState]::AtkPointsMod
                
                $this.LckPromptActual.CompositeActual[0].Prefix.Decorations = [ATDecorationNone]::new()
                $this.LckPromptActual.CompositeActual[0].Prefix.ForegroundColor = [CCTextDefault24]::new()
                $this.LckPromptActual.CompositeActual[2].Prefix.Decorations = [ATDecorationNone]::new()
                $this.LckPromptDirty = $true
                
                Break
            }
        }
        
        $this.UpdateStateTargetVisuals()
    }
    
    [Void]CycleStateBackward() {
        Switch($this.State) {
            ([PSBonusPointAllocState]::AtkPointsMod) {
                $this.State = [PSBonusPointAllocState]::LckPointsMod
                
                $this.AtkPromptActual.CompositeActual[0].Prefix.Decorations = [ATDecorationNone]::new()
                $this.AtkPromptActual.CompositeActual[0].Prefix.ForegroundColor = [CCTextDefault24]::new()
                $this.AtkPromptActual.CompositeActual[2].Prefix.Decorations = [ATDecorationNone]::new()
                $this.AtkPromptDirty = $true
                
                Break
            }
            
            ([PSBonusPointAllocState]::LckPointsMod) {
                $this.State = [PSBonusPointAllocState]::AccPointsMod
                
                $this.LckPromptActual.CompositeActual[0].Prefix.Decorations = [ATDecorationNone]::new()
                $this.LckPromptActual.CompositeActual[0].Prefix.ForegroundColor = [CCTextDefault24]::new()
                $this.LckPromptActual.CompositeActual[2].Prefix.Decorations = [ATDecorationNone]::new()
                $this.LckPromptDirty = $true
                
                Break
            }
            
            ([PSBonusPointAllocState]::AccPointsMod) {
                $this.State = [PSBonusPointAllocState]::SpdPointsMod
                
                $this.AccPromptActual.CompositeActual[0].Prefix.Decorations = [ATDecorationNone]::new()
                $this.AccPromptActual.CompositeActual[0].Prefix.ForegroundColor = [CCTextDefault24]::new()
                $this.AccPromptActual.CompositeActual[2].Prefix.Decorations = [ATDecorationNone]::new()
                $this.AccPromptDirty = $true
                
                Break
            }
            
            ([PSBonusPointAllocState]::SpdPointsMod) {
                $this.State = [PSBonusPointAllocState]::MdfPointsMod
                
                $this.SpdPromptActual.CompositeActual[0].Prefix.Decorations = [ATDecorationNone]::new()
                $this.SpdPromptActual.CompositeActual[0].Prefix.ForegroundColor = [CCTextDefault24]::new()
                $this.SpdPromptActual.CompositeActual[2].Prefix.Decorations = [ATDecorationNone]::new()
                $this.SpdPromptDirty = $true
                
                Break
            }
            
            ([PSBonusPointAllocState]::MdfPointsMod) {
                $this.State = [PSBonusPointAllocState]::MatPointsMod
                
                $this.MdfPromptActual.CompositeActual[0].Prefix.Decorations = [ATDecorationNone]::new()
                $this.MdfPromptActual.CompositeActual[0].Prefix.ForegroundColor = [CCTextDefault24]::new()
                $this.MdfPromptActual.CompositeActual[2].Prefix.Decorations = [ATDecorationNone]::new()
                $this.MdfPromptDirty = $true
                
                Break
            }
            
            ([PSBonusPointAllocState]::MatPointsMod) {
                $this.State = [PSBonusPointAllocState]::DefPointsMod
                
                $this.MatPromptActual.CompositeActual[0].Prefix.Decorations = [ATDecorationNone]::new()
                $this.MatPromptActual.CompositeActual[0].Prefix.ForegroundColor = [CCTextDefault24]::new()
                $this.MatPromptActual.CompositeActual[2].Prefix.Decorations = [ATDecorationNone]::new()
                $this.MatPromptDirty = $true
                
                Break
            }
            
            ([PSBonusPointAllocState]::DefPointsMod) {
                $this.State = [PSBonusPointAllocState]::AtkPointsMod
                
                $this.DefPromptActual.CompositeActual[0].Prefix.Decorations = [ATDecorationNone]::new()
                $this.DefPromptActual.CompositeActual[0].Prefix.ForegroundColor = [CCTextDefault24]::new()
                $this.DefPromptActual.CompositeActual[2].Prefix.Decorations = [ATDecorationNone]::new()
                $this.DefPromptDirty = $true
                
                Break
            }
        }
        
        $this.UpdateStateTargetVisuals()
    }
    
    [Void]UpdateStateTargetVisuals() {
        Switch($this.State) {
            ([PSBonusPointAllocState]::AtkPointsMod) {
                $this.AtkPromptActual.CompositeActual[0].Prefix.Decorations = [ATDecoration]@{ Blink = $true }
                $this.AtkPromptActual.CompositeActual[0].Prefix.ForegroundColor = [CCAppleNYellowLight24]::new()
                $this.AtkPromptActual.CompositeActual[2].Prefix.Decorations = [ATDecoration]@{ Blink = $true }
                $this.AtkPromptDirty = $true
                
                Break
            }
            
            ([PSBonusPointAllocState]::DefPointsMod) {
                $this.DefPromptActual.CompositeActual[0].Prefix.Decorations = [ATDecoration]@{ Blink = $true }
                $this.DefPromptActual.CompositeActual[0].Prefix.ForegroundColor = [CCAppleNYellowLight24]::new()
                $this.DefPromptActual.CompositeActual[2].Prefix.Decorations = [ATDecoration]@{ Blink = $true }
                $this.DefPromptDirty = $true
                
                Break
            }
            
            ([PSBonusPointAllocState]::MatPointsMod) {
                $this.MatPromptActual.CompositeActual[0].Prefix.Decorations = [ATDecoration]@{ Blink = $true }
                $this.MatPromptActual.CompositeActual[0].Prefix.ForegroundColor = [CCAppleNYellowLight24]::new()
                $this.MatPromptActual.CompositeActual[2].Prefix.Decorations = [ATDecoration]@{ Blink = $true }
                $this.MatPromptDirty = $true
                
                Break
            }
            
            ([PSBonusPointAllocState]::MdfPointsMod) {
                $this.MdfPromptActual.CompositeActual[0].Prefix.Decorations = [ATDecoration]@{ Blink = $true }
                $this.MdfPromptActual.CompositeActual[0].Prefix.ForegroundColor = [CCAppleNYellowLight24]::new()
                $this.MdfPromptActual.CompositeActual[2].Prefix.Decorations = [ATDecoration]@{ Blink = $true }
                $this.MdfPromptDirty = $true
                
                Break
            }
            
            ([PSBonusPointAllocState]::SpdPointsMod) {
                $this.SpdPromptActual.CompositeActual[0].Prefix.Decorations = [ATDecoration]@{ Blink = $true }
                $this.SpdPromptActual.CompositeActual[0].Prefix.ForegroundColor = [CCAppleNYellowLight24]::new()
                $this.SpdPromptActual.CompositeActual[2].Prefix.Decorations = [ATDecoration]@{ Blink = $true }
                $this.SpdPromptDirty = $true
                
                Break
            }
            
            ([PSBonusPointAllocState]::AccPointsMod) {
                $this.AccPromptActual.CompositeActual[0].Prefix.Decorations = [ATDecoration]@{ Blink = $true }
                $this.AccPromptActual.CompositeActual[0].Prefix.ForegroundColor = [CCAppleNYellowLight24]::new()
                $this.AccPromptActual.CompositeActual[2].Prefix.Decorations = [ATDecoration]@{ Blink = $true }
                $this.AccPromptDirty = $true
                
                Break
            }
            
            ([PSBonusPointAllocState]::LckPointsMod) {
                $this.LckPromptActual.CompositeActual[0].Prefix.Decorations = [ATDecoration]@{ Blink = $true }
                $this.LckPromptActual.CompositeActual[0].Prefix.ForegroundColor = [CCAppleNYellowLight24]::new()
                $this.LckPromptActual.CompositeActual[2].Prefix.Decorations = [ATDecoration]@{ Blink = $true }
                $this.LckPromptDirty = $true
                
                Break
            }
        }
    }
    
    [Void]IncrementStatModVal() {
        Switch($this.State) {
            ([PSBonusPointAllocState]::AtkPointsMod) {
                If($this.PointsPool -GT 0) {
                    $this.AtkModPoints++
                    $this.DecrementPointsLeft()
                    $this.UpdateAtkPromptActual()
                }
                
                Break
            }
            
            ([PSBonusPointAllocState]::DefPointsMod) {
                If($this.PointsPool -GT 0) {
                    $this.DefModPoints++
                    $this.DecrementPointsLeft()
                    $this.UpdateDefPromptActual()
                }
                
                Break
            }
            
            ([PSBonusPointAllocState]::MatPointsMod) {
                If($this.PointsPool -GT 0) {
                    $this.MatModPoints++
                    $this.DecrementPointsLeft()
                    $this.UpdateMatPromptActual()
                }
                
                Break
            }
            
            ([PSBonusPointAllocState]::MdfPointsMod) {
                If($this.PointsPool -GT 0) {
                    $this.MdfModPoints++
                    $this.DecrementPointsLeft()
                    $this.UpdateMdfPromptActual()
                }
                
                Break
            }
            
            ([PSBonusPointAllocState]::SpdPointsMod) {
                If($this.PointsPool -GT 0) {
                    $this.SpdModPoints++
                    $this.DecrementPointsLeft()
                    $this.UpdateSpdPromptActual()
                }
                
                Break
            }
            
            ([PSBonusPointAllocState]::AccPointsMod) {
                If($this.PointsPool -GT 0) {
                    $this.AccModPoints++
                    $this.DecrementPointsLeft()
                    $this.UpdateAccPromptActual()
                }
                
                Break
            }
            
            ([PSBonusPointAllocState]::LckPointsMod) {
                If($this.PointsPool -GT 0) {
                    $this.LckModPoints++
                    $this.DecrementPointsLeft()
                    $this.UpdateLckPromptActual()
                }
                
                Break
            }
        }
    }
    
    [Void]DecrementStatModVal() {
        Switch($this.State) {
            ([PSBonusPointAllocState]::AtkPointsMod) {
                If($this.PointsPool -LT 10 -AND $this.AtkModPoints -GT 0) {
                    $this.AtkModPoints--
                    $this.IncrementPointsLeft()
                    $this.UpdateAtkPromptActual()
                }
                
                Break
            }
            
            ([PSBonusPointAllocState]::DefPointsMod) {
                If($this.PointsPool -LT 10 -AND $this.DefModPoints -GT 0) {
                    $this.DefModPoints--
                    $this.IncrementPointsLeft()
                    $this.UpdateDefPromptActual()
                }
                
                Break
            }
            
            ([PSBonusPointAllocState]::MatPointsMod) {
                If($this.PointsPool -LT 10 -AND $this.MatModPoints -GT 0) {
                    $this.MatModPoints--
                    $this.IncrementPointsLeft()
                    $this.UpdateMatPromptActual()
                }
                
                Break
            }
            
            ([PSBonusPointAllocState]::MdfPointsMod) {
                If($this.PointsPool -LT 10 -AND $this.MdfModPoints -GT 0) {
                    $this.MdfModPoints--
                    $this.IncrementPointsLeft()
                    $this.UpdateMdfPromptActual()
                }
                
                Break
            }
            
            ([PSBonusPointAllocState]::SpdPointsMod) {
                If($this.PointsPool -LT 10 -AND $this.SpdModPoints -GT 0) {
                    $this.SpdModPoints--
                    $this.IncrementPointsLeft()
                    $this.UpdateSpdPromptActual()
                }
                
                Break
            }
            
            ([PSBonusPointAllocState]::AccPointsMod) {
                If($this.PointsPool -LT 10 -AND $this.AccModPoints -GT 0) {
                    $this.AccModPoints--
                    $this.IncrementPointsLeft()
                    $this.UpdateAccPromptActual()
                }
                
                Break
            }
            
            ([PSBonusPointAllocState]::LckPointsMod) {
                If($this.PointsPool -LT 10 -AND $this.LckModPoints -GT 0) {
                    $this.LckModPoints--
                    $this.IncrementPointsLeft()
                    $this.UpdateLckPromptActual()
                }
                
                Break
            }
        }
    }
    
    [Void]SetupPointsLeftActual() {
        $this.PointsLeftActual = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.LeftTop.Row + 1
                        Column = $this.LeftTop.Column + 3
                    }
                }
                UserData = "$([PSBonusPointAllocWindow]::PointsLeftData)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.LeftTop.Row + 1
                        Column = ($this.LeftTop.Column + 3) + [PSBonusPointAllocWindow]::PointsLeftData.Length
                    }
                }
                UserData = "{0:d2}" -F $this.PointsPool
                UseATReset = $true
            }
        ))
    }
    
    [Void]UpdatePointsLeftActual() {
        If($this.PointsPool -LE 0) {
            $this.PointsLeftActual.CompositeActual[1].Prefix.ForegroundColor = [CCAppleNRedLight24]::new()
            $this.PointsLeftActual.CompositeActual[1].Prefix.Decorations = [ATDecoration]@{ Blink = $true }
        } Else {
            $this.PointsLeftActual.CompositeActual[1].Prefix.ForegroundColor = [CCTextDefault24]::new()
            $this.PointsLeftActual.CompositeActual[1].Prefix.Decorations = [ATDecorationNone]::new()
        }
        
        $this.PointsLeftActual.CompositeActual[1].UserData = "{0:d2}" -F $this.PointsPool
        $this.PointsLeftDataDirty = $true
    }
    
    [Void]DecrementPointsLeft() {
        If(($this.PointsPool - 1) -GE 0) {
            $this.PointsPool--
            
            $this.UpdatePointsLeftActual()
        }
    }
    
    [Void]IncrementPointsLeft() {
        If(($this.PointsPool + 1) -LE 10) {
            $this.PointsPool++
            
            $this.UpdatePointsLeftActual()
        }
    }
    
    [Void]SetupAtkPromptActual() {
        $this.AtkPromptActual = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.LeftTop.Row + 3
                        Column = $this.LeftTop.Column + 4
                    }
                }
                UserData = "$([PSBonusPointAllocWindow]::AtkPromptData)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.LeftTop.Row + 3
                        Column = ($this.LeftTop.Column + 4) + [PSBonusPointAllocWindow]::AtkPromptData.Length + 1
                    }
                }
                UserData = "$([PSBonusPointAllocWindow]::NumberDialLeftArrowData)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.LeftTop.Row + 3
                        Column = ($this.LeftTop.Column + 4) + [PSBonusPointAllocWindow]::AtkPromptData.Length + 2
                    }
                }
                UserData = " {0:d3} " -F ($this.AtkPoints + $this.AtkModPoints)
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.LeftTop.Row + 3
                        Column = ($this.LeftTop.Column + 4) + [PSBonusPointAllocWindow]::AtkPromptData.Length + 7
                    }
                }
                UserData = "$([PSBonusPointAllocWindow]::NumberDialRightArrowData)"
                UseATReset = $true
            }
        ))
    }
    
    [Void]UpdateAtkPromptActual() {
        $this.AtkPromptActual.CompositeActual[2].UserData = " {0:d3} " -F ($this.AtkPoints + $this.AtkModPoints)
        
        If($this.AtkModPoints -EQ 0) {
            $this.AtkPromptActual.CompositeActual[2].Prefix.ForegroundColor = [CCTextDefault24]::new()
        } Elseif($this.AtkModPoints -GT 0) {
            $this.AtkPromptActual.CompositeActual[2].Prefix.ForegroundColor = [CCAppleNMintLight24]::new()
        }
        
        $this.AtkDataDirty = $true
    }
    
    [Void]SetupDefPromptActual() {
        $this.DefPromptActual = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.AtkPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.AtkPromptActual.CompositeActual[0].Prefix.Coordinates.Column
                    }
                }
                UserData = "$([PSBonusPointAllocWindow]::DefPromptData)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.AtkPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.AtkPromptActual.CompositeActual[0].Prefix.Coordinates.Column + [PSBonusPointAllocWindow]::DefPromptData.Length + 1
                    }
                }
                UserData = "$([PSBonusPointAllocWindow]::NumberDialLeftArrowData)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.AtkPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.AtkPromptActual.CompositeActual[0].Prefix.Coordinates.Column + [PSBonusPointAllocWindow]::DefPromptData.Length + 2
                    }
                }
                UserData = " {0:d3} " -F ($this.DefPoints + $this.DefModPoints)
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.AtkPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.AtkPromptActual.CompositeActual[0].Prefix.Coordinates.Column + [PSBonusPointAllocWindow]::DefPromptData.Length + 7
                    }
                }
                UserData = "$([PSBonusPointAllocWindow]::NumberDialRightArrowData)"
                UseATReset = $true
            }
        ))
    }
    
    [Void]UpdateDefPromptActual() {
        $this.DefPromptActual.CompositeActual[2].UserData = " {0:d3} " -F ($this.DefPoints + $this.DefModPoints)
        
        If($this.DefModPoints -EQ 0) {
            $this.DefPromptActual.CompositeActual[2].Prefix.ForegroundColor = [CCTextDefault24]::new()
        } Elseif($this.DefModPoints -GT 0) {
            $this.DefPromptActual.CompositeActual[2].Prefix.ForegroundColor = [CCAppleNMintLight24]::new()
        }
        
        $this.DefDataDirty = $true
    }
    
    [Void]SetupMatPromptActual() {
        $this.MatPromptActual = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.DefPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.DefPromptActual.CompositeActual[0].Prefix.Coordinates.Column
                    }
                }
                UserData = "$([PSBonusPointAllocWindow]::MatPromptData)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.DefPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.DefPromptActual.CompositeActual[0].Prefix.Coordinates.Column + [PSBonusPointAllocWindow]::MatPromptData.Length + 1
                    }
                }
                UserData = "$([PSBonusPointAllocWindow]::NumberDialLeftArrowData)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.DefPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.DefPromptActual.CompositeActual[0].Prefix.Coordinates.Column + [PSBonusPointAllocWindow]::MatPromptData.Length + 2
                    }
                }
                UserData = " {0:d3} " -F ($this.MatPoints + $this.MatModPoints)
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.DefPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.DefPromptActual.CompositeActual[0].Prefix.Coordinates.Column + [PSBonusPointAllocWindow]::MatPromptData.Length + 7
                    }
                }
                UserData = "$([PSBonusPointAllocWindow]::NumberDialRightArrowData)"
                UseATReset = $true
            }
        ))
    }
    
    [Void]UpdateMatPromptActual() {
        $this.MatPromptActual.CompositeActual[2].UserData = " {0:d3} " -F ($this.MatPoints + $this.MatModPoints)
        
        If($this.MatModPoints -EQ 0) {
            $this.MatPromptActual.CompositeActual[2].Prefix.ForegroundColor = [CCTextDefault24]::new()
        } Elseif($this.MatModPoints -GT 0) {
            $this.MatPromptActual.CompositeActual[2].Prefix.ForegroundColor = [CCAppleNMintLight24]::new()
        }
        
        $this.MatDataDirty = $true
    }
    
    [Void]SetupMdfPromptActual() {
        $this.MdfPromptActual = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.MatPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.MatPromptActual.CompositeActual[0].Prefix.Coordinates.Column
                    }
                }
                UserData = "$([PSBonusPointAllocWindow]::MdfPromptData)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.MatPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.MatPromptActual.CompositeActual[0].Prefix.Coordinates.Column + [PSBonusPointAllocWindow]::MdfPromptData.Length + 1
                    }
                }
                UserData = "$([PSBonusPointAllocWindow]::NumberDialLeftArrowData)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.MatPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.MatPromptActual.CompositeActual[0].Prefix.Coordinates.Column + [PSBonusPointAllocWindow]::MdfPromptData.Length + 2
                    }
                }
                UserData = " {0:d3} " -F ($this.MdfPoints + $this.MdfModPoints)
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.MatPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.MatPromptActual.CompositeActual[0].Prefix.Coordinates.Column + [PSBonusPointAllocWindow]::MdfPromptData.Length + 7
                    }
                }
                UserData = "$([PSBonusPointAllocWindow]::NumberDialRightArrowData)"
                UseATReset = $true
            }
        ))
    }
    
    [Void]UpdateMdfPromptActual() {
        $this.MdfPromptActual.CompositeActual[2].UserData = " {0:d3} " -F ($this.MdfPoints + $this.MdfModPoints)
        
        If($this.MdfModPoints -EQ 0) {
            $this.MdfPromptActual.CompositeActual[2].Prefix.ForegroundColor = [CCTextDefault24]::new()
        } Elseif($this.MdfModPoints -GT 0) {
            $this.MdfPromptActual.CompositeActual[2].Prefix.ForegroundColor = [CCAppleNMintLight24]::new()
        }
        
        $this.MdfDataDirty = $true
    }
    
    [Void]SetupSpdPromptActual() {
        $this.SpdPromptActual = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.MdfPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.MdfPromptActual.CompositeActual[0].Prefix.Coordinates.Column
                    }
                }
                UserData = "$([PSBonusPointAllocWindow]::SpdPromptData)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.MdfPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.MdfPromptActual.CompositeActual[0].Prefix.Coordinates.Column + [PSBonusPointAllocWindow]::SpdPromptData.Length + 1
                    }
                }
                UserData = "$([PSBonusPointAllocWindow]::NumberDialLeftArrowData)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.MdfPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.MdfPromptActual.CompositeActual[0].Prefix.Coordinates.Column + [PSBonusPointAllocWindow]::SpdPromptData.Length + 2
                    }
                }
                UserData = " {0:d3} " -F ($this.SpdPoints + $this.SpdModPoints)
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.MdfPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.MdfPromptActual.CompositeActual[0].Prefix.Coordinates.Column + [PSBonusPointAllocWindow]::SpdPromptData.Length + 7
                    }
                }
                UserData = "$([PSBonusPointAllocWindow]::NumberDialRightArrowData)"
                UseATReset = $true
            }
        ))
    }
    
    [Void]UpdateSpdPromptActual() {
        $this.SpdPromptActual.CompositeActual[2].UserData = " {0:d3} " -F ($this.SpdPoints + $this.SpdModPoints)
        
        If($this.SpdModPoints -EQ 0) {
            $this.SpdPromptActual.CompositeActual[2].Prefix.ForegroundColor = [CCTextDefault24]::new()
        } Elseif($this.SpdModPoints -GT 0) {
            $this.SpdPromptActual.CompositeActual[2].Prefix.ForegroundColor = [CCAppleNMintLight24]::new()
        }
        
        $this.SpdDataDirty = $true
    }
    
    [Void]SetupAccPromptActual() {
        $this.AccPromptActual = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.SpdPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.SpdPromptActual.CompositeActual[0].Prefix.Coordinates.Column
                    }
                }
                UserData = "$([PSBonusPointAllocWindow]::AccPromptData)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.SpdPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.SpdPromptActual.CompositeActual[0].Prefix.Coordinates.Column + [PSBonusPointAllocWindow]::AccPromptData.Length + 1
                    }
                }
                UserData = "$([PSBonusPointAllocWindow]::NumberDialLeftArrowData)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.SpdPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.SpdPromptActual.CompositeActual[0].Prefix.Coordinates.Column + [PSBonusPointAllocWindow]::AccPromptData.Length + 2
                    }
                }
                UserData = " {0:d3} " -F ($this.AccPoints + $this.AccModPoints)
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.SpdPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.SpdPromptActual.CompositeActual[0].Prefix.Coordinates.Column + [PSBonusPointAllocWindow]::AccPromptData.Length + 7
                    }
                }
                UserData = "$([PSBonusPointAllocWindow]::NumberDialRightArrowData)"
                UseATReset = $true
            }
        ))
    }
    
    [Void]UpdateAccPromptActual() {
        $this.AccPromptActual.CompositeActual[2].UserData = " {0:d3} " -F ($this.AccPoints + $this.AccModPoints)
        
        If($this.AccModPoints -EQ 0) {
            $this.AccPromptActual.CompositeActual[2].Prefix.ForegroundColor = [CCTextDefault24]::new()
        } Elseif($this.AccModPoints -GT 0) {
            $this.AccPromptActual.CompositeActual[2].Prefix.ForegroundColor = [CCAppleNMintLight24]::new()
        }
        
        $this.AccDataDirty = $true
    }
    
    [Void]SetupLckPromptActual() {
        $this.LckPromptActual = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.AccPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.AccPromptActual.CompositeActual[0].Prefix.Coordinates.Column
                    }
                }
                UserData = "$([PSBonusPointAllocWindow]::LckPromptData)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.AccPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.AccPromptActual.CompositeActual[0].Prefix.Coordinates.Column + [PSBonusPointAllocWindow]::LckPromptData.Length + 1
                    }
                }
                UserData = "$([PSBonusPointAllocWindow]::NumberDialLeftArrowData)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.AccPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.AccPromptActual.CompositeActual[0].Prefix.Coordinates.Column + [PSBonusPointAllocWindow]::LckPromptData.Length + 2
                    }
                }
                UserData = " {0:d3} " -F ($this.LckPoints + $this.LckModPoints)
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row = $this.AccPromptActual.CompositeActual[0].Prefix.Coordinates.Row + 1
                        Column = $this.AccPromptActual.CompositeActual[0].Prefix.Coordinates.Column + [PSBonusPointAllocWindow]::LckPromptData.Length + 7
                    }
                }
                UserData = "$([PSBonusPointAllocWindow]::NumberDialRightArrowData)"
                UseATReset = $true
            }
        ))
    }
    
    [Void]UpdateLckPromptActual() {
        $this.LckPromptActual.CompositeActual[2].UserData = " {0:d3} " -F ($this.LckPoints + $this.LckModPoints)
        
        If($this.LckModPoints -EQ 0) {
            $this.LckPromptActual.CompositeActual[2].Prefix.ForegroundColor = [CCTextDefault24]::new()
        } Elseif($this.LckModPoints -GT 0) {
            $this.LckPromptActual.CompositeActual[2].Prefix.ForegroundColor = [CCAppleNMintLight24]::new()
        }
        
        $this.LckDataDirty = $true
    }
    
    [Void]Draw() {
        ([WindowBase]$this).Draw()
        
        If($this.PointsLeftPromptDirty -EQ $true) {
            Write-Host "$($this.PointsLeftActual.ToAnsiControlSequenceString())"
            $this.PointsLeftPromptDirty = $false
        }
        If($this.PointsLeftDataDirty -EQ $true) {
            Write-Host "$($this.PointsLeftActual.CompositeActual[1].ToAnsiControlSequenceString())"
            $this.PointsLeftDataDirty = $false
        }
        If($this.AtkPromptDirty -EQ $true) {
            Write-Host "$($this.AtkPromptActual.ToAnsiControlSequenceString())"
            $this.AtkPromptDirty = $false
        }
        If($this.AtkDataDirty -EQ $true) {
            Write-Host "$($this.AtkPromptActual.CompositeActual[2].ToAnsiControlSequenceString())"
            $this.AtkDataDirty = $false
        }
        If($this.DefPromptDirty -EQ $true) {
            Write-Host "$($this.DefPromptActual.ToAnsiControlSequenceString())"
            $this.DefPromptDirty = $false
        }
        If($this.DefDataDirty -EQ $true) {
            Write-Host "$($this.DefPromptActual.CompositeActual[2].ToAnsiControlSequenceString())"
            $this.DefDataDirty = $false
        }
        If($this.MatPromptDirty -EQ $true) {
            Write-Host "$($this.MatPromptActual.ToAnsiControlSequenceString())"
            $this.MatPromptDirty = $false
        }
        If($this.MatDataDirty -EQ $true) {
            Write-Host "$($this.MatPromptActual.CompositeActual[2].ToAnsiControlSequenceString())"
            $this.MatDataDirty = $false
        }
        If($this.MdfPromptDirty -EQ $true) {
            Write-Host "$($this.MdfPromptActual.ToAnsiControlSequenceString())"
            $this.MdfPromptDirty = $false
        }
        If($this.MdfDataDirty -EQ $true) {
            Write-Host "$($this.MdfPromptActual.CompositeActual[2].ToAnsiControlSequenceString())"
            $this.MdfDataDirty = $false
        }
        If($this.SpdPromptDirty -EQ $true) {
            Write-Host "$($this.SpdPromptActual.ToAnsiControlSequenceString())"
            $this.SpdPromptDirty = $false
        }
        If($this.SpdDataDirty -EQ $true) {
            Write-Host "$($this.SpdPromptActual.CompositeActual[2].ToAnsiControlSequenceString())"
            $this.SpdDataDirty = $false
        }
        If($this.AccPromptDirty -EQ $true) {
            Write-Host "$($this.AccPromptActual.ToAnsiControlSequenceString())"
            $this.AccPromptDirty = $false
        }
        If($this.AccDataDirty -EQ $true) {
            Write-Host "$($this.AccPromptActual.CompositeActual[2].ToAnsiControlSequenceString())"
            $this.AccDataDirty = $false
        }
        If($this.LckPromptDirty -EQ $true) {
            Write-Host "$($this.LckPromptActual.ToAnsiControlSequenceString())"
            $this.LckPromptDirty = $false
        }
        If($this.LckDataDirty -EQ $true) {
            Write-Host "$($this.LckPromptActual.CompositeActual[2].ToAnsiControlSequenceString())"
            $this.LckDataDirty = $false
        }
    }
    
    [Void]HandleInput() {
        $KeyCap = $Script:Rui.ReadKey('IncludeKeyDown, NoEcho')
        While($KeyCap.VirtualKeyCode -NE 13) {
            Switch($KeyCap.VirtualKeyCode) {
                37 { # LEFT ARROW
                    $this.DecrementStatModVal()
                    
                    Break
                }
                
                39 { # RIGHT ARROW
                    $this.IncrementStatModVal()
                    
                    Break
                }
                
                38 { # UP ARROW
                    Try {
                        $Script:TheSfxMPlayer.Open($Script:SfxUiChevronMove)
                        $Script:TheSfxMPlayer.Play()
                    } Catch {}
                    $this.CycleStateBackward()
                    
                    Break
                }
                
                40 { # DOWN ARROW
                    Try {
                        $Script:TheSfxMPlayer.Open($Script:SfxUiChevronMove)
                        $Script:TheSfxMPlayer.Play()
                    } Catch {}
                    $this.CycleStateForward()
                    
                    Break
                }
            }
            
            $this.Draw()
            
            $KeyCap = $Script:Rui.ReadKey('IncludeKeyDown, NoEcho')
        }
        
        # AT THIS POINT, THE USER WILL HAVE PRESSED THE ENTER KEY
        # FOR THE PURPOSES OF PROTOTYPING, WE'LL JUST TRANSITION STATE.
        $Script:ThePssSubstate = [PlayerSetupScreenStates]::PlayerSetupAffinitySelect
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# PS AFFINITY SELECT WINDOW
#
# THIS WINDOW ALLOWS THE USER TO SELECT THEIR DESIRED AFFINITY.
#
#//////////////////////////////////////////////////////////////////////////////
Class PSAffinitySelectWindow : WindowBase {
    Static [Int]$WindowLTRow = 5
    Static [Int]$WindowLTColumn = 25
    Static [Int]$WindowRBRow = 13
    Static [Int]$WindowRBColumn = 38
    
    Static [String]$ChevronData = '❱'
    Static [String]$ChevronBlankData = ' '
    Static [String]$AffinityNameBlankData = ' ' * 7
    Static [String]$WindowTitle = ' Affinity'
    
    Static [String[]]$AffinityLabelData = @(
        'Fire',
        'Water',
        'Earth',
        'Wind',
        'Light',
        'Dark',
        'Ice'
    )
    
    [Int]$ActiveChevronIndex
    
    [Boolean]$ChevronDirty
    [Boolean]$AffinityListDirty
    [Boolean]$ActiveItemBlinking
    
    [List[ValueTuple[[ATString], [Boolean]]]]$ChevronsActual
    [List[ATStringComposite]]$AffinityLabelsActual
    [List[ATString]]$AffinityLabelBlanksActual
    [List[ATString]]$ChevronBlanksActual
    
    PSAffinitySelectWindow() : base() {
        $this.LeftTop = [ATCoordinates]@{
            Row = [PSAffinitySelectWindow]::WindowLTRow
            Column = [PSAffinitySelectWindow]::WindowLTColumn
        }
        $this.RightBottom = [ATCoordinates]@{
            Row = [PSAffinitySelectWindow]::WindowRBRow
            Column = [PSAffinitySelectWindow]::WindowRBColumn
        }
        
        $this.UpdateDimensions()
        $this.SetupTitle([PSAffinitySelectWindow]::WindowTitle, [CCTextDefault24]::new())
        
        $this.ActiveChevronIndex = 0
        $this.ChevronDirty = $true
        $this.AffinityListDirty = $true
        $this.ActiveItemBlinking = $false
        
        $this.CreateChevrons()
        $this.CreateChevronBlanks()
        $this.CreateAffinityLabels()
        $this.CreateAffinityLabelBlanks()
    }
    
    [Void]CreateChevrons() {
        $this.ChevronsActual = [List[ValueTuple[[ATString], [Boolean]]]]::new()
        For([Int]$I = 0; $I -LT [PSAffinitySelectWindow]::AffinityLabelData.Count; $I++) {
            $this.ChevronsActual.Add(
                [ValueTuple]::Create(
                    [ATString]@{
                        Prefix = [ATStringPrefix]@{
                            ForegroundColor = [CCTextDefault24]::new()
                            Coordinates = [ATCoordinates]@{
                                Row = ($this.LeftTop.Row + 1) + $I
                                Column = $this.LeftTop.Column + 2
                            }
                        }
                        UserData = "$([PSAffinitySelectWindow]::ChevronData)"
                        UseATReset = $true
                    },
                    $false
                )
            )
        }
        
        $ChevCopy = $this.ChevronsActual[0]
        $this.ChevronsActual[0] = [ValueTuple]::Create($ChevCopy.Item1, $true)
    }
    
    [Void]CreateChevronBlanks() {
        $this.ChevronBlanksActual = [List[ATString]]::new()
        For([Int]$I = 0; $I -LT [PSAffinitySelectWindow]::AffinityLabelData.Count; $I++) {
            $this.ChevronBlanksActual.Add(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        Coordinates = [ATCoordinates]@{
                            Row = ($this.LeftTop.Row + 1) + $I
                            Column = $this.LeftTop.Column + 2
                        }
                    }
                    UserData = "$([PSAffinitySelectWindow]::ChevronBlankData)"
                    UseATReset = $true
                }
            )
        }
    }
    
    [Void]CreateAffinityLabels() {
        $this.AffinityLabelsActual = [List[ATStringComposite]]::new()
        
        $this.AffinityLabelsActual.Add([ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[[BattleActionType]::ElementalFire].Item2
                    Coordinates = [ATCoordinates]@{
                        Row = $this.LeftTop.Row + 1
                        Column = $this.LeftTop.Column + 4
                    }
                }
                UserData = "$($Script:BATAdornmentCharTable[[BattleActionType]::ElementalFire].Item1)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = ' Fire'
                UseATReset = $true
            }
        )))
        
        $this.AffinityLabelsActual.Add([ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[[BattleActionType]::ElementalWater].Item2
                    Coordinates = [ATCoordinates]@{
                        Row = $this.LeftTop.Row + 2
                        Column = $this.LeftTop.Column + 4
                    }
                }
                UserData = "$($Script:BATAdornmentCharTable[[BattleActionType]::ElementalWater].Item1)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = ' Water'
                UseATReset = $true
            }
        )))
        
        $this.AffinityLabelsActual.Add([ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[[BattleActionType]::ElementalEarth].Item2
                    Coordinates = [ATCoordinates]@{
                        Row = $this.LeftTop.Row + 3
                        Column = $this.LeftTop.Column + 4
                    }
                }
                UserData = "$($Script:BATAdornmentCharTable[[BattleActionType]::ElementalEarth].Item1)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = ' Earth'
                UseATReset = $true
            }
        )))
        
        $this.AffinityLabelsActual.Add([ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[[BattleActionType]::ElementalWind].Item2
                    Coordinates = [ATCoordinates]@{
                        Row = $this.LeftTop.Row + 4
                        Column = $this.LeftTop.Column + 4
                    }
                }
                UserData = "$($Script:BATAdornmentCharTable[[BattleActionType]::ElementalWind].Item1)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = ' Wind'
                UseATReset = $true
            }
        )))
        
        $this.AffinityLabelsActual.Add([ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[[BattleActionType]::ElementalLight].Item2
                    Coordinates = [ATCoordinates]@{
                        Row = $this.LeftTop.Row + 5
                        Column = $this.LeftTop.Column + 4
                    }
                }
                UserData = "$($Script:BATAdornmentCharTable[[BattleActionType]::ElementalLight].Item1)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = ' Light'
                UseATReset = $true
            }
        )))
        
        $this.AffinityLabelsActual.Add([ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[[BattleActionType]::ElementalDark].Item2
                    Coordinates = [ATCoordinates]@{
                        Row = $this.LeftTop.Row + 6
                        Column = $this.LeftTop.Column + 4
                    }
                }
                UserData = "$($Script:BATAdornmentCharTable[[BattleActionType]::ElementalDark].Item1)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = ' Dark'
                UseATReset = $true
            }
        )))
        
        $this.AffinityLabelsActual.Add([ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[[BattleActionType]::ElementalIce].Item2
                    Coordinates = [ATCoordinates]@{
                        Row = $this.LeftTop.Row + 7
                        Column = $this.LeftTop.Column + 4
                    }
                }
                UserData = "$($Script:BATAdornmentCharTable[[BattleActionType]::ElementalIce].Item1)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = ' Ice'
                UseATReset = $true
            }
        )))
    }
    
    [Void]CreateAffinityLabelBlanks() {
        $this.AffinityLabelBlanksActual = [List[ATString]]::new()
        For([Int]$I = 0; $I -LT [PSAffinitySelectWindow]::AffinityLabelData.Count; $I++) {
            $this.AffinityLabelBlanksActual.Add(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        Coordinates = [ATCoordinates]@{
                            Row = ($this.LeftTop.Row + 1) + $I
                            Column = $this.LeftTop.Column + 5
                        }
                    }
                    UserData = "$([PSAffinitySelectWindow]::AffinityNameBlankData)"
                    UseATReset = $true
                }
            )
        }
    }
    
    [Void]Draw() {
        ([WindowBase]$this).Draw()
        
        If($this.AffinityListDirty -EQ $true) {
            For([Int]$I = 0; $I -LT [PSAffinitySelectWindow]::AffinityLabelData.Count; $I++) {
                Write-Host "$($this.AffinityLabelBlanksActual[$I].ToAnsiControlSequenceString())$($this.AffinityLabelsActual[$I].ToAnsiControlSequenceString())"
            }
            
            $this.AffinityListDirty = $false
        }
        
        If($this.ChevronDirty -EQ $true) {
            For([Int]$I = 0; $I -LT [PSAffinitySelectWindow]::AffinityLabelData.Count; $I++) {
                If($this.ChevronsActual[$I].Item2 -EQ $true) {
                    Write-Host "$($this.ChevronBlanksActual[$I].ToAnsiControlSequenceString())$($this.ChevronsActual[$I].Item1.ToAnsiControlSequenceString())"
                } Else {
                    Write-Host "$($this.ChevronBlanksActual[$I].ToAnsiControlSequenceString())"
                }
            }
            
            $this.ChevronDirty = $false
        }
    }
    
    [Void]HandleInput() {
        $KeyCap = $Script:Rui.ReadKey('IncludeKeyDown, NoEcho')
        
        While($KeyCap.VirtualKeyCode -NE 13) {
            Switch($KeyCap.VirtualKeyCode) {
                38 { # UP ARROW
                    $CurChev = $this.ChevronsActual[$this.ActiveChevronIndex]
                    $this.ChevronsActual[$this.ActiveChevronIndex] = [ValueTuple]::Create($CurChev.Item1, $false)
                    
                    If($this.ActiveChevronIndex -EQ 0) {
                        $this.ActiveChevronIndex = [PSAffinitySelectWindow]::AffinityLabelData.Count - 1
                    } Else {
                        $this.ActiveChevronIndex--
                    }
                    
                    $CurChev = $this.ChevronsActual[$this.ActiveChevronIndex]
                    $this.ChevronsActual[$this.ActiveChevronIndex] = [ValueTuple]::Create($CurChev.Item1, $true)
                    
                    $this.ChevronDirty = $true
                    
                    Try {
                        $Script:TheSfxMPlayer.Open($Script:SfxUiChevronMove)
                        $Script:TheSfxMPlayer.Play()
                    } Catch {}
                    
                    Break
                }
                
                40 { # DOWN ARROW
                    $CurChev = $this.ChevronsActual[$this.ActiveChevronIndex]
                    $this.ChevronsActual[$this.ActiveChevronIndex] = [ValueTuple]::Create($CurChev.Item1, $false)
                    
                    If($this.ActiveChevronIndex -EQ ([PSAffinitySelectWindow]::AffinityLabelData.Count - 1)) {
                        $this.ActiveChevronIndex = 0
                    } Else {
                        $this.ActiveChevronIndex++
                    }
                    
                    $CurChev = $this.ChevronsActual[$this.ActiveChevronIndex]
                    $this.ChevronsActual[$this.ActiveChevronIndex] = [ValueTuple]::Create($CurChev.Item1, $true)
                    
                    $this.ChevronDirty = $true
                    
                    Try {
                        $Script:TheSfxMPlayer.Open($Script:SfxUiChevronMove)
                        $Script:TheSfxMPlayer.Play()
                    } Catch {}
                    
                    Break
                }
            }
            
            $this.Draw()
        
            $KeyCap = $Script:Rui.ReadKey('IncludeKeyDown, NoEcho')
        }
        
        $Script:ThePssSubstate = [PlayerSetupScreenStates]::PlayerSetupProfileSelect
    }
}










#//////////////////////////////////////////////////////////////////////////////
#
# PS PROFILE SELECT WINDOW
#
# ALLOWS THE USER TO SELECT A PROFILE IMAGE FOR THEIR PLAYER CHARACTER.
# I'M VIOLATING SOME OF MY PRINCIPLES HERE AND USING SIXEL.
#
#//////////////////////////////////////////////////////////////////////////////
Class PSProfileSelectWindow : WindowBase {
    Static [Int]$WindowLTRow = 1
    Static [Int]$WindowLTColumn = 41
    Static [Int]$WindowRBRow = 16
    Static [Int]$WindowRBColumn = 66
    
    Static [String]$WindowTitle = 'Profile'
    
    [ATCoordinates]$DrawOffset
    
    [Boolean]$ProfileImgDirty

    PSProfileSelectWindow() : base() {
        $this.LeftTop = [ATCoordinates]@{
            Row = [PSProfileSelectWindow]::WindowLTRow
            Column = [PSProfileSelectWindow]::WindowLTColumn
        }
        $this.RightBottom = [ATCoordinates]@{
            Row = [PSProfileSelectWindow]::WindowRBRow
            Column = [PSProfileSelectWindow]::WindowRBColumn
        }
        
        $this.UpdateDimensions()
        $this.SetupTitle([PSProfileSelectWindow]::WindowTitle, [CCTextDefault24]::new())
        
        $this.DrawOffset = [ATCoordinates]@{
            Row = $this.LeftTop.Row + 1
            Column = $this.LeftTop.Column + 2
        }
        
        $this.ProfileImgDirty = $true
    }
    
    [Void]Draw() {
        ([WindowBase]$this).Draw()
        
        If($this.ProfileImgDirty -EQ $true) {
            Write-Host "$($this.DrawOffset.ToAnsiControlSequenceString())$($Script:Plakira)"
            
            $this.ProfileImgDirty = $false
        }
    }
    
    [Void]HandleInput() {
        $KeyCap = $Script:Rui.ReadKey('IncludeKeyDown, NoEcho')
        
        While($KeyCap.VirtualKeyCode -NE 13) {
            $KeyCap = $Script:Rui.ReadKey('IncludeKeyDown, NoEcho')
        }
    }
}










###############################################################################
#
# S10
#
# BATTLE MANAGER
#
# THIS CLASS IS SUBJECT TO SERIOUS REFACTORING AT THIS POINT. MOST OF THE CODE
# HERE IS TOTAL GARBAGE.
#
###############################################################################

Class BattleManager {
    [Int]$TurnCounter
    [Int]$TurnLimit
    [BattleEntity]$PhaseOneEntity
    [BattleEntity]$PhaseTwoEntity
    [BattleManagerState]$State

    # AT THIS POINT, I'VE OMITTED THE TWO ACTION FLAGS (THESE SHOULD COME FROM THE ENTITIES THEMSELVES)
    # AND THE SPOILS ACTION MEMBER; NOT SURE WHAT THE FUCK I NEEDED THAT THING FOR. I PROBABLY STILL
    # NEED IT, BUT I'LL WORK AROUND IT.

    BattleManager() {
        # THIS CTOR DID A WHOLE BUNCH OF CRAP THAT REALLY SHOULD BE IN THE STATE TABLE. I'M NOT DOING
        # THAT STUFF HERE.
    }

    [Void]Update() {
        # MAKE PRELIMINARY OUT-OF-BAND DRAW CALLS TO ENSURE THAT THE VISUAL DISPLAY IS KOSHER
        $Script:ThePlayer.Update()
        $Script:TheCurrentEnemy.Update()
        $Script:ThePlayerBattleStatWindow.Draw()
        $Script:TheEnemyBattleStatWindow.Draw()
        $Script:TheBattleEnemyImageWindow.Draw()
        $Script:ThePlayerBattleActionWindow.Draw()
        $Script:TheBattleStatusMessageWindow.Draw()
        $Script:Rui.CursorPosition = $([ATCoordinates]::new(0, 0)).ToAutomationCoordinates()

        # HERE COMES THE HONKER BLOCK
        # THESE CASES WERE ORIGINALLY UNSCOPED, WHICH IS FUCKING LAZY ON MY PART
        Switch($this.State) {
            ([BattleManagerState]::TurnIncrement) {
                If($this.TurnLimit -GT 0) {
                    If(($this.TurnCounter + 1) -GT $this.TurnLimit) {
                        $this.State = [BattleManagerState]::BattleLost

                        Return
                    }
                }
                $this.TurnCounter++
                $this.State = [BattleManagerState]::PhaseOrdering

                Return
            }

            ([BattleManagerState]::PhaseOrdering) {
                [Single]$PlayerEffectiveSpeed = 0.0
                [Single]$EnemyEffectiveSpeed  = 0.0

                $PlayerEffectiveSpeed = $Script:ThePlayer.Stats[[StatId]::Speed].Base + ($(Get-Random -Minimum 0.0 -Maximum 1.0) * $Script:ThePlayer.Stats[[StatId]::Luck].Base)
                $EnemyEffectiveSpeed  = $Script:TheCurrentEnemy.Stats[[StatId]::Speed].Base + ($(Get-Random -Minimum 0.0 -Maximum 1.0) * $Script:TheCurrentEnemy.Stats[[StatId]::Luck].Base)
                [Single]$EsWinner     = [Math]::Max($PlayerEffectiveSpeed, $EnemyEffectiveSpeed)
                If($EsWinner -EQ $PlayerEffectiveSpeed) {
                    $this.PhaseOneEntity = $Script:ThePlayer
                    $this.PhaseTwoEntity = $Script:TheCurrentEnemy
                } Elseif($EsWinner -EQ $EnemyEffectiveSpeed) {
                    $this.PhaseOneEntity = $Script:TheCurrentEnemy
                    $this.PhaseTwoEntity = $Script:ThePlayer
                }
                $this.State = [BattleManagerState]::PhaseAExecution

                Return
            }

            ([BattleManagerState]::PhaseAExecution) {
                # THE FIRST OF THE NASTY BLOCKS
                # DESPITE THIS BEING A SECOND PASS AT THIS CODE, I'LL BE COMMENTING ALONG THE WAY

                # BEFORE DOING ANYTHING, MAKE SURE THAT WE DON'T NEED TO CHANGE OUT TO THE CALCULATION STATE
                # THIS HELPS FACILITATE, PRIMARILY, THAT AN ENTITY CAN'T ACT IF THEY'RE ACTUALLY "DEAD"
                If(($this.PhaseOneEntity.Stats[[StatId]::HitPoints].Base -LE 0) -OR ($this.PhaseTwoEntity.Stats[[StatId]::HitPoints].Base -LE 0)) {
                    $this.State = [BattleManagerState]::Calculation

                    Break
                }

                # UPDATE THE PHASE INDICATOR
                $Script:TheBattlePhaseIndicator.IndicatorDrawDirty = $true
                $Script:TheBattlePhaseIndicator.Draw($this.PhaseOneEntity)

                # ENSURE THAT THE CORRESPONDING STATUS WINDOW HAS A HIGHLIGHT AROUND THE BORDER
                If($this.PhaseOneEntity -IS [Player]) {
                    $Script:ThePlayerBattleStatWindow.EntityBattlePhaseActive = $true
                    $Script:TheEnemyBattleStatWindow.EntityBattlePhaseActive  = $false
                } Else {
                    $Script:ThePlayerBattleStatWindow.EntityBattlePhaseActive = $false
                    $Script:TheEnemyBattleStatWindow.EntityBattlePhaseActive  = $true
                }
                $Script:ThePlayerBattleStatWindow.Draw()
                $Script:TheEnemyBattleStatWindow.Draw()

                # CHECK TO SEE IF THE PHASE ONE ENTITY CAN ACTUALLY ACT
                # REASONS THEY COULDN'T INCLUDE, BUT AREN'T LIMITED TO, STATUS AILMENTS LIKE SLEEP OR PARALYSIS
                If($this.PhaseOneEntity.CanAct -EQ $true) {
                    [BattleAction]$ToExecute          = $null
                    [BattleActionResult]$ActionResult = $null

                    # DETERMINE IF THE PHASE ONE ENTITY IS THE PLAYER OR NOT
                    # DIFFERENT LOGIC NEEDS TO OCCUR DEPENDING UPON THIS DECISION
                    # IF IT'S THE PLAYER, WE NEED TO BLOCK LOOP ON THE BATTLE ACTION
                    # SELECTION WINDOW SO THE PLAYER CAN CHOOSE AN ATTACK TO EXECUTE.
                    If($this.PhaseOneEntity -IS [Player]) {
                        # REFRESH THE BATTLE ACTION SELECTION WINDOW AND BLOCK LOOP ON IT
                        # THE RESULT OF THE SELECTION IS STORED IN TOEXECUTE
                        # NOTE THAT THIS IMPLEMENTATION OF HANDLEINPUT IS AN ANTI-PATTERN
                        # BUT IS REQUIRED
                        $Script:ThePlayerBattleActionWindow.SetAllActionDrawDirty()
                        While($null -EQ $ToExecute) {
                            $Script:ThePlayerBattleActionWindow.Draw()
                            $ToExecute = $Script:ThePlayerBattleActionWindow.HandleInput()
                        }

                        # THIS IS WHERE THINGS START GETTING HAIRY
                        # A LITANY OF CALLS TO WRITECOMPOSITEMESSAGE ON THE BATTLESTATUSMESSAGEWINDOW
                        # OCCUR FOLLOWING. I'M GOING TO ATTEMPT TO CONDENSE THESE CALLS.
                        $Script:TheBattleStatusMessageWindow.WriteEntityUsesMessage(
                            $this.PhaseOneEntity,
                            $this.PhaseTwoEntity,
                            $ToExecute
                        )

                        # ACTUALLY EXECUTE THE SELECTED COMMAND
                        # PS DOES SOME GOOFY SHIT WITH DISPATCHING THESE CALLS TO ICM, BUT THIS HASN'T CAUSED ANY PROBLEMS AFTER MANY HOURS
                        # OF TESTING THUS FAR.
                        $ActionResult = $(Invoke-Command $ToExecute.Effect -ArgumentList $this.PhaseOneEntity, $this.PhaseTwoEntity, $ToExecute)

                        # REFRESH THE PLAYER BATTLE STATUS WINDOW
                        $Script:ThePlayerBattleStatWindow.Draw()
                    } Else {
                        # THE PHASE ONE ENTITY IS THE ENEMY
                        # THE ACTION THE ENEMY USES IS SELECTED FROM THE "MARBLE BAG", SO NO DELAY IS NEEDED HERE.
                        [ActionSlot]$SelectedSlot = $($this.PhaseOneEntity.ActionMarbleBag | Get-Random)
                        $ToExecute                = $this.PhaseOneEntity.ActionListing[$SelectedSlot]

                        # NOTIFY THE BATTLE STATUS MESSAGE WINDOW
                        $Script:TheBattleStatusMessageWindow.WriteEntityUsesMessage(
                            $this.PhaseOneEntity,
                            $this.PhaseTwoEntity,
                            $ToExecute
                        )

                        # EXECUTE THE ACTION AND UPDATE THE ENEMY'S BATTLE STATUS WINDOW
                        $ActionResult = $(Invoke-Command $ToExecute.Effect -ArgumentList $this.PhaseOneEntity, $this.PhaseTwoEntity, $ToExecute)
                        $Script:TheEnemyBattleStatWindow.Draw()
                    }

                    # WE NEED TO EXAMINE THE ACTION RESULT TO SEE WHAT HAPPENED AS A CONSEQUENCE OF RUNNING THE SELECTED ACTION
                    # THIS IS DONE FIRST BY LOOKING AT THE VALUE OF THE TYPE PROPERTY
                    Switch($ActionResult.Type) {
                        ([BattleActionResultType]::SuccessWithCritical) {
                            $Script:TheBattleStatusMessageWindow.WriteBarSwc($ToExecute)

                            Break
                        }

                        ([BattleActionResultType]::SuccessWithAffinityBonus) {
                            $Script:TheBattleStatusMessageWindow.WriteBarAff($ToExecute)

                            Break
                        }

                        ([BattleActionResultType]::SuccessWithCritAndAffinityBonus) {
                            $Script:TheBattleStatusMessageWindow.WriteBarCritAff($ToExecute)

                            Break
                        }

                        ([BattleActionResultType]::Success) {
                            $Script:TheBattleStatusMessageWindow.WriteBarSuccess($ToExecute)

                            Break
                        }

                        ([BattleActionResultType]::FailedAttackMissed) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBaMissFail)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}

                            $Script:TheBattleStatusMessageWindow.WriteBarFailMissed($ToExecute)

                            Break
                        }

                        ([BattleActionResultType]::FailedAttackFailed) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBaMissFail)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}

                            $Script:TheBattleStatusMessageWindow.WriteBarFailFailed($ToExecute)

                            Break
                        }
                    }

                    # NEXT WE NEED TO EXAMINE THE TYPE OF THE ACTION EXECUTED TO DO PROVIDE SOME
                    # ADDITIONAL FEEDBACK
                    Switch($ToExecute.Type) {
                        ([BattleActionType]::Physical) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBaPhysicalStrikeA)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}

                            $Script:TheBattleStatusMessageWindow.WriteBatPhysical(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalFire) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBaFireStrikeA)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalFire(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalWater) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalWater(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalEarth) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalEarth(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalWind) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalWind(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalLight) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalLight(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalDark) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalDark(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalIce) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalIce(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicPoison) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            $Script:TheBattleStatusMessageWindow.WriteBatMagicPoison(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicConfuse) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            $Script:TheBattleStatusMessageWindow.WriteBatMagicPoison(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicSleep) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            $Script:TheBattleStatusMessageWindow.WriteBatMagicSleep(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicAging) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            $Script:TheBattleStatusMessageWindow.WriteBatMagicAging(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicHealing) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            $Script:TheBattleStatusMessageWindow.WriteBatMagicHealing(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicStatAugment) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            # TODO: I'M NOT SURE I'VE CODIFIED IN THE BATTLE RESULT FOR STAT AUGS.

                            Break
                        }
                    }
                } Else {
                    # THE PHASE ONE ENTITY CAN'T ACT AT THIS TIME
                    Try {
                        $Script:TheSfxMPlayer.Open($Script:SfxBaActionDisabled)
                        $Script:TheSfxMPlayer.Play()
                    } Catch {}

                    $Script:TheBattleStatusMessageWindow.WriteEntityCantActMessage(
                        $this.PhaseOneEntity
                    )
                }

                # FACILITATE THE UPDATE OF AUGMENTS AT THE END OF THE TURN
                Foreach($Stat in $this.PhaseOneEntity.Stats.Values) {
                    $Stat.Update()
                    If($Stat.AugmentTurnDuration -EQ 0) {
                        If($this.PhaseOneEntity -IS [Player]) {
                            $Script:ThePlayerBattleStatWindow.SetAllFlagsDirty()
                            $Script:ThePlayerBattleStatWindow.Draw()
                        } Else {
                            $Script:TheEnemyBattleStatWindow.SetAllFlagsDirty()
                            $Script:TheEnemyBattleStatWindow.Draw()
                        }
                    }
                }

                # CHANGE STATE TO PHASE B
                $this.State = [BattleManagerState]::PhaseBExecution

                Break
            }

            ([BattleManagerState]::PhaseBExecution) {
                # THE SECOND OF THE NASTY BLOCKS
                # THIS IS A CARBON COPY OF PHASE A, EXCEPT THAT THE ENTITY CONSIDERED IS THE PHASETWOENTITY

                # BEFORE DOING ANYTHING, MAKE SURE THAT WE DON'T NEED TO CHANGE OUT TO THE CALCULATION STATE
                # THIS HELPS FACILITATE, PRIMARILY, THAT AN ENTITY CAN'T ACT IF THEY'RE ACTUALLY "DEAD"
                If(($this.PhaseOneEntity.Stats[[StatId]::HitPoints].Base -LE 0) -OR ($this.PhaseTwoEntity.Stats[[StatId]::HitPoints].Base -LE 0)) {
                    $this.State = [BattleManagerState]::Calculation

                    Break
                }

                # UPDATE THE PHASE INDICATOR
                $Script:TheBattlePhaseIndicator.IndicatorDrawDirty = $true
                $Script:TheBattlePhaseIndicator.Draw($this.PhaseTwoEntity)

                # ENSURE THAT THE CORRESPONDING STATUS WINDOW HAS A HIGHLIGHT AROUND THE BORDER
                If($this.PhaseTwoEntity -IS [Player]) {
                    $Script:ThePlayerBattleStatWindow.EntityBattlePhaseActive = $true
                    $Script:TheEnemyBattleStatWindow.EntityBattlePhaseActive  = $false
                } Else {
                    $Script:ThePlayerBattleStatWindow.EntityBattlePhaseActive = $false
                    $Script:TheEnemyBattleStatWindow.EntityBattlePhaseActive  = $true
                }
                $Script:ThePlayerBattleStatWindow.Draw()
                $Script:TheEnemyBattleStatWindow.Draw()

                # CHECK TO SEE IF THE PHASE TWO ENTITY CAN ACTUALLY ACT
                # REASONS THEY COULDN'T INCLUDE, BUT AREN'T LIMITED TO, STATUS AILMENTS LIKE SLEEP OR PARALYSIS
                If($this.PhaseTwoEntity.CanAct -EQ $true) {
                    [BattleAction]$ToExecute          = $null
                    [BattleActionResult]$ActionResult = $null

                    # DETERMINE IF THE PHASE TWO ENTITY IS THE PLAYER OR NOT
                    # DIFFERENT LOGIC NEEDS TO OCCUR DEPENDING UPON THIS DECISION
                    # IF IT'S THE PLAYER, WE NEED TO BLOCK LOOP ON THE BATTLE ACTION
                    # SELECTION WINDOW SO THE PLAYER CAN CHOOSE AN ATTACK TO EXECUTE.
                    If($this.PhaseTwoEntity -IS [Player]) {
                        # REFRESH THE BATTLE ACTION SELECTION WINDOW AND BLOCK LOOP ON IT
                        # THE RESULT OF THE SELECTION IS STORED IN TOEXECUTE
                        # NOTE THAT THIS IMPLEMENTATION OF HANDLEINPUT IS AN ANTI-PATTERN
                        # BUT IS REQUIRED
                        $Script:ThePlayerBattleActionWindow.SetAllActionDrawDirty()
                        While($null -EQ $ToExecute) {
                            $Script:ThePlayerBattleActionWindow.Draw()
                            $ToExecute = $Script:ThePlayerBattleActionWindow.HandleInput()
                        }

                        # THIS IS WHERE THINGS START GETTING HAIRY
                        # A LITANY OF CALLS TO WRITECOMPOSITEMESSAGE ON THE BATTLESTATUSMESSAGEWINDOW
                        # OCCUR FOLLOWING. I'M GOING TO ATTEMPT TO CONDENSE THESE CALLS.
                        $Script:TheBattleStatusMessageWindow.WriteEntityUsesMessage(
                            $this.PhaseTwoEntity,
                            $this.PhaseOneEntity,
                            $ToExecute
                        )

                        # ACTUALLY EXECUTE THE SELECTED COMMAND
                        # PS DOES SOME GOOFY SHIT WITH DISPATCHING THESE CALLS TO ICM, BUT THIS HASN'T CAUSED ANY PROBLEMS AFTER MANY HOURS
                        # OF TESTING THUS FAR.
                        $ActionResult = $(Invoke-Command $ToExecute.Effect -ArgumentList $this.PhaseTwoEntity, $this.PhaseOneEntity, $ToExecute)

                        # REFRESH THE PLAYER BATTLE STATUS WINDOW
                        $Script:ThePlayerBattleStatWindow.Draw()
                    } Else {
                        # THE PHASE TWO ENTITY IS THE ENEMY
                        # THE ACTION THE ENEMY USES IS SELECTED FROM THE "MARBLE BAG", SO NO DELAY IS NEEDED HERE.
                        [ActionSlot]$SelectedSlot = $($this.PhaseTwoEntity.ActionMarbleBag | Get-Random)
                        $ToExecute                = $this.PhaseTwoEntity.ActionListing[$SelectedSlot]

                        # NOTIFY THE BATTLE STATUS MESSAGE WINDOW
                        $Script:TheBattleStatusMessageWindow.WriteEntityUsesMessage(
                            $this.PhaseTwoEntity,
                            $this.PhaseOneEntity,
                            $ToExecute
                        )

                        # EXECUTE THE ACTION AND UPDATE THE ENEMY'S BATTLE STATUS WINDOW
                        $ActionResult = $(Invoke-Command $ToExecute.Effect -ArgumentList $this.PhaseTwoEntity, $this.PhaseOneEntity, $ToExecute)
                        $Script:TheEnemyBattleStatWindow.Draw()
                    }

                    # WE NEED TO EXAMINE THE ACTION RESULT TO SEE WHAT HAPPENED AS A CONSEQUENCE OF RUNNING THE SELECTED ACTION
                    # THIS IS DONE FIRST BY LOOKING AT THE VALUE OF THE TYPE PROPERTY
                    Switch($ActionResult.Type) {
                        ([BattleActionResultType]::SuccessWithCritical) {
                            $Script:TheBattleStatusMessageWindow.WriteBarSwc($ToExecute)

                            Break
                        }

                        ([BattleActionResultType]::SuccessWithAffinityBonus) {
                            $Script:TheBattleStatusMessageWindow.WriteBarAff($ToExecute)

                            Break
                        }

                        ([BattleActionResultType]::SuccessWithCritAndAffinityBonus) {
                            $Script:TheBattleStatusMessageWindow.WriteBarCritAff($ToExecute)

                            Break
                        }

                        ([BattleActionResultType]::Success) {
                            $Script:TheBattleStatusMessageWindow.WriteBarSuccess($ToExecute)

                            Break
                        }

                        ([BattleActionResultType]::FailedAttackMissed) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBaMissFail)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}

                            $Script:TheBattleStatusMessageWindow.WriteBarFailMissed($ToExecute)

                            Break
                        }

                        ([BattleActionResultType]::FailedAttackFailed) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBaMissFail)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}

                            $Script:TheBattleStatusMessageWindow.WriteBarFailFailed($ToExecute)

                            Break
                        }
                    }

                    # NEXT WE NEED TO EXAMINE THE TYPE OF THE ACTION EXECUTED TO DO PROVIDE SOME
                    # ADDITIONAL FEEDBACK
                    Switch($ToExecute.Type) {
                        ([BattleActionType]::Physical) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBaPhysicalStrikeA)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}

                            $Script:TheBattleStatusMessageWindow.WriteBatPhysical(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalFire) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBaFireStrikeA)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalFire(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalWater) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalWater(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalEarth) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalEarth(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalWind) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalWind(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalLight) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalLight(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalDark) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalDark(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalIce) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalIce(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicPoison) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            $Script:TheBattleStatusMessageWindow.WriteBatMagicPoison(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicConfuse) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            $Script:TheBattleStatusMessageWindow.WriteBatMagicPoison(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicSleep) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            $Script:TheBattleStatusMessageWindow.WriteBatMagicSleep(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicAging) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            $Script:TheBattleStatusMessageWindow.WriteBatMagicAging(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicHealing) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            $Script:TheBattleStatusMessageWindow.WriteBatMagicHealing(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicStatAugment) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            # TODO: I'M NOT SURE I'VE CODIFIED IN THE BATTLE RESULT FOR STAT AUGS.

                            Break
                        }
                    }
                } Else {
                    # THE PHASE ONE ENTITY CAN'T ACT AT THIS TIME
                    Try {
                        $Script:TheSfxMPlayer.Open($Script:SfxBaActionDisabled)
                        $Script:TheSfxMPlayer.Play()
                    } Catch {}

                    $Script:TheBattleStatusMessageWindow.WriteEntityCantActMessage(
                        $this.PhaseTwoEntity
                    )
                }

                # FACILITATE THE UPDATE OF AUGMENTS AT THE END OF THE TURN
                Foreach($Stat in $this.PhaseTwoEntity.Stats.Values) {
                    $Stat.Update()
                    If($Stat.AugmentTurnDuration -EQ 0) {
                        If($this.PhaseOneEntity -IS [Player]) {
                            $Script:ThePlayerBattleStatWindow.SetAllFlagsDirty()
                            $Script:ThePlayerBattleStatWindow.Draw()
                        } Else {
                            $Script:TheEnemyBattleStatWindow.SetAllFlagsDirty()
                            $Script:TheEnemyBattleStatWindow.Draw()
                        }
                    }
                }

                # CHANGE STATE TO TURN INCREMENT
                $this.State = [BattleManagerState]::TurnIncrement

                Break
            }

            ([BattleManagerState]::Calculation) {
                # GIVEN HOW THIS STATE IS ENTERED, THIS MAY BE A REDUNDANT CHECK, BUT I DON'T CARE
                If($this.PhaseOneEntity.Stats[[StatId]::HitPoints].Base -LE 0) {
                    If($this.PhaseOneEntity -IS [Player]) {
                        $this.State = [BattleManagerState]::BattleLost

                        Break
                    } Else {
                        # $this.SpoilsAction = $this.PhaseTwoEntity.SpoilsEffect
                        $this.State = [BattleManagerState]::BattleWon

                        Break
                    }
                } Elseif($this.PhaseTwoEntity.Stats[[StatId]::HitPoints].Base -LE 0) {
                    If($this.PhaseTwoEntity -IS [Player]) {
                        $this.State = [BattleManagerState]::BattleLost

                        Break
                    } Else {
                        # $this.SpoilsAction = $this.PhaseOneEntity.SpoilsEffect
                        $this.State = [BattleManagerState]::BattleWon

                        Break
                    }
                }

                # DO NOTHING, TRANSITION BACK TO TURN INCREMENT STATE
                $this.State = [BattleManagerState]::BattleWon

                Break
            }

            ([BattleManagerState]::BattleWon) {
                $Script:TheBgmMPlayer.Stop() # STOP PLAYING THE BATTLE BGM
                
                # CHECK TO SEE IF THE BATTLE WON CHIME HAS PLAYED
                # PLAY IT IF IT HASN'T
                If($Script:HasBattleWonChimePlayed -EQ $false) {
                    Try {
                        $Script:TheSfxMPlayer.Open($Script:SfxBattlePlayerWin)
                        $Script:TheSfxMPlayer.Play()
                    } Catch {}
                    $Script:HasBattleWonChimePlayed = $true
                }

                # THE FOLLOWING CODE WILL WRITE TWO OUT-OF-BAND MESSAGES TO THE STATUS WINDOW
                # OUT-OF-BAND MEANING THAT EXPLICIT CALLS TO THE DRAW FUNCTION ARE MADE BECAUSE
                # THE NORMAL SEQUENCING WOULD CAUSE THESE TO NOT BE DRAWN IN TIME
                
                # WRITE THE WON MESSAGE TO THE STATUS WINDOW
                $Script:TheBattleStatusMessageWindow.WriteBattleWonMessage()
                $Script:TheBattleStatusMessageWindow.Draw()

                # RUN THE SPOILS EFFECT; NEED TO DETERMINE WHICH ENTITY IS THE PLAYER
                If($this.PhaseOneEntity -IS [Player]) {
                    # THE ORIGINAL CODE RESET THE SPOILSACTION MEMBER; NOT SURE WHY
                    # THE LIKELY CAUSE IS I'M AN IDIOT
                    Invoke-Command $this.PhaseTwoEntity.SpoilsEffect -ArgumentList ([Player]$this.PhaseOneEntity), ([EnemyBattleEntity]$this.PhaseTwoEntity)
                } Elseif($this.PhaseTwoEntity -IS [Player]) {
                    Invoke-Command $this.PhaseOneEntity.SpoilsEffect -ArgumentList ([Player]$this.PhaseTwoEntity), ([EnemyBattleEntity]$this.PhaseOneEntity)
                }

                # WRITE THE BATTLE END PROMPT
                $Script:TheBattleStatusMessageWindow.WriteBattleEndPrompt()
                $Script:TheBattleStatusMessageWindow.Draw()

                # BLOCK FOR THE ENTER KEY (ACKSHUALEE ENTER KEY)
                $a = $Script:Rui.ReadKey('IncludeKeyDown, NoEcho')
                While($a.VirtualKeyCode -NE 13) {
                    $a = $Script:Rui.ReadKey('IncludeKeyDown, NoEcho')
                }

                # CHANGE GLOBAL STATE
                $Script:ThePreviousGlobalGameState = $Script:TheGlobalGameState
                $Script:TheGlobalGameState         = [GameStatePrimary]::GamePlayScreen

                Break
            }

            ([BattleManagerState]::BattleLost) {
				$Script:TheBgmMPlayer.Stop() # STOP PLAYING THE BATTLE BGM
				
				# CHECK TO SEE IF THE BATTLE LOST CHIME HAS PLAYED
				# PLAY IT IF IT HASN'T
				If($Script:HasBattleLostChimePlayed -EQ $false) {
					Try {
						$Script:TheSfxMPlayer.Open($Script:SfxBattlePlayerLose)
						$Script:TheSfxMPlayer.Play()
					} Catch {}
					$Script:HasBattleLostChimPlayed = $true
				}
				
				# WRITE THE LOST MESSAGE TO THE STATUS WINDOW
				$Script:TheBattleStatusMessageWindow.WriteBattleLostMessage()
				$Script:TheBattleStatusMessageWindow.Draw()
				$Script:TheBattleStatusMessageWindow.WriteGameOverMessage()
				$Script:TheBattleStatusMessageWindow.Draw()
				
				# SLEEP THEN DIE
				Start-Sleep -Seconds 5
				Clear-Host
				
				Exit
			}

            Default {}
        }
    }

    [Void]Cleanup() {
        $Script:BattleCursorVisible          = $false
        $Script:HasBattleIntroPlayed         = $false
        $Script:IsBattleBgmPlaying           = $false
        $Script:HasBattleWonChimePlayed      = $false
        $Script:HasBattleLostChimePlayed     = $false
    }
}










###############################################################################
#
# S11
#
# GAME CORE
#
# ENTRY POINT FOR THE GAME PROGRAM
#
###############################################################################
Class GameCore {
    [Boolean]$GameRunning

    GameCore() {
        $this.GameRunning          = $true
        $Script:TheGlobalGameState = [GameStatePrimary]::PlayerSetupScreen
    }

    [Void]Run() {
        While($this.GameRunning -EQ $true) {
            $this.Logic()
        }
    }

    [Void]Logic() {
        Invoke-Command $Script:TheGlobalStateBlockTable[$Script:TheGlobalGameState]
        $Script:Rui.FlushInputBuffer()
    }
}





#//////////////////////////////////////////////////////////////////////////////
#
# DUMMY SETUP CODE
#
#//////////////////////////////////////////////////////////////////////////////
Clear-Host

$Script:ThePlayer.Inventory.Add([MTOLadder]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTORope]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOStairs]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOPole]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOBacon]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOApple]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOStick]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOYogurt]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTORock]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTORope]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOPole]::new()) | Out-Null
# $Script:ThePlayer.Inventory.Add([MTOBacon]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOApple]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOStick]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOYogurt]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTORock]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTORope]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOLadder]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTORope]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOStairs]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOPole]::new()) | Out-Null
# $Script:ThePlayer.Inventory.Add([MTOBacon]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOApple]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOStick]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOYogurt]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTORock]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTORope]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOPole]::new()) | Out-Null
# $Script:ThePlayer.Inventory.Add([MTOBacon]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOApple]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOStick]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOYogurt]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTORock]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTORope]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOTree]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOMilk]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOMilk]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOMilk]::new()) | Out-Null

$Script:ThePlayer.ActionInventory.Add([BASwordStab]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAPunch]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAKick]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAKarateChop]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAKarateKick]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAFlamePunch]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAFlameKick]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BASwordStab]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAPunch]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAKick]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAKarateChop]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAKarateKick]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAFlamePunch]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAFlameKick]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BASeafoamBolt]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BATyphoon]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BATerraStrike]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BABoulderBash]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAIcicleStrike]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAGaleStrike]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BARadiance]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BASunfire]::new()) | Out-Null

# $Script:SampleMap.CreateMapTiles()
# $Script:SampleMap.Tiles[0, 0] = [MapTile]::new(
#     $Script:FieldNorthEastRoadImage,
#     @(
#         [MTOApple]::new(),
#         [MTOTree]::new(),
#         [MTOLadder]::new(),
#         [MTORope]::new(),
#         [MTOStairs]::new(),
#         [MTOPole]::new()
#     ),
#     @(
#         $true,
#         $false,
#         $true,
#         $false
#     ),
#     $true,
#     0.5,
#     0
# )
# $Script:SampleMap.Tiles[0, 1] = [MapTile]::new(
#     $Script:FieldNorthWestRoadImage,
#     @(
#         [MTOApple]::new()
#     ),
#     @(
#         $true,
#         $false,
#         $false,
#         $true
#     ),
#     $true,
#     0.5,
#     0
# )
# $Script:SampleMap.Tiles[1, 0] = [MapTile]::new(
#     $Script:FieldSouthEastRoadImage,
#     @(
#         [MTOTree]::new()
#     ),
#     @(
#         $false,
#         $true,
#         $true,
#         $false
#     ),
#     $true,
#     0.5,
#     0
# )
# $Script:SampleMap.Tiles[1, 1] = [MapTile]::new(
#     $Script:FieldSouthWestRoadImage,
#     @(
#         [MTOTree]::new()
#     ),
#     @(
#         $false,
#         $true,
#         $false,
#         $true
#     ),
#     $true,
#     0.5,
#     0
# )

$Script:TheGameCore.Run()