using namespace System
using namespace System.Collections
using namespace System.Collections.Generic
using namespace System.Management.Automation.Host
using namespace System.Management.Automation.Runspaces
using namespace System.Media

Add-Type -AssemblyName PresentationCore

Set-StrictMode -Version Latest





#region Enumerations

Enum GameStatePrimary {
    SplashScreenA
    SplashScreenB
    TitleScreen
    PlayerSetupScreen
    GamePlayScreen
    InventoryScreen
    BattleScreen
    PlayerStatusScreen
    Cleanup
}

Enum StatNumberState {
    Normal
    Caution
    Danger
}

Enum ItemRemovalStatus {
    Success
    FailGeneral
    FailKeyItem
}

Enum ActionInvRemovalStatus {
    Success
    Fail
}

Enum BattleActionType {
    Physical
    ElementalFire
    ElementalWater
    ElementalEarth
    ElementalWind
    ElementalLight
    ElementalDark
    ElementalIce
    MagicPoison
    MagicConfuse
    MagicSleep
    MagicAging
    MagicHealing
    MagicStatAugment
    None
}

Enum StatId {
    HitPoints
    MagicPoints
    Attack
    Defense
    MagicAttack
    MagicDefense
    Speed
    Luck
    Accuracy
}

Enum ActionSlot {
    A
    B
    C
    D
    None
}

Enum BattleManagerState {
    HealthCheck
    TurnIncrement
    PhaseOrdering
    PhaseAExecution
    PhaseBExecution
    Calculation
    BattleWon
    BattleLost
}

Enum BattleActionResultType {
    Success
    SuccessWithCritical
    SuccessWithAffinityBonus
    SuccessWithCritAndAffinityBonus
    FailedAttackMissed
    FailedAttackFailed
    FailedElementalMatch
    FailedNoUsesRemaining
    FailedNotEnoughMp
}

Enum StatusScreenMode {
    EquippedTechSelection
    TechInventorySelection
}

Enum FnlNoiseType {
    OpenSimplex2
    OpenSimplex2S
    Cellular
    Perlin
    ValueCubic
    Value
}

Enum FnlRotationType3D {
    None
    ImproveXYPlanes
    ImproveXZPlanes
}

Enum FnlFractalType {
    None
    FBm
    Ridged
    PingPong
    DomainWarpProgressive
    DomainWarpIndependent
}

Enum FnlCellularDistanceFunction {
    Euclidean
    EuclideanSq
    Manhattan
    Hybrid
}

Enum FnlCellularReturnType {
    CellValue
    Distance
    Distance2
    Distance2Add
    Distance2Sub
    Distance2Mul
    Distance2Div
}

Enum FnlDomainWarpType {
    OpenSimplex2
    OpenSimplex2Reduced
    BasicGrid
}

Enum FnlTransformType3D {
    None
    ImproveXYPlanes
    ImproveXZPlanes
    DefaultOpenSimplex2
}

Enum WindowBorderPart {
    LeftTop
    Top
    RightTop
    Right
    RightBottom
    Bottom
    LeftBottom
    Left
}

Enum WindowBorderPartDirty {
    Top
    Bottom
    Left
    Right
}

Enum UIELayout {
    Horizontal
    Vertical
}

Enum TtySpeed {
    SuperSlow = 1000000
    Slow   = 750000
    Normal = 100000
    Moderate = 75000
    Quick = 65000
    Fast = 50000
    SuperFast = 25000
}

Enum Gender {
    Male
    Female
    Unisex # INTENDED FOR EQUIPMENT PURPOSES
}

#endregion





#region Global Variables

$PSStyle.Progress.View = 'Classic'
Write-Progress -Activity 'Setting up Globals' -Id 1 -PercentComplete -1
[Int]                             $Script:SceneImagesToLoad            = $(Get-ChildItem "$(Get-Location)\Image Data").Count
[Int]                             $Script:SceneImagesLoaded            = 0
[Int]                             $Script:MaxWidth                     = 80
[Int]                             $Script:SSAPECounter                 = 0
[Int]                             $Script:SSAPETimeout                 = 1000
[String]                          $Script:SfxUiChevronMove             = "$(Get-Location)\Assets\SFX\UI Chevron Move.wav"
[String]                          $Script:SfxUiSelectionValid          = "$(Get-Location)\Assets\SFX\UI Selection Valid.wav"
[String]                          $Script:SfxBaPhysicalStrikeA         = "$(Get-Location)\Assets\SFX\BA Physical Strike 0001.wav"
[String]                          $Script:SfxBaMissFail                = "$(Get-Location)\Assets\SFX\BA Miss Fail.wav"
[String]                          $Script:SfxBaActionDisabled          = "$(Get-Location)\Assets\SFX\BA Action Disabled.wav"
[String]                          $Script:SfxBaFireStrikeA             = "$(Get-Location)\Assets\SFX\BA Fire Strike 0001.wav"
[String]                          $Script:SfxBattleIntro               = "$(Get-Location)\Assets\SFX\Battle Intro.wav"
[String]                          $Script:SfxBattlePlayerWin           = "$(Get-Location)\Assets\SFX\Battle Player Win.wav"
[String]                          $Script:SfxBattlePlayerLose          = "$(Get-Location)\Assets\SFX\Battle Player Lose.wav"
[String]                          $Script:BgmBattleThemeA              = "$(Get-Location)\Assets\BGM\Battle Theme A.wav"
[String]                          $Script:SfxBattleNem                 = "$(Get-Location)\Assets\SFX\UI Selection NEM.wav"
[String]                          $Script:BgmTitleThemeA               = "$(Get-Location)\Assets\BGM\Title Theme A.wav"
[String]                          $Script:BgmTitleThemeB               = "$(Get-Location)\Assets\BGM\Title Theme B.wav"
[String]                          $Script:TheGameSubtitle              = 'A NOT GARY GAME'
[Hashtable]                       $Script:SpectreBBPRounded            = @{}
[Hashtable]                       $Script:SpectreBBPSquare             = @{}
[Hashtable]                       $Script:CurrentWindowDesign          = @{}
[String[]]                        $Script:BadCommandRetorts            = @()
[StatusWindow]                    $Script:TheStatusWindow              = [StatusWindow]::new()
[CommandWindow]                   $Script:TheCommandWindow             = [CommandWindow]::new()
[SceneWindow]                     $Script:TheSceneWindow               = [SceneWindow]::new()
[MessageWindow]                   $Script:TheMessageWindow             = [MessageWindow]::new()
[InventoryWindow]                 $Script:TheInventoryWindow           = $null
[ATCoordinatesDefault]            $Script:DefaultCursorCoordinates     = [ATCoordinatesDefault]::new()
[BattleEntityStatusWindow]        $Script:ThePlayerBattleStatWindow    = $null
[BattleEntityStatusWindow]        $Script:TheEnemyBattleStatWindow     = $null
[BattlePlayerActionWindow]        $Script:ThePlayerBattleActionWindow  = $null
[BattleStatusMessageWindow]       $Script:TheBattleStatusMessageWindow = $null
[BattleEnemyImageWindow]          $Script:TheBattleEnemyImageWindow    = $null
[BattlePhaseIndicator]            $Script:TheBattlePhaseIndicator      = $null
[StatusHudWindow]                 $Script:TheStatusHudWindow           = $null
[StatusTechniqueSelectionWindow]  $Script:TheStatusTechSelectionWindow = $null
[StatusTechniqueInventoryWindow]  $Script:TheStatusTechInventoryWindow = $null
[BufferManager]                   $Script:TheBufferManager             = [BufferManager]::new()
[GameCore]                        $Script:TheGameCore                  = [GameCore]::new()
[EnemyBattleEntity]               $Script:TheCurrentEnemy              = $null
[BattleManager]                   $Script:TheBattleManager             = $null
[SoundPlayer]                     $Script:TheSfxMachine                = [SoundPlayer]::new()
[SoundPlayer]                     $Script:TheBgmMachine                = [SoundPlayer]::new()
[Boolean]                         $Script:IsBattleBgmPlaying           = $false
[Boolean]                         $Script:HasBattleIntroPlayed         = $false
[Boolean]                         $Script:HasBattleWonChimePlayed      = $false
[Boolean]                         $Script:HasBattleLostChimePlayed     = $false
[Boolean]                         $Script:GpsRestoredFromInvBackup     = $true
[Boolean]                         $Script:GpsRestoredFromBatBackup     = $false
[Boolean]                         $Script:GpsRestoredFromStaBackup     = $false
[Boolean]                         $Script:BattleCursorVisible          = $false
[Boolean]                         $Script:HasTitleBgmStarted           = $false
[Boolean]                         $Script:HasSubtitleBeenWritten       = $false
[Boolean]                         $Script:HasSubtitleBeenColored       = $false
[Boolean]                         $Script:HasSSAPressEnterShown        = $false
[Boolean]                         $Script:HasSSAPressEnterToggled      = $false
[Boolean]                         $Script:HasSSASetupRunspace          = $false
[EEIBat]                          $Script:EeiBat                       = [EEIBat]::new()
[EEINightwing]                    $Script:EeiNightwing                 = [EEINightwing]::new()
[EEIWingblight]                   $Script:EeiWingblight                = [EEIWingblight]::new()
[EEIDarkfang]                     $Script:EeiDarkfang                  = [EEIDarkfang]::new()
[EEINocturna]                     $Script:EeiNocturna                  = [EEINocturna]::new()
[EEIBloodswoop]                   $Script:EeiBloodswoop                = [EEIBloodswoop]::new()
[EEIDuskbane]                     $Script:EeiDuskbane                  = [EEIDuskbane]::new()
[System.Windows.Media.MediaPlayer]$Script:TheSfxMPlayer                = [System.Windows.Media.MediaPlayer]::new()
[System.Windows.Media.MediaPlayer]$Script:TheBgmMPlayer                = [System.Windows.Media.MediaPlayer]::new()
[Double]                          $Script:AffinityMultNeg              = -0.75
[Double]                          $Script:AffinityMultPos              = 1.6
[ActionSlot]                      $Script:StatusEsSelectedSlot         = [ActionSlot]::None
[BattleAction]                    $Script:StatusIsSelected             = $null
[StatusScreenMode]                $Script:StatusScreenMode             = [StatusScreenMode]::EquippedTechSelection
[GameStatePrimary]                $Script:TheGlobalGameState           = [GameStatePrimary]::TitleScreen
[GameStatePrimary]                $Script:ThePreviousGlobalGameState   = $Script:TheGlobalGameState
[Map]                             $Script:SampleMap                    = $null
[Map]                             $Script:SampleWarpMap01              = $null
[Map]                             $Script:SampleWarpMap02              = $null
[Map]                             $Script:CurrentMap                   = $null
[Map]                             $Script:PreviousMap                  = $null
[SSAFiglet]                       $Script:TheTitleFiglet               = [SSAFiglet]::new()
[SSASubtitle]                     $Script:TheSubtitleFiglet            = [SSASubtitle]::new()
[SSAPressEnterPrompt]             $Script:TheSSAPressEnterPrompt       = [SSAPressEnterPrompt]::new()
[TtySpeed]                        $Script:TeletypeSpeed                = [TtySpeed]::Slow
[Runspace]                        $Script:TheOffThread                 = [RunspaceFactory]::CreateRunspace()
[PowerShell]                      $Script:TheOffShell                  = [PowerShell]::Create()
[IAsyncResult]                    $Script:SSAInputAsr                  = $null
Write-Progress -Activity 'Setting up Globals' -Id 1 -PercentComplete -1 -Completed

Write-Progress -Activity 'Creating Scene Images' -Id 2 -PercentComplete 0
[Hashtable]$Script:TheSceneImages = @{
    'FieldPlainsNoRoad'                          = [SIFieldPlainsNoRoad]::new()
    'FieldPlainsRoadNorth'                       = [SIFieldPlainsRoadNorth]::new()
    'FieldPlainsRoadSouth'                       = [SIFieldPlainsRoadSouth]::new()
    'FieldPlainsRoadEast'                        = [SIFieldPlainsRoadEast]::new()
    'FieldPlainsRoadWest'                        = [SIFieldPlainsRoadWest]::new()
    'FieldPlainsRoadNorthEast'                   = [SIFieldPlainsRoadNorthEast]::new()
    'FieldPlainsRoadNorthWest'                   = [SIFieldPlainsRoadNorthWest]::new()
    'FieldPlainsRoadNorthSouth'                  = [SIFieldPlainsRoadNorthSouth]::new()
    'FieldPlainsRoadEastWest'                    = [SIFieldPlainsRoadEastWest]::new()
    'FieldPlainsRoadNorthSouthEast'              = [SIFieldPlainsRoadNorthSouthEast]::new()
    'FieldPlainsRoadNorthSouthEastWest'          = [SIFieldPlainsRoadNorthSouthEastWest]::new()
    'FieldPlainsRoadNorthSouthWest'              = [SIFieldPlainsRoadNorthSouthWest]::new()
    'RiverRoadSample'                            = [SIRiverRoadSample]::new()
    'RiverRoadEWNSSample'                        = [SIRiverRoadEWNSSample]::new()
    'RiverRoadEWSSSample'                        = [SIRiverRoadEWSSSample]::new()
    'Random'                                     = [SIRandomNoise]::new()
    'SIRiverOnEastAtNorth'                       = [SIRiverOnEastAtNorth]::new()
    'SIRiverOnEastAtSouth'                       = [SIRiverOnEastAtSouth]::new()
    'SIRiverOnEastWestAtNorth'                   = [SIRiverOnEastWestAtNorth]::new()
    'SIRiverOnEastWestAtNorthSouth'              = [SIRiverOnEastWestAtNorthSouth]::new()
    'SIRiverOnEastWestNorthSouthAtEast'          = [SIRiverOnEastWestNorthSouthAtEast]::new()
    'SIRiverOnEastWestNorthSouthAtEastWest'      = [SIRiverOnEastWestNorthSouthAtEastWest]::new()
    'SIRiverOnEastWestNorthSouthAtEastWestSouth' = [SIRiverOnEastWestNorthSouthAtEastWestSouth]::new()
    'SIRiverOnEastWestNorthSouthAtWest'          = [SIRiverOnEastWestNorthSouthAtWest]::new()
    'SIRiverOnNorthEastAtNorth'                  = [SIRiverOnNorthEastAtNorth]::new()
    'SIRiverOnNorthSouthAtEast'                  = [SIRiverOnNorthSouthAtEast]::new()
    'SIRiverOnNorthSouthAtWest'                  = [SIRiverOnNorthSouthAtWest]::new()
    'SIRiverOnNorthSouthEastAtEast'              = [SIRiverOnNorthSouthEastAtEast]::new()
    'SIRiverOnNorthSouthEastAtNorth'             = [SIRiverOnNorthSouthEastAtNorth]::new()
    'SIRiverOnSouthAtEast'                       = [SIRiverOnSouthAtEast]::new()
    'SIRiverOnSouthEastAtSouthEast'              = [SIRiverOnSouthEastAtSouthEast]::new()
    'SIRiverOnWestAtNorth'                       = [SIRiverOnWestAtNorth]::new()
    'SIRiverOnWestAtSouth'                       = [SIRiverOnWestAtSouth]::new()
    'SIRiverOnWestEastAtSouth'                   = [SIRiverOnWestEastAtSouth]::new()
    'SIRiverOnWestNorthAtNorth'                  = [SIRiverOnWestNorthAtNorth]::new()
    'SIRiverOnWestNorthSouthAtNorth'             = [SIRiverOnWestNorthSouthAtNorth]::new()
}
Write-Progress -Activity 'Creating Scene Images' -Id 2 -Completed





###############################################################################
#
# MAP WARP FUNCTION
#
# THIS IS LIKELY A PRETTY NAIEVE APPROACH TO THIS AT THE MOMENT, BUT WHAT THE
# HELL?
#
###############################################################################
[ScriptBlock]$Script:MapWarpHandler = {
    Param(
        [Map]$TargetMap,
        [Int]$WarpX,
        [Int]$WarpY
    )

    # ASSIGN THE PREVIOUS MAP
    $Script:PreviousMap = $Script:CurrentMap

    # ASSIGN THE CURRENT MAP
    $Script:CurrentMap = $TargetMap

    # SET THE PLAYER'S MAP COORDINATES
    $Script:ThePlayer.MapCoordinates.Row    = $WarpY
    $Script:ThePlayer.MapCoordinates.Column = $WarpX

    # TODO: THIS WOULD HAVE TO TRIGGER A REFRESH OF THE GPS IN ORDER FOR THE
    # CHANGE TO BE VISIBLE. WHATEVER LOGIC I'VE BEEN USING FOR THE TILE CHANGE
    # WOULD LIKELY SUFFICE (AGAIN, MAY BE A BIT NAIEVE BUT I THINK IT SHOULD WORK).
    # CORRECTION: THIS HAS BEEN MOVED TO THE COMMAND BLOCK CALL RATHER THAN HERE.
}





[Map]$Script:SampleMap       = [Map]::new('Map Data\SampleMap.json')
[Map]$Script:SampleWarpMap01 = [Map]::new('Map Data\MapWarpTest01.json')
[Map]$Script:SampleWarpMap02 = [Map]::new('Map Data\MapWarpTest02.json')
[Map]$Script:CurrentMap      = $Script:SampleWarpMap01

$Script:BadCommandRetorts = @(
    'Huh?',
    'Do what now?',
    'Come again?',
    'Pardon?',
    'Y U no type rite?',
    'Bruh...',
    'Are you drunk?',
    'Your commands are sus.',
    'Git gud, scrub.',
    'Did you RTFM?',
    'git commit -am "Eye kant spell"',
    'ceuwcnesckldsc',
    '843214385321832904'
)

$Script:SpectreBBPRounded = @{
    [WindowBorderPart]::LeftTop     = '╭'
    [WindowBorderPart]::Top         = '─'
    [WindowBorderPart]::RightTop    = '╮'
    [WindowBorderPart]::Left        = '│'
    [WindowBorderPart]::Right       = '│'
    [WindowBorderPart]::LeftBottom  = '╰'
    [WindowBorderPart]::Bottom      = '─'
    [WindowBorderPart]::RightBottom = '╯'
}

$Script:SpectreBBPSquare = @{
    [WindowBorderPart]::LeftTop     = '┌'
    [WindowBorderPart]::Top         = '─'
    [WindowBorderPart]::RightTop    = '┐'
    [WindowBorderPart]::Left        = '│'
    [WindowBorderPart]::Right       = '│'
    [WindowBorderPart]::LeftBottom  = '└'
    [WindowBorderPart]::Bottom      = '─'
    [WindowBorderPart]::RightBottom = '┘'
}

$Script:CurrentWindowDesign = $SpectreBBPRounded

$Script:BattleEncounterRegionTable = @{
    0 = @(
        'EEBat',
        'EENightwing',
        'EEWingblight',
        'EEDarkfang',
        'EENocturna',
        'EEBloodswoop',
        'EEDuskbane'
    )
}

$Script:BATAdornmentCharTable = @{
    [BattleActionType]::Physical         = [Tuple[[String], [ConsoleColor24]]]::new("`u{2022}", [CCTextDefault24]::new())
    [BattleActionType]::ElementalFire    = [Tuple[[String], [ConsoleColor24]]]::new("`u{03B6}", [CCAppleRedLight24]::new())
    [BattleActionType]::ElementalWater   = [Tuple[[String], [ConsoleColor24]]]::new("`u{03C8}", [CCAppleBlueLight24]::new())
    [BattleActionType]::ElementalEarth   = [Tuple[[String], [ConsoleColor24]]]::new("`u{03B5}", [CCAppleBrownLight24]::new())
    [BattleActionType]::ElementalWind    = [Tuple[[String], [ConsoleColor24]]]::new("`u{03C6}", [CCAppleGreenLight24]::new())
    [BattleActionType]::ElementalLight   = [Tuple[[String], [ConsoleColor24]]]::new("`u{03BC}", [CCAppleYellowLight24]::new())
    [BattleActionType]::ElementalDark    = [Tuple[[String], [ConsoleColor24]]]::new("`u{03B4}", [CCApplePurpleDark24]::new())
    [BattleActionType]::ElementalIce     = [Tuple[[String], [ConsoleColor24]]]::new("`u{03B9}", [CCAppleCyanDark24]::new())
    [BattleActionType]::MagicPoison      = [Tuple[[String], [ConsoleColor24]]]::new("`u{03BE}", [CCAppleIndigoLight24]::new())
    [BattleActionType]::MagicConfuse     = [Tuple[[String], [ConsoleColor24]]]::new("`u{0398}", [CCAppleCyanDark24]::new())
    [BattleActionType]::MagicSleep       = [Tuple[[String], [ConsoleColor24]]]::new("`u{03B7}", [CCAppleGrey4Light24]::new())
    [BattleActionType]::MagicAging       = [Tuple[[String], [ConsoleColor24]]]::new("`u{03C3}", [CCAppleGrey6Light24]::new())
    [BattleActionType]::MagicHealing     = [Tuple[[String], [ConsoleColor24]]]::new("`u{20AA}", [CCAppleMintLight24]::new())
    [BattleActionType]::MagicStatAugment = [Tuple[[String], [ConsoleColor24]]]::new("`u{20B9}", [CCAppleOrangeLight24]::new())
}

#
# BATTLE ACTION TABLE - LOOKUP TABLE
#
# LOOKUP FOR RESISTANCE/WEAKNESS SCALARS. THIS IS GREATLY SENSITIVE TO THE ENUMERATION
# ORDERING IN THE BATTLE ACTION TYPE ENUMERATION.
#
$Script:BATLut = @(
	# PHYSICAL ATTACKS AGAINST OTHERS
	@(1, 1, 1, 1, 1, 1, 1, 1),

	# ELEMENTAL FIRE ATTACKS AGAINST OTHERS
	@(1, -0.75, 0.5, 0.5, 0.5, 1, 1, 1.75),

	# ELEMENTAL WATER ATTACKS AGAINST OTHERS
	@(1, 1.75, -0.75, 1, 0.5, 1, 1, 0.5),

	# ELEMENTAL EARTH ATTACKS AGAINST OTHERS
	@(1, 0.5, 1, -0.75, 0.5, 1, 1, 1.75),

	# ELEMENTAL WIND ATTACKS AGAINST OTHERS
	@(1, 1, 1, 1.75, -0.75, 1, 1, 0.5),

	# ELEMENTAL LIGHT ATTACKS AGAINST OTHERS
	@(1, 1, 1, 1, 1, -0.75, 1.75, 1),

	# ELEMENTAL DARK ATTACKS AGAINST OTHERS
	@(1, 1, 1, 1, 1, 1.75, -0.75, 1),

	# ELEMENTAL ICE ATTACKS AGAINST OTHERS
	@(1, 0.5, 1.75, 1.75, 1, 1, 1, -0.75)
)

$Script:Rui = $(Get-Host).UI.RawUI





###############################################################################
#
# THE STATE BLOCK TABLE SCRIPTBLOCK DEFINITIONS
#
###############################################################################
[ScriptBlock]$Script:TheSplashScreenAState = {}

[ScriptBlock]$Script:TheSplashScreenBState = {}

[ScriptBlock]$Script:TheTitleScreenState = {
    Write-Host "$([ATControlSequences]::CursorHide)"

    If($Script:HasSSASetupRunspace -EQ $false) {
        $Script:TheOffThread = [RunspaceFactory]::CreateRunspace()
        $Script:TheOffShell  = [PowerShell]::Create()

        $Script:TheOffThread.Open()
        $Script:TheOffShell.Runspace = $Script:TheOffThread
        $Script:TheOffShell.AddScript({
            [Console]::ReadKey($true)
        })

        $Script:SSAInputAsr = $Script:TheOffShell.BeginInvoke()

        $Script:HasSSASetupRunspace = $true
    }

    If($Script:HasTitleBgmStarted -EQ $false) {
        Start-Sleep -Seconds 1
        Try {
            $Script:TheBgmMPlayer.Open($Script:BgmTitleThemeB)
            $Script:TheBgmMPlayer.Play()
        } Catch {}
        $Script:HasTitleBgmStarted = $true
    }

    $Script:TheTitleFiglet.Draw()

    If($Script:HasSubtitleBeenWritten -EQ $false) {
        [Char[]]$CharArr   = $Script:TheGameSubtitle.ToCharArray()
        [Int]$PrintCounter = 0
        [Int]$Probe        = 0
        [Int]$PrintCol     = 33

        While($Probe -LE ($CharArr.Count - 1)) {
            $PrintCounter++
            If($PrintCounter -GE $Script:TeletypeSpeed) {
                $PrintCounter = 0
                Write-Host "$([ATControlSequences]::GenerateCoordinateString(9, $PrintCol))$($CharArr[$Probe])" -NoNewline
                $Probe++
                $PrintCol++
            }
        }

        $Script:HasSubtitleBeenWritten = $true
    }

    If($Script:HasSubtitleBeenColored -EQ $false) {
        $Script:TheSubtitleFiglet.Draw()
        $Script:HasSubtitleBeenColored = $true
    }

    If((Get-Random -Minimum 1 -Maximum 50000) -LT 250) {
        $Script:HasSubtitleBeenColored  = $false
        $Script:TheSubtitleFiglet.Dirty = $true
    }

    If($Script:HasSSAPressEnterShown -EQ $false) {
        $Script:TheSSAPressEnterPrompt.Draw()
        $Script:HasSSAPressEnterShown = $true
    }

    If($Script:HasSSAPressEnterShown -EQ $true) {
        $Script:SSAPECounter++
        If($Script:SSAPECounter -GE $Script:SSAPETimeout) {
            $Script:SSAPECounter                    = 0
            $Script:TheSSAPressEnterPrompt.DrawMode = -NOT $Script:TheSSAPressEnterPrompt.DrawMode
            $Script:TheSSAPressEnterPrompt.Dirty    = $true
            $Script:TheSSAPressEnterPrompt.Draw()
        }
    }

    If($Script:SSAInputAsr.IsCompleted -EQ $true) {
        $SSAKeyPressInfo = $Script:TheOffShell.EndInvoke($Script:SSAInputAsr) | Select-Object -First 1
        
        If($SSAKeyPressInfo.Key -NE [ConsoleKey]::Enter) {
            $Script:HasSSASetupRunspace = $false
        } Else {
            Try {
                $Script:TheBgmMPlayer.Stop()
            } Catch {}
            $Script:HasTitleBgmStarted = $false

            $Script:TheOffThread.Dispose()
            $Script:TheOffShell.Dispose()

            $Script:TheBufferManager.CopyActiveToBufferAWithWipe()

            Start-Sleep -Seconds 1

            $Script:ThePreviousGlobalGameState = $Script:TheGlobalGameState
            $Script:TheGlobalGameState         = [GameStatePrimary]::GamePlayScreen   
        }
    }

    Write-Host "$([ATControlSequences]::GenerateCoordinateString(1, 1))"
}

[ScriptBlock]$Script:ThePlayerSetupState = {}

[ScriptBlock]$Script:TheGamePlayScreenState = {
    If($null -NE $Script:TheInventoryWindow) {
        $Script:TheInventoryWindow = $null
    }
    If($null -NE $Script:TheBattleManager) {
        $Script:TheBattleManager.Cleanup()
        $Script:TheBattleManager = $null
    }
    If($null -NE $Script:ThePlayerBattleStatWindow) {
        $Script:ThePlayerBattleStatWindow = $null
    }
    If($null -NE $Script:TheEnemyBattleStatWindow) {
        $Script:TheEnemyBattleStatWindow = $null
    }
    If($null -NE $Script:ThePlayerBattleActionWindow) {
        $Script:ThePlayerBattleActionWindow = $null
    }
    If($null -NE $Script:TheBattleStatusMessageWindow) {
        $Script:TheBattleStatusMessageWindow = $null
    }
    If($null -NE $Script:TheBattleEnemyImageWindow) {
        $Script:TheBattleEnemyImageWindow = $null
    }
    If($null -NE $Script:TheStatusHudWindow) {
        $Script:TheStatusHudWindow = $null
    }
    If($null -NE $Script:TheStatusTechSelectionWindow) {
        $Script:TheStatusTechSelectionWindow = $null
    }
    If($null -NE $Script:TheStatusTechInventoryWindow) {
        $Script:TheStatusTechInventoryWindow = $null
    }

    #######################################################################
    #
    # I REALLY NEED TO UNDERSTAND WHAT THE FUCK I WAS TRYING TO DO HERE.
    # THIS CODE SEEMS LIKE A FUCKING CRIME AGAINST HUMANITY, BUT I CAN'T
    # REMEMBER WHY I DID IT THIS WAY.
    #
    #######################################################################
    If(($Script:ThePreviousGlobalGameState -EQ [GameStatePrimary]::InventoryScreen) -AND ($Script:GpsRestoredFromInvBackup -EQ $false)) {
        $Script:TheBufferManager.RestoreBufferAToActive()

        # Force redraws of the content; a restoration from a buffer capture will NOT retain the 24-bit color information
        # and I really don't feel like trying to figure out how to grab the buffer manually
        $Script:GpsRestoredFromInvBackup             = $true
        $Script:TheSceneWindow.SceneImageDirty       = $true
        $Script:TheStatusWindow.PlayerNameDrawDirty  = $true
        $Script:TheStatusWindow.PlayerHpDrawDirty    = $true
        $Script:TheStatusWindow.PlayerMpDrawDirty    = $true
        $Script:TheStatusWindow.PlayerGoldDrawDirty  = $true
        $Script:TheCommandWindow.CommandHistoryDirty = $true
        $Script:TheMessageWindow.MessageADirty       = $true
        $Script:TheMessageWindow.MessageBDirty       = $true
        $Script:TheMessageWindow.MessageCDirty       = $true
        Write-Host "$([ATControlSequences]::CursorShow)"
    } Elseif(($Script:ThePreviousGlobalGameState -EQ [GameStatePrimary]::BattleScreen) -AND ($Script:GpsRestoredFromBatBackup -EQ $false)) {
        $Script:TheBufferManager.RestoreBufferAToActive()
        
        # Force redraws of the content; a restoration from a buffer capture will NOT retain the 24-bit color information
        # and I really don't feel like trying to figure out how to grab the buffer manually
        $Script:GpsRestoredFromBatBackup             = $true
        $Script:TheSceneWindow.SceneImageDirty       = $true
        $Script:TheStatusWindow.PlayerNameDrawDirty  = $true
        $Script:TheStatusWindow.PlayerHpDrawDirty    = $true
        $Script:TheStatusWindow.PlayerMpDrawDirty    = $true
        $Script:TheStatusWindow.PlayerGoldDrawDirty  = $true
        $Script:TheCommandWindow.CommandHistoryDirty = $true
        $Script:TheMessageWindow.MessageADirty       = $true
        $Script:TheMessageWindow.MessageBDirty       = $true
        $Script:TheMessageWindow.MessageCDirty       = $true
        Write-Host "$([ATControlSequences]::CursorShow)"
    } Elseif(($Script:ThePreviousGlobalGameState -EQ [GameStatePrimary]::PlayerStatusScreen) -AND ($Script:GpsRestoredFromStaBackup -EQ $false)) {
        $Script:TheBufferManager.RestoreBufferAToActive()
        
        # Force redraws of the content; a restoration from a buffer capture will NOT retain the 24-bit color information
        # and I really don't feel like trying to figure out how to grab the buffer manually
        $Script:GpsRestoredFromStaBackup             = $true
        $Script:TheSceneWindow.SceneImageDirty       = $true
        $Script:TheStatusWindow.PlayerNameDrawDirty  = $true
        $Script:TheStatusWindow.PlayerHpDrawDirty    = $true
        $Script:TheStatusWindow.PlayerMpDrawDirty    = $true
        $Script:TheStatusWindow.PlayerGoldDrawDirty  = $true
        $Script:TheCommandWindow.CommandHistoryDirty = $true
        $Script:TheMessageWindow.MessageADirty       = $true
        $Script:TheMessageWindow.MessageBDirty       = $true
        $Script:TheMessageWindow.MessageCDirty       = $true
        Write-Host "$([ATControlSequences]::CursorShow)"
    }

    $Script:ThePlayer.Update()
    $Script:TheStatusWindow.Draw()
    $Script:TheCommandWindow.Draw()
    $Script:TheSceneWindow.Draw()
    $Script:TheMessageWindow.Draw()
    $Script:TheCommandWindow.HandleInput()
}

[ScriptBlock]$Script:TheInventoryScreenState = {
    If($null -EQ $Script:TheInventoryWindow) {
        Try {
            $Script:TheInventoryWindow = [InventoryWindow]::new()
        } Catch {
            Write-Error $_.Exception.Message
            Write-Error $_.Exception.StackTrace
        }
    }
    If($Script:GpsRestoredFromInvBackup -EQ $true) {
        $Script:GpsRestoredFromInvBackup = $false
    }
    $Script:TheInventoryWindow.Draw()
    $Script:TheInventoryWindow.HandleInput()
}

[ScriptBlock]$Script:TheBattleScreenState = {
    If($Script:HasBattleIntroPlayed -EQ $false) {
        If($Script:ThePreviousGlobalGameState -EQ [GameStatePrimary]::GamePlayScreen) {
            [ATString]$Banner = [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleMintLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = 7
                        Column = 40 - (15 / 2)
                    }
                }
                UserData   = 'BATTLE COMMENCE'
                UseATReset = $true
            }
            Write-Host "$($Banner.ToAnsiControlSequenceString())"
            Write-Host "$([ATControlSequences]::CursorHide)"
            Try {
                $Script:TheSfxMPlayer.Open($Script:SfxBattleIntro)
                $Script:TheSfxMPlayer.Play()
            } Catch {}
            Start-Sleep -Seconds 1.75
            Clear-Host
        }
        $Script:HasBattleIntroPlayed = $true
    }
    If($null -EQ $Script:TheBattleManager) {
        $Script:TheBattleManager       = [BattleManager]::new()
        $Script:TheBattleManager.State = [BattleManagerState]::TurnIncrement
    }
    If($Script:BattleCursorVisible -EQ $false) {
        Write-Host "$([ATControlSequences]::CursorHide)"
        $Script:BattleCursorVisible = $true
    }
    If($null -EQ $Script:ThePlayerBattleStatWindow) {
        $Script:ThePlayerBattleStatWindow = [BattleEntityStatusWindow]::new(1, 1, 17, 19, $Script:ThePlayer)
    }
    If($null -EQ $Script:TheEnemyBattleStatWindow) {
        $Script:TheEnemyBattleStatWindow = [BattleEntityStatusWindow]::new(1, 22, 17, 40, $Script:TheCurrentEnemy)
    }
    If($null -EQ $Script:ThePlayerBattleActionWindow) {
        $Script:ThePlayerBattleActionWindow = [BattlePlayerActionWindow]::new()
    }
    If($null -EQ $Script:TheBattleStatusMessageWindow) {
        $Script:TheBattleStatusMessageWindow = [BattleStatusMessageWindow]::new()
    }
    If($null -EQ $Script:TheBattleEnemyImageWindow) {
        $Script:TheBattleEnemyImageWindow = [BattleEnemyImageWindow]::new()
    }
    If($null -EQ $Script:TheBattlePhaseIndicator) {
        $Script:TheBattlePhaseIndicator = [BattlePhaseIndicator]::new()
    }
    If($Script:GpsRestoredFromBatBackup -EQ $true) {
        $Script:GpsRestoredFromBatBackup = $false
    }
    If($Script:IsBattleBgmPlaying -EQ $false) {
        $Script:TheBgmMPlayer.Open($Script:BgmBattleThemeA)
        $Script:TheBgmMPlayer.Volume = 0.5
        $Script:TheBgmMPlayer.Play()
        $Script:IsBattleBgmPlaying = $true
    }
    $Script:TheBattleManager.Update()
}

[ScriptBlock]$Script:ThePlayerStatusScreenState = {
    Write-Host "$([ATControlSequences]::CursorHide)"
    $Script:Rui.CursorPosition = [Coordinates]::new(1, 1)

    If($null -EQ $Script:TheStatusHudWindow) {
        $Script:TheStatusHudWindow = [StatusHudWindow]::new()
    }
    If($null -EQ $Script:TheStatusTechSelectionWindow) {
        $Script:TheStatusTechSelectionWindow = [StatusTechniqueSelectionWindow]::new()
    }
    If($null -EQ $Script:TheStatusTechInventoryWindow) {
        $Script:TheStatusTechInventoryWindow = [StatusTechniqueInventoryWindow]::new()
    }
    If($Script:GpsRestoredFromStaBackup -EQ $true) {
        $Script:GpsRestoredFromStaBackup = $false
    }
    $Script:TheStatusHudWindow.Draw()
    $Script:TheStatusTechSelectionWindow.Draw()
    $Script:TheStatusTechInventoryWindow.Draw()
    Switch($Script:StatusScreenMode) {
        ([StatusScreenMode]::EquippedTechSelection) {
            If($Script:TheStatusTechSelectionWindow.IsActive -NE $true) {
                $Script:TheStatusTechSelectionWindow.SetAllActionDrawDirty()
                $Script:TheStatusTechSelectionWindow.IsActive = $true
            }
            If($Script:TheStatusTechInventoryWindow.IsActive -NE $false) {
                $Script:TheStatusTechInventoryWindow.IsActive = $false
                $Script:TheStatusTechInventoryWindow.SetFlagsDirty()
            }
            $Script:TheStatusTechSelectionWindow.PlayerChevronDirty = $true # Now the redraw should work... hopefully
            $Script:TheStatusTechSelectionWindow.Draw() # See if this trips the Chevron color change; didn't work :'(
            $Script:TheStatusTechInventoryWindow.Draw()
            $Script:TheStatusTechSelectionWindow.HandleInput()
            $Script:TheStatusTechSelectionWindow.Draw()
        }

        ([StatusScreenMode]::TechInventorySelection) {
            If($Script:TheStatusTechSelectionWindow.IsActive -NE $false) {
                $Script:TheStatusTechSelectionWindow.IsActive = $false
            }
            If($Script:TheStatusTechInventoryWindow.IsActive -NE $true) {
                $Script:TheStatusTechInventoryWindow.IsActive = $true
            }
            $Script:TheStatusTechSelectionWindow.PlayerChevronDirty = $true # Now the redraw should work... hopefully
            $Script:TheStatusTechSelectionWindow.Draw() # See if this trips the Chevron color change; didn't work :'(
            $Script:TheStatusTechInventoryWindow.Draw()
            $Script:TheStatusTechInventoryWindow.HandleInput()
            $Script:TheStatusTechInventoryWindow.Draw()
        }

        Default {
            # DO NOTHING
            # BECAUSE I'M A FUCKING GENIUS
        }
    }
}

[ScriptBlock]$Script:TheCleanupState = {}





###############################################################################
#
# THE COMMAND TABLE AND ITS ASSOCIATED SCRIPT BLOCKS
#
###############################################################################
[ScriptBlock]$Script:TheMoveCommand = {
    Param(
        [String]$a0
    )

    If($args.Length -GT 0) {
        $Script:TheMessageWindow.WriteCmdExtraArgsWarning('move', $args)
    }

    If($PSBoundParameters.ContainsKey('a0') -EQ $true) {
        If([String]::IsNullOrEmpty($a0) -EQ $true) {
            $Script:TheCommandWindow.UpdateCommandHistory($false)
            $Script:TheMessageWindow.WriteBadArg0Message('move', '')

            Return
        } Else {
            Switch($a0) {
                { $_ -IEQ 'north' -OR $_ -IEQ 'n' } {
                    $Script:ThePlayer.MapMoveNorth()
                }
    
                { $_ -IEQ 'south' -OR $_ -IEQ 's' } {
                    $Script:ThePlayer.MapMoveSouth()
                }
    
                { $_ -IEQ 'east' -OR $_ -IEQ 'e' } {
                    $Script:ThePlayer.MapMoveEast()
                }
    
                { $_ -IEQ 'west' -OR $_ -IEQ 'w' } {
                    $Script:ThePlayer.MapMoveWest()
                }
    
                Default {
                    $Script:TheCommandWindow.UpdateCommandHistory($false)
                    $Script:TheMessageWindow.WriteBadCommandMessage('move')
    
                    Return
                }
            }
        }
    } Else {
        $Script:TheMessageWindow.WriteBadCommandRetortMessage()
        $Script:TheCommandWindow.UpdateCommandHistory($false)

        Return
    }

    Return
}

[ScriptBlock]$Script:TheLookCommand = {
    If($args.Length -GT 0) {
        $Script:TheMessageWindow.WriteCmdExtraArgsWarning('look', $args)
    }

    $Script:TheCommandWindow.UpdateCommandHistory($true)

    $a = $Script:CurrentMap.GetTileAtPlayerCoordinates().ObjectListing
    $b = 78
    $c = ''
    $f = ''
    $z = 0
    $y = $false

    If($a.Count -LE 0) {
        $Script:TheMessageWindow.WriteMapNoItemsFoundMessage()
        Return
    }
    Foreach($d in $a) {
        If($z -EQ $a.Count - 1) {
            $c += $d.Name
        } Else {
            $c += $d.Name + ', '
        }
        $z++
    }
    $e = $c.Length
    If($e -GT $b) {
        $y = $true
        $c -MATCH '([\s,]+\w+){5}$' | Out-Null
        If($_ -EQ $true) {
            $c = $c -REPLACE '([\s,]+\w+){5}$', ''
            $f = $matches[0].Remove(0, 2)
        }
    }

    $Script:TheMessageWindow.WriteLookMessage($c, $f, $y)

    Return
}

[ScriptBlock]$Script:TheInventoryCommand = {
    If($args.Length -GT 0) {
        $Script:TheMessageWindow.WriteCmdExtraArgsWarning('inventory', $args)
    }

    $Script:TheCommandWindow.UpdateCommandHistory($true)
    $Script:TheBufferManager.CopyActiveToBufferAWithWipe()
    $Script:ThePreviousGlobalGameState = $Script:TheGlobalGameState
    $Script:TheGlobalGameState         = [GameStatePrimary]::InventoryScreen

    Return
}

[ScriptBlock]$Script:TheExamineCommand = {
    Param(
        [String]$a0
    )

    If($args.Length -GT 0) {
        $Script:TheMessageWindow.WriteCmdExtrasArgsWarning('examine', $args)
    }

    If($PSBoundParameters.ContainsKey('a0') -EQ $true) {
        If([String]::IsNullOrEmpty($a0) -EQ $true) {
            $Script:TheCommandWindow.UpdateCommandHistory($false)
            $Script:TheMessageWindow.WriteBadArg0Message('examine', '')

            Return
        } Else {
            Foreach($a in $Script:CurrentMap.GetTileAtPlayerCoordinates().ObjectListing) {
                If($a.Name -IEQ $a0) {
                    $Script:TheCommandWindow.UpdateCommandHistory($true)
                    $Script:TheMessageWindow.WriteItemExamineMessage($a.ExamineString)
    
                    Return
                }
            }
            $Script:TheCommandWindow.UpdateCommandHistory($false)
            $Script:TheMessageWindow.WriteMapInvalidItemMessage($ItemName)
    
            Return
        }
    } Else {
        $Script:TheMessageWindow.WriteBadCommandRetortMessage()
        $Script:TheCommandWindow.UpdateCommandHistory($false)

        Return
    }

    Return
}

[ScriptBlock]$Script:TheGetCommand = {
    Param(
        [String]$a0
    )

    If($args.Length -GT 0) {
        $Script:TheMessageWindow.WriteCmdExtraArgsWarning('get', $args)
    }

    If($PSBoundParameters.ContainsKey('a0') -EQ $true) {
        If([String]::IsNullOrEmpty($a0) -EQ $true) {
            $Script:TheCommandWindow.UpdateCommandHistory($false)
            $Script:TheMessageWindow.WriteBadArg0Message('get', '')

            Return
        } Else {
            $a = $Script:CurrentMap.GetTileAtPlayerCoordinates().ObjectListing

            If($a.Count -LE 0) {
                $Script:TheCommandWindow.UpdateCommandHistory($false)
                $Script:TheMessageWindow.WriteMapNoItemsFoundMessage()

                Return
            }
            Foreach($b in $a) {
                If($b.Name -IEQ $a0) {
                    If($b.CanAddToInventory -EQ $true) {
                        $Script:ThePlayer.Inventory.Add($b) | Out-Null
                        $c = $a.Remove($b) | Out-Null
                        If($c -EQ $false) {
                            Write-Error 'Failed to remove an item from the Map Tile!'

                            Exit
                        } Else {
                            $Script:TheCommandWindow.UpdateCommandHistory($true)
                            $Script:TheMessageWindow.WriteItemTakenMessage($a0)

                            Return
                        }
                    } Else {
                        $Script:TheCommandWindow.UpdateCommandHistory($true)
                        $Script:TheMessageWindow.WriteItemCantTakeMessage($a0)

                        Return
                    }
                }
            }
            $Script:TheCommandWindow.UpdateCommandHistory($false)
            $Script:TheMessageWindow.WriteMapInvalidItemMessage($a0)

            Return
        }
    } Else {
        $Script:TheMessageWindow.WriteBadCommandRetortMessage()
        $Script:TheCommandWindow.UpdateCommandHistory($false)

        Return
    }

    Return
}

[ScriptBlock]$Script:TheUseCommand = {
    Param(
        [String]$a0,
        [String]$a1
    )

    If($args.Length -GT 0) {
        $Script:TheMessageWindow.WriteCmdExtrasArgsWarning('use', $args)
    }

    If(($PSBoundParameters.ContainsKey('a0') -EQ $true) -AND ($PSBoundParameters.ContainsKey('a1') -EQ $true)) {
        If($Script:ThePlayer.IsItemInInventory($a0) -EQ $true) {
            If($Script:CurrentMap.GetTileAtPlayerCoordinates().IsItemInTile($a1) -EQ $true) {
                [MapTileObject]$pi  = $Script:ThePlayer.GetItemReference($a0)
                [MapTileObject]$mti = $Script:CurrentMap.GetTileAtPlayerCoordinates().GetItemReference($a1)

                If($mti.ValidateSourceInFilter($pi.PSTypeNames[0]) -EQ $true) {
                    $Script:TheCommandWindow.UpdateCommandHistory($true)
                    Invoke-Command $mti.Effect -ArgumentList $mti, $pi
                } Else {
                    $Script:TheCommandWindow.UpdateCommandHistory($false)
                    $Script:TheMessageWindow.WriteCantUseItemMessage($a0, $a1)
                }
            } Else {
                If($a1 -IEQ 'self') {
                    [MapTileObject]$pi = $Script:ThePlayer.GetItemReference($a0)

                    # This code is problematic if the filter has no items in it
                    If($Script:ThePlayer.ValidateSourceInFilter($pi.PSTypeNames[0]) -EQ $true) {
                        $Script:TheCommandWindow.UpdateCommandHistory($true)
                        Invoke-Command $pi.Effect -ArgumentList $pi, $Script:ThePlayer
                    } Else {
                        $Script:TheCommandWindow.UpdateCommandHistory($false)
                        $Script:TheMessageWindow.WriteCatUseItemOnSelfMessage($a0)
                    }
                } Else {
                    $Script:TheCommandWindow.UpdateCommandHistory($false)
                    $Script:TheMessageWindow.WriteBadCommandRetortMessage()
                }
            }
        } Else {
            # The item isn't in the Player's Inventory, thus rendering this an inoperable command (despite not being syntactically invalid).
            $Script:TheCommandWindow.UpdateCommandHistory($false)
            $Script:TheMessageWindow.WriteNoItemInInvMessage($a0)

            Return
        }
    } Elseif(($PSBoundParameters.ContainsKey('a0') -EQ $true) -AND ((-NOT $PSBoundParameters.ContainsKey('a1')) -EQ $true)) {
        $Script:TheCommandWindow.UpdateCommandHistory($false)

        If($Script:ThePlayer.IsItemInInventory($a0) -EQ $true) {
            $Script:TheMessageWindow.WriteNoItemTargetMessage($a0)
        } Else {
            $Script:TheMessageWindow.WriteItemUseUnsureMessage($a0)
        }
    } Elseif(((-NOT $PSBoundParameters.ContainsKey('a0')) -EQ $true) -AND ((-NOT $PSBoundParameters.ContainsKey('a1')) -EQ $true)) {
        $Script:TheMessageWindow.WriteBadCommandRetortMessage()
        $Script:TheCommandWindow.UpdateCommandHistory($false)
    }
}

[ScriptBlock]$Script:TheDropCommand = {
    Param(
        [String]$a0
    )

    If($args.Length -GE 1) {
        $Script:TheCommandWindow.UpdateCommandHistory($false)
        $Script:TheMessageWindow.WriteCantDropMultMessage()

        Return
    }

    If($PSBoundParameters.ContainsKey('a0') -EQ $true) {
        If($Script:ThePlayer.IsItemInInventory($a0) -EQ $true) {
            If($Script:ThePlayer.RemoveInventoryItemByName($a0) -EQ [ItemRemovalStatus]::Success) {
                $Script:TheCommandWindow.UpdateCommandHistory($true)
                $Script:TheMessageWindow.WriteItemDroppedMessage($a0)

                Return
            } Else {
                # WARNING
                # At this point, this branch is considered a fatal error
                # There really should be a better way of handling this, however
                Exit
            }
        } Else {
            $Script:TheCommandWindow.UpdateCommandHistory($false)
            $Script:TheMessageWindow.WriteNoItemInInvMessage($a0)

            Return
        }
    } Else {
        $Script:TheMessageWindow.WriteBadCommandRetortMessage()
        $Script:TheCommandWindow.UpdateCommandHistory($false)

        Return
    }
}

[ScriptBlock]$Script:TheStatusCommand = {
    If($args.Length -GT 0) {
        $Script:TheMessageWindow.WriteCmdExtraArgsWarning('use', $args)
    }

    $Script:TheCommandWindow.UpdateCommandHistory($true)
    $Script:TheBufferManager.CopyActiveToBufferAWithWipe()
    $Script:ThePreviousGlobalGameState = $Script:TheGlobalGameState
    $Script:TheGlobalGameState         = [GameStatePrimary]::PlayerStatusScreen
}

[ScriptBlock]$Script:TheEnterCommand = {
    If($args.Length -GT 0) {
        $Script:TheMessageWindow.WriteCmdExtraArgsWarning('enter', $args)
    }

    $a = $Script:CurrentMap.GetTileAtPlayerCoordinates().ObjectListing

    If($a.Count -LE 0) {
        $Script:TheCommandWindow.UpdateCommandHistory($false)

        # THIS MAY NEED MODIFIED TO A DIFFERENT METHOD CALL GIVEN THE NATURE
        # OF THE ACTION.
        $Script:TheMessageWindow.WriteMapNoItemsFoundMessage()

        Return
    }

    Foreach($b in $a) {
        # THIS COULD BE PROBLEMATIC IF THERE ARE MULTIPLE WARPABLE ITEMS ON A SINGLE TILE
        # BUT REALLY? WHY?
        If($b -IS [MTOWarpable]) {
            # ASIDE FROM THE OTHER WAYS IN WHICH WARPABLES DIFFER FROM THEIR OTHER MTO
            # CONTEMPORARIES IS THAT THEY DON'T MAKE USE OF THE MTO TARGET OF FILTER.
            # WE'RE JUST GOING TO INVOKE THE EFFECT METHOD, WHICH WOULD BE THE MAP
            # WARPING FUNCTION.
            $Script:TheCommandWindow.UpdateCommandHistory($true)
            Invoke-Command $b.Effect -ArgumentList $b.WarpToReference.Value, $b.WarpToX, $b.WarpToY

            # I MAY ALSO WANT TO WRITE A MESSAGE TO THE MESSAGE WINDOW ABOUT HAVING
            # ENTERED A MAP? I'LL LEAVE THIS AS A TODO HERE.

            $Script:TheSceneWindow.UpdateCurrentImage($Script:CurrentMap.GetTileAtPlayerCoordinates().BackgroundImage)
            
            # THIS NEXT PART IS LIKELY SUBJECT TO CHANGE BECAUSE IT WOULD IMPLY THAT
            # BATTLES CAN OCCUR ON THE WARPING TILES, AND THIS MAY NOT MAKE MUCH SENSE
            $Script:CurrentMap.GetTileAtPlayerCoordinates().BattleStep()

            Return
        }
    }

    # THERE ARE NO WARPABLE INSTANCES ON THIS TILE, REPORT TO THE MESSAGE WINDOW
    $Script:TheCommandWindow.UpdateCommandHistory($false)
    $Script:TheMessageWindow.WriteBadCommandRetortMessage()
}

$Script:TheCommandTable = @{
    'move'      = $Script:TheMoveCommand
    'm'         = $Script:TheMoveCommand
    'look'      = $Script:TheLookCommand
    'l'         = $Script:TheLookCommand
    'inventory' = $Script:TheInventoryCommand
    'i'         = $Script:TheInventoryCommand
    'inv'       = $Script:TheInventoryCommand
    'examine'   = $Script:TheExamineCommand
    'exa'       = $Script:TheExamineCommand
    'get'       = $Script:TheGetCommand
    'g'         = $Script:TheGetCommand
    'take'      = $Script:TheGetCommand
    't'         = $Script:TheGetCommand
    'use'       = $Script:TheUseCommand
    'u'         = $Script:TheUseCommand
    'drop'      = $Script:TheDropCommand
    'd'         = $Script:TheDropCommand
    'status'    = $Script:TheStatusCommand
    'sta'       = $Script:TheStatusCommand
    'enter'     = $Script:TheEnterCommand
    'en'        = $Script:TheEnterCommand
    'exit'      = $Script:TheEnterCommand
    'ex'        = $Script:TheEnterCommand
}





###############################################################################
#
# BATTLE ACTION CALCULATION
#
###############################################################################
[ScriptBlock]$Script:BaCalc = {
    Param(
        [BattleEntity]$Self,
        [BattleEntity]$Target,
        [BattleAction]$SelfAction
    )

    [Boolean]$CanExecute   = $false
    [Boolean]$ReduceSelfMp = $false

    If($SelfAction.MpCost -GT 0) {
        If($Self.Stats[[StatId]::MagicPoints].Base -GE $SelfAction.MpCost) {
            $CanExecute   = $true
            $ReduceSelfMp = $true
        }
    } Elseif($SelfAction.MpCost -LE 0) {
        $CanExecute = $true
    }

    If($CanExecute -EQ $true) {
        If($ReduceSelfMp -EQ $true) {
            [Int]$DecRes = $Self.Stats[[StatId]::MagicPoints].DecrementBase($SelfAction.MpCost * -1)
            If($Self -IS [Player]) {
                $Script:ThePlayerBattleStatWindow.MpDrawDirty = $true
            } Else {
                $Script:TheEnemyBattleStatWindow.MpDrawDirty = $true
            }
        }

        $ExecuteChance = Get-Random -Minimum 0.0 -Maximum 1.0
        If($ExecuteChance -GT $SelfAction.Chance) {
            Return [BattleActionResult]@{
                Type            = [BattleActionResultType]::FailedAttackFailed
                Originator      = $Self
                Target          = $Target
                ActionEffectSum = 0
            }
        }

        $TargetEffectiveEvasion = [Math]::Round((0.1 + ($Target.Stats[[StatId]::Speed].Base * (Get-Random -Minimum 0.001 -Maximum 0.003))) * 100)
        $EvRandFactor           = Get-Random -Minimum 1 -Maximum 100
        If($EvRandFactor -LE $TargetEffectiveEvasion) {
            Return [BattleActionResult]@{
                Type            = [BattleActionResultType]::FailedAttackMissed
                Originator      = $Self
                Target          = $Target
                ActionEffectSum = 0
            }
        }

        $EffectiveDamageP1 = [Math]::Round([Math]::Abs(
            $SelfAction.EffectValue * (
                ($Self.Stats[[StatId]::Attack].Base - $Target.Stats[[StatId]::Defense].Base) *
                (1 + ($Self.Stats[[StatId]::Luck].Base - $Target.Stats[[StatId]::Luck].Base))
            ) * (Get-Random -Minimum 0.07 -Maximum 0.15)
        ))
        $EffectiveDamageCritFactor     = 1.0
        $EffectiveDamageAffinityFactor = 1.0

        $CriticalChance = Get-Random -Minimum 1 -Maximum 1000
        If($CriticalChance -LE $Self.Stats[[StatId]::Luck].Base) {
            $EffectiveDamageCritFactor = 1.5
        }

        $EffectiveDamageAffinityFactor = $Script:BATLut[$SelfAction.Type][$Target.Affinity]

        $FinalDamage = [Math]::Round($EffectiveDamageP1 * $EffectiveDamageCritFactor * $EffectiveDamageAffinityFactor)

        [Int]$DecRes = $Target.Stats[[StatId]::HitPoints].DecrementBase(($FinalDamage * -1))

        If(0 -NE $DecRes) {
            Return [BattleActionResultType]@{
                Type            = [BattleActionResultType]::FailedAttackFailed
                Originator      = $Self
                Target          = $Target
                ActionEffectSum = $FinalDamage
            }
        } Else {
            If($Target -IS [Player]) {
                $Script:ThePlayerBattleStatWindow.HpDrawDirty = $true
            } Else {
                $Script:TheEnemyBattleStatWindow.HpDrawDirty = $true
            }

            If($EffectiveDamageCritFactor -GT 1.0 -AND $EffectiveDamageAffinityFactor -EQ 1.0) {
                Return [BattleActionResult]@{
                    Type            = [BattleActionResultType]::SuccessWithCritical
                    Originator      = $Self
                    Target          = $Target
                    ActionEffectSum = $FinalDamage
                }
            } Elseif($EffectiveDamageCritFactor -EQ 1.0 -AND $EffectiveDamageAffinityFactor -GT 1.0) {
                Return [BattleActionResult]@{
                    Type            = [BattleActionResultType]::SuccessWithAffinityBonus
                    Originator      = $Self
                    Target          = $Target
                    ActionEffectSum = $FinalDamage
                }
            } Elseif($EffectiveDamageCritFactor -GT 1.0 -AND $EffectiveDamageAffinityFactor -GT 1.0) {
                Return [BattleActionResult]@{
                    Type            = [BattleActionResultType]::SuccessWithCritAndAffinityBonus
                    Originator      = $Self
                    Target          = $Target
                    ActionEffectSum = $FinalDamage
                }
            }

            Return [BattleActionResult]@{
                Type            = [BattleActionResultType]::Success
                Originator      = $Self
                Target          = $Target
                ActionEffectSum = $FinalDamage
            }
        }
    } Else {
        Return [BattleActionResult]@{
            Type            = [BattleActionResultType]::FailedNoUsesRemaining
            Originator      = $Self
            Target          = $Target
            ActionEffectSum = 0
        }
    }
}





###############################################################################
#
# PLAYER INITIALIZATION
#
###############################################################################
[Player]$Script:ThePlayer = [Player]@{
    Name  = 'Steve'
    Stats = @{
        [StatId]::HitPoints = [BattleEntityProperty]@{
            Base                = 1000
            Max                 = 1000
            ValidateFunction    = {
                Param(
                    [BattleEntityProperty]$Self
                )
                
                Switch($Self.Base) {
                    { $_ -GT ($Self.Max * [BattleEntityProperty]::StatNumThresholdCaution) } {
                        $Self.State = [StatNumberState]::Normal
                        Return
                    }

                    { ($_ -GT ($Self.Max * [BattleEntityProperty]::StatNumThresholdDanger)) -AND ($_ -LT ($Self.Max * [BattleEntityProperty]::StatNumThresholdCaution)) } {
                        $Self.State = [StatNumberState]::Caution
                        Return
                    }

                    { $_ -LT ($Self.Max * [BattleEntityProperty]::StatNumThresholdDanger) } {
                        $Self.State = [StatNumberState]::Danger
                        Return
                    }
                }
            }
        }
        [StatId]::MagicPoints = [BattleEntityProperty]@{
            Base                = 500
            Max                 = 500
            ValidateFunction    = {
                Param(
                    [BattleEntityProperty]$Self
                )
                
                Switch($Self.Base) {
                    { $_ -GT ($Self.Max * [BattleEntityProperty]::StatNumThresholdCaution) } {
                        $Self.State = [StatNumberState]::Normal
                        Return
                    }

                    { ($_ -GT ($Self.Max * [BattleEntityProperty]::StatNumThresholdDanger)) -AND ($_ -LT ($Self.Max * [BattleEntityProperty]::StatNumThresholdCaution)) } {
                        $Self.State = [StatNumberState]::Caution
                        Return
                    }

                    { $_ -LT ($Self.Max * [BattleEntityProperty]::StatNumThresholdDanger) } {
                        $Self.State = [StatNumberState]::Danger
                        Return
                    }
                }
            }
        }
        [StatId]::Attack = [BattleEntityProperty]@{
            Base                = 25
            BasePre             = 25
            BaseAugmentValue    = 5
            Max                 = 15
            MaxPre              = 15
            MaxAugmentValue     = 0
            AugmentTurnDuration = 2
            ValidateFunction    = {
                Param(
                    [BattleEntityProperty]$Self
                )
                
                Return $Self.Base
            }
        }
        [StatId]::Defense = [BattleEntityProperty]@{
            Base                = 8
            Max                 = 8
            ValidateFunction    = {
                Param(
                    [BattleEntityProperty]$Self
                )
                
                Return
            }
        }
        [StatId]::MagicAttack = [BattleEntityProperty]@{
            Base                = 6
            Max                 = 6
            ValidateFunction    = {
                Param(
                    [BattleEntityProperty]$Self
                )
                
                Return
            }
        }
        [StatId]::MagicDefense = [BattleEntityProperty]@{
            Base                = 4
            Max                 = 4
            ValidateFunction    = {
                Param(
                    [BattleEntityProperty]$Self
                )
                
                Return
            }
        }
        [StatId]::Speed = [BattleEntityProperty]@{
            Base                = 9
            Max                 = 9
            ValidateFunction    = {
                Param(
                    [BattleEntityProperty]$Self
                )
                
                Return
            }
        }
        [StatId]::Luck = [BattleEntityProperty]@{
            Base                = 5
            Max                 = 5
            ValidateFunction    = {
                Param(
                    [BattleEntityProperty]$Self
                )
                
                Return
            }
        }
        [StatId]::Accuracy = [BattleEntityProperty]@{
            Base                = 9
            BaseAugmentValue    = -5
            Max                 = 9
            AugmentTurnDuration = 2
            ValidateFunction    = {
                Param(
                    [BattleEntityProperty]$Self
                )
                
                Return
            }
        }
    }
    ActionListing = @{
        [ActionSlot]::A = [BAPunch]::new()
        [ActionSlot]::B = [BAKick]::new()
        [ActionSlot]::C = [BAFlamePunch]::new()
        [ActionSlot]::D = [BAIKill]::new()
    }
    SpoilsEffect    = {}
    ActionMarbleBag = @()
    CurrentGold     = 500
    Affinity        = [BattleActionType]::ElementalFire
}





###############################################################################
#
# GLOBAL STATE BLOCK TABLE DEFINITION
#
###############################################################################
$Script:TheGlobalStateBlockTable = @{
    [GameStatePrimary]::SplashScreenA      = $Script:TheSplashScreenAState
    [GameStatePrimary]::SplashScreenB      = $Script:TheSplashScreenBState
    [GameStatePrimary]::TitleScreen        = $Script:TheTitleScreenState
    [GameStatePrimary]::PlayerSetupScreen  = $Script:ThePlayerSetupState
    [GameStatePrimary]::GamePlayScreen     = $Script:TheGamePlayScreenState
    [GameStatePrimary]::InventoryScreen    = $Script:TheInventoryScreenState
    [GameStatePrimary]::BattleScreen       = $Script:TheBattleScreenState
    [GameStatePrimary]::PlayerStatusScreen = $Script:ThePlayerStatusScreenState
    [GameStatePrimary]::Cleanup            = $Script:TheCleanupState
}

#endregion





#region Console Colors

###############################################################################
#
# CONSOLE COLOR 24 CLASS
#
# BASIC 24-BIT COLOR DEFINITION
#
###############################################################################
Class ConsoleColor24 {
    [ValidateRange(0, 255)][Int]$Red
    [ValidateRange(0, 255)][Int]$Green
    [ValidateRange(0, 255)][Int]$Blue

    ConsoleColor24(
        [Int]$Red,
        [Int]$Green,
        [Int]$Blue
    ) {
        $this.Red   = $Red
        $this.Green = $Green
        $this.Blue  = $Blue
    }
}





###############################################################################
#
# CONSOLE COLOR 24 SPECIALIZATIONS
#
###############################################################################
Class CCBlack24 : ConsoleColor24 {
    CCBlack24() : base(0, 0, 0) {}
}

Class CCWhite24 : ConsoleColor24 {
    CCWhite24() : base(255, 255, 255) {}
}

Class CCRed24 : ConsoleColor24 {
    CCRed24() : base(255, 0, 0) {}
}

Class CCGreen24 : ConsoleColor24 {
    CCGreen24() : base(0, 255, 0) {}
}

Class CCBlue24 : ConsoleColor24 {
    CCBlue24() : base (0, 0, 255) {}
}

Class CCYellow24 : ConsoleColor24 {
    CCYellow24() : base(255, 255, 0) {}
}

Class CCDarkYellow24 : ConsoleColor24 {
    CCDarkYellow24() : base(255, 204, 0) {}
}

Class CCDarkCyan24 : ConsoleColor24 {
    CCDarkCyan24() : base(0, 139, 139) {}
}

Class CCDarkGrey24 : ConsoleColor24 {
    CCDarkGrey24() : base(45, 45, 45) {}
}

Class CCRandom24 : ConsoleColor24 {
    CCRandom24() : base($(Get-Random -Maximum 255 -Minimum 0), $(Get-Random -Maximum 255 -Minimum 0), $(Get-Random -Maximum 255 -Minimum 0)) {}
}

Class CCAppleRedLight24 : ConsoleColor24 {
    CCAppleRedLight24() : base(255, 59, 48) {}
}

Class CCAppleRedDark24 : ConsoleColor24 {
    CCAppleRedDark24() : base(255, 69, 58) {}
}

Class CCAppleOrangeLight24 : ConsoleColor24 {
    CCAppleOrangeLight24() : base(255, 149, 0) {}
}

Class CCAppleOrangeDark24 : ConsoleColor24 {
    CCAppleOrangeDark24() : base(255, 159, 10) {}
}

Class CCAppleYellowLight24 : ConsoleColor24 {
    CCAppleYellowLight24() : base(255, 204, 0) {}
}

Class CCAppleYellowDark24 : ConsoleColor24 {
    CCAppleYellowDark24() : base(255, 214, 10) {}
}

Class CCAppleGreenLight24 : ConsoleColor24 {
    CCAppleGreenLight24() : base(52, 199, 89) {}
}

Class CCAppleGreenDark24 : ConsoleColor24 {
    CCAppleGreenDark24() : base(48, 209, 88) {}
}

Class CCAppleMintLight24 : ConsoleColor24 {
    CCAppleMintLight24() : base(0, 199, 190) {}
}

Class CCAppleMintDark24 : ConsoleColor24 {
    CCAppleMintDark24() : base(99, 230, 226) {}
}

Class CCAppleTealLight24 : ConsoleColor24 {
    CCAppleTealLight24() : base(48, 176, 199) {}
}

Class CCAppleTealDark24 : ConsoleColor24 {
    CCAppleTealDark24() : base(64, 200, 224) {}
}

Class CCAppleCyanLight24 : ConsoleColor24 {
    CCAppleCyanLight24() : base(50, 173, 230) {}
}

Class CCAppleCyanDark24 : ConsoleColor24 {
    CCAppleCyanDark24() : base(100, 210, 255) {}
}

Class CCAppleBlueLight24 : ConsoleColor24 {
    CCAppleBlueLight24() : base(0, 122, 255) {}
}

Class CCAppleBlueDark24 : ConsoleColor24 {
    CCAppleBlueDark24() : base(10, 132, 255) {}
}

Class CCAppleIndigoLight24 : ConsoleColor24 {
    CCAppleIndigoLight24() : base(88, 86, 214) {}
}

Class CCAppleIndigoDark24 : ConsoleColor24 {
    CCAppleIndigoDark24() : base(94, 92, 230) {}
}

Class CCApplePurpleLight24 : ConsoleColor24 {
    CCApplePurpleLight24() : base(175, 82, 222) {}
}

Class CCApplePurpleDark24 : ConsoleColor24 {
    CCApplePurpleDark24() : base(191, 90, 242) {}
}

Class CCApplePinkLight24 : ConsoleColor24 {
    CCApplePinkLight24() : base(255, 45, 85) {}
}

Class CCApplePinkDark24 : ConsoleColor24 {
    CCApplePinkDark24() : base(255, 55, 95) {}
}

Class CCAppleBrownLight24 : ConsoleColor24 {
    CCAppleBrownLight24() : base(162, 132, 94) {}
}

Class CCAppleBrownDark24 : ConsoleColor24 {
    CCAppleBrownDark24() : base(172, 142, 104) {}
}

Class CCAppleGrey1Light24 : ConsoleColor24 {
    CCAppleGrey1Light24() : base(142, 142, 147) {}
}

Class CCAppleGrey1Dark24 : ConsoleColor24 {
    CCAppleGrey1Dark24() : base(142, 142, 147) {}
}

Class CCAppleGrey2Light24 : ConsoleColor24 {
    CCAppleGrey2Light24() : base(174, 174, 178) {}
}

Class CCAppleGrey2Dark24 : ConsoleColor24 {
    CCAppleGrey2Dark24() : base(99, 99, 102) {}
}

Class CCAppleGrey3Light24 : ConsoleColor24 {
    CCAppleGrey3Light24() : base(199, 199, 204) {}
}

Class CCAppleGrey3Dark24 : ConsoleColor24 {
    CCAppleGrey3Dark24() : base(72, 72, 74) {}
}

Class CCAppleGrey4Light24 : ConsoleColor24 {
    CCAppleGrey4Light24() : base(209, 209, 214) {}
}

Class CCAppleGrey4Dark24 : ConsoleColor24 {
    CCAppleGrey4Dark24() : base(58, 58, 60) {}
}

Class CCAppleGrey5Light24 : ConsoleColor24 {
    CCAppleGrey5Light24() : base(229, 229, 234) {}
}

Class CCAppleGrey5Dark24 : ConsoleColor24 {
    CCAppleGrey5Dark24() : base(44, 44, 46) {}
}

Class CCAppleGrey6Light24 : ConsoleColor24 {
    CCAppleGrey6Light24() : base(242, 242, 247) {}
}

Class CCAppleGrey6Dark24 : ConsoleColor24 {
    CCAppleGrey6Dark24() : base(28, 28, 30) {}
}

<#
https://www.pantone.com/connect/14-4318-TCX
#>
Class CCPantoneSkyBlue24 : ConsoleColor24 {
    CCPantoneSkyBlue24() : base(54, 73, 83) {}
}
<#
https://www.pantone.com/connect/15-6322-TPX
#>
Class CCPantoneLightGrassGreen24 : ConsoleColor24 {
    CCPantoneLightGrassGreen24() : base(49, 70, 53) {}
}

<#
https://www.pantone.com/connect/19-1218-TCX
#>
Class CCPantonePottingSoil24 : ConsoleColor24 {
    CCPantonePottingSoil24() : base(33, 22, 18) {}
}

<# COLOR VARIATIONS RECENTLY UPDATED FROM APPLE'S DOCUMENTATION #>
<# https://developer.apple.com/design/human-interface-guidelines/color#Specifications #>

Class CCAppleNRedLight24 : ConsoleColor24 {
    CCAppleNRedLight24() : base(255, 59, 48) {}
}

Class CCAppleNRedDark24 : ConsoleColor24 {
    CCAppleNRedDark24() : base(255, 69, 58) {}
}

Class CCAppleNRedALight24 : ConsoleColor24 {
    CCAppleNRedALight24() : base(215, 0, 21) {}
}

Class CCAppleNRedADark24 : ConsoleColor24 {
    CCAppleNRedADark24() : base(255, 105, 97) {}
}

Class CCAppleNOrangeLight24 : ConsoleColor24 {
    CCAppleNOrangeLight24() : base(255, 149, 0) {}
}

Class CCAppleNOrangeDark24 : ConsoleColor24 {
    CCAppleNOrangeDark24() : base(255, 159, 10) {}
}

Class CCAppleNOrangeALight24 : ConsoleColor24 {
    CCAppleNOrangeALight24() : base(201, 52, 0) {}
}

Class CCAppleNOrangeADark24 : ConsoleColor24 {
    CCAppleNOrangeADark24() : base(255, 179, 64) {}
}

Class CCAppleNYellowLight24 : ConsoleColor24 {
    CCAppleNYellowLight24() : base(255, 204, 0) {}
}

Class CCAppleNYellowDark24 : ConsoleColor24 {
    CCAppleNYellowDark24() : base(255, 214, 10) {}
}

Class CCAppleNYellowALight24 : ConsoleColor24 {
    CCAppleNYellowALight24() : base(178, 80, 0) {}
}

Class CCAppleNYellowADark24 : ConsoleColor24 {
    CCAppleNYellowADark24() : base(255, 212, 38) {}
}

Class CCAppleNGreenLight24 : ConsoleColor24 {
    CCAppleNGreenLight24() : base(52, 199, 89) {}
}

Class CCAppleNGreenDark24 : ConsoleColor24 {
    CCAppleNGreenDark24() : base(48, 209, 88) {}
}

Class CCAppleNGreenALight24 : ConsoleColor24 {
    CCAppleNGreenALight24() : base(36, 138, 61) {}
}

Class CCAppleNGreenADark24 : ConsoleColor24 {
    CCAppleNGreenADark24() : base(48, 219, 91) {}
}

Class CCAppleNMintLight24 : ConsoleColor24 {
    CCAppleNMintLight24() : base(0, 199, 190) {}
}

Class CCAppleNMintDark24 : ConsoleColor24 {
    CCAppleNMintDark24() : base(99, 230, 226) {}
}

Class CCAppleNMintALight24 : ConsoleColor24 {
    CCAppleNMintALight24() : base(12, 129, 123) {}
}

Class CCAppleNMintADark24 : ConsoleColor24 {
    CCAppleNMintADark24() : base(102, 212, 207) {}
}

Class CCAppleNTealLight24 : ConsoleColor24 {
    CCAppleNTealLight24() : base(48, 176, 199) {}
}

Class CCAppleNTealDark24 : ConsoleColor24 {
    CCAppleNTealDark24() : base(64, 200, 224) {}
}

Class CCAppleNTealALight24 : ConsoleColor24 {
    CCAppleNTealALight24() : base(0, 130, 153) {}
}

Class CCAppleNTealADark24 : ConsoleColor24 {
    CCAppleNTealADark24() : base(93, 230, 255) {}
}

Class CCAppleNCyanLight24 : ConsoleColor24 {
    CCAppleNCyanLight24() : base(50, 173, 230) {}
}

Class CCAppleNCyanDark24 : ConsoleColor24 {
    CCAppleNCyanDark24() : base(100, 210, 255) {}
}

Class CCAppleNCyanALight24 : ConsoleColor24 {
    CCAppleNCyanALight24() : base(0, 113, 164) {}
}

Class CCAppleNCyanADark24 : ConsoleColor24 {
    CCAppleNCyanADark24() : base(112, 215, 255) {}
}

Class CCAppleNBlueLight24 : ConsoleColor24 {
    CCAppleNBlueLight24() : base(0, 122, 255) {}
}

Class CCAppleNBlueDark24 : ConsoleColor24 {
    CCAppleNBlueDark24() : base(10, 132, 255) {}
}

Class CCAppleNBlueALight24 : ConsoleColor24 {
    CCAppleNBlueALight24() : base(0, 64, 221) {}
}

Class CCAppleNBlueADark24 : ConsoleColor24 {
    CCAppleNBlueADark24() : base(64, 156, 255) {}
}

Class CCAppleNIndigoLight24 : ConsoleColor24 {
    CCAppleNIndigoLight24() : base(88, 86, 214) {}
}

Class CCAppleNIndigoDark24 : ConsoleColor24 {
    CCAppleNIndigoDark24() : base(94, 92, 230) {}
}

Class CCAppleNIndigoALight24 : ConsoleColor24 {
    CCAppleNIndigoALight24() : base(54, 52, 163) {}
}

Class CCAppleNIndigoADark24 : ConsoleColor24 {
    CCAppleNIndigoADark24() : base(125, 122, 255) {}
}

Class CCAppleNPurpleLight24 : ConsoleColor24 {
    CCAppleNPurpleLight24() : base(175, 82, 222) {}
}

Class CCAppleNPurpleDark24 : ConsoleColor24 {
    CCAppleNPurpleDark24() : base(191, 90, 242) {}
}

Class CCAppleNPurpleALight24 : ConsoleColor24 {
    CCAppleNPurpleALight24() : base(137, 68, 171) {}
}

Class CCAppleNPurpleADark24 : ConsoleColor24 {
    CCAppleNPurpleADark24() : base(218, 143, 255) {}
}

Class CCAppleNPinkLight24 : ConsoleColor24 {
    CCAppleNPinkLight24() : base(255, 45, 85) {}
}

Class CCAppleNPinkDark24 : ConsoleColor24 {
    CCAppleNPinkDark24() : base(255, 55, 95) {}
}

Class CCAppleNPinkALight24 : ConsoleColor24 {
    CCAppleNPinkALight24() : base(211, 15, 69) {}
}

Class CCAppleNPinkADark24 : ConsoleColor24 {
    CCAppleNPinkADark24() : base(255, 100, 130) {}
}

Class CCAppleNBrownLight24 : ConsoleColor24 {
    CCAppleNBrownLight24() : base(162, 132, 94) {}
}

Class CCAppleNBrownDark24 : ConsoleColor24 {
    CCAppleNBrownDark24() : base(172, 142, 104) {}
}

Class CCAppleNBrownALight24 : ConsoleColor24 {
    CCAppleNBrownALight24() : base(127, 101, 69) {}
}

Class CCAppleNBrownADark24 : ConsoleColor24 {
    CCAppleNBrownADark24() : base(181, 148, 105) {}
}

Class CCAppleNGreyLight24 : ConsoleColor24 {
    CCAppleNGreyLight24() : base(142, 142, 147) {}
}

Class CCAppleNGreyDark24 : ConsoleColor24 {
    CCAppleNGreyDark24() : base(142, 142, 147) {}
}

Class CCAppleNGreyALight24 : ConsoleColor24 {
    CCAppleNGreyALight24() : base(108, 108, 112) {}
}

Class CCAppleNGreyADark24 : ConsoleColor24 {
    CCAppleNGreyADark24() : base(174, 174, 178) {}
}

Class CCAppleNGrey2Light24 : ConsoleColor24 {
    CCAppleNGrey2Light24() : base(174, 174, 178) {}
}

Class CCAppleNGrey2Dark24 : ConsoleColor24 {
    CCAppleNGrey2Dark24() : base(99, 99, 102) {}
}

Class CCAppleNGrey2ALight24 : ConsoleColor24 {
    CCAppleNGrey2ALight24() : base(142, 142, 147) {}
}

Class CCAppleNGrey2ADark24 : ConsoleColor24 {
    CCAppleNGrey2ADark24() : base(124, 124, 128) {}
}

Class CCAppleNGrey3Light24 : ConsoleColor24 {
    CCAppleNGrey3Light24() : base(199, 199, 204) {}
}

Class CCAppleNGrey3Dark24 : ConsoleColor24 {
    CCAppleNGrey3Dark24() : base(72, 72, 74) {}
}

Class CCAppleNGrey4ALight24 : ConsoleColor24 {
    CCAppleNGrey4ALight24() : base(188, 188, 192) {}
}

Class CCAppleNGrey4ADark24 : ConsoleColor24 {
    CCAppleNGrey4ADark24() : base(68, 68, 70) {}
}

Class CCAppleNGrey5Light24 : ConsoleColor24 {
    CCAppleNGrey5Light24() : base(229, 229, 234) {}
}

Class CCAppleNGrey5Dark24 : ConsoleColor24 {
    CCAppleNGrey5Dark24() : base(44, 44, 46) {}
}

Class CCAppleNGrey5ALight24 : ConsoleColor24 {
    CCAppleNGrey5ALight24() : base(216, 216, 220) {}
}

Class CCAppleNGrey5ADark24 : ConsoleColor24 {
    CCAppleNGrey5ADark24() : base(54, 54, 56) {}
}

Class CCAppleNGrey6Light24 : ConsoleColor24 {
    CCAppleNGrey6Light24() : base(242, 242, 247) {}
}

Class CCAppleNGrey6Dark24 : ConsoleColor24 {
    CCAppleNGrey6Dark24() : base(28, 28, 30) {}
}

Class CCAppleNGrey6ALight24 : ConsoleColor24 {
    CCAppleNGrey6ALight24() : base(235, 235, 240) {}
}

Class CCAppleNGrey6ADark24 : ConsoleColor24 {
    CCAppleNGrey6ADark24() : base(36, 36, 38) {}
}

Class CCAppleVRedLight24 : ConsoleColor24 {
    CCAppleVRedLight24() : base(255, 49, 38) {}
}

Class CCAppleVRedDark24 : ConsoleColor24 {
    CCAppleVRedDark24() : base(255, 79, 68) {}
}

Class CCAppleVRedALight24 : ConsoleColor24 {
    CCAppleVRedALight24() : base(194, 6, 24) {}
}

Class CCAppleVRedADark24 : ConsoleColor24 {
    CCAppleVRedADark24() : base(255, 65, 54) {}
}

Class CCAppleVOrangeLight24 : ConsoleColor24 {
    CCAppleVOrangeLight24() : base(245, 139, 0) {}
}

Class CCAppleVOrangeDark24 : ConsoleColor24 {
    CCAppleVOrangeDark24() : base(255, 169, 20) {}
}

Class CCAppleVOrangeALight24 : ConsoleColor24 {
    CCAppleVOrangeALight24() : base(173, 58, 0) {}
}

Class CCAppleVOrangeADark24 : ConsoleColor24 {
    CCAppleVOrangeADark24() : base(255, 179, 64) {}
}

Class CCAppleVYellowLight24 : ConsoleColor24 {
    CCAppleVYellowLight24() : base(245, 194, 0) {}
}

Class CCAppleVYellowDark24 : ConsoleColor24 {
    CCAppleVYellowDark24() : base(255, 224, 20) {}
}

Class CCAppleVYellowALight24 : ConsoleColor24 {
    CCAppleVYellowALight24() : base(146, 81, 0) {}
}

Class CCAppleVYellowADark24 : ConsoleColor24 {
    CCAppleVYellowADark24() : base(255, 212, 38) {}
}

Class CCAppleVGreenLight24 : ConsoleColor24 {
    CCAppleVGreenLight24() : base(30, 195, 55) {}
}

Class CCAppleVGreenDark24 : ConsoleColor24 {
    CCAppleVGreenDark24() : base(60, 225, 85) {}
}

Class CCAppleVGreenALight24 : ConsoleColor24 {
    CCAppleVGreenALight24() : base(0, 112, 24) {}
}

Class CCAppleVGreenADark24 : ConsoleColor24 {
    CCAppleVGreenADark24() : base(49, 222, 75) {}
}

Class CCAppleVMintLight24 : ConsoleColor24 {
    CCAppleVMintLight24() : base(0, 189, 180) {}
}

Class CCAppleVMintDark24 : ConsoleColor24 {
    CCAppleVMintDark24() : base(108, 224, 219) {}
}

Class CCAppleVMintALight24 : ConsoleColor24 {
    CCAppleVMintALight24() : base(11, 117, 112) {}
}

Class CCAppleVMintADark24 : ConsoleColor24 {
    CCAppleVMintADark24() : base(49, 222, 75) {}
}

Class CCAppleVTealLight24 : ConsoleColor24 {
    CCAppleVTealLight24() : base(46, 167, 189) {}
}

Class CCAppleVTealDark24 : ConsoleColor24 {
    CCAppleVTealDark24() : base(68, 212, 237) {}
}

Class CCAppleVTealALight24 : ConsoleColor24 {
    CCAppleVTealALight24() : base(0, 119, 140) {}
}

Class CCAppleVTealADark24 : ConsoleColor24 {
    CCAppleVTealADark24() : base(93, 230, 255) {}
}

Class CCAppleVCyanLight24 : ConsoleColor24 {
    CCAppleVCyanLight24() : base(65, 175, 220) {}
}

Class CCAppleVCyanDark24 : ConsoleColor24 {
    CCAppleVCyanDark24() : base(90, 205, 250) {}
}

Class CCAppleVCyanALight24 : ConsoleColor24 {
    CCAppleVCyanALight24() : base(0, 103, 150) {}
}

Class CCAppleVCyanADark24 : ConsoleColor24 {
    CCAppleVCyanADark24() : base(112, 215, 255) {}
}

Class CCAppleVBlueLight24 : ConsoleColor24 {
    CCAppleVBlueLight24() : base(0, 122, 245) {}
}

Class CCAppleVBlueDark24 : ConsoleColor24 {
    CCAppleVBlueDark24() : base(20, 142, 255) {}
}

Class CCAppleVBlueALight24 : ConsoleColor24 {
    CCAppleVBlueALight24() : base(0, 64, 221) {}
}

Class CCAppleVBlueADark24 : ConsoleColor24 {
    CCAppleVBlueADark24() : base(64, 156, 255) {}
}

Class CCAppleVIndigoLight24 : ConsoleColor24 {
    CCAppleVIndigoLight24() : base(84, 82, 204) {}
}

Class CCAppleVIndigoDark24 : ConsoleColor24 {
    CCAppleVIndigoDark24() : base(99, 97, 242) {}
}

Class CCAppleVIndigoALight24 : ConsoleColor24 {
    CCAppleVIndigoALight24() : base(54, 52, 163) {}
}

Class CCAppleVIndigoADark24 : ConsoleColor24 {
    CCAppleVIndigoADark24() : base(125, 122, 255) {}
}

Class CCAppleVPurpleLight24 : ConsoleColor24 {
    CCAppleVPurpleLight24() : base(159, 75, 201) {}
}

Class CCAppleVPurpleDark24 : ConsoleColor24 {
    CCAppleVPurpleDark24() : base(204, 101, 255) {}
}

Class CCAppleVPurpleALight24 : ConsoleColor24 {
    CCAppleVPurpleALight24() : base(173, 68, 171) {}
}

Class CCAppleVPurpleADark24 : ConsoleColor24 {
    CCAppleVPurpleADark24() : base(218, 143, 255) {}
}

Class CCAppleVPinkLight24 : ConsoleColor24 {
    CCAppleVPinkLight24() : base(245, 35, 75) {}
}

Class CCAppleVPinkDark24 : ConsoleColor24 {
    CCAppleVPinkDark24() : base(255, 65, 105) {}
}

Class CCAppleVPinkALight24 : ConsoleColor24 {
    CCAppleVPinkALight24() : base(193, 16, 50) {}
}

Class CCAppleVPinkADark24 : ConsoleColor24 {
    CCAppleVPinkADark24() : base(255, 58, 95) {}
}

Class CCAppleVBrownLight24 : ConsoleColor24 {
    CCAppleVBrownLight24() : base(152, 122, 84) {}
}

Class CCAppleVBrownDark24 : ConsoleColor24 {
    CCAppleVBrownDark24() : base(182, 152, 114) {}
}

Class CCAppleVBrownALight24 : ConsoleColor24 {
    CCAppleVBrownALight24() : base(119, 93, 59) {}
}

Class CCAppleVGreyLight24 : ConsoleColor24 {
    CCAppleVGreyLight24() : base(132, 132, 137) {}
}

Class CCAppleVGreyDark24 : ConsoleColor24 {
    CCAppleVGreyDark24() : base(162, 162, 167) {}
}

Class CCAppleVGreyALight24 : ConsoleColor24 {
    CCAppleVGreyALight24() : base(97, 97, 101) {}
}

Class CCAppleVGreyADark24 : ConsoleColor24 {
    CCAppleVGreyADark24() : base(152, 152, 157) {}
}

Class CCPixenSkyBlue24 : ConsoleColor24 {
    CCPixenSkyBlue24() : base(0, 253, 255) {}
}

Class CCPixenGrassDarkGreen24 : ConsoleColor24 {
    CCPixenGrassDarkGreen24() : base(0, 165, 0) {}
}

Class CCPixenRoadDarkBrown24 : ConsoleColor24 {
    CCPixenRoadDarkBrown24() : base(122, 67, 0) {}
}

Class CCPixenGrassLightGreen24 : ConsoleColor24 {
    CCPixenGrassLightGreen24() : base(0, 209, 66) {}
}

Class CCTextDefault24 : CCAppleGrey5Light24 {}

Class CCListItemCurrentHighlight24 : CCAppleNPinkLight24 {}

Class CCWindowBorderDefault24 : CCTextDefault24 {}

#endregion





#region AT Structures

###############################################################################
#
# ANSI-TERMINATED STRING SUPPORT
#
# THIS IS WHERE ALL THE MAGIC SAUCE HAPPENS AT. BECAUSE, FUCKERS.
#
###############################################################################

###############################################################################
#
# AT CONTROL SEQUENCES
#
# CONTAINS COMMON ANSI-TERMINATED STRINGS THAT ARE USED THROUGHT THE PROGRAM.
#
###############################################################################
Class ATControlSequences {
    Static [String]$ForegroundColor24Prefix = "`e[38;2;"
    Static [String]$BackgroundColor24Prefix = "`e[48;2;"
    Static [String]$DecorationBlink         = "`e[5m"
    Static [String]$DecorationItalic        = "`e[3m"
    Static [String]$DecorationUnderline     = "`e[4m"
    Static [String]$DecorationStrikethru    = "`e[9m"
    Static [String]$ModifierReset           = "`e[0m"
    Static [String]$CursorHide              = "`e[?25l"
    Static [String]$CursorShow              = "`e[?25h"

    Static [String]GenerateFG24String([ConsoleColor24]$Color) {
        Return "$([ATControlSequences]::ForegroundColor24Prefix)$($Color.Red.ToString());$($Color.Green.ToString());$($Color.Blue.ToString())m"
    }

    Static [String]GenerateBG24String([ConsoleColor24]$Color) {
        Return "$([ATControlSequences]::BackgroundColor24Prefix)$($Color.Red.ToString());$($Color.Green.ToString());$($Color.Blue.ToString())m"
    }

    Static [String]GenerateCoordinateString([Int]$Row, [Int]$Column) {
        Return "`e[$($Row.ToString());$($Column.ToString())H"
    }
}

###############################################################################
#
# AT FOREGROUND COLOR 24
#
# A SYMBOLIC ENCAPSULATION OF CONSOLE COLOR 24 TO BE USED SPECIFICALLY FOR
# FOREGROUND COLOR APPLICATIONS.
#
###############################################################################
Class ATForegroundColor24 {
    [ValidateNotNull()][ConsoleColor24]$Color

    ATForegroundColor24(
        [ConsoleColor24]$Color
    ) {
        $this.Color = $Color
    }

    [String]ToAnsiControlSequenceString() {
        Return [ATControlSequences]::GenerateFG24String($this.Color)
    }
}

###############################################################################
#
# AT FOREGROUND COLOR 24 NONE
#
# AN ABSTRACTION OF AT FOREGROUND COLOR 24 INTENDED TO BE USED TO IMPLY NO
# FOREGROUND COLOR IN THE PRECEEDING STRING LITERAL.
#
###############################################################################
Class ATForegroundColor24None : ATForegroundColor24 {
    ATForegroundColor24None() : base([CCBlack24]::new()) {}

    [String]ToAnsiControlSequenceString() {
        Return ''
    }
}

###############################################################################
#
# AT BACKGROUND COLOR 24
#
# A SYMBOLIC ENCAPSULATION OF CONSOLE COLOR 24 TO BE USED SPECIFICALLY FOR
# BACKGROUND COLOR APPLICATIONS.
#
###############################################################################
Class ATBackgroundColor24 {
    [ValidateNotNull()][ConsoleColor24]$Color

    ATBackgroundColor24(
        [ConsoleColor24]$Color
    ) {
        $this.Color = $Color
    }

    [String]ToAnsiControlSequenceString() {
        Return [ATControlSequences]::GenerateBG24String($this.Color)
    }
}

###############################################################################
#
# AT BACKGROUND COLOR 24 NONE
#
# AN ABSTRACTION OF AT BACKGROUND COLOR 24 INTENDED TO BE USED TO IMPLY NO
# BACKGROUND COLOR IN THE PRECEEDING STRING LITERAL.
#
###############################################################################
Class ATBackgroundColor24None : ATBackgroundColor24 {
    ATBackgroundColor24None() : base([CCBlack24]::new()) {}

    [String]ToAnsiControlSequenceString() {
        Return ''
    }
}

###############################################################################
#
# AT DECORATION
#
# A SYMBOLIC ENCAPSULATION OF ONE OR MANY ANSI DECORATIONS TO APPLY TO A
# PRECEEDING STRING LITERAL.
#
###############################################################################
Class ATDecoration {
    [ValidateNotNull()][Boolean]$Blink
    [ValidateNotNull()][Boolean]$Italic
    [ValidateNotNull()][Boolean]$Underline
    [ValidateNotNull()][Boolean]$Strikethru

    ATDecoration() {
        $this.Blink      = $false
        $this.Italic     = $false
        $this.Underline  = $false
        $this.Strikethru = $false
    }

    [String]ToAnsiControlSequenceString() {
        [String]$a = ''

        If($this.Blink -EQ $true) {
            $a += [ATControlSequences]::DecorationBlink
        }
        If($this.Italic -EQ $true) {
            $a += [ATControlSequences]::DecorationItalic
        }
        If($this.Underline -EQ $true) {
            $a += [ATControlSequences]::DecorationUnderline
        }
        If($this.Strikethru -EQ $true) {
            $a += [ATControlSequences]::DecorationStrikethru
        }

        Return $a
    }
}

###############################################################################
#
# AT COORDINATES NONE
#
# AN ABSTRACTION OF AT DECORATION INTENDED TO IMPLY NO ANSI DECORATORS BE
# APPLIED TO THE PRECEEDING STRING LITERAL.
#
###############################################################################
Class ATDecorationNone : ATDecoration {
    ATDecorationNone() : base() {}

    [String]ToAnsiControlSequenceString() {
        Return ''
    }
}

###############################################################################
#
# AT COORDINATES
#
# A SYMBOLIC ENCAPSULATION OF A COORDINATE PAIR IN ROW,COLUMN (Y,X) ORDER.
#
###############################################################################
Class ATCoordinates {
    [ValidateNotNull()][Int]$Row
    [ValidateNotNull()][Int]$Column

    ATCoordinates() {
        $this.Row    = 1
        $this.Column = 1
    }

    ATCoordinates(
        [Int]$Row,
        [Int]$Column
    ) {
        $this.Row    = $Row
        $this.Column = $Column
    }

    ATCoordinates(
        [Coordinates]$AutomationCoordinates
    ) {
        $this.Row    = $AutomationCoordinates.X
        $this.Column = $AutomationCoordinates.Y
    }

    ATCoordinates(
        [ATCoordinates]$CopyFrom
    ) {
        $this.Row    = $CopyFrom.Row
        $this.Column = $CopyFrom.Column
    }

    [String]ToAnsiControlSequenceString() {
        Return [ATControlSequences]::GenerateCoordinateString($this.Row, $this.Column)
    }

    [Coordinates]ToAutomationCoordinates() {
        Return [Coordinates]::new($this.Row, $this.Column)
    }
}

###############################################################################
#
# AT COORDINATES NONE
#
# AN ABSTRACTION OF AT COORDINATES INTENDED TO IMPLY NO ANSI COORDINATE
# MODIFIER BE APPLIED TO THE PRECEEDING STRING LITERAL.
#
###############################################################################
Class ATCoordinatesNone : ATCoordinates {
    ATCoordinatesNone() : base(0, 0) {}

    [String]ToAnsiControlSequenceString() {
        Return ''
    }
}

###############################################################################
#
# AT COORDINATES DEFAULT
#
# AN ABSTRACTION OF AT COORDINATES INTENDED TO IMPLY AN ANSI COORDINATE
# MODIFIER BE APPLIED TO THE PRECEEDING STRING LITERAL THAT MOVES THE CURSOR TO
# A "DEFAULT" LOCATION.
#
###############################################################################
Class ATCoordinatesDefault : ATCoordinates {
    ATCoordinatesDefault() : base(1, 18) {}
}

###############################################################################
#
# AT STRING PREFIX
#
# AN AGGREGATE OF SEVERAL ANSI MODIFIERS THAT COLLECTIVELY MODIFY A PRECEEDING
# STRING LITERAL.
#
###############################################################################
Class ATStringPrefix {
    [ValidateNotNull()][ATForegroundColor24]$ForegroundColor
    [ValidateNotNull()][ATBackgroundColor24]$BackgroundColor
    [ValidateNotNull()][ATDecoration]$Decorations
    [ValidateNotNull()][ATCoordinates]$Coordinates

    ATStringPrefix() {
        $this.ForegroundColor = [ATForegroundColor24None]::new()
        $this.BackgroundColor = [ATBackgroundColor24None]::new()
        $this.Decorations     = [ATDecorationNone]::new()
        $this.Coordinates     = [ATCoordinatesNone]::new()
    }

    ATStringPrefix(
        [ATForegroundColor24]$ForegroundColor,
        [ATBackgroundColor24]$BackgroundColor,
        [ATDecoration]$Decorations,
        [ATCoordinates]$Coordinates
    ) {
        $this.ForegroundColor = $ForegroundColor
        $this.BackgroundColor = $BackgroundColor
        $this.Decorations     = $Decorations
        $this.Coordinates     = $Coordinates
    }

    [String]ToAnsiControlSequenceString() {
        Return "$($this.Coordinates.ToAnsiControlSequenceString())$($this.Decorations.ToAnsiControlSequenceString())$($this.ForegroundColor.ToAnsiControlSequenceString())$($this.BackgroundColor.ToAnsiControlSequenceString())"
    }
}

###############################################################################
#
# AT STRING PREFIX NONE
#
# AN ABSTRACTION OF AT STRING PREFIX INTENDED TO IMPLY NO ANSI MODIFIERS BE
# APPLIED TO A PRECEEDING STRING LITERAL.
#
###############################################################################
Class ATStringPrefixNone : ATStringPrefix {
    ATStringPrefixNone() : base() {}

    [String]ToAnsiControlSequenceString() {
        Return ''
    }
}

###############################################################################
#
# AT STRING
#
# AN AGGREGATE THAT COMBINES AN AT STRING PREFIX, A TARGET STRING LITERAL TO
# APPLY THE ANSI MODIFIERS TO, AND AN OPTIONAL ANSI RESET MODIFIER TO APPEND
# TO THE RESULTANT STRING ENSURING THE MODIFIERS FROM THE PREFIX AREN'T CARRIED
# BEYOND THE LENGTH OF THE LITERAL.
#
###############################################################################
Class ATString {
    [ValidateNotNull()][ATStringPrefix]$Prefix
    [ValidateNotNull()][String]$UserData
    [ValidateNotNull()][Boolean]$UseATReset

    ATString() {
        $this.Prefix     = [ATStringPrefixNone]::new()
        $this.UserData   = ''
        $this.UseATReset = $false
    }

    ATString(
        [ATStringPrefix]$Prefix,
        [String]$UserData,
        [Boolean]$UseATReset
    ) {
        $this.Prefix     = $Prefix
        $this.UserData   = $UserData
        $this.UseATReset = $UseATReset
    }

    [String]ToAnsiControlSequenceString() {
        [String]$a = "$($this.Prefix.ToAnsiControlSequenceString())$($this.UserData)"

        If($this.UseATReset -EQ $true) {
            $a += [ATControlSequences]::ModifierReset
        }

        Return $a
    }
}

###############################################################################
#
# AT STRING NONE
#
# AN ABSTRACTION OF AT STRING INTENDED TO IMPLY NO AT STRING BE USED. THIS
# CLASS IS GENERALLY USED AS A SANE DEFAULT INITIALIZATION POINT FOR WHAT WOULD
# EVENTUALLY BE PROPER AT STRING INSTANCES.
#
###############################################################################
Class ATStringNone : ATString {
    ATStringNone() : base() {}

    [String]ToAnsiControlSequenceString() {
        Return ''
    }
}

###############################################################################
#
# AT STRING COMPOSITE
#
# AN AGGREGATE OF AT STRING INSTANCES IN A COLLECTION. THIS CLASS PERMITS FOR
# PRETTY COMPLEX DISPLAYS BY COMBINING MULTIPLE INDEPENDENT AT STRING INSTANCES
# INTO ONE.
#
###############################################################################
Class ATStringComposite {
    [List[ATString]]$CompositeActual = [List[ATString]]::new()

    ATStringComposite() {
        If($null -EQ $this.CompositeActual) {
            $this.CompositeActual = [List[ATString]]::new()
        }

        $this.CompositeActual.Add([ATStringNone]::new()) | Out-Null
    }

    ATStringComposite(
        [ATString[]]$Components
    ) {
        If($null -EQ $this.CompositeActual) {
            $this.CompositeActual = [List[ATString]]::new()
        }

        Foreach($a in $Components) {
            $this.CompositeActual.Add($a) | Out-Null
        }
    }

    ATStringComposite(
        [List[ATString]]$Components
    ) {
        $this.CompositeActual = $Components
    }

    [String]ToAnsiControlSequenceString() {
        [String]$a = ''

        Foreach($b in $this.CompositeActual) {
            $a += $b.ToAnsiControlSequenceString()
        }

        Return $a
    }
}

###############################################################################
#
# AT SCENE IMAGE STRING
#
# AN ABSTRACTION OF AT STRING INTENDED TO BE USED FOR GENERATING "IMAGES". THIS
# CLASS SHORTCUTS MOST PROPERTIES OF AT STRING AND AT STRING PREFIX EXCEPT FOR
# BACKGROUND COLOR AND COORDINATES.
#
###############################################################################
Class ATSceneImageString : ATString {
    Static [String]$SceneImageBlank = ' '

    ATSceneImageString(
        [ATBackgroundColor24]$BackgroundColor,
        [ATCoordinates]$Coordinates
    ) : base() {
        $this.Prefix = [ATStringPrefix]::new(
            [ATForegroundColor24None]::new(),
            $BackgroundColor,
            [ATDecorationNone]::new(),
            $Coordinates
        )
        $this.UserData   = [ATSceneImageString]::SceneImageBlank
        $this.UseATReset = $true
    }
}

#endregion





#region Combat Engine Primitives

###############################################################################
#
# BATTLE ENGINE SUPPORT
#
# CLASSES THAT DEFINE INTERACTIONS THAT FACILITATE THE COMBAT SYSTEM. GENERAL
# CLASSES ARE INCLUDED IN HERE AS WELL AS BEING "IN-SCOPE".
#
###############################################################################

###############################################################################
#
# BATTLE ENTITY PROPERTY
#
# DESCRIBES A PROPERTY OF A BATTLE ENTITY. THIS IS A NUMERIC VALUE THAT HAS A
# MINIMUM AND MAXIMUM, SUPPORTS TEMPORARY AUGMENTATION, AND IS CAPABLE OF
# MAINTAINING ITS OWN STATE.
#
###############################################################################
Class BattleEntityProperty {
    Static [Single]$StatNumThresholdCaution          = 0.6D
    Static [Single]$StatNumThresholdDanger           = 0.3D
    Static [ConsoleColor24]$StatNumDrawColorSafe     = [CCAppleGreenLight24]::new()
    Static [ConsoleColor24]$StatNumDrawColorCaution  = [CCAppleYellowLight24]::new()
    Static [ConsoleColor24]$StatNumDrawColorDanger   = [CCAppleRedLight24]::new()
    Static [ConsoleColor24]$StatAugDrawColorPositive = [CCAppleCyanLight24]::new()
    Static [ConsoleColor24]$StatAugDrawColorNegative = [CCApplePurpleDark24]::new()

    [Int]$Base
    [Int]$BasePre
    [Int]$BaseAugmentValue
    [Int]$Max
    [Int]$MaxPre
    [Int]$MaxAugmentValue
    [Int]$AugmentTurnDuration
    [Boolean]$BaseAugmentActive
    [Boolean]$MaxAugmentActive
    [StatNumberState]$State
    [ScriptBlock]$ValidateFunction

    BattleEntityProperty() {
        $this.Base                = 0
        $this.BasePre             = 0
        $this.BaseAugmentValue    = 0
        $this.Max                 = 0
        $this.MaxPre              = 0
        $this.MaxAugmentValue     = 0
        $this.AugmentTurnDuration = 0
        $this.BaseAugmentActive   = $false
        $this.MaxAugmentActive    = $false
        $this.State               = [StatNumberState]::Normal
        $this.ValidateFunction    = $null
    }

    # THIS CTOR CAN LIKELY GO AWAY
    # BattleEntityProperty(
    #     [Int]$Base,
    #     [Int]$BasePre,
    #     [Int]$BaseAugmentValue,
    #     [Int]$Max,
    #     [Int]$MaxPre,
    #     [Int]$MaxAugmentValue,
    #     [Int]$AugmentTurnDuration,
    #     [Boolean]$BaseAugmentActive,
    #     [Boolean]$MaxAugmentActive,
    #     [StatNumberState]$State,
    #     [ScriptBlock]$ValidateFunction
    # ) {
    #     $this.Base                = $Base
    #     $this.BasePre             = $BasePre
    #     $this.BaseAugmentValue    = $BaseAugmentValue
    #     $this.Max                 = $Max
    #     $this.MaxPre              = $MaxPre
    #     $this.MaxAugmentValue     = $MaxAugmentValue
    #     $this.AugmentTurnDuration = $AugmentTurnDuration
    #     $this.BaseAugmentActive   = $BaseAugmentActive
    #     $this.MaxAugmentActive    = $MaxAugmentActive
    #     $this.State               = $State
    #     $this.ValidateFunction    = $ValidateFunction
    # }

    [Void]Update() {
        If($this.AugmentTurnDuration -GT 0) {
            $this.AugmentTurnDuration--
            If($this.BasePre -EQ 0) {
                $this.BasePre = $this.Base
            }
            If($this.MaxPre -EQ 0) {
                $this.MaxPre = $this.Max
            }
            If($this.MaxAugmentActive -EQ $false) {
                [Int]$t                = $this.Max + $this.MaxAugmentValue
                $t                     = [Math]::Clamp($t, 0, [Int]::MaxValue)
                $this.Max              = $t
                $this.MaxAugmentActive = $true
            }
            If($this.BaseAugmentActive -EQ $false) {
                [Int]$t                 = $this.Base + $this.BaseAugmentValue
                $t                      = [Math]::Clamp($t, 0, [Int]::MaxValue)
                $this.Base              = $t
                $this.BaseAugmentActive = $true
            }
        } Else {
            If($this.MaxAugmentActive -EQ $true) {
                $this.Max              = $this.MaxPre
                $this.MaxPre           = 0
                $this.MaxAugmentActive = $false
            }
            If($this.BaseAugmentActive -EQ $true) {
                $this.Base              = $this.BasePre
                $this.BasePre           = 0
                $this.BaseAugmentActive = $false
            }
        }

        Invoke-Command $this.ValidateFunction -ArgumentList $this
    }

    <#
    .OUTPUTS
    Integer
        -1 - The value of IncAmt is less than or equal to zero.
        -2 - The value of Base is equal to Max (no need to increment Base at this point)
        0  - Base was successfully incremented by IncAmt
    #>
    [Int]IncrementBase(
        [Int]$IncAmt
    ) {
        If($IncAmt -LE 0) {
            Return -1
        }
        If($this.Base -EQ $this.Max) {
            Return -2
        }
        [Int]$t    = $this.Base + $IncAmt
        $t         = [Math]::Clamp($t, 0, $this.Max) # This should work regardless if BaseAugmentActive = true
        $this.Base = $t

        Return 0
    }

    <#
    .OUTPUTS
    Integer
        -1 - The value of DecAmt is greater than or equal to zero.
        -2 - The value of Base is less than or equal to zero.
        0  - Base was successfully decremented by DecAmt.
    #>
    [Int]DecrementBase(
        [Int]$DecAmt
    ) {
        If($DecAmt -GE 0) {
            Return -1
        }
        If($this.Base -LE 0) {
            Return -2
        }
        [Int]$t    = $this.Base + $DecAmt
        $t         = [Math]::Clamp($t, 0, $this.Max)
        $this.Base = $t
        
        Return 0
    }

    <# 
    .OUTPUTS
    Integer
        -1 - The value of IncAmt is less than or equal to zero.
        0  - Max was successfully incremented by IncAmt.
    #>
    [Int]IncrementMax(
        [Int]$IncAmt
    ) {
        If($IncAmt -LE 0) {
            Return -1
        }
        $this.Max += $IncAmt

        Return 0
    }

    <#
    .OUTPUTS
    Integer
        -1 - The value of DecAmt is greater than or equal to zero.
        0  - Max was successfully decremented by DecAmt.
    #>
    [Int]DecrementMax(
        [Int]$DecAmt
    ) {
        If($DecAmt -GE 0) {
            Return -1
        }
        [Int]$t   = $this.Max - $DecAmt
        $t        = [Math]::Clamp($t, 0, [Int]::MaxValue)
        $this.Max = $t
        If($this.Max -LT $this.Base) {
            $this.Base = $this.Max
        }

        Return 0
    }
}

###############################################################################
#
# BATTLE ACTION
#
# DESCRIBES AN ACTION THAT AN ENTITY CAN TAKE IN BATTLE. ACTIONS GENERALLY ARE
# CAPABLE OF DETERMINING THEIR OWN DAMAGE RESULT AND CAN RUN ROUTINES BEFORE AND
# AFTER SAID CALCULATIONS.
#
###############################################################################
Class BattleAction {
    [String]$Name
    [ScriptBlock]$Effect
    [ScriptBlock]$PreCalc
    [ScriptBlock]$PostCalc
    [BattleActionType]$Type
    [Int]$MpCost
    [Int]$EffectValue
    [Single]$Chance
    [String]$Description

    BattleAction() {
        $this.Name        = ''
        $this.Type        = [BattleActionType]::None
        $this.Effect      = $Script:BaCalc
        $this.PreCalc     = $null
        $this.PostCalc    = $null
        $this.EffectValue = 0
        $this.Chance      = 0.0
        $this.Description = ''
    }

    # IT'S UNLIKELY THAT ANY OF THESE CTORS ARE NEEDED
    # BattleAction(
    #     [String]$Name,
    #     [BattleActionType]$Type,
    #     [ScriptBlock]$Effect,
    #     [Int]$Uses,
    #     [Int]$EffectValue,
    #     [Single]$Chance
    # ) {
    #     $this.Name        = $Name
    #     $this.Type        = $Type
    #     $this.Effect      = $Effect
    #     $this.PreCalc     = {}
    #     $this.PostCalc    = {}
    #     $this.EffectValue = $EffectValue
    #     $this.Chance      = $Chance
    #     $this.Description = ''
    # }

    # BattleAction(
    #     [String]$Name,
    #     [String]$Description,
    #     [BattleActionType]$Type,
    #     [ScriptBlock]$Effect,
    #     [Int]$Uses,
    #     [Int]$UsesMax,
    #     [Int]$EffectValue,
    #     [Single]$Chance
    # ) {
    #     $this.Name        = $Name
    #     $this.Type        = $Type
    #     $this.Effect      = $Effect
    #     $this.PreCalc     = {}
    #     $this.PostCalc    = {}
    #     $this.EffectValue = $EffectValue
    #     $this.Chance      = $Chance
    #     $this.Description = $Description
    # }

    # BattleAction(
    #     [String]$Name,
    #     [String]$Description,
    #     [BattleActionType]$Type,
    #     [ScriptBlock]$Effect,
    #     [Int]$MpCost,
    #     [Int]$EffectValue,
    #     [Single]$Chance
    # ) {
    #     $this.Name        = $Name
    #     $this.Type        = $Type
    #     $this.Effect      = $Effect
    #     $this.PreCalc     = {}
    #     $this.PostCalc    = {}
    #     $this.MpCost      = $MpCost
    #     $this.EffectValue = $EffectValue
    #     $this.Chance      = $Chance
    #     $this.Description = $Description
    # }

    # THIS CTOR IS NEEDED BECAUSE POWERSHELL ASSIGNMENT IS BY REFERENCE
    # THANKS C++
    BattleAction(
        [BattleAction]$Copy
    ) {
        $this.Name        = $Copy.Name
        $this.Type        = $Copy.Type
        $this.Effect      = $Copy.Effect
        $this.PreCalc     = $Copy.PreCalc
        $this.PostCalc    = $Copy.PostCalc
        $this.MpCost      = $Copy.MpCost
        $this.EffectValue = $Copy.EffectValue
        $this.Chance      = $Copy.Chance
        $this.Description = $Copy.Description
    }
}





###############################################################################
#
# BATTLE ACTION RESULT
#
###############################################################################
Class BattleActionResult {
    [Int]$ActionEffectSum
    [BattleEntity]$Originator
    [BattleEntity]$Target
    [BattleActionResultType]$Type

    BattleActionResult() {
        $this.ActionEffectSum = 0
        $this.Originator      = $null
        $this.Target          = $null
        $this.Type            = [BattleActionResultType]::Success
    }
}






###############################################################################
#
# SPECIALIZED BATTLE ACTION CLASSES
#
# THESE SPECIALIZATIONS DEFINE ACTUAL ACTIONS THE PLAYER ENTITY OR ANY ENEMY
# ENTITY CAN USE. EACH CLASS, UPON READING THE PROPERTY VALUES, IS
# SELF-DOCUMENTING AND WILL CONSEQUENTLY NOT BE DOCUMENTED INDEPENDENTLY.
#
# IT'S ALSO WORTH NOTING TOO THAT THE VALUES ASSIGNED TO SOME OF THESE
# PROPERTIES HAVEN'T YET BEEN TESTED AND ARE SUBJECT TO CHANGE UPON FURTHER
# REFINEMENT. THIS MAY PRESENT A GOOD OPPORTUNITY FOR A TEST SUITE.
#
###############################################################################
Class BAPunch : BattleAction {
    BAPunch() : base() {
        $this.Name        = 'Punch'
        $this.Description = 'A punch. Just like dad taught you.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 50
        $this.Chance      = 1.0
    }
}

Class BAKick : BattleAction {
    BAKick() : base() {
        $this.Name        = 'Kick'
        $this.Description = 'A kick. Don''t stub your toe.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 50
        $this.Chance      = 1.0
    }
}

Class BAKarateChop : BattleAction {
    BAKarateChop() : base() {
        $this.Name        = 'Karate Chop'
        $this.Description = 'Test your might!'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 60
        $this.Chance      = 0.8
    }
}

Class BAKarateKick : BattleAction {
    BAKarateKick() : base() {
        $this.Name        = 'Karate Kick'
        $this.Description = 'I hope your shins are fit.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BAPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 65
        $this.Chance      = 0.75
    }
}

Class BABash : BattleAction {
    BABash() : base() {
        $this.Name        = 'Bash'
        $this.Description = 'HULK SMASH!'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 75
        $this.Chance      = 0.7
    }
}

Class BABite : BattleAction {
    BABite() : base() {
        $this.Name        = 'Bite'
        $this.Description = 'When fists fail, teeth do just fine.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 40
        $this.Chance      = 0.9
    }
}

Class BAScratch : BattleAction {
    BAScratch() : base() {
        $this.Name        = 'Scratch'
        $this.Description = 'Nails are sometimes useful.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 45
        $this.Chance      = 1.0
    }
}

Class BADoubleScratch : BattleAction {
    BADoubleScratch() : base() {
        $this.Name        = 'Double Scratch'
        $this.Description = 'The manicure on these is lethal.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 85
        $this.Chance      = 0.75
    }
}

Class BAHeadbutt : BattleAction {
    BAHeadbutt() : base() {
        $this.Name        = 'Headbutt'
        $this.Description = 'Put that noggin'' to work!'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 160
        $this.Chance      = 0.4
    }
}

Class BADropKick : BattleAction {
    BADropKick() : base() {
        $this.Name        = 'Dropkick'
        $this.Description = 'Don''t use this on Murphy.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 120
        $this.Chance      = 0.3
    }
}

Class BAThrow : BattleAction {
    BAThrow() : base() {
        $this.Name        = 'Throw'
        $this.Description = 'One man''s trash is a useful weapon.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 0
        $this.Chance      = 0.9
    }
}

Class BAPeck : BattleAction {
    BAPeck() : base() {
        $this.Name        = 'Peck'
        $this.Description = 'One from Grandma usually means cookies later.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 20
        $this.Chance      = 1.0
    }
}

Class BATalonStab : BattleAction {
    BATalonStab() : base() {
        $this.Name        = 'Talon Stab'
        $this.Description = 'You don''t want a hug from these.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 70
        $this.Chance      = 1.0
    }
}

Class BASwordSlash : BattleAction {
    BASwordSlash() : base() {
        $this.Name        = 'Sword Slash'
        $this.Description = 'A basic sword attack.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 60
        $this.Chance      = 1.0
    }
}

Class BASwordStab : BattleAction {
    BASwordStab() : base() {
        $this.Name        = 'Sword Stab'
        $this.Description = 'This was practiced with toothpicks.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 80
        $this.Chance      = 0.7
    }
}

Class BAAxeSlash : BattleAction {
    BAAxeSlash() : base() {
        $this.Name        = 'Axe Slash'
        $this.Description = 'Chopping trees pays off.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 70
        $this.Chance      = 1.0
    }
}

Class BAAxeCleave : BattleAction {
    BAAxeCleave() : base() {
        $this.Name        = 'Axe Cleave'
        $this.Description = 'Before his fury, the trees stood no chance.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 90
        $this.Chance      = 0.8
    }
}

Class BAAxeThrow : BattleAction {
    BAAxeThrow() : base() {
        $this.Name        = 'Axe Throw'
        $this.Description = 'Don''t let one hit you on the way out.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 180
        $this.Chance      = 0.3
    }
}

Class BAKnifeStab : BattleAction {
    BAKnifeStab() : base() {
        $this.Name        = 'Knife Stab'
        $this.Description = 'Just a little prick, right?'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 40
        $this.Chance      = 0.9
    }
}

Class BAKnifeThrow : BattleAction {
    BAKnifeThrow() : base() {
        $this.Name        = 'Knife Throw'
        $this.Description = 'Like throwing darts, but cooler.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 80
        $this.Chance      = 0.3
    }
}

Class BAClubSwing : BattleAction {
    BAClubSwing() : base() {
        $this.Name        = 'Club Swing'
        $this.Description = 'Me Ooga. Me swing-um big-um stick.'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 70
        $this.Chance      = 0.7
    }
}

Class BAHomerunHit : BattleAction {
    BAHomerunHit() : base() {
        $this.Name        = 'Homerun Hit'
        $this.Description = 'Swing, batter... SWING!'
        $this.Type        = [BattleActionType]::Physical
        # $this.Effect      = $Script:BaPhysicalCalc
        $this.MpCost      = 0
        $this.EffectValue = 200
        $this.Chance      = 0.1
    }
}

Class BAFlamePunch : BattleAction {
    BAFlamePunch() : base() {
        $this.Name        = 'Flame Punch'
        $this.Description = 'Flaming fists of fury.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 5
        $this.EffectValue = 75
        $this.Chance      = 1.0
    }
}

Class BAFlameKick : BattleAction {
    BAFlameKick() : base() {
        $this.Name        = 'Flame Kick'
        $this.Description = 'I got channed heat on my heels.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 5
        $this.EffectValue = 85
        $this.Chance      = 0.9
    }
}

Class BAFireball : BattleAction {
    BAFireball() : base() {
        $this.Name        = 'Fireball'
        $this.Description = 'That''s a spicy meatball!'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 7
        $this.EffectValue = 80
        $this.Chance      = 0.75
    }
}

Class BAMortarToss : BattleAction {
    BAMortarToss() : base() {
        $this.Name        = 'Mortar Toss'
        $this.Description = 'An esploozshun of firez.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 9
        $this.EffectValue = 100
        $this.Chance      = 0.7
    }
}

Class BAIKill : BattleAction {
    BAIKill() : base() {
        $this.Name        = 'IKill'
        $this.Description = 'Insta death'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 0
        $this.EffectValue = 50000
        $this.Chance      = 1.0
    }
}

Class BABlazeBurst : BattleAction {
    BABlazeBurst() : base() {
        $this.Name        = 'Blaze Burst'
        $this.Description = 'Like an arc flash, only worse.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 10
        $this.EffectValue = 80
        $this.Chance      = 0.8
    }
}

Class BAFlamethrower : BattleAction {
    BAFlamethrower() : base() {
        $this.Name        = 'Flamethrower'
        $this.Description = 'Our inspiration was Elon.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 10
        $this.EffectValue = 90
        $this.Chance      = 0.7
    }
}

Class BAEmberSlash : BattleAction {
    BAEmberSlash() : base() {
        $this.Name        = 'Ember Slash'
        $this.Description = 'At least the wound is cauterized.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 5
        $this.EffectValue = 80
        $this.Chance      = 0.9
    }
}

Class BAPyroblast : BattleAction {
    BAPyroblast() : base() {
        $this.Name        = 'Pyroblast'
        $this.Description = 'Fireworks never looked so good.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 15
        $this.EffectValue = 110
        $this.Chance      = 0.6
    }
}

Class BAAshenNova : BattleAction {
    BAAshenNova() : base() {
        $this.Name        = 'Ashen Nova'
        $this.Description = 'Reminds me of Pompeii. Only worse.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 50
        $this.EffectValue = 250
        $this.Chance      = 0.5
    }
}

Class BAIncenerate : BattleAction {
    BAIncenerate() : base() {
        $this.Name        = 'Incenerate'
        $this.Description = 'Kill it with fire, they said.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 20
        $this.EffectValue = 120
        $this.Chance      = 0.7
    }
}

Class BACinderStorm : BattleAction {
    BACinderStorm() : base() {
        $this.Name        = 'Cinder Storm'
        $this.Description = 'Hot coal hail. Yum.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 5
        $this.EffectValue = 60
        $this.Chance      = 0.9
    }
}

Class BALavaSurge : BattleAction {
    BALavaSurge() : base() {
        $this.Name        = 'Lava Surge'
        $this.Description = 'It''s like a surge of love, only the molten kind.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 15
        $this.EffectValue = 100
        $this.Chance      = 1.0
    }
}

Class BAFireCataclysm : BattleAction {
    BAFireCataclysm() : base() {
        $this.Name        = "$($Script:BATAdornmentCharTable[[BattleActionType]::ElementalFire]) Cataclysm"
        $this.Description = 'Firey death rains upon you.'
        $this.Type        = [BattleActionType]::ElementalFire
        # $this.Effect      = $Script:BaElementalFireCalc
        $this.MpCost      = 50
        $this.EffectValue = 250
        $this.Chance      = 0.5
    }
}

Class BAIcePunch : BattleAction {
    BAIcePunch() : base() {
        $this.Name        = 'Ice Punch'
        $this.Description = 'Frigid AND stiff.'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 5
        $this.EffectValue = 80
        $this.Chance      = 0.9
    }
}

Class BAFrostKick : BattleAction {
    BAFrostKick() : base() {
        $this.Name        = 'Frost Kick'
        $this.Description = 'Ice on the knee. It''s a thing.'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 5
        $this.EffectValue = 80
        $this.Chance      = 0.9
    }
}

Class BAIcicleStrike : BattleAction {
    BAIcicleStrike() : base() {
        $this.Name        = 'Icicle Strike'
        $this.Description = 'When they''re this big, who needs a sword?'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 5
        $this.EffectValue = 80
        $this.Chance      = 0.9
    }
}

Class BAGlacialSpike : BattleAction {
    BAGlacialSpike() : base() {
        $this.Name        = 'Glacial Spike'
        $this.Description = 'Global warming helped me make this one.'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 5
        $this.EffectValue = 80
        $this.Chance      = 0.9
    }
}

Class BAChillSlash : BattleAction {
    BAChillSlash() : base() {
        $this.Name        = 'Chill Slash'
        $this.Description = 'Let''s all cool down, yeah?'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 5
        $this.EffectValue = 80
        $this.Chance      = 0.9
    }
}

Class BAIceBolt : BattleAction {
    BAIceBolt() : base() {
        $this.Name        = 'Ice Bolt'
        $this.Description = 'Not the kind of bolt you secure things with.'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 5
        $this.EffectValue = 80
        $this.Chance      = 0.9
    }
}

Class BAArcticBlast : BattleAction {
    BAArcticBlast() : base() {
        $this.Name        = 'Arctic Blast'
        $this.Description = 'Oh you won''t be long for gettin'' froshbit, now!'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 5
        $this.EffectValue = 80
        $this.Chance      = 0.9
    }
}

Class BAFrostWave : BattleAction {
    BAFrostWave() : base() {
        $this.Name        = 'Frost Wave'
        $this.Description = 'Ride the wave, dude.'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 15
        $this.EffectValue = 100
        $this.Chance      = 1.0
    }
}

Class BAArcticFury : BattleAction {
    BAArcticFury() : base() {
        $this.Name        = 'Arctic Fury'
        $this.Description = 'An ass whooping is a dish best served cold.'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 50
        $this.EffectValue = 250
        $this.Chance      = 0.5
    }
}

Class BAFrozenSpear : BattleAction {
    BAFrozenSpear() : base() {
        $this.Name        = 'Frozen Spear'
        $this.Description = 'I found this spear in a fridge.'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 15
        $this.EffectValue = 100
        $this.Chance      = 1.0
    }
}

Class BAHailstorm : BattleAction {
    BAHailstorm() : base() {
        $this.Name        = 'Hailstorm'
        $this.Description = 'A common cause of insurace claims.'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 50
        $this.EffectValue = 250
        $this.Chance      = 0.5
    }
}

Class BAIcefallSlam : BattleAction {
    BAIcefallSlam() : base() {
        $this.Name        = 'Icefall Slam'
        $this.Description = 'Not avoiding the avalanche is a bad idea.'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 15
        $this.EffectValue = 100
        $this.Chance      = 1.0
    }
}

Class BAIceCataclysm : BattleAction {
    BAIceCataclysm() : base() {
        $this.Name        = "$($Script:BATAdornmentCharTable[[BattleActionType]::ElementalIce]) Cataclysm"
        $this.Description = 'Icy death rains down upon you.'
        $this.Type        = [BattleActionType]::ElementalIce
        # $this.Effect      = $Script:BaElementalIceCalc
        $this.MpCost      = 50
        $this.EffectValue = 250
        $this.Chance      = 0.5
    }
}

Class BAAquaJet : BattleAction {
    BAAquaJet() : base() {
        $this.Name        = 'Aqua Jet'
        $this.Description = 'A Boeing 737 made entirely of water.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 5
        $this.EffectValue = 80
        $this.Chance      = 0.9
    }
}

Class BATidalSurge : BattleAction {
    BATidalSurge() : base() {
        $this.Name        = 'Tidal Surge'
        $this.Description = 'They ebb, they flow, they attac.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 5
        $this.EffectValue = 80
        $this.Chance      = 0.9
    }
}

Class BAWaterWhip : BattleAction {
    BAWaterWhip() : base() {
        $this.Name        = 'Water Whip'
        $this.Description = 'Indiana Jones''s least favorite whip.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 5
        $this.EffectValue = 80
        $this.Chance      = 0.9
    }
}

Class BAMistStrike : BattleAction {
    BAMistStrike() : base() {
        $this.Name        = 'Mist Strike'
        $this.Description = 'Was it a cat I saw? Was I tac a ti saw?'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 15
        $this.EffectValue = 100
        $this.Chance      = 1.0
    }
}

Class BAHydroSlash : BattleAction {
    BAHydroSlash() : base() {
        $this.Name        = 'Hydro Slash'
        $this.Description = 'A moistened bint lobbed this scimitar at me.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 15
        $this.EffectValue = 100
        $this.Chance      = 1.0
    }
}

Class BAWavePunch : BattleAction {
    BAWavePunch() : base() {
        $this.Name        = 'Wave Punch'
        $this.Description = 'The latest Hawaiian Punch flavor. Swelling aftertaste.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 15
        $this.EffectValue = 100
        $this.Chance      = 1.0
    }
}

Class BAAquaticBolt : BattleAction {
    BAAquaticBolt() : base() {
        $this.Name        = 'Aquatic Bolt'
        $this.Description = 'Some watery things to pelt your neighbor with.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 50
        $this.EffectValue = 250
        $this.Chance      = 0.5
    }
}

Class BAAquaSphere : BattleAction {
    BAAquaSphere() : base() {
        $this.Name        = 'Aqua Sphere'
        $this.Description = 'Listen to ''Barbie Girl'' all day long. Enjoy.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 50
        $this.EffectValue = 250
        $this.Chance      = 0.5
    }
}

Class BATidalCrush : BattleAction {
    BATidalCrush() : base() {
        $this.Name        = 'Tidal Crush'
        $this.Description = 'Your high school crush came to kill you, in water form.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 50
        $this.EffectValue = 250
        $this.Chance      = 0.5
    }
}

Class BATsunami : BattleAction {
    BATsunami() : base() {
        $this.Name        = 'Tsunami'
        $this.Description = 'WAVES!'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 100
        $this.EffectValue = 500
        $this.Chance      = 0.1
    }
}

Class BASeafoamBolt : BattleAction {
    BASeafoamBolt() : base() {
        $this.Name        = 'Seafoam Bolt'
        $this.Description = 'Sometimes I see these white bubbles on the shore.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 100
        $this.EffectValue = 500
        $this.Chance      = 0.1
    }
}

Class BATyphoon : BattleAction {
    BATyphoon() : base() {
        $this.Name        = 'Typhoon'
        $this.Description = 'Not to be confused with the infamous Tie Foon.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BARaindance : BattleAction {
    BARaindance() : base() {
        $this.Name        = 'Raindance'
        $this.Description = 'Like Riverdance, only shit.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BAWateryGrave : BattleAction {
    BAWateryGrave() : base() {
        $this.Name        = 'Watery Grave'
        $this.Description = 'Davey Jones is holed up here.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BATempest : BattleAction {
    BATempest() : base() {
        $this.Name        = 'Tempest'
        $this.Description = 'If it were a tempest of love, would you feel any different?'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 400
        $this.EffectValue = 2000
        $this.Chance      = 0.1
    }
}

Class BAWaterCataclysm : BattleAction {
    BAWaterCataclysm() : base() {
        $this.Name        = "$($Script:BATAdornmentCharTable[[BattleActionType]::ElementalWater]) Cataclysm"
        $this.Description = 'Watery death rains down upon you.'
        $this.Type        = [BattleActionType]::ElementalWater
        # $this.Effect      = $Script:BaElementalWaterCalc
        $this.MpCost      = 400
        $this.EffectValue = 2000
        $this.Chance      = 0.1
    }
}

Class BATerraStrike : BattleAction {
    BATerraStrike() : base() {
        $this.Name        = 'Terra Strike'
        $this.Description = 'Sticks and stones can break your bones.'
        $this.Type        = [BattleActionType]::ElementalEarth
        # $this.Effect      = $Script:BaElementalEarthCalc
        $this.MpCost      = 50
        $this.EffectValue = 250
        $this.Chance      = 0.5
    }
}

Class BAQuakeFist : BattleAction {
    BAQuakeFist() : base() {
        $this.Name        = 'Quake Fist'
        $this.Description = 'Two nerds get in a fight at QuakeCon.'
        $this.Type        = [BattleActionType]::ElementalEarth
        # $this.Effect      = $Script:BaElementalEarthCalc
        $this.MpCost      = 100
        $this.EffectValue = 500
        $this.Chance      = 0.1
    }
}

Class BABoulderBash : BattleAction {
    BABoulderBash() : base() {
        $this.Name        = 'Boulder Bash'
        $this.Description = 'We played Resident Evil 5 to the end.'
        $this.Type        = [BattleActionType]::ElementalEarth
        # $this.Effect      = $Script:BaElementalEarthCalc
        $this.MpCost      = 100
        $this.EffectValue = 500
        $this.Chance      = 0.1
    }
}

Class BATremor : BattleAction {
    BATremor() : base() {
        $this.Name        = 'Tremor'
        $this.Description = 'Does more damage than those Kevin Bacon movies.'
        $this.Type        = [BattleActionType]::ElementalEarth
        # $this.Effect      = $Script:BaElementalEarthCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BAGraniteDust : BattleAction {
    BAGraniteDust() : base() {
        $this.Name        = 'Granite Dust'
        $this.Description = 'There''s blood on the ground before you know it.'
        $this.Type        = [BattleActionType]::ElementalEarth
        # $this.Effect      = $Script:BaElementalEarthCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BARockslide : BattleAction {
    BARockslide() : base() {
        $this.Name        = 'Rockslide'
        $this.Description = 'Fallin'' rocks, fallin'' rocks, fallin'' rocks.'
        $this.Type        = [BattleActionType]::ElementalEarth
        # $this.Effect      = $Script:BaElementalEarthCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BASinkhole : BattleAction {
    BASinkhole() : base() {
        $this.Name        = 'Sinkhole'
        $this.Description = 'Tumbling down the rabbit hole.'
        $this.Type        = [BattleActionType]::ElementalEarth
        # $this.Effect      = $Script:BaElementalEarthCalc
        $this.MpCost      = 400
        $this.EffectValue = 2000
        $this.Chance      = 0.1
    }
}

Class BAGeoFence : BattleAction {
    BAGeoFence() : base() {
        $this.Name        = 'Geo Fence'
        $this.Description = 'Get off my lawn!'
        $this.Type        = [BattleActionType]::ElementalEarth
        # $this.Effect      = $Script:BaElementalEarthCalc
        $this.MpCost      = 400
        $this.EffectValue = 2000
        $this.Chance      = 0.1
    }
}

Class BAEarthCataclysm : BattleAction {
    BAEarthCataclysm() : base() {
        $this.Name        = "$($Script:BATAdornmentCharTable[[BattleActionType]::ElementalEarth]) Cataclysm"
        $this.Description = 'A rocky death rains down on you.'
        $this.Type        = [BattleActionType]::ElementalEarth
        # $this.Effect      = $Script:BaElementalEarthCalc
        $this.MpCost      = 400
        $this.EffectValue = 2000
        $this.Chance      = 0.1
    }
}

Class BAGaleStrike : BattleAction {
    BAGaleStrike() : base() {
        $this.Name        = 'Gale Strike'
        $this.Description = 'The wind can hurt you.'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 50
        $this.EffectValue = 250
        $this.Chance      = 0.5
    }
}

Class BAZephyrSlash : BattleAction {
    BAZephyrSlash() : base() {
        $this.Name        = 'Zephyr Slash'
        $this.Description = 'What the hell is a zephyr, anyway?'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 100
        $this.EffectValue = 500
        $this.Chance      = 0.1
    }
}

Class BABreezeBlade : BattleAction {
    BABreezeBlade() : base() {
        $this.Name        = 'Breeze Blade'
        $this.Description = 'Easy, breezy, bleedy, dying guy.'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 100
        $this.EffectValue = 500
        $this.Chance      = 0.1
    }
}

Class BAThunderClap : BattleAction {
    BAThunderClap() : base() {
        $this.Name        = 'Thunder Clap'
        $this.Description = 'Sometimes an euphemism, this time a threat.'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 100
        $this.EffectValue = 500
        $this.Chance      = 0.1
    }
}

Class BASkywardCut : BattleAction {
    BASkywardCut() : base() {
        $this.Name        = 'Skyward Cut'
        $this.Description = 'Remember to always cut away from yourself.'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 100
        $this.EffectValue = 500
        $this.Chance      = 0.1
    }
}

Class BAGrandFlash : BattleAction {
    BAGrandFlash() : base() {
        $this.Name        = 'Grand Flash'
        $this.Description = 'Right when the lightning strikes.'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BACyclone : BattleAction {
    BACyclone() : base() {
        $this.Name        = 'Cyclone'
        $this.Description = 'Something about moving all night long.'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BALightningBolt : BattleAction {
    BALightningBolt() : base() {
        $this.Name        = 'Lightning Bolt'
        $this.Description = 'These look cool from a distance.'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BAGaleflash : BattleAction {
    BAGaleflash() : base() {
        $this.Name        = 'Galeflash'
        $this.Description = 'The lightning rode on the wind.'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BABreezyWind : BattleAction {
    BABreezyWind() : base() {
        $this.Name        = 'Breezy Wind'
        $this.Description = 'So brisk it''ll carry her bonnet off.'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BALeafShield : BattleAction {
    BALeafShield() : base() {
        $this.Name        = 'Leaf Shield'
        $this.Description = 'Are you sure this''ll work?'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BAWindCataclysm : BattleAction {
    BAWindCataclysm() : base() {
        $this.Name        = "$($Script:BATAdornmentCharTable[[BattleActionType]::ElementalWind]) Cataclysm"
        $this.Description = 'Windy death rains down upon you.'
        $this.Type        = [BattleActionType]::ElementalWind
        # $this.Effect      = $Script:BaElementalWindCalc
        $this.MpCost      = 300
        $this.EffectValue = 1500
        $this.Chance      = 0.1
    }
}

Class BARadiance : BattleAction {
    BARadiance() : base() {
        $this.Name        = 'Radiance'
        $this.Description = 'All teh brights.'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = $Script:BaElementalLightCalc
        $this.MpCost      = 100
        $this.EffectValue = 500
        $this.Chance      = 0.1
    }
}

Class BAHolyNova : BattleAction {
    BAHolyNova() : base() {
        $this.Name        = 'Holy Nova'
        $this.Description = 'More Bible than you can handle.'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = {}
        $this.MpCost      = 200
        $this.EffectValue = 1000
        $this.Chance      = 0.1
    }
}

Class BADivineBeam : BattleAction {
    BADivineBeam() : base() {
        $this.Name        = 'Divine Beam'
        $this.Description = 'Got Jesus?'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = {}
        $this.MpCost      = 300
        $this.EffectValue = 1500
        $this.Chance      = 0.1
    }
}

Class BAPrismShock : BattleAction {
    BAPrismShock() : base() {
        $this.Name        = 'Prism Shock'
        $this.Description = 'The pretty rainbow of death.'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = {}
        $this.MpCost      = 300
        $this.EffectValue = 1500
        $this.Chance      = 0.1
    }
}

Class BAHaloStrike : BattleAction {
    BAHaloStrike() : base() {
        $this.Name        = 'Halo Strike'
        $this.Description = 'These surprisingly hurt.'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = {}
        $this.MpCost      = 300
        $this.EffectValue = 1500
        $this.Chance      = 0.1
    }
}

Class BALightbringer : BattleAction {
    BALightbringer() : base() {
        $this.Name        = 'Lightbringer'
        $this.Description = 'Bring the party!'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = {}
        $this.MpCost      = 300
        $this.EffectValue = 1500
        $this.Chance      = 0.1
    }
}

Class BASacredPulse : BattleAction {
    BASacredPulse() : base() {
        $this.Name        = 'Sacred Pulse'
        $this.Description = 'The defunct newsletter of the Catholic Church.'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = {}
        $this.MpCost      = 300
        $this.EffectValue = 1500
        $this.Chance      = 0.1
    }
}

Class BADaybreaker : BattleAction {
    BADaybreaker() : base() {
        $this.Name        = 'Daybreaker'
        $this.Description = 'Some statue in Skyrim gave me this.'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = {}
        $this.MpCost      = 300
        $this.EffectValue = 1500
        $this.Chance      = 0.1
    }
}

Class BAAngelicHymn : BattleAction {
    BAAngelicHymn() : base() {
        $this.Name        = 'Angelic Hymn'
        $this.Description = 'This is how I sound when I sing Britney Spears.'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = {}
        $this.MpCost      = 300
        $this.EffectValue = 1500
        $this.Chance      = 0.1
    }
}

Class BABrilliance : BattleAction { 
    BABrilliance() : base() {
        $this.Name        = 'Brilliance'
        $this.Description = 'How I feel when I look at myself in the mirror.'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = {}
        $this.MpCost      = 300
        $this.EffectValue = 1500
        $this.Chance      = 0.1
    }
}

Class BASunfire : BattleAction {
    BASunfire() : base() {
        $this.Name        = 'Sunfire'
        $this.Description = 'Scorched Earth, mofo.'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = {}
        $this.MpCost      = 400
        $this.EffectValue = 2000
        $this.Chance      = 0.1
    }
}

Class BALightCataclysm : BattleAction {
    BALightCataclysm() : base() {
        $this.Name        = "$($Script:BATAdornmentCharTable[[BattleActionType]::ElementalLight]) Cataclysm"
        $this.Description = 'Holy death rains down upon you.'
        $this.Type        = [BattleActionType]::ElementalLight
        # $this.Effect      = {}
        $this.MpCost      = 500
        $this.EffectValue = 2500
        $this.Chance      = 0.1
    }
}

###############################################################################
#
# BATTLE ENTITY
#
# AN AGGREGATE OF MULTIPLE CLASSES. INTENDED TO DESCRIBE AN ENTITY THAT COULD
# PARTICIPATE IN A BATTLE SITUATION.
#
# NOTABLE PROPERTIES HERE ARE AS FOLLOWS:
#
#  STATS - A HASTABLE [STATID], [BATTLEENTITYPROPERTY]
#  ACTIONLISTING - A HASHTABLE [ACTIONSLOT], [BATTLEACTION]
#  ACTIONMARBLEBAG - A LIST OF FIXED SIZE (10) TO DETMINE ACTION CHANGE LAYOUT
#
###############################################################################
Class BattleEntity {
    [String]$Name
    [Boolean]$CanAct
    [Hashtable]$Stats
    [Hashtable]$ActionListing
    [ScriptBlock]$SpoilsEffect
    [ActionSlot[]]$ActionMarbleBag
    [ConsoleColor24]$NameDrawColor
    [BattleActionType]$Affinity

    BattleEntity() {
        $this.Name            = ''
        $this.CanAct          = $true
        $this.Stats           = @{}
        $this.ActionListing   = @{}
        $this.SpoilsEffect    = $null
        $this.ActionMarbleBag = $null
        $this.NameDrawColor   = [CCTextDefault24]::new()
        $this.Affinity        = [BattleActionType]::None
    }

    [Void]Update() {
        Foreach($a in $this.Stats.Values) {
            $a.Update()
        }
    }
}

###############################################################################
#
# ENEMY BATTLE ENTITY
#
# AN ENTITY THAT IS NOT THE PLAYER THAT CAN BE ENCOUNTERED IN A BATTLE 
# SCENARIO.
#
###############################################################################
Class EnemyBattleEntity : BattleEntity {
    [EnemyEntityImage]$Image
    [Int]$SpoilsGold
    [MapTileObject[]]$SpoilsItems

    EnemyBattleEntity() {
        $this.Image = $null
        $this.SpoilsGold = 0
        $this.SpoilsItems = @()
        $this.SpoilsEffect = {
            Param(
                [Player]$Player,
                [EnemyBattleEntity]$Opponent
            )

            $Script:TheBattleStatusMessageWindow.WriteSpoilsMessage($Opponent)
            $Script:TheBattleStatusMessageWindow.Draw()
            $Player.CurrentGold += $Opponent.SpoilsGold
            If($Opponent.SpoilsItems.Length -GT 0) {
                [String]$ItemNames = ($Opponent.SpoilsItems | Select-Object -ExpandProperty 'Name') -JOIN ', '
                
                $Script:TheBattleStatusMessageWindow.WriteItemsFoundMessage($ItemNames)
                $Script:TheBattleStatusMessageWindow.Draw()
                Foreach($a in $Opponent.SpoilsItems) {
                    $Player.Inventory.Add($a) | Out-Null
                }
            }
        }
    }
}

###############################################################################
#
# PLAYER
#
# A SPECIALIZATION OF BATTLE ENTITY THAT REPRESENTS THE PLAYER.
#
###############################################################################
Class Player : BattleEntity {
    Static [ConsoleColor24]$AsideColor    = [CCAppleIndigoLight24]::new()
    Static [ConsoleColor24]$GoldDrawColor = [CCAppleYellowLight24]::new()

    [Int]$CurrentGold
    [ATCoordinates]$MapCoordinates
    [List[MapTileObject]]$Inventory
    [List[String]]$TargetOfFilter
    [PlayerActionInventory]$ActionInventory

    Player() : base() {
        $this.CurrentGold     = 0
        $this.MapCoordinates  = [ATCoordinates]::new(0, 0)
        $this.Inventory       = [List[MapTileObject]]::new()
        $this.TargetOfFilter  = [List[String]]::new()
        $this.ActionInventory = [PlayerActionInventory]::new()
    }

    [Boolean]IsItemInInventory(
        [String]$ItemName
    ) {
        Foreach($a in $this.Inventory) {
            If($a.Name -IEQ $ItemName) {
                Return $true
            }
        }

        Return $false
    }

    [MapTileObject]GetItemReference(
        [String]$ItemName
    ) {
        Foreach($a in $this.Inventory) {
            If($a.Name -IEQ $ItemName) {
                Return $a
            }
        }

        Return $null
    }

    [ItemRemovalStatus]RemoveInventoryItemByName(
        [String]$ItemName
    ) {
        $c = 0

        Foreach($a in $this.Inventory) {
            If($a.Name -IEQ $ItemName) {
                If($a.KeyItem -EQ $true) {
                    Return [ItemRemovalStatus]::FailKeyItem
                }
                $this.Inventory.RemoveAt($c)

                Return [ItemRemovalStatus]::Success
            }
            $c++
        }

        Return [ItemRemovalStatus]::FailGeneral
    }

    [ItemRemovalStatus]RemoveInventoryItemByIndex(
        [Int]$Index
    ) {
        [MapTileObject]$a = $null

        Try {
            $a = $this.Inventory[$Index]
        } Catch {
            Return [ItemRemovalStatus]::FailGeneral
        }
        If($a.KeyItem -EQ $true) {
            Return [ItemRemovalStatus]::FailKeyItem
        }
        $this.Inventory.RemoveAt($Index)

        Return [ItemRemovalStatus]::Success
    }

    [Void]MapMoveSouth() {
        If($Script:CurrentMap.GetTileAtPlayerCoordinates().Exits[[MapTile]::TileExitSouth] -EQ $true) {
            If($Script:CurrentMap.BoundaryWrap -EQ $true) {
                $a = $Script:CurrentMap.MapHeight - 1
                $b = $this.MapCoordinates.Row + 1
                $c = $a % $b

                If($c -EQ $a) {
                    $this.MapCoordinates.Row = 0
                } Else {
                    $this.MapCoordinates.Row++
                }
                $Script:TheSceneWindow.UpdateCurrentImage($Script:CurrentMap.GetTileAtPlayerCoordinates().BackgroundImage)
                $Script:TheCommandWindow.UpdateCommandHistory($true)
                $Script:CurrentMap.GetTileAtPlayerCoordinates().BattleStep()

                Return
            } Else {
                $a = $Script:CurrentMap.MapHeight - 1
                $b = $this.MapCoordinates.Row + 1
                $c = $a % $b

                If($c -EQ $a) {
                    $Script:TheCommandWindow.UpdateCommandHistory($true)
                    $Script:TheMessageWindow.WriteInvisibleWallEncounteredMessage()
                } Else {
                    $this.MapCoordinates.Row++
                    $Script:TheSceneWindow.UpdateCurrentImage($Script:CurrentMap.GetTileAtPlayerCoordinates().BackgroundImage)
                    $Script:TheCommandWindow.UpdateCommandHistory($true)
                    $Script:CurrentMap.GetTileAtPlayerCoordinates().BattleStep()

                    Return
                }
            }
        } Else {
            $Script:TheCommandWindow.UpdateCommandHistory($true)
            $Script:TheMessageWindow.WriteYouShallNotPassMessage()

            Return
        }
    }

    [Void]MapMoveNorth() {
        If($Script:CurrentMap.GetTileAtPlayerCoordinates().Exits[[MapTile]::TileExitNorth] -EQ $true) {
            If($Script:CurrentMap.BoundaryWrap -EQ $true) {
                $a = 0
                $b = $this.MapCoordinates.Row - 1

                If($b -LT $a) {
                    $this.MapCoordinates.Row = $Script:CurrentMap.MapHeight - 1
                } Else {
                    $this.MapCoordinates.Row--
                }
                $Script:TheSceneWindow.UpdateCurrentImage($Script:CurrentMap.GetTileAtPlayerCoordinates().BackgroundImage)
                $Script:TheCommandWindow.UpdateCommandHistory($true)
                $Script:CurrentMap.GetTileAtPlayerCoordinates().BattleStep()

                Return
            } Else {
                $a = 0
                $b = $this.MapCoordinates.Row - 1

                If($b -LT $a) {
                    $Script:TheCommandWindow.UpdateCommandHistory($true)
                    $Script:TheMessageWindow.WriteInvisibleWallEncounteredMessage()
                } Else {
                    $this.MapCoordinates.Row--
                    $Script:TheSceneWindow.UpdateCurrentImage($Script:CurrentMap.GetTileAtPlayerCoordinates().BackgroundImage)
                    $Script:TheCommandWindow.UpdateCommandHistory($true)
                    $Script:CurrentMap.GetTileAtPlayerCoordinates().BattleStep()

                    Return
                }
            }
        } Else {
            $Script:TheCommandWindow.UpdateCommandHistory($true)
            $Script:TheMessageWindow.WriteYouShallNotPassMessage()

            Return
        }
    }

    [Void]MapMoveEast() {
        If($Script:CurrentMap.GetTileAtPlayerCoordinates().Exits[[MapTile]::TileExitEast] -EQ $true) {
            If($Script:CurrentMap.BoundaryWrap -EQ $true) {
                $a = $Script:CurrentMap.MapWidth - 1
                $b = $this.MapCoordinates.Column + 1
                $c = $a % $b

                If($c -EQ $a) {
                    $this.MapCoordinates.Column = 0
                } Else {
                    $this.MapCoordinates.Column++
                }
                $Script:TheSceneWindow.UpdateCurrentImage($Script:CurrentMap.GetTileAtPlayerCoordinates().BackgroundImage)
                $Script:TheCommandWindow.UpdateCommandHistory($true)
                $Script:CurrentMap.GetTileAtPlayerCoordinates().BattleStep()

                Return
            } Else {
                $a = $Script:CurrentMap.MapWidth - 1
                $b = $this.MapCoordinates.Column + 1
                $c = $a % $b

                If($c -EQ $a) {
                    $Script:TheCommandWindow.UpdateCommandHistory($true)
                    $Script:TheMessageWindow.WriteInvisibleWallEncounteredMessage()
                } Else {
                    $this.MapCoordinates.Column++
                    $Script:TheSceneWindow.UpdateCurrentImage($Script:CurrentMap.GetTileAtPlayerCoordinates().BackgroundImage)
                    $Script:TheCommandWindow.UpdateCommandHistory($true)
                    $Script:CurrentMap.GetTileAtPlayerCoordinates().BattleStep()

                    Return
                }
            }
        } Else {
            $Script:TheCommandWindow.UpdateCommandHistory($true)
            $Script:TheMessageWindow.WriteYouShallNotPassMessage()

            Return
        }
    }

    [Void]MapMoveWest() {
        If($Script:CurrentMap.GetTileAtPlayerCoordinates().Exits[[MapTile]::TileExitWest] -EQ $true) {
            If($Script:CurrentMap.BoundaryWrap -EQ $true) {
                $a = 0
                $b = $this.MapCoordinates.Column - 1

                If($b -LT $a) {
                    $this.MapCoordinates.Column = $Script:CurrentMap.MapWidth - 1
                } Else {
                    $this.MapCoordinates.Column--
                }
                $Script:TheSceneWindow.UpdateCurrentImage($Script:CurrentMap.GetTileAtPlayerCoordinates().BackgroundImage)
                $Script:TheCommandWindow.UpdateCommandHistory($true)
                $Script:CurrentMap.GetTileAtPlayerCoordinates().BattleStep()

                Return
            } Else {
                $a = 0
                $b = $this.MapCoordinates.Column - 1

                If($b -LT $a) {
                    $Script:TheCommandWindow.UpdateCommandHistory($true)
                    $Script:TheMessageWindow.WriteInvisibleWallEncounteredMessage()
                } Else {
                    $this.MapCoordinates.Column--
                    $Script:TheSceneWindow.UpdateCurrentImage($Script:CurrentMap.GetTileAtPlayerCoordinates().BackgroundImage)
                    $Script:TheCommandWindow.UpdateCommandHistory($true)
                    $Script:CurrentMap.GetTileAtPlayerCoordinates().BattleStep()

                    Return
                }
            }
        } Else {
            $Script:TheCommandWindow.UpdateCommandHistory($true)
            $Script:TheMessageWindow.WriteYouShallNotPassMessage()

            Return
        }
    }

    [Boolean]ValidateSourceInFilter(
        [String]$SourceItemClass
    ) {
        Return ($SourceItemClass -IN $this.TargetOfFilter)
    }
}

###############################################################################
#
# PLAYER ITEM INVENTORY
#
# A FOCAL POINT FOR THE PLAYER'S ITEM INVENTORY.
#
###############################################################################
Class PlayerItemInventory {
    [List[MapTileObject]]$Listing

    [Boolean]IsItemInInventory(
        [String]$ItemName
    ) {
        Foreach($a in $this.Listing) {
            If($a.Name -IEQ $ItemName) {
                Return $true
            }
        }

        Return $false
    }

    [MapTileObject]GetItemReference(
        [String]$ItemName
    ) {
        Foreach($a in $this.Inventory) {
            If($a.Name -IEQ $ItemName) {
                Return $a
            }
        }

        Return $null
    }

    [ItemRemovalStatus]RemoveInventoryItemByName(
        [String]$ItemName
    ) {
        [Int]$c = 0

        Foreach($a in $this.Inventory) {
            If($a.Name -IEQ $ItemName) {
                If($a.KeyItem -EQ $true) {
                    Return [ItemRemovalStatus]::FailKeyItem
                }
                $this.Listing.RemoveAt($c)

                Return [ItemRemovalStatus]::Success
            }
            $c++
        }

        Return [ItemRemovalStatus]::FailGeneral
    }

    [ItemRemovalStatus]RemoveInventoryItemByIndex(
        [Int]$Index
    ) {
        [MapTileObject]$a = $null

        Try {
            $a = $this.Listing[$Index]
        } Catch {
            Return [ItemRemovalStatus]::FailGeneral
        }
        If($a.KeyItem -EQ $true) {
            Return [ItemRemovalStatus]::FailKeyItem
        }
        $this.Listing.RemoveAt($Index)

        Return [ItemRemovalStatus]::Success
    }
}

###############################################################################
#
# PLAYER ACTION INVENTORY
#
# A FOCAL POINT FOR THE PLAYER'S BATTLE ACTION INVENTORY.
#
###############################################################################
Class PlayerActionInventory {
    [List[BattleAction]]$Listing = [List[BattleAction]]::new()

    [Boolean]IsActionInInventory(
        [String]$ActionName
    ) {
        Foreach($a in $this.Listing) {
            If($a.Name -IEQ $ActionName) {
                Return $true
            }
        }

        Return $false
    }

    [BattleAction]GetActionReference(
        [String]$ActionName
    ) {
        Foreach($a in $this.Listing) {
            If($a.Name -IEQ $ActionName) {
                Return $a
            }
        }

        Return $null
    }

    [ActionInvRemovalStatus]RemoveActionByName(
        [String]$ActionName
    ) {
        [Int]$c = 0

        Foreach($a in $this.Listing) {
            If($a.Name -IEQ $ActionName) {
                $this.Listing.RemoveAt($c)

                Return [ActionInvRemovalStatus]::Success
            }
            $c++
        }

        Return [ActionInvRemovalStatus]::Fail
    }

    [ActionInvRemovalStatus]RemoveActionByIndex(
        [Int]$Index
    ) {
        [BattleAction]$a = $null

        Try {
            $a = $this.Listing[$Index]
        } Catch {
            Return [ActionInvRemovalStatus]::Fail
        }
        $this.Listing.RemoveAt($Index)

        Return [ActionInvRemovalStatus]::Success
    }

    [Boolean]Add(
        [BattleAction]$ActionToAdd
    ) {
        [Boolean]$ActionAlreadyListed = $this.IsActionInInventory($ActionToAdd.Name)

        If($ActionAlreadyListed -EQ $true) {
            Return $false
        }
        # $this.Listing.Add([BattleAction]::new($ActionToAdd))
        $this.Listing.Add($ActionToAdd)

        Return $true
    }
}

###############################################################################
#
# ENEMY ENTITY IMAGE
#
# A COMPOSITION OF AT SCENE IMAGE STRING INTENDED TO BE USED WITH AN ENEMY
# ENTITY. THIS ISN'T AN "IMAGE" PER-SE, RATHER A LARGE ARRAY OF ANSI
# TERMINATED STRINGS THAT COALESCE INTO AN IMAGE.
#
###############################################################################
Class EnemyEntityImage {
    Static [Int]$Width  = 37
    Static [Int]$Height = 15

    [ATSceneImageString[,]]$Image

    EnemyEntityImage() {
        $this.Image = New-Object 'ATSceneImageString[,]' ([Int32]([SceneImage]::Height)), ([Int32]([SceneImage]::Width))
    }

    # THIS CTOR LIKELY ISN'T USED
    # EnemyEntityImage(
    #     [ATSceneImageString[,]]$Image
    # ) {
    #     $this.Image = $Image
    # }

    [Void]CreateImageATString([ATBackgroundColor24[]]$ImageColorMap) {
        For($r = 0; $r -LT [EnemyEntityImage]::Height; $r++) {
            For($c = 0; $c -LT [EnemyEntityImage]::Width; $c++) {
                $rf                 = ($r * [EnemyEntityImage]::Width) + $c
                $this.Image[$r, $c] = [ATSceneImageString]::new(
                    $ImageColorMap[$rf],
                    [ATCoordinates]::new(([BattleEnemyImageWindow]::ImageDrawRowOffset + $r), ([BattleEnemyImageWindow]::ImageDrawColumnOffset + $c))
                )
            }
        }
    }

    [String]ToAnsiControlSequenceString() {
        [String]$a = ''

        For($r = 0; $r -LT [EnemyEntityImage]::Height; $r++) {
            For($c = 0; $c -LT [EnemyEntityImage]::Width; $c++) {
                $a += $this.Image[$r, $c].ToAnsiControlSequenceString()
            }
        }

        Return $a
    }
}

###############################################################################
#
# EEI EMPTY
#
# A SYMBOLIC REPRESENTATION OF AN EMPTY ENEMY IMAGE.
#
###############################################################################
Class EEIEmpty : EnemyEntityImage {
    EEIEmpty() : base() {}

    [String]ToAnsiControlSequenceString() {
        Return ''
    }
}

###############################################################################
#
# EEI INTERNAL BASE
#
# AN EXPRESSION OF THE ENEMY ENTITY IMAGE THAT ADDS A COLOR MAP. THIS IS THE
# BASE FOR PRACTICAL APPLICATIONS.
#
###############################################################################
Class EEIInternalBase : EnemyEntityImage {
    [ATBackgroundColor24[]]$ColorMap

    EEIInternalBase() : base() {
        $this.ColorMap = New-Object 'ATBackgroundColor24[]' ([Int32](([Int32]([SceneImage]::Width)) * ([Int32]([SceneImage]::Height))))
    }
}

###############################################################################
#
# EEI SPECIALIZATIONS
#
# THESE ARE SPECIALIZATIONS OF EEI INTERNAL BASE THAT REPRESENT ACTUAL "IMAGES"
# THAT WOULD BE DRAWN IN THE BATTLE WINDOW. THE NAMES OF THE CLASSES ARE
# SELF-EVIDENT.
#
###############################################################################
Class EEIBat : EEIInternalBase {
    EEIBat() : base() {
        $this.ColorMap[0]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[1]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[2]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[3]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[4]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[5]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[6]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[7]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[8]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[9]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[10]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[11]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[12]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[13]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[14]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[15]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[16]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[17]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[18]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[19]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[20]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[21]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[22]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[23]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[24]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[25]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[26]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[27]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[28]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[29]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[30]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[31]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[32]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[33]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[34]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[35]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[36]  = [ATBackgroundColor24None]::new() # End Row 0
        $this.ColorMap[37]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[38]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[39]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[40]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[41]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[42]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[43]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[44]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[45]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[46]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[47]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[48]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[49]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[50]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[51]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[52]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[53]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[54]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[55]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[56]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[57]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[58]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[59]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[60]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[61]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[62]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[63]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[64]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[65]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[66]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[67]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[68]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[69]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[70]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[71]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[72]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[73]  = [ATBackgroundColor24None]::new() # End Row 1
        $this.ColorMap[74]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[75]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[76]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[77]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[78]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[79]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[80]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[81]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[82]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[83]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[84]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[85]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[86]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[87]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[88]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[89]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[90]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[91]  = [CCAppleRedDark24]::new()
        $this.ColorMap[92]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[93]  = [CCAppleRedDark24]::new()
        $this.ColorMap[94]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[95]  = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[96]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[97]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[98]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[99]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[100] = [ATBackgroundColor24None]::new()
        $this.ColorMap[101] = [ATBackgroundColor24None]::new()
        $this.ColorMap[102] = [ATBackgroundColor24None]::new()
        $this.ColorMap[103] = [ATBackgroundColor24None]::new()
        $this.ColorMap[104] = [ATBackgroundColor24None]::new()
        $this.ColorMap[105] = [ATBackgroundColor24None]::new()
        $this.ColorMap[106] = [ATBackgroundColor24None]::new()
        $this.ColorMap[107] = [ATBackgroundColor24None]::new()
        $this.ColorMap[108] = [ATBackgroundColor24None]::new()
        $this.ColorMap[109] = [ATBackgroundColor24None]::new()
        $this.ColorMap[110] = [ATBackgroundColor24None]::new() # End Row 2
        $this.ColorMap[111] = [ATBackgroundColor24None]::new()
        $this.ColorMap[112] = [ATBackgroundColor24None]::new()
        $this.ColorMap[113] = [ATBackgroundColor24None]::new()
        $this.ColorMap[114] = [ATBackgroundColor24None]::new()
        $this.ColorMap[115] = [ATBackgroundColor24None]::new()
        $this.ColorMap[116] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[117] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[118] = [ATBackgroundColor24None]::new()
        $this.ColorMap[119] = [ATBackgroundColor24None]::new()
        $this.ColorMap[120] = [ATBackgroundColor24None]::new()
        $this.ColorMap[121] = [ATBackgroundColor24None]::new()
        $this.ColorMap[122] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[123] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[124] = [ATBackgroundColor24None]::new()
        $this.ColorMap[125] = [ATBackgroundColor24None]::new()
        $this.ColorMap[126] = [ATBackgroundColor24None]::new()
        $this.ColorMap[127] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[128] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[129] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[130] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[131] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[132] = [ATBackgroundColor24None]::new()
        $this.ColorMap[133] = [ATBackgroundColor24None]::new()
        $this.ColorMap[134] = [ATBackgroundColor24None]::new()
        $this.ColorMap[135] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[136] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[137] = [ATBackgroundColor24None]::new()
        $this.ColorMap[138] = [ATBackgroundColor24None]::new()
        $this.ColorMap[139] = [ATBackgroundColor24None]::new()
        $this.ColorMap[140] = [ATBackgroundColor24None]::new()
        $this.ColorMap[141] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[142] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[143] = [ATBackgroundColor24None]::new()
        $this.ColorMap[144] = [ATBackgroundColor24None]::new()
        $this.ColorMap[145] = [ATBackgroundColor24None]::new()
        $this.ColorMap[146] = [ATBackgroundColor24None]::new()
        $this.ColorMap[147] = [ATBackgroundColor24None]::new() # End Row 3
        $this.ColorMap[148] = [ATBackgroundColor24None]::new()
        $this.ColorMap[149] = [ATBackgroundColor24None]::new()
        $this.ColorMap[150] = [ATBackgroundColor24None]::new()
        $this.ColorMap[151] = [ATBackgroundColor24None]::new()
        $this.ColorMap[152] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[153] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[154] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[155] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[156] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[157] = [ATBackgroundColor24None]::new()
        $this.ColorMap[158] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[159] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[160] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[161] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[162] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[163] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[164] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[165] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[166] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[167] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[168] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[169] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[170] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[171] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[172] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[173] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[174] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[175] = [ATBackgroundColor24None]::new()
        $this.ColorMap[176] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[177] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[178] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[179] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[180] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[181] = [ATBackgroundColor24None]::new()
        $this.ColorMap[182] = [ATBackgroundColor24None]::new()
        $this.ColorMap[183] = [ATBackgroundColor24None]::new()
        $this.ColorMap[184] = [ATBackgroundColor24None]::new() # End Row 4
        $this.ColorMap[185] = [ATBackgroundColor24None]::new()
        $this.ColorMap[186] = [ATBackgroundColor24None]::new()
        $this.ColorMap[187] = [ATBackgroundColor24None]::new()
        $this.ColorMap[188] = [ATBackgroundColor24None]::new()
        $this.ColorMap[189] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[190] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[191] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[192] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[193] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[194] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[195] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[196] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[197] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[198] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[199] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[200] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[201] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[202] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[203] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[204] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[205] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[206] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[207] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[208] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[209] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[210] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[211] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[212] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[213] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[214] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[215] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[216] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[217] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[218] = [ATBackgroundColor24None]::new()
        $this.ColorMap[219] = [ATBackgroundColor24None]::new()
        $this.ColorMap[220] = [ATBackgroundColor24None]::new()
        $this.ColorMap[221] = [ATBackgroundColor24None]::new() # End Row 5
        $this.ColorMap[222] = [ATBackgroundColor24None]::new()
        $this.ColorMap[223] = [ATBackgroundColor24None]::new()
        $this.ColorMap[224] = [ATBackgroundColor24None]::new()
        $this.ColorMap[225] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[226] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[227] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[228] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[229] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[230] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[231] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[232] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[233] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[234] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[235] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[236] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[237] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[238] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[239] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[240] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[241] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[242] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[243] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[244] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[245] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[246] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[247] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[248] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[249] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[250] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[251] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[252] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[253] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[254] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[255] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[256] = [ATBackgroundColor24None]::new()
        $this.ColorMap[257] = [ATBackgroundColor24None]::new()
        $this.ColorMap[258] = [ATBackgroundColor24None]::new() # End Row 6
        $this.ColorMap[259] = [ATBackgroundColor24None]::new()
        $this.ColorMap[260] = [ATBackgroundColor24None]::new()
        $this.ColorMap[261] = [ATBackgroundColor24None]::new()
        $this.ColorMap[262] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[263] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[264] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[265] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[266] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[267] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[268] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[269] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[270] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[271] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[272] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[273] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[274] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[275] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[276] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[277] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[278] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[279] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[280] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[281] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[282] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[283] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[284] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[285] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[286] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[287] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[288] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[289] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[290] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[291] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[292] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[293] = [ATBackgroundColor24None]::new()
        $this.ColorMap[294] = [ATBackgroundColor24None]::new()
        $this.ColorMap[295] = [ATBackgroundColor24None]::new() # End Row 7
        $this.ColorMap[296] = [ATBackgroundColor24None]::new()
        $this.ColorMap[297] = [ATBackgroundColor24None]::new()
        $this.ColorMap[298] = [ATBackgroundColor24None]::new()
        $this.ColorMap[299] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[300] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[301] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[302] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[303] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[304] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[305] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[306] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[307] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[308] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[309] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[310] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[311] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[312] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[313] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[314] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[315] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[316] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[317] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[318] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[319] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[320] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[321] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[322] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[323] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[324] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[325] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[326] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[327] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[328] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[329] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[330] = [ATBackgroundColor24None]::new()
        $this.ColorMap[331] = [ATBackgroundColor24None]::new()
        $this.ColorMap[332] = [ATBackgroundColor24None]::new() # End Row 8
        $this.ColorMap[333] = [ATBackgroundColor24None]::new()
        $this.ColorMap[334] = [ATBackgroundColor24None]::new()
        $this.ColorMap[335] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[336] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[337] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[338] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[339] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[340] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[341] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[342] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[343] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[344] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[345] = [ATBackgroundColor24None]::new()
        $this.ColorMap[346] = [ATBackgroundColor24None]::new()
        $this.ColorMap[347] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[348] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[349] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[350] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[351] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[352] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[353] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[354] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[355] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[356] = [ATBackgroundColor24None]::new()
        $this.ColorMap[357] = [ATBackgroundColor24None]::new()
        $this.ColorMap[358] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[359] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[360] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[361] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[362] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[363] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[364] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[365] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[366] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[367] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[368] = [ATBackgroundColor24None]::new()
        $this.ColorMap[369] = [ATBackgroundColor24None]::new() # End Row 9
        $this.ColorMap[370] = [ATBackgroundColor24None]::new()
        $this.ColorMap[371] = [ATBackgroundColor24None]::new()
        $this.ColorMap[372] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[373] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[374] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[375] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[376] = [ATBackgroundColor24None]::new()
        $this.ColorMap[377] = [ATBackgroundColor24None]::new()
        $this.ColorMap[378] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[379] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[380] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[381] = [ATBackgroundColor24None]::new()
        $this.ColorMap[382] = [ATBackgroundColor24None]::new()
        $this.ColorMap[383] = [ATBackgroundColor24None]::new()
        $this.ColorMap[384] = [ATBackgroundColor24None]::new()
        $this.ColorMap[385] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[386] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[387] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[388] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[389] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[390] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[391] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[392] = [ATBackgroundColor24None]::new()
        $this.ColorMap[393] = [ATBackgroundColor24None]::new()
        $this.ColorMap[394] = [ATBackgroundColor24None]::new()
        $this.ColorMap[395] = [ATBackgroundColor24None]::new()
        $this.ColorMap[396] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[397] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[398] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[399] = [ATBackgroundColor24None]::new()
        $this.ColorMap[400] = [ATBackgroundColor24None]::new()
        $this.ColorMap[401] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[402] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[403] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[404] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[405] = [ATBackgroundColor24None]::new()
        $this.ColorMap[406] = [ATBackgroundColor24None]::new() # End Row 10
        $this.ColorMap[407] = [ATBackgroundColor24None]::new()
        $this.ColorMap[408] = [ATBackgroundColor24None]::new()
        $this.ColorMap[409] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[410] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[411] = [ATBackgroundColor24None]::new()
        $this.ColorMap[412] = [ATBackgroundColor24None]::new()
        $this.ColorMap[413] = [ATBackgroundColor24None]::new()
        $this.ColorMap[414] = [ATBackgroundColor24None]::new()
        $this.ColorMap[415] = [ATBackgroundColor24None]::new()
        $this.ColorMap[416] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[417] = [ATBackgroundColor24None]::new()
        $this.ColorMap[418] = [ATBackgroundColor24None]::new()
        $this.ColorMap[419] = [ATBackgroundColor24None]::new()
        $this.ColorMap[420] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[421] = [ATBackgroundColor24None]::new()
        $this.ColorMap[422] = [ATBackgroundColor24None]::new()
        $this.ColorMap[423] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[424] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[425] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[426] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[427] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[428] = [ATBackgroundColor24None]::new()
        $this.ColorMap[429] = [ATBackgroundColor24None]::new()
        $this.ColorMap[430] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[431] = [ATBackgroundColor24None]::new()
        $this.ColorMap[432] = [ATBackgroundColor24None]::new()
        $this.ColorMap[433] = [ATBackgroundColor24None]::new()
        $this.ColorMap[434] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[435] = [ATBackgroundColor24None]::new()
        $this.ColorMap[436] = [ATBackgroundColor24None]::new()
        $this.ColorMap[437] = [ATBackgroundColor24None]::new()
        $this.ColorMap[438] = [ATBackgroundColor24None]::new()
        $this.ColorMap[439] = [ATBackgroundColor24None]::new()
        $this.ColorMap[440] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[441] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[442] = [ATBackgroundColor24None]::new()
        $this.ColorMap[443] = [ATBackgroundColor24None]::new() # End Row 11
        $this.ColorMap[444] = [ATBackgroundColor24None]::new()
        $this.ColorMap[445] = [ATBackgroundColor24None]::new()
        $this.ColorMap[446] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[447] = [ATBackgroundColor24None]::new()
        $this.ColorMap[448] = [ATBackgroundColor24None]::new()
        $this.ColorMap[449] = [ATBackgroundColor24None]::new()
        $this.ColorMap[450] = [ATBackgroundColor24None]::new()
        $this.ColorMap[451] = [ATBackgroundColor24None]::new()
        $this.ColorMap[452] = [ATBackgroundColor24None]::new()
        $this.ColorMap[453] = [ATBackgroundColor24None]::new()
        $this.ColorMap[454] = [ATBackgroundColor24None]::new()
        $this.ColorMap[455] = [ATBackgroundColor24None]::new()
        $this.ColorMap[456] = [ATBackgroundColor24None]::new()
        $this.ColorMap[457] = [ATBackgroundColor24None]::new()
        $this.ColorMap[458] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[459] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[460] = [ATBackgroundColor24None]::new()
        $this.ColorMap[461] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[462] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[463] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[464] = [ATBackgroundColor24None]::new()
        $this.ColorMap[465] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[466] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[467] = [ATBackgroundColor24None]::new()
        $this.ColorMap[468] = [ATBackgroundColor24None]::new()
        $this.ColorMap[469] = [ATBackgroundColor24None]::new()
        $this.ColorMap[470] = [ATBackgroundColor24None]::new()
        $this.ColorMap[471] = [ATBackgroundColor24None]::new()
        $this.ColorMap[472] = [ATBackgroundColor24None]::new()
        $this.ColorMap[473] = [ATBackgroundColor24None]::new()
        $this.ColorMap[474] = [ATBackgroundColor24None]::new()
        $this.ColorMap[475] = [ATBackgroundColor24None]::new()
        $this.ColorMap[476] = [ATBackgroundColor24None]::new()
        $this.ColorMap[477] = [ATBackgroundColor24None]::new()
        $this.ColorMap[478] = [CCAppleGrey3Dark24]::new()
        $this.ColorMap[479] = [ATBackgroundColor24None]::new()
        $this.ColorMap[480] = [ATBackgroundColor24None]::new() # End Row 12
        $this.ColorMap[481] = [ATBackgroundColor24None]::new()
        $this.ColorMap[482] = [ATBackgroundColor24None]::new()
        $this.ColorMap[483] = [ATBackgroundColor24None]::new()
        $this.ColorMap[484] = [ATBackgroundColor24None]::new()
        $this.ColorMap[485] = [ATBackgroundColor24None]::new()
        $this.ColorMap[486] = [ATBackgroundColor24None]::new()
        $this.ColorMap[487] = [ATBackgroundColor24None]::new()
        $this.ColorMap[488] = [ATBackgroundColor24None]::new()
        $this.ColorMap[489] = [ATBackgroundColor24None]::new()
        $this.ColorMap[490] = [ATBackgroundColor24None]::new()
        $this.ColorMap[491] = [ATBackgroundColor24None]::new()
        $this.ColorMap[492] = [ATBackgroundColor24None]::new()
        $this.ColorMap[493] = [ATBackgroundColor24None]::new()
        $this.ColorMap[494] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[495] = [ATBackgroundColor24None]::new()
        $this.ColorMap[496] = [ATBackgroundColor24None]::new()
        $this.ColorMap[497] = [ATBackgroundColor24None]::new()
        $this.ColorMap[498] = [ATBackgroundColor24None]::new()
        $this.ColorMap[499] = [CCAppleGrey1Dark24]::new()
        $this.ColorMap[500] = [ATBackgroundColor24None]::new()
        $this.ColorMap[501] = [ATBackgroundColor24None]::new()
        $this.ColorMap[502] = [ATBackgroundColor24None]::new()
        $this.ColorMap[503] = [ATBackgroundColor24None]::new()
        $this.ColorMap[504] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[505] = [ATBackgroundColor24None]::new()
        $this.ColorMap[506] = [ATBackgroundColor24None]::new()
        $this.ColorMap[507] = [ATBackgroundColor24None]::new()
        $this.ColorMap[508] = [ATBackgroundColor24None]::new()
        $this.ColorMap[509] = [ATBackgroundColor24None]::new()
        $this.ColorMap[510] = [ATBackgroundColor24None]::new()
        $this.ColorMap[511] = [ATBackgroundColor24None]::new()
        $this.ColorMap[512] = [ATBackgroundColor24None]::new()
        $this.ColorMap[513] = [ATBackgroundColor24None]::new()
        $this.ColorMap[514] = [ATBackgroundColor24None]::new()
        $this.ColorMap[515] = [ATBackgroundColor24None]::new()
        $this.ColorMap[516] = [ATBackgroundColor24None]::new()
        $this.ColorMap[517] = [ATBackgroundColor24None]::new() # End Row 13
        $this.ColorMap[518] = [ATBackgroundColor24None]::new()
        $this.ColorMap[519] = [ATBackgroundColor24None]::new()
        $this.ColorMap[520] = [ATBackgroundColor24None]::new()
        $this.ColorMap[521] = [ATBackgroundColor24None]::new()
        $this.ColorMap[522] = [ATBackgroundColor24None]::new()
        $this.ColorMap[523] = [ATBackgroundColor24None]::new()
        $this.ColorMap[524] = [ATBackgroundColor24None]::new()
        $this.ColorMap[525] = [ATBackgroundColor24None]::new()
        $this.ColorMap[526] = [ATBackgroundColor24None]::new()
        $this.ColorMap[527] = [ATBackgroundColor24None]::new()
        $this.ColorMap[528] = [ATBackgroundColor24None]::new()
        $this.ColorMap[529] = [ATBackgroundColor24None]::new()
        $this.ColorMap[530] = [ATBackgroundColor24None]::new()
        $this.ColorMap[531] = [ATBackgroundColor24None]::new()
        $this.ColorMap[532] = [ATBackgroundColor24None]::new()
        $this.ColorMap[533] = [ATBackgroundColor24None]::new()
        $this.ColorMap[534] = [ATBackgroundColor24None]::new()
        $this.ColorMap[535] = [ATBackgroundColor24None]::new()
        $this.ColorMap[536] = [ATBackgroundColor24None]::new()
        $this.ColorMap[537] = [ATBackgroundColor24None]::new()
        $this.ColorMap[538] = [ATBackgroundColor24None]::new()
        $this.ColorMap[539] = [ATBackgroundColor24None]::new()
        $this.ColorMap[540] = [ATBackgroundColor24None]::new()
        $this.ColorMap[541] = [ATBackgroundColor24None]::new()
        $this.ColorMap[542] = [ATBackgroundColor24None]::new()
        $this.ColorMap[543] = [ATBackgroundColor24None]::new()
        $this.ColorMap[544] = [ATBackgroundColor24None]::new()
        $this.ColorMap[545] = [ATBackgroundColor24None]::new()
        $this.ColorMap[546] = [ATBackgroundColor24None]::new()
        $this.ColorMap[547] = [ATBackgroundColor24None]::new()
        $this.ColorMap[548] = [ATBackgroundColor24None]::new()
        $this.ColorMap[549] = [ATBackgroundColor24None]::new()
        $this.ColorMap[550] = [ATBackgroundColor24None]::new()
        $this.ColorMap[551] = [ATBackgroundColor24None]::new()
        $this.ColorMap[552] = [ATBackgroundColor24None]::new()
        $this.ColorMap[553] = [ATBackgroundColor24None]::new()
        $this.ColorMap[554] = [ATBackgroundColor24None]::new() # End Row 14

        $this.CreateImageATString($this.ColorMap)
        $this.ColorMap = $null
    }
}

Class EEINightwing : EEIInternalBase {
    EEINightwing() : base() {
        $this.ColorMap[0]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[1]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[2]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[3]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[4]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[5]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[6]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[7]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[8]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[9]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[10]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[11]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[12]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[13]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[14]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[15]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[16]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[17]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[18]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[19]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[20]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[21]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[22]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[23]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[24]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[25]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[26]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[27]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[28]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[29]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[30]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[31]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[32]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[33]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[34]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[35]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[36]  = [ATBackgroundColor24None]::new() # End Row 0
        $this.ColorMap[37]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[38]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[39]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[40]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[41]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[42]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[43]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[44]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[45]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[46]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[47]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[48]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[49]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[50]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[51]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[52]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[53]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[54]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[55]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[56]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[57]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[58]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[59]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[60]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[61]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[62]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[63]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[64]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[65]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[66]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[67]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[68]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[69]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[70]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[71]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[72]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[73]  = [ATBackgroundColor24None]::new() # End Row 1
        $this.ColorMap[74]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[75]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[76]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[77]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[78]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[79]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[80]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[81]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[82]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[83]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[84]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[85]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[86]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[87]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[88]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[89]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[90]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[91]  = [CCAppleRedDark24]::new()
        $this.ColorMap[92]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[93]  = [CCAppleRedDark24]::new()
        $this.ColorMap[94]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[95]  = [CCAppleIndigoDark24]::new()
        $this.ColorMap[96]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[97]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[98]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[99]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[100] = [ATBackgroundColor24None]::new()
        $this.ColorMap[101] = [ATBackgroundColor24None]::new()
        $this.ColorMap[102] = [ATBackgroundColor24None]::new()
        $this.ColorMap[103] = [ATBackgroundColor24None]::new()
        $this.ColorMap[104] = [ATBackgroundColor24None]::new()
        $this.ColorMap[105] = [ATBackgroundColor24None]::new()
        $this.ColorMap[106] = [ATBackgroundColor24None]::new()
        $this.ColorMap[107] = [ATBackgroundColor24None]::new()
        $this.ColorMap[108] = [ATBackgroundColor24None]::new()
        $this.ColorMap[109] = [ATBackgroundColor24None]::new()
        $this.ColorMap[110] = [ATBackgroundColor24None]::new() # End Row 2
        $this.ColorMap[111] = [ATBackgroundColor24None]::new()
        $this.ColorMap[112] = [ATBackgroundColor24None]::new()
        $this.ColorMap[113] = [ATBackgroundColor24None]::new()
        $this.ColorMap[114] = [ATBackgroundColor24None]::new()
        $this.ColorMap[115] = [ATBackgroundColor24None]::new()
        $this.ColorMap[116] = [CCApplePurpleDark24]::new()
        $this.ColorMap[117] = [CCApplePurpleDark24]::new()
        $this.ColorMap[118] = [ATBackgroundColor24None]::new()
        $this.ColorMap[119] = [ATBackgroundColor24None]::new()
        $this.ColorMap[120] = [ATBackgroundColor24None]::new()
        $this.ColorMap[121] = [ATBackgroundColor24None]::new()
        $this.ColorMap[122] = [CCApplePurpleDark24]::new()
        $this.ColorMap[123] = [CCApplePurpleDark24]::new()
        $this.ColorMap[124] = [ATBackgroundColor24None]::new()
        $this.ColorMap[125] = [ATBackgroundColor24None]::new()
        $this.ColorMap[126] = [ATBackgroundColor24None]::new()
        $this.ColorMap[127] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[128] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[129] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[130] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[131] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[132] = [ATBackgroundColor24None]::new()
        $this.ColorMap[133] = [ATBackgroundColor24None]::new()
        $this.ColorMap[134] = [ATBackgroundColor24None]::new()
        $this.ColorMap[135] = [CCApplePurpleDark24]::new()
        $this.ColorMap[136] = [CCApplePurpleDark24]::new()
        $this.ColorMap[137] = [ATBackgroundColor24None]::new()
        $this.ColorMap[138] = [ATBackgroundColor24None]::new()
        $this.ColorMap[139] = [ATBackgroundColor24None]::new()
        $this.ColorMap[140] = [ATBackgroundColor24None]::new()
        $this.ColorMap[141] = [CCApplePurpleDark24]::new()
        $this.ColorMap[142] = [CCApplePurpleDark24]::new()
        $this.ColorMap[143] = [ATBackgroundColor24None]::new()
        $this.ColorMap[144] = [ATBackgroundColor24None]::new()
        $this.ColorMap[145] = [ATBackgroundColor24None]::new()
        $this.ColorMap[146] = [ATBackgroundColor24None]::new()
        $this.ColorMap[147] = [ATBackgroundColor24None]::new() # End Row 3
        $this.ColorMap[148] = [ATBackgroundColor24None]::new()
        $this.ColorMap[149] = [ATBackgroundColor24None]::new()
        $this.ColorMap[150] = [ATBackgroundColor24None]::new()
        $this.ColorMap[151] = [ATBackgroundColor24None]::new()
        $this.ColorMap[152] = [CCApplePurpleDark24]::new()
        $this.ColorMap[153] = [CCApplePurpleDark24]::new()
        $this.ColorMap[154] = [CCApplePurpleDark24]::new()
        $this.ColorMap[155] = [CCApplePurpleDark24]::new()
        $this.ColorMap[156] = [CCApplePurpleDark24]::new()
        $this.ColorMap[157] = [ATBackgroundColor24None]::new()
        $this.ColorMap[158] = [CCApplePurpleDark24]::new()
        $this.ColorMap[159] = [CCApplePurpleDark24]::new()
        $this.ColorMap[160] = [CCApplePurpleDark24]::new()
        $this.ColorMap[161] = [CCApplePurpleDark24]::new()
        $this.ColorMap[162] = [CCApplePurpleDark24]::new()
        $this.ColorMap[163] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[164] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[165] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[166] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[167] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[168] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[169] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[170] = [CCApplePurpleDark24]::new()
        $this.ColorMap[171] = [CCApplePurpleDark24]::new()
        $this.ColorMap[172] = [CCApplePurpleDark24]::new()
        $this.ColorMap[173] = [CCApplePurpleDark24]::new()
        $this.ColorMap[174] = [CCApplePurpleDark24]::new()
        $this.ColorMap[175] = [ATBackgroundColor24None]::new()
        $this.ColorMap[176] = [CCApplePurpleDark24]::new()
        $this.ColorMap[177] = [CCApplePurpleDark24]::new()
        $this.ColorMap[178] = [CCApplePurpleDark24]::new()
        $this.ColorMap[179] = [CCApplePurpleDark24]::new()
        $this.ColorMap[180] = [CCApplePurpleDark24]::new()
        $this.ColorMap[181] = [ATBackgroundColor24None]::new()
        $this.ColorMap[182] = [ATBackgroundColor24None]::new()
        $this.ColorMap[183] = [ATBackgroundColor24None]::new()
        $this.ColorMap[184] = [ATBackgroundColor24None]::new() # End Row 4
        $this.ColorMap[185] = [ATBackgroundColor24None]::new()
        $this.ColorMap[186] = [ATBackgroundColor24None]::new()
        $this.ColorMap[187] = [ATBackgroundColor24None]::new()
        $this.ColorMap[188] = [ATBackgroundColor24None]::new()
        $this.ColorMap[189] = [CCApplePurpleDark24]::new()
        $this.ColorMap[190] = [CCApplePurpleDark24]::new()
        $this.ColorMap[191] = [CCApplePurpleDark24]::new()
        $this.ColorMap[192] = [CCApplePurpleDark24]::new()
        $this.ColorMap[193] = [CCApplePurpleDark24]::new()
        $this.ColorMap[194] = [CCApplePurpleDark24]::new()
        $this.ColorMap[195] = [CCApplePurpleDark24]::new()
        $this.ColorMap[196] = [CCApplePurpleDark24]::new()
        $this.ColorMap[197] = [CCApplePurpleDark24]::new()
        $this.ColorMap[198] = [CCApplePurpleDark24]::new()
        $this.ColorMap[199] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[200] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[201] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[202] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[203] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[204] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[205] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[206] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[207] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[208] = [CCApplePurpleDark24]::new()
        $this.ColorMap[209] = [CCApplePurpleDark24]::new()
        $this.ColorMap[210] = [CCApplePurpleDark24]::new()
        $this.ColorMap[211] = [CCApplePurpleDark24]::new()
        $this.ColorMap[212] = [CCApplePurpleDark24]::new()
        $this.ColorMap[213] = [CCApplePurpleDark24]::new()
        $this.ColorMap[214] = [CCApplePurpleDark24]::new()
        $this.ColorMap[215] = [CCApplePurpleDark24]::new()
        $this.ColorMap[216] = [CCApplePurpleDark24]::new()
        $this.ColorMap[217] = [CCApplePurpleDark24]::new()
        $this.ColorMap[218] = [ATBackgroundColor24None]::new()
        $this.ColorMap[219] = [ATBackgroundColor24None]::new()
        $this.ColorMap[220] = [ATBackgroundColor24None]::new()
        $this.ColorMap[221] = [ATBackgroundColor24None]::new() # End Row 5
        $this.ColorMap[222] = [ATBackgroundColor24None]::new()
        $this.ColorMap[223] = [ATBackgroundColor24None]::new()
        $this.ColorMap[224] = [ATBackgroundColor24None]::new()
        $this.ColorMap[225] = [CCApplePurpleDark24]::new()
        $this.ColorMap[226] = [CCApplePurpleDark24]::new()
        $this.ColorMap[227] = [CCApplePurpleDark24]::new()
        $this.ColorMap[228] = [CCApplePurpleDark24]::new()
        $this.ColorMap[229] = [CCApplePurpleDark24]::new()
        $this.ColorMap[230] = [CCApplePurpleDark24]::new()
        $this.ColorMap[231] = [CCApplePurpleDark24]::new()
        $this.ColorMap[232] = [CCApplePurpleDark24]::new()
        $this.ColorMap[233] = [CCApplePurpleDark24]::new()
        $this.ColorMap[234] = [CCApplePurpleDark24]::new()
        $this.ColorMap[235] = [CCApplePurpleDark24]::new()
        $this.ColorMap[236] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[237] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[238] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[239] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[240] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[241] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[242] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[243] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[244] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[245] = [CCApplePurpleDark24]::new()
        $this.ColorMap[246] = [CCApplePurpleDark24]::new()
        $this.ColorMap[247] = [CCApplePurpleDark24]::new()
        $this.ColorMap[248] = [CCApplePurpleDark24]::new()
        $this.ColorMap[249] = [CCApplePurpleDark24]::new()
        $this.ColorMap[250] = [CCApplePurpleDark24]::new()
        $this.ColorMap[251] = [CCApplePurpleDark24]::new()
        $this.ColorMap[252] = [CCApplePurpleDark24]::new()
        $this.ColorMap[253] = [CCApplePurpleDark24]::new()
        $this.ColorMap[254] = [CCApplePurpleDark24]::new()
        $this.ColorMap[255] = [CCApplePurpleDark24]::new()
        $this.ColorMap[256] = [ATBackgroundColor24None]::new()
        $this.ColorMap[257] = [ATBackgroundColor24None]::new()
        $this.ColorMap[258] = [ATBackgroundColor24None]::new() # End Row 6
        $this.ColorMap[259] = [ATBackgroundColor24None]::new()
        $this.ColorMap[260] = [ATBackgroundColor24None]::new()
        $this.ColorMap[261] = [ATBackgroundColor24None]::new()
        $this.ColorMap[262] = [CCApplePurpleDark24]::new()
        $this.ColorMap[263] = [CCApplePurpleDark24]::new()
        $this.ColorMap[264] = [CCApplePurpleDark24]::new()
        $this.ColorMap[265] = [CCApplePurpleDark24]::new()
        $this.ColorMap[266] = [CCApplePurpleDark24]::new()
        $this.ColorMap[267] = [CCApplePurpleDark24]::new()
        $this.ColorMap[268] = [CCApplePurpleDark24]::new()
        $this.ColorMap[269] = [CCApplePurpleDark24]::new()
        $this.ColorMap[270] = [CCApplePurpleDark24]::new()
        $this.ColorMap[271] = [CCApplePurpleDark24]::new()
        $this.ColorMap[272] = [CCApplePurpleDark24]::new()
        $this.ColorMap[273] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[274] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[275] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[276] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[277] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[278] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[279] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[280] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[281] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[282] = [CCApplePurpleDark24]::new()
        $this.ColorMap[283] = [CCApplePurpleDark24]::new()
        $this.ColorMap[284] = [CCApplePurpleDark24]::new()
        $this.ColorMap[285] = [CCApplePurpleDark24]::new()
        $this.ColorMap[286] = [CCApplePurpleDark24]::new()
        $this.ColorMap[287] = [CCApplePurpleDark24]::new()
        $this.ColorMap[288] = [CCApplePurpleDark24]::new()
        $this.ColorMap[289] = [CCApplePurpleDark24]::new()
        $this.ColorMap[290] = [CCApplePurpleDark24]::new()
        $this.ColorMap[291] = [CCApplePurpleDark24]::new()
        $this.ColorMap[292] = [CCApplePurpleDark24]::new()
        $this.ColorMap[293] = [ATBackgroundColor24None]::new()
        $this.ColorMap[294] = [ATBackgroundColor24None]::new()
        $this.ColorMap[295] = [ATBackgroundColor24None]::new() # End Row 7
        $this.ColorMap[296] = [ATBackgroundColor24None]::new()
        $this.ColorMap[297] = [ATBackgroundColor24None]::new()
        $this.ColorMap[298] = [ATBackgroundColor24None]::new()
        $this.ColorMap[299] = [CCApplePurpleDark24]::new()
        $this.ColorMap[300] = [CCApplePurpleDark24]::new()
        $this.ColorMap[301] = [CCApplePurpleDark24]::new()
        $this.ColorMap[302] = [CCApplePurpleDark24]::new()
        $this.ColorMap[303] = [CCApplePurpleDark24]::new()
        $this.ColorMap[304] = [CCApplePurpleDark24]::new()
        $this.ColorMap[305] = [CCApplePurpleDark24]::new()
        $this.ColorMap[306] = [CCApplePurpleDark24]::new()
        $this.ColorMap[307] = [CCApplePurpleDark24]::new()
        $this.ColorMap[308] = [CCApplePurpleDark24]::new()
        $this.ColorMap[309] = [CCApplePurpleDark24]::new()
        $this.ColorMap[310] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[311] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[312] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[313] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[314] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[315] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[316] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[317] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[318] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[319] = [CCApplePurpleDark24]::new()
        $this.ColorMap[320] = [CCApplePurpleDark24]::new()
        $this.ColorMap[321] = [CCApplePurpleDark24]::new()
        $this.ColorMap[322] = [CCApplePurpleDark24]::new()
        $this.ColorMap[323] = [CCApplePurpleDark24]::new()
        $this.ColorMap[324] = [CCApplePurpleDark24]::new()
        $this.ColorMap[325] = [CCApplePurpleDark24]::new()
        $this.ColorMap[326] = [CCApplePurpleDark24]::new()
        $this.ColorMap[327] = [CCApplePurpleDark24]::new()
        $this.ColorMap[328] = [CCApplePurpleDark24]::new()
        $this.ColorMap[329] = [CCApplePurpleDark24]::new()
        $this.ColorMap[330] = [ATBackgroundColor24None]::new()
        $this.ColorMap[331] = [ATBackgroundColor24None]::new()
        $this.ColorMap[332] = [ATBackgroundColor24None]::new() # End Row 8
        $this.ColorMap[333] = [ATBackgroundColor24None]::new()
        $this.ColorMap[334] = [ATBackgroundColor24None]::new()
        $this.ColorMap[335] = [CCApplePurpleDark24]::new()
        $this.ColorMap[336] = [CCApplePurpleDark24]::new()
        $this.ColorMap[337] = [CCApplePurpleDark24]::new()
        $this.ColorMap[338] = [CCApplePurpleDark24]::new()
        $this.ColorMap[339] = [CCApplePurpleDark24]::new()
        $this.ColorMap[340] = [CCApplePurpleDark24]::new()
        $this.ColorMap[341] = [CCApplePurpleDark24]::new()
        $this.ColorMap[342] = [CCApplePurpleDark24]::new()
        $this.ColorMap[343] = [CCApplePurpleDark24]::new()
        $this.ColorMap[344] = [CCApplePurpleDark24]::new()
        $this.ColorMap[345] = [ATBackgroundColor24None]::new()
        $this.ColorMap[346] = [ATBackgroundColor24None]::new()
        $this.ColorMap[347] = [CCApplePurpleDark24]::new()
        $this.ColorMap[348] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[349] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[350] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[351] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[352] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[353] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[354] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[355] = [CCApplePurpleDark24]::new()
        $this.ColorMap[356] = [ATBackgroundColor24None]::new()
        $this.ColorMap[357] = [ATBackgroundColor24None]::new()
        $this.ColorMap[358] = [CCApplePurpleDark24]::new()
        $this.ColorMap[359] = [CCApplePurpleDark24]::new()
        $this.ColorMap[360] = [CCApplePurpleDark24]::new()
        $this.ColorMap[361] = [CCApplePurpleDark24]::new()
        $this.ColorMap[362] = [CCApplePurpleDark24]::new()
        $this.ColorMap[363] = [CCApplePurpleDark24]::new()
        $this.ColorMap[364] = [CCApplePurpleDark24]::new()
        $this.ColorMap[365] = [CCApplePurpleDark24]::new()
        $this.ColorMap[366] = [CCApplePurpleDark24]::new()
        $this.ColorMap[367] = [CCApplePurpleDark24]::new()
        $this.ColorMap[368] = [ATBackgroundColor24None]::new()
        $this.ColorMap[369] = [ATBackgroundColor24None]::new() # End Row 9
        $this.ColorMap[370] = [ATBackgroundColor24None]::new()
        $this.ColorMap[371] = [ATBackgroundColor24None]::new()
        $this.ColorMap[372] = [CCApplePurpleDark24]::new()
        $this.ColorMap[373] = [CCApplePurpleDark24]::new()
        $this.ColorMap[374] = [CCApplePurpleDark24]::new()
        $this.ColorMap[375] = [CCApplePurpleDark24]::new()
        $this.ColorMap[376] = [ATBackgroundColor24None]::new()
        $this.ColorMap[377] = [ATBackgroundColor24None]::new()
        $this.ColorMap[378] = [CCApplePurpleDark24]::new()
        $this.ColorMap[379] = [CCApplePurpleDark24]::new()
        $this.ColorMap[380] = [CCApplePurpleDark24]::new()
        $this.ColorMap[381] = [ATBackgroundColor24None]::new()
        $this.ColorMap[382] = [ATBackgroundColor24None]::new()
        $this.ColorMap[383] = [ATBackgroundColor24None]::new()
        $this.ColorMap[384] = [ATBackgroundColor24None]::new()
        $this.ColorMap[385] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[386] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[387] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[388] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[389] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[390] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[391] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[392] = [ATBackgroundColor24None]::new()
        $this.ColorMap[393] = [ATBackgroundColor24None]::new()
        $this.ColorMap[394] = [ATBackgroundColor24None]::new()
        $this.ColorMap[395] = [ATBackgroundColor24None]::new()
        $this.ColorMap[396] = [CCApplePurpleDark24]::new()
        $this.ColorMap[397] = [CCApplePurpleDark24]::new()
        $this.ColorMap[398] = [CCApplePurpleDark24]::new()
        $this.ColorMap[399] = [ATBackgroundColor24None]::new()
        $this.ColorMap[400] = [ATBackgroundColor24None]::new()
        $this.ColorMap[401] = [CCApplePurpleDark24]::new()
        $this.ColorMap[402] = [CCApplePurpleDark24]::new()
        $this.ColorMap[403] = [CCApplePurpleDark24]::new()
        $this.ColorMap[404] = [CCApplePurpleDark24]::new()
        $this.ColorMap[405] = [ATBackgroundColor24None]::new()
        $this.ColorMap[406] = [ATBackgroundColor24None]::new() # End Row 10
        $this.ColorMap[407] = [ATBackgroundColor24None]::new()
        $this.ColorMap[408] = [ATBackgroundColor24None]::new()
        $this.ColorMap[409] = [CCApplePurpleDark24]::new()
        $this.ColorMap[410] = [CCApplePurpleDark24]::new()
        $this.ColorMap[411] = [ATBackgroundColor24None]::new()
        $this.ColorMap[412] = [ATBackgroundColor24None]::new()
        $this.ColorMap[413] = [ATBackgroundColor24None]::new()
        $this.ColorMap[414] = [ATBackgroundColor24None]::new()
        $this.ColorMap[415] = [ATBackgroundColor24None]::new()
        $this.ColorMap[416] = [CCApplePurpleDark24]::new()
        $this.ColorMap[417] = [ATBackgroundColor24None]::new()
        $this.ColorMap[418] = [ATBackgroundColor24None]::new()
        $this.ColorMap[419] = [ATBackgroundColor24None]::new()
        $this.ColorMap[420] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[421] = [ATBackgroundColor24None]::new()
        $this.ColorMap[422] = [ATBackgroundColor24None]::new()
        $this.ColorMap[423] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[424] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[425] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[426] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[427] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[428] = [ATBackgroundColor24None]::new()
        $this.ColorMap[429] = [ATBackgroundColor24None]::new()
        $this.ColorMap[430] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[431] = [ATBackgroundColor24None]::new()
        $this.ColorMap[432] = [ATBackgroundColor24None]::new()
        $this.ColorMap[433] = [ATBackgroundColor24None]::new()
        $this.ColorMap[434] = [CCApplePurpleDark24]::new()
        $this.ColorMap[435] = [ATBackgroundColor24None]::new()
        $this.ColorMap[436] = [ATBackgroundColor24None]::new()
        $this.ColorMap[437] = [ATBackgroundColor24None]::new()
        $this.ColorMap[438] = [ATBackgroundColor24None]::new()
        $this.ColorMap[439] = [ATBackgroundColor24None]::new()
        $this.ColorMap[440] = [CCApplePurpleDark24]::new()
        $this.ColorMap[441] = [CCApplePurpleDark24]::new()
        $this.ColorMap[442] = [ATBackgroundColor24None]::new()
        $this.ColorMap[443] = [ATBackgroundColor24None]::new() # End Row 11
        $this.ColorMap[444] = [ATBackgroundColor24None]::new()
        $this.ColorMap[445] = [ATBackgroundColor24None]::new()
        $this.ColorMap[446] = [CCApplePurpleDark24]::new()
        $this.ColorMap[447] = [ATBackgroundColor24None]::new()
        $this.ColorMap[448] = [ATBackgroundColor24None]::new()
        $this.ColorMap[449] = [ATBackgroundColor24None]::new()
        $this.ColorMap[450] = [ATBackgroundColor24None]::new()
        $this.ColorMap[451] = [ATBackgroundColor24None]::new()
        $this.ColorMap[452] = [ATBackgroundColor24None]::new()
        $this.ColorMap[453] = [ATBackgroundColor24None]::new()
        $this.ColorMap[454] = [ATBackgroundColor24None]::new()
        $this.ColorMap[455] = [ATBackgroundColor24None]::new()
        $this.ColorMap[456] = [ATBackgroundColor24None]::new()
        $this.ColorMap[457] = [ATBackgroundColor24None]::new()
        $this.ColorMap[458] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[459] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[460] = [ATBackgroundColor24None]::new()
        $this.ColorMap[461] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[462] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[463] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[464] = [ATBackgroundColor24None]::new()
        $this.ColorMap[465] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[466] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[467] = [ATBackgroundColor24None]::new()
        $this.ColorMap[468] = [ATBackgroundColor24None]::new()
        $this.ColorMap[469] = [ATBackgroundColor24None]::new()
        $this.ColorMap[470] = [ATBackgroundColor24None]::new()
        $this.ColorMap[471] = [ATBackgroundColor24None]::new()
        $this.ColorMap[472] = [ATBackgroundColor24None]::new()
        $this.ColorMap[473] = [ATBackgroundColor24None]::new()
        $this.ColorMap[474] = [ATBackgroundColor24None]::new()
        $this.ColorMap[475] = [ATBackgroundColor24None]::new()
        $this.ColorMap[476] = [ATBackgroundColor24None]::new()
        $this.ColorMap[477] = [ATBackgroundColor24None]::new()
        $this.ColorMap[478] = [CCApplePurpleDark24]::new()
        $this.ColorMap[479] = [ATBackgroundColor24None]::new()
        $this.ColorMap[480] = [ATBackgroundColor24None]::new() # End Row 12
        $this.ColorMap[481] = [ATBackgroundColor24None]::new()
        $this.ColorMap[482] = [ATBackgroundColor24None]::new()
        $this.ColorMap[483] = [ATBackgroundColor24None]::new()
        $this.ColorMap[484] = [ATBackgroundColor24None]::new()
        $this.ColorMap[485] = [ATBackgroundColor24None]::new()
        $this.ColorMap[486] = [ATBackgroundColor24None]::new()
        $this.ColorMap[487] = [ATBackgroundColor24None]::new()
        $this.ColorMap[488] = [ATBackgroundColor24None]::new()
        $this.ColorMap[489] = [ATBackgroundColor24None]::new()
        $this.ColorMap[490] = [ATBackgroundColor24None]::new()
        $this.ColorMap[491] = [ATBackgroundColor24None]::new()
        $this.ColorMap[492] = [ATBackgroundColor24None]::new()
        $this.ColorMap[493] = [ATBackgroundColor24None]::new()
        $this.ColorMap[494] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[495] = [ATBackgroundColor24None]::new()
        $this.ColorMap[496] = [ATBackgroundColor24None]::new()
        $this.ColorMap[497] = [ATBackgroundColor24None]::new()
        $this.ColorMap[498] = [ATBackgroundColor24None]::new()
        $this.ColorMap[499] = [CCAppleIndigoDark24]::new()
        $this.ColorMap[500] = [ATBackgroundColor24None]::new()
        $this.ColorMap[501] = [ATBackgroundColor24None]::new()
        $this.ColorMap[502] = [ATBackgroundColor24None]::new()
        $this.ColorMap[503] = [ATBackgroundColor24None]::new()
        $this.ColorMap[504] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[505] = [ATBackgroundColor24None]::new()
        $this.ColorMap[506] = [ATBackgroundColor24None]::new()
        $this.ColorMap[507] = [ATBackgroundColor24None]::new()
        $this.ColorMap[508] = [ATBackgroundColor24None]::new()
        $this.ColorMap[509] = [ATBackgroundColor24None]::new()
        $this.ColorMap[510] = [ATBackgroundColor24None]::new()
        $this.ColorMap[511] = [ATBackgroundColor24None]::new()
        $this.ColorMap[512] = [ATBackgroundColor24None]::new()
        $this.ColorMap[513] = [ATBackgroundColor24None]::new()
        $this.ColorMap[514] = [ATBackgroundColor24None]::new()
        $this.ColorMap[515] = [ATBackgroundColor24None]::new()
        $this.ColorMap[516] = [ATBackgroundColor24None]::new()
        $this.ColorMap[517] = [ATBackgroundColor24None]::new() # End Row 13
        $this.ColorMap[518] = [ATBackgroundColor24None]::new()
        $this.ColorMap[519] = [ATBackgroundColor24None]::new()
        $this.ColorMap[520] = [ATBackgroundColor24None]::new()
        $this.ColorMap[521] = [ATBackgroundColor24None]::new()
        $this.ColorMap[522] = [ATBackgroundColor24None]::new()
        $this.ColorMap[523] = [ATBackgroundColor24None]::new()
        $this.ColorMap[524] = [ATBackgroundColor24None]::new()
        $this.ColorMap[525] = [ATBackgroundColor24None]::new()
        $this.ColorMap[526] = [ATBackgroundColor24None]::new()
        $this.ColorMap[527] = [ATBackgroundColor24None]::new()
        $this.ColorMap[528] = [ATBackgroundColor24None]::new()
        $this.ColorMap[529] = [ATBackgroundColor24None]::new()
        $this.ColorMap[530] = [ATBackgroundColor24None]::new()
        $this.ColorMap[531] = [ATBackgroundColor24None]::new()
        $this.ColorMap[532] = [ATBackgroundColor24None]::new()
        $this.ColorMap[533] = [ATBackgroundColor24None]::new()
        $this.ColorMap[534] = [ATBackgroundColor24None]::new()
        $this.ColorMap[535] = [ATBackgroundColor24None]::new()
        $this.ColorMap[536] = [ATBackgroundColor24None]::new()
        $this.ColorMap[537] = [ATBackgroundColor24None]::new()
        $this.ColorMap[538] = [ATBackgroundColor24None]::new()
        $this.ColorMap[539] = [ATBackgroundColor24None]::new()
        $this.ColorMap[540] = [ATBackgroundColor24None]::new()
        $this.ColorMap[541] = [ATBackgroundColor24None]::new()
        $this.ColorMap[542] = [ATBackgroundColor24None]::new()
        $this.ColorMap[543] = [ATBackgroundColor24None]::new()
        $this.ColorMap[544] = [ATBackgroundColor24None]::new()
        $this.ColorMap[545] = [ATBackgroundColor24None]::new()
        $this.ColorMap[546] = [ATBackgroundColor24None]::new()
        $this.ColorMap[547] = [ATBackgroundColor24None]::new()
        $this.ColorMap[548] = [ATBackgroundColor24None]::new()
        $this.ColorMap[549] = [ATBackgroundColor24None]::new()
        $this.ColorMap[550] = [ATBackgroundColor24None]::new()
        $this.ColorMap[551] = [ATBackgroundColor24None]::new()
        $this.ColorMap[552] = [ATBackgroundColor24None]::new()
        $this.ColorMap[553] = [ATBackgroundColor24None]::new()
        $this.ColorMap[554] = [ATBackgroundColor24None]::new() # End Row 14

        $this.CreateImageATString($this.ColorMap)
        $this.ColorMap = $null
    }
}

Class EEIWingblight : EEIInternalBase {
    EEIWingblight() : base() {
        $this.ColorMap[0]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[1]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[2]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[3]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[4]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[5]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[6]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[7]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[8]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[9]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[10]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[11]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[12]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[13]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[14]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[15]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[16]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[17]  = [CCApplePinkDark24]::new()
        $this.ColorMap[18]  = [CCApplePinkDark24]::new()
        $this.ColorMap[19]  = [CCApplePinkDark24]::new()
        $this.ColorMap[20]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[21]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[22]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[23]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[24]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[25]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[26]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[27]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[28]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[29]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[30]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[31]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[32]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[33]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[34]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[35]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[36]  = [ATBackgroundColor24None]::new() # End Row 0
        $this.ColorMap[37]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[38]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[39]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[40]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[41]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[42]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[43]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[44]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[45]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[46]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[47]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[48]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[49]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[50]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[51]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[52]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[53]  = [CCApplePinkDark24]::new()
        $this.ColorMap[54]  = [CCApplePinkDark24]::new()
        $this.ColorMap[55]  = [CCApplePinkDark24]::new()
        $this.ColorMap[56]  = [CCApplePinkDark24]::new()
        $this.ColorMap[57]  = [CCApplePinkDark24]::new()
        $this.ColorMap[58]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[59]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[60]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[61]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[62]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[63]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[64]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[65]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[66]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[67]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[68]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[69]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[70]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[71]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[72]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[73]  = [ATBackgroundColor24None]::new() # End Row 1
        $this.ColorMap[74]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[75]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[76]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[77]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[78]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[79]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[80]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[81]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[82]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[83]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[84]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[85]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[86]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[87]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[88]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[89]  = [CCApplePinkDark24]::new()
        $this.ColorMap[90]  = [CCApplePinkDark24]::new()
        $this.ColorMap[91]  = [CCAppleGrey6Light24]::new()
        $this.ColorMap[92]  = [CCApplePinkDark24]::new()
        $this.ColorMap[93]  = [CCAppleGrey6Light24]::new()
        $this.ColorMap[94]  = [CCApplePinkDark24]::new()
        $this.ColorMap[95]  = [CCApplePinkDark24]::new()
        $this.ColorMap[96]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[97]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[98]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[99]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[100] = [ATBackgroundColor24None]::new()
        $this.ColorMap[101] = [ATBackgroundColor24None]::new()
        $this.ColorMap[102] = [ATBackgroundColor24None]::new()
        $this.ColorMap[103] = [ATBackgroundColor24None]::new()
        $this.ColorMap[104] = [ATBackgroundColor24None]::new()
        $this.ColorMap[105] = [ATBackgroundColor24None]::new()
        $this.ColorMap[106] = [ATBackgroundColor24None]::new()
        $this.ColorMap[107] = [ATBackgroundColor24None]::new()
        $this.ColorMap[108] = [ATBackgroundColor24None]::new()
        $this.ColorMap[109] = [ATBackgroundColor24None]::new()
        $this.ColorMap[110] = [ATBackgroundColor24None]::new() # End Row 2
        $this.ColorMap[111] = [ATBackgroundColor24None]::new()
        $this.ColorMap[112] = [ATBackgroundColor24None]::new()
        $this.ColorMap[113] = [ATBackgroundColor24None]::new()
        $this.ColorMap[114] = [ATBackgroundColor24None]::new()
        $this.ColorMap[115] = [ATBackgroundColor24None]::new()
        $this.ColorMap[116] = [CCApplePurpleDark24]::new()
        $this.ColorMap[117] = [CCApplePurpleDark24]::new()
        $this.ColorMap[118] = [ATBackgroundColor24None]::new()
        $this.ColorMap[119] = [ATBackgroundColor24None]::new()
        $this.ColorMap[120] = [ATBackgroundColor24None]::new()
        $this.ColorMap[121] = [ATBackgroundColor24None]::new()
        $this.ColorMap[122] = [CCApplePurpleDark24]::new()
        $this.ColorMap[123] = [CCApplePurpleDark24]::new()
        $this.ColorMap[124] = [ATBackgroundColor24None]::new()
        $this.ColorMap[125] = [ATBackgroundColor24None]::new()
        $this.ColorMap[126] = [ATBackgroundColor24None]::new()
        $this.ColorMap[127] = [CCApplePinkDark24]::new()
        $this.ColorMap[128] = [CCApplePinkDark24]::new()
        $this.ColorMap[129] = [CCApplePinkDark24]::new()
        $this.ColorMap[130] = [CCApplePinkDark24]::new()
        $this.ColorMap[131] = [CCApplePinkDark24]::new()
        $this.ColorMap[132] = [ATBackgroundColor24None]::new()
        $this.ColorMap[133] = [ATBackgroundColor24None]::new()
        $this.ColorMap[134] = [ATBackgroundColor24None]::new()
        $this.ColorMap[135] = [CCApplePurpleDark24]::new()
        $this.ColorMap[136] = [CCApplePurpleDark24]::new()
        $this.ColorMap[137] = [ATBackgroundColor24None]::new()
        $this.ColorMap[138] = [ATBackgroundColor24None]::new()
        $this.ColorMap[139] = [ATBackgroundColor24None]::new()
        $this.ColorMap[140] = [ATBackgroundColor24None]::new()
        $this.ColorMap[141] = [CCApplePurpleDark24]::new()
        $this.ColorMap[142] = [CCApplePurpleDark24]::new()
        $this.ColorMap[143] = [ATBackgroundColor24None]::new()
        $this.ColorMap[144] = [ATBackgroundColor24None]::new()
        $this.ColorMap[145] = [ATBackgroundColor24None]::new()
        $this.ColorMap[146] = [ATBackgroundColor24None]::new()
        $this.ColorMap[147] = [ATBackgroundColor24None]::new() # End Row 3
        $this.ColorMap[148] = [ATBackgroundColor24None]::new()
        $this.ColorMap[149] = [ATBackgroundColor24None]::new()
        $this.ColorMap[150] = [ATBackgroundColor24None]::new()
        $this.ColorMap[151] = [ATBackgroundColor24None]::new()
        $this.ColorMap[152] = [CCApplePurpleDark24]::new()
        $this.ColorMap[153] = [CCApplePurpleDark24]::new()
        $this.ColorMap[154] = [CCApplePurpleDark24]::new()
        $this.ColorMap[155] = [CCApplePurpleDark24]::new()
        $this.ColorMap[156] = [CCApplePurpleDark24]::new()
        $this.ColorMap[157] = [ATBackgroundColor24None]::new()
        $this.ColorMap[158] = [CCApplePurpleDark24]::new()
        $this.ColorMap[159] = [CCApplePurpleDark24]::new()
        $this.ColorMap[160] = [CCApplePurpleDark24]::new()
        $this.ColorMap[161] = [CCApplePurpleDark24]::new()
        $this.ColorMap[162] = [CCApplePurpleDark24]::new()
        $this.ColorMap[163] = [CCApplePinkDark24]::new()
        $this.ColorMap[164] = [CCApplePinkDark24]::new()
        $this.ColorMap[165] = [CCApplePinkDark24]::new()
        $this.ColorMap[166] = [CCApplePinkDark24]::new()
        $this.ColorMap[167] = [CCApplePinkDark24]::new()
        $this.ColorMap[168] = [CCApplePinkDark24]::new()
        $this.ColorMap[169] = [CCApplePinkDark24]::new()
        $this.ColorMap[170] = [CCApplePurpleDark24]::new()
        $this.ColorMap[171] = [CCApplePurpleDark24]::new()
        $this.ColorMap[172] = [CCApplePurpleDark24]::new()
        $this.ColorMap[173] = [CCApplePurpleDark24]::new()
        $this.ColorMap[174] = [CCApplePurpleDark24]::new()
        $this.ColorMap[175] = [ATBackgroundColor24None]::new()
        $this.ColorMap[176] = [CCApplePurpleDark24]::new()
        $this.ColorMap[177] = [CCApplePurpleDark24]::new()
        $this.ColorMap[178] = [CCApplePurpleDark24]::new()
        $this.ColorMap[179] = [CCApplePurpleDark24]::new()
        $this.ColorMap[180] = [CCApplePurpleDark24]::new()
        $this.ColorMap[181] = [ATBackgroundColor24None]::new()
        $this.ColorMap[182] = [ATBackgroundColor24None]::new()
        $this.ColorMap[183] = [ATBackgroundColor24None]::new()
        $this.ColorMap[184] = [ATBackgroundColor24None]::new() # End Row 4
        $this.ColorMap[185] = [ATBackgroundColor24None]::new()
        $this.ColorMap[186] = [ATBackgroundColor24None]::new()
        $this.ColorMap[187] = [ATBackgroundColor24None]::new()
        $this.ColorMap[188] = [ATBackgroundColor24None]::new()
        $this.ColorMap[189] = [CCApplePurpleDark24]::new()
        $this.ColorMap[190] = [CCApplePurpleDark24]::new()
        $this.ColorMap[191] = [CCApplePurpleDark24]::new()
        $this.ColorMap[192] = [CCApplePurpleDark24]::new()
        $this.ColorMap[193] = [CCApplePurpleDark24]::new()
        $this.ColorMap[194] = [CCApplePurpleDark24]::new()
        $this.ColorMap[195] = [CCApplePurpleDark24]::new()
        $this.ColorMap[196] = [CCApplePurpleDark24]::new()
        $this.ColorMap[197] = [CCApplePurpleDark24]::new()
        $this.ColorMap[198] = [CCApplePurpleDark24]::new()
        $this.ColorMap[199] = [CCApplePinkDark24]::new()
        $this.ColorMap[200] = [CCApplePinkDark24]::new()
        $this.ColorMap[201] = [CCApplePinkDark24]::new()
        $this.ColorMap[202] = [CCApplePinkDark24]::new()
        $this.ColorMap[203] = [CCApplePinkDark24]::new()
        $this.ColorMap[204] = [CCApplePinkDark24]::new()
        $this.ColorMap[205] = [CCApplePinkDark24]::new()
        $this.ColorMap[206] = [CCApplePinkDark24]::new()
        $this.ColorMap[207] = [CCApplePinkDark24]::new()
        $this.ColorMap[208] = [CCApplePurpleDark24]::new()
        $this.ColorMap[209] = [CCApplePurpleDark24]::new()
        $this.ColorMap[210] = [CCApplePurpleDark24]::new()
        $this.ColorMap[211] = [CCApplePurpleDark24]::new()
        $this.ColorMap[212] = [CCApplePurpleDark24]::new()
        $this.ColorMap[213] = [CCApplePurpleDark24]::new()
        $this.ColorMap[214] = [CCApplePurpleDark24]::new()
        $this.ColorMap[215] = [CCApplePurpleDark24]::new()
        $this.ColorMap[216] = [CCApplePurpleDark24]::new()
        $this.ColorMap[217] = [CCApplePurpleDark24]::new()
        $this.ColorMap[218] = [ATBackgroundColor24None]::new()
        $this.ColorMap[219] = [ATBackgroundColor24None]::new()
        $this.ColorMap[220] = [ATBackgroundColor24None]::new()
        $this.ColorMap[221] = [ATBackgroundColor24None]::new() # End Row 5
        $this.ColorMap[222] = [ATBackgroundColor24None]::new()
        $this.ColorMap[223] = [ATBackgroundColor24None]::new()
        $this.ColorMap[224] = [ATBackgroundColor24None]::new()
        $this.ColorMap[225] = [CCApplePurpleDark24]::new()
        $this.ColorMap[226] = [CCApplePurpleDark24]::new()
        $this.ColorMap[227] = [CCApplePurpleDark24]::new()
        $this.ColorMap[228] = [CCApplePurpleDark24]::new()
        $this.ColorMap[229] = [CCApplePurpleDark24]::new()
        $this.ColorMap[230] = [CCApplePurpleDark24]::new()
        $this.ColorMap[231] = [CCApplePurpleDark24]::new()
        $this.ColorMap[232] = [CCApplePurpleDark24]::new()
        $this.ColorMap[233] = [CCApplePurpleDark24]::new()
        $this.ColorMap[234] = [CCApplePurpleDark24]::new()
        $this.ColorMap[235] = [CCApplePurpleDark24]::new()
        $this.ColorMap[236] = [CCApplePinkDark24]::new()
        $this.ColorMap[237] = [CCApplePinkDark24]::new()
        $this.ColorMap[238] = [CCApplePinkDark24]::new()
        $this.ColorMap[239] = [CCApplePinkDark24]::new()
        $this.ColorMap[240] = [CCApplePinkDark24]::new()
        $this.ColorMap[241] = [CCApplePinkDark24]::new()
        $this.ColorMap[242] = [CCApplePinkDark24]::new()
        $this.ColorMap[243] = [CCApplePinkDark24]::new()
        $this.ColorMap[244] = [CCApplePinkDark24]::new()
        $this.ColorMap[245] = [CCApplePurpleDark24]::new()
        $this.ColorMap[246] = [CCApplePurpleDark24]::new()
        $this.ColorMap[247] = [CCApplePurpleDark24]::new()
        $this.ColorMap[248] = [CCApplePurpleDark24]::new()
        $this.ColorMap[249] = [CCApplePurpleDark24]::new()
        $this.ColorMap[250] = [CCApplePurpleDark24]::new()
        $this.ColorMap[251] = [CCApplePurpleDark24]::new()
        $this.ColorMap[252] = [CCApplePurpleDark24]::new()
        $this.ColorMap[253] = [CCApplePurpleDark24]::new()
        $this.ColorMap[254] = [CCApplePurpleDark24]::new()
        $this.ColorMap[255] = [CCApplePurpleDark24]::new()
        $this.ColorMap[256] = [ATBackgroundColor24None]::new()
        $this.ColorMap[257] = [ATBackgroundColor24None]::new()
        $this.ColorMap[258] = [ATBackgroundColor24None]::new() # End Row 6
        $this.ColorMap[259] = [ATBackgroundColor24None]::new()
        $this.ColorMap[260] = [ATBackgroundColor24None]::new()
        $this.ColorMap[261] = [ATBackgroundColor24None]::new()
        $this.ColorMap[262] = [CCApplePurpleDark24]::new()
        $this.ColorMap[263] = [CCApplePurpleDark24]::new()
        $this.ColorMap[264] = [CCApplePurpleDark24]::new()
        $this.ColorMap[265] = [CCApplePurpleDark24]::new()
        $this.ColorMap[266] = [CCApplePurpleDark24]::new()
        $this.ColorMap[267] = [CCApplePurpleDark24]::new()
        $this.ColorMap[268] = [CCApplePurpleDark24]::new()
        $this.ColorMap[269] = [CCApplePurpleDark24]::new()
        $this.ColorMap[270] = [CCApplePurpleDark24]::new()
        $this.ColorMap[271] = [CCApplePurpleDark24]::new()
        $this.ColorMap[272] = [CCApplePurpleDark24]::new()
        $this.ColorMap[273] = [CCApplePinkDark24]::new()
        $this.ColorMap[274] = [CCApplePinkDark24]::new()
        $this.ColorMap[275] = [CCApplePinkDark24]::new()
        $this.ColorMap[276] = [CCApplePinkDark24]::new()
        $this.ColorMap[277] = [CCApplePinkDark24]::new()
        $this.ColorMap[278] = [CCApplePinkDark24]::new()
        $this.ColorMap[279] = [CCApplePinkDark24]::new()
        $this.ColorMap[280] = [CCApplePinkDark24]::new()
        $this.ColorMap[281] = [CCApplePinkDark24]::new()
        $this.ColorMap[282] = [CCApplePurpleDark24]::new()
        $this.ColorMap[283] = [CCApplePurpleDark24]::new()
        $this.ColorMap[284] = [CCApplePurpleDark24]::new()
        $this.ColorMap[285] = [CCApplePurpleDark24]::new()
        $this.ColorMap[286] = [CCApplePurpleDark24]::new()
        $this.ColorMap[287] = [CCApplePurpleDark24]::new()
        $this.ColorMap[288] = [CCApplePurpleDark24]::new()
        $this.ColorMap[289] = [CCApplePurpleDark24]::new()
        $this.ColorMap[290] = [CCApplePurpleDark24]::new()
        $this.ColorMap[291] = [CCApplePurpleDark24]::new()
        $this.ColorMap[292] = [CCApplePurpleDark24]::new()
        $this.ColorMap[293] = [ATBackgroundColor24None]::new()
        $this.ColorMap[294] = [ATBackgroundColor24None]::new()
        $this.ColorMap[295] = [ATBackgroundColor24None]::new() # End Row 7
        $this.ColorMap[296] = [ATBackgroundColor24None]::new()
        $this.ColorMap[297] = [ATBackgroundColor24None]::new()
        $this.ColorMap[298] = [ATBackgroundColor24None]::new()
        $this.ColorMap[299] = [CCApplePurpleDark24]::new()
        $this.ColorMap[300] = [CCApplePurpleDark24]::new()
        $this.ColorMap[301] = [CCApplePurpleDark24]::new()
        $this.ColorMap[302] = [CCApplePurpleDark24]::new()
        $this.ColorMap[303] = [CCApplePurpleDark24]::new()
        $this.ColorMap[304] = [CCApplePurpleDark24]::new()
        $this.ColorMap[305] = [CCApplePurpleDark24]::new()
        $this.ColorMap[306] = [CCApplePurpleDark24]::new()
        $this.ColorMap[307] = [CCApplePurpleDark24]::new()
        $this.ColorMap[308] = [CCApplePurpleDark24]::new()
        $this.ColorMap[309] = [CCApplePurpleDark24]::new()
        $this.ColorMap[310] = [CCApplePinkDark24]::new()
        $this.ColorMap[311] = [CCApplePinkDark24]::new()
        $this.ColorMap[312] = [CCApplePinkDark24]::new()
        $this.ColorMap[313] = [CCApplePinkDark24]::new()
        $this.ColorMap[314] = [CCApplePinkDark24]::new()
        $this.ColorMap[315] = [CCApplePinkDark24]::new()
        $this.ColorMap[316] = [CCApplePinkDark24]::new()
        $this.ColorMap[317] = [CCApplePinkDark24]::new()
        $this.ColorMap[318] = [CCApplePinkDark24]::new()
        $this.ColorMap[319] = [CCApplePurpleDark24]::new()
        $this.ColorMap[320] = [CCApplePurpleDark24]::new()
        $this.ColorMap[321] = [CCApplePurpleDark24]::new()
        $this.ColorMap[322] = [CCApplePurpleDark24]::new()
        $this.ColorMap[323] = [CCApplePurpleDark24]::new()
        $this.ColorMap[324] = [CCApplePurpleDark24]::new()
        $this.ColorMap[325] = [CCApplePurpleDark24]::new()
        $this.ColorMap[326] = [CCApplePurpleDark24]::new()
        $this.ColorMap[327] = [CCApplePurpleDark24]::new()
        $this.ColorMap[328] = [CCApplePurpleDark24]::new()
        $this.ColorMap[329] = [CCApplePurpleDark24]::new()
        $this.ColorMap[330] = [ATBackgroundColor24None]::new()
        $this.ColorMap[331] = [ATBackgroundColor24None]::new()
        $this.ColorMap[332] = [ATBackgroundColor24None]::new() # End Row 8
        $this.ColorMap[333] = [ATBackgroundColor24None]::new()
        $this.ColorMap[334] = [ATBackgroundColor24None]::new()
        $this.ColorMap[335] = [CCApplePurpleDark24]::new()
        $this.ColorMap[336] = [CCApplePurpleDark24]::new()
        $this.ColorMap[337] = [CCApplePurpleDark24]::new()
        $this.ColorMap[338] = [CCApplePurpleDark24]::new()
        $this.ColorMap[339] = [CCApplePurpleDark24]::new()
        $this.ColorMap[340] = [CCApplePurpleDark24]::new()
        $this.ColorMap[341] = [CCApplePurpleDark24]::new()
        $this.ColorMap[342] = [CCApplePurpleDark24]::new()
        $this.ColorMap[343] = [CCApplePurpleDark24]::new()
        $this.ColorMap[344] = [CCApplePurpleDark24]::new()
        $this.ColorMap[345] = [ATBackgroundColor24None]::new()
        $this.ColorMap[346] = [ATBackgroundColor24None]::new()
        $this.ColorMap[347] = [CCApplePurpleDark24]::new()
        $this.ColorMap[348] = [CCApplePinkDark24]::new()
        $this.ColorMap[349] = [CCApplePinkDark24]::new()
        $this.ColorMap[350] = [CCApplePinkDark24]::new()
        $this.ColorMap[351] = [CCApplePinkDark24]::new()
        $this.ColorMap[352] = [CCApplePinkDark24]::new()
        $this.ColorMap[353] = [CCApplePinkDark24]::new()
        $this.ColorMap[354] = [CCApplePinkDark24]::new()
        $this.ColorMap[355] = [CCApplePurpleDark24]::new()
        $this.ColorMap[356] = [ATBackgroundColor24None]::new()
        $this.ColorMap[357] = [ATBackgroundColor24None]::new()
        $this.ColorMap[358] = [CCApplePurpleDark24]::new()
        $this.ColorMap[359] = [CCApplePurpleDark24]::new()
        $this.ColorMap[360] = [CCApplePurpleDark24]::new()
        $this.ColorMap[361] = [CCApplePurpleDark24]::new()
        $this.ColorMap[362] = [CCApplePurpleDark24]::new()
        $this.ColorMap[363] = [CCApplePurpleDark24]::new()
        $this.ColorMap[364] = [CCApplePurpleDark24]::new()
        $this.ColorMap[365] = [CCApplePurpleDark24]::new()
        $this.ColorMap[366] = [CCApplePurpleDark24]::new()
        $this.ColorMap[367] = [CCApplePurpleDark24]::new()
        $this.ColorMap[368] = [ATBackgroundColor24None]::new()
        $this.ColorMap[369] = [ATBackgroundColor24None]::new() # End Row 9
        $this.ColorMap[370] = [ATBackgroundColor24None]::new()
        $this.ColorMap[371] = [ATBackgroundColor24None]::new()
        $this.ColorMap[372] = [CCApplePurpleDark24]::new()
        $this.ColorMap[373] = [CCApplePurpleDark24]::new()
        $this.ColorMap[374] = [CCApplePurpleDark24]::new()
        $this.ColorMap[375] = [CCApplePurpleDark24]::new()
        $this.ColorMap[376] = [ATBackgroundColor24None]::new()
        $this.ColorMap[377] = [ATBackgroundColor24None]::new()
        $this.ColorMap[378] = [CCApplePurpleDark24]::new()
        $this.ColorMap[379] = [CCApplePurpleDark24]::new()
        $this.ColorMap[380] = [CCApplePurpleDark24]::new()
        $this.ColorMap[381] = [ATBackgroundColor24None]::new()
        $this.ColorMap[382] = [ATBackgroundColor24None]::new()
        $this.ColorMap[383] = [ATBackgroundColor24None]::new()
        $this.ColorMap[384] = [ATBackgroundColor24None]::new()
        $this.ColorMap[385] = [CCApplePinkDark24]::new()
        $this.ColorMap[386] = [CCApplePinkDark24]::new()
        $this.ColorMap[387] = [CCApplePinkDark24]::new()
        $this.ColorMap[388] = [CCApplePinkDark24]::new()
        $this.ColorMap[389] = [CCApplePinkDark24]::new()
        $this.ColorMap[390] = [CCApplePinkDark24]::new()
        $this.ColorMap[391] = [CCApplePinkDark24]::new()
        $this.ColorMap[392] = [ATBackgroundColor24None]::new()
        $this.ColorMap[393] = [ATBackgroundColor24None]::new()
        $this.ColorMap[394] = [ATBackgroundColor24None]::new()
        $this.ColorMap[395] = [ATBackgroundColor24None]::new()
        $this.ColorMap[396] = [CCApplePurpleDark24]::new()
        $this.ColorMap[397] = [CCApplePurpleDark24]::new()
        $this.ColorMap[398] = [CCApplePurpleDark24]::new()
        $this.ColorMap[399] = [ATBackgroundColor24None]::new()
        $this.ColorMap[400] = [ATBackgroundColor24None]::new()
        $this.ColorMap[401] = [CCApplePurpleDark24]::new()
        $this.ColorMap[402] = [CCApplePurpleDark24]::new()
        $this.ColorMap[403] = [CCApplePurpleDark24]::new()
        $this.ColorMap[404] = [CCApplePurpleDark24]::new()
        $this.ColorMap[405] = [ATBackgroundColor24None]::new()
        $this.ColorMap[406] = [ATBackgroundColor24None]::new() # End Row 10
        $this.ColorMap[407] = [ATBackgroundColor24None]::new()
        $this.ColorMap[408] = [ATBackgroundColor24None]::new()
        $this.ColorMap[409] = [CCApplePurpleDark24]::new()
        $this.ColorMap[410] = [CCApplePurpleDark24]::new()
        $this.ColorMap[411] = [ATBackgroundColor24None]::new()
        $this.ColorMap[412] = [ATBackgroundColor24None]::new()
        $this.ColorMap[413] = [ATBackgroundColor24None]::new()
        $this.ColorMap[414] = [ATBackgroundColor24None]::new()
        $this.ColorMap[415] = [ATBackgroundColor24None]::new()
        $this.ColorMap[416] = [CCApplePurpleDark24]::new()
        $this.ColorMap[417] = [ATBackgroundColor24None]::new()
        $this.ColorMap[418] = [ATBackgroundColor24None]::new()
        $this.ColorMap[419] = [ATBackgroundColor24None]::new()
        $this.ColorMap[420] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[421] = [ATBackgroundColor24None]::new()
        $this.ColorMap[422] = [ATBackgroundColor24None]::new()
        $this.ColorMap[423] = [CCApplePinkDark24]::new()
        $this.ColorMap[424] = [CCApplePinkDark24]::new()
        $this.ColorMap[425] = [CCApplePinkDark24]::new()
        $this.ColorMap[426] = [CCApplePinkDark24]::new()
        $this.ColorMap[427] = [CCApplePinkDark24]::new()
        $this.ColorMap[428] = [ATBackgroundColor24None]::new()
        $this.ColorMap[429] = [ATBackgroundColor24None]::new()
        $this.ColorMap[430] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[431] = [ATBackgroundColor24None]::new()
        $this.ColorMap[432] = [ATBackgroundColor24None]::new()
        $this.ColorMap[433] = [ATBackgroundColor24None]::new()
        $this.ColorMap[434] = [CCApplePurpleDark24]::new()
        $this.ColorMap[435] = [ATBackgroundColor24None]::new()
        $this.ColorMap[436] = [ATBackgroundColor24None]::new()
        $this.ColorMap[437] = [ATBackgroundColor24None]::new()
        $this.ColorMap[438] = [ATBackgroundColor24None]::new()
        $this.ColorMap[439] = [ATBackgroundColor24None]::new()
        $this.ColorMap[440] = [CCApplePurpleDark24]::new()
        $this.ColorMap[441] = [CCApplePurpleDark24]::new()
        $this.ColorMap[442] = [ATBackgroundColor24None]::new()
        $this.ColorMap[443] = [ATBackgroundColor24None]::new() # End Row 11
        $this.ColorMap[444] = [ATBackgroundColor24None]::new()
        $this.ColorMap[445] = [ATBackgroundColor24None]::new()
        $this.ColorMap[446] = [CCApplePurpleDark24]::new()
        $this.ColorMap[447] = [ATBackgroundColor24None]::new()
        $this.ColorMap[448] = [ATBackgroundColor24None]::new()
        $this.ColorMap[449] = [ATBackgroundColor24None]::new()
        $this.ColorMap[450] = [ATBackgroundColor24None]::new()
        $this.ColorMap[451] = [ATBackgroundColor24None]::new()
        $this.ColorMap[452] = [ATBackgroundColor24None]::new()
        $this.ColorMap[453] = [ATBackgroundColor24None]::new()
        $this.ColorMap[454] = [ATBackgroundColor24None]::new()
        $this.ColorMap[455] = [ATBackgroundColor24None]::new()
        $this.ColorMap[456] = [ATBackgroundColor24None]::new()
        $this.ColorMap[457] = [ATBackgroundColor24None]::new()
        $this.ColorMap[458] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[459] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[460] = [ATBackgroundColor24None]::new()
        $this.ColorMap[461] = [CCApplePinkDark24]::new()
        $this.ColorMap[462] = [CCApplePinkDark24]::new()
        $this.ColorMap[463] = [CCApplePinkDark24]::new()
        $this.ColorMap[464] = [ATBackgroundColor24None]::new()
        $this.ColorMap[465] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[466] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[467] = [ATBackgroundColor24None]::new()
        $this.ColorMap[468] = [ATBackgroundColor24None]::new()
        $this.ColorMap[469] = [ATBackgroundColor24None]::new()
        $this.ColorMap[470] = [ATBackgroundColor24None]::new()
        $this.ColorMap[471] = [ATBackgroundColor24None]::new()
        $this.ColorMap[472] = [ATBackgroundColor24None]::new()
        $this.ColorMap[473] = [ATBackgroundColor24None]::new()
        $this.ColorMap[474] = [ATBackgroundColor24None]::new()
        $this.ColorMap[475] = [ATBackgroundColor24None]::new()
        $this.ColorMap[476] = [ATBackgroundColor24None]::new()
        $this.ColorMap[477] = [ATBackgroundColor24None]::new()
        $this.ColorMap[478] = [CCApplePurpleDark24]::new()
        $this.ColorMap[479] = [ATBackgroundColor24None]::new()
        $this.ColorMap[480] = [ATBackgroundColor24None]::new() # End Row 12
        $this.ColorMap[481] = [ATBackgroundColor24None]::new()
        $this.ColorMap[482] = [ATBackgroundColor24None]::new()
        $this.ColorMap[483] = [ATBackgroundColor24None]::new()
        $this.ColorMap[484] = [ATBackgroundColor24None]::new()
        $this.ColorMap[485] = [ATBackgroundColor24None]::new()
        $this.ColorMap[486] = [ATBackgroundColor24None]::new()
        $this.ColorMap[487] = [ATBackgroundColor24None]::new()
        $this.ColorMap[488] = [ATBackgroundColor24None]::new()
        $this.ColorMap[489] = [ATBackgroundColor24None]::new()
        $this.ColorMap[490] = [ATBackgroundColor24None]::new()
        $this.ColorMap[491] = [ATBackgroundColor24None]::new()
        $this.ColorMap[492] = [ATBackgroundColor24None]::new()
        $this.ColorMap[493] = [ATBackgroundColor24None]::new()
        $this.ColorMap[494] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[495] = [ATBackgroundColor24None]::new()
        $this.ColorMap[496] = [ATBackgroundColor24None]::new()
        $this.ColorMap[497] = [ATBackgroundColor24None]::new()
        $this.ColorMap[498] = [ATBackgroundColor24None]::new()
        $this.ColorMap[499] = [CCApplePinkDark24]::new()
        $this.ColorMap[500] = [ATBackgroundColor24None]::new()
        $this.ColorMap[501] = [ATBackgroundColor24None]::new()
        $this.ColorMap[502] = [ATBackgroundColor24None]::new()
        $this.ColorMap[503] = [ATBackgroundColor24None]::new()
        $this.ColorMap[504] = [CCAppleOrangeDark24]::new()
        $this.ColorMap[505] = [ATBackgroundColor24None]::new()
        $this.ColorMap[506] = [ATBackgroundColor24None]::new()
        $this.ColorMap[507] = [ATBackgroundColor24None]::new()
        $this.ColorMap[508] = [ATBackgroundColor24None]::new()
        $this.ColorMap[509] = [ATBackgroundColor24None]::new()
        $this.ColorMap[510] = [ATBackgroundColor24None]::new()
        $this.ColorMap[511] = [ATBackgroundColor24None]::new()
        $this.ColorMap[512] = [ATBackgroundColor24None]::new()
        $this.ColorMap[513] = [ATBackgroundColor24None]::new()
        $this.ColorMap[514] = [ATBackgroundColor24None]::new()
        $this.ColorMap[515] = [ATBackgroundColor24None]::new()
        $this.ColorMap[516] = [ATBackgroundColor24None]::new()
        $this.ColorMap[517] = [ATBackgroundColor24None]::new() # End Row 13
        $this.ColorMap[518] = [ATBackgroundColor24None]::new()
        $this.ColorMap[519] = [ATBackgroundColor24None]::new()
        $this.ColorMap[520] = [ATBackgroundColor24None]::new()
        $this.ColorMap[521] = [ATBackgroundColor24None]::new()
        $this.ColorMap[522] = [ATBackgroundColor24None]::new()
        $this.ColorMap[523] = [ATBackgroundColor24None]::new()
        $this.ColorMap[524] = [ATBackgroundColor24None]::new()
        $this.ColorMap[525] = [ATBackgroundColor24None]::new()
        $this.ColorMap[526] = [ATBackgroundColor24None]::new()
        $this.ColorMap[527] = [ATBackgroundColor24None]::new()
        $this.ColorMap[528] = [ATBackgroundColor24None]::new()
        $this.ColorMap[529] = [ATBackgroundColor24None]::new()
        $this.ColorMap[530] = [ATBackgroundColor24None]::new()
        $this.ColorMap[531] = [ATBackgroundColor24None]::new()
        $this.ColorMap[532] = [ATBackgroundColor24None]::new()
        $this.ColorMap[533] = [ATBackgroundColor24None]::new()
        $this.ColorMap[534] = [ATBackgroundColor24None]::new()
        $this.ColorMap[535] = [ATBackgroundColor24None]::new()
        $this.ColorMap[536] = [ATBackgroundColor24None]::new()
        $this.ColorMap[537] = [ATBackgroundColor24None]::new()
        $this.ColorMap[538] = [ATBackgroundColor24None]::new()
        $this.ColorMap[539] = [ATBackgroundColor24None]::new()
        $this.ColorMap[540] = [ATBackgroundColor24None]::new()
        $this.ColorMap[541] = [ATBackgroundColor24None]::new()
        $this.ColorMap[542] = [ATBackgroundColor24None]::new()
        $this.ColorMap[543] = [ATBackgroundColor24None]::new()
        $this.ColorMap[544] = [ATBackgroundColor24None]::new()
        $this.ColorMap[545] = [ATBackgroundColor24None]::new()
        $this.ColorMap[546] = [ATBackgroundColor24None]::new()
        $this.ColorMap[547] = [ATBackgroundColor24None]::new()
        $this.ColorMap[548] = [ATBackgroundColor24None]::new()
        $this.ColorMap[549] = [ATBackgroundColor24None]::new()
        $this.ColorMap[550] = [ATBackgroundColor24None]::new()
        $this.ColorMap[551] = [ATBackgroundColor24None]::new()
        $this.ColorMap[552] = [ATBackgroundColor24None]::new()
        $this.ColorMap[553] = [ATBackgroundColor24None]::new()
        $this.ColorMap[554] = [ATBackgroundColor24None]::new() # End Row 14

        $this.CreateImageATString($this.ColorMap)
        $this.ColorMap = $null
    }
}

Class EEIDarkfang : EEIInternalBase {
    EEIDarkfang() : base() {
        $this.ColorMap[0]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[1]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[2]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[3]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[4]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[5]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[6]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[7]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[8]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[9]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[10]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[11]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[12]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[13]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[14]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[15]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[16]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[17]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[18]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[19]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[20]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[21]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[22]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[23]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[24]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[25]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[26]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[27]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[28]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[29]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[30]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[31]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[32]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[33]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[34]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[35]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[36]  = [ATBackgroundColor24None]::new() # End Row 0
        $this.ColorMap[37]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[38]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[39]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[40]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[41]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[42]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[43]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[44]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[45]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[46]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[47]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[48]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[49]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[50]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[51]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[52]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[53]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[54]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[55]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[56]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[57]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[58]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[59]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[60]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[61]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[62]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[63]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[64]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[65]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[66]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[67]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[68]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[69]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[70]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[71]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[72]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[73]  = [ATBackgroundColor24None]::new() # End Row 1
        $this.ColorMap[74]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[75]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[76]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[77]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[78]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[79]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[80]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[81]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[82]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[83]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[84]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[85]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[86]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[87]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[88]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[89]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[90]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[91]  = [CCAppleIndigoLight24]::new()
        $this.ColorMap[92]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[93]  = [CCAppleIndigoLight24]::new()
        $this.ColorMap[94]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[95]  = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[96]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[97]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[98]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[99]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[100] = [ATBackgroundColor24None]::new()
        $this.ColorMap[101] = [ATBackgroundColor24None]::new()
        $this.ColorMap[102] = [ATBackgroundColor24None]::new()
        $this.ColorMap[103] = [ATBackgroundColor24None]::new()
        $this.ColorMap[104] = [ATBackgroundColor24None]::new()
        $this.ColorMap[105] = [ATBackgroundColor24None]::new()
        $this.ColorMap[106] = [ATBackgroundColor24None]::new()
        $this.ColorMap[107] = [ATBackgroundColor24None]::new()
        $this.ColorMap[108] = [ATBackgroundColor24None]::new()
        $this.ColorMap[109] = [ATBackgroundColor24None]::new()
        $this.ColorMap[110] = [ATBackgroundColor24None]::new() # End Row 2
        $this.ColorMap[111] = [ATBackgroundColor24None]::new()
        $this.ColorMap[112] = [ATBackgroundColor24None]::new()
        $this.ColorMap[113] = [ATBackgroundColor24None]::new()
        $this.ColorMap[114] = [ATBackgroundColor24None]::new()
        $this.ColorMap[115] = [ATBackgroundColor24None]::new()
        $this.ColorMap[116] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[117] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[118] = [ATBackgroundColor24None]::new()
        $this.ColorMap[119] = [ATBackgroundColor24None]::new()
        $this.ColorMap[120] = [ATBackgroundColor24None]::new()
        $this.ColorMap[121] = [ATBackgroundColor24None]::new()
        $this.ColorMap[122] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[123] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[124] = [ATBackgroundColor24None]::new()
        $this.ColorMap[125] = [ATBackgroundColor24None]::new()
        $this.ColorMap[126] = [ATBackgroundColor24None]::new()
        $this.ColorMap[127] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[128] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[129] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[130] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[131] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[132] = [ATBackgroundColor24None]::new()
        $this.ColorMap[133] = [ATBackgroundColor24None]::new()
        $this.ColorMap[134] = [ATBackgroundColor24None]::new()
        $this.ColorMap[135] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[136] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[137] = [ATBackgroundColor24None]::new()
        $this.ColorMap[138] = [ATBackgroundColor24None]::new()
        $this.ColorMap[139] = [ATBackgroundColor24None]::new()
        $this.ColorMap[140] = [ATBackgroundColor24None]::new()
        $this.ColorMap[141] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[142] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[143] = [ATBackgroundColor24None]::new()
        $this.ColorMap[144] = [ATBackgroundColor24None]::new()
        $this.ColorMap[145] = [ATBackgroundColor24None]::new()
        $this.ColorMap[146] = [ATBackgroundColor24None]::new()
        $this.ColorMap[147] = [ATBackgroundColor24None]::new() # End Row 3
        $this.ColorMap[148] = [ATBackgroundColor24None]::new()
        $this.ColorMap[149] = [ATBackgroundColor24None]::new()
        $this.ColorMap[150] = [ATBackgroundColor24None]::new()
        $this.ColorMap[151] = [ATBackgroundColor24None]::new()
        $this.ColorMap[152] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[153] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[154] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[155] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[156] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[157] = [ATBackgroundColor24None]::new()
        $this.ColorMap[158] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[159] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[160] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[161] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[162] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[163] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[164] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[165] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[166] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[167] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[168] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[169] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[170] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[171] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[172] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[173] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[174] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[175] = [ATBackgroundColor24None]::new()
        $this.ColorMap[176] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[177] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[178] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[179] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[180] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[181] = [ATBackgroundColor24None]::new()
        $this.ColorMap[182] = [ATBackgroundColor24None]::new()
        $this.ColorMap[183] = [ATBackgroundColor24None]::new()
        $this.ColorMap[184] = [ATBackgroundColor24None]::new() # End Row 4
        $this.ColorMap[185] = [ATBackgroundColor24None]::new()
        $this.ColorMap[186] = [ATBackgroundColor24None]::new()
        $this.ColorMap[187] = [ATBackgroundColor24None]::new()
        $this.ColorMap[188] = [ATBackgroundColor24None]::new()
        $this.ColorMap[189] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[190] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[191] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[192] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[193] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[194] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[195] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[196] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[197] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[198] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[199] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[200] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[201] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[202] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[203] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[204] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[205] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[206] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[207] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[208] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[209] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[210] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[211] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[212] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[213] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[214] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[215] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[216] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[217] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[218] = [ATBackgroundColor24None]::new()
        $this.ColorMap[219] = [ATBackgroundColor24None]::new()
        $this.ColorMap[220] = [ATBackgroundColor24None]::new()
        $this.ColorMap[221] = [ATBackgroundColor24None]::new() # End Row 5
        $this.ColorMap[222] = [ATBackgroundColor24None]::new()
        $this.ColorMap[223] = [ATBackgroundColor24None]::new()
        $this.ColorMap[224] = [ATBackgroundColor24None]::new()
        $this.ColorMap[225] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[226] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[227] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[228] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[229] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[230] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[231] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[232] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[233] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[234] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[235] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[236] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[237] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[238] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[239] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[240] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[241] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[242] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[243] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[244] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[245] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[246] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[247] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[248] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[249] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[250] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[251] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[252] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[253] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[254] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[255] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[256] = [ATBackgroundColor24None]::new()
        $this.ColorMap[257] = [ATBackgroundColor24None]::new()
        $this.ColorMap[258] = [ATBackgroundColor24None]::new() # End Row 6
        $this.ColorMap[259] = [ATBackgroundColor24None]::new()
        $this.ColorMap[260] = [ATBackgroundColor24None]::new()
        $this.ColorMap[261] = [ATBackgroundColor24None]::new()
        $this.ColorMap[262] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[263] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[264] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[265] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[266] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[267] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[268] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[269] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[270] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[271] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[272] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[273] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[274] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[275] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[276] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[277] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[278] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[279] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[280] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[281] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[282] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[283] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[284] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[285] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[286] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[287] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[288] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[289] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[290] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[291] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[292] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[293] = [ATBackgroundColor24None]::new()
        $this.ColorMap[294] = [ATBackgroundColor24None]::new()
        $this.ColorMap[295] = [ATBackgroundColor24None]::new() # End Row 7
        $this.ColorMap[296] = [ATBackgroundColor24None]::new()
        $this.ColorMap[297] = [ATBackgroundColor24None]::new()
        $this.ColorMap[298] = [ATBackgroundColor24None]::new()
        $this.ColorMap[299] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[300] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[301] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[302] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[303] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[304] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[305] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[306] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[307] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[308] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[309] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[310] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[311] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[312] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[313] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[314] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[315] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[316] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[317] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[318] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[319] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[320] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[321] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[322] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[323] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[324] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[325] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[326] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[327] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[328] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[329] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[330] = [ATBackgroundColor24None]::new()
        $this.ColorMap[331] = [ATBackgroundColor24None]::new()
        $this.ColorMap[332] = [ATBackgroundColor24None]::new() # End Row 8
        $this.ColorMap[333] = [ATBackgroundColor24None]::new()
        $this.ColorMap[334] = [ATBackgroundColor24None]::new()
        $this.ColorMap[335] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[336] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[337] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[338] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[339] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[340] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[341] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[342] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[343] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[344] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[345] = [ATBackgroundColor24None]::new()
        $this.ColorMap[346] = [ATBackgroundColor24None]::new()
        $this.ColorMap[347] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[348] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[349] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[350] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[351] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[352] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[353] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[354] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[355] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[356] = [ATBackgroundColor24None]::new()
        $this.ColorMap[357] = [ATBackgroundColor24None]::new()
        $this.ColorMap[358] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[359] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[360] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[361] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[362] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[363] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[364] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[365] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[366] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[367] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[368] = [ATBackgroundColor24None]::new()
        $this.ColorMap[369] = [ATBackgroundColor24None]::new() # End Row 9
        $this.ColorMap[370] = [ATBackgroundColor24None]::new()
        $this.ColorMap[371] = [ATBackgroundColor24None]::new()
        $this.ColorMap[372] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[373] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[374] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[375] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[376] = [ATBackgroundColor24None]::new()
        $this.ColorMap[377] = [ATBackgroundColor24None]::new()
        $this.ColorMap[378] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[379] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[380] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[381] = [ATBackgroundColor24None]::new()
        $this.ColorMap[382] = [ATBackgroundColor24None]::new()
        $this.ColorMap[383] = [ATBackgroundColor24None]::new()
        $this.ColorMap[384] = [ATBackgroundColor24None]::new()
        $this.ColorMap[385] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[386] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[387] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[388] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[389] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[390] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[391] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[392] = [ATBackgroundColor24None]::new()
        $this.ColorMap[393] = [ATBackgroundColor24None]::new()
        $this.ColorMap[394] = [ATBackgroundColor24None]::new()
        $this.ColorMap[395] = [ATBackgroundColor24None]::new()
        $this.ColorMap[396] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[397] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[398] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[399] = [ATBackgroundColor24None]::new()
        $this.ColorMap[400] = [ATBackgroundColor24None]::new()
        $this.ColorMap[401] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[402] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[403] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[404] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[405] = [ATBackgroundColor24None]::new()
        $this.ColorMap[406] = [ATBackgroundColor24None]::new() # End Row 10
        $this.ColorMap[407] = [ATBackgroundColor24None]::new()
        $this.ColorMap[408] = [ATBackgroundColor24None]::new()
        $this.ColorMap[409] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[410] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[411] = [ATBackgroundColor24None]::new()
        $this.ColorMap[412] = [ATBackgroundColor24None]::new()
        $this.ColorMap[413] = [ATBackgroundColor24None]::new()
        $this.ColorMap[414] = [ATBackgroundColor24None]::new()
        $this.ColorMap[415] = [ATBackgroundColor24None]::new()
        $this.ColorMap[416] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[417] = [ATBackgroundColor24None]::new()
        $this.ColorMap[418] = [ATBackgroundColor24None]::new()
        $this.ColorMap[419] = [ATBackgroundColor24None]::new()
        $this.ColorMap[420] = [CCAppleRedDark24]::new()
        $this.ColorMap[421] = [ATBackgroundColor24None]::new()
        $this.ColorMap[422] = [ATBackgroundColor24None]::new()
        $this.ColorMap[423] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[424] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[425] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[426] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[427] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[428] = [ATBackgroundColor24None]::new()
        $this.ColorMap[429] = [ATBackgroundColor24None]::new()
        $this.ColorMap[430] = [CCAppleRedDark24]::new()
        $this.ColorMap[431] = [ATBackgroundColor24None]::new()
        $this.ColorMap[432] = [ATBackgroundColor24None]::new()
        $this.ColorMap[433] = [ATBackgroundColor24None]::new()
        $this.ColorMap[434] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[435] = [ATBackgroundColor24None]::new()
        $this.ColorMap[436] = [ATBackgroundColor24None]::new()
        $this.ColorMap[437] = [ATBackgroundColor24None]::new()
        $this.ColorMap[438] = [ATBackgroundColor24None]::new()
        $this.ColorMap[439] = [ATBackgroundColor24None]::new()
        $this.ColorMap[440] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[441] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[442] = [ATBackgroundColor24None]::new()
        $this.ColorMap[443] = [ATBackgroundColor24None]::new() # End Row 11
        $this.ColorMap[444] = [ATBackgroundColor24None]::new()
        $this.ColorMap[445] = [ATBackgroundColor24None]::new()
        $this.ColorMap[446] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[447] = [ATBackgroundColor24None]::new()
        $this.ColorMap[448] = [ATBackgroundColor24None]::new()
        $this.ColorMap[449] = [ATBackgroundColor24None]::new()
        $this.ColorMap[450] = [ATBackgroundColor24None]::new()
        $this.ColorMap[451] = [ATBackgroundColor24None]::new()
        $this.ColorMap[452] = [ATBackgroundColor24None]::new()
        $this.ColorMap[453] = [ATBackgroundColor24None]::new()
        $this.ColorMap[454] = [ATBackgroundColor24None]::new()
        $this.ColorMap[455] = [ATBackgroundColor24None]::new()
        $this.ColorMap[456] = [ATBackgroundColor24None]::new()
        $this.ColorMap[457] = [ATBackgroundColor24None]::new()
        $this.ColorMap[458] = [CCAppleRedDark24]::new()
        $this.ColorMap[459] = [CCAppleRedDark24]::new()
        $this.ColorMap[460] = [ATBackgroundColor24None]::new()
        $this.ColorMap[461] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[462] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[463] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[464] = [ATBackgroundColor24None]::new()
        $this.ColorMap[465] = [CCAppleRedDark24]::new()
        $this.ColorMap[466] = [CCAppleRedDark24]::new()
        $this.ColorMap[467] = [ATBackgroundColor24None]::new()
        $this.ColorMap[468] = [ATBackgroundColor24None]::new()
        $this.ColorMap[469] = [ATBackgroundColor24None]::new()
        $this.ColorMap[470] = [ATBackgroundColor24None]::new()
        $this.ColorMap[471] = [ATBackgroundColor24None]::new()
        $this.ColorMap[472] = [ATBackgroundColor24None]::new()
        $this.ColorMap[473] = [ATBackgroundColor24None]::new()
        $this.ColorMap[474] = [ATBackgroundColor24None]::new()
        $this.ColorMap[475] = [ATBackgroundColor24None]::new()
        $this.ColorMap[476] = [ATBackgroundColor24None]::new()
        $this.ColorMap[477] = [ATBackgroundColor24None]::new()
        $this.ColorMap[478] = [CCAppleGrey4Dark24]::new()
        $this.ColorMap[479] = [ATBackgroundColor24None]::new()
        $this.ColorMap[480] = [ATBackgroundColor24None]::new() # End Row 12
        $this.ColorMap[481] = [ATBackgroundColor24None]::new()
        $this.ColorMap[482] = [ATBackgroundColor24None]::new()
        $this.ColorMap[483] = [ATBackgroundColor24None]::new()
        $this.ColorMap[484] = [ATBackgroundColor24None]::new()
        $this.ColorMap[485] = [ATBackgroundColor24None]::new()
        $this.ColorMap[486] = [ATBackgroundColor24None]::new()
        $this.ColorMap[487] = [ATBackgroundColor24None]::new()
        $this.ColorMap[488] = [ATBackgroundColor24None]::new()
        $this.ColorMap[489] = [ATBackgroundColor24None]::new()
        $this.ColorMap[490] = [ATBackgroundColor24None]::new()
        $this.ColorMap[491] = [ATBackgroundColor24None]::new()
        $this.ColorMap[492] = [ATBackgroundColor24None]::new()
        $this.ColorMap[493] = [ATBackgroundColor24None]::new()
        $this.ColorMap[494] = [CCAppleRedDark24]::new()
        $this.ColorMap[495] = [ATBackgroundColor24None]::new()
        $this.ColorMap[496] = [ATBackgroundColor24None]::new()
        $this.ColorMap[497] = [ATBackgroundColor24None]::new()
        $this.ColorMap[498] = [ATBackgroundColor24None]::new()
        $this.ColorMap[499] = [CCAppleGrey6Dark24]::new()
        $this.ColorMap[500] = [ATBackgroundColor24None]::new()
        $this.ColorMap[501] = [ATBackgroundColor24None]::new()
        $this.ColorMap[502] = [ATBackgroundColor24None]::new()
        $this.ColorMap[503] = [ATBackgroundColor24None]::new()
        $this.ColorMap[504] = [CCAppleRedDark24]::new()
        $this.ColorMap[505] = [ATBackgroundColor24None]::new()
        $this.ColorMap[506] = [ATBackgroundColor24None]::new()
        $this.ColorMap[507] = [ATBackgroundColor24None]::new()
        $this.ColorMap[508] = [ATBackgroundColor24None]::new()
        $this.ColorMap[509] = [ATBackgroundColor24None]::new()
        $this.ColorMap[510] = [ATBackgroundColor24None]::new()
        $this.ColorMap[511] = [ATBackgroundColor24None]::new()
        $this.ColorMap[512] = [ATBackgroundColor24None]::new()
        $this.ColorMap[513] = [ATBackgroundColor24None]::new()
        $this.ColorMap[514] = [ATBackgroundColor24None]::new()
        $this.ColorMap[515] = [ATBackgroundColor24None]::new()
        $this.ColorMap[516] = [ATBackgroundColor24None]::new()
        $this.ColorMap[517] = [ATBackgroundColor24None]::new() # End Row 13
        $this.ColorMap[518] = [ATBackgroundColor24None]::new()
        $this.ColorMap[519] = [ATBackgroundColor24None]::new()
        $this.ColorMap[520] = [ATBackgroundColor24None]::new()
        $this.ColorMap[521] = [ATBackgroundColor24None]::new()
        $this.ColorMap[522] = [ATBackgroundColor24None]::new()
        $this.ColorMap[523] = [ATBackgroundColor24None]::new()
        $this.ColorMap[524] = [ATBackgroundColor24None]::new()
        $this.ColorMap[525] = [ATBackgroundColor24None]::new()
        $this.ColorMap[526] = [ATBackgroundColor24None]::new()
        $this.ColorMap[527] = [ATBackgroundColor24None]::new()
        $this.ColorMap[528] = [ATBackgroundColor24None]::new()
        $this.ColorMap[529] = [ATBackgroundColor24None]::new()
        $this.ColorMap[530] = [ATBackgroundColor24None]::new()
        $this.ColorMap[531] = [ATBackgroundColor24None]::new()
        $this.ColorMap[532] = [ATBackgroundColor24None]::new()
        $this.ColorMap[533] = [ATBackgroundColor24None]::new()
        $this.ColorMap[534] = [ATBackgroundColor24None]::new()
        $this.ColorMap[535] = [ATBackgroundColor24None]::new()
        $this.ColorMap[536] = [ATBackgroundColor24None]::new()
        $this.ColorMap[537] = [ATBackgroundColor24None]::new()
        $this.ColorMap[538] = [ATBackgroundColor24None]::new()
        $this.ColorMap[539] = [ATBackgroundColor24None]::new()
        $this.ColorMap[540] = [ATBackgroundColor24None]::new()
        $this.ColorMap[541] = [ATBackgroundColor24None]::new()
        $this.ColorMap[542] = [ATBackgroundColor24None]::new()
        $this.ColorMap[543] = [ATBackgroundColor24None]::new()
        $this.ColorMap[544] = [ATBackgroundColor24None]::new()
        $this.ColorMap[545] = [ATBackgroundColor24None]::new()
        $this.ColorMap[546] = [ATBackgroundColor24None]::new()
        $this.ColorMap[547] = [ATBackgroundColor24None]::new()
        $this.ColorMap[548] = [ATBackgroundColor24None]::new()
        $this.ColorMap[549] = [ATBackgroundColor24None]::new()
        $this.ColorMap[550] = [ATBackgroundColor24None]::new()
        $this.ColorMap[551] = [ATBackgroundColor24None]::new()
        $this.ColorMap[552] = [ATBackgroundColor24None]::new()
        $this.ColorMap[553] = [ATBackgroundColor24None]::new()
        $this.ColorMap[554] = [ATBackgroundColor24None]::new() # End Row 14

        $this.CreateImageATString($this.ColorMap)
        $this.ColorMap = $null
    }
}

Class EEINocturna : EEIInternalBase {
    EEINocturna() : base() {
        $this.ColorMap[0]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[1]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[2]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[3]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[4]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[5]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[6]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[7]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[8]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[9]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[10]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[11]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[12]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[13]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[14]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[15]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[16]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[17]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[18]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[19]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[20]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[21]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[22]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[23]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[24]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[25]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[26]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[27]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[28]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[29]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[30]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[31]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[32]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[33]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[34]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[35]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[36]  = [ATBackgroundColor24None]::new() # End Row 0
        $this.ColorMap[37]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[38]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[39]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[40]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[41]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[42]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[43]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[44]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[45]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[46]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[47]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[48]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[49]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[50]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[51]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[52]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[53]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[54]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[55]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[56]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[57]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[58]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[59]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[60]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[61]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[62]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[63]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[64]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[65]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[66]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[67]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[68]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[69]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[70]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[71]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[72]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[73]  = [ATBackgroundColor24None]::new() # End Row 1
        $this.ColorMap[74]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[75]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[76]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[77]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[78]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[79]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[80]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[81]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[82]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[83]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[84]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[85]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[86]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[87]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[88]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[89]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[90]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[91]  = [CCAppleVPinkADark24]::new()
        $this.ColorMap[92]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[93]  = [CCAppleVPinkADark24]::new()
        $this.ColorMap[94]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[95]  = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[96]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[97]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[98]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[99]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[100] = [ATBackgroundColor24None]::new()
        $this.ColorMap[101] = [ATBackgroundColor24None]::new()
        $this.ColorMap[102] = [ATBackgroundColor24None]::new()
        $this.ColorMap[103] = [ATBackgroundColor24None]::new()
        $this.ColorMap[104] = [ATBackgroundColor24None]::new()
        $this.ColorMap[105] = [ATBackgroundColor24None]::new()
        $this.ColorMap[106] = [ATBackgroundColor24None]::new()
        $this.ColorMap[107] = [ATBackgroundColor24None]::new()
        $this.ColorMap[108] = [ATBackgroundColor24None]::new()
        $this.ColorMap[109] = [ATBackgroundColor24None]::new()
        $this.ColorMap[110] = [ATBackgroundColor24None]::new() # End Row 2
        $this.ColorMap[111] = [ATBackgroundColor24None]::new()
        $this.ColorMap[112] = [ATBackgroundColor24None]::new()
        $this.ColorMap[113] = [ATBackgroundColor24None]::new()
        $this.ColorMap[114] = [ATBackgroundColor24None]::new()
        $this.ColorMap[115] = [ATBackgroundColor24None]::new()
        $this.ColorMap[116] = [CCAppleVMintALight24]::new()
        $this.ColorMap[117] = [CCAppleVMintALight24]::new()
        $this.ColorMap[118] = [ATBackgroundColor24None]::new()
        $this.ColorMap[119] = [ATBackgroundColor24None]::new()
        $this.ColorMap[120] = [ATBackgroundColor24None]::new()
        $this.ColorMap[121] = [ATBackgroundColor24None]::new()
        $this.ColorMap[122] = [CCAppleVMintALight24]::new()
        $this.ColorMap[123] = [CCAppleVMintALight24]::new()
        $this.ColorMap[124] = [ATBackgroundColor24None]::new()
        $this.ColorMap[125] = [ATBackgroundColor24None]::new()
        $this.ColorMap[126] = [ATBackgroundColor24None]::new()
        $this.ColorMap[127] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[128] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[129] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[130] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[131] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[132] = [ATBackgroundColor24None]::new()
        $this.ColorMap[133] = [ATBackgroundColor24None]::new()
        $this.ColorMap[134] = [ATBackgroundColor24None]::new()
        $this.ColorMap[135] = [CCAppleVMintALight24]::new()
        $this.ColorMap[136] = [CCAppleVMintALight24]::new()
        $this.ColorMap[137] = [ATBackgroundColor24None]::new()
        $this.ColorMap[138] = [ATBackgroundColor24None]::new()
        $this.ColorMap[139] = [ATBackgroundColor24None]::new()
        $this.ColorMap[140] = [ATBackgroundColor24None]::new()
        $this.ColorMap[141] = [CCAppleVMintALight24]::new()
        $this.ColorMap[142] = [CCAppleVMintALight24]::new()
        $this.ColorMap[143] = [ATBackgroundColor24None]::new()
        $this.ColorMap[144] = [ATBackgroundColor24None]::new()
        $this.ColorMap[145] = [ATBackgroundColor24None]::new()
        $this.ColorMap[146] = [ATBackgroundColor24None]::new()
        $this.ColorMap[147] = [ATBackgroundColor24None]::new() # End Row 3
        $this.ColorMap[148] = [ATBackgroundColor24None]::new()
        $this.ColorMap[149] = [ATBackgroundColor24None]::new()
        $this.ColorMap[150] = [ATBackgroundColor24None]::new()
        $this.ColorMap[151] = [ATBackgroundColor24None]::new()
        $this.ColorMap[152] = [CCAppleVMintALight24]::new()
        $this.ColorMap[153] = [CCAppleVMintALight24]::new()
        $this.ColorMap[154] = [CCAppleVMintALight24]::new()
        $this.ColorMap[155] = [CCAppleVMintALight24]::new()
        $this.ColorMap[156] = [CCAppleVMintALight24]::new()
        $this.ColorMap[157] = [ATBackgroundColor24None]::new()
        $this.ColorMap[158] = [CCAppleVMintALight24]::new()
        $this.ColorMap[159] = [CCAppleVMintALight24]::new()
        $this.ColorMap[160] = [CCAppleVMintALight24]::new()
        $this.ColorMap[161] = [CCAppleVMintALight24]::new()
        $this.ColorMap[162] = [CCAppleVMintALight24]::new()
        $this.ColorMap[163] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[164] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[165] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[166] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[167] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[168] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[169] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[170] = [CCAppleVMintALight24]::new()
        $this.ColorMap[171] = [CCAppleVMintALight24]::new()
        $this.ColorMap[172] = [CCAppleVMintALight24]::new()
        $this.ColorMap[173] = [CCAppleVMintALight24]::new()
        $this.ColorMap[174] = [CCAppleVMintALight24]::new()
        $this.ColorMap[175] = [ATBackgroundColor24None]::new()
        $this.ColorMap[176] = [CCAppleVMintALight24]::new()
        $this.ColorMap[177] = [CCAppleVMintALight24]::new()
        $this.ColorMap[178] = [CCAppleVMintALight24]::new()
        $this.ColorMap[179] = [CCAppleVMintALight24]::new()
        $this.ColorMap[180] = [CCAppleVMintALight24]::new()
        $this.ColorMap[181] = [ATBackgroundColor24None]::new()
        $this.ColorMap[182] = [ATBackgroundColor24None]::new()
        $this.ColorMap[183] = [ATBackgroundColor24None]::new()
        $this.ColorMap[184] = [ATBackgroundColor24None]::new() # End Row 4
        $this.ColorMap[185] = [ATBackgroundColor24None]::new()
        $this.ColorMap[186] = [ATBackgroundColor24None]::new()
        $this.ColorMap[187] = [ATBackgroundColor24None]::new()
        $this.ColorMap[188] = [ATBackgroundColor24None]::new()
        $this.ColorMap[189] = [CCAppleVMintALight24]::new()
        $this.ColorMap[190] = [CCAppleVMintALight24]::new()
        $this.ColorMap[191] = [CCAppleVMintALight24]::new()
        $this.ColorMap[192] = [CCAppleVMintALight24]::new()
        $this.ColorMap[193] = [CCAppleVMintALight24]::new()
        $this.ColorMap[194] = [CCAppleVMintALight24]::new()
        $this.ColorMap[195] = [CCAppleVMintALight24]::new()
        $this.ColorMap[196] = [CCAppleVMintALight24]::new()
        $this.ColorMap[197] = [CCAppleVMintALight24]::new()
        $this.ColorMap[198] = [CCAppleVMintALight24]::new()
        $this.ColorMap[199] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[200] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[201] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[202] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[203] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[204] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[205] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[206] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[207] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[208] = [CCAppleVMintALight24]::new()
        $this.ColorMap[209] = [CCAppleVMintALight24]::new()
        $this.ColorMap[210] = [CCAppleVMintALight24]::new()
        $this.ColorMap[211] = [CCAppleVMintALight24]::new()
        $this.ColorMap[212] = [CCAppleVMintALight24]::new()
        $this.ColorMap[213] = [CCAppleVMintALight24]::new()
        $this.ColorMap[214] = [CCAppleVMintALight24]::new()
        $this.ColorMap[215] = [CCAppleVMintALight24]::new()
        $this.ColorMap[216] = [CCAppleVMintALight24]::new()
        $this.ColorMap[217] = [CCAppleVMintALight24]::new()
        $this.ColorMap[218] = [ATBackgroundColor24None]::new()
        $this.ColorMap[219] = [ATBackgroundColor24None]::new()
        $this.ColorMap[220] = [ATBackgroundColor24None]::new()
        $this.ColorMap[221] = [ATBackgroundColor24None]::new() # End Row 5
        $this.ColorMap[222] = [ATBackgroundColor24None]::new()
        $this.ColorMap[223] = [ATBackgroundColor24None]::new()
        $this.ColorMap[224] = [ATBackgroundColor24None]::new()
        $this.ColorMap[225] = [CCAppleVMintALight24]::new()
        $this.ColorMap[226] = [CCAppleVMintALight24]::new()
        $this.ColorMap[227] = [CCAppleVMintALight24]::new()
        $this.ColorMap[228] = [CCAppleVMintALight24]::new()
        $this.ColorMap[229] = [CCAppleVMintALight24]::new()
        $this.ColorMap[230] = [CCAppleVMintALight24]::new()
        $this.ColorMap[231] = [CCAppleVMintALight24]::new()
        $this.ColorMap[232] = [CCAppleVMintALight24]::new()
        $this.ColorMap[233] = [CCAppleVMintALight24]::new()
        $this.ColorMap[234] = [CCAppleVMintALight24]::new()
        $this.ColorMap[235] = [CCAppleVMintALight24]::new()
        $this.ColorMap[236] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[237] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[238] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[239] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[240] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[241] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[242] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[243] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[244] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[245] = [CCAppleVMintALight24]::new()
        $this.ColorMap[246] = [CCAppleVMintALight24]::new()
        $this.ColorMap[247] = [CCAppleVMintALight24]::new()
        $this.ColorMap[248] = [CCAppleVMintALight24]::new()
        $this.ColorMap[249] = [CCAppleVMintALight24]::new()
        $this.ColorMap[250] = [CCAppleVMintALight24]::new()
        $this.ColorMap[251] = [CCAppleVMintALight24]::new()
        $this.ColorMap[252] = [CCAppleVMintALight24]::new()
        $this.ColorMap[253] = [CCAppleVMintALight24]::new()
        $this.ColorMap[254] = [CCAppleVMintALight24]::new()
        $this.ColorMap[255] = [CCAppleVMintALight24]::new()
        $this.ColorMap[256] = [ATBackgroundColor24None]::new()
        $this.ColorMap[257] = [ATBackgroundColor24None]::new()
        $this.ColorMap[258] = [ATBackgroundColor24None]::new() # End Row 6
        $this.ColorMap[259] = [ATBackgroundColor24None]::new()
        $this.ColorMap[260] = [ATBackgroundColor24None]::new()
        $this.ColorMap[261] = [ATBackgroundColor24None]::new()
        $this.ColorMap[262] = [CCAppleVMintALight24]::new()
        $this.ColorMap[263] = [CCAppleVMintALight24]::new()
        $this.ColorMap[264] = [CCAppleVMintALight24]::new()
        $this.ColorMap[265] = [CCAppleVMintALight24]::new()
        $this.ColorMap[266] = [CCAppleVMintALight24]::new()
        $this.ColorMap[267] = [CCAppleVMintALight24]::new()
        $this.ColorMap[268] = [CCAppleVMintALight24]::new()
        $this.ColorMap[269] = [CCAppleVMintALight24]::new()
        $this.ColorMap[270] = [CCAppleVMintALight24]::new()
        $this.ColorMap[271] = [CCAppleVMintALight24]::new()
        $this.ColorMap[272] = [CCAppleVMintALight24]::new()
        $this.ColorMap[273] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[274] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[275] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[276] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[277] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[278] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[279] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[280] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[281] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[282] = [CCAppleVMintALight24]::new()
        $this.ColorMap[283] = [CCAppleVMintALight24]::new()
        $this.ColorMap[284] = [CCAppleVMintALight24]::new()
        $this.ColorMap[285] = [CCAppleVMintALight24]::new()
        $this.ColorMap[286] = [CCAppleVMintALight24]::new()
        $this.ColorMap[287] = [CCAppleVMintALight24]::new()
        $this.ColorMap[288] = [CCAppleVMintALight24]::new()
        $this.ColorMap[289] = [CCAppleVMintALight24]::new()
        $this.ColorMap[290] = [CCAppleVMintALight24]::new()
        $this.ColorMap[291] = [CCAppleVMintALight24]::new()
        $this.ColorMap[292] = [CCAppleVMintALight24]::new()
        $this.ColorMap[293] = [ATBackgroundColor24None]::new()
        $this.ColorMap[294] = [ATBackgroundColor24None]::new()
        $this.ColorMap[295] = [ATBackgroundColor24None]::new() # End Row 7
        $this.ColorMap[296] = [ATBackgroundColor24None]::new()
        $this.ColorMap[297] = [ATBackgroundColor24None]::new()
        $this.ColorMap[298] = [ATBackgroundColor24None]::new()
        $this.ColorMap[299] = [CCAppleVMintALight24]::new()
        $this.ColorMap[300] = [CCAppleVMintALight24]::new()
        $this.ColorMap[301] = [CCAppleVMintALight24]::new()
        $this.ColorMap[302] = [CCAppleVMintALight24]::new()
        $this.ColorMap[303] = [CCAppleVMintALight24]::new()
        $this.ColorMap[304] = [CCAppleVMintALight24]::new()
        $this.ColorMap[305] = [CCAppleVMintALight24]::new()
        $this.ColorMap[306] = [CCAppleVMintALight24]::new()
        $this.ColorMap[307] = [CCAppleVMintALight24]::new()
        $this.ColorMap[308] = [CCAppleVMintALight24]::new()
        $this.ColorMap[309] = [CCAppleVMintALight24]::new()
        $this.ColorMap[310] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[311] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[312] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[313] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[314] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[315] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[316] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[317] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[318] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[319] = [CCAppleVMintALight24]::new()
        $this.ColorMap[320] = [CCAppleVMintALight24]::new()
        $this.ColorMap[321] = [CCAppleVMintALight24]::new()
        $this.ColorMap[322] = [CCAppleVMintALight24]::new()
        $this.ColorMap[323] = [CCAppleVMintALight24]::new()
        $this.ColorMap[324] = [CCAppleVMintALight24]::new()
        $this.ColorMap[325] = [CCAppleVMintALight24]::new()
        $this.ColorMap[326] = [CCAppleVMintALight24]::new()
        $this.ColorMap[327] = [CCAppleVMintALight24]::new()
        $this.ColorMap[328] = [CCAppleVMintALight24]::new()
        $this.ColorMap[329] = [CCAppleVMintALight24]::new()
        $this.ColorMap[330] = [ATBackgroundColor24None]::new()
        $this.ColorMap[331] = [ATBackgroundColor24None]::new()
        $this.ColorMap[332] = [ATBackgroundColor24None]::new() # End Row 8
        $this.ColorMap[333] = [ATBackgroundColor24None]::new()
        $this.ColorMap[334] = [ATBackgroundColor24None]::new()
        $this.ColorMap[335] = [CCAppleVMintALight24]::new()
        $this.ColorMap[336] = [CCAppleVMintALight24]::new()
        $this.ColorMap[337] = [CCAppleVMintALight24]::new()
        $this.ColorMap[338] = [CCAppleVMintALight24]::new()
        $this.ColorMap[339] = [CCAppleVMintALight24]::new()
        $this.ColorMap[340] = [CCAppleVMintALight24]::new()
        $this.ColorMap[341] = [CCAppleVMintALight24]::new()
        $this.ColorMap[342] = [CCAppleVMintALight24]::new()
        $this.ColorMap[343] = [CCAppleVMintALight24]::new()
        $this.ColorMap[344] = [CCAppleVMintALight24]::new()
        $this.ColorMap[345] = [ATBackgroundColor24None]::new()
        $this.ColorMap[346] = [ATBackgroundColor24None]::new()
        $this.ColorMap[347] = [CCAppleVMintALight24]::new()
        $this.ColorMap[348] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[349] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[350] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[351] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[352] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[353] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[354] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[355] = [CCAppleVMintALight24]::new()
        $this.ColorMap[356] = [ATBackgroundColor24None]::new()
        $this.ColorMap[357] = [ATBackgroundColor24None]::new()
        $this.ColorMap[358] = [CCAppleVMintALight24]::new()
        $this.ColorMap[359] = [CCAppleVMintALight24]::new()
        $this.ColorMap[360] = [CCAppleVMintALight24]::new()
        $this.ColorMap[361] = [CCAppleVMintALight24]::new()
        $this.ColorMap[362] = [CCAppleVMintALight24]::new()
        $this.ColorMap[363] = [CCAppleVMintALight24]::new()
        $this.ColorMap[364] = [CCAppleVMintALight24]::new()
        $this.ColorMap[365] = [CCAppleVMintALight24]::new()
        $this.ColorMap[366] = [CCAppleVMintALight24]::new()
        $this.ColorMap[367] = [CCAppleVMintALight24]::new()
        $this.ColorMap[368] = [ATBackgroundColor24None]::new()
        $this.ColorMap[369] = [ATBackgroundColor24None]::new() # End Row 9
        $this.ColorMap[370] = [ATBackgroundColor24None]::new()
        $this.ColorMap[371] = [ATBackgroundColor24None]::new()
        $this.ColorMap[372] = [CCAppleVMintALight24]::new()
        $this.ColorMap[373] = [CCAppleVMintALight24]::new()
        $this.ColorMap[374] = [CCAppleVMintALight24]::new()
        $this.ColorMap[375] = [CCAppleVMintALight24]::new()
        $this.ColorMap[376] = [ATBackgroundColor24None]::new()
        $this.ColorMap[377] = [ATBackgroundColor24None]::new()
        $this.ColorMap[378] = [CCAppleVMintALight24]::new()
        $this.ColorMap[379] = [CCAppleVMintALight24]::new()
        $this.ColorMap[380] = [CCAppleVMintALight24]::new()
        $this.ColorMap[381] = [ATBackgroundColor24None]::new()
        $this.ColorMap[382] = [ATBackgroundColor24None]::new()
        $this.ColorMap[383] = [ATBackgroundColor24None]::new()
        $this.ColorMap[384] = [ATBackgroundColor24None]::new()
        $this.ColorMap[385] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[386] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[387] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[388] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[389] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[390] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[391] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[392] = [ATBackgroundColor24None]::new()
        $this.ColorMap[393] = [ATBackgroundColor24None]::new()
        $this.ColorMap[394] = [ATBackgroundColor24None]::new()
        $this.ColorMap[395] = [ATBackgroundColor24None]::new()
        $this.ColorMap[396] = [CCAppleVMintALight24]::new()
        $this.ColorMap[397] = [CCAppleVMintALight24]::new()
        $this.ColorMap[398] = [CCAppleVMintALight24]::new()
        $this.ColorMap[399] = [ATBackgroundColor24None]::new()
        $this.ColorMap[400] = [ATBackgroundColor24None]::new()
        $this.ColorMap[401] = [CCAppleVMintALight24]::new()
        $this.ColorMap[402] = [CCAppleVMintALight24]::new()
        $this.ColorMap[403] = [CCAppleVMintALight24]::new()
        $this.ColorMap[404] = [CCAppleVMintALight24]::new()
        $this.ColorMap[405] = [ATBackgroundColor24None]::new()
        $this.ColorMap[406] = [ATBackgroundColor24None]::new() # End Row 10
        $this.ColorMap[407] = [ATBackgroundColor24None]::new()
        $this.ColorMap[408] = [ATBackgroundColor24None]::new()
        $this.ColorMap[409] = [CCAppleVMintALight24]::new()
        $this.ColorMap[410] = [CCAppleVMintALight24]::new()
        $this.ColorMap[411] = [ATBackgroundColor24None]::new()
        $this.ColorMap[412] = [ATBackgroundColor24None]::new()
        $this.ColorMap[413] = [ATBackgroundColor24None]::new()
        $this.ColorMap[414] = [ATBackgroundColor24None]::new()
        $this.ColorMap[415] = [ATBackgroundColor24None]::new()
        $this.ColorMap[416] = [CCAppleVMintALight24]::new()
        $this.ColorMap[417] = [ATBackgroundColor24None]::new()
        $this.ColorMap[418] = [ATBackgroundColor24None]::new()
        $this.ColorMap[419] = [ATBackgroundColor24None]::new()
        $this.ColorMap[420] = [CCAppleVGreyALight24]::new()
        $this.ColorMap[421] = [ATBackgroundColor24None]::new()
        $this.ColorMap[422] = [ATBackgroundColor24None]::new()
        $this.ColorMap[423] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[424] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[425] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[426] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[427] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[428] = [ATBackgroundColor24None]::new()
        $this.ColorMap[429] = [ATBackgroundColor24None]::new()
        $this.ColorMap[430] = [CCAppleVGreyALight24]::new()
        $this.ColorMap[431] = [ATBackgroundColor24None]::new()
        $this.ColorMap[432] = [ATBackgroundColor24None]::new()
        $this.ColorMap[433] = [ATBackgroundColor24None]::new()
        $this.ColorMap[434] = [CCAppleVMintALight24]::new()
        $this.ColorMap[435] = [ATBackgroundColor24None]::new()
        $this.ColorMap[436] = [ATBackgroundColor24None]::new()
        $this.ColorMap[437] = [ATBackgroundColor24None]::new()
        $this.ColorMap[438] = [ATBackgroundColor24None]::new()
        $this.ColorMap[439] = [ATBackgroundColor24None]::new()
        $this.ColorMap[440] = [CCAppleVMintALight24]::new()
        $this.ColorMap[441] = [CCAppleVMintALight24]::new()
        $this.ColorMap[442] = [ATBackgroundColor24None]::new()
        $this.ColorMap[443] = [ATBackgroundColor24None]::new() # End Row 11
        $this.ColorMap[444] = [ATBackgroundColor24None]::new()
        $this.ColorMap[445] = [ATBackgroundColor24None]::new()
        $this.ColorMap[446] = [CCAppleVMintALight24]::new()
        $this.ColorMap[447] = [ATBackgroundColor24None]::new()
        $this.ColorMap[448] = [ATBackgroundColor24None]::new()
        $this.ColorMap[449] = [ATBackgroundColor24None]::new()
        $this.ColorMap[450] = [ATBackgroundColor24None]::new()
        $this.ColorMap[451] = [ATBackgroundColor24None]::new()
        $this.ColorMap[452] = [ATBackgroundColor24None]::new()
        $this.ColorMap[453] = [ATBackgroundColor24None]::new()
        $this.ColorMap[454] = [ATBackgroundColor24None]::new()
        $this.ColorMap[455] = [ATBackgroundColor24None]::new()
        $this.ColorMap[456] = [ATBackgroundColor24None]::new()
        $this.ColorMap[457] = [ATBackgroundColor24None]::new()
        $this.ColorMap[458] = [CCAppleVGreyALight24]::new()
        $this.ColorMap[459] = [CCAppleVGreyALight24]::new()
        $this.ColorMap[460] = [ATBackgroundColor24None]::new()
        $this.ColorMap[461] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[462] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[463] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[464] = [ATBackgroundColor24None]::new()
        $this.ColorMap[465] = [CCAppleVGreyALight24]::new()
        $this.ColorMap[466] = [CCAppleVGreyALight24]::new()
        $this.ColorMap[467] = [ATBackgroundColor24None]::new()
        $this.ColorMap[468] = [ATBackgroundColor24None]::new()
        $this.ColorMap[469] = [ATBackgroundColor24None]::new()
        $this.ColorMap[470] = [ATBackgroundColor24None]::new()
        $this.ColorMap[471] = [ATBackgroundColor24None]::new()
        $this.ColorMap[472] = [ATBackgroundColor24None]::new()
        $this.ColorMap[473] = [ATBackgroundColor24None]::new()
        $this.ColorMap[474] = [ATBackgroundColor24None]::new()
        $this.ColorMap[475] = [ATBackgroundColor24None]::new()
        $this.ColorMap[476] = [ATBackgroundColor24None]::new()
        $this.ColorMap[477] = [ATBackgroundColor24None]::new()
        $this.ColorMap[478] = [CCAppleVMintALight24]::new()
        $this.ColorMap[479] = [ATBackgroundColor24None]::new()
        $this.ColorMap[480] = [ATBackgroundColor24None]::new() # End Row 12
        $this.ColorMap[481] = [ATBackgroundColor24None]::new()
        $this.ColorMap[482] = [ATBackgroundColor24None]::new()
        $this.ColorMap[483] = [ATBackgroundColor24None]::new()
        $this.ColorMap[484] = [ATBackgroundColor24None]::new()
        $this.ColorMap[485] = [ATBackgroundColor24None]::new()
        $this.ColorMap[486] = [ATBackgroundColor24None]::new()
        $this.ColorMap[487] = [ATBackgroundColor24None]::new()
        $this.ColorMap[488] = [ATBackgroundColor24None]::new()
        $this.ColorMap[489] = [ATBackgroundColor24None]::new()
        $this.ColorMap[490] = [ATBackgroundColor24None]::new()
        $this.ColorMap[491] = [ATBackgroundColor24None]::new()
        $this.ColorMap[492] = [ATBackgroundColor24None]::new()
        $this.ColorMap[493] = [ATBackgroundColor24None]::new()
        $this.ColorMap[494] = [CCAppleVGreyALight24]::new()
        $this.ColorMap[495] = [ATBackgroundColor24None]::new()
        $this.ColorMap[496] = [ATBackgroundColor24None]::new()
        $this.ColorMap[497] = [ATBackgroundColor24None]::new()
        $this.ColorMap[498] = [ATBackgroundColor24None]::new()
        $this.ColorMap[499] = [CCAppleVPurpleALight24]::new()
        $this.ColorMap[500] = [ATBackgroundColor24None]::new()
        $this.ColorMap[501] = [ATBackgroundColor24None]::new()
        $this.ColorMap[502] = [ATBackgroundColor24None]::new()
        $this.ColorMap[503] = [ATBackgroundColor24None]::new()
        $this.ColorMap[504] = [CCAppleVGreyALight24]::new()
        $this.ColorMap[505] = [ATBackgroundColor24None]::new()
        $this.ColorMap[506] = [ATBackgroundColor24None]::new()
        $this.ColorMap[507] = [ATBackgroundColor24None]::new()
        $this.ColorMap[508] = [ATBackgroundColor24None]::new()
        $this.ColorMap[509] = [ATBackgroundColor24None]::new()
        $this.ColorMap[510] = [ATBackgroundColor24None]::new()
        $this.ColorMap[511] = [ATBackgroundColor24None]::new()
        $this.ColorMap[512] = [ATBackgroundColor24None]::new()
        $this.ColorMap[513] = [ATBackgroundColor24None]::new()
        $this.ColorMap[514] = [ATBackgroundColor24None]::new()
        $this.ColorMap[515] = [ATBackgroundColor24None]::new()
        $this.ColorMap[516] = [ATBackgroundColor24None]::new()
        $this.ColorMap[517] = [ATBackgroundColor24None]::new() # End Row 13
        $this.ColorMap[518] = [ATBackgroundColor24None]::new()
        $this.ColorMap[519] = [ATBackgroundColor24None]::new()
        $this.ColorMap[520] = [ATBackgroundColor24None]::new()
        $this.ColorMap[521] = [ATBackgroundColor24None]::new()
        $this.ColorMap[522] = [ATBackgroundColor24None]::new()
        $this.ColorMap[523] = [ATBackgroundColor24None]::new()
        $this.ColorMap[524] = [ATBackgroundColor24None]::new()
        $this.ColorMap[525] = [ATBackgroundColor24None]::new()
        $this.ColorMap[526] = [ATBackgroundColor24None]::new()
        $this.ColorMap[527] = [ATBackgroundColor24None]::new()
        $this.ColorMap[528] = [ATBackgroundColor24None]::new()
        $this.ColorMap[529] = [ATBackgroundColor24None]::new()
        $this.ColorMap[530] = [ATBackgroundColor24None]::new()
        $this.ColorMap[531] = [ATBackgroundColor24None]::new()
        $this.ColorMap[532] = [ATBackgroundColor24None]::new()
        $this.ColorMap[533] = [ATBackgroundColor24None]::new()
        $this.ColorMap[534] = [ATBackgroundColor24None]::new()
        $this.ColorMap[535] = [ATBackgroundColor24None]::new()
        $this.ColorMap[536] = [ATBackgroundColor24None]::new()
        $this.ColorMap[537] = [ATBackgroundColor24None]::new()
        $this.ColorMap[538] = [ATBackgroundColor24None]::new()
        $this.ColorMap[539] = [ATBackgroundColor24None]::new()
        $this.ColorMap[540] = [ATBackgroundColor24None]::new()
        $this.ColorMap[541] = [ATBackgroundColor24None]::new()
        $this.ColorMap[542] = [ATBackgroundColor24None]::new()
        $this.ColorMap[543] = [ATBackgroundColor24None]::new()
        $this.ColorMap[544] = [ATBackgroundColor24None]::new()
        $this.ColorMap[545] = [ATBackgroundColor24None]::new()
        $this.ColorMap[546] = [ATBackgroundColor24None]::new()
        $this.ColorMap[547] = [ATBackgroundColor24None]::new()
        $this.ColorMap[548] = [ATBackgroundColor24None]::new()
        $this.ColorMap[549] = [ATBackgroundColor24None]::new()
        $this.ColorMap[550] = [ATBackgroundColor24None]::new()
        $this.ColorMap[551] = [ATBackgroundColor24None]::new()
        $this.ColorMap[552] = [ATBackgroundColor24None]::new()
        $this.ColorMap[553] = [ATBackgroundColor24None]::new()
        $this.ColorMap[554] = [ATBackgroundColor24None]::new() # End Row 14

        $this.CreateImageATString($this.ColorMap)
        $this.ColorMap = $null
    }
}

Class EEIBloodswoop : EEIInternalBase {
    EEIBloodswoop() : base() {
        $this.ColorMap[0]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[1]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[2]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[3]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[4]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[5]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[6]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[7]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[8]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[9]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[10]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[11]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[12]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[13]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[14]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[15]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[16]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[17]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[18]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[19]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[20]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[21]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[22]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[23]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[24]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[25]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[26]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[27]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[28]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[29]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[30]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[31]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[32]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[33]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[34]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[35]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[36]  = [ATBackgroundColor24None]::new() # End Row 0
        $this.ColorMap[37]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[38]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[39]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[40]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[41]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[42]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[43]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[44]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[45]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[46]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[47]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[48]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[49]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[50]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[51]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[52]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[53]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[54]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[55]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[56]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[57]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[58]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[59]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[60]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[61]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[62]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[63]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[64]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[65]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[66]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[67]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[68]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[69]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[70]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[71]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[72]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[73]  = [ATBackgroundColor24None]::new() # End Row 1
        $this.ColorMap[74]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[75]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[76]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[77]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[78]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[79]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[80]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[81]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[82]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[83]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[84]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[85]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[86]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[87]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[88]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[89]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[90]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[91]  = [CCAppleVYellowADark24]::new()
        $this.ColorMap[92]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[93]  = [CCAppleVYellowADark24]::new()
        $this.ColorMap[94]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[95]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[96]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[97]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[98]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[99]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[100] = [ATBackgroundColor24None]::new()
        $this.ColorMap[101] = [ATBackgroundColor24None]::new()
        $this.ColorMap[102] = [ATBackgroundColor24None]::new()
        $this.ColorMap[103] = [ATBackgroundColor24None]::new()
        $this.ColorMap[104] = [ATBackgroundColor24None]::new()
        $this.ColorMap[105] = [ATBackgroundColor24None]::new()
        $this.ColorMap[106] = [ATBackgroundColor24None]::new()
        $this.ColorMap[107] = [ATBackgroundColor24None]::new()
        $this.ColorMap[108] = [ATBackgroundColor24None]::new()
        $this.ColorMap[109] = [ATBackgroundColor24None]::new()
        $this.ColorMap[110] = [ATBackgroundColor24None]::new() # End Row 2
        $this.ColorMap[111] = [ATBackgroundColor24None]::new()
        $this.ColorMap[112] = [ATBackgroundColor24None]::new()
        $this.ColorMap[113] = [ATBackgroundColor24None]::new()
        $this.ColorMap[114] = [ATBackgroundColor24None]::new()
        $this.ColorMap[115] = [ATBackgroundColor24None]::new()
        $this.ColorMap[116] = [CCAppleVRedLight24]::new()
        $this.ColorMap[117] = [CCAppleVRedLight24]::new()
        $this.ColorMap[118] = [ATBackgroundColor24None]::new()
        $this.ColorMap[119] = [ATBackgroundColor24None]::new()
        $this.ColorMap[120] = [ATBackgroundColor24None]::new()
        $this.ColorMap[121] = [ATBackgroundColor24None]::new()
        $this.ColorMap[122] = [CCAppleVRedLight24]::new()
        $this.ColorMap[123] = [CCAppleVRedLight24]::new()
        $this.ColorMap[124] = [ATBackgroundColor24None]::new()
        $this.ColorMap[125] = [ATBackgroundColor24None]::new()
        $this.ColorMap[126] = [ATBackgroundColor24None]::new()
        $this.ColorMap[127] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[128] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[129] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[130] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[131] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[132] = [ATBackgroundColor24None]::new()
        $this.ColorMap[133] = [ATBackgroundColor24None]::new()
        $this.ColorMap[134] = [ATBackgroundColor24None]::new()
        $this.ColorMap[135] = [CCAppleVRedLight24]::new()
        $this.ColorMap[136] = [CCAppleVRedLight24]::new()
        $this.ColorMap[137] = [ATBackgroundColor24None]::new()
        $this.ColorMap[138] = [ATBackgroundColor24None]::new()
        $this.ColorMap[139] = [ATBackgroundColor24None]::new()
        $this.ColorMap[140] = [ATBackgroundColor24None]::new()
        $this.ColorMap[141] = [CCAppleVRedLight24]::new()
        $this.ColorMap[142] = [CCAppleVRedLight24]::new()
        $this.ColorMap[143] = [ATBackgroundColor24None]::new()
        $this.ColorMap[144] = [ATBackgroundColor24None]::new()
        $this.ColorMap[145] = [ATBackgroundColor24None]::new()
        $this.ColorMap[146] = [ATBackgroundColor24None]::new()
        $this.ColorMap[147] = [ATBackgroundColor24None]::new() # End Row 3
        $this.ColorMap[148] = [ATBackgroundColor24None]::new()
        $this.ColorMap[149] = [ATBackgroundColor24None]::new()
        $this.ColorMap[150] = [ATBackgroundColor24None]::new()
        $this.ColorMap[151] = [ATBackgroundColor24None]::new()
        $this.ColorMap[152] = [CCAppleVRedLight24]::new()
        $this.ColorMap[153] = [CCAppleVRedLight24]::new()
        $this.ColorMap[154] = [CCAppleVRedLight24]::new()
        $this.ColorMap[155] = [CCAppleVRedLight24]::new()
        $this.ColorMap[156] = [CCAppleVRedLight24]::new()
        $this.ColorMap[157] = [ATBackgroundColor24None]::new()
        $this.ColorMap[158] = [CCAppleVRedLight24]::new()
        $this.ColorMap[159] = [CCAppleVRedLight24]::new()
        $this.ColorMap[160] = [CCAppleVRedLight24]::new()
        $this.ColorMap[161] = [CCAppleVRedLight24]::new()
        $this.ColorMap[162] = [CCAppleVRedLight24]::new()
        $this.ColorMap[163] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[164] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[165] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[166] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[167] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[168] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[169] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[170] = [CCAppleVRedLight24]::new()
        $this.ColorMap[171] = [CCAppleVRedLight24]::new()
        $this.ColorMap[172] = [CCAppleVRedLight24]::new()
        $this.ColorMap[173] = [CCAppleVRedLight24]::new()
        $this.ColorMap[174] = [CCAppleVRedLight24]::new()
        $this.ColorMap[175] = [ATBackgroundColor24None]::new()
        $this.ColorMap[176] = [CCAppleVRedLight24]::new()
        $this.ColorMap[177] = [CCAppleVRedLight24]::new()
        $this.ColorMap[178] = [CCAppleVRedLight24]::new()
        $this.ColorMap[179] = [CCAppleVRedLight24]::new()
        $this.ColorMap[180] = [CCAppleVRedLight24]::new()
        $this.ColorMap[181] = [ATBackgroundColor24None]::new()
        $this.ColorMap[182] = [ATBackgroundColor24None]::new()
        $this.ColorMap[183] = [ATBackgroundColor24None]::new()
        $this.ColorMap[184] = [ATBackgroundColor24None]::new() # End Row 4
        $this.ColorMap[185] = [ATBackgroundColor24None]::new()
        $this.ColorMap[186] = [ATBackgroundColor24None]::new()
        $this.ColorMap[187] = [ATBackgroundColor24None]::new()
        $this.ColorMap[188] = [ATBackgroundColor24None]::new()
        $this.ColorMap[189] = [CCAppleVRedLight24]::new()
        $this.ColorMap[190] = [CCAppleVRedLight24]::new()
        $this.ColorMap[191] = [CCAppleVRedLight24]::new()
        $this.ColorMap[192] = [CCAppleVRedLight24]::new()
        $this.ColorMap[193] = [CCAppleVRedLight24]::new()
        $this.ColorMap[194] = [CCAppleVRedLight24]::new()
        $this.ColorMap[195] = [CCAppleVRedLight24]::new()
        $this.ColorMap[196] = [CCAppleVRedLight24]::new()
        $this.ColorMap[197] = [CCAppleVRedLight24]::new()
        $this.ColorMap[198] = [CCAppleVRedLight24]::new()
        $this.ColorMap[199] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[200] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[201] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[202] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[203] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[204] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[205] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[206] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[207] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[208] = [CCAppleVRedLight24]::new()
        $this.ColorMap[209] = [CCAppleVRedLight24]::new()
        $this.ColorMap[210] = [CCAppleVRedLight24]::new()
        $this.ColorMap[211] = [CCAppleVRedLight24]::new()
        $this.ColorMap[212] = [CCAppleVRedLight24]::new()
        $this.ColorMap[213] = [CCAppleVRedLight24]::new()
        $this.ColorMap[214] = [CCAppleVRedLight24]::new()
        $this.ColorMap[215] = [CCAppleVRedLight24]::new()
        $this.ColorMap[216] = [CCAppleVRedLight24]::new()
        $this.ColorMap[217] = [CCAppleVRedLight24]::new()
        $this.ColorMap[218] = [ATBackgroundColor24None]::new()
        $this.ColorMap[219] = [ATBackgroundColor24None]::new()
        $this.ColorMap[220] = [ATBackgroundColor24None]::new()
        $this.ColorMap[221] = [ATBackgroundColor24None]::new() # End Row 5
        $this.ColorMap[222] = [ATBackgroundColor24None]::new()
        $this.ColorMap[223] = [ATBackgroundColor24None]::new()
        $this.ColorMap[224] = [ATBackgroundColor24None]::new()
        $this.ColorMap[225] = [CCAppleVRedLight24]::new()
        $this.ColorMap[226] = [CCAppleVRedLight24]::new()
        $this.ColorMap[227] = [CCAppleVRedLight24]::new()
        $this.ColorMap[228] = [CCAppleVRedLight24]::new()
        $this.ColorMap[229] = [CCAppleVRedLight24]::new()
        $this.ColorMap[230] = [CCAppleVRedLight24]::new()
        $this.ColorMap[231] = [CCAppleVRedLight24]::new()
        $this.ColorMap[232] = [CCAppleVRedLight24]::new()
        $this.ColorMap[233] = [CCAppleVRedLight24]::new()
        $this.ColorMap[234] = [CCAppleVRedLight24]::new()
        $this.ColorMap[235] = [CCAppleVRedLight24]::new()
        $this.ColorMap[236] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[237] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[238] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[239] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[240] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[241] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[242] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[243] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[244] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[245] = [CCAppleVRedLight24]::new()
        $this.ColorMap[246] = [CCAppleVRedLight24]::new()
        $this.ColorMap[247] = [CCAppleVRedLight24]::new()
        $this.ColorMap[248] = [CCAppleVRedLight24]::new()
        $this.ColorMap[249] = [CCAppleVRedLight24]::new()
        $this.ColorMap[250] = [CCAppleVRedLight24]::new()
        $this.ColorMap[251] = [CCAppleVRedLight24]::new()
        $this.ColorMap[252] = [CCAppleVRedLight24]::new()
        $this.ColorMap[253] = [CCAppleVRedLight24]::new()
        $this.ColorMap[254] = [CCAppleVRedLight24]::new()
        $this.ColorMap[255] = [CCAppleVRedLight24]::new()
        $this.ColorMap[256] = [ATBackgroundColor24None]::new()
        $this.ColorMap[257] = [ATBackgroundColor24None]::new()
        $this.ColorMap[258] = [ATBackgroundColor24None]::new() # End Row 6
        $this.ColorMap[259] = [ATBackgroundColor24None]::new()
        $this.ColorMap[260] = [ATBackgroundColor24None]::new()
        $this.ColorMap[261] = [ATBackgroundColor24None]::new()
        $this.ColorMap[262] = [CCAppleVRedLight24]::new()
        $this.ColorMap[263] = [CCAppleVRedLight24]::new()
        $this.ColorMap[264] = [CCAppleVRedLight24]::new()
        $this.ColorMap[265] = [CCAppleVRedLight24]::new()
        $this.ColorMap[266] = [CCAppleVRedLight24]::new()
        $this.ColorMap[267] = [CCAppleVRedLight24]::new()
        $this.ColorMap[268] = [CCAppleVRedLight24]::new()
        $this.ColorMap[269] = [CCAppleVRedLight24]::new()
        $this.ColorMap[270] = [CCAppleVRedLight24]::new()
        $this.ColorMap[271] = [CCAppleVRedLight24]::new()
        $this.ColorMap[272] = [CCAppleVRedLight24]::new()
        $this.ColorMap[273] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[274] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[275] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[276] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[277] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[278] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[279] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[280] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[281] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[282] = [CCAppleVRedLight24]::new()
        $this.ColorMap[283] = [CCAppleVRedLight24]::new()
        $this.ColorMap[284] = [CCAppleVRedLight24]::new()
        $this.ColorMap[285] = [CCAppleVRedLight24]::new()
        $this.ColorMap[286] = [CCAppleVRedLight24]::new()
        $this.ColorMap[287] = [CCAppleVRedLight24]::new()
        $this.ColorMap[288] = [CCAppleVRedLight24]::new()
        $this.ColorMap[289] = [CCAppleVRedLight24]::new()
        $this.ColorMap[290] = [CCAppleVRedLight24]::new()
        $this.ColorMap[291] = [CCAppleVRedLight24]::new()
        $this.ColorMap[292] = [CCAppleVRedLight24]::new()
        $this.ColorMap[293] = [ATBackgroundColor24None]::new()
        $this.ColorMap[294] = [ATBackgroundColor24None]::new()
        $this.ColorMap[295] = [ATBackgroundColor24None]::new() # End Row 7
        $this.ColorMap[296] = [ATBackgroundColor24None]::new()
        $this.ColorMap[297] = [ATBackgroundColor24None]::new()
        $this.ColorMap[298] = [ATBackgroundColor24None]::new()
        $this.ColorMap[299] = [CCAppleVRedLight24]::new()
        $this.ColorMap[300] = [CCAppleVRedLight24]::new()
        $this.ColorMap[301] = [CCAppleVRedLight24]::new()
        $this.ColorMap[302] = [CCAppleVRedLight24]::new()
        $this.ColorMap[303] = [CCAppleVRedLight24]::new()
        $this.ColorMap[304] = [CCAppleVRedLight24]::new()
        $this.ColorMap[305] = [CCAppleVRedLight24]::new()
        $this.ColorMap[306] = [CCAppleVRedLight24]::new()
        $this.ColorMap[307] = [CCAppleVRedLight24]::new()
        $this.ColorMap[308] = [CCAppleVRedLight24]::new()
        $this.ColorMap[309] = [CCAppleVRedLight24]::new()
        $this.ColorMap[310] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[311] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[312] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[313] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[314] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[315] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[316] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[317] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[318] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[319] = [CCAppleVRedLight24]::new()
        $this.ColorMap[320] = [CCAppleVRedLight24]::new()
        $this.ColorMap[321] = [CCAppleVRedLight24]::new()
        $this.ColorMap[322] = [CCAppleVRedLight24]::new()
        $this.ColorMap[323] = [CCAppleVRedLight24]::new()
        $this.ColorMap[324] = [CCAppleVRedLight24]::new()
        $this.ColorMap[325] = [CCAppleVRedLight24]::new()
        $this.ColorMap[326] = [CCAppleVRedLight24]::new()
        $this.ColorMap[327] = [CCAppleVRedLight24]::new()
        $this.ColorMap[328] = [CCAppleVRedLight24]::new()
        $this.ColorMap[329] = [CCAppleVRedLight24]::new()
        $this.ColorMap[330] = [ATBackgroundColor24None]::new()
        $this.ColorMap[331] = [ATBackgroundColor24None]::new()
        $this.ColorMap[332] = [ATBackgroundColor24None]::new() # End Row 8
        $this.ColorMap[333] = [ATBackgroundColor24None]::new()
        $this.ColorMap[334] = [ATBackgroundColor24None]::new()
        $this.ColorMap[335] = [CCAppleVRedLight24]::new()
        $this.ColorMap[336] = [CCAppleVRedLight24]::new()
        $this.ColorMap[337] = [CCAppleVRedLight24]::new()
        $this.ColorMap[338] = [CCAppleVRedLight24]::new()
        $this.ColorMap[339] = [CCAppleVRedLight24]::new()
        $this.ColorMap[340] = [CCAppleVRedLight24]::new()
        $this.ColorMap[341] = [CCAppleVRedLight24]::new()
        $this.ColorMap[342] = [CCAppleVRedLight24]::new()
        $this.ColorMap[343] = [CCAppleVRedLight24]::new()
        $this.ColorMap[344] = [CCAppleVRedLight24]::new()
        $this.ColorMap[345] = [ATBackgroundColor24None]::new()
        $this.ColorMap[346] = [ATBackgroundColor24None]::new()
        $this.ColorMap[347] = [CCAppleVRedLight24]::new()
        $this.ColorMap[348] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[349] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[350] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[351] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[352] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[353] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[354] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[355] = [CCAppleVRedLight24]::new()
        $this.ColorMap[356] = [ATBackgroundColor24None]::new()
        $this.ColorMap[357] = [ATBackgroundColor24None]::new()
        $this.ColorMap[358] = [CCAppleVRedLight24]::new()
        $this.ColorMap[359] = [CCAppleVRedLight24]::new()
        $this.ColorMap[360] = [CCAppleVRedLight24]::new()
        $this.ColorMap[361] = [CCAppleVRedLight24]::new()
        $this.ColorMap[362] = [CCAppleVRedLight24]::new()
        $this.ColorMap[363] = [CCAppleVRedLight24]::new()
        $this.ColorMap[364] = [CCAppleVRedLight24]::new()
        $this.ColorMap[365] = [CCAppleVRedLight24]::new()
        $this.ColorMap[366] = [CCAppleVRedLight24]::new()
        $this.ColorMap[367] = [CCAppleVRedLight24]::new()
        $this.ColorMap[368] = [ATBackgroundColor24None]::new()
        $this.ColorMap[369] = [ATBackgroundColor24None]::new() # End Row 9
        $this.ColorMap[370] = [ATBackgroundColor24None]::new()
        $this.ColorMap[371] = [ATBackgroundColor24None]::new()
        $this.ColorMap[372] = [CCAppleVRedLight24]::new()
        $this.ColorMap[373] = [CCAppleVRedLight24]::new()
        $this.ColorMap[374] = [CCAppleVRedLight24]::new()
        $this.ColorMap[375] = [CCAppleVRedLight24]::new()
        $this.ColorMap[376] = [ATBackgroundColor24None]::new()
        $this.ColorMap[377] = [ATBackgroundColor24None]::new()
        $this.ColorMap[378] = [CCAppleVRedLight24]::new()
        $this.ColorMap[379] = [CCAppleVRedLight24]::new()
        $this.ColorMap[380] = [CCAppleVRedLight24]::new()
        $this.ColorMap[381] = [ATBackgroundColor24None]::new()
        $this.ColorMap[382] = [ATBackgroundColor24None]::new()
        $this.ColorMap[383] = [ATBackgroundColor24None]::new()
        $this.ColorMap[384] = [ATBackgroundColor24None]::new()
        $this.ColorMap[385] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[386] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[387] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[388] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[389] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[390] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[391] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[392] = [ATBackgroundColor24None]::new()
        $this.ColorMap[393] = [ATBackgroundColor24None]::new()
        $this.ColorMap[394] = [ATBackgroundColor24None]::new()
        $this.ColorMap[395] = [ATBackgroundColor24None]::new()
        $this.ColorMap[396] = [CCAppleVRedLight24]::new()
        $this.ColorMap[397] = [CCAppleVRedLight24]::new()
        $this.ColorMap[398] = [CCAppleVRedLight24]::new()
        $this.ColorMap[399] = [ATBackgroundColor24None]::new()
        $this.ColorMap[400] = [ATBackgroundColor24None]::new()
        $this.ColorMap[401] = [CCAppleVRedLight24]::new()
        $this.ColorMap[402] = [CCAppleVRedLight24]::new()
        $this.ColorMap[403] = [CCAppleVRedLight24]::new()
        $this.ColorMap[404] = [CCAppleVRedLight24]::new()
        $this.ColorMap[405] = [ATBackgroundColor24None]::new()
        $this.ColorMap[406] = [ATBackgroundColor24None]::new() # End Row 10
        $this.ColorMap[407] = [ATBackgroundColor24None]::new()
        $this.ColorMap[408] = [ATBackgroundColor24None]::new()
        $this.ColorMap[409] = [CCAppleVRedLight24]::new()
        $this.ColorMap[410] = [CCAppleVRedLight24]::new()
        $this.ColorMap[411] = [ATBackgroundColor24None]::new()
        $this.ColorMap[412] = [ATBackgroundColor24None]::new()
        $this.ColorMap[413] = [ATBackgroundColor24None]::new()
        $this.ColorMap[414] = [ATBackgroundColor24None]::new()
        $this.ColorMap[415] = [ATBackgroundColor24None]::new()
        $this.ColorMap[416] = [CCAppleVRedLight24]::new()
        $this.ColorMap[417] = [ATBackgroundColor24None]::new()
        $this.ColorMap[418] = [ATBackgroundColor24None]::new()
        $this.ColorMap[419] = [ATBackgroundColor24None]::new()
        $this.ColorMap[420] = [CCAppleVRedALight24]::new()
        $this.ColorMap[421] = [ATBackgroundColor24None]::new()
        $this.ColorMap[422] = [ATBackgroundColor24None]::new()
        $this.ColorMap[423] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[424] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[425] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[426] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[427] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[428] = [ATBackgroundColor24None]::new()
        $this.ColorMap[429] = [ATBackgroundColor24None]::new()
        $this.ColorMap[430] = [CCAppleVRedALight24]::new()
        $this.ColorMap[431] = [ATBackgroundColor24None]::new()
        $this.ColorMap[432] = [ATBackgroundColor24None]::new()
        $this.ColorMap[433] = [ATBackgroundColor24None]::new()
        $this.ColorMap[434] = [CCAppleVRedLight24]::new()
        $this.ColorMap[435] = [ATBackgroundColor24None]::new()
        $this.ColorMap[436] = [ATBackgroundColor24None]::new()
        $this.ColorMap[437] = [ATBackgroundColor24None]::new()
        $this.ColorMap[438] = [ATBackgroundColor24None]::new()
        $this.ColorMap[439] = [ATBackgroundColor24None]::new()
        $this.ColorMap[440] = [CCAppleVRedLight24]::new()
        $this.ColorMap[441] = [CCAppleVRedLight24]::new()
        $this.ColorMap[442] = [ATBackgroundColor24None]::new()
        $this.ColorMap[443] = [ATBackgroundColor24None]::new() # End Row 11
        $this.ColorMap[444] = [ATBackgroundColor24None]::new()
        $this.ColorMap[445] = [ATBackgroundColor24None]::new()
        $this.ColorMap[446] = [CCAppleVRedLight24]::new()
        $this.ColorMap[447] = [ATBackgroundColor24None]::new()
        $this.ColorMap[448] = [ATBackgroundColor24None]::new()
        $this.ColorMap[449] = [ATBackgroundColor24None]::new()
        $this.ColorMap[450] = [ATBackgroundColor24None]::new()
        $this.ColorMap[451] = [ATBackgroundColor24None]::new()
        $this.ColorMap[452] = [ATBackgroundColor24None]::new()
        $this.ColorMap[453] = [ATBackgroundColor24None]::new()
        $this.ColorMap[454] = [ATBackgroundColor24None]::new()
        $this.ColorMap[455] = [ATBackgroundColor24None]::new()
        $this.ColorMap[456] = [ATBackgroundColor24None]::new()
        $this.ColorMap[457] = [ATBackgroundColor24None]::new()
        $this.ColorMap[458] = [CCAppleVRedALight24]::new()
        $this.ColorMap[459] = [CCAppleVRedALight24]::new()
        $this.ColorMap[460] = [ATBackgroundColor24None]::new()
        $this.ColorMap[461] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[462] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[463] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[464] = [ATBackgroundColor24None]::new()
        $this.ColorMap[465] = [CCAppleVRedALight24]::new()
        $this.ColorMap[466] = [CCAppleVRedALight24]::new()
        $this.ColorMap[467] = [ATBackgroundColor24None]::new()
        $this.ColorMap[468] = [ATBackgroundColor24None]::new()
        $this.ColorMap[469] = [ATBackgroundColor24None]::new()
        $this.ColorMap[470] = [ATBackgroundColor24None]::new()
        $this.ColorMap[471] = [ATBackgroundColor24None]::new()
        $this.ColorMap[472] = [ATBackgroundColor24None]::new()
        $this.ColorMap[473] = [ATBackgroundColor24None]::new()
        $this.ColorMap[474] = [ATBackgroundColor24None]::new()
        $this.ColorMap[475] = [ATBackgroundColor24None]::new()
        $this.ColorMap[476] = [ATBackgroundColor24None]::new()
        $this.ColorMap[477] = [ATBackgroundColor24None]::new()
        $this.ColorMap[478] = [CCAppleVRedLight24]::new()
        $this.ColorMap[479] = [ATBackgroundColor24None]::new()
        $this.ColorMap[480] = [ATBackgroundColor24None]::new() # End Row 12
        $this.ColorMap[481] = [ATBackgroundColor24None]::new()
        $this.ColorMap[482] = [ATBackgroundColor24None]::new()
        $this.ColorMap[483] = [ATBackgroundColor24None]::new()
        $this.ColorMap[484] = [ATBackgroundColor24None]::new()
        $this.ColorMap[485] = [ATBackgroundColor24None]::new()
        $this.ColorMap[486] = [ATBackgroundColor24None]::new()
        $this.ColorMap[487] = [ATBackgroundColor24None]::new()
        $this.ColorMap[488] = [ATBackgroundColor24None]::new()
        $this.ColorMap[489] = [ATBackgroundColor24None]::new()
        $this.ColorMap[490] = [ATBackgroundColor24None]::new()
        $this.ColorMap[491] = [ATBackgroundColor24None]::new()
        $this.ColorMap[492] = [ATBackgroundColor24None]::new()
        $this.ColorMap[493] = [ATBackgroundColor24None]::new()
        $this.ColorMap[494] = [CCAppleVRedALight24]::new()
        $this.ColorMap[495] = [ATBackgroundColor24None]::new()
        $this.ColorMap[496] = [ATBackgroundColor24None]::new()
        $this.ColorMap[497] = [ATBackgroundColor24None]::new()
        $this.ColorMap[498] = [ATBackgroundColor24None]::new()
        $this.ColorMap[499] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[500] = [ATBackgroundColor24None]::new()
        $this.ColorMap[501] = [ATBackgroundColor24None]::new()
        $this.ColorMap[502] = [ATBackgroundColor24None]::new()
        $this.ColorMap[503] = [ATBackgroundColor24None]::new()
        $this.ColorMap[504] = [CCAppleVRedALight24]::new()
        $this.ColorMap[505] = [ATBackgroundColor24None]::new()
        $this.ColorMap[506] = [ATBackgroundColor24None]::new()
        $this.ColorMap[507] = [ATBackgroundColor24None]::new()
        $this.ColorMap[508] = [ATBackgroundColor24None]::new()
        $this.ColorMap[509] = [ATBackgroundColor24None]::new()
        $this.ColorMap[510] = [ATBackgroundColor24None]::new()
        $this.ColorMap[511] = [ATBackgroundColor24None]::new()
        $this.ColorMap[512] = [ATBackgroundColor24None]::new()
        $this.ColorMap[513] = [ATBackgroundColor24None]::new()
        $this.ColorMap[514] = [ATBackgroundColor24None]::new()
        $this.ColorMap[515] = [ATBackgroundColor24None]::new()
        $this.ColorMap[516] = [ATBackgroundColor24None]::new()
        $this.ColorMap[517] = [ATBackgroundColor24None]::new() # End Row 13
        $this.ColorMap[518] = [ATBackgroundColor24None]::new()
        $this.ColorMap[519] = [ATBackgroundColor24None]::new()
        $this.ColorMap[520] = [ATBackgroundColor24None]::new()
        $this.ColorMap[521] = [ATBackgroundColor24None]::new()
        $this.ColorMap[522] = [ATBackgroundColor24None]::new()
        $this.ColorMap[523] = [ATBackgroundColor24None]::new()
        $this.ColorMap[524] = [ATBackgroundColor24None]::new()
        $this.ColorMap[525] = [ATBackgroundColor24None]::new()
        $this.ColorMap[526] = [ATBackgroundColor24None]::new()
        $this.ColorMap[527] = [ATBackgroundColor24None]::new()
        $this.ColorMap[528] = [ATBackgroundColor24None]::new()
        $this.ColorMap[529] = [ATBackgroundColor24None]::new()
        $this.ColorMap[530] = [ATBackgroundColor24None]::new()
        $this.ColorMap[531] = [ATBackgroundColor24None]::new()
        $this.ColorMap[532] = [ATBackgroundColor24None]::new()
        $this.ColorMap[533] = [ATBackgroundColor24None]::new()
        $this.ColorMap[534] = [ATBackgroundColor24None]::new()
        $this.ColorMap[535] = [ATBackgroundColor24None]::new()
        $this.ColorMap[536] = [ATBackgroundColor24None]::new()
        $this.ColorMap[537] = [ATBackgroundColor24None]::new()
        $this.ColorMap[538] = [ATBackgroundColor24None]::new()
        $this.ColorMap[539] = [ATBackgroundColor24None]::new()
        $this.ColorMap[540] = [ATBackgroundColor24None]::new()
        $this.ColorMap[541] = [ATBackgroundColor24None]::new()
        $this.ColorMap[542] = [ATBackgroundColor24None]::new()
        $this.ColorMap[543] = [ATBackgroundColor24None]::new()
        $this.ColorMap[544] = [ATBackgroundColor24None]::new()
        $this.ColorMap[545] = [ATBackgroundColor24None]::new()
        $this.ColorMap[546] = [ATBackgroundColor24None]::new()
        $this.ColorMap[547] = [ATBackgroundColor24None]::new()
        $this.ColorMap[548] = [ATBackgroundColor24None]::new()
        $this.ColorMap[549] = [ATBackgroundColor24None]::new()
        $this.ColorMap[550] = [ATBackgroundColor24None]::new()
        $this.ColorMap[551] = [ATBackgroundColor24None]::new()
        $this.ColorMap[552] = [ATBackgroundColor24None]::new()
        $this.ColorMap[553] = [ATBackgroundColor24None]::new()
        $this.ColorMap[554] = [ATBackgroundColor24None]::new() # End Row 14

        $this.CreateImageATString($this.ColorMap)
        $this.ColorMap = $null
    }
}

Class EEIDuskbane : EEIInternalBase {
    EEIDuskbane() : base() {
        $this.ColorMap[0]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[1]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[2]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[3]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[4]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[5]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[6]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[7]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[8]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[9]   = [ATBackgroundColor24None]::new()
        $this.ColorMap[10]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[11]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[12]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[13]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[14]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[15]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[16]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[17]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[18]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[19]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[20]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[21]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[22]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[23]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[24]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[25]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[26]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[27]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[28]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[29]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[30]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[31]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[32]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[33]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[34]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[35]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[36]  = [ATBackgroundColor24None]::new() # End Row 0
        $this.ColorMap[37]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[38]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[39]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[40]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[41]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[42]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[43]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[44]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[45]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[46]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[47]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[48]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[49]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[50]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[51]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[52]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[53]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[54]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[55]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[56]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[57]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[58]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[59]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[60]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[61]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[62]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[63]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[64]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[65]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[66]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[67]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[68]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[69]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[70]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[71]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[72]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[73]  = [ATBackgroundColor24None]::new() # End Row 1
        $this.ColorMap[74]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[75]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[76]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[77]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[78]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[79]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[80]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[81]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[82]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[83]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[84]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[85]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[86]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[87]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[88]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[89]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[90]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[91]  = [CCAppleVYellowADark24]::new()
        $this.ColorMap[92]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[93]  = [CCAppleVYellowADark24]::new()
        $this.ColorMap[94]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[95]  = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[96]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[97]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[98]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[99]  = [ATBackgroundColor24None]::new()
        $this.ColorMap[100] = [ATBackgroundColor24None]::new()
        $this.ColorMap[101] = [ATBackgroundColor24None]::new()
        $this.ColorMap[102] = [ATBackgroundColor24None]::new()
        $this.ColorMap[103] = [ATBackgroundColor24None]::new()
        $this.ColorMap[104] = [ATBackgroundColor24None]::new()
        $this.ColorMap[105] = [ATBackgroundColor24None]::new()
        $this.ColorMap[106] = [ATBackgroundColor24None]::new()
        $this.ColorMap[107] = [ATBackgroundColor24None]::new()
        $this.ColorMap[108] = [ATBackgroundColor24None]::new()
        $this.ColorMap[109] = [ATBackgroundColor24None]::new()
        $this.ColorMap[110] = [ATBackgroundColor24None]::new() # End Row 2
        $this.ColorMap[111] = [ATBackgroundColor24None]::new()
        $this.ColorMap[112] = [ATBackgroundColor24None]::new()
        $this.ColorMap[113] = [ATBackgroundColor24None]::new()
        $this.ColorMap[114] = [ATBackgroundColor24None]::new()
        $this.ColorMap[115] = [ATBackgroundColor24None]::new()
        $this.ColorMap[116] = [CCAppleVRedLight24]::new()
        $this.ColorMap[117] = [CCAppleVRedLight24]::new()
        $this.ColorMap[118] = [ATBackgroundColor24None]::new()
        $this.ColorMap[119] = [ATBackgroundColor24None]::new()
        $this.ColorMap[120] = [ATBackgroundColor24None]::new()
        $this.ColorMap[121] = [ATBackgroundColor24None]::new()
        $this.ColorMap[122] = [CCAppleVRedLight24]::new()
        $this.ColorMap[123] = [CCAppleVRedLight24]::new()
        $this.ColorMap[124] = [ATBackgroundColor24None]::new()
        $this.ColorMap[125] = [ATBackgroundColor24None]::new()
        $this.ColorMap[126] = [ATBackgroundColor24None]::new()
        $this.ColorMap[127] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[128] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[129] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[130] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[131] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[132] = [ATBackgroundColor24None]::new()
        $this.ColorMap[133] = [ATBackgroundColor24None]::new()
        $this.ColorMap[134] = [ATBackgroundColor24None]::new()
        $this.ColorMap[135] = [CCAppleVRedLight24]::new()
        $this.ColorMap[136] = [CCAppleVRedLight24]::new()
        $this.ColorMap[137] = [ATBackgroundColor24None]::new()
        $this.ColorMap[138] = [ATBackgroundColor24None]::new()
        $this.ColorMap[139] = [ATBackgroundColor24None]::new()
        $this.ColorMap[140] = [ATBackgroundColor24None]::new()
        $this.ColorMap[141] = [CCAppleVRedLight24]::new()
        $this.ColorMap[142] = [CCAppleVRedLight24]::new()
        $this.ColorMap[143] = [ATBackgroundColor24None]::new()
        $this.ColorMap[144] = [ATBackgroundColor24None]::new()
        $this.ColorMap[145] = [ATBackgroundColor24None]::new()
        $this.ColorMap[146] = [ATBackgroundColor24None]::new()
        $this.ColorMap[147] = [ATBackgroundColor24None]::new() # End Row 3
        $this.ColorMap[148] = [ATBackgroundColor24None]::new()
        $this.ColorMap[149] = [ATBackgroundColor24None]::new()
        $this.ColorMap[150] = [ATBackgroundColor24None]::new()
        $this.ColorMap[151] = [ATBackgroundColor24None]::new()
        $this.ColorMap[152] = [CCAppleVRedLight24]::new()
        $this.ColorMap[153] = [CCAppleVRedLight24]::new()
        $this.ColorMap[154] = [CCAppleVRedLight24]::new()
        $this.ColorMap[155] = [CCAppleVRedLight24]::new()
        $this.ColorMap[156] = [CCAppleVRedLight24]::new()
        $this.ColorMap[157] = [ATBackgroundColor24None]::new()
        $this.ColorMap[158] = [CCAppleVRedLight24]::new()
        $this.ColorMap[159] = [CCAppleVRedLight24]::new()
        $this.ColorMap[160] = [CCAppleVRedLight24]::new()
        $this.ColorMap[161] = [CCAppleVRedLight24]::new()
        $this.ColorMap[162] = [CCAppleVRedLight24]::new()
        $this.ColorMap[163] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[164] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[165] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[166] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[167] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[168] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[169] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[170] = [CCAppleVRedLight24]::new()
        $this.ColorMap[171] = [CCAppleVRedLight24]::new()
        $this.ColorMap[172] = [CCAppleVRedLight24]::new()
        $this.ColorMap[173] = [CCAppleVRedLight24]::new()
        $this.ColorMap[174] = [CCAppleVRedLight24]::new()
        $this.ColorMap[175] = [ATBackgroundColor24None]::new()
        $this.ColorMap[176] = [CCAppleVRedLight24]::new()
        $this.ColorMap[177] = [CCAppleVRedLight24]::new()
        $this.ColorMap[178] = [CCAppleVRedLight24]::new()
        $this.ColorMap[179] = [CCAppleVRedLight24]::new()
        $this.ColorMap[180] = [CCAppleVRedLight24]::new()
        $this.ColorMap[181] = [ATBackgroundColor24None]::new()
        $this.ColorMap[182] = [ATBackgroundColor24None]::new()
        $this.ColorMap[183] = [ATBackgroundColor24None]::new()
        $this.ColorMap[184] = [ATBackgroundColor24None]::new() # End Row 4
        $this.ColorMap[185] = [ATBackgroundColor24None]::new()
        $this.ColorMap[186] = [ATBackgroundColor24None]::new()
        $this.ColorMap[187] = [ATBackgroundColor24None]::new()
        $this.ColorMap[188] = [ATBackgroundColor24None]::new()
        $this.ColorMap[189] = [CCAppleVRedLight24]::new()
        $this.ColorMap[190] = [CCAppleVRedLight24]::new()
        $this.ColorMap[191] = [CCAppleVRedLight24]::new()
        $this.ColorMap[192] = [CCAppleVRedLight24]::new()
        $this.ColorMap[193] = [CCAppleVRedLight24]::new()
        $this.ColorMap[194] = [CCAppleVRedLight24]::new()
        $this.ColorMap[195] = [CCAppleVRedLight24]::new()
        $this.ColorMap[196] = [CCAppleVRedLight24]::new()
        $this.ColorMap[197] = [CCAppleVRedLight24]::new()
        $this.ColorMap[198] = [CCAppleVRedLight24]::new()
        $this.ColorMap[199] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[200] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[201] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[202] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[203] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[204] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[205] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[206] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[207] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[208] = [CCAppleVRedLight24]::new()
        $this.ColorMap[209] = [CCAppleVRedLight24]::new()
        $this.ColorMap[210] = [CCAppleVRedLight24]::new()
        $this.ColorMap[211] = [CCAppleVRedLight24]::new()
        $this.ColorMap[212] = [CCAppleVRedLight24]::new()
        $this.ColorMap[213] = [CCAppleVRedLight24]::new()
        $this.ColorMap[214] = [CCAppleVRedLight24]::new()
        $this.ColorMap[215] = [CCAppleVRedLight24]::new()
        $this.ColorMap[216] = [CCAppleVRedLight24]::new()
        $this.ColorMap[217] = [CCAppleVRedLight24]::new()
        $this.ColorMap[218] = [ATBackgroundColor24None]::new()
        $this.ColorMap[219] = [ATBackgroundColor24None]::new()
        $this.ColorMap[220] = [ATBackgroundColor24None]::new()
        $this.ColorMap[221] = [ATBackgroundColor24None]::new() # End Row 5
        $this.ColorMap[222] = [ATBackgroundColor24None]::new()
        $this.ColorMap[223] = [ATBackgroundColor24None]::new()
        $this.ColorMap[224] = [ATBackgroundColor24None]::new()
        $this.ColorMap[225] = [CCAppleVRedLight24]::new()
        $this.ColorMap[226] = [CCAppleVRedLight24]::new()
        $this.ColorMap[227] = [CCAppleVRedLight24]::new()
        $this.ColorMap[228] = [CCAppleVRedLight24]::new()
        $this.ColorMap[229] = [CCAppleVRedLight24]::new()
        $this.ColorMap[230] = [CCAppleVRedLight24]::new()
        $this.ColorMap[231] = [CCAppleVRedLight24]::new()
        $this.ColorMap[232] = [CCAppleVRedLight24]::new()
        $this.ColorMap[233] = [CCAppleVRedLight24]::new()
        $this.ColorMap[234] = [CCAppleVRedLight24]::new()
        $this.ColorMap[235] = [CCAppleVRedLight24]::new()
        $this.ColorMap[236] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[237] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[238] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[239] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[240] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[241] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[242] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[243] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[244] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[245] = [CCAppleVRedLight24]::new()
        $this.ColorMap[246] = [CCAppleVRedLight24]::new()
        $this.ColorMap[247] = [CCAppleVRedLight24]::new()
        $this.ColorMap[248] = [CCAppleVRedLight24]::new()
        $this.ColorMap[249] = [CCAppleVRedLight24]::new()
        $this.ColorMap[250] = [CCAppleVRedLight24]::new()
        $this.ColorMap[251] = [CCAppleVRedLight24]::new()
        $this.ColorMap[252] = [CCAppleVRedLight24]::new()
        $this.ColorMap[253] = [CCAppleVRedLight24]::new()
        $this.ColorMap[254] = [CCAppleVRedLight24]::new()
        $this.ColorMap[255] = [CCAppleVRedLight24]::new()
        $this.ColorMap[256] = [ATBackgroundColor24None]::new()
        $this.ColorMap[257] = [ATBackgroundColor24None]::new()
        $this.ColorMap[258] = [ATBackgroundColor24None]::new() # End Row 6
        $this.ColorMap[259] = [ATBackgroundColor24None]::new()
        $this.ColorMap[260] = [ATBackgroundColor24None]::new()
        $this.ColorMap[261] = [ATBackgroundColor24None]::new()
        $this.ColorMap[262] = [CCAppleVRedLight24]::new()
        $this.ColorMap[263] = [CCAppleVRedLight24]::new()
        $this.ColorMap[264] = [CCAppleVRedLight24]::new()
        $this.ColorMap[265] = [CCAppleVRedLight24]::new()
        $this.ColorMap[266] = [CCAppleVRedLight24]::new()
        $this.ColorMap[267] = [CCAppleVRedLight24]::new()
        $this.ColorMap[268] = [CCAppleVRedLight24]::new()
        $this.ColorMap[269] = [CCAppleVRedLight24]::new()
        $this.ColorMap[270] = [CCAppleVRedLight24]::new()
        $this.ColorMap[271] = [CCAppleVRedLight24]::new()
        $this.ColorMap[272] = [CCAppleVRedLight24]::new()
        $this.ColorMap[273] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[274] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[275] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[276] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[277] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[278] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[279] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[280] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[281] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[282] = [CCAppleVRedLight24]::new()
        $this.ColorMap[283] = [CCAppleVRedLight24]::new()
        $this.ColorMap[284] = [CCAppleVRedLight24]::new()
        $this.ColorMap[285] = [CCAppleVRedLight24]::new()
        $this.ColorMap[286] = [CCAppleVRedLight24]::new()
        $this.ColorMap[287] = [CCAppleVRedLight24]::new()
        $this.ColorMap[288] = [CCAppleVRedLight24]::new()
        $this.ColorMap[289] = [CCAppleVRedLight24]::new()
        $this.ColorMap[290] = [CCAppleVRedLight24]::new()
        $this.ColorMap[291] = [CCAppleVRedLight24]::new()
        $this.ColorMap[292] = [CCAppleVRedLight24]::new()
        $this.ColorMap[293] = [ATBackgroundColor24None]::new()
        $this.ColorMap[294] = [ATBackgroundColor24None]::new()
        $this.ColorMap[295] = [ATBackgroundColor24None]::new() # End Row 7
        $this.ColorMap[296] = [ATBackgroundColor24None]::new()
        $this.ColorMap[297] = [ATBackgroundColor24None]::new()
        $this.ColorMap[298] = [ATBackgroundColor24None]::new()
        $this.ColorMap[299] = [CCAppleVRedLight24]::new()
        $this.ColorMap[300] = [CCAppleVRedLight24]::new()
        $this.ColorMap[301] = [CCAppleVRedLight24]::new()
        $this.ColorMap[302] = [CCAppleVRedLight24]::new()
        $this.ColorMap[303] = [CCAppleVRedLight24]::new()
        $this.ColorMap[304] = [CCAppleVRedLight24]::new()
        $this.ColorMap[305] = [CCAppleVRedLight24]::new()
        $this.ColorMap[306] = [CCAppleVRedLight24]::new()
        $this.ColorMap[307] = [CCAppleVRedLight24]::new()
        $this.ColorMap[308] = [CCAppleVRedLight24]::new()
        $this.ColorMap[309] = [CCAppleVRedLight24]::new()
        $this.ColorMap[310] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[311] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[312] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[313] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[314] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[315] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[316] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[317] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[318] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[319] = [CCAppleVRedLight24]::new()
        $this.ColorMap[320] = [CCAppleVRedLight24]::new()
        $this.ColorMap[321] = [CCAppleVRedLight24]::new()
        $this.ColorMap[322] = [CCAppleVRedLight24]::new()
        $this.ColorMap[323] = [CCAppleVRedLight24]::new()
        $this.ColorMap[324] = [CCAppleVRedLight24]::new()
        $this.ColorMap[325] = [CCAppleVRedLight24]::new()
        $this.ColorMap[326] = [CCAppleVRedLight24]::new()
        $this.ColorMap[327] = [CCAppleVRedLight24]::new()
        $this.ColorMap[328] = [CCAppleVRedLight24]::new()
        $this.ColorMap[329] = [CCAppleVRedLight24]::new()
        $this.ColorMap[330] = [ATBackgroundColor24None]::new()
        $this.ColorMap[331] = [ATBackgroundColor24None]::new()
        $this.ColorMap[332] = [ATBackgroundColor24None]::new() # End Row 8
        $this.ColorMap[333] = [ATBackgroundColor24None]::new()
        $this.ColorMap[334] = [ATBackgroundColor24None]::new()
        $this.ColorMap[335] = [CCAppleVRedLight24]::new()
        $this.ColorMap[336] = [CCAppleVRedLight24]::new()
        $this.ColorMap[337] = [CCAppleVRedLight24]::new()
        $this.ColorMap[338] = [CCAppleVRedLight24]::new()
        $this.ColorMap[339] = [CCAppleVRedLight24]::new()
        $this.ColorMap[340] = [CCAppleVRedLight24]::new()
        $this.ColorMap[341] = [CCAppleVRedLight24]::new()
        $this.ColorMap[342] = [CCAppleVRedLight24]::new()
        $this.ColorMap[343] = [CCAppleVRedLight24]::new()
        $this.ColorMap[344] = [CCAppleVRedLight24]::new()
        $this.ColorMap[345] = [ATBackgroundColor24None]::new()
        $this.ColorMap[346] = [ATBackgroundColor24None]::new()
        $this.ColorMap[347] = [CCAppleVRedLight24]::new()
        $this.ColorMap[348] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[349] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[350] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[351] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[352] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[353] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[354] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[355] = [CCAppleVRedLight24]::new()
        $this.ColorMap[356] = [ATBackgroundColor24None]::new()
        $this.ColorMap[357] = [ATBackgroundColor24None]::new()
        $this.ColorMap[358] = [CCAppleVRedLight24]::new()
        $this.ColorMap[359] = [CCAppleVRedLight24]::new()
        $this.ColorMap[360] = [CCAppleVRedLight24]::new()
        $this.ColorMap[361] = [CCAppleVRedLight24]::new()
        $this.ColorMap[362] = [CCAppleVRedLight24]::new()
        $this.ColorMap[363] = [CCAppleVRedLight24]::new()
        $this.ColorMap[364] = [CCAppleVRedLight24]::new()
        $this.ColorMap[365] = [CCAppleVRedLight24]::new()
        $this.ColorMap[366] = [CCAppleVRedLight24]::new()
        $this.ColorMap[367] = [CCAppleVRedLight24]::new()
        $this.ColorMap[368] = [ATBackgroundColor24None]::new()
        $this.ColorMap[369] = [ATBackgroundColor24None]::new() # End Row 9
        $this.ColorMap[370] = [ATBackgroundColor24None]::new()
        $this.ColorMap[371] = [ATBackgroundColor24None]::new()
        $this.ColorMap[372] = [CCAppleVRedLight24]::new()
        $this.ColorMap[373] = [CCAppleVRedLight24]::new()
        $this.ColorMap[374] = [CCAppleVRedLight24]::new()
        $this.ColorMap[375] = [CCAppleVRedLight24]::new()
        $this.ColorMap[376] = [ATBackgroundColor24None]::new()
        $this.ColorMap[377] = [ATBackgroundColor24None]::new()
        $this.ColorMap[378] = [CCAppleVRedLight24]::new()
        $this.ColorMap[379] = [CCAppleVRedLight24]::new()
        $this.ColorMap[380] = [CCAppleVRedLight24]::new()
        $this.ColorMap[381] = [ATBackgroundColor24None]::new()
        $this.ColorMap[382] = [ATBackgroundColor24None]::new()
        $this.ColorMap[383] = [ATBackgroundColor24None]::new()
        $this.ColorMap[384] = [ATBackgroundColor24None]::new()
        $this.ColorMap[385] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[386] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[387] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[388] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[389] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[390] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[391] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[392] = [ATBackgroundColor24None]::new()
        $this.ColorMap[393] = [ATBackgroundColor24None]::new()
        $this.ColorMap[394] = [ATBackgroundColor24None]::new()
        $this.ColorMap[395] = [ATBackgroundColor24None]::new()
        $this.ColorMap[396] = [CCAppleVRedLight24]::new()
        $this.ColorMap[397] = [CCAppleVRedLight24]::new()
        $this.ColorMap[398] = [CCAppleVRedLight24]::new()
        $this.ColorMap[399] = [ATBackgroundColor24None]::new()
        $this.ColorMap[400] = [ATBackgroundColor24None]::new()
        $this.ColorMap[401] = [CCAppleVRedLight24]::new()
        $this.ColorMap[402] = [CCAppleVRedLight24]::new()
        $this.ColorMap[403] = [CCAppleVRedLight24]::new()
        $this.ColorMap[404] = [CCAppleVRedLight24]::new()
        $this.ColorMap[405] = [ATBackgroundColor24None]::new()
        $this.ColorMap[406] = [ATBackgroundColor24None]::new() # End Row 10
        $this.ColorMap[407] = [ATBackgroundColor24None]::new()
        $this.ColorMap[408] = [ATBackgroundColor24None]::new()
        $this.ColorMap[409] = [CCAppleVRedLight24]::new()
        $this.ColorMap[410] = [CCAppleVRedLight24]::new()
        $this.ColorMap[411] = [ATBackgroundColor24None]::new()
        $this.ColorMap[412] = [ATBackgroundColor24None]::new()
        $this.ColorMap[413] = [ATBackgroundColor24None]::new()
        $this.ColorMap[414] = [ATBackgroundColor24None]::new()
        $this.ColorMap[415] = [ATBackgroundColor24None]::new()
        $this.ColorMap[416] = [CCAppleVRedLight24]::new()
        $this.ColorMap[417] = [ATBackgroundColor24None]::new()
        $this.ColorMap[418] = [ATBackgroundColor24None]::new()
        $this.ColorMap[419] = [ATBackgroundColor24None]::new()
        $this.ColorMap[420] = [CCAppleVRedALight24]::new()
        $this.ColorMap[421] = [ATBackgroundColor24None]::new()
        $this.ColorMap[422] = [ATBackgroundColor24None]::new()
        $this.ColorMap[423] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[424] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[425] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[426] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[427] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[428] = [ATBackgroundColor24None]::new()
        $this.ColorMap[429] = [ATBackgroundColor24None]::new()
        $this.ColorMap[430] = [CCAppleVRedALight24]::new()
        $this.ColorMap[431] = [ATBackgroundColor24None]::new()
        $this.ColorMap[432] = [ATBackgroundColor24None]::new()
        $this.ColorMap[433] = [ATBackgroundColor24None]::new()
        $this.ColorMap[434] = [CCAppleVRedLight24]::new()
        $this.ColorMap[435] = [ATBackgroundColor24None]::new()
        $this.ColorMap[436] = [ATBackgroundColor24None]::new()
        $this.ColorMap[437] = [ATBackgroundColor24None]::new()
        $this.ColorMap[438] = [ATBackgroundColor24None]::new()
        $this.ColorMap[439] = [ATBackgroundColor24None]::new()
        $this.ColorMap[440] = [CCAppleVRedLight24]::new()
        $this.ColorMap[441] = [CCAppleVRedLight24]::new()
        $this.ColorMap[442] = [ATBackgroundColor24None]::new()
        $this.ColorMap[443] = [ATBackgroundColor24None]::new() # End Row 11
        $this.ColorMap[444] = [ATBackgroundColor24None]::new()
        $this.ColorMap[445] = [ATBackgroundColor24None]::new()
        $this.ColorMap[446] = [CCAppleVRedLight24]::new()
        $this.ColorMap[447] = [ATBackgroundColor24None]::new()
        $this.ColorMap[448] = [ATBackgroundColor24None]::new()
        $this.ColorMap[449] = [ATBackgroundColor24None]::new()
        $this.ColorMap[450] = [ATBackgroundColor24None]::new()
        $this.ColorMap[451] = [ATBackgroundColor24None]::new()
        $this.ColorMap[452] = [ATBackgroundColor24None]::new()
        $this.ColorMap[453] = [ATBackgroundColor24None]::new()
        $this.ColorMap[454] = [ATBackgroundColor24None]::new()
        $this.ColorMap[455] = [ATBackgroundColor24None]::new()
        $this.ColorMap[456] = [ATBackgroundColor24None]::new()
        $this.ColorMap[457] = [ATBackgroundColor24None]::new()
        $this.ColorMap[458] = [CCAppleVRedALight24]::new()
        $this.ColorMap[459] = [CCAppleVRedALight24]::new()
        $this.ColorMap[460] = [ATBackgroundColor24None]::new()
        $this.ColorMap[461] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[462] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[463] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[464] = [ATBackgroundColor24None]::new()
        $this.ColorMap[465] = [CCAppleVRedALight24]::new()
        $this.ColorMap[466] = [CCAppleVRedALight24]::new()
        $this.ColorMap[467] = [ATBackgroundColor24None]::new()
        $this.ColorMap[468] = [ATBackgroundColor24None]::new()
        $this.ColorMap[469] = [ATBackgroundColor24None]::new()
        $this.ColorMap[470] = [ATBackgroundColor24None]::new()
        $this.ColorMap[471] = [ATBackgroundColor24None]::new()
        $this.ColorMap[472] = [ATBackgroundColor24None]::new()
        $this.ColorMap[473] = [ATBackgroundColor24None]::new()
        $this.ColorMap[474] = [ATBackgroundColor24None]::new()
        $this.ColorMap[475] = [ATBackgroundColor24None]::new()
        $this.ColorMap[476] = [ATBackgroundColor24None]::new()
        $this.ColorMap[477] = [ATBackgroundColor24None]::new()
        $this.ColorMap[478] = [CCAppleVRedLight24]::new()
        $this.ColorMap[479] = [ATBackgroundColor24None]::new()
        $this.ColorMap[480] = [ATBackgroundColor24None]::new() # End Row 12
        $this.ColorMap[481] = [ATBackgroundColor24None]::new()
        $this.ColorMap[482] = [ATBackgroundColor24None]::new()
        $this.ColorMap[483] = [ATBackgroundColor24None]::new()
        $this.ColorMap[484] = [ATBackgroundColor24None]::new()
        $this.ColorMap[485] = [ATBackgroundColor24None]::new()
        $this.ColorMap[486] = [ATBackgroundColor24None]::new()
        $this.ColorMap[487] = [ATBackgroundColor24None]::new()
        $this.ColorMap[488] = [ATBackgroundColor24None]::new()
        $this.ColorMap[489] = [ATBackgroundColor24None]::new()
        $this.ColorMap[490] = [ATBackgroundColor24None]::new()
        $this.ColorMap[491] = [ATBackgroundColor24None]::new()
        $this.ColorMap[492] = [ATBackgroundColor24None]::new()
        $this.ColorMap[493] = [ATBackgroundColor24None]::new()
        $this.ColorMap[494] = [CCAppleVRedALight24]::new()
        $this.ColorMap[495] = [ATBackgroundColor24None]::new()
        $this.ColorMap[496] = [ATBackgroundColor24None]::new()
        $this.ColorMap[497] = [ATBackgroundColor24None]::new()
        $this.ColorMap[498] = [ATBackgroundColor24None]::new()
        $this.ColorMap[499] = [CCAppleNOrangeALight24]::new()
        $this.ColorMap[500] = [ATBackgroundColor24None]::new()
        $this.ColorMap[501] = [ATBackgroundColor24None]::new()
        $this.ColorMap[502] = [ATBackgroundColor24None]::new()
        $this.ColorMap[503] = [ATBackgroundColor24None]::new()
        $this.ColorMap[504] = [CCAppleVRedALight24]::new()
        $this.ColorMap[505] = [ATBackgroundColor24None]::new()
        $this.ColorMap[506] = [ATBackgroundColor24None]::new()
        $this.ColorMap[507] = [ATBackgroundColor24None]::new()
        $this.ColorMap[508] = [ATBackgroundColor24None]::new()
        $this.ColorMap[509] = [ATBackgroundColor24None]::new()
        $this.ColorMap[510] = [ATBackgroundColor24None]::new()
        $this.ColorMap[511] = [ATBackgroundColor24None]::new()
        $this.ColorMap[512] = [ATBackgroundColor24None]::new()
        $this.ColorMap[513] = [ATBackgroundColor24None]::new()
        $this.ColorMap[514] = [ATBackgroundColor24None]::new()
        $this.ColorMap[515] = [ATBackgroundColor24None]::new()
        $this.ColorMap[516] = [ATBackgroundColor24None]::new()
        $this.ColorMap[517] = [ATBackgroundColor24None]::new() # End Row 13
        $this.ColorMap[518] = [ATBackgroundColor24None]::new()
        $this.ColorMap[519] = [ATBackgroundColor24None]::new()
        $this.ColorMap[520] = [ATBackgroundColor24None]::new()
        $this.ColorMap[521] = [ATBackgroundColor24None]::new()
        $this.ColorMap[522] = [ATBackgroundColor24None]::new()
        $this.ColorMap[523] = [ATBackgroundColor24None]::new()
        $this.ColorMap[524] = [ATBackgroundColor24None]::new()
        $this.ColorMap[525] = [ATBackgroundColor24None]::new()
        $this.ColorMap[526] = [ATBackgroundColor24None]::new()
        $this.ColorMap[527] = [ATBackgroundColor24None]::new()
        $this.ColorMap[528] = [ATBackgroundColor24None]::new()
        $this.ColorMap[529] = [ATBackgroundColor24None]::new()
        $this.ColorMap[530] = [ATBackgroundColor24None]::new()
        $this.ColorMap[531] = [ATBackgroundColor24None]::new()
        $this.ColorMap[532] = [ATBackgroundColor24None]::new()
        $this.ColorMap[533] = [ATBackgroundColor24None]::new()
        $this.ColorMap[534] = [ATBackgroundColor24None]::new()
        $this.ColorMap[535] = [ATBackgroundColor24None]::new()
        $this.ColorMap[536] = [ATBackgroundColor24None]::new()
        $this.ColorMap[537] = [ATBackgroundColor24None]::new()
        $this.ColorMap[538] = [ATBackgroundColor24None]::new()
        $this.ColorMap[539] = [ATBackgroundColor24None]::new()
        $this.ColorMap[540] = [ATBackgroundColor24None]::new()
        $this.ColorMap[541] = [ATBackgroundColor24None]::new()
        $this.ColorMap[542] = [ATBackgroundColor24None]::new()
        $this.ColorMap[543] = [ATBackgroundColor24None]::new()
        $this.ColorMap[544] = [ATBackgroundColor24None]::new()
        $this.ColorMap[545] = [ATBackgroundColor24None]::new()
        $this.ColorMap[546] = [ATBackgroundColor24None]::new()
        $this.ColorMap[547] = [ATBackgroundColor24None]::new()
        $this.ColorMap[548] = [ATBackgroundColor24None]::new()
        $this.ColorMap[549] = [ATBackgroundColor24None]::new()
        $this.ColorMap[550] = [ATBackgroundColor24None]::new()
        $this.ColorMap[551] = [ATBackgroundColor24None]::new()
        $this.ColorMap[552] = [ATBackgroundColor24None]::new()
        $this.ColorMap[553] = [ATBackgroundColor24None]::new()
        $this.ColorMap[554] = [ATBackgroundColor24None]::new() # End Row 14

        $this.CreateImageATString($this.ColorMap)
        $this.ColorMap = $null
    }
}

###############################################################################
#
# EE SPECIALIZATIONS
#
# THESE REPRESENT ACTUAL ENEMIES IN THE GAME THAT THE PLAYER COULD FIGHT 
# AGAINST. AS WITH OTHER COLLECTIONS, THE NAMES ARE SELF-DOCUMENTING.
#
###############################################################################
Class EEBat : EnemyBattleEntity {
    EEBat() : base() {
        $this.Name  = 'Bat'
        $this.Stats = @{
            [StatId]::HitPoints = [BattleEntityProperty]@{
                Base                = 500
                BasePre             = 0
                BaseAugmentValue    = 0
                Max                 = 500
                MaxPre              = 0
                MaxAugmentValue     = 0
                AugmentTurnDuration = 0
                BaseAugmentActive   = $false
                MaxAugmentActive    = $false
                State               = [StatNumberState]::Normal
                ValidateFunction    = {
                    Param(
                        [BattleEntityProperty]$Self
                    )
                    
                    Switch($Self.Base) {
                        { $_ -GT ($Self.Max * [BattleEntityProperty]::StatNumThresholdCaution) } {
                            $Self.State = [StatNumberState]::Normal
                        }
    
                        { ($_ -GT ($Self.Max * [BattleEntityProperty]::StatNumThresholdDanger)) -AND ($_ -LT ($Self.Max * [BattleEntityProperty]::StatNumThresholdCaution)) } {
                            $Self.State = [StatNumberState]::Caution
                        }
    
                        { $_ -LT ($Self.Max * [BattleEntityProperty]::StatNumThresholdDanger) } {
                            $Self.State = [StatNumberState]::Danger
                        }
                    }
                }
            }
            [StatId]::MagicPoints = [BattleEntityProperty]@{
                Base                = 50
                BasePre             = 0
                BaseAugmentValue    = 0
                Max                 = 50
                MaxPre              = 0
                MaxAugmentValue     = 0
                AugmentTurnDuration = 0
                BaseAugmentActive   = $false
                MaxAugmentActive    = $false
                State               = [StatNumberState]::Normal
                ValidateFunction    = {
                    Param(
                        [BattleEntityProperty]$Self
                    )
                    
                    Switch($Self.Base) {
                        { $_ -GT ($Self.Max * [BattleEntityProperty]::StatNumThresholdCaution) } {
                            $Self.State = [StatNumberState]::Normal
                        }
    
                        { ($_ -GT ($Self.Max * [BattleEntityProperty]::StatNumThresholdDanger)) -AND ($_ -LT ($Self.Max * [BattleEntityProperty]::StatNumThresholdCaution)) } {
                            $Self.State = [StatNumberState]::Caution
                        }
    
                        { $_ -LT ($Self.Max * [BattleEntityProperty]::StatNumThresholdDanger) } {
                            $Self.State = [StatNumberState]::Danger
                        }
                    }
                }
            }
            [StatId]::Attack = [BattleEntityProperty]@{
                Base                = 12
                BasePre             = 0
                BaseAugmentValue    = 0
                Max                 = 12
                MaxPre              = 0
                MaxAugmentValue     = 0
                AugmentTurnDuration = 0
                BaseAugmentActive   = $false
                MaxAugmentActive    = $false
                State               = [StatNumberState]::Normal
                ValidateFunction    = {
                    Param(
                        [BattleEntityProperty]$Self
                    )
                    
                    Return $Self.Base
                }
            }
            [StatId]::Defense = [BattleEntityProperty]@{
                Base                = 16
                BasePre             = 0
                BaseAugmentValue    = 0
                Max                 = 16
                MaxPre              = 0
                MaxAugmentValue     = 0
                AugmentTurnDuration = 0
                BaseAugmentActive   = $false
                MaxAugmentActive    = $false
                State               = [StatNumberState]::Normal
                ValidateFunction    = {
                    Param(
                        [BattleEntityProperty]$Self
                    )
                    
                    Return
                }
            }
            [StatId]::MagicAttack = [BattleEntityProperty]@{
                Base                = 6
                BasePre             = 0
                BaseAugmentValue    = 0
                Max                 = 6
                MaxPre              = 0
                MaxAugmentValue     = 0
                AugmentTurnDuration = 0
                BaseAugmentActive   = $false
                MaxAugmentActive    = $false
                State               = [StatNumberState]::Normal
                ValidateFunction    = {
                    Param(
                        [BattleEntityProperty]$Self
                    )
                    
                    Return
                }
            }
            [StatId]::MagicDefense = [BattleEntityProperty]@{
                Base                = 4
                BasePre             = 0
                BaseAugmentValue    = 0
                Max                 = 4
                MaxPre              = 0
                MaxAugmentValue     = 0
                AugmentTurnDuration = 0
                BaseAugmentActive   = $false
                MaxAugmentActive    = $false
                State               = [StatNumberState]::Normal
                ValidateFunction    = {
                    Param(
                        [BattleEntityProperty]$Self
                    )
                    
                    Return
                }
            }
            [StatId]::Speed = [BattleEntityProperty]@{
                Base                = 9
                BasePre             = 0
                BaseAugmentValue    = 0
                Max                 = 9
                MaxPre              = 0
                MaxAugmentValue     = 0
                AugmentTurnDuration = 0
                BaseAugmentActive   = $false
                MaxAugmentActive    = $false
                State               = [StatNumberState]::Normal
                ValidateFunction    = {
                    Param(
                        [BattleEntityProperty]$Self
                    )
                    
                    Return
                }
            }
            [StatId]::Luck = [BattleEntityProperty]@{
                Base                = 5
                BasePre             = 0
                BaseAugmentValue    = 0
                Max                 = 5
                MaxPre              = 0
                MaxAugmentValue     = 0
                AugmentTurnDuration = 0
                BaseAugmentActive   = $false
                MaxAugmentActive    = $false
                State               = [StatNumberState]::Normal
                ValidateFunction    = {
                    Param(
                        [BattleEntityProperty]$Self
                    )
                    
                    Return
                }
            }
            [StatId]::Accuracy = [BattleEntityProperty]@{
                Base                = 9
                BasePre             = 0
                BaseAugmentValue    = 0
                Max                 = 9
                MaxPre              = 0
                MaxAugmentValue     = 0
                AugmentTurnDuration = 0
                BaseAugmentActive   = $false
                MaxAugmentActive    = $false
                State               = [StatNumberState]::Normal
                ValidateFunction    = {
                    Param(
                        [BattleEntityProperty]$Self
                    )
                    
                    Return
                }
            }
        }
        $this.ActionListing = @{
            [ActionSlot]::A = [BAPunch]::new()
            [ActionSlot]::B = [BAScratch]::new()
            [ActionSlot]::C = $null
            [ActionSlot]::D = $null
        }
        $this.ActionMarbleBag = @([ActionSlot]::A, [ActionSlot]::A, [ActionSlot]::A, [ActionSlot]::A, [ActionSlot]::A, [ActionSlot]::B, [ActionSlot]::B, [ActionSlot]::B, [ActionSlot]::B, [ActionSlot]::B)
        $this.Affinity        = [BattleActionType]::ElementalIce
        $this.Image           = $Script:EeiBat
        $this.SpoilsGold      = 50
        $this.SpoilsItems     = @(
            [MTOMilk]::new()
        )
    }
}


Class EENightwing : EEBat {
    EENightwing() : base() {
        $this.Name  = 'Nightwing'
        $this.Image = [EEINightwing]::new()
    }
}

Class EEWingblight : EEBat {
    EEWingblight() : base() {
        $this.Name        = 'Wingblight'
        $this.Image       = $Script:EeiWingblight
        $this.SpoilsItems = @()
    }
}

Class EEDarkfang : EEBat {
    EEDarkfang() : base() {
        $this.Name        = 'Darkfang'
        $this.Image       = $Script:EeiDarkfang
        $this.SpoilsItems = @()
    }
}

Class EENocturna : EEBat {
    EENocturna() : base() {
        $this.Name        = 'Nocturna'
        $this.Image       = $Script:EeiNocturna
        $this.SpoilsItems = @()
    }
}

Class EEBloodswoop : EEBat {
    EEBloodswoop() : base() {
        $this.Name  = 'Bloodswoop'
        $this.Image = $Script:EeiBloodswoop
    }
}

Class EEDuskbane : EEBat {
    EEDuskbane() : base() {
        $this.Name        = 'Duskbane'
        $this.Image       = $Script:EeiDuskbane
        $this.SpoilsItems = @()
    }
}

#endregion





#region Map Primitives

###############################################################################
#
# MAP SUPPORT
#
# CLASSES THAT COALESCE INTO MAP FUNCTIONALITY.
#
###############################################################################

###############################################################################
#
# SCENE IMAGE
#
# DEFINES AN "IMAGE" THAT'S SHOWN ON THE NAVIGATION SCREEN. THIS LOOKS A LOT
# LIKE AN ENEMY IMAGE, JUST WITH DIFFERENT DIMENSIONS. SPECIALIZATIONS OF THIS
# ARE CREATED USING A SIMILAR PATTERN AS WELL.
#
###############################################################################
Class SceneImage {
    Static [Int]$Width  = 48
    Static [Int]$Height = 18

    [ATSceneImageString[,]]$Image

    SceneImage() {
        $this.Image = New-Object 'ATSceneImageString[,]' ([Int32]([SceneImage]::Height)), ([Int32]([SceneImage]::Width))
    }

    SceneImage(
        [ATSceneImageString[,]]$Image
    ) {
        $this.Image = $Image
    }

    [Void]CreateSceneImageATString([ATBackgroundColor24[]]$ImageColorMap) {
        For($r = 0; $r -LT [SceneImage]::Height; $r++) {
            For($c = 0; $c -LT [SceneImage]::Width; $c++) {
                $rf                 = ($r * [SceneImage]::Width) + $c
                $this.Image[$r, $c] = [ATSceneImageString]::new(
                    $ImageColorMap[$rf],
                    [ATCoordinates]::new(([SceneWindow]::ImageDrawRowOffset + $r), ([SceneWindow]::ImageDrawColumnOffset + $c))
                )
            }
        }
    }

    [String]ToAnsiControlSequenceString() {
        [String]$a = ''

        For($r = 0; $r -LT [SceneImage]::Height; $r++) {
            For($c = 0; $c -LT [SceneImage]::Width; $c++) {
                $a += $this.Image[$r, $c].ToAnsiControlSequenceString()
            }
        }

        Return $a
    }
}

###############################################################################
#
# SI EMPTY
#
# A SYMBOLIC HOLDER FOR AN EMPTY SCENE IMAGE. THIS WOULD RARELY BE USED.
#
###############################################################################
Class SIEmpty : SceneImage {
    SIEmpty() : base() {}

    [String]ToAnsiControlSequenceString() {
        Return ''
    }
}

###############################################################################
#
# SI INTERNAL BASE
#
# A SPECIALIZATION OF SCENE IMAGE THAT ADDS COLOR MAP DATA.
#
###############################################################################
Class SIInternalBase : SceneImage {
    [ATBackgroundColor24[]]$ColorMap

    SIInternalBase() : base() {
        $this.ColorMap = New-Object 'ATBackgroundColor24[]' ([Int32](([Int32]([SceneImage]::Width)) * ([Int32]([SceneImage]::Height))))
    }

    SIInternalBase(
        [String]$JsonConfigPath
    ) : base() {
        Write-Progress `
            -Activity 'Creating Scene Images' `
            -Id 2 `
            -CurrentOperation "Creating $([System.IO.Path]::GetFileNameWithoutExtension($JsonConfigPath))" `
            -PercentComplete (($Script:SceneImagesLoaded / $Script:SceneImagesToLoad) * 100)

        [Hashtable]$JsonData = @{}
        $this.ColorMap = New-Object 'ATBackgroundColor24[]' ([Int32](([Int32]([SceneImage]::Width)) * ([Int32]([SceneImage]::Height))))

        If($(Test-Path $JsonConfigPath) -EQ $true) {
            $JsonData = Get-Content -Raw $JsonConfigPath | ConvertFrom-Json -AsHashtable

            # THIS JSON DATA WOULD CONTAIN ONLY ONE ELEMENT CALLED COLORDATA WHICH IS A SINGLE ARRAY
            # THAT CONTAINS EITHER A STRING, WHICH WOULD BE MAPPED TO A SPECIFIC COLOR DEFINED ABOVE,
            # OR AN ARRAY OF R, G, B VALUES WHICH WOULD CREATE A CUSTOM COLOR.
            [Int]$A = 0
            Foreach($B in $JsonData['ColorData']) {
                If($B -IS [String]) {
                    [String]$C = [String]::Format("CC{0}24", $B)
                    $this.ColorMap[$A] = New-Object "$($C)"
                } Elseif($B -IS [Array]) {
                    $this.ColorMap[$A] = [ATBackgroundColor24]::new([ConsoleColor24]::new($B[0], $B[1], $B[2]))
                }
                $A++
            }

            $this.CreateSceneImageATString($this.ColorMap)
            $this.ColorMap = $null

            $Script:SceneImagesLoaded++
            Write-Progress `
                -Activity 'Creating Scene Images' `
                -Id 2 `
                -CurrentOperation "Creating $([System.IO.Path]::GetFileNameWithoutExtension($JsonConfigPath))" `
                -PercentComplete (($Script:SceneImagesLoaded / $Script:SceneImagesToLoad) * 100)
        }
    }
}

###############################################################################
#
# SI RANDOM NOISE
#
# A SPECIALIZATION OF SCENE IMAGE THAT GENERATES RANDOM NOISE PER CELL.
#
###############################################################################
Class SIRandomNoise : SceneImage {
    [ATBackgroundColor24[]]$ColorMap

    SIRandomNoise() : base() {
        $this.ColorMap = New-Object 'ATBackgroundColor24[]' ([Int32](([Int32]([SceneImage]::Width)) * ([Int32]([SceneImage]::Height))))
        For($a = 0; $a -LT $this.ColorMap.Count; $a++) {
            $this.ColorMap[$a] = [CCRandom24]::new()
        }
        $this.CreateSceneImageATString($this.ColorMap)
        $this.ColorMap = $null
    }
}

###############################################################################
#
# SI MAP IMAGES
#
# THE FOLLOWING COLLECTION OF CLASSES ARE SCENERY "IMAGES" THAT ARE USED ON THE
# NAVIGATION SCREEN. THE NAMES ARE SELF-DOCUMENTING, AND THE PATTERN HERE IS
# THE SAME AS THE ENEMY IMAGES (HISTORICALLY, THESE WERE FIRST).
#
###############################################################################
Class SIFieldNorthRoad : SIInternalBase {
    SIFieldNorthRoad() : base("$(Get-Location)\Image Data\SIFieldNorthRoadNew.json") {}
}

Class SIFieldPlainsNoRoad : SIInternalBase {
    SIFieldPlainsNoRoad() : base("$(Get-Location)\Image Data\SIFieldPlainsNoRoad.json") {}
}

Class SIFieldPlainsRoadNorth : SIInternalBase {
    SIFieldPlainsRoadNorth() : base("$(Get-Location)\Image Data\SIFieldPlainsRoadNorth.json") {}
}

Class SIFieldPlainsRoadSouth : SIInternalBase {
    SIFieldPlainsRoadSouth() : base("$(Get-Location)\Image Data\SIFieldPlainsRoadSouth.json") {}
}

Class SIFieldPlainsRoadEast : SIInternalBase {
    SIFieldPlainsRoadEast() : base("$(Get-Location)\Image Data\SIFieldPlainsRoadEast.json") {}
}

Class SIFieldPlainsRoadWest : SIInternalBase {
    SIFieldPlainsRoadWest() : base("$(Get-Location)\Image Data\SIFieldPlainsRoadWest.json") {}
}

Class SIFieldPlainsRoadEastWest : SIInternalBase {
    SIFieldPlainsRoadEastWest() : base("$(Get-Location)\Image Data\SIFieldPlainsRoadEastWest.json") {}
}

Class SIFieldPlainsRoadNorthEast : SIInternalBase {
    SIFieldPlainsRoadNorthEast() : base("$(Get-Location)\Image Data\SIFieldPlainsRoadNorthEast.json") {}
}

Class SIFieldPlainsRoadNorthWest : SIInternalBase {
    SIFieldPlainsRoadNorthWest() : base("$(Get-Location)\Image Data\SIFieldPlainsRoadNorthWest.json") {}
}

Class SIFieldPlainsRoadNorthSouth : SIInternalBase {
    SIFieldPlainsRoadNorthSouth() : base("$(Get-Location)\Image Data\SIFieldPlainsRoadNorthSouth.json") {}
}

Class SIFieldPlainsRoadNorthSouthEast : SIInternalBase {
    SIFieldPlainsRoadNorthSouthEast() : base("$(Get-Location)\Image Data\SIFieldPlainsRoadNorthSouthEast.json") {}
}

Class SIFieldPlainsRoadNorthSouthEastWest : SIInternalBase {
    SIFieldPlainsRoadNorthSouthEastWest() : base("$(Get-Location)\Image Data\SIFieldPlainsRoadNorthSouthEastWest.json") {}
}

Class SIFieldPlainsRoadNorthSouthWest : SIInternalBase {
    SIFieldPlainsRoadNorthSouthWest() : base("$(Get-Location)\Image Data\SIFieldPlainsRoadNorthSouthWest.json") {}
}

Class SIFieldNorthEastRoad : SIInternalBase {
    SIFieldNorthEastRoad() : base("$(Get-Location)\Image Data\SIFieldNorthEastRoadNew.json") {}
}

Class SIRiverRoadSample : SIInternalBase {
    SIRiverRoadSample() : base("$(Get-Location)\Image Data\SIRiverRoadSample.json") {}
}

Class SIRiverRoadEWNSSample : SIInternalBase {
    SIRiverRoadEWNSSample() : base("$(Get-Location)\Image Data\SIRiverRoadEWNSSample.json") {}
}

Class SIRiverRoadEWSSSample : SIInternalBase {
    SIRiverRoadEWSSSample() : base("$(Get-Location)\Image Data\SIRiverRoadEWSSSample.json") {}
}

Class SIRiverOnEastAtNorth : SIInternalBase {
    SIRiverOnEastAtNorth() : base("$(Get-Location)\Image Data\SIRiverOnEastAtNorth.json") {}
}

Class SIRiverOnEastAtSouth : SIInternalBase {
    SIRiverOnEastAtSouth() : base("$(Get-Location)\Image Data\SIRiverOnEastAtSouth.json") {}
}

Class SIRiverOnEastWestAtNorth : SIInternalBase {
    SIRiverOnEastWestAtNorth() : base("$(Get-Location)\Image Data\SIRiverOnEastWestAtNorth.json") {}
}

Class SIRiverOnEastWestAtNorthSouth : SIInternalBase {
    SIRiverOnEastWestAtNorthSouth() : base("$(Get-Location)\Image Data\SIRiverOnEastWestAtNorthSouth.json") {}
}

Class SIRiverOnEastWestNorthSouthAtEast : SIInternalBase {
    SIRiverOnEastWestNorthSouthAtEast() : base("$(Get-Location)\Image Data\SIRiverOnEastWestNorthSouthAtEast.json") {}
}

Class SIRiverOnEastWestNorthSouthAtEastWest : SIInternalBase {
    SIRiverOnEastWestNorthSouthAtEastWest() : base("$(Get-Location)\Image Data\SIRiverOnEastWestNorthSouthAtEastWest.json") {}
}

Class SIRiverOnEastWestNorthSouthAtEastWestSouth : SIInternalBase {
    SIRiverOnEastWestNorthSouthAtEastWestSouth() : base("$(Get-Location)\Image Data\SIRiverOnEastWestNorthSouthAtEastWestSouth.json") {}
}

Class SIRiverOnEastWestNorthSouthAtWest : SIInternalBase {
    SIRiverOnEastWestNorthSouthAtWest() : base("$(Get-Location)\Image Data\SIRiverOnEastWestNorthSouthAtWest.json") {}
}

Class SIRiverOnNorthEastAtNorth : SIInternalBase {
    SIRiverOnNorthEastAtNorth() : base("$(Get-Location)\Image Data\SIRiverOnNorthEastAtNorth.json") {}
}

Class SIRiverOnNorthSouthAtEast : SIInternalBase {
    SIRiverOnNorthSouthAtEast() : base("$(Get-Location)\Image Data\SIRiverOnNorthSouthAtEast.json") {}
}

Class SIRiverOnNorthSouthAtWest : SIInternalBase {
    SIRiverOnNorthSouthAtWest() : base("$(Get-Location)\Image Data\SIRiverOnNorthSouthAtWest.json") {}
}

Class SIRiverOnNorthSouthEastAtEast : SIInternalBase {
    SIRiverOnNorthSouthEastAtEast() : base("$(Get-Location)\Image Data\SIRiverOnNorthSouthEastAtEast.json") {}
}

Class SIRiverOnNorthSouthEastAtNorth : SIInternalBase {
    SIRiverOnNorthSouthEastAtNorth() : base("$(Get-Location)\Image Data\SIRiverOnNorthSouthEastAtNorth.json") {}
}

Class SIRiverOnSouthAtEast : SIInternalBase {
    SIRiverOnSouthAtEast() : base("$(Get-Location)\Image Data\SIRiverOnSouthAtEast.json") {}
}

Class SIRiverOnSouthEastAtSouthEast : SIInternalBase {
    SIRiverOnSouthEastAtSouthEast() : base("$(Get-Location)\Image Data\SIRiverOnSouthEastAtSouthEast.json") {}
}

Class SIRiverOnWestAtNorth : SIInternalBase {
    SIRiverOnWestAtNorth() : base("$(Get-Location)\Image Data\SIRiverOnWestAtNorth.json") {}
}

Class SIRiverOnWestAtSouth : SIInternalBase {
    SIRiverOnWestAtSouth() : base("$(Get-Location)\Image Data\SIRiverOnWestAtSouth.json") {}
}

Class SIRiverOnWestEastAtSouth : SIInternalBase {
    SIRiverOnWestEastAtSouth() : base("$(Get-Location)\Image Data\SIRiverOnWestEastAtSouth.json") {}
}

Class SIRiverOnWestNorthAtNorth : SIInternalBase {
    SIRiverOnWestNorthAtNorth() : base("$(Get-Location)\Image Data\SIRiverOnWestNorthAtNorth.json") {}
}

Class SIRiverOnWestNorthSouthAtNorth : SIInternalBase {
    SIRiverOnWestNorthSouthAtNorth() : base("$(Get-Location)\Image Data\SIRiverOnWestNorthSouthAtNorth.json") {}
}






###############################################################################
#
# MAP TILE OBJECT
#
# DESPITE THE NAME, THIS REPRESENTS AN OBJECT THAT THE PLAYER CAN INTERACT WITH
# EITHER DIRECTLY ON THE MAP OR BY OWNING IT IN THEIR ITEM INVENTORY. THESE ARE
# ALSO THE ITEMS THAT ARE GIVEN TO THE PLAYER AS SPOILS WHEN DEFEATING CERTAIN
# ENEMIES.
#
# IT'S WORTH MENTIONING THE TARGETOFFILTER PROPERTY.
#
###############################################################################
Class MapTileObject {
    [String]$Name
    [String]$MapObjName
    [ScriptBlock]$Effect
    [Boolean]$CanAddToInventory
    [String]$ExamineString
    [List[String]]$TargetOfFilter
    [ScriptBlock]$BaseEffectCall
    [String]$PlayerEffectString
    [Boolean]$KeyItem

    MapTileObject() {
        $this.Name               = ''
        $this.MapObjName         = ''
        $this.Effect             = {}
        $this.CanAddToInventory  = $false
        $this.ExamineString      = ''
        $this.TargetOfFilter     = @()
        $this.PlayerEffectString = ''
        $this.KeyItem            = $false
        $this.BaseEffectCall     = {
            Param(
                [ValidateNotNullOrEmpty()]
                [String]$a0
            )

            Return $this.ValidateSourceInFilter($a0)
        }
    }

    [Boolean]ValidateSourceInFilter([String]$SourceItemClass) {
        Return ($SourceItemClass -IN $this.TargetOfFilter)
    }
}

###############################################################################
#
# MAP TILE
#
# A "PLACE" ON A MAP. ANY GIVEN COORDINATE PAIR VALUE RELATES TO A SINGLE MAP 
# TILE. MAP TILE NAVIGATION IS RESTRICTED TO CARDINAL DIRECTIONS, CONSEQUENTLY
# SOME DIRECTIONS ARE "EXITABLE" WHILE OTHERS AREN'T. MAP TILES HAVE A SINGLE
# "IMAGE" THAT IS DRAWN ON THE NAVIGATION SCREEN IN THE SCENE IMAGE WINDOW.
# MAP TILES CAN CONTAIN ZERO OR MORE MAP TILE OBJECTS THAT CAN BE INTERACTED
# WITH, EITHER BY EXAMINATION, AUGMENTATION, OR COLLECTION. EVERY MAP TILE
# OBJECT CAN BE EXAMINED, WHILE ONLY SELECT ONES CAN BE AUGMENTED OR COLLECTED.
# THIS IS DETERMINED BY A "TARGET OF" FILTER, WHICH IS DESCRIBED AT THE MAP
# TILE OBJECT DEFINITION.
#
# MAP TILES ALSO PLAY AN INTEGRAL PART OF THE COMBAT SYSTEM AS THEY SERVE AS 
# THE ENTRY POINT FOR THE COMBAT SUB-PROGRAM. THIS IS FACILITATED BY HAVING
# EACH TILE SPECIFIY THE FOLLOWING: IS BATTLE ALLOWED ON THIS TILE, WHAT IS
# THE EFFECTIVE ENCOUNTER RATE (OR CHANCE OF ENTERING A COMBAT SITUATION; THIS
# IS DETERMINED WHEN THE TILE IS CREATED AND DOESN'T CHANGE OVER TIME; IT 
# PROBABLY SHOULD! :)), AND A "REGION CODE" WHICH MAPS TO A HASHTABLE THAT
# CONTAINS ARRAYS THAT MAP TO REGION CODES. THESE ARRAYS SPECIFY WHICH KINDS OF
# ENEMIES CAN BE ENCOUNTERED IN THIS REGION.
#
###############################################################################
Class MapTile {
    Static [Int]$TileExitNorth = 0
    Static [Int]$TileExitSouth = 1
    Static [Int]$TileExitEast  = 2
    Static [Int]$TileExitWest  = 3

    [SceneImage]$BackgroundImage
    [List[MapTileObject]]$ObjectListing
    [Boolean[]]$Exits
    [Boolean]$BattleAllowed
    [Double]$EncounterRate
    [Int]$RegionCode

    MapTile() {
        $this.BackgroundImage = [SIEmpty]::new()
        $this.ObjectListing   = [List[MapTileObject]]::new()
        $this.Exits = @(
            $false,
            $false,
            $false,
            $false
        )
        $this.BattleAllowed = $false
        $this.EncounterRate = 0.5
        $this.RegionCode    = 0
    }

    MapTile(
        [SceneImage]$BackgroundImage,
        [MapTileObject[]]$ObjectListing,
        [Boolean[]]$Exits
    ) {
        $this.BackgroundImage = $BackgroundImage
        $this.ObjectListing   = [List[MapTileObject]]::new()
        $this.Exits           = $Exits
        $this.BattleAllowed   = $false
        $this.EncounterRate   = 0.5
        $this.RegionCode      = 0
        Foreach($a In $ObjectListing) {
            $this.ObjectListing.Add($a) | Out-Null
        }
    }

    MapTile(
        [SceneImage]$BackgroundImage,
        [MapTileObject[]]$ObjectListing,
        [Boolean[]]$Exits,
        [Boolean]$BattleAllowed,
        [Double]$EncounterRate,
        [Int]$RegionCode
    ) {
        $this.BackgroundImage = $BackgroundImage
        $this.ObjectListing   = [List[MapTileObject]]::new()
        $this.Exits           = $Exits
        $this.BattleAllowed   = $BattleAllowed
        $this.EncounterRate   = $EncounterRate
        $this.RegionCode      = $RegionCode
        Foreach($a in $ObjectListing) {
            $this.ObjectListing.Add($a) | Out-Null
        }
    }

    MapTile(
        [Hashtable]$JsonData
    ) {
        $this.BackgroundImage = $Script:TheSceneImages[$JsonData['BackgroundImage']]
        $this.Exits           = $JsonData['Exits']
        $this.BattleAllowed   = $JsonData['BattleAllowed']
        $this.EncounterRate   = $JsonData['EncounterRate']
        $this.RegionCode      = $JsonData['RegionCode']
        $this.ObjectListing   = [List[MapTileObject]]::new()

        Foreach($A in $JsonData['ObjectListing']) {
            $this.ObjectListing.Add($(New-Object -TypeName $A)) | Out-Null
        }
    }

    [Boolean]IsItemInTile([String]$ItemName) {
        Foreach($a in $this.ObjectListing) {
            If($a.Name -IEQ $ItemName) {
                Return $true
            }
        }

        Return $false
    }

    [MapTileObject]GetItemReference([String]$ItemName) {
        Foreach($a in $this.ObjectListing) {
            If($a.Name -IEQ $ItemName) {
                Return $a
            }
        }

        Return $null
    }

    [Void]BattleStep() {
        If($this.BattleAllowed -EQ $true) {
            [Double]$BattleChance = Get-Random -Minimum 0.0 -Maximum 1.0
            If($BattleChance -GT $this.EncounterRate) {
                $Script:TheCurrentEnemy = New-Object -TypeName $($Script:BattleEncounterRegionTable[$this.RegionCode] | Get-Random)
                $Script:TheBufferManager.CopyActiveToBufferAWithWipe()
                $Script:ThePreviousGlobalGameState = $Script:TheGlobalGameState
                $Script:TheGlobalGameState         = [GameStatePrimary]::BattleScreen
            }
        }
    }
}





###############################################################################
#
# MAP
#
###############################################################################
Class Map {
    [Int]$MapWidth
    [Int]$MapHeight
    [String]$Name
    [Boolean]$BoundaryWrap
    [MapTile[,]]$Tiles

    Map() {
        $this.MapWidth     = 0
        $this.MapHeight    = 0
        $this.Name         = ''
        $this.BoundaryWrap = $false

        # THIS LINE PRESENTS A PROBLEM WITH SPLATTING SINCE IT EVIDENTLY GETS CALLED BEFORE
        # ANY OF THE SPLATTED VALUES ARE APPLIED TO THE OBJECT.
        $this.Tiles        = New-Object 'MapTile[,]' $this.MapHeight, $this.MapWidth
    }

    Map(
        [String]$Name,
        [Int]$MapWidth,
        [Int]$MapHeight,
        [Boolean]$BoundaryWrap
    ) {
        $this.Name         = $Name
        $this.MapWidth     = $MapWidth
        $this.MapHeight    = $MapHeight
        $this.BoundaryWrap = $BoundaryWrap
        $this.Tiles        = New-Object 'MapTile[,]' $this.MapHeight, $this.MapWidth
    }

    Map(
        [String]$JsonConfigPath
    ) {
        [Hashtable]$JsonData = @{}

        If($(Test-Path $JsonConfigPath) -EQ $true) {
            $JsonData = Get-Content -Raw $JsonConfigPath | ConvertFrom-Json -AsHashtable
        }

        $this.Name         = $JsonData['MapName']
        $this.MapWidth     = $JsonData['MapWidth']
        $this.MapHeight    = $JsonData['MapHeight']
        $this.BoundaryWrap = $JsonData['BoundaryWrap']
        $this.Tiles        = New-Object 'MapTile[,]' $this.MapHeight, $this.MapWidth

        For([Int]$Y = 0; $Y -LT $this.MapHeight; $Y++) {
            For([Int]$X = 0; $X -LT $this.MapWidth; $X++) {
                # [Hashtable]$A = $JsonData['Tiles'][$Y][$X]
                $this.Tiles[$Y, $X] = [MapTile]::new($JsonData['Tiles'][$Y][$X])
            }
        }
    }

    [Void]CreateMapTiles() {
        If($this.MapWidth -GT 0 -AND $this.MapHeight -GT 0) {
            $this.Tiles = New-Object 'MapTile[,]' $this.MapHeight, $this.MapWidth
        }
    }

    [MapTile]GetTileAtPlayerCoordinates() {
        Return $this.Tiles[$Script:ThePlayer.MapCoordinates.Row, $Script:ThePlayer.MapCoordinates.Column]
    }
}

###############################################################################
#
# MAP TILE OBJECT ABSTRACTIONS
#
# THESE ABSTRACTIONS SERVE TO BUILD UP ACTUAL ITEMS THAT THE PLAYER CAN 
# INTERACT WITH. THESE CONSTRUCTS CAN BE A LITTLE CUMBERSOME TO SETUP.
#
###############################################################################
Class MTOTree : MapTileObject {
    [Boolean]$HasRopeTied

    MTOTree() {
        $this.Name              = 'Tree'
        $this.MapObjName        = 'tree'
        $this.CanAddToInventory = $false
        $this.ExamineString     = 'It''s a tree. Looks like all the other ones.'
        $this.Effect = {
            <#
            Note the pattern here for the params. In order for state changes to work, the ScriptBlock will need to have two arguments:
            A reference to the object itself, and the source. AFAIK, this is because of how the ScriptBlock gets invoked. The $this reference
            doesn't work as it references the CommandWindow instance rather than the owning object (in this case, MTOTree). Because of this
            somewhat counterintuitive nature, the caller (in this case, the 'use' command) will invoke the ScriptBlock with two arguments that
            match the signature here. State changes can be inflicted upon Self (passed as a reference), and Source gets removed from the Player's
            Inventory.
            #>
            Param(
                [MTOTree]$Self,
                [Object]$Source
            )

            Switch($Source.PSTypeNames[0]) {
                'MTORope' {
                    $Script:TheMessageWindow.WriteTiedRopeToTreeMessage()

                    <#
                    It's important to note that this action *SHOULD* cause a state change with this object. To be more specific,
                    prior to running this action, it's assumed that the Tree did NOT have a Rope tied to it. After this action,
                    it does. So the questions now are (A) can you tie another Rope to the Tree, and (B) what can you do with the Tree
                    now that it has a Rope tied to it?

                    Also, the Rope should be removed from the Player's Inventory, but I don't yet have that functionality in place.

                    UPDATE: I have this functionality in place.
                    #>
                    $Self.HasRopeTied   = $true
                    $Self.ExamineString = 'A rope is tied to this tree. Wee.'
                    $Script:ThePlayer.RemoveInventoryItemByName($Source.Name)
                }
            }
        }
        $this.TargetOfFilter = @(
            'MTORope'
        )
        $this.HasRopeTied = $false
    }
}

Class MTOLadder : MapTileObject {
    MTOLadder() {
        $this.Name              = 'Ladder'
        $this.MapObjName        = $this.Name.ToLower()
        $this.CanAddToInventory = $false
        $this.ExamineString     = 'Used to climb things. Just don''t walk under one.'
    }
}

Class MTORope : MapTileObject {
    MTORope() {
        $this.Name              = 'Rope'
        $this.MapObjName        = $this.Name.ToLower()
        $this.CanAddToInventory = $true
        $this.ExamineString     = 'It''s not a snake. Hopefully.'
    }
}

Class MTOStairs : MapTileObject {
    MTOStairs() {
        $this.Name              = 'Stairs'
        $this.MapObjName        = $this.Name.ToLower()
        $this.CanAddToInventory = $true
        $this.ExamineString     = 'A faithful ally for elevating one''s position.'
    }
}

Class MTOPole : MapTileObject {
    MTOPole() {
        $this.Name              = 'Pole'
        $this.MapObjName        = $this.Name.ToLower()
        $this.CanAddToInventory = $false
        $this.ExamineString     = 'Not the north or the south one.'
    }
}

Class MTOBacon : MapTileObject {
    MTOBacon() {
        $this.Name              = 'Bacon'
        $this.MapObjName        = $this.Name.ToLower()
        $this.CanAddToInventory = $true
        $this.ExamineString     = 'Shredded swine flesh. Cholesterol never tasted so good.'
        $this.KeyItem           = $true
    }
}

Class MTOApple : MapTileObject {
    MTOApple() {
        $this.Name              = 'Apple'
        $this.MapObjName        = $this.Name.ToLower()
        $this.CanAddToInventory = $true
        $this.ExamineString     = 'A big, juicy, red apple. Worm not included.'
    }
}

Class MTOStick : MapTileObject {
    MTOStick() {
        $this.Name              = 'Stick'
        $this.MapObjName        = $this.Name.ToLower()
        $this.CanAddToInventory = $true
        $this.ExamineString     = 'Be careful not to poke your eye out with it.'
    }
}

Class MTOYogurt : MapTileObject {
    MTOYogurt() {
        $this.Name              = 'Yogurt'
        $this.MapObjName        = $this.Name.ToLower()
        $this.CanAddToInventory = $true
        $this.ExamineString     = 'For some reason, people enjoy this spoiled milk.'
    }
}

Class MTORock : MapTileObject {
    MTORock() {
        $this.Name              = 'Rock'
        $this.MapObjName        = $this.Name.ToLower()
        $this.CanAddToInventory = $true
        $this.ExamineString     = 'A garden variety rock. Good for taunting raccoons with.'
    }
}

Class MTOMilk : MapTileObject {
    [Int]$PlayerHpBonus
    [Boolean]$IsSpoiled

    MTOMilk() {
        $this.Name = 'Milk'
        $this.MapObjName = $this.Name.ToLower()
        $this.CanAddToInventory = $true
        $this.ExamineString = '2%. We don''t take kindly to whole milk ''round here.'
        $this.Effect = {
            Param(
                [MTOMilk]$Self,
                [Object]$Source
            )

            Switch($Source.PSTypeNames[0]) {
                'Player' {
                    <#
                    Now we're getting into some pretty esoteric stuff here.

                    First, we need to check and see if the Milk is spoiled.
                    #>
                    If($Self.IsSpoiled -EQ $true) {
                        # It is - this will cause the Player's Hp to decrease
                        # Attempt to decrement the Player's Hp by the Hp Bonus
                        If($Source.DecrementHitPoints(-$Self.PlayerHpBonus) -EQ $true) {
                            $Script:TheMessageWindow.WriteMilkUseSpoiledMessage()
                            $Source.RemoveInventoryItemByName($Self.Name)
                        } Else {
                            $Script:TheMessageWindow.WriteMilkUseNotNowMessage()
                        }
                    } Else {
                        # The milk isn't spoiled - attempt to increment the Player's Hp by the Hp Bonus
                        # Attempt to increment the Player's HP by the Hp Bonus
                        If($Script:ThePlayer.IncrementHitPoints($Self.PlayerHpBonus) -EQ $true) {
                            $Script:TheMessageWindow.WriteMilkUseOkayMessage()
                            $Script:ThePlayer.RemoveInventoryItemByName($Self.Name)
                        } Else {
                            $Script:TheMessageWindow.WriteMilkUseNotNowMessage()
                        }
                    }
                }
            }
        }

        # THIS LOOKS STRANGE, BUT NOW WE'RE STILL IN THE CTOR AND THIS SETS, RANDOMLY, SOME STUFF ABOUT THE MLIK
        $a                  = $(Get-Random -Minimum 0 -Maximum 10)
        $this.PlayerHpBonus = 75
        $this.IsSpoiled     = $($a -GE 6 ? $true : $false)
        
        If($this.IsSpoiled -EQ $true) {
            $this.ExamineString      = 'This looks funny. Should I really be drinking this?'
            $this.PlayerEffectString = "-$($this.PlayerHpBonus) HP, 10% chance to inflict Poison"
        } Else {
            $this.PlayerEffectString = "+$($this.PlayerHpBonus) HP"
        }
    }
}

Class MTOWarpable : MapTileObject {
    [Ref]$WarpToReference
    [Int]$WarpToX
    [Int]$WarpToY

    MTOWarpable() {
        $this.WarpToReference = $null
        $this.WarpToX         = 0
        $this.WarpToY         = 0
        $this.Effect          = $Script:MapWarpHandler
    }
}

Class MTODoor : MTOWarpable {
    MTODoor() {
        $this.Name       = 'Door'
        $this.MapObjName = 'door'
    }
}

Class MTODoor00001 : MTODoor {
    MTODoor00001() {
        $this.WarpToReference = ([Ref]$Script:SampleWarpMap02)
    }
}

Class MTODoor00002 : MTODoor {
    MTODoor00002() {
        $this.WarpToReference = ([Ref]$Script:SampleWarpMap01)
        $this.WarpToX         = 3
    }
}

#endregion





#region Equipment

###############################################################################
#
# BATTLE EQUIPMENT CLASS
#
# THE BASE CLASS FOR ITEMS INTENDED TO BE USED AS EQUIPMENT FOR THE PLAYER.
#
# INSTEAD OF USING ENUMERATIONS FOR THE DIFFERENT KINDS OF EQUIPMENT, I'LL
# BE USING DIFFERENT BASE CLASSES.
#
###############################################################################
Class BattleEquipment : MapTileObject {    
    [Int]$PurchasePrice
    [Int]$SellPrice
    [Hashtable]$TargetStats
    [Hashtable]$RequiredStats
    [Gender]$TargetGender

    BattleEquipment() : base() {
        $this.PurchasePrice = 0
        $this.SellPrice     = 0
        $this.TargetStats   = @{}
        $this.RequiredStats = @{}
        $this.TargetGender  = [Gender]::Unisex
    }
}

Class BEWeapon : BattleEquipment {}

Class BEHelmet : BattleEquipment {}

Class BEArmor : BattleEquipment {}

Class BEPauldron : BattleEquipment {}

Class BEGauntlets : BattleEquipment {}

Class BEGreaves : BattleEquipment {}

Class BEBoots : BattleEquipment {}

Class BEJewelry : BattleEquipment {}

Class BECape : BattleEquipment {}





#region Weapons

Class BEWoodenSword : BEWeapon {
	BEWoodenSword() : base() {
		$this.Name               = 'Wooden Sword'
		$this.MapObjName         = 'woodensword'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{
			[StatId]::Attack = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple, crudely carved wooden sword. Ideal for beginners.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDagger : BEWeapon {
	BEDagger() : base() {
		$this.Name               = 'Dagger'
		$this.MapObjName         = 'dagger'
		$this.PurchasePrice      = 75
		$this.SellPrice          = 37
		$this.TargetStats        = @{
			[StatId]::Attack = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small, sharp blade for quick attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShortSword : BEWeapon {
	BEShortSword() : base() {
		$this.Name               = 'Short Sword'
		$this.MapObjName         = 'shortsword'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::Attack = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A standard one-handed sword, good for basic combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIronAxe : BEWeapon {
	BEIronAxe() : base() {
		$this.Name               = 'Iron Axe'
		$this.MapObjName         = 'ironaxe'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Attack = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy iron axe, effective against armored foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStaff : BEWeapon {
	BEStaff() : base() {
		$this.Name               = 'Staff'
		$this.MapObjName         = 'staff'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Attack = 3
			[StatId]::MagicAttack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A plain wooden staff, often used by mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBronzeSpear : BEWeapon {
	BEBronzeSpear() : base() {
		$this.Name               = 'Bronze Spear'
		$this.MapObjName         = 'bronzespear'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{
			[StatId]::Attack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A spear with a bronze tip, offering good reach.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESling : BEWeapon {
	BESling() : base() {
		$this.Name               = 'Sling'
		$this.MapObjName         = 'sling'
		$this.PurchasePrice      = 40
		$this.SellPrice          = 20
		$this.TargetStats        = @{
			[StatId]::Attack = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple projectile weapon, uses small stones as ammo.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBow : BEWeapon {
	BEBow() : base() {
		$this.Name               = 'Bow'
		$this.MapObjName         = 'bow'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::Attack = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A basic wooden bow, requires arrows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELeatherWhip : BEWeapon {
	BELeatherWhip() : base() {
		$this.Name               = 'Leather Whip'
		$this.MapObjName         = 'leatherwhip'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::Attack = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A flexible whip made of leather, good for crowd control.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEClub : BEWeapon {
	BEClub() : base() {
		$this.Name               = 'Club'
		$this.MapObjName         = 'club'
		$this.PurchasePrice      = 60
		$this.SellPrice          = 30
		$this.TargetStats        = @{
			[StatId]::Attack = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy, blunt instrument.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECopperKnuckles : BEWeapon {
	BECopperKnuckles() : base() {
		$this.Name               = 'Copper Knuckles'
		$this.MapObjName         = 'copperknuckles'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::Attack = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Metal plates worn over the knuckles to enhance punches.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELightCrossbow : BEWeapon {
	BELightCrossbow() : base() {
		$this.Name               = 'Light Crossbow'
		$this.MapObjName         = 'lightcrossbow'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Attack = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A compact crossbow, easier to reload than a full-sized one.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEApprenticeWand : BEWeapon {
	BEApprenticeWand() : base() {
		$this.Name               = 'Apprentice Wand'
		$this.MapObjName         = 'apprenticewand'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{
			[StatId]::Attack = 2
			[StatId]::MagicAttack = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A basic wand for novice spellcasters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHuntingKnife : BEWeapon {
	BEHuntingKnife() : base() {
		$this.Name               = 'Hunting Knife'
		$this.MapObjName         = 'huntingknife'
		$this.PurchasePrice      = 65
		$this.SellPrice          = 32
		$this.TargetStats        = @{
			[StatId]::Attack = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A versatile knife for hunting and survival.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStuddedClub : BEWeapon {
	BEStuddedClub() : base() {
		$this.Name               = 'Studded Club'
		$this.MapObjName         = 'studdedclub'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Attack = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A club embedded with metal studs.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneAxe : BEWeapon {
	BEStoneAxe() : base() {
		$this.Name               = 'Stone Axe'
		$this.MapObjName         = 'stoneaxe'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::Attack = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rudimentary axe with a stone head.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFishingRod : BEWeapon {
	BEFishingRod() : base() {
		$this.Name               = 'Fishing Rod'
		$this.MapObjName         = 'fishingrod'
		$this.PurchasePrice      = 30
		$this.SellPrice          = 15
		$this.TargetStats        = @{
			[StatId]::Attack = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Not truly a weapon, but can be used in a pinch.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERustySword : BEWeapon {
	BERustySword() : base() {
		$this.Name               = 'Rusty Sword'
		$this.MapObjName         = 'rustysword'
		$this.PurchasePrice      = 45
		$this.SellPrice          = 22
		$this.TargetStats        = @{
			[StatId]::Attack = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An old, neglected sword. Not very effective.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPracticeStaff : BEWeapon {
	BEPracticeStaff() : base() {
		$this.Name               = 'Practice Staff'
		$this.MapObjName         = 'practicestaff'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::Attack = 1
			[StatId]::MagicAttack = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A lightweight staff designed for training.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESmallShield : BEWeapon {
	BESmallShield() : base() {
		$this.Name               = 'Small Shield'
		$this.MapObjName         = 'smallshield'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A very small shield, offers minimal protection.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThrowingDaggers : BEWeapon {
	BEThrowingDaggers() : base() {
		$this.Name               = 'Throwing Daggers'
		$this.MapObjName         = 'throwingdaggers'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{
			[StatId]::Attack = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A set of small daggers designed for throwing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELongBow : BEWeapon {
	BELongBow() : base() {
		$this.Name               = 'Long Bow'
		$this.MapObjName         = 'longbow'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Attack = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A more powerful bow, requiring greater strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIronSword : BEWeapon {
	BEIronSword() : base() {
		$this.Name               = 'Iron Sword'
		$this.MapObjName         = 'ironsword'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Attack = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A well-forged iron sword, more durable than bronze.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBattleAxe : BEWeapon {
	BEBattleAxe() : base() {
		$this.Name               = 'Battle Axe'
		$this.MapObjName         = 'battleaxe'
		$this.PurchasePrice      = 320
		$this.SellPrice          = 160
		$this.TargetStats        = @{
			[StatId]::Attack = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A large, two-handed axe, devastating in combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMagicStaff : BEWeapon {
	BEMagicStaff() : base() {
		$this.Name               = 'Magic Staff'
		$this.MapObjName         = 'magicstaff'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Attack = 5
			[StatId]::MagicAttack = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff imbued with minor magical properties.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESteelSpear : BEWeapon {
	BESteelSpear() : base() {
		$this.Name               = 'Steel Spear'
		$this.MapObjName         = 'steelspear'
		$this.PurchasePrice      = 260
		$this.SellPrice          = 130
		$this.TargetStats        = @{
			[StatId]::Attack = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sharp and sturdy spear made of steel.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShortBow : BEWeapon {
	BEShortBow() : base() {
		$this.Name               = 'Short Bow'
		$this.MapObjName         = 'shortbow'
		$this.PurchasePrice      = 160
		$this.SellPrice          = 80
		$this.TargetStats        = @{
			[StatId]::Attack = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A compact bow, good for quick shots.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarHammer : BEWeapon {
	BEWarHammer() : base() {
		$this.Name               = 'War Hammer'
		$this.MapObjName         = 'warhammer'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Attack = 23
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy, blunt weapon designed to crush armor.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGrindingStone : BEWeapon {
	BEGrindingStone() : base() {
		$this.Name               = 'Grinding Stone'
		$this.MapObjName         = 'grindingstone'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{
			[StatId]::Attack = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy stone used for grinding. Surprisingly effective.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESimpleWand : BEWeapon {
	BESimpleWand() : base() {
		$this.Name               = 'Simple Wand'
		$this.MapObjName         = 'simplewand'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Attack = 3
			[StatId]::MagicAttack = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A basic wand for casting simple spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELeatherGloves : BEWeapon {
	BELeatherGloves() : base() {
		$this.Name               = 'Leather Gloves'
		$this.MapObjName         = 'leathergloves'
		$this.PurchasePrice      = 60
		$this.SellPrice          = 30
		$this.TargetStats        = @{
			[StatId]::Attack = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves reinforced with leather, can be used for fisticuffs.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESlingShot : BEWeapon {
	BESlingShot() : base() {
		$this.Name               = 'Sling Shot'
		$this.MapObjName         = 'slingshot'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::Attack = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A more powerful version of a sling.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpikedClub : BEWeapon {
	BESpikedClub() : base() {
		$this.Name               = 'Spiked Club'
		$this.MapObjName         = 'spikedclub'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{
			[StatId]::Attack = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A club covered in sharp spikes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWornDagger : BEWeapon {
	BEWornDagger() : base() {
		$this.Name               = 'Worn Dagger'
		$this.MapObjName         = 'worndagger'
		$this.PurchasePrice      = 35
		$this.SellPrice          = 17
		$this.TargetStats        = @{
			[StatId]::Attack = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A used and dulled dagger.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEApprenticeStaff : BEWeapon {
	BEApprenticeStaff() : base() {
		$this.Name               = 'Apprentice Staff'
		$this.MapObjName         = 'apprenticestaff'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::Attack = 4
			[StatId]::MagicAttack = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff suitable for an apprentice mage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWoodcuttersAxe : BEWeapon {
	BEWoodcuttersAxe() : base() {
		$this.Name               = 'Woodcutter''s Axe'
		$this.MapObjName         = 'woodcuttersaxe'
		$this.PurchasePrice      = 140
		$this.SellPrice          = 70
		$this.TargetStats        = @{
			[StatId]::Attack = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe primarily for chopping wood, but sharp.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlowgun : BEWeapon {
	BEBlowgun() : base() {
		$this.Name               = 'Blowgun'
		$this.MapObjName         = 'blowgun'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::Attack = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A long tube for shooting darts. Requires darts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneHammer : BEWeapon {
	BEStoneHammer() : base() {
		$this.Name               = 'Stone Hammer'
		$this.MapObjName         = 'stonehammer'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::Attack = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A primitive hammer with a stone head.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERustyKnife : BEWeapon {
	BERustyKnife() : base() {
		$this.Name               = 'Rusty Knife'
		$this.MapObjName         = 'rustyknife'
		$this.PurchasePrice      = 30
		$this.SellPrice          = 15
		$this.TargetStats        = @{
			[StatId]::Attack = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A corroded and dull knife.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFryingPan : BEWeapon {
	BEFryingPan() : base() {
		$this.Name               = 'Frying Pan'
		$this.MapObjName         = 'fryingpan'
		$this.PurchasePrice      = 40
		$this.SellPrice          = 20
		$this.TargetStats        = @{
			[StatId]::Attack = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A common kitchen item. Surprisingly sturdy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETorch : BEWeapon {
	BETorch() : base() {
		$this.Name               = 'Torch'
		$this.MapObjName         = 'torch'
		$this.PurchasePrice      = 20
		$this.SellPrice          = 10
		$this.TargetStats        = @{
			[StatId]::Attack = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A burning stick. Can be used to ward off some creatures.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECarvingKnife : BEWeapon {
	BECarvingKnife() : base() {
		$this.Name               = 'Carving Knife'
		$this.MapObjName         = 'carvingknife'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{
			[StatId]::Attack = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A very sharp knife used for preparing food.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFarmersScythe : BEWeapon {
	BEFarmersScythe() : base() {
		$this.Name               = 'Farmer''s Scythe'
		$this.MapObjName         = 'farmersscythe'
		$this.PurchasePrice      = 160
		$this.SellPrice          = 80
		$this.TargetStats        = @{
			[StatId]::Attack = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tool for harvesting crops, dangerous in combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBrokenBottle : BEWeapon {
	BEBrokenBottle() : base() {
		$this.Name               = 'Broken Bottle'
		$this.MapObjName         = 'brokenbottle'
		$this.PurchasePrice      = 25
		$this.SellPrice          = 12
		$this.TargetStats        = @{
			[StatId]::Attack = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shattered bottle. Very sharp, but fragile.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECandlestick : BEWeapon {
	BECandlestick() : base() {
		$this.Name               = 'Candlestick'
		$this.MapObjName         = 'candlestick'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{
			[StatId]::Attack = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy metal candlestick.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGardeningHoe : BEWeapon {
	BEGardeningHoe() : base() {
		$this.Name               = 'Gardening Hoe'
		$this.MapObjName         = 'gardeninghoe'
		$this.PurchasePrice      = 60
		$this.SellPrice          = 30
		$this.TargetStats        = @{
			[StatId]::Attack = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tool for digging and weeding. Can be swung.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESturdyStick : BEWeapon {
	BESturdyStick() : base() {
		$this.Name               = 'Sturdy Stick'
		$this.MapObjName         = 'sturdystick'
		$this.PurchasePrice      = 30
		$this.SellPrice          = 15
		$this.TargetStats        = @{
			[StatId]::Attack = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A thick, durable branch.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESewerPipe : BEWeapon {
	BESewerPipe() : base() {
		$this.Name               = 'Sewer Pipe'
		$this.MapObjName         = 'sewerpipe'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::Attack = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A discarded pipe from the sewers. Surprisingly robust.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOldBroom : BEWeapon {
	BEOldBroom() : base() {
		$this.Name               = 'Old Broom'
		$this.MapObjName         = 'oldbroom'
		$this.PurchasePrice      = 20
		$this.SellPrice          = 10
		$this.TargetStats        = @{
			[StatId]::Attack = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A worn-out broom. Not very effective.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEToySword : BEWeapon {
	BEToySword() : base() {
		$this.Name               = 'Toy Sword'
		$this.MapObjName         = 'toysword'
		$this.PurchasePrice      = 10
		$this.SellPrice          = 5
		$this.TargetStats        = @{
			[StatId]::Attack = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A harmless replica of a sword.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMythrilSword : BEWeapon {
	BEMythrilSword() : base() {
		$this.Name               = 'Mythril Sword'
		$this.MapObjName         = 'mythrilsword'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Attack = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A finely crafted sword made from rare mythril, light and sharp.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESilverDagger : BEWeapon {
	BESilverDagger() : base() {
		$this.Name               = 'Silver Dagger'
		$this.MapObjName         = 'silverdagger'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Attack = 40
			[StatId]::MagicAttack = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dagger made of pure silver, effective against supernatural foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGreatSword : BEWeapon {
	BEGreatSword() : base() {
		$this.Name               = 'Great Sword'
		$this.MapObjName         = 'greatsword'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Attack = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A massive two-handed sword, capable of cleaving through enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonAxe : BEWeapon {
	BEDragonAxe() : base() {
		$this.Name               = 'Dragon Axe'
		$this.MapObjName         = 'dragonaxe'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Attack = 60
			[StatId]::MagicAttack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe forged in dragonfire, capable of burning foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWizardsStaff : BEWeapon {
	BEWizardsStaff() : base() {
		$this.Name               = 'Wizard''s Staff'
		$this.MapObjName         = 'wizardsstaff'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Attack = 10
			[StatId]::MagicAttack = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff crackling with magical energy, favored by powerful mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHolyLance : BEWeapon {
	BEHolyLance() : base() {
		$this.Name               = 'Holy Lance'
		$this.MapObjName         = 'holylance'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Attack = 50
			[StatId]::MagicAttack = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A blessed spear said to smite evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERepeatingCrossbow : BEWeapon {
	BERepeatingCrossbow() : base() {
		$this.Name               = 'Repeating Crossbow'
		$this.MapObjName         = 'repeatingcrossbow'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Attack = 58
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A complex crossbow capable of rapid firing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEElvenBow : BEWeapon {
	BEElvenBow() : base() {
		$this.Name               = 'Elven Bow'
		$this.MapObjName         = 'elvenbow'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Attack = 62
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A gracefully crafted bow, known for its incredible accuracy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEScourgeWhip : BEWeapon {
	BEScourgeWhip() : base() {
		$this.Name               = 'Scourge Whip'
		$this.MapObjName         = 'scourgewhip'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Attack = 35
			[StatId]::MagicAttack = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A whip enchanted with dark magic, draining foes'' vitality.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMeteorHammer : BEWeapon {
	BEMeteorHammer() : base() {
		$this.Name               = 'Meteor Hammer'
		$this.MapObjName         = 'meteorhammer'
		$this.PurchasePrice      = 880
		$this.SellPrice          = 440
		$this.TargetStats        = @{
			[StatId]::Attack = 52
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy ball and chain, strikes with incredible force.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAdamantKnuckles : BEWeapon {
	BEAdamantKnuckles() : base() {
		$this.Name               = 'Adamant Knuckles'
		$this.MapObjName         = 'adamantknuckles'
		$this.PurchasePrice      = 920
		$this.SellPrice          = 460
		$this.TargetStats        = @{
			[StatId]::Attack = 56
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Knuckles crafted from the legendary adamant, virtually unbreakable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFlameBlade : BEWeapon {
	BEFlameBlade() : base() {
		$this.Name               = 'Flame Blade'
		$this.MapObjName         = 'flameblade'
		$this.PurchasePrice      = 780
		$this.SellPrice          = 390
		$this.TargetStats        = @{
			[StatId]::Attack = 48
			[StatId]::MagicAttack = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword wreathed in fire, dealing burn damage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIceBrand : BEWeapon {
	BEIceBrand() : base() {
		$this.Name               = 'Ice Brand'
		$this.MapObjName         = 'icebrand'
		$this.PurchasePrice      = 780
		$this.SellPrice          = 390
		$this.TargetStats        = @{
			[StatId]::Attack = 48
			[StatId]::MagicAttack = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword imbued with the essence of ice, capable of freezing enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThunderRod : BEWeapon {
	BEThunderRod() : base() {
		$this.Name               = 'Thunder Rod'
		$this.MapObjName         = 'thunderrod'
		$this.PurchasePrice      = 720
		$this.SellPrice          = 360
		$this.TargetStats        = @{
			[StatId]::Attack = 8
			[StatId]::MagicAttack = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rod that can summon lightning bolts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVenomDagger : BEWeapon {
	BEVenomDagger() : base() {
		$this.Name               = 'Venom Dagger'
		$this.MapObjName         = 'venomdagger'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Attack = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dagger coated in potent poison, inflicting continuous damage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGiantClub : BEWeapon {
	BEGiantClub() : base() {
		$this.Name               = 'Giant Club'
		$this.MapObjName         = 'giantclub'
		$this.PurchasePrice      = 820
		$this.SellPrice          = 410
		$this.TargetStats        = @{
			[StatId]::Attack = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A colossal club, wielded by only the strongest warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowBow : BEWeapon {
	BEShadowBow() : base() {
		$this.Name               = 'Shadow Bow'
		$this.MapObjName         = 'shadowbow'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
			[StatId]::Attack = 55
			[StatId]::MagicAttack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow that fires arrows of pure shadow, piercing defenses.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiritStaff : BEWeapon {
	BESpiritStaff() : base() {
		$this.Name               = 'Spirit Staff'
		$this.MapObjName         = 'spiritstaff'
		$this.PurchasePrice      = 780
		$this.SellPrice          = 390
		$this.TargetStats        = @{
			[StatId]::Attack = 5
			[StatId]::MagicAttack = 48
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that amplifies the wielder''s connection to the spirit world.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBarrierBlade : BEWeapon {
	BEBarrierBlade() : base() {
		$this.Name               = 'Barrier Blade'
		$this.MapObjName         = 'barrierblade'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Attack = 42
			[StatId]::MagicAttack = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that can temporarily create a magical shield.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFrostAxe : BEWeapon {
	BEFrostAxe() : base() {
		$this.Name               = 'Frost Axe'
		$this.MapObjName         = 'frostaxe'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Attack = 53
			[StatId]::MagicAttack = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe that emanates a chilling aura, slowing enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESolarStaff : BEWeapon {
	BESolarStaff() : base() {
		$this.Name               = 'Solar Staff'
		$this.MapObjName         = 'solarstaff'
		$this.PurchasePrice      = 920
		$this.SellPrice          = 460
		$this.TargetStats        = @{
			[StatId]::Attack = 12
			[StatId]::MagicAttack = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that harnesses the power of the sun, radiating healing energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBladeofTruth : BEWeapon {
	BEBladeofTruth() : base() {
		$this.Name               = 'Blade of Truth'
		$this.MapObjName         = 'bladeoftruth'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{
			[StatId]::Attack = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A legendary sword said to reveal hidden weaknesses.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonsBreath : BEWeapon {
	BEDragonsBreath() : base() {
		$this.Name               = 'Dragon''s Breath'
		$this.MapObjName         = 'dragonsbreath'
		$this.PurchasePrice      = 980
		$this.SellPrice          = 490
		$this.TargetStats        = @{
			[StatId]::Attack = 50
			[StatId]::MagicAttack = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A short, fiery weapon that can unleash a burst of flames.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidScepter : BEWeapon {
	BEVoidScepter() : base() {
		$this.Name               = 'Void Scepter'
		$this.MapObjName         = 'voidscepter'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Attack = 15
			[StatId]::MagicAttack = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A scepter that can manipulate spatial anomalies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGriffinBow : BEWeapon {
	BEGriffinBow() : base() {
		$this.Name               = 'Griffin Bow'
		$this.MapObjName         = 'griffinbow'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Attack = 65
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow crafted from griffin feathers, offering incredible range and speed.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESerpentStaff : BEWeapon {
	BESerpentStaff() : base() {
		$this.Name               = 'Serpent Staff'
		$this.MapObjName         = 'serpentstaff'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Attack = 7
			[StatId]::MagicAttack = 47
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff topped with a coiling serpent, capable of charming foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChaosBlade : BEWeapon {
	BEChaosBlade() : base() {
		$this.Name               = 'Chaos Blade'
		$this.MapObjName         = 'chaosblade'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::Attack = 58
			[StatId]::MagicAttack = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that possesses unpredictable magical effects.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarMace : BEWeapon {
	BEStarMace() : base() {
		$this.Name               = 'Star Mace'
		$this.MapObjName         = 'starmace'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Attack = 54
			[StatId]::MagicAttack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A mace studded with celestial fragments, glittering with cosmic energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulHarvester : BEWeapon {
	BESoulHarvester() : base() {
		$this.Name               = 'Soul Harvester'
		$this.MapObjName         = 'soulharvester'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Attack = 56
			[StatId]::MagicAttack = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A scythe said to reap the souls of the fallen, restoring vitality to the wielder.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrystalWand : BEWeapon {
	BECrystalWand() : base() {
		$this.Name               = 'Crystal Wand'
		$this.MapObjName         = 'crystalwand'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Attack = 10
			[StatId]::MagicAttack = 42
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A wand made of pure crystal, focusing magical energies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEObsidianGreatsword : BEWeapon {
	BEObsidianGreatsword() : base() {
		$this.Name               = 'Obsidian Greatsword'
		$this.MapObjName         = 'obsidiangreatsword'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Attack = 57
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A massive sword forged from volcanic glass, incredibly sharp.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWindAxe : BEWeapon {
	BEWindAxe() : base() {
		$this.Name               = 'Wind Axe'
		$this.MapObjName         = 'windaxe'
		$this.PurchasePrice      = 920
		$this.SellPrice          = 460
		$this.TargetStats        = @{
			[StatId]::Attack = 54
			[StatId]::MagicAttack = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe that cuts through the air with ease, creating gusts of wind.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERuneStaff : BEWeapon {
	BERuneStaff() : base() {
		$this.Name               = 'Rune Staff'
		$this.MapObjName         = 'runestaff'
		$this.PurchasePrice      = 880
		$this.SellPrice          = 440
		$this.TargetStats        = @{
			[StatId]::Attack = 8
			[StatId]::MagicAttack = 52
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff inscribed with ancient runes, enhancing spellcasting.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELightbringer : BEWeapon {
	BELightbringer() : base() {
		$this.Name               = 'Lightbringer'
		$this.MapObjName         = 'lightbringer'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
			[StatId]::Attack = 55
			[StatId]::MagicAttack = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that glows with holy light, banishing darkness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDarknessBow : BEWeapon {
	BEDarknessBow() : base() {
		$this.Name               = 'Darkness Bow'
		$this.MapObjName         = 'darknessbow'
		$this.PurchasePrice      = 980
		$this.SellPrice          = 490
		$this.TargetStats        = @{
			[StatId]::Attack = 52
			[StatId]::MagicAttack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow that fires arrows of pure shadow, obscuring vision.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEmeraldRod : BEWeapon {
	BEEmeraldRod() : base() {
		$this.Name               = 'Emerald Rod'
		$this.MapObjName         = 'emeraldrod'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Attack = 10
			[StatId]::MagicAttack = 44
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rod adorned with a shimmering emerald, boosting earth magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPoisonedWhip : BEWeapon {
	BEPoisonedWhip() : base() {
		$this.Name               = 'Poisoned Whip'
		$this.MapObjName         = 'poisonedwhip'
		$this.PurchasePrice      = 680
		$this.SellPrice          = 340
		$this.TargetStats        = @{
			[StatId]::Attack = 36
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A whip with a barbed tip, coated in a fast-acting poison.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpikedGauntlets : BEWeapon {
	BESpikedGauntlets() : base() {
		$this.Name               = 'Spiked Gauntlets'
		$this.MapObjName         = 'spikedgauntlets'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Attack = 51
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy gauntlets with protruding spikes, ideal for brutal close combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAetherBlade : BEWeapon {
	BEAetherBlade() : base() {
		$this.Name               = 'Aether Blade'
		$this.MapObjName         = 'aetherblade'
		$this.PurchasePrice      = 1120
		$this.SellPrice          = 560
		$this.TargetStats        = @{
			[StatId]::Attack = 59
			[StatId]::MagicAttack = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that hums with ethereal energy, able to phase through some defenses.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOceanScepter : BEWeapon {
	BEOceanScepter() : base() {
		$this.Name               = 'Ocean Scepter'
		$this.MapObjName         = 'oceanscepter'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Attack = 12
			[StatId]::MagicAttack = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A scepter that can control water, summoning tidal waves.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhoenixBow : BEWeapon {
	BEPhoenixBow() : base() {
		$this.Name               = 'Phoenix Bow'
		$this.MapObjName         = 'phoenixbow'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::Attack = 63
			[StatId]::MagicAttack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow adorned with phoenix feathers, allowing arrows to ignite upon impact.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGolemAxe : BEWeapon {
	BEGolemAxe() : base() {
		$this.Name               = 'Golem Axe'
		$this.MapObjName         = 'golemaxe'
		$this.PurchasePrice      = 1020
		$this.SellPrice          = 510
		$this.TargetStats        = @{
			[StatId]::Attack = 61
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe designed to shatter stone and metal, incredibly heavy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEManaRod : BEWeapon {
	BEManaRod() : base() {
		$this.Name               = 'Mana Rod'
		$this.MapObjName         = 'manarod'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Attack = 5
			[StatId]::MagicAttack = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple rod that helps regenerate mana.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamWeaverStaff : BEWeapon {
	BEDreamWeaverStaff() : base() {
		$this.Name               = 'Dream Weaver Staff'
		$this.MapObjName         = 'dreamweaverstaff'
		$this.PurchasePrice      = 820
		$this.SellPrice          = 410
		$this.TargetStats        = @{
			[StatId]::Attack = 6
			[StatId]::MagicAttack = 49
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that can induce sleep or vivid illusions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVampireSword : BEWeapon {
	BEVampireSword() : base() {
		$this.Name               = 'Vampire Sword'
		$this.MapObjName         = 'vampiresword'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Attack = 48
			[StatId]::MagicAttack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that siphons health from enemies with each strike.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGuardianShield : BEWeapon {
	BEGuardianShield() : base() {
		$this.Name               = 'Guardian Shield'
		$this.MapObjName         = 'guardianshield'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Attack = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shield that can also be used as a blunt weapon.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMoonlightBow : BEWeapon {
	BEMoonlightBow() : base() {
		$this.Name               = 'Moonlight Bow'
		$this.MapObjName         = 'moonlightbow'
		$this.PurchasePrice      = 1180
		$this.SellPrice          = 590
		$this.TargetStats        = @{
			[StatId]::Attack = 60
			[StatId]::MagicAttack = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow that glows softly, guiding arrows even in darkness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunstoneStaff : BEWeapon {
	BESunstoneStaff() : base() {
		$this.Name               = 'Sunstone Staff'
		$this.MapObjName         = 'sunstonestaff'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Attack = 10
			[StatId]::MagicAttack = 53
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff topped with a radiant sunstone, bolstering healing spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETitanAxe : BEWeapon {
	BETitanAxe() : base() {
		$this.Name               = 'Titan Axe'
		$this.MapObjName         = 'titanaxe'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Attack = 68
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A colossal axe, said to be wielded by giants.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiritBlade : BEWeapon {
	BESpiritBlade() : base() {
		$this.Name               = 'Spirit Blade'
		$this.MapObjName         = 'spiritblade'
		$this.PurchasePrice      = 1080
		$this.SellPrice          = 540
		$this.TargetStats        = @{
			[StatId]::Attack = 54
			[StatId]::MagicAttack = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that can harm incorporeal beings.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEExcalibur : BEWeapon {
	BEExcalibur() : base() {
		$this.Name               = 'Excalibur'
		$this.MapObjName         = 'excalibur'
		$this.PurchasePrice      = 5000
		$this.SellPrice          = 2500
		$this.TargetStats        = @{
			[StatId]::Attack = 120
			[StatId]::MagicAttack = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A legendary sword said to be forged by the gods, grants immense power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGungnir : BEWeapon {
	BEGungnir() : base() {
		$this.Name               = 'Gungnir'
		$this.MapObjName         = 'gungnir'
		$this.PurchasePrice      = 4800
		$this.SellPrice          = 2400
		$this.TargetStats        = @{
			[StatId]::Attack = 115
			[StatId]::MagicAttack = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A divine spear that never misses its target, piercing any defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMjolnir : BEWeapon {
	BEMjolnir() : base() {
		$this.Name               = 'Mjolnir'
		$this.MapObjName         = 'mjolnir'
		$this.PurchasePrice      = 5200
		$this.SellPrice          = 2600
		$this.TargetStats        = @{
			[StatId]::Attack = 130
			[StatId]::MagicAttack = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A mythical hammer that calls down lightning, only wieldable by the worthy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMasamune : BEWeapon {
	BEMasamune() : base() {
		$this.Name               = 'Masamune'
		$this.MapObjName         = 'masamune'
		$this.PurchasePrice      = 4500
		$this.SellPrice          = 2250
		$this.TargetStats        = @{
			[StatId]::Attack = 110
			[StatId]::MagicAttack = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A katana of unparalleled sharpness, whispered to be cursed.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAsclepius : BEWeapon {
	BEAsclepius() : base() {
		$this.Name               = 'Asclepius'
		$this.MapObjName         = 'asclepius'
		$this.PurchasePrice      = 4000
		$this.SellPrice          = 2000
		$this.TargetStats        = @{
			[StatId]::Attack = 20
			[StatId]::MagicAttack = 100
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff with healing powers, capable of curing all ailments.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEYewBow : BEWeapon {
	BEYewBow() : base() {
		$this.Name               = 'Yew Bow'
		$this.MapObjName         = 'yewbow'
		$this.PurchasePrice      = 4200
		$this.SellPrice          = 2100
		$this.TargetStats        = @{
			[StatId]::Attack = 105
			[StatId]::MagicAttack = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow carved from ancient yew, its arrows seek out vital points.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAegisShield : BEWeapon {
	BEAegisShield() : base() {
		$this.Name               = 'Aegis Shield'
		$this.MapObjName         = 'aegisshield'
		$this.PurchasePrice      = 3500
		$this.SellPrice          = 1750
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A divine shield that reflects all magical attacks.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEValhallaAxe : BEWeapon {
	BEValhallaAxe() : base() {
		$this.Name               = 'Valhalla Axe'
		$this.MapObjName         = 'valhallaaxe'
		$this.PurchasePrice      = 4700
		$this.SellPrice          = 2350
		$this.TargetStats        = @{
			[StatId]::Attack = 125
			[StatId]::MagicAttack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe that sings in battle, inspiring allies and striking fear into foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulEdge : BEWeapon {
	BESoulEdge() : base() {
		$this.Name               = 'Soul Edge'
		$this.MapObjName         = 'souledge'
		$this.PurchasePrice      = 4900
		$this.SellPrice          = 2450
		$this.TargetStats        = @{
			[StatId]::Attack = 140
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cursed sword that feeds on the wielder''s soul, but grants incredible power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonClaw : BEWeapon {
	BEDragonClaw() : base() {
		$this.Name               = 'Dragon Claw'
		$this.MapObjName         = 'dragonclaw'
		$this.PurchasePrice      = 4600
		$this.SellPrice          = 2300
		$this.TargetStats        = @{
			[StatId]::Attack = 118
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A gauntlet designed to mimic a dragon''s claw, crushing foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERuneblade : BEWeapon {
	BERuneblade() : base() {
		$this.Name               = 'Runeblade'
		$this.MapObjName         = 'runeblade'
		$this.PurchasePrice      = 3800
		$this.SellPrice          = 1900
		$this.TargetStats        = @{
			[StatId]::Attack = 90
			[StatId]::MagicAttack = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword inscribed with powerful runes, dealing elemental damage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOrbofSouls : BEWeapon {
	BEOrbofSouls() : base() {
		$this.Name               = 'Orb of Souls'
		$this.MapObjName         = 'orbofsouls'
		$this.PurchasePrice      = 3600
		$this.SellPrice          = 1800
		$this.TargetStats        = @{
			[StatId]::Attack = 10
			[StatId]::MagicAttack = 90
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An orb that can summon spirits to aid in battle.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChaosBow : BEWeapon {
	BEChaosBow() : base() {
		$this.Name               = 'Chaos Bow'
		$this.MapObjName         = 'chaosbow'
		$this.PurchasePrice      = 4000
		$this.SellPrice          = 2000
		$this.TargetStats        = @{
			[StatId]::Attack = 95
			[StatId]::MagicAttack = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow that fires unpredictable magical arrows, sometimes devastating.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWorldBreaker : BEWeapon {
	BEWorldBreaker() : base() {
		$this.Name               = 'World Breaker'
		$this.MapObjName         = 'worldbreaker'
		$this.PurchasePrice      = 5500
		$this.SellPrice          = 2750
		$this.TargetStats        = @{
			[StatId]::Attack = 150
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A colossal hammer said to shatter mountains.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEtherealStaff : BEWeapon {
	BEEtherealStaff() : base() {
		$this.Name               = 'Ethereal Staff'
		$this.MapObjName         = 'etherealstaff'
		$this.PurchasePrice      = 4300
		$this.SellPrice          = 2150
		$this.TargetStats        = @{
			[StatId]::Attack = 15
			[StatId]::MagicAttack = 110
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff made of pure arcane energy, granting mastery over magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhoenixFeatherDagger : BEWeapon {
	BEPhoenixFeatherDagger() : base() {
		$this.Name               = 'Phoenix Feather Dagger'
		$this.MapObjName         = 'phoenixfeatherdagger'
		$this.PurchasePrice      = 3900
		$this.SellPrice          = 1950
		$this.TargetStats        = @{
			[StatId]::Attack = 90
			[StatId]::MagicAttack = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dagger made with a phoenix feather, allowing revival once per battle.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGravityAxe : BEWeapon {
	BEGravityAxe() : base() {
		$this.Name               = 'Gravity Axe'
		$this.MapObjName         = 'gravityaxe'
		$this.PurchasePrice      = 4400
		$this.SellPrice          = 2200
		$this.TargetStats        = @{
			[StatId]::Attack = 110
			[StatId]::MagicAttack = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe that can manipulate gravity, crushing enemies under immense weight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamcatcherStaff : BEWeapon {
	BEDreamcatcherStaff() : base() {
		$this.Name               = 'Dreamcatcher Staff'
		$this.MapObjName         = 'dreamcatcherstaff'
		$this.PurchasePrice      = 3700
		$this.SellPrice          = 1850
		$this.TargetStats        = @{
			[StatId]::Attack = 10
			[StatId]::MagicAttack = 85
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that can put enemies into a deep sleep or manipulate their dreams.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHolyAvenger : BEWeapon {
	BEHolyAvenger() : base() {
		$this.Name               = 'Holy Avenger'
		$this.MapObjName         = 'holyavenger'
		$this.PurchasePrice      = 4100
		$this.SellPrice          = 2050
		$this.TargetStats        = @{
			[StatId]::Attack = 100
			[StatId]::MagicAttack = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that blazes with holy light, dealing extra damage to undead and demons.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStormbringer : BEWeapon {
	BEStormbringer() : base() {
		$this.Name               = 'Stormbringer'
		$this.MapObjName         = 'stormbringer'
		$this.PurchasePrice      = 4300
		$this.SellPrice          = 2150
		$this.TargetStats        = @{
			[StatId]::Attack = 105
			[StatId]::MagicAttack = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that can summon gusts of wind and lightning.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunforgedBlade : BEWeapon {
	BESunforgedBlade() : base() {
		$this.Name               = 'Sunforged Blade'
		$this.MapObjName         = 'sunforgedblade'
		$this.PurchasePrice      = 4200
		$this.SellPrice          = 2100
		$this.TargetStats        = @{
			[StatId]::Attack = 102
			[StatId]::MagicAttack = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword crafted in the heart of a volcano, radiating immense heat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMoonpetalBow : BEWeapon {
	BEMoonpetalBow() : base() {
		$this.Name               = 'Moonpetal Bow'
		$this.MapObjName         = 'moonpetalbow'
		$this.PurchasePrice      = 3900
		$this.SellPrice          = 1950
		$this.TargetStats        = @{
			[StatId]::Attack = 98
			[StatId]::MagicAttack = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow strung with moonpetal fibers, firing arrows of pure moonlight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChronoStaff : BEWeapon {
	BEChronoStaff() : base() {
		$this.Name               = 'Chrono Staff'
		$this.MapObjName         = 'chronostaff'
		$this.PurchasePrice      = 4500
		$this.SellPrice          = 2250
		$this.TargetStats        = @{
			[StatId]::Attack = 18
			[StatId]::MagicAttack = 120
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that can manipulate time, slowing enemies or speeding up allies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonboneAxe : BEWeapon {
	BEDragonboneAxe() : base() {
		$this.Name               = 'Dragonbone Axe'
		$this.MapObjName         = 'dragonboneaxe'
		$this.PurchasePrice      = 4600
		$this.SellPrice          = 2300
		$this.TargetStats        = @{
			[StatId]::Attack = 112
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe made from the bone of an ancient dragon, incredibly durable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarfallRod : BEWeapon {
	BEStarfallRod() : base() {
		$this.Name               = 'Starfall Rod'
		$this.MapObjName         = 'starfallrod'
		$this.PurchasePrice      = 4700
		$this.SellPrice          = 2350
		$this.TargetStats        = @{
			[StatId]::Attack = 25
			[StatId]::MagicAttack = 130
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rod that can call down meteors from the sky.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidwalkerBlade : BEWeapon {
	BEVoidwalkerBlade() : base() {
		$this.Name               = 'Voidwalker Blade'
		$this.MapObjName         = 'voidwalkerblade'
		$this.PurchasePrice      = 4000
		$this.SellPrice          = 2000
		$this.TargetStats        = @{
			[StatId]::Attack = 95
			[StatId]::MagicAttack = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that allows the wielder to briefly teleport.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWhisperwindBow : BEWeapon {
	BEWhisperwindBow() : base() {
		$this.Name               = 'Whisperwind Bow'
		$this.MapObjName         = 'whisperwindbow'
		$this.PurchasePrice      = 3800
		$this.SellPrice          = 1900
		$this.TargetStats        = @{
			[StatId]::Attack = 92
			[StatId]::MagicAttack = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow whose arrows are carried by invisible winds, striking silently.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEmberStaff : BEWeapon {
	BEEmberStaff() : base() {
		$this.Name               = 'Ember Staff'
		$this.MapObjName         = 'emberstaff'
		$this.PurchasePrice      = 3700
		$this.SellPrice          = 1850
		$this.TargetStats        = @{
			[StatId]::Attack = 12
			[StatId]::MagicAttack = 88
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff constantly aglow with embers, dealing fire damage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlacialBlade : BEWeapon {
	BEGlacialBlade() : base() {
		$this.Name               = 'Glacial Blade'
		$this.MapObjName         = 'glacialblade'
		$this.PurchasePrice      = 4100
		$this.SellPrice          = 2050
		$this.TargetStats        = @{
			[StatId]::Attack = 100
			[StatId]::MagicAttack = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that emanates freezing cold, slowing and chilling enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETempestSpear : BEWeapon {
	BETempestSpear() : base() {
		$this.Name               = 'Tempest Spear'
		$this.MapObjName         = 'tempestspear'
		$this.PurchasePrice      = 3900
		$this.SellPrice          = 1950
		$this.TargetStats        = @{
			[StatId]::Attack = 98
			[StatId]::MagicAttack = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A spear that can conjure small whirlwinds.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOraclesStaff : BEWeapon {
	BEOraclesStaff() : base() {
		$this.Name               = 'Oracle''s Staff'
		$this.MapObjName         = 'oraclesstaff'
		$this.PurchasePrice      = 4200
		$this.SellPrice          = 2100
		$this.TargetStats        = @{
			[StatId]::Attack = 15
			[StatId]::MagicAttack = 105
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that grants glimpses of the future, aiding in critical hits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInfernoAxe : BEWeapon {
	BEInfernoAxe() : base() {
		$this.Name               = 'Inferno Axe'
		$this.MapObjName         = 'infernoaxe'
		$this.PurchasePrice      = 4800
		$this.SellPrice          = 2400
		$this.TargetStats        = @{
			[StatId]::Attack = 120
			[StatId]::MagicAttack = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe wreathed in eternal flames, burning all it touches.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowfangDagger : BEWeapon {
	BEShadowfangDagger() : base() {
		$this.Name               = 'Shadowfang Dagger'
		$this.MapObjName         = 'shadowfangdagger'
		$this.PurchasePrice      = 3500
		$this.SellPrice          = 1750
		$this.TargetStats        = @{
			[StatId]::Attack = 85
			[StatId]::MagicAttack = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dagger that drains shadows from enemies, making them vulnerable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAuraBlade : BEWeapon {
	BEAuraBlade() : base() {
		$this.Name               = 'Aura Blade'
		$this.MapObjName         = 'aurablade'
		$this.PurchasePrice      = 4400
		$this.SellPrice          = 2200
		$this.TargetStats        = @{
			[StatId]::Attack = 108
			[StatId]::MagicAttack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that projects a protective aura, reducing incoming damage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulbinderStaff : BEWeapon {
	BESoulbinderStaff() : base() {
		$this.Name               = 'Soulbinder Staff'
		$this.MapObjName         = 'soulbinderstaff'
		$this.PurchasePrice      = 4600
		$this.SellPrice          = 2300
		$this.TargetStats        = @{
			[StatId]::Attack = 18
			[StatId]::MagicAttack = 115
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that can temporarily bind an enemy''s soul, preventing actions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThunderclapHammer : BEWeapon {
	BEThunderclapHammer() : base() {
		$this.Name               = 'Thunderclap Hammer'
		$this.MapObjName         = 'thunderclaphammer'
		$this.PurchasePrice      = 4900
		$this.SellPrice          = 2450
		$this.TargetStats        = @{
			[StatId]::Attack = 128
			[StatId]::MagicAttack = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hammer that emits a concussive shockwave upon impact.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEmeraldBow : BEWeapon {
	BEEmeraldBow() : base() {
		$this.Name               = 'Emerald Bow'
		$this.MapObjName         = 'emeraldbow'
		$this.PurchasePrice      = 4100
		$this.SellPrice          = 2050
		$this.TargetStats        = @{
			[StatId]::Attack = 102
			[StatId]::MagicAttack = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow adorned with gleaming emeralds, increasing precision.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrimsonScythe : BEWeapon {
	BECrimsonScythe() : base() {
		$this.Name               = 'Crimson Scythe'
		$this.MapObjName         = 'crimsonscythe'
		$this.PurchasePrice      = 4700
		$this.SellPrice          = 2350
		$this.TargetStats        = @{
			[StatId]::Attack = 115
			[StatId]::MagicAttack = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A scythe stained crimson, rumored to drink blood.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZephyrBow : BEWeapon {
	BEZephyrBow() : base() {
		$this.Name               = 'Zephyr Bow'
		$this.MapObjName         = 'zephyrbow'
		$this.PurchasePrice      = 4300
		$this.SellPrice          = 2150
		$this.TargetStats        = @{
			[StatId]::Attack = 105
			[StatId]::MagicAttack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow that allows arrows to travel at incredible speeds, almost instantly.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneGolemHammer : BEWeapon {
	BEStoneGolemHammer() : base() {
		$this.Name               = 'Stone Golem Hammer'
		$this.MapObjName         = 'stonegolemhammer'
		$this.PurchasePrice      = 5000
		$this.SellPrice          = 2500
		$this.TargetStats        = @{
			[StatId]::Attack = 135
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A massive hammer crafted from a golem''s remains, incredibly heavy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarfallStaff : BEWeapon {
	BEStarfallStaff() : base() {
		$this.Name               = 'Starfall Staff'
		$this.MapObjName         = 'starfallstaff'
		$this.PurchasePrice      = 4800
		$this.SellPrice          = 2400
		$this.TargetStats        = @{
			[StatId]::Attack = 22
			[StatId]::MagicAttack = 125
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that can call down small celestial bodies, dealing area damage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAbyssalBlade : BEWeapon {
	BEAbyssalBlade() : base() {
		$this.Name               = 'Abyssal Blade'
		$this.MapObjName         = 'abyssalblade'
		$this.PurchasePrice      = 4500
		$this.SellPrice          = 2250
		$this.TargetStats        = @{
			[StatId]::Attack = 110
			[StatId]::MagicAttack = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword from the depths of the abyss, dealing dark damage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESeraphicBlade : BEWeapon {
	BESeraphicBlade() : base() {
		$this.Name               = 'Seraphic Blade'
		$this.MapObjName         = 'seraphicblade'
		$this.PurchasePrice      = 4900
		$this.SellPrice          = 2450
		$this.TargetStats        = @{
			[StatId]::Attack = 118
			[StatId]::MagicAttack = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword of celestial origin, imbued with divine light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInfernalAxe : BEWeapon {
	BEInfernalAxe() : base() {
		$this.Name               = 'Infernal Axe'
		$this.MapObjName         = 'infernalaxe'
		$this.PurchasePrice      = 5100
		$this.SellPrice          = 2550
		$this.TargetStats        = @{
			[StatId]::Attack = 130
			[StatId]::MagicAttack = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe burning with hellfire, capable of melting armor.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVortexStaff : BEWeapon {
	BEVortexStaff() : base() {
		$this.Name               = 'Vortex Staff'
		$this.MapObjName         = 'vortexstaff'
		$this.PurchasePrice      = 4400
		$this.SellPrice          = 2200
		$this.TargetStats        = @{
			[StatId]::Attack = 20
			[StatId]::MagicAttack = 110
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that can create small localized vortices, pulling enemies in.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGolemSlayer : BEWeapon {
	BEGolemSlayer() : base() {
		$this.Name               = 'Golem Slayer'
		$this.MapObjName         = 'golemslayer'
		$this.PurchasePrice      = 3600
		$this.SellPrice          = 1800
		$this.TargetStats        = @{
			[StatId]::Attack = 90
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A specialized weapon designed to destroy constructs and golems.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivineRod : BEWeapon {
	BEDivineRod() : base() {
		$this.Name               = 'Divine Rod'
		$this.MapObjName         = 'divinerod'
		$this.PurchasePrice      = 3800
		$this.SellPrice          = 1900
		$this.TargetStats        = @{
			[StatId]::Attack = 10
			[StatId]::MagicAttack = 95
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rod imbued with holy power, granting blessings to allies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBehemothClub : BEWeapon {
	BEBehemothClub() : base() {
		$this.Name               = 'Behemoth Club'
		$this.MapObjName         = 'behemothclub'
		$this.PurchasePrice      = 5200
		$this.SellPrice          = 2600
		$this.TargetStats        = @{
			[StatId]::Attack = 145
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A gigantic club, requiring immense strength to wield.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulrend : BEWeapon {
	BESoulrend() : base() {
		$this.Name               = 'Soulrend'
		$this.MapObjName         = 'soulrend'
		$this.PurchasePrice      = 5300
		$this.SellPrice          = 2650
		$this.TargetStats        = @{
			[StatId]::Attack = 138
			[StatId]::MagicAttack = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that tears at the very fabric of an enemy''s being.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGrimoireStaff : BEWeapon {
	BEGrimoireStaff() : base() {
		$this.Name               = 'Grimoire Staff'
		$this.MapObjName         = 'grimoirestaff'
		$this.PurchasePrice      = 5000
		$this.SellPrice          = 2500
		$this.TargetStats        = @{
			[StatId]::Attack = 25
			[StatId]::MagicAttack = 140
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff with an attached grimoire, granting access to powerful spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArcaneScepter : BEWeapon {
	BEArcaneScepter() : base() {
		$this.Name               = 'Arcane Scepter'
		$this.MapObjName         = 'arcanescepter'
		$this.PurchasePrice      = 5500
		$this.SellPrice          = 2750
		$this.TargetStats        = @{
			[StatId]::Attack = 30
			[StatId]::MagicAttack = 150
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A scepter humming with raw arcane energy, amplifying all spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBladeofAges : BEWeapon {
	BEBladeofAges() : base() {
		$this.Name               = 'Blade of Ages'
		$this.MapObjName         = 'bladeofages'
		$this.PurchasePrice      = 5800
		$this.SellPrice          = 2900
		$this.TargetStats        = @{
			[StatId]::Attack = 140
			[StatId]::MagicAttack = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword said to have witnessed the dawn of time, granting wisdom.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWorldTreeBow : BEWeapon {
	BEWorldTreeBow() : base() {
		$this.Name               = 'World Tree Bow'
		$this.MapObjName         = 'worldtreebow'
		$this.PurchasePrice      = 6000
		$this.SellPrice          = 3000
		$this.TargetStats        = @{
			[StatId]::Attack = 130
			[StatId]::MagicAttack = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow carved from a branch of the World Tree, its arrows carry life energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonheartAxe : BEWeapon {
	BEDragonheartAxe() : base() {
		$this.Name               = 'Dragonheart Axe'
		$this.MapObjName         = 'dragonheartaxe'
		$this.PurchasePrice      = 6200
		$this.SellPrice          = 3100
		$this.TargetStats        = @{
			[StatId]::Attack = 155
			[StatId]::MagicAttack = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe embedded with a dragon''s heart, pulsating with power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStaffofCreation : BEWeapon {
	BEStaffofCreation() : base() {
		$this.Name               = 'Staff of Creation'
		$this.MapObjName         = 'staffofcreation'
		$this.PurchasePrice      = 5700
		$this.SellPrice          = 2850
		$this.TargetStats        = @{
			[StatId]::Attack = 35
			[StatId]::MagicAttack = 160
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff capable of minor creation, shaping the environment.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarforgedSword : BEWeapon {
	BEStarforgedSword() : base() {
		$this.Name               = 'Starforged Sword'
		$this.MapObjName         = 'starforgedsword'
		$this.PurchasePrice      = 6100
		$this.SellPrice          = 3050
		$this.TargetStats        = @{
			[StatId]::Attack = 145
			[StatId]::MagicAttack = 70
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword forged from a fallen star, shimmering with cosmic energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhoenixAshDagger : BEWeapon {
	BEPhoenixAshDagger() : base() {
		$this.Name               = 'Phoenix Ash Dagger'
		$this.MapObjName         = 'phoenixashdagger'
		$this.PurchasePrice      = 5400
		$this.SellPrice          = 2700
		$this.TargetStats        = @{
			[StatId]::Attack = 125
			[StatId]::MagicAttack = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dagger made from the ashes of a phoenix, capable of burning foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHammerofJudgment : BEWeapon {
	BEHammerofJudgment() : base() {
		$this.Name               = 'Hammer of Judgment'
		$this.MapObjName         = 'hammerofjudgment'
		$this.PurchasePrice      = 6300
		$this.SellPrice          = 3150
		$this.TargetStats        = @{
			[StatId]::Attack = 165
			[StatId]::MagicAttack = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A colossal hammer that delivers righteous judgment, capable of stunning.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEternitysEmbrace : BEWeapon {
	BEEternitysEmbrace() : base() {
		$this.Name               = 'Eternity''s Embrace'
		$this.MapObjName         = 'eternitysembrace'
		$this.PurchasePrice      = 5900
		$this.SellPrice          = 2950
		$this.TargetStats        = @{
			[StatId]::Attack = 40
			[StatId]::MagicAttack = 170
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that can briefly halt the flow of time around the wielder.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulflameScythe : BEWeapon {
	BESoulflameScythe() : base() {
		$this.Name               = 'Soulflame Scythe'
		$this.MapObjName         = 'soulflamescythe'
		$this.PurchasePrice      = 6500
		$this.SellPrice          = 3250
		$this.TargetStats        = @{
			[StatId]::Attack = 150
			[StatId]::MagicAttack = 80
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A scythe that burns with an ethereal flame, consuming enemy souls.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECelestialBow : BEWeapon {
	BECelestialBow() : base() {
		$this.Name               = 'Celestial Bow'
		$this.MapObjName         = 'celestialbow'
		$this.PurchasePrice      = 6400
		$this.SellPrice          = 3200
		$this.TargetStats        = @{
			[StatId]::Attack = 135
			[StatId]::MagicAttack = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow that fires arrows of pure starlight, illuminating and striking foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAbyssalStaff : BEWeapon {
	BEAbyssalStaff() : base() {
		$this.Name               = 'Abyssal Staff'
		$this.MapObjName         = 'abyssalstaff'
		$this.PurchasePrice      = 5600
		$this.SellPrice          = 2800
		$this.TargetStats        = @{
			[StatId]::Attack = 32
			[StatId]::MagicAttack = 155
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that channels dark energies from the abyss, powerful but corrupting.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonsRoarAxe : BEWeapon {
	BEDragonsRoarAxe() : base() {
		$this.Name               = 'Dragon''s Roar Axe'
		$this.MapObjName         = 'dragonsroaraxe'
		$this.PurchasePrice      = 6000
		$this.SellPrice          = 3000
		$this.TargetStats        = @{
			[StatId]::Attack = 148
			[StatId]::MagicAttack = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe that can unleash a sonic roar, disorienting enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELightweaveBlade : BEWeapon {
	BELightweaveBlade() : base() {
		$this.Name               = 'Lightweave Blade'
		$this.MapObjName         = 'lightweaveblade'
		$this.PurchasePrice      = 5700
		$this.SellPrice          = 2850
		$this.TargetStats        = @{
			[StatId]::Attack = 138
			[StatId]::MagicAttack = 65
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword woven from pure light, incredibly fast and precise.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDoomBringer : BEWeapon {
	BEDoomBringer() : base() {
		$this.Name               = 'Doom Bringer'
		$this.MapObjName         = 'doombringer'
		$this.PurchasePrice      = 6600
		$this.SellPrice          = 3300
		$this.TargetStats        = @{
			[StatId]::Attack = 170
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A terrifying weapon that instills fear and despair in all who face it.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiritKingsStaff : BEWeapon {
	BESpiritKingsStaff() : base() {
		$this.Name               = 'Spirit King''s Staff'
		$this.MapObjName         = 'spiritkingsstaff'
		$this.PurchasePrice      = 6200
		$this.SellPrice          = 3100
		$this.TargetStats        = @{
			[StatId]::Attack = 45
			[StatId]::MagicAttack = 175
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff once wielded by a king of spirits, commanding spectral allies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBladeofRuin : BEWeapon {
	BEBladeofRuin() : base() {
		$this.Name               = 'Blade of Ruin'
		$this.MapObjName         = 'bladeofruin'
		$this.PurchasePrice      = 6800
		$this.SellPrice          = 3400
		$this.TargetStats        = @{
			[StatId]::Attack = 160
			[StatId]::MagicAttack = 75
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that leaves destruction in its wake, shattering defenses.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThousandCutsDagger : BEWeapon {
	BEThousandCutsDagger() : base() {
		$this.Name               = 'Thousand Cuts Dagger'
		$this.MapObjName         = 'thousandcutsdagger'
		$this.PurchasePrice      = 5300
		$this.SellPrice          = 2650
		$this.TargetStats        = @{
			[StatId]::Attack = 120
			[StatId]::MagicAttack = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dagger so sharp it feels like a thousand blades at once.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHammeroftheAncients : BEWeapon {
	BEHammeroftheAncients() : base() {
		$this.Name               = 'Hammer of the Ancients'
		$this.MapObjName         = 'hammeroftheancients'
		$this.PurchasePrice      = 6700
		$this.SellPrice          = 3350
		$this.TargetStats        = @{
			[StatId]::Attack = 175
			[StatId]::MagicAttack = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A prehistoric hammer of immense power, vibrating with ancient magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWorldEnder : BEWeapon {
	BEWorldEnder() : base() {
		$this.Name               = 'World Ender'
		$this.MapObjName         = 'worldender'
		$this.PurchasePrice      = 7000
		$this.SellPrice          = 3500
		$this.TargetStats        = @{
			[StatId]::Attack = 200
			[StatId]::MagicAttack = 100
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A legendary weapon capable of cataclysmic destruction, forbidden to wield.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunstoneBow : BEWeapon {
	BESunstoneBow() : base() {
		$this.Name               = 'Sunstone Bow'
		$this.MapObjName         = 'sunstonebow'
		$this.PurchasePrice      = 5800
		$this.SellPrice          = 2900
		$this.TargetStats        = @{
			[StatId]::Attack = 128
			[StatId]::MagicAttack = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow that gathers solar energy, firing explosive arrows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidEdge : BEWeapon {
	BEVoidEdge() : base() {
		$this.Name               = 'Void Edge'
		$this.MapObjName         = 'voidedge'
		$this.PurchasePrice      = 5900
		$this.SellPrice          = 2950
		$this.TargetStats        = @{
			[StatId]::Attack = 142
			[StatId]::MagicAttack = 68
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A blade that tears open small rifts in space, causing disorientation.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStaffoftheCosmos : BEWeapon {
	BEStaffoftheCosmos() : base() {
		$this.Name               = 'Staff of the Cosmos'
		$this.MapObjName         = 'staffofthecosmos'
		$this.PurchasePrice      = 6300
		$this.SellPrice          = 3150
		$this.TargetStats        = @{
			[StatId]::Attack = 48
			[StatId]::MagicAttack = 180
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that channels cosmic energies, capable of summoning minor celestial events.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonsToothSword : BEWeapon {
	BEDragonsToothSword() : base() {
		$this.Name               = 'Dragon''s Tooth Sword'
		$this.MapObjName         = 'dragonstoothsword'
		$this.PurchasePrice      = 6500
		$this.SellPrice          = 3250
		$this.TargetStats        = @{
			[StatId]::Attack = 152
			[StatId]::MagicAttack = 72
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword fashioned from a dragon''s tooth, incredibly sharp and resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENetherblade : BEWeapon {
	BENetherblade() : base() {
		$this.Name               = 'Netherblade'
		$this.MapObjName         = 'netherblade'
		$this.PurchasePrice      = 6700
		$this.SellPrice          = 3350
		$this.TargetStats        = @{
			[StatId]::Attack = 160
			[StatId]::MagicAttack = 85
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword forged in the nether, dealing immense fire and shadow damage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStormforgedAxe : BEWeapon {
	BEStormforgedAxe() : base() {
		$this.Name               = 'Stormforged Axe'
		$this.MapObjName         = 'stormforgedaxe'
		$this.PurchasePrice      = 6100
		$this.SellPrice          = 3050
		$this.TargetStats        = @{
			[StatId]::Attack = 150
			[StatId]::MagicAttack = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe crackling with electricity, capable of calling down lightning.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulreaverStaff : BEWeapon {
	BESoulreaverStaff() : base() {
		$this.Name               = 'Soulreaver Staff'
		$this.MapObjName         = 'soulreaverstaff'
		$this.PurchasePrice      = 6400
		$this.SellPrice          = 3200
		$this.TargetStats        = @{
			[StatId]::Attack = 50
			[StatId]::MagicAttack = 190
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that rips souls from bodies, draining life force.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhoenixFireSword : BEWeapon {
	BEPhoenixFireSword() : base() {
		$this.Name               = 'Phoenix Fire Sword'
		$this.MapObjName         = 'phoenixfiresword'
		$this.PurchasePrice      = 6600
		$this.SellPrice          = 3300
		$this.TargetStats        = @{
			[StatId]::Attack = 155
			[StatId]::MagicAttack = 78
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword that perpetually burns with phoenix fire, igniting foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlazeofGloryBow : BEWeapon {
	BEBlazeofGloryBow() : base() {
		$this.Name               = 'Blaze of Glory Bow'
		$this.MapObjName         = 'blazeofglorybow'
		$this.PurchasePrice      = 5700
		$this.SellPrice          = 2850
		$this.TargetStats        = @{
			[StatId]::Attack = 125
			[StatId]::MagicAttack = 48
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow that sets arrows aflame, creating a trail of fire.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWintersChillStaff : BEWeapon {
	BEWintersChillStaff() : base() {
		$this.Name               = 'Winter''s Chill Staff'
		$this.MapObjName         = 'winterschillstaff'
		$this.PurchasePrice      = 6000
		$this.SellPrice          = 3000
		$this.TargetStats        = @{
			[StatId]::Attack = 42
			[StatId]::MagicAttack = 165
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff that freezes anything it touches, creating icy blasts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHammerofCreation : BEWeapon {
	BEHammerofCreation() : base() {
		$this.Name               = 'Hammer of Creation'
		$this.MapObjName         = 'hammerofcreation'
		$this.PurchasePrice      = 6900
		$this.SellPrice          = 3450
		$this.TargetStats        = @{
			[StatId]::Attack = 180
			[StatId]::MagicAttack = 90
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hammer said to have helped shape the world, capable of mending.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonsBane : BEWeapon {
	BEDragonsBane() : base() {
		$this.Name               = 'Dragon''s Bane'
		$this.MapObjName         = 'dragonsbane'
		$this.PurchasePrice      = 6200
		$this.SellPrice          = 3100
		$this.TargetStats        = @{
			[StatId]::Attack = 148
			[StatId]::MagicAttack = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sword specifically designed to hunt and slay dragons.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWandoftheArchmage : BEWeapon {
	BEWandoftheArchmage() : base() {
		$this.Name               = 'Wand of the Archmage'
		$this.MapObjName         = 'wandofthearchmage'
		$this.PurchasePrice      = 6800
		$this.SellPrice          = 3400
		$this.TargetStats        = @{
			[StatId]::Attack = 55
			[StatId]::MagicAttack = 200
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A wand of immense power, reserved for only the most skilled mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAegisDefender : BEWeapon {
	BEAegisDefender() : base() {
		$this.Name               = 'Aegis Defender'
		$this.MapObjName         = 'aegisdefender'
		$this.PurchasePrice      = 5500
		$this.SellPrice          = 2750
		$this.TargetStats        = @{
			[StatId]::Attack = 130
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A weaponized shield capable of powerful bash attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarcallerAxe : BEWeapon {
	BEStarcallerAxe() : base() {
		$this.Name               = 'Starcaller Axe'
		$this.MapObjName         = 'starcalleraxe'
		$this.PurchasePrice      = 6300
		$this.SellPrice          = 3150
		$this.TargetStats        = @{
			[StatId]::Attack = 150
			[StatId]::MagicAttack = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe that when swung creates small, sparkling constellations.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChronosBlade : BEWeapon {
	BEChronosBlade() : base() {
		$this.Name               = 'Chronos Blade'
		$this.MapObjName         = 'chronosblade'
		$this.PurchasePrice      = 6500
		$this.SellPrice          = 3250
		$this.TargetStats        = @{
			[StatId]::Attack = 158
			[StatId]::MagicAttack = 70
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A blade that can slightly alter the flow of time, granting extra attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulbinderBlade : BEWeapon {
	BESoulbinderBlade() : base() {
		$this.Name               = 'Soulbinder Blade'
		$this.MapObjName         = 'soulbinderblade'
		$this.PurchasePrice      = 5800
		$this.SellPrice          = 2900
		$this.TargetStats        = @{
			[StatId]::Attack = 135
			[StatId]::MagicAttack = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A blade that can temporarily bind an enemy''s movements.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESeraphimStaff : BEWeapon {
	BESeraphimStaff() : base() {
		$this.Name               = 'Seraphim Staff'
		$this.MapObjName         = 'seraphimstaff'
		$this.PurchasePrice      = 6700
		$this.SellPrice          = 3350
		$this.TargetStats        = @{
			[StatId]::Attack = 45
			[StatId]::MagicAttack = 195
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff of pure light, used for healing and banishing evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonfireBow : BEWeapon {
	BEDragonfireBow() : base() {
		$this.Name               = 'Dragonfire Bow'
		$this.MapObjName         = 'dragonfirebow'
		$this.PurchasePrice      = 6000
		$this.SellPrice          = 3000
		$this.TargetStats        = @{
			[StatId]::Attack = 132
			[StatId]::MagicAttack = 52
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A bow that imbues arrows with dragonfire, causing explosive impacts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFrostbiteAxe : BEWeapon {
	BEFrostbiteAxe() : base() {
		$this.Name               = 'Frostbite Axe'
		$this.MapObjName         = 'frostbiteaxe'
		$this.PurchasePrice      = 6400
		$this.SellPrice          = 3200
		$this.TargetStats        = @{
			[StatId]::Attack = 153
			[StatId]::MagicAttack = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An axe that inflicts severe frostbite, slowing enemies to a crawl.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWhisperoftheAncients : BEWeapon {
	BEWhisperoftheAncients() : base() {
		$this.Name               = 'Whisper of the Ancients'
		$this.MapObjName         = 'whisperoftheancients'
		$this.PurchasePrice      = 5400
		$this.SellPrice          = 2700
		$this.TargetStats        = @{
			[StatId]::Attack = 122
			[StatId]::MagicAttack = 46
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dagger that carries ancient whispers, confusing enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThunderfury : BEWeapon {
	BEThunderfury() : base() {
		$this.Name               = 'Thunderfury'
		$this.MapObjName         = 'thunderfury'
		$this.PurchasePrice      = 6900
		$this.SellPrice          = 3450
		$this.TargetStats        = @{
			[StatId]::Attack = 165
			[StatId]::MagicAttack = 80
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A legendary sword that roars with lightning, striking multiple foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAstralScepter : BEWeapon {
	BEAstralScepter() : base() {
		$this.Name               = 'Astral Scepter'
		$this.MapObjName         = 'astralscepter'
		$this.PurchasePrice      = 6100
		$this.SellPrice          = 3050
		$this.TargetStats        = @{
			[StatId]::Attack = 40
			[StatId]::MagicAttack = 170
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A scepter that can project astral forms, distracting enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivineRetribution : BEWeapon {
	BEDivineRetribution() : base() {
		$this.Name               = 'Divine Retribution'
		$this.MapObjName         = 'divineretribution'
		$this.PurchasePrice      = 7000
		$this.SellPrice          = 3500
		$this.TargetStats        = @{
			[StatId]::Attack = 170
			[StatId]::MagicAttack = 95
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A mace that delivers divine punishment, smiting the wicked.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEmberheartStaff : BEWeapon {
	BEEmberheartStaff() : base() {
		$this.Name               = 'Emberheart Staff'
		$this.MapObjName         = 'emberheartstaff'
		$this.PurchasePrice      = 5600
		$this.SellPrice          = 2800
		$this.TargetStats        = @{
			[StatId]::Attack = 30
			[StatId]::MagicAttack = 140
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff containing a burning ember, radiating warmth and minor fire magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETitansMight : BEWeapon {
	BETitansMight() : base() {
		$this.Name               = 'Titan''s Might'
		$this.MapObjName         = 'titansmight'
		$this.PurchasePrice      = 6800
		$this.SellPrice          = 3400
		$this.TargetStats        = @{
			[StatId]::Attack = 185
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A massive two-handed weapon, only usable by those with immense strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECelestialHammer : BEWeapon {
	BECelestialHammer() : base() {
		$this.Name               = 'Celestial Hammer'
		$this.MapObjName         = 'celestialhammer'
		$this.PurchasePrice      = 6600
		$this.SellPrice          = 3300
		$this.TargetStats        = @{
			[StatId]::Attack = 160
			[StatId]::MagicAttack = 80
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hammer made from celestial ore, glowing with soft light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpectralBlade : BEWeapon {
	BESpectralBlade() : base() {
		$this.Name               = 'Spectral Blade'
		$this.MapObjName         = 'spectralblade'
		$this.PurchasePrice      = 5900
		$this.SellPrice          = 2950
		$this.TargetStats        = @{
			[StatId]::Attack = 140
			[StatId]::MagicAttack = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A blade that can pass through physical objects, harming spirits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHeartwoodStaff : BEWeapon {
	BEHeartwoodStaff() : base() {
		$this.Name               = 'Heartwood Staff'
		$this.MapObjName         = 'heartwoodstaff'
		$this.PurchasePrice      = 6500
		$this.SellPrice          = 3250
		$this.TargetStats        = @{
			[StatId]::Attack = 48
			[StatId]::MagicAttack = 185
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A staff carved from the heart of a living tree, deeply connected to nature.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Attack]) ATK  +$($this.TargetStats[[StatId]::MagicAttack]) MAT"
		$this.TargetGender       = [Gender]::Unisex
	}
}

#endregion





#region Helmets
Class BELeatherCap : BEHelmet {
	BELeatherCap() : base() {
		$this.Name               = 'Leather Cap'
		$this.MapObjName         = 'leathercap'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple cap made from hardened leather, offering basic protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIronHelm : BEHelmet {
	BEIronHelm() : base() {
		$this.Name               = 'Iron Helm'
		$this.MapObjName         = 'ironhelm'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::Defense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy iron helmet, common among foot soldiers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESteelHelmet : BEHelmet {
	BESteelHelmet() : base() {
		$this.Name               = 'Steel Helmet'
		$this.MapObjName         = 'steelhelmet'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Forged from resilient steel, providing superior defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMythrilCoif : BEHelmet {
	BEMythrilCoif() : base() {
		$this.Name               = 'Mythril Coif'
		$this.MapObjName         = 'mythrilcoif'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A lightweight and strong coif made from mythril, favored by adventurers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonhideHelm : BEHelmet {
	BEDragonhideHelm() : base() {
		$this.Name               = 'Dragonhide Helm'
		$this.MapObjName         = 'dragonhidehelm'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crafted from the scales of a dragon, offering exceptional protection against fire.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrownofHeroes : BEHelmet {
	BECrownofHeroes() : base() {
		$this.Name               = 'Crown of Heroes'
		$this.MapObjName         = 'crownofheroes'
		$this.PurchasePrice      = 5000
		$this.SellPrice          = 2500
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A legendary crown worn by ancient heroes, said to inspire courage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERoyalCirclet : BEHelmet {
	BERoyalCirclet() : base() {
		$this.Name               = 'Royal Circlet'
		$this.MapObjName         = 'royalcirclet'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An elegant circlet adorned with jewels, worn by royalty.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWarriorsGreathelm : BEHelmet {
	BEWarriorsGreathelm() : base() {
		$this.Name               = 'Warrior''s Greathelm'
		$this.MapObjName         = 'warriorsgreathelm'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy greathelm designed for powerful warriors, offering maximum frontal defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEArchersHood : BEHelmet {
	BEArchersHood() : base() {
		$this.Name               = 'Archer''s Hood'
		$this.MapObjName         = 'archershood'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light hood that provides camouflage and enhances an archer''s precision.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMagesHat : BEHelmet {
	BEMagesHat() : base() {
		$this.Name               = 'Mage''s Hat'
		$this.MapObjName         = 'mageshat'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pointed hat worn by mages, rumored to amplify magical energies.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHelmofWisdom : BEHelmet {
	BEHelmofWisdom() : base() {
		$this.Name               = 'Helm of Wisdom'
		$this.MapObjName         = 'helmofwisdom'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helmet imbued with ancient knowledge, boosting a mage''s intellect.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPaladinsHelm : BEHelmet {
	BEPaladinsHelm() : base() {
		$this.Name               = 'Paladin''s Helm'
		$this.MapObjName         = 'paladinshelm'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A gleaming helmet worn by holy warriors, radiating divine protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDarkKnightsVisor : BEHelmet {
	BEDarkKnightsVisor() : base() {
		$this.Name               = 'Dark Knight''s Visor'
		$this.MapObjName         = 'darkknightsvisor'
		$this.PurchasePrice      = 1750
		$this.SellPrice          = 875
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A menacing visor worn by dark knights, instilling fear in enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEThiefsBandana : BEHelmet {
	BEThiefsBandana() : base() {
		$this.Name               = 'Thief''s Bandana'
		$this.MapObjName         = 'thiefsbandana'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A discreet bandana that aids stealth and agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAssassinsCowl : BEHelmet {
	BEAssassinsCowl() : base() {
		$this.Name               = 'Assassin''s Cowl'
		$this.MapObjName         = 'assassinscowl'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark cowl that grants the wearer enhanced senses and deadly precision.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHuntersCap : BEHelmet {
	BEHuntersCap() : base() {
		$this.Name               = 'Hunter''s Cap'
		$this.MapObjName         = 'hunterscap'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{
			[StatId]::Defense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A practical cap for hunters, designed for wilderness survival.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBerserkersHeadpiece : BEHelmet {
	BEBerserkersHeadpiece() : base() {
		$this.Name               = 'Berserker''s Headpiece'
		$this.MapObjName         = 'berserkersheadpiece'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A brutal headpiece that amplifies a warrior''s raw strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGuardiansHelm : BEHelmet {
	BEGuardiansHelm() : base() {
		$this.Name               = 'Guardian''s Helm'
		$this.MapObjName         = 'guardianshelm'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy, defensive helmet worn by guardians, deflecting blows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHealersTiara : BEHelmet {
	BEHealersTiara() : base() {
		$this.Name               = 'Healer''s Tiara'
		$this.MapObjName         = 'healerstiara'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A delicate tiara that enhances healing spells and provides comfort.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEScholarsMortarboard : BEHelmet {
	BEScholarsMortarboard() : base() {
		$this.Name               = 'Scholar''s Mortarboard'
		$this.MapObjName         = 'scholarsmortarboard'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A traditional academic hat, said to improve focus and memory.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGladiatorsHelmet : BEHelmet {
	BEGladiatorsHelmet() : base() {
		$this.Name               = 'Gladiator''s Helmet'
		$this.MapObjName         = 'gladiatorshelmet'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A fearsome helmet worn by gladiators, designed for arena combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESorceresssVeil : BEHelmet {
	BESorceresssVeil() : base() {
		$this.Name               = 'Sorceress''s Veil'
		$this.MapObjName         = 'sorceresssveil'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A mysterious veil that conceals the wearer''s identity and enhances dark magic.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECrusadersHelm : BEHelmet {
	BECrusadersHelm() : base() {
		$this.Name               = 'Crusader''s Helm'
		$this.MapObjName         = 'crusadershelm'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cross-emblazoned helm worn by crusaders, symbolizing faith and might.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBarbariansSkullcap : BEHelmet {
	BEBarbariansSkullcap() : base() {
		$this.Name               = 'Barbarian''s Skullcap'
		$this.MapObjName         = 'barbariansskullcap'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crude skullcap fashioned from animal hide, favored by fierce barbarians.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKnightsBascinet : BEHelmet {
	BEKnightsBascinet() : base() {
		$this.Name               = 'Knight''s Bascinet'
		$this.MapObjName         = 'knightsbascinet'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A classic knight''s helmet with a pointed visor, offering good protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEnchantersHood : BEHelmet {
	BEEnchantersHood() : base() {
		$this.Name               = 'Enchanter''s Hood'
		$this.MapObjName         = 'enchantershood'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A mystical hood that aids in the art of enchantment.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVikingsHelmet : BEHelmet {
	BEVikingsHelmet() : base() {
		$this.Name               = 'Viking''s Helmet'
		$this.MapObjName         = 'vikingshelmet'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A horned helmet worn by fierce Viking warriors, inspiring dread.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDruidsCirclet : BEHelmet {
	BEDruidsCirclet() : base() {
		$this.Name               = 'Druid''s Circlet'
		$this.MapObjName         = 'druidscirclet'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A nature-infused circlet that boosts connection to the earth''s magic.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEScoutsHat : BEHelmet {
	BEScoutsHat() : base() {
		$this.Name               = 'Scout''s Hat'
		$this.MapObjName         = 'scoutshat'
		$this.PurchasePrice      = 60
		$this.SellPrice          = 30
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A lightweight hat for scouts, providing good visibility and protection from elements.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBrigandineHelmet : BEHelmet {
	BEBrigandineHelmet() : base() {
		$this.Name               = 'Brigandine Helmet'
		$this.MapObjName         = 'brigandinehelmet'
		$this.PurchasePrice      = 220
		$this.SellPrice          = 110
		$this.TargetStats        = @{
			[StatId]::Defense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helmet reinforced with metal plates, offering improved defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESamuraiKabuto : BEHelmet {
	BESamuraiKabuto() : base() {
		$this.Name               = 'Samurai Kabuto'
		$this.MapObjName         = 'samuraikabuto'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A traditional samurai helmet, symbolizing honor and discipline.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BENinjaHood : BEHelmet {
	BENinjaHood() : base() {
		$this.Name               = 'Ninja Hood'
		$this.MapObjName         = 'ninjahood'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A stealthy hood worn by ninjas, aiding in clandestine operations.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPriestsMitre : BEHelmet {
	BEPriestsMitre() : base() {
		$this.Name               = 'Priest''s Mitre'
		$this.MapObjName         = 'priestsmitre'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ceremonial mitre worn by priests, enhancing divine blessings.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEClericsCoif : BEHelmet {
	BEClericsCoif() : base() {
		$this.Name               = 'Cleric''s Coif'
		$this.MapObjName         = 'clericscoif'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple coif worn by clerics, providing modest protection and spiritual focus.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpellweaversTiara : BEHelmet {
	BESpellweaversTiara() : base() {
		$this.Name               = 'Spellweaver''s Tiara'
		$this.MapObjName         = 'spellweaverstiara'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sparkling tiara that amplifies the power of complex spells.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWarlordsHelm : BEHelmet {
	BEWarlordsHelm() : base() {
		$this.Name               = 'Warlord''s Helm'
		$this.MapObjName         = 'warlordshelm'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A formidable helm worn by military commanders, inspiring loyalty and fear.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESentinelsHelmet : BEHelmet {
	BESentinelsHelmet() : base() {
		$this.Name               = 'Sentinel''s Helmet'
		$this.MapObjName         = 'sentinelshelmet'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy, defensive helmet worn by vigilant sentinels, guarding key locations.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMinstrelsCap : BEHelmet {
	BEMinstrelsCap() : base() {
		$this.Name               = 'Minstrel''s Cap'
		$this.MapObjName         = 'minstrelscap'
		$this.PurchasePrice      = 40
		$this.SellPrice          = 20
		$this.TargetStats        = @{
			[StatId]::Defense = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A whimsical cap worn by minstrels, adding charm to their performances.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDancersHeadpiece : BEHelmet {
	BEDancersHeadpiece() : base() {
		$this.Name               = 'Dancer''s Headpiece'
		$this.MapObjName         = 'dancersheadpiece'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An elaborate headpiece that complements a dancer''s movements and grace.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEJestersHat : BEHelmet {
	BEJestersHat() : base() {
		$this.Name               = 'Jester''s Hat'
		$this.MapObjName         = 'jestershat'
		$this.PurchasePrice      = 30
		$this.SellPrice          = 15
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A colorful, three-pointed hat worn by jesters, spreading mirth.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAlchemistsGoggles : BEHelmet {
	BEAlchemistsGoggles() : base() {
		$this.Name               = 'Alchemist''s Goggles'
		$this.MapObjName         = 'alchemistsgoggles'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Goggles designed to protect the eyes of alchemists during experiments.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEngineersHardHat : BEHelmet {
	BEEngineersHardHat() : base() {
		$this.Name               = 'Engineer''s Hard Hat'
		$this.MapObjName         = 'engineershardhat'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A durable hard hat worn by engineers, providing protection in hazardous environments.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArtisansBeret : BEHelmet {
	BEArtisansBeret() : base() {
		$this.Name               = 'Artisan''s Beret'
		$this.MapObjName         = 'artisansberet'
		$this.PurchasePrice      = 60
		$this.SellPrice          = 30
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A stylish beret worn by artisans, inspiring creativity.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMonksHeadband : BEHelmet {
	BEMonksHeadband() : base() {
		$this.Name               = 'Monk''s Headband'
		$this.MapObjName         = 'monksheadband'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::Defense = 2
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple headband worn by monks, aiding in focus and meditation.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAcolytesHood : BEHelmet {
	BEAcolytesHood() : base() {
		$this.Name               = 'Acolyte''s Hood'
		$this.MapObjName         = 'acolyteshood'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A humble hood worn by acolytes, signifying their dedication.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESagesTurban : BEHelmet {
	BESagesTurban() : base() {
		$this.Name               = 'Sage''s Turban'
		$this.MapObjName         = 'sagesturban'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A wise turban worn by sages, imbued with ancient knowledge.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENecromancersHood : BEHelmet {
	BENecromancersHood() : base() {
		$this.Name               = 'Necromancer''s Hood'
		$this.MapObjName         = 'necromancershood'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark, tattered hood worn by necromancers, enhancing their control over the undead.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarlocksHelm : BEHelmet {
	BEWarlocksHelm() : base() {
		$this.Name               = 'Warlock''s Helm'
		$this.MapObjName         = 'warlockshelm'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A menacing helm favored by warlocks, amplifying their dark powers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEShamansHeaddress : BEHelmet {
	BEShamansHeaddress() : base() {
		$this.Name               = 'Shaman''s Headdress'
		$this.MapObjName         = 'shamansheaddress'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 4
			[StatId]::MagicDefense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A feathered headdress worn by shamans, connecting them to ancestral spirits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBeastmastersCap : BEHelmet {
	BEBeastmastersCap() : base() {
		$this.Name               = 'Beastmaster''s Cap'
		$this.MapObjName         = 'beastmasterscap'
		$this.PurchasePrice      = 170
		$this.SellPrice          = 85
		$this.TargetStats        = @{
			[StatId]::Defense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rugged cap worn by beastmasters, aiding in animal taming.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInquisitorsHood : BEHelmet {
	BEInquisitorsHood() : base() {
		$this.Name               = 'Inquisitor''s Hood'
		$this.MapObjName         = 'inquisitorshood'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A somber hood worn by inquisitors, projecting authority and sternness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOraclesCirclet : BEHelmet {
	BEOraclesCirclet() : base() {
		$this.Name               = 'Oracle''s Circlet'
		$this.MapObjName         = 'oraclescirclet'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shimmering circlet worn by oracles, granting glimpses of the future.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEProphetsHeadwrap : BEHelmet {
	BEProphetsHeadwrap() : base() {
		$this.Name               = 'Prophet''s Headwrap'
		$this.MapObjName         = 'prophetsheadwrap'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple headwrap worn by prophets, aiding in divine communication.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChampionsHelm : BEHelmet {
	BEChampionsHelm() : base() {
		$this.Name               = 'Champion''s Helm'
		$this.MapObjName         = 'championshelm'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A grand helmet worn by champions, symbolizing their triumphs.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEValkyriesHelm : BEHelmet {
	BEValkyriesHelm() : base() {
		$this.Name               = 'Valkyrie''s Helm'
		$this.MapObjName         = 'valkyrieshelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 17
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A winged helm worn by valkyries, granting them courage and strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDreadnoughtHelm : BEHelmet {
	BEDreadnoughtHelm() : base() {
		$this.Name               = 'Dreadnought Helm'
		$this.MapObjName         = 'dreadnoughthelm'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Defense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A massive, heavily armored helm designed for ultimate defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGhostlyVisage : BEHelmet {
	BEGhostlyVisage() : base() {
		$this.Name               = 'Ghostly Visage'
		$this.MapObjName         = 'ghostlyvisage'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A spectral helm that grants the wearer ethereal properties.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunstoneCirclet : BEHelmet {
	BESunstoneCirclet() : base() {
		$this.Name               = 'Sunstone Circlet'
		$this.MapObjName         = 'sunstonecirclet'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A radiant circlet made of sunstone, imbued with healing light.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMoonlightTiara : BEHelmet {
	BEMoonlightTiara() : base() {
		$this.Name               = 'Moonlight Tiara'
		$this.MapObjName         = 'moonlighttiara'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A luminous tiara that glows with moonlight, enhancing nocturnal magic.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEStarfallHelm : BEHelmet {
	BEStarfallHelm() : base() {
		$this.Name               = 'Starfall Helm'
		$this.MapObjName         = 'starfallhelm'
		$this.PurchasePrice      = 3000
		$this.SellPrice          = 1500
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm said to be forged from fallen stars, possessing cosmic power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOceanicHelmet : BEHelmet {
	BEOceanicHelmet() : base() {
		$this.Name               = 'Oceanic Helmet'
		$this.MapObjName         = 'oceanichelmet'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helmet crafted from deep-sea materials, providing protection against water-based attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVolcanicHelm : BEHelmet {
	BEVolcanicHelm() : base() {
		$this.Name               = 'Volcanic Helm'
		$this.MapObjName         = 'volcanichelm'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm forged in volcanic fire, granting resistance to heat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEForestDwellersHood : BEHelmet {
	BEForestDwellersHood() : base() {
		$this.Name               = 'Forest Dweller''s Hood'
		$this.MapObjName         = 'forestdwellershood'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::Defense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hood woven from leaves and vines, providing camouflage in forests.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDesertNomadsTurban : BEHelmet {
	BEDesertNomadsTurban() : base() {
		$this.Name               = 'Desert Nomad''s Turban'
		$this.MapObjName         = 'desertnomadsturban'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A practical turban for desert dwellers, protecting against sand and sun.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFrostbiteHelm : BEHelmet {
	BEFrostbiteHelm() : base() {
		$this.Name               = 'Frostbite Helm'
		$this.MapObjName         = 'frostbitehelm'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm enchanted with ice magic, chilling enemies upon impact.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThunderclapHelm : BEHelmet {
	BEThunderclapHelm() : base() {
		$this.Name               = 'Thunderclap Helm'
		$this.MapObjName         = 'thunderclaphelm'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm infused with storm energy, allowing the wearer to channel lightning.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEarthshakerHelm : BEHelmet {
	BEEarthshakerHelm() : base() {
		$this.Name               = 'Earthshaker Helm'
		$this.MapObjName         = 'earthshakerhelm'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy helm that resonates with the power of the earth, increasing physical might.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESkywalkerHelm : BEHelmet {
	BESkywalkerHelm() : base() {
		$this.Name               = 'Skywalker Helm'
		$this.MapObjName         = 'skywalkerhelm'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A lightweight helm that seems to defy gravity, aiding in agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiritwalkerMask : BEHelmet {
	BESpiritwalkerMask() : base() {
		$this.Name               = 'Spiritwalker Mask'
		$this.MapObjName         = 'spiritwalkermask'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ceremonial mask that allows communion with spirits.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowWeaversHood : BEHelmet {
	BEShadowWeaversHood() : base() {
		$this.Name               = 'Shadow Weaver''s Hood'
		$this.MapObjName         = 'shadowweavershood'
		$this.PurchasePrice      = 1450
		$this.SellPrice          = 725
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark hood that allows the wearer to manipulate shadows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamCatchersTiara : BEHelmet {
	BEDreamCatchersTiara() : base() {
		$this.Name               = 'Dream Catcher''s Tiara'
		$this.MapObjName         = 'dreamcatcherstiara'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A mystical tiara that protects against nightmares and enhances lucid dreaming.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BENightfallHelm : BEHelmet {
	BENightfallHelm() : base() {
		$this.Name               = 'Nightfall Helm'
		$this.MapObjName         = 'nightfallhelm'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm as dark as night, granting stealth and improved vision in darkness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDaybreakCirclet : BEHelmet {
	BEDaybreakCirclet() : base() {
		$this.Name               = 'Daybreak Circlet'
		$this.MapObjName         = 'daybreakcirclet'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A radiant circlet that harnesses the power of the rising sun, dispelling darkness.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGolemsHeadpiece : BEHelmet {
	BEGolemsHeadpiece() : base() {
		$this.Name               = 'Golem''s Headpiece'
		$this.MapObjName         = 'golemsheadpiece'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy headpiece made from golem fragments, offering immense durability.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFairysGarland : BEHelmet {
	BEFairysGarland() : base() {
		$this.Name               = 'Fairy''s Garland'
		$this.MapObjName         = 'fairysgarland'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A delicate garland woven from enchanted flowers, granting subtle magical abilities.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGnomesHelmet : BEHelmet {
	BEGnomesHelmet() : base() {
		$this.Name               = 'Gnome''s Helmet'
		$this.MapObjName         = 'gnomeshelmet'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::Defense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small, sturdy helmet crafted by gnomes, surprisingly resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDwarvenHelmet : BEHelmet {
	BEDwarvenHelmet() : base() {
		$this.Name               = 'Dwarven Helmet'
		$this.MapObjName         = 'dwarvenhelmet'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A finely crafted, heavy helmet made by master dwarven smiths.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEElvenCirclet : BEHelmet {
	BEElvenCirclet() : base() {
		$this.Name               = 'Elven Circlet'
		$this.MapObjName         = 'elvencirclet'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An exquisitely crafted circlet worn by elves, enhancing their natural grace.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEOrcishWarhelm : BEHelmet {
	BEOrcishWarhelm() : base() {
		$this.Name               = 'Orcish Warhelm'
		$this.MapObjName         = 'orcishwarhelm'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crude but brutal warhelm, favored by orcish warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGoblinsPotHelm : BEHelmet {
	BEGoblinsPotHelm() : base() {
		$this.Name               = 'Goblin''s Pot Helm'
		$this.MapObjName         = 'goblinspothelm'
		$this.PurchasePrice      = 30
		$this.SellPrice          = 15
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A makeshift helmet fashioned from a cooking pot, offering minimal protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKoboldsHelmet : BEHelmet {
	BEKoboldsHelmet() : base() {
		$this.Name               = 'Kobold''s Helmet'
		$this.MapObjName         = 'koboldshelmet'
		$this.PurchasePrice      = 40
		$this.SellPrice          = 20
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small, spiky helmet worn by kobolds.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGriffinRidersHelm : BEHelmet {
	BEGriffinRidersHelm() : base() {
		$this.Name               = 'Griffin Rider''s Helm'
		$this.MapObjName         = 'griffinridershelm'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A specialized helm for riders of griffins, designed for aerial combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHippogriffTrainersCap : BEHelmet {
	BEHippogriffTrainersCap() : base() {
		$this.Name               = 'Hippogriff Trainer''s Cap'
		$this.MapObjName         = 'hippogrifftrainerscap'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A practical cap worn by hippogriff trainers, aiding in communication with the creatures.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHarpysFeatheredHelm : BEHelmet {
	BEHarpysFeatheredHelm() : base() {
		$this.Name               = 'Harpy''s Feathered Helm'
		$this.MapObjName         = 'harpysfeatheredhelm'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light helm adorned with harpy feathers, granting enhanced senses.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESirensHeadband : BEHelmet {
	BESirensHeadband() : base() {
		$this.Name               = 'Siren''s Headband'
		$this.MapObjName         = 'sirensheadband'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shimmering headband worn by sirens, subtly enhancing their enchanting voices.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMinotaursHornedHelm : BEHelmet {
	BEMinotaursHornedHelm() : base() {
		$this.Name               = 'Minotaur''s Horned Helm'
		$this.MapObjName         = 'minotaurshornedhelm'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A massive, horned helm that mimics a minotaur''s might.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECentaursHeadguard : BEHelmet {
	BECentaursHeadguard() : base() {
		$this.Name               = 'Centaur''s Headguard'
		$this.MapObjName         = 'centaursheadguard'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A protective headguard designed for centaur warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDryadsWreath : BEHelmet {
	BEDryadsWreath() : base() {
		$this.Name               = 'Dryad''s Wreath'
		$this.MapObjName         = 'dryadswreath'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A beautiful wreath of living plants worn by dryads, connecting them to nature.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BENagasHeadpiece : BEHelmet {
	BENagasHeadpiece() : base() {
		$this.Name               = 'Naga''s Headpiece'
		$this.MapObjName         = 'nagasheadpiece'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A serpentine headpiece worn by naga, enhancing their aquatic abilities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESphinxsMask : BEHelmet {
	BESphinxsMask() : base() {
		$this.Name               = 'Sphinx''s Mask'
		$this.MapObjName         = 'sphinxsmask'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 19
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An enigmatic mask that grants cryptic wisdom and a connection to ancient riddles.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhoenixFeatherCrown : BEHelmet {
	BEPhoenixFeatherCrown() : base() {
		$this.Name               = 'Phoenix Feather Crown'
		$this.MapObjName         = 'phoenixfeathercrown'
		$this.PurchasePrice      = 2800
		$this.SellPrice          = 1400
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vibrant crown adorned with phoenix feathers, granting regenerative powers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEUnicornHornCirclet : BEHelmet {
	BEUnicornHornCirclet() : base() {
		$this.Name               = 'Unicorn Horn Circlet'
		$this.MapObjName         = 'unicornhorncirclet'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pure circlet with a small unicorn horn, enhancing healing and purity.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBasiliskScaleHelm : BEHelmet {
	BEBasiliskScaleHelm() : base() {
		$this.Name               = 'Basilisk Scale Helm'
		$this.MapObjName         = 'basiliskscalehelm'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm made from basilisk scales, offering resistance to petrification.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGriffinScaleHelm : BEHelmet {
	BEGriffinScaleHelm() : base() {
		$this.Name               = 'Griffin Scale Helm'
		$this.MapObjName         = 'griffinscalehelm'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 11
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm made from griffin scales, offering light yet sturdy protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECockatricePlumeHelm : BEHelmet {
	BECockatricePlumeHelm() : base() {
		$this.Name               = 'Cockatrice Plume Helm'
		$this.MapObjName         = 'cockatriceplumehelm'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm adorned with cockatrice plumes, offering minor protection against petrification.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWyvernBoneHelm : BEHelmet {
	BEWyvernBoneHelm() : base() {
		$this.Name               = 'Wyvern Bone Helm'
		$this.MapObjName         = 'wyvernbonehelm'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rugged helm fashioned from wyvern bones, imparting a primal ferocity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERocFeatherHelm : BEHelmet {
	BERocFeatherHelm() : base() {
		$this.Name               = 'Roc Feather Helm'
		$this.MapObjName         = 'rocfeatherhelm'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light helm adorned with roc feathers, granting keen eyesight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKrakenTentacleHelm : BEHelmet {
	BEKrakenTentacleHelm() : base() {
		$this.Name               = 'Kraken Tentacle Helm'
		$this.MapObjName         = 'krakententaclehelm'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A strange helm made from kraken tentacles, allowing some control over water.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELeviathanScaleHelm : BEHelmet {
	BELeviathanScaleHelm() : base() {
		$this.Name               = 'Leviathan Scale Helm'
		$this.MapObjName         = 'leviathanscalehelm'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A massive helm made from leviathan scales, offering immense protection in water.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHydraHeadHelm : BEHelmet {
	BEHydraHeadHelm() : base() {
		$this.Name               = 'Hydra Head Helm'
		$this.MapObjName         = 'hydraheadhelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A monstrous helm adorned with a hydra head, granting multiple perspectives.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChimeraHornHelm : BEHelmet {
	BEChimeraHornHelm() : base() {
		$this.Name               = 'Chimera Horn Helm'
		$this.MapObjName         = 'chimerahornhelm'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm adorned with chimera horns, embodying the ferocity of multiple beasts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEManticoreSpikeHelm : BEHelmet {
	BEManticoreSpikeHelm() : base() {
		$this.Name               = 'Manticore Spike Helm'
		$this.MapObjName         = 'manticorespikehelm'
		$this.PurchasePrice      = 1750
		$this.SellPrice          = 875
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A spiky helm made from manticore spikes, inflicting poison on attackers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGorgonHairHelm : BEHelmet {
	BEGorgonHairHelm() : base() {
		$this.Name               = 'Gorgon Hair Helm'
		$this.MapObjName         = 'gorgonhairhelm'
		$this.PurchasePrice      = 1650
		$this.SellPrice          = 825
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A chilling helm adorned with gorgon hair, capable of partially paralyzing foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECerberusSkullHelm : BEHelmet {
	BECerberusSkullHelm() : base() {
		$this.Name               = 'Cerberus Skull Helm'
		$this.MapObjName         = 'cerberusskullhelm'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Defense = 19
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A fearsome helm made from a cerberus skull, instilling terror.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BELichsPhylacteryHelm : BEHelmet {
	BELichsPhylacteryHelm() : base() {
		$this.Name               = 'Lich''s Phylactery Helm'
		$this.MapObjName         = 'lichsphylacteryhelm'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cursed helm containing a lich''s phylactery, granting dark powers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAngelsHalo : BEHelmet {
	BEAngelsHalo() : base() {
		$this.Name               = 'Angel''s Halo'
		$this.MapObjName         = 'angelshalo'
		$this.PurchasePrice      = 3000
		$this.SellPrice          = 1500
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shimmering halo radiating divine energy, protecting against evil.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDemonsHornedHelm : BEHelmet {
	BEDemonsHornedHelm() : base() {
		$this.Name               = 'Demon''s Horned Helm'
		$this.MapObjName         = 'demonshornedhelm'
		$this.PurchasePrice      = 2800
		$this.SellPrice          = 1400
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark, horned helm imbued with demonic power, granting destructive capabilities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESpectersShroudHelm : BEHelmet {
	BESpectersShroudHelm() : base() {
		$this.Name               = 'Specter''s Shroud Helm'
		$this.MapObjName         = 'spectersshroudhelm'
		$this.PurchasePrice      = 2300
		$this.SellPrice          = 1150
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ghostly helm that allows the wearer to phase through solid objects.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVampiresCoffinLidHelm : BEHelmet {
	BEVampiresCoffinLidHelm() : base() {
		$this.Name               = 'Vampire''s Coffin Lid Helm'
		$this.MapObjName         = 'vampirescoffinlidhelm'
		$this.PurchasePrice      = 2400
		$this.SellPrice          = 1200
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A macabre helm fashioned from a coffin lid, granting life-draining abilities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWerewolfPeltHelm : BEHelmet {
	BEWerewolfPeltHelm() : base() {
		$this.Name               = 'Werewolf Pelt Helm'
		$this.MapObjName         = 'werewolfpelthelm'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rugged helm made from werewolf pelt, granting increased strength under the moon.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGoblinShamansSkullcap : BEHelmet {
	BEGoblinShamansSkullcap() : base() {
		$this.Name               = 'Goblin Shaman''s Skullcap'
		$this.MapObjName         = 'goblinshamansskullcap'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crude skullcap adorned with goblin shaman trinkets, enhancing their rudimentary magic.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOgresClubHelm : BEHelmet {
	BEOgresClubHelm() : base() {
		$this.Name               = 'Ogre''s Club Helm'
		$this.MapObjName         = 'ogresclubhelm'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A massive helm fashioned from an ogre''s club, offering blunt force protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETrollhideCap : BEHelmet {
	BETrollhideCap() : base() {
		$this.Name               = 'Trollhide Cap'
		$this.MapObjName         = 'trollhidecap'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::Defense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A thick cap made from troll hide, offering good regeneration.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGiantsKettleHelm : BEHelmet {
	BEGiantsKettleHelm() : base() {
		$this.Name               = 'Giant''s Kettle Helm'
		$this.MapObjName         = 'giantskettlehelm'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A colossal helm made from a giant''s kettle, providing immense defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpritesLeafHat : BEHelmet {
	BESpritesLeafHat() : base() {
		$this.Name               = 'Sprite''s Leaf Hat'
		$this.MapObjName         = 'spritesleafhat'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiny hat woven from magical leaves, granting illusionary abilities.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBrowniesAcornCap : BEHelmet {
	BEBrowniesAcornCap() : base() {
		$this.Name               = 'Brownie''s Acorn Cap'
		$this.MapObjName         = 'browniesacorncap'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{
			[StatId]::Defense = 1
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A small cap made from an acorn, offering minor protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELeprechaunsTopHat : BEHelmet {
	BELeprechaunsTopHat() : base() {
		$this.Name               = 'Leprechaun''s Top Hat'
		$this.MapObjName         = 'leprechaunstophat'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A charming top hat that brings good luck.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBansheesWailMask : BEHelmet {
	BEBansheesWailMask() : base() {
		$this.Name               = 'Banshee''s Wail Mask'
		$this.MapObjName         = 'bansheeswailmask'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A haunting mask that amplifies a banshee''s terrifying scream.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGhoulsGraveShroud : BEHelmet {
	BEGhoulsGraveShroud() : base() {
		$this.Name               = 'Ghoul''s Grave Shroud'
		$this.MapObjName         = 'ghoulsgraveshroud'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tattered shroud that grants the wearer partial invisibility in darkness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZombiesBrainBucket : BEHelmet {
	BEZombiesBrainBucket() : base() {
		$this.Name               = 'Zombie''s Brain Bucket'
		$this.MapObjName         = 'zombiesbrainbucket'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A gruesome bucket worn by zombies, protecting their brains.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMummysLinenWrap : BEHelmet {
	BEMummysLinenWrap() : base() {
		$this.Name               = 'Mummy''s Linen Wrap'
		$this.MapObjName         = 'mummyslinenwrap'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An ancient linen wrap that offers minor protection against curses.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFrankensteinsMonsterHeadpiece : BEHelmet {
	BEFrankensteinsMonsterHeadpiece() : base() {
		$this.Name               = 'Frankenstein''s Monster Headpiece'
		$this.MapObjName         = 'frankensteinsmonsterheadpiece'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 19
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A patched-together headpiece that offers immense resilience.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGargoyleStoneHelm : BEHelmet {
	BEGargoyleStoneHelm() : base() {
		$this.Name               = 'Gargoyle Stone Helm'
		$this.MapObjName         = 'gargoylestonehelm'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm carved from gargoyle stone, offering resistance to physical damage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonTurtleShellHelm : BEHelmet {
	BEDragonTurtleShellHelm() : base() {
		$this.Name               = 'Dragon Turtle Shell Helm'
		$this.MapObjName         = 'dragonturtleshellhelm'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::Defense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A massive helm made from a dragon turtle''s shell, offering exceptional defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFireElementalCoreHelm : BEHelmet {
	BEFireElementalCoreHelm() : base() {
		$this.Name               = 'Fire Elemental Core Helm'
		$this.MapObjName         = 'fireelementalcorehelm'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm infused with a fire elemental core, granting fire immunity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWaterElementalCoreHelm : BEHelmet {
	BEWaterElementalCoreHelm() : base() {
		$this.Name               = 'Water Elemental Core Helm'
		$this.MapObjName         = 'waterelementalcorehelm'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm infused with a water elemental core, granting water breathing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAirElementalCoreHelm : BEHelmet {
	BEAirElementalCoreHelm() : base() {
		$this.Name               = 'Air Elemental Core Helm'
		$this.MapObjName         = 'airelementalcorehelm'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm infused with an air elemental core, granting enhanced agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEarthElementalCoreHelm : BEHelmet {
	BEEarthElementalCoreHelm() : base() {
		$this.Name               = 'Earth Elemental Core Helm'
		$this.MapObjName         = 'earthelementalcorehelm'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm infused with an earth elemental core, granting increased fortitude.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELightElementalCoreHelm : BEHelmet {
	BELightElementalCoreHelm() : base() {
		$this.Name               = 'Light Elemental Core Helm'
		$this.MapObjName         = 'lightelementalcorehelm'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm infused with a light elemental core, radiating holy energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDarkElementalCoreHelm : BEHelmet {
	BEDarkElementalCoreHelm() : base() {
		$this.Name               = 'Dark Elemental Core Helm'
		$this.MapObjName         = 'darkelementalcorehelm'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm infused with a dark elemental core, manipulating shadows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArcaneOrbHelm : BEHelmet {
	BEArcaneOrbHelm() : base() {
		$this.Name               = 'Arcane Orb Helm'
		$this.MapObjName         = 'arcaneorbhelm'
		$this.PurchasePrice      = 2800
		$this.SellPrice          = 1400
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm with a floating arcane orb, significantly boosting magical power.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChaosFragmentHelm : BEHelmet {
	BEChaosFragmentHelm() : base() {
		$this.Name               = 'Chaos Fragment Helm'
		$this.MapObjName         = 'chaosfragmenthelm'
		$this.PurchasePrice      = 3200
		$this.SellPrice          = 1600
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A chaotic helm formed from fragments of pure chaos, granting unpredictable power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidGazeHelm : BEHelmet {
	BEVoidGazeHelm() : base() {
		$this.Name               = 'Void Gaze Helm'
		$this.MapObjName         = 'voidgazehelm'
		$this.PurchasePrice      = 2700
		$this.SellPrice          = 1350
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 23
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that allows the wearer to glimpse into the void, potentially driving them mad.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAstralProjectionHelm : BEHelmet {
	BEAstralProjectionHelm() : base() {
		$this.Name               = 'Astral Projection Helm'
		$this.MapObjName         = 'astralprojectionhelm'
		$this.PurchasePrice      = 2600
		$this.SellPrice          = 1300
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that aids in astral projection, allowing the wearer to explore beyond their body.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChronosHelm : BEHelmet {
	BEChronosHelm() : base() {
		$this.Name               = 'Chronos Helm'
		$this.MapObjName         = 'chronoshelm'
		$this.PurchasePrice      = 3500
		$this.SellPrice          = 1750
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm infused with the power of time, allowing minor temporal manipulation.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAetherialVeil : BEHelmet {
	BEAetherialVeil() : base() {
		$this.Name               = 'Aetherial Veil'
		$this.MapObjName         = 'aetherialveil'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A translucent veil that grants partial etherealness, making the wearer harder to hit.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECelestialDiadem : BEHelmet {
	BECelestialDiadem() : base() {
		$this.Name               = 'Celestial Diadem'
		$this.MapObjName         = 'celestialdiadem'
		$this.PurchasePrice      = 3100
		$this.SellPrice          = 1550
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 26
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A diadem adorned with fragments of starlight, radiating divine protection.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEAbyssalCrown : BEHelmet {
	BEAbyssalCrown() : base() {
		$this.Name               = 'Abyssal Crown'
		$this.MapObjName         = 'abyssalcrown'
		$this.PurchasePrice      = 2900
		$this.SellPrice          = 1450
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 19
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark crown from the abyss, granting control over deep-sea creatures.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEtherealHood : BEHelmet {
	BEEtherealHood() : base() {
		$this.Name               = 'Ethereal Hood'
		$this.MapObjName         = 'etherealhood'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shimmering hood that makes the wearer nearly invisible to the naked eye.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulforgedHelm : BEHelmet {
	BESoulforgedHelm() : base() {
		$this.Name               = 'Soulforged Helm'
		$this.MapObjName         = 'soulforgedhelm'
		$this.PurchasePrice      = 3300
		$this.SellPrice          = 1650
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm forged from captured souls, granting immense dark power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESpiritbondCirclet : BEHelmet {
	BESpiritbondCirclet() : base() {
		$this.Name               = 'Spiritbond Circlet'
		$this.MapObjName         = 'spiritbondcirclet'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A circlet that creates a strong bond with a companion spirit.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamthornHelm : BEHelmet {
	BEDreamthornHelm() : base() {
		$this.Name               = 'Dreamthorn Helm'
		$this.MapObjName         = 'dreamthornhelm'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm with sharp, dream-infused thorns, inflicting nightmares on enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWispwoodHelm : BEHelmet {
	BEWispwoodHelm() : base() {
		$this.Name               = 'Wispwood Helm'
		$this.MapObjName         = 'wispwoodhelm'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light helm made from wispwood, granting improved awareness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrystalBloomTiara : BEHelmet {
	BECrystalBloomTiara() : base() {
		$this.Name               = 'Crystal Bloom Tiara'
		$this.MapObjName         = 'crystalbloomtiara'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiara made of blossoming crystals, enhancing natural magic.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEStoneGolemHelm : BEHelmet {
	BEStoneGolemHelm() : base() {
		$this.Name               = 'Stone Golem Helm'
		$this.MapObjName         = 'stonegolemhelm'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy helm made from golem stone, offering robust defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEObsidianHelm : BEHelmet {
	BEObsidianHelm() : base() {
		$this.Name               = 'Obsidian Helm'
		$this.MapObjName         = 'obsidianhelm'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm carved from dark obsidian, absorbing magical attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEJadeCrown : BEHelmet {
	BEJadeCrown() : base() {
		$this.Name               = 'Jade Crown'
		$this.MapObjName         = 'jadecrown'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown made of pure jade, enhancing wisdom and longevity.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BERubyHelm : BEHelmet {
	BERubyHelm() : base() {
		$this.Name               = 'Ruby Helm'
		$this.MapObjName         = 'rubyhelm'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm adorned with a large ruby, radiating fiery energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESapphireTiara : BEHelmet {
	BESapphireTiara() : base() {
		$this.Name               = 'Sapphire Tiara'
		$this.MapObjName         = 'sapphiretiara'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiara with a brilliant sapphire, enhancing water and ice magic.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEEmeraldCirclet : BEHelmet {
	BEEmeraldCirclet() : base() {
		$this.Name               = 'Emerald Circlet'
		$this.MapObjName         = 'emeraldcirclet'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A circlet with a gleaming emerald, boosting nature-based magic.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDiamondCrown : BEHelmet {
	BEDiamondCrown() : base() {
		$this.Name               = 'Diamond Crown'
		$this.MapObjName         = 'diamondcrown'
		$this.PurchasePrice      = 3800
		$this.SellPrice          = 1900
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown encrusted with diamonds, offering unparalleled defense and prestige.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAmethystHelm : BEHelmet {
	BEAmethystHelm() : base() {
		$this.Name               = 'Amethyst Helm'
		$this.MapObjName         = 'amethysthelm'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm with an amethyst, enhancing mental clarity and resistance to mind-control.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETopazCirclet : BEHelmet {
	BETopazCirclet() : base() {
		$this.Name               = 'Topaz Circlet'
		$this.MapObjName         = 'topazcirclet'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A circlet with a golden topaz, enhancing agility and swiftness.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGarnetHelm : BEHelmet {
	BEGarnetHelm() : base() {
		$this.Name               = 'Garnet Helm'
		$this.MapObjName         = 'garnethelm'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm with a deep red garnet, boosting vitality and inner strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPearlTiara : BEHelmet {
	BEPearlTiara() : base() {
		$this.Name               = 'Pearl Tiara'
		$this.MapObjName         = 'pearltiara'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A delicate tiara with lustrous pearls, enhancing healing and purity.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEOpalHelm : BEHelmet {
	BEOpalHelm() : base() {
		$this.Name               = 'Opal Helm'
		$this.MapObjName         = 'opalhelm'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shimmering helm with an opal, granting minor illusionary abilities.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETourmalineCrown : BEHelmet {
	BETourmalineCrown() : base() {
		$this.Name               = 'Tourmaline Crown'
		$this.MapObjName         = 'tourmalinecrown'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 19
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown with a multi-colored tourmaline, granting resistance to various elemental attacks.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBloodstoneHelm : BEHelmet {
	BEBloodstoneHelm() : base() {
		$this.Name               = 'Bloodstone Helm'
		$this.MapObjName         = 'bloodstonehelm'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A grim helm with bloodstone, enhancing offensive capabilities at a cost to health.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMoonstoneCirclet : BEHelmet {
	BEMoonstoneCirclet() : base() {
		$this.Name               = 'Moonstone Circlet'
		$this.MapObjName         = 'moonstonecirclet'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A circlet with moonstone, granting enhanced intuition and nocturnal magic.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESunstoneHelm : BEHelmet {
	BESunstoneHelm() : base() {
		$this.Name               = 'Sunstone Helm'
		$this.MapObjName         = 'sunstonehelm'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm with sunstone, radiating warmth and light, countering darkness.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAdamantiteHelm : BEHelmet {
	BEAdamantiteHelm() : base() {
		$this.Name               = 'Adamantite Helm'
		$this.MapObjName         = 'adamantitehelm'
		$this.PurchasePrice      = 4500
		$this.SellPrice          = 2250
		$this.TargetStats        = @{
			[StatId]::Defense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A supremely strong helm made from adamantite, offering near-invincible defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOrichalcumCirclet : BEHelmet {
	BEOrichalcumCirclet() : base() {
		$this.Name               = 'Orichalcum Circlet'
		$this.MapObjName         = 'orichalcumcirclet'
		$this.PurchasePrice      = 4200
		$this.SellPrice          = 2100
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A legendary circlet made from orichalcum, amplifying all magical abilities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETitaniumHelm : BEHelmet {
	BETitaniumHelm() : base() {
		$this.Name               = 'Titanium Helm'
		$this.MapObjName         = 'titaniumhelm'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A lightweight yet incredibly strong helm made from titanium.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMithrilChainCoif : BEHelmet {
	BEMithrilChainCoif() : base() {
		$this.Name               = 'Mithril Chain Coif'
		$this.MapObjName         = 'mithrilchaincoif'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light and flexible coif made of mithril chain, offering good protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVibraniumHelm : BEHelmet {
	BEVibraniumHelm() : base() {
		$this.Name               = 'Vibranium Helm'
		$this.MapObjName         = 'vibraniumhelm'
		$this.PurchasePrice      = 5000
		$this.SellPrice          = 2500
		$this.TargetStats        = @{
			[StatId]::Defense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm made from vibranium, absorbing kinetic energy and returning it as force.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENetheriteHelm : BEHelmet {
	BENetheriteHelm() : base() {
		$this.Name               = 'Netherite Helm'
		$this.MapObjName         = 'netheritehelm'
		$this.PurchasePrice      = 4800
		$this.SellPrice          = 2400
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm forged from netherite, resistant to fire and powerful in the nether.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEtheriumHelm : BEHelmet {
	BEEtheriumHelm() : base() {
		$this.Name               = 'Etherium Helm'
		$this.MapObjName         = 'etheriumhelm'
		$this.PurchasePrice      = 4000
		$this.SellPrice          = 2000
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm made of ethereal material, granting resistance to magical effects.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEQuantumHelm : BEHelmet {
	BEQuantumHelm() : base() {
		$this.Name               = 'Quantum Helm'
		$this.MapObjName         = 'quantumhelm'
		$this.PurchasePrice      = 6000
		$this.SellPrice          = 3000
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm incorporating quantum technology, allowing minor reality manipulation.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStardustCirclet : BEHelmet {
	BEStardustCirclet() : base() {
		$this.Name               = 'Stardust Circlet'
		$this.MapObjName         = 'stardustcirclet'
		$this.PurchasePrice      = 3500
		$this.SellPrice          = 1750
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A circlet crafted from condensed stardust, granting cosmic awareness.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECometTailHelm : BEHelmet {
	BECometTailHelm() : base() {
		$this.Name               = 'Comet Tail Helm'
		$this.MapObjName         = 'comettailhelm'
		$this.PurchasePrice      = 3400
		$this.SellPrice          = 1700
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm with a streaking comet tail effect, enhancing speed and agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlackHoleHelm : BEHelmet {
	BEBlackHoleHelm() : base() {
		$this.Name               = 'Black Hole Helm'
		$this.MapObjName         = 'blackholehelm'
		$this.PurchasePrice      = 7000
		$this.SellPrice          = 3500
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that seems to absorb light, granting control over gravitational forces.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGalaxyHelm : BEHelmet {
	BEGalaxyHelm() : base() {
		$this.Name               = 'Galaxy Helm'
		$this.MapObjName         = 'galaxyhelm'
		$this.PurchasePrice      = 8000
		$this.SellPrice          = 4000
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that contains a swirling galaxy within, granting immense power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENebulaCrown : BEHelmet {
	BENebulaCrown() : base() {
		$this.Name               = 'Nebula Crown'
		$this.MapObjName         = 'nebulacrown'
		$this.PurchasePrice      = 7500
		$this.SellPrice          = 3750
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown that shimmers with the colors of a nebula, granting astral powers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESolarFlareHelm : BEHelmet {
	BESolarFlareHelm() : base() {
		$this.Name               = 'Solar Flare Helm'
		$this.MapObjName         = 'solarflarehelm'
		$this.PurchasePrice      = 6500
		$this.SellPrice          = 3250
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that bursts with solar energy, incinerating foes with light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELunarEclipseHelm : BEHelmet {
	BELunarEclipseHelm() : base() {
		$this.Name               = 'Lunar Eclipse Helm'
		$this.MapObjName         = 'lunareclipsehelm'
		$this.PurchasePrice      = 6500
		$this.SellPrice          = 3250
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm shrouded in the darkness of a lunar eclipse, granting shadowy powers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECosmicHelm : BEHelmet {
	BECosmicHelm() : base() {
		$this.Name               = 'Cosmic Helm'
		$this.MapObjName         = 'cosmichelm'
		$this.PurchasePrice      = 9000
		$this.SellPrice          = 4500
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that seems to transcend dimensions, granting omnipotent abilities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidwalkerHelm : BEHelmet {
	BEVoidwalkerHelm() : base() {
		$this.Name               = 'Voidwalker Helm'
		$this.MapObjName         = 'voidwalkerhelm'
		$this.PurchasePrice      = 5500
		$this.SellPrice          = 2750
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm for those who walk the void, granting protection from its horrors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETimeWeaversHood : BEHelmet {
	BETimeWeaversHood() : base() {
		$this.Name               = 'Time Weaver''s Hood'
		$this.MapObjName         = 'timeweavershood'
		$this.PurchasePrice      = 5000
		$this.SellPrice          = 2500
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hood that allows the wearer to subtly manipulate the flow of time.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERealityBendersTiara : BEHelmet {
	BERealityBendersTiara() : base() {
		$this.Name               = 'Reality Bender''s Tiara'
		$this.MapObjName         = 'realitybenderstiara'
		$this.PurchasePrice      = 6000
		$this.SellPrice          = 3000
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiara that allows the wearer to bend reality to their will, within limits.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDimensionShiftersHelm : BEHelmet {
	BEDimensionShiftersHelm() : base() {
		$this.Name               = 'Dimension Shifter''s Helm'
		$this.MapObjName         = 'dimensionshiftershelm'
		$this.PurchasePrice      = 5800
		$this.SellPrice          = 2900
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that allows the wearer to shift between dimensions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGravitonHelm : BEHelmet {
	BEGravitonHelm() : base() {
		$this.Name               = 'Graviton Helm'
		$this.MapObjName         = 'gravitonhelm'
		$this.PurchasePrice      = 5200
		$this.SellPrice          = 2600
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that manipulates gravity, allowing the wearer to float or crush foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAntiMatterHelm : BEHelmet {
	BEAntiMatterHelm() : base() {
		$this.Name               = 'Anti-Matter Helm'
		$this.MapObjName         = 'antimatterhelm'
		$this.PurchasePrice      = 7000
		$this.SellPrice          = 3500
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm crafted from anti-matter, highly destructive but dangerous to wear.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESingularityHelm : BEHelmet {
	BESingularityHelm() : base() {
		$this.Name               = 'Singularity Helm'
		$this.MapObjName         = 'singularityhelm'
		$this.PurchasePrice      = 8500
		$this.SellPrice          = 4250
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that creates a miniature singularity, pulling enemies in.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEldritchVisage : BEHelmet {
	BEEldritchVisage() : base() {
		$this.Name               = 'Eldritch Visage'
		$this.MapObjName         = 'eldritchvisage'
		$this.PurchasePrice      = 4500
		$this.SellPrice          = 2250
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm of disturbing appearance, granting maddening powers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrystallineHelm : BEHelmet {
	BECrystallineHelm() : base() {
		$this.Name               = 'Crystalline Helm'
		$this.MapObjName         = 'crystallinehelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm made of pure crystal, offering excellent protection and magic amplification.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEForgeLordsHelm : BEHelmet {
	BEForgeLordsHelm() : base() {
		$this.Name               = 'Forge Lord''s Helm'
		$this.MapObjName         = 'forgelordshelm'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy helm worn by master blacksmiths, radiating immense heat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEArtificersGoggles : BEHelmet {
	BEArtificersGoggles() : base() {
		$this.Name               = 'Artificer''s Goggles'
		$this.MapObjName         = 'artificersgoggles'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Goggles designed for artificers, enhancing their crafting precision.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERunesmithsHelmet : BEHelmet {
	BERunesmithsHelmet() : base() {
		$this.Name               = 'Runesmith''s Helmet'
		$this.MapObjName         = 'runesmithshelmet'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helmet inscribed with powerful runes, enhancing runic magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlimmersteelHelm : BEHelmet {
	BEGlimmersteelHelm() : base() {
		$this.Name               = 'Glimmersteel Helm'
		$this.MapObjName         = 'glimmersteelhelm'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm made of glimmersteel, reflecting light and dazzling enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulstoneHelm : BEHelmet {
	BESoulstoneHelm() : base() {
		$this.Name               = 'Soulstone Helm'
		$this.MapObjName         = 'soulstonehelm'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm with an embedded soulstone, capable of absorbing stray souls for power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiritWardensHelm : BEHelmet {
	BESpiritWardensHelm() : base() {
		$this.Name               = 'Spirit Warden''s Helm'
		$this.MapObjName         = 'spiritwardenshelm'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm worn by those who guard spirits, offering protection from malevolent entities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAbjurersHood : BEHelmet {
	BEAbjurersHood() : base() {
		$this.Name               = 'Abjurer''s Hood'
		$this.MapObjName         = 'abjurershood'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hood worn by abjurers, specializing in defensive magic.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEConjurersCap : BEHelmet {
	BEConjurersCap() : base() {
		$this.Name               = 'Conjurer''s Cap'
		$this.MapObjName         = 'conjurerscap'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cap worn by conjurers, aiding in summoning creatures.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivinersHeadband : BEHelmet {
	BEDivinersHeadband() : base() {
		$this.Name               = 'Diviner''s Headband'
		$this.MapObjName         = 'divinersheadband'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A headband worn by diviners, enhancing their foresight.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEnchantresssCirclet : BEHelmet {
	BEEnchantresssCirclet() : base() {
		$this.Name               = 'Enchantress''s Circlet'
		$this.MapObjName         = 'enchantressscirclet'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A circlet worn by enchantresses, boosting charming spells.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEIllusionistsMask : BEHelmet {
	BEIllusionistsMask() : base() {
		$this.Name               = 'Illusionist''s Mask'
		$this.MapObjName         = 'illusionistsmask'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 19
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A mask worn by illusionists, making their illusions more convincing.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEvokersHelm : BEHelmet {
	BEEvokersHelm() : base() {
		$this.Name               = 'Evoker''s Helm'
		$this.MapObjName         = 'evokershelm'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm worn by evokers, amplifying their destructive spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETransmutersHood : BEHelmet {
	BETransmutersHood() : base() {
		$this.Name               = 'Transmuter''s Hood'
		$this.MapObjName         = 'transmutershood'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 21
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hood worn by transmuters, aiding in altering physical properties.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENecromancersSkullMask : BEHelmet {
	BENecromancersSkullMask() : base() {
		$this.Name               = 'Necromancer''s Skull Mask'
		$this.MapObjName         = 'necromancersskullmask'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A chilling skull mask worn by necromancers, granting greater control over the undead.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarlordsGreathelm : BEHelmet {
	BEWarlordsGreathelm() : base() {
		$this.Name               = 'Warlord''s Greathelm'
		$this.MapObjName         = 'warlordsgreathelm'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Defense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A massive greathelm worn by powerful warlords, dominating the battlefield.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEConquerorsCrown : BEHelmet {
	BEConquerorsCrown() : base() {
		$this.Name               = 'Conqueror''s Crown'
		$this.MapObjName         = 'conquerorscrown'
		$this.PurchasePrice      = 2700
		$this.SellPrice          = 1350
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A magnificent crown worn by conquerors, inspiring loyalty and fear in their armies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEmperorsLaurel : BEHelmet {
	BEEmperorsLaurel() : base() {
		$this.Name               = 'Emperor''s Laurel'
		$this.MapObjName         = 'emperorslaurel'
		$this.PurchasePrice      = 2900
		$this.SellPrice          = 1450
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A golden laurel wreath worn by emperors, symbolizing absolute power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEmpresssTiara : BEHelmet {
	BEEmpresssTiara() : base() {
		$this.Name               = 'Empress''s Tiara'
		$this.MapObjName         = 'empressstiara'
		$this.PurchasePrice      = 2800
		$this.SellPrice          = 1400
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A regal tiara worn by empresses, radiating grace and authority.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEKingsCrown : BEHelmet {
	BEKingsCrown() : base() {
		$this.Name               = 'King''s Crown'
		$this.MapObjName         = 'kingscrown'
		$this.PurchasePrice      = 2600
		$this.SellPrice          = 1300
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A noble crown worn by kings, inspiring bravery in their subjects.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEQueensDiadem : BEHelmet {
	BEQueensDiadem() : base() {
		$this.Name               = 'Queen''s Diadem'
		$this.MapObjName         = 'queensdiadem'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A beautiful diadem worn by queens, symbolizing wisdom and benevolence.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBaronsHelmet : BEHelmet {
	BEBaronsHelmet() : base() {
		$this.Name               = 'Baron''s Helmet'
		$this.MapObjName         = 'baronshelmet'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy helmet worn by barons, providing protection in battle.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBaronesssCirclet : BEHelmet {
	BEBaronesssCirclet() : base() {
		$this.Name               = 'Baroness''s Circlet'
		$this.MapObjName         = 'baronessscirclet'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An elegant circlet worn by baronesses, suitable for court.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDukesGreathelm : BEHelmet {
	BEDukesGreathelm() : base() {
		$this.Name               = 'Duke''s Greathelm'
		$this.MapObjName         = 'dukesgreathelm'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A grand greathelm worn by dukes, signifying their martial prowess.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDuchesssTiara : BEHelmet {
	BEDuchesssTiara() : base() {
		$this.Name               = 'Duchess''s Tiara'
		$this.MapObjName         = 'duchessstiara'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sophisticated tiara worn by duchesses, befitting their noble status.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECountsHelmet : BEHelmet {
	BECountsHelmet() : base() {
		$this.Name               = 'Count''s Helmet'
		$this.MapObjName         = 'countshelmet'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A finely crafted helmet worn by counts, symbolizing their standing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECountesssHeadband : BEHelmet {
	BECountesssHeadband() : base() {
		$this.Name               = 'Countess''s Headband'
		$this.MapObjName         = 'countesssheadband'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A stylish headband worn by countesses, adorned with minor jewels.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEKnightCaptainsHelm : BEHelmet {
	BEKnightCaptainsHelm() : base() {
		$this.Name               = 'Knight-Captain''s Helm'
		$this.MapObjName         = 'knightcaptainshelm'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A distinguished helm worn by knight-captains, leading their brethren.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESergeantsHelmet : BEHelmet {
	BESergeantsHelmet() : base() {
		$this.Name               = 'Sergeant''s Helmet'
		$this.MapObjName         = 'sergeantshelmet'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A practical helmet worn by sergeants, designed for frontline leadership.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERecruitsCap : BEHelmet {
	BERecruitsCap() : base() {
		$this.Name               = 'Recruit''s Cap'
		$this.MapObjName         = 'recruitscap'
		$this.PurchasePrice      = 20
		$this.SellPrice          = 10
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A basic cap given to new recruits, offering minimal protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVeteransHelm : BEHelmet {
	BEVeteransHelm() : base() {
		$this.Name               = 'Veteran''s Helm'
		$this.MapObjName         = 'veteranshelm'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A battle-scarred helm worn by veterans, showing their experience.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEliteGuardHelm : BEHelmet {
	BEEliteGuardHelm() : base() {
		$this.Name               = 'Elite Guard Helm'
		$this.MapObjName         = 'eliteguardhelm'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A polished helm worn by elite guards, offering superior defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERoyalGuardHelm : BEHelmet {
	BERoyalGuardHelm() : base() {
		$this.Name               = 'Royal Guard Helm'
		$this.MapObjName         = 'royalguardhelm'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A highly ornate helm worn by royal guards, signifying their loyalty.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETempleGuardHelm : BEHelmet {
	BETempleGuardHelm() : base() {
		$this.Name               = 'Temple Guard Helm'
		$this.MapObjName         = 'templeguardhelm'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sacred helm worn by temple guards, imbued with divine protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowGuardHelm : BEHelmet {
	BEShadowGuardHelm() : base() {
		$this.Name               = 'Shadow Guard Helm'
		$this.MapObjName         = 'shadowguardhelm'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark helm worn by shadow guards, aiding in stealth and ambush.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArenaChampionsHelm : BEHelmet {
	BEArenaChampionsHelm() : base() {
		$this.Name               = 'Arena Champion''s Helm'
		$this.MapObjName         = 'arenachampionshelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A fearsome helm worn by arena champions, inspiring awe and fear.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGrandmastersHelm : BEHelmet {
	BEGrandmastersHelm() : base() {
		$this.Name               = 'Grandmaster''s Helm'
		$this.MapObjName         = 'grandmastershelm'
		$this.PurchasePrice      = 2800
		$this.SellPrice          = 1400
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A legendary helm worn by grandmasters of a martial art or order.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESacredHelm : BEHelmet {
	BESacredHelm() : base() {
		$this.Name               = 'Sacred Helm'
		$this.MapObjName         = 'sacredhelm'
		$this.PurchasePrice      = 2700
		$this.SellPrice          = 1350
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm blessed by ancient deities, offering immense spiritual protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEProfaneHelm : BEHelmet {
	BEProfaneHelm() : base() {
		$this.Name               = 'Profane Helm'
		$this.MapObjName         = 'profanehelm'
		$this.PurchasePrice      = 2600
		$this.SellPrice          = 1300
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm cursed by dark powers, granting immense destructive capabilities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlessedCirclet : BEHelmet {
	BEBlessedCirclet() : base() {
		$this.Name               = 'Blessed Circlet'
		$this.MapObjName         = 'blessedcirclet'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple circlet blessed by a cleric, offering minor protection.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECursedHeadband : BEHelmet {
	BECursedHeadband() : base() {
		$this.Name               = 'Cursed Headband'
		$this.MapObjName         = 'cursedheadband'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A headband imbued with a minor curse, granting some power at a cost.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDemonicCirclet : BEHelmet {
	BEDemonicCirclet() : base() {
		$this.Name               = 'Demonic Circlet'
		$this.MapObjName         = 'demoniccirclet'
		$this.PurchasePrice      = 2300
		$this.SellPrice          = 1150
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A circlet forged in hellfire, granting control over minor demons.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAngelicHalo : BEHelmet {
	BEAngelicHalo() : base() {
		$this.Name               = 'Angelic Halo'
		$this.MapObjName         = 'angelichalo'
		$this.PurchasePrice      = 2400
		$this.SellPrice          = 1200
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A luminous halo of pure light, granting divine blessings.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFieryHelm : BEHelmet {
	BEFieryHelm() : base() {
		$this.Name               = 'Fiery Helm'
		$this.MapObjName         = 'fieryhelm'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm wreathed in eternal flames, burning enemies on contact.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIcyHelm : BEHelmet {
	BEIcyHelm() : base() {
		$this.Name               = 'Icy Helm'
		$this.MapObjName         = 'icyhelm'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm covered in permafrost, freezing enemies with each blow.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShockingHelm : BEHelmet {
	BEShockingHelm() : base() {
		$this.Name               = 'Shocking Helm'
		$this.MapObjName         = 'shockinghelm'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm crackling with electricity, paralyzing foes with lightning.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPoisonousHelm : BEHelmet {
	BEPoisonousHelm() : base() {
		$this.Name               = 'Poisonous Helm'
		$this.MapObjName         = 'poisonoushelm'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm dripping with venom, poisoning enemies upon contact.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneSkinHelm : BEHelmet {
	BEStoneSkinHelm() : base() {
		$this.Name               = 'Stone Skin Helm'
		$this.MapObjName         = 'stoneskinhelm'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that turns the wearer''s skin to stone, providing immense defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWindsEmbraceHelm : BEHelmet {
	BEWindsEmbraceHelm() : base() {
		$this.Name               = 'Wind''s Embrace Helm'
		$this.MapObjName         = 'windsembracehelm'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light helm that allows the wearer to move with the swiftness of wind.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidTouchedHelm : BEHelmet {
	BEVoidTouchedHelm() : base() {
		$this.Name               = 'Void Touched Helm'
		$this.MapObjName         = 'voidtouchedhelm'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that has touched the void, granting resistance to void energies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELightforgedHelm : BEHelmet {
	BELightforgedHelm() : base() {
		$this.Name               = 'Lightforged Helm'
		$this.MapObjName         = 'lightforgedhelm'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm forged with holy light, devastating to dark creatures.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDarkforgedHelm : BEHelmet {
	BEDarkforgedHelm() : base() {
		$this.Name               = 'Darkforged Helm'
		$this.MapObjName         = 'darkforgedhelm'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm forged in darkness, powerful against light creatures.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERuneofStrengthHelm : BEHelmet {
	BERuneofStrengthHelm() : base() {
		$this.Name               = 'Rune of Strength Helm'
		$this.MapObjName         = 'runeofstrengthhelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm inscribed with a rune of strength, greatly boosting physical power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BERuneofMagicHelm : BEHelmet {
	BERuneofMagicHelm() : base() {
		$this.Name               = 'Rune of Magic Helm'
		$this.MapObjName         = 'runeofmagichelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm inscribed with a rune of magic, greatly boosting magical power.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERuneofProtectionHelm : BEHelmet {
	BERuneofProtectionHelm() : base() {
		$this.Name               = 'Rune of Protection Helm'
		$this.MapObjName         = 'runeofprotectionhelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm inscribed with a rune of protection, significantly increasing defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERuneofSpeedHelm : BEHelmet {
	BERuneofSpeedHelm() : base() {
		$this.Name               = 'Rune of Speed Helm'
		$this.MapObjName         = 'runeofspeedhelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm inscribed with a rune of speed, increasing agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERuneofWisdomHelm : BEHelmet {
	BERuneofWisdomHelm() : base() {
		$this.Name               = 'Rune of Wisdom Helm'
		$this.MapObjName         = 'runeofwisdomhelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm inscribed with a rune of wisdom, boosting intellect.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERuneofVitalityHelm : BEHelmet {
	BERuneofVitalityHelm() : base() {
		$this.Name               = 'Rune of Vitality Helm'
		$this.MapObjName         = 'runeofvitalityhelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm inscribed with a rune of vitality, increasing health.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERuneofFuryHelm : BEHelmet {
	BERuneofFuryHelm() : base() {
		$this.Name               = 'Rune of Fury Helm'
		$this.MapObjName         = 'runeoffuryhelm'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm inscribed with a rune of fury, increasing attack at low health.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BERuneofSerenityHelm : BEHelmet {
	BERuneofSerenityHelm() : base() {
		$this.Name               = 'Rune of Serenity Helm'
		$this.MapObjName         = 'runeofserenityhelm'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm inscribed with a rune of serenity, calming the mind and boosting magic.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHeroicHelm : BEHelmet {
	BEHeroicHelm() : base() {
		$this.Name               = 'Heroic Helm'
		$this.MapObjName         = 'heroichelm'
		$this.PurchasePrice      = 3000
		$this.SellPrice          = 1500
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm of ancient heroes, inspiring allies and striking fear in foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BELegendaryHelm : BEHelmet {
	BELegendaryHelm() : base() {
		$this.Name               = 'Legendary Helm'
		$this.MapObjName         = 'legendaryhelm'
		$this.PurchasePrice      = 3500
		$this.SellPrice          = 1750
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm from forgotten legends, imbued with immense, mysterious power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMythicHelm : BEHelmet {
	BEMythicHelm() : base() {
		$this.Name               = 'Mythic Helm'
		$this.MapObjName         = 'mythichelm'
		$this.PurchasePrice      = 4000
		$this.SellPrice          = 2000
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm from the age of myths, possessing unparalleled power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivineHelm : BEHelmet {
	BEDivineHelm() : base() {
		$this.Name               = 'Divine Helm'
		$this.MapObjName         = 'divinehelm'
		$this.PurchasePrice      = 4500
		$this.SellPrice          = 2250
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm of divine origin, granting godly powers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAbyssalHelm : BEHelmet {
	BEAbyssalHelm() : base() {
		$this.Name               = 'Abyssal Helm'
		$this.MapObjName         = 'abyssalhelm'
		$this.PurchasePrice      = 4300
		$this.SellPrice          = 2150
		$this.TargetStats        = @{
			[StatId]::Defense = 38
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm from the darkest depths of the abyss, granting unholy power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECelestialHelm : BEHelmet {
	BECelestialHelm() : base() {
		$this.Name               = 'Celestial Helm'
		$this.MapObjName         = 'celestialhelm'
		$this.PurchasePrice      = 4200
		$this.SellPrice          = 2100
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm descended from the heavens, radiating pure light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamersVeil : BEHelmet {
	BEDreamersVeil() : base() {
		$this.Name               = 'Dreamer''s Veil'
		$this.MapObjName         = 'dreamersveil'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A veil that allows the wearer to enter and manipulate dreams.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWanderersCap : BEHelmet {
	BEWanderersCap() : base() {
		$this.Name               = 'Wanderer''s Cap'
		$this.MapObjName         = 'wandererscap'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A practical cap for a long journey, providing comfort and minor protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPioneersHat : BEHelmet {
	BEPioneersHat() : base() {
		$this.Name               = 'Pioneer''s Hat'
		$this.MapObjName         = 'pioneershat'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy hat for pioneers, essential for exploration.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPathfindersHelm : BEHelmet {
	BEPathfindersHelm() : base() {
		$this.Name               = 'Pathfinder''s Helm'
		$this.MapObjName         = 'pathfindershelm'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 4
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that helps pathfinders navigate treacherous terrain.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEExplorersGoggles : BEHelmet {
	BEExplorersGoggles() : base() {
		$this.Name               = 'Explorer''s Goggles'
		$this.MapObjName         = 'explorersgoggles'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Goggles that aid explorers in spotting hidden details.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAdventurersHelmet : BEHelmet {
	BEAdventurersHelmet() : base() {
		$this.Name               = 'Adventurer''s Helmet'
		$this.MapObjName         = 'adventurershelmet'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A reliable helmet for any adventurer, offering balanced protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERelicHuntersHeadband : BEHelmet {
	BERelicHuntersHeadband() : base() {
		$this.Name               = 'Relic Hunter''s Headband'
		$this.MapObjName         = 'relichuntersheadband'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A headband that subtly hums when near ancient relics.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETreasureSeekersHelm : BEHelmet {
	BETreasureSeekersHelm() : base() {
		$this.Name               = 'Treasure Seeker''s Helm'
		$this.MapObjName         = 'treasureseekershelm'
		$this.PurchasePrice      = 220
		$this.SellPrice          = 110
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that occasionally gleams when hidden treasure is nearby.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGraveRobbersMask : BEHelmet {
	BEGraveRobbersMask() : base() {
		$this.Name               = 'Grave Robber''s Mask'
		$this.MapObjName         = 'graverobbersmask'
		$this.PurchasePrice      = 160
		$this.SellPrice          = 80
		$this.TargetStats        = @{
			[StatId]::Defense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark mask worn by grave robbers, aiding in stealth in tombs.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDungeonDelversHelm : BEHelmet {
	BEDungeonDelversHelm() : base() {
		$this.Name               = 'Dungeon Delver''s Helm'
		$this.MapObjName         = 'dungeondelvershelm'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robust helm for dungeon delvers, protecting against traps.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonSlayersHelm : BEHelmet {
	BEDragonSlayersHelm() : base() {
		$this.Name               = 'Dragon Slayer''s Helm'
		$this.MapObjName         = 'dragonslayershelm'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm specifically designed for slaying dragons, enhancing anti-dragon abilities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGiantKillersHelm : BEHelmet {
	BEGiantKillersHelm() : base() {
		$this.Name               = 'Giant Killer''s Helm'
		$this.MapObjName         = 'giantkillershelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that enhances the wearer''s ability to fight giants.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMonsterHuntersHelm : BEHelmet {
	BEMonsterHuntersHelm() : base() {
		$this.Name               = 'Monster Hunter''s Helm'
		$this.MapObjName         = 'monsterhuntershelm'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A general-purpose helm for hunting all manner of monsters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBeastTamersBridleHelm : BEHelmet {
	BEBeastTamersBridleHelm() : base() {
		$this.Name               = 'Beast Tamer''s Bridle Helm'
		$this.MapObjName         = 'beasttamersbridlehelm'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A unique helm that aids in taming wild beasts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFamiliarsBondHelm : BEHelmet {
	BEFamiliarsBondHelm() : base() {
		$this.Name               = 'Familiar''s Bond Helm'
		$this.MapObjName         = 'familiarsbondhelm'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that strengthens the bond with a magical familiar.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESummonersCrown : BEHelmet {
	BESummonersCrown() : base() {
		$this.Name               = 'Summoner''s Crown'
		$this.MapObjName         = 'summonerscrown'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 21
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown that amplifies summoning magic, allowing for more powerful summons.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPuppetMastersVisage : BEHelmet {
	BEPuppetMastersVisage() : base() {
		$this.Name               = 'Puppet Master''s Visage'
		$this.MapObjName         = 'puppetmastersvisage'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A grim visage that allows control over puppets and constructs.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGolemCommandersHelm : BEHelmet {
	BEGolemCommandersHelm() : base() {
		$this.Name               = 'Golem Commander''s Helm'
		$this.MapObjName         = 'golemcommandershelm'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 19
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that allows direct mental control over nearby golems.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAutomatonPilotsHelm : BEHelmet {
	BEAutomatonPilotsHelm() : base() {
		$this.Name               = 'Automaton Pilot''s Helm'
		$this.MapObjName         = 'automatonpilotshelm'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm for piloting large automatons, providing necessary controls.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEClockworkEngineersGoggles : BEHelmet {
	BEClockworkEngineersGoggles() : base() {
		$this.Name               = 'Clockwork Engineer''s Goggles'
		$this.MapObjName         = 'clockworkengineersgoggles'
		$this.PurchasePrice      = 170
		$this.SellPrice          = 85
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Goggles that aid in precise clockwork construction and repair.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArtificersCrown : BEHelmet {
	BEArtificersCrown() : base() {
		$this.Name               = 'Artificer''s Crown'
		$this.MapObjName         = 'artificerscrown'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown worn by master artificers, greatly enhancing their creations.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInventorsHelm : BEHelmet {
	BEInventorsHelm() : base() {
		$this.Name               = 'Inventor''s Helm'
		$this.MapObjName         = 'inventorshelm'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that inspires grand inventions and complex designs.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMadScientistsHeadgear : BEHelmet {
	BEMadScientistsHeadgear() : base() {
		$this.Name               = 'Mad Scientist''s Headgear'
		$this.MapObjName         = 'madscientistsheadgear'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Erratic headgear that amplifies chaotic experiments.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEApothecarysMortarCap : BEHelmet {
	BEApothecarysMortarCap() : base() {
		$this.Name               = 'Apothecary''s Mortar Cap'
		$this.MapObjName         = 'apothecarysmortarcap'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cap worn by apothecaries, aiding in the creation of potent concoctions.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHerbalistsWovenHat : BEHelmet {
	BEHerbalistsWovenHat() : base() {
		$this.Name               = 'Herbalist''s Woven Hat'
		$this.MapObjName         = 'herbalistswovenhat'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hat woven from herbs, enhancing knowledge of plants.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChefsToqueHelm : BEHelmet {
	BEChefsToqueHelm() : base() {
		$this.Name               = 'Chef''s Toque Helm'
		$this.MapObjName         = 'chefstoquehelm'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A surprisingly sturdy helm designed for battle-chefs, offering a surprising amount of protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFishermansHat : BEHelmet {
	BEFishermansHat() : base() {
		$this.Name               = 'Fisherman''s Hat'
		$this.MapObjName         = 'fishermanshat'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A wide-brimmed hat that protects fishermen from the elements.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFarmersStrawHat : BEHelmet {
	BEFarmersStrawHat() : base() {
		$this.Name               = 'Farmer''s Straw Hat'
		$this.MapObjName         = 'farmersstrawhat'
		$this.PurchasePrice      = 30
		$this.SellPrice          = 15
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple straw hat, offering basic sun protection.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMinersHardHat : BEHelmet {
	BEMinersHardHat() : base() {
		$this.Name               = 'Miner''s Hard Hat'
		$this.MapObjName         = 'minershardhat'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hard hat with a lamp, essential for mining.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELumberjacksCap : BEHelmet {
	BELumberjacksCap() : base() {
		$this.Name               = 'Lumberjack''s Cap'
		$this.MapObjName         = 'lumberjackscap'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rugged cap for lumberjacks, offering protection from falling debris.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHuntersFurHood : BEHelmet {
	BEHuntersFurHood() : base() {
		$this.Name               = 'Hunter''s Fur Hood'
		$this.MapObjName         = 'huntersfurhood'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A warm fur hood for hunters, providing warmth and stealth in cold climates.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFishermansKnitCap : BEHelmet {
	BEFishermansKnitCap() : base() {
		$this.Name               = 'Fisherman''s Knit Cap'
		$this.MapObjName         = 'fishermansknitcap'
		$this.PurchasePrice      = 60
		$this.SellPrice          = 30
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A warm knit cap for fishermen, warding off the cold.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShepherdsWoolCap : BEHelmet {
	BEShepherdsWoolCap() : base() {
		$this.Name               = 'Shepherd''s Wool Cap'
		$this.MapObjName         = 'shepherdswoolcap'
		$this.PurchasePrice      = 40
		$this.SellPrice          = 20
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple wool cap worn by shepherds, providing warmth.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFarmersSunHat : BEHelmet {
	BEFarmersSunHat() : base() {
		$this.Name               = 'Farmer''s Sun Hat'
		$this.MapObjName         = 'farmerssunhat'
		$this.PurchasePrice      = 35
		$this.SellPrice          = 17
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A wide sun hat for farmers, protecting from the sun''s glare.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBrewersCap : BEHelmet {
	BEBrewersCap() : base() {
		$this.Name               = 'Brewer''s Cap'
		$this.MapObjName         = 'brewerscap'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A traditional cap worn by brewers, ensuring good spirits.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBakersToque : BEHelmet {
	BEBakersToque() : base() {
		$this.Name               = 'Baker''s Toque'
		$this.MapObjName         = 'bakerstoque'
		$this.PurchasePrice      = 60
		$this.SellPrice          = 30
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tall white hat worn by bakers, protecting their hair and symbolizing their craft.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInnkeepersHeadband : BEHelmet {
	BEInnkeepersHeadband() : base() {
		$this.Name               = 'Innkeeper''s Headband'
		$this.MapObjName         = 'innkeepersheadband'
		$this.PurchasePrice      = 40
		$this.SellPrice          = 20
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple headband worn by innkeepers, offering a welcoming demeanor.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMerchantsTurban : BEHelmet {
	BEMerchantsTurban() : base() {
		$this.Name               = 'Merchant''s Turban'
		$this.MapObjName         = 'merchantsturban'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A practical turban worn by merchants, suitable for travel.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECaravanMastersHelm : BEHelmet {
	BECaravanMastersHelm() : base() {
		$this.Name               = 'Caravan Master''s Helm'
		$this.MapObjName         = 'caravanmastershelm'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy helm worn by caravan masters, protecting during long journeys.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESailorsSouwester : BEHelmet {
	BESailorsSouwester() : base() {
		$this.Name               = 'Sailor''s Sou''wester'
		$this.MapObjName         = 'sailorssouwester'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::Defense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A waterproof hat worn by sailors, protecting from spray and rain.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPirateCaptainsTricorne : BEHelmet {
	BEPirateCaptainsTricorne() : base() {
		$this.Name               = 'Pirate Captain''s Tricorne'
		$this.MapObjName         = 'piratecaptainstricorne'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A classic pirate captain''s hat, inspiring fear and loyalty.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBuccaneersBandana : BEHelmet {
	BEBuccaneersBandana() : base() {
		$this.Name               = 'Buccaneer''s Bandana'
		$this.MapObjName         = 'buccaneersbandana'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A colorful bandana worn by buccaneers, signifying their adventurous spirit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEExplorersPithHelmet : BEHelmet {
	BEExplorersPithHelmet() : base() {
		$this.Name               = 'Explorer''s Pith Helmet'
		$this.MapObjName         = 'explorerspithhelmet'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A classic pith helmet for explorers, offering sun protection in exotic lands.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBigGameHuntersHat : BEHelmet {
	BEBigGameHuntersHat() : base() {
		$this.Name               = 'Big Game Hunter''s Hat'
		$this.MapObjName         = 'biggamehuntershat'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A distinctive hat worn by big game hunters, indicating their prowess.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESafariHat : BEHelmet {
	BESafariHat() : base() {
		$this.Name               = 'Safari Hat'
		$this.MapObjName         = 'safarihat'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A practical hat for safaris, providing sun protection and camouflage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEForestersCap : BEHelmet {
	BEForestersCap() : base() {
		$this.Name               = 'Forester''s Cap'
		$this.MapObjName         = 'foresterscap'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::Defense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cap for foresters, blending in with nature and providing light protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGardenersHat : BEHelmet {
	BEGardenersHat() : base() {
		$this.Name               = 'Gardener''s Hat'
		$this.MapObjName         = 'gardenershat'
		$this.PurchasePrice      = 30
		$this.SellPrice          = 15
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A wide-brimmed hat for gardeners, protecting from the sun.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFloristsGarland : BEHelmet {
	BEFloristsGarland() : base() {
		$this.Name               = 'Florist''s Garland'
		$this.MapObjName         = 'floristsgarland'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A delicate garland of flowers worn by florists, imbued with subtle nature magic.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEZoologistsHeadband : BEHelmet {
	BEZoologistsHeadband() : base() {
		$this.Name               = 'Zoologist''s Headband'
		$this.MapObjName         = 'zoologistsheadband'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A headband that aids zoologists in understanding animal behavior.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBotanistsCirclet : BEHelmet {
	BEBotanistsCirclet() : base() {
		$this.Name               = 'Botanist''s Circlet'
		$this.MapObjName         = 'botanistscirclet'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A circlet that enhances a botanist''s knowledge of plants and their properties.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGeologistsHardHat : BEHelmet {
	BEGeologistsHardHat() : base() {
		$this.Name               = 'Geologist''s Hard Hat'
		$this.MapObjName         = 'geologistshardhat'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hard hat used by geologists, protecting from falling rocks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAstronomersHood : BEHelmet {
	BEAstronomersHood() : base() {
		$this.Name               = 'Astronomer''s Hood'
		$this.MapObjName         = 'astronomershood'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hood that aids astronomers in observing the night sky.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHistoriansSpectacles : BEHelmet {
	BEHistoriansSpectacles() : base() {
		$this.Name               = 'Historian''s Spectacles'
		$this.MapObjName         = 'historiansspectacles'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Spectacles that aid historians in deciphering ancient texts.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELibrariansEyeshade : BEHelmet {
	BELibrariansEyeshade() : base() {
		$this.Name               = 'Librarian''s Eye-shade'
		$this.MapObjName         = 'librarianseyeshade'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An eye-shade that helps librarians focus on their reading.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECartographersCompassHelm : BEHelmet {
	BECartographersCompassHelm() : base() {
		$this.Name               = 'Cartographer''s Compass Helm'
		$this.MapObjName         = 'cartographerscompasshelm'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm with an integrated compass, aiding cartographers in mapping.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMusiciansHeadband : BEHelmet {
	BEMusiciansHeadband() : base() {
		$this.Name               = 'Musician''s Headband'
		$this.MapObjName         = 'musiciansheadband'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A headband that helps musicians maintain rhythm and harmony.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPoetsLaurelWreath : BEHelmet {
	BEPoetsLaurelWreath() : base() {
		$this.Name               = 'Poet''s Laurel Wreath'
		$this.MapObjName         = 'poetslaurelwreath'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A laurel wreath worn by poets, inspiring eloquence.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWritersQuillCap : BEHelmet {
	BEWritersQuillCap() : base() {
		$this.Name               = 'Writer''s Quill Cap'
		$this.MapObjName         = 'writersquillcap'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cap with a quill, aiding writers in their craft.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOratorsHeadpiece : BEHelmet {
	BEOratorsHeadpiece() : base() {
		$this.Name               = 'Orator''s Headpiece'
		$this.MapObjName         = 'oratorsheadpiece'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A stately headpiece worn by orators, enhancing their persuasive abilities.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDiplomatsHat : BEHelmet {
	BEDiplomatsHat() : base() {
		$this.Name               = 'Diplomat''s Hat'
		$this.MapObjName         = 'diplomatshat'
		$this.PurchasePrice      = 140
		$this.SellPrice          = 70
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A refined hat worn by diplomats, conveying respect and authority.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENegotiatorsHeadband : BEHelmet {
	BENegotiatorsHeadband() : base() {
		$this.Name               = 'Negotiator''s Headband'
		$this.MapObjName         = 'negotiatorsheadband'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A headband that aids negotiators in finding common ground.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpysDisguiseHat : BEHelmet {
	BESpysDisguiseHat() : base() {
		$this.Name               = 'Spy''s Disguise Hat'
		$this.MapObjName         = 'spysdisguisehat'
		$this.PurchasePrice      = 40
		$this.SellPrice          = 20
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple hat used by spies to blend into crowds.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInfiltratorsMask : BEHelmet {
	BEInfiltratorsMask() : base() {
		$this.Name               = 'Infiltrator''s Mask'
		$this.MapObjName         = 'infiltratorsmask'
		$this.PurchasePrice      = 160
		$this.SellPrice          = 80
		$this.TargetStats        = @{
			[StatId]::Defense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark mask worn by infiltrators, aiding in covert operations.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESentrysHelmet : BEHelmet {
	BESentrysHelmet() : base() {
		$this.Name               = 'Sentry''s Helmet'
		$this.MapObjName         = 'sentryshelmet'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::Defense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A standard helmet for sentries, providing reliable protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBodyguardsHelm : BEHelmet {
	BEBodyguardsHelm() : base() {
		$this.Name               = 'Bodyguard''s Helm'
		$this.MapObjName         = 'bodyguardshelm'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy helm for bodyguards, ensuring the protection of their charge.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEExecutionersHood : BEHelmet {
	BEExecutionersHood() : base() {
		$this.Name               = 'Executioner''s Hood'
		$this.MapObjName         = 'executionershood'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A grim hood worn by executioners, concealing their identity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEJailersHelmet : BEHelmet {
	BEJailersHelmet() : base() {
		$this.Name               = 'Jailer''s Helmet'
		$this.MapObjName         = 'jailershelmet'
		$this.PurchasePrice      = 190
		$this.SellPrice          = 95
		$this.TargetStats        = @{
			[StatId]::Defense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy helmet for jailers, protecting them from inmates.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEJudgesWig : BEHelmet {
	BEJudgesWig() : base() {
		$this.Name               = 'Judge''s Wig'
		$this.MapObjName         = 'judgeswig'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A formal wig worn by judges, symbolizing justice and authority.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELawyersHeadband : BEHelmet {
	BELawyersHeadband() : base() {
		$this.Name               = 'Lawyer''s Headband'
		$this.MapObjName         = 'lawyersheadband'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A modest headband for lawyers, aiding in quick thinking.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDoctorsHeadMirror : BEHelmet {
	BEDoctorsHeadMirror() : base() {
		$this.Name               = 'Doctor''s Head Mirror'
		$this.MapObjName         = 'doctorsheadmirror'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A reflective mirror worn by doctors, aiding in examinations.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENursesCap : BEHelmet {
	BENursesCap() : base() {
		$this.Name               = 'Nurse''s Cap'
		$this.MapObjName         = 'nursescap'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple cap worn by nurses, symbolizing care and dedication.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEPatientsHeadwrap : BEHelmet {
	BEPatientsHeadwrap() : base() {
		$this.Name               = 'Patient''s Headwrap'
		$this.MapObjName         = 'patientsheadwrap'
		$this.PurchasePrice      = 20
		$this.SellPrice          = 10
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A soft headwrap for patients, offering comfort.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEApothecarysGoggles : BEHelmet {
	BEApothecarysGoggles() : base() {
		$this.Name               = 'Apothecary''s Goggles'
		$this.MapObjName         = 'apothecarysgoggles'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Protective goggles worn by apothecaries, for handling volatile concoctions.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEUndertakersTopHat : BEHelmet {
	BEUndertakersTopHat() : base() {
		$this.Name               = 'Undertaker''s Top Hat'
		$this.MapObjName         = 'undertakerstophat'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A solemn top hat worn by undertakers, reflecting their profession.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGravekeepersLanternHelm : BEHelmet {
	BEGravekeepersLanternHelm() : base() {
		$this.Name               = 'Gravekeeper''s Lantern Helm'
		$this.MapObjName         = 'gravekeeperslanternhelm'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm with an integrated lantern, aiding gravekeepers at night.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFuneralDirectorsBowlerHat : BEHelmet {
	BEFuneralDirectorsBowlerHat() : base() {
		$this.Name               = 'Funeral Director''s Bowler Hat'
		$this.MapObjName         = 'funeraldirectorsbowlerhat'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A formal bowler hat worn by funeral directors, conveying professionalism.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMournersVeil : BEHelmet {
	BEMournersVeil() : base() {
		$this.Name               = 'Mourner''s Veil'
		$this.MapObjName         = 'mournersveil'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark veil worn by mourners, symbolizing grief.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESpiritMediumsHeadband : BEHelmet {
	BESpiritMediumsHeadband() : base() {
		$this.Name               = 'Spirit Medium''s Headband'
		$this.MapObjName         = 'spiritmediumsheadband'
		$this.PurchasePrice      = 160
		$this.SellPrice          = 80
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A headband that aids spirit mediums in communicating with the deceased.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEExorcistsHeadpiece : BEHelmet {
	BEExorcistsHeadpiece() : base() {
		$this.Name               = 'Exorcist''s Headpiece'
		$this.MapObjName         = 'exorcistsheadpiece'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A holy headpiece worn by exorcists, warding off demonic influence.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInquisitorsBlindfold : BEHelmet {
	BEInquisitorsBlindfold() : base() {
		$this.Name               = 'Inquisitor''s Blindfold'
		$this.MapObjName         = 'inquisitorsblindfold'
		$this.PurchasePrice      = 170
		$this.SellPrice          = 85
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A blindfold worn by certain inquisitors, allowing them to focus on inner vision.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZealotsHeadwrap : BEHelmet {
	BEZealotsHeadwrap() : base() {
		$this.Name               = 'Zealot''s Headwrap'
		$this.MapObjName         = 'zealotsheadwrap'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple headwrap worn by zealots, signifying their fervent devotion.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFanaticsMask : BEHelmet {
	BEFanaticsMask() : base() {
		$this.Name               = 'Fanatic''s Mask'
		$this.MapObjName         = 'fanaticsmask'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A terrifying mask worn by fanatics, inspiring fear and unwavering loyalty.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHereticsMarkHeadband : BEHelmet {
	BEHereticsMarkHeadband() : base() {
		$this.Name               = 'Heretic''s Mark Headband'
		$this.MapObjName         = 'hereticsmarkheadband'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cursed headband that marks the wearer as a heretic.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEApostatesHood : BEHelmet {
	BEApostatesHood() : base() {
		$this.Name               = 'Apostate''s Hood'
		$this.MapObjName         = 'apostateshood'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark hood worn by apostates, symbolizing their rejection of faith.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESacrificesShroud : BEHelmet {
	BESacrificesShroud() : base() {
		$this.Name               = 'Sacrifice''s Shroud'
		$this.MapObjName         = 'sacrificesshroud'
		$this.PurchasePrice      = 10
		$this.SellPrice          = 5
		$this.TargetStats        = @{
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple shroud for ritual sacrifices, offering no protection.'
		$this.PlayerEffectString = ""
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERitualistsMask : BEHelmet {
	BERitualistsMask() : base() {
		$this.Name               = 'Ritualist''s Mask'
		$this.MapObjName         = 'ritualistsmask'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ceremonial mask worn by ritualists, enhancing their arcane ceremonies.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivinationOrbHelm : BEHelmet {
	BEDivinationOrbHelm() : base() {
		$this.Name               = 'Divination Orb Helm'
		$this.MapObjName         = 'divinationorbhelm'
		$this.PurchasePrice      = 220
		$this.SellPrice          = 110
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm with a scrying orb, aiding in divination.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESeersEyepatch : BEHelmet {
	BESeersEyepatch() : base() {
		$this.Name               = 'Seer''s Eyepatch'
		$this.MapObjName         = 'seerseyepatch'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An eyepatch worn by seers, sometimes to focus their prophetic visions.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMysticsHeadband : BEHelmet {
	BEMysticsHeadband() : base() {
		$this.Name               = 'Mystic''s Headband'
		$this.MapObjName         = 'mysticsheadband'
		$this.PurchasePrice      = 140
		$this.SellPrice          = 70
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple headband worn by mystics, aiding in meditation and enlightenment.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEnlightenedOnesCrown : BEHelmet {
	BEEnlightenedOnesCrown() : base() {
		$this.Name               = 'Enlightened One''s Crown'
		$this.MapObjName         = 'enlightenedonescrown'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown worn by those who have achieved enlightenment, radiating inner peace.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAscendantsHalo : BEHelmet {
	BEAscendantsHalo() : base() {
		$this.Name               = 'Ascendant''s Halo'
		$this.MapObjName         = 'ascendantshalo'
		$this.PurchasePrice      = 2800
		$this.SellPrice          = 1400
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A halo that signifies ascension to a higher plane of existence.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENirvanaHelm : BEHelmet {
	BENirvanaHelm() : base() {
		$this.Name               = 'Nirvana Helm'
		$this.MapObjName         = 'nirvanahelm'
		$this.PurchasePrice      = 3000
		$this.SellPrice          = 1500
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that grants the wearer a state of ultimate peace and detachment.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESagesCircletofAges : BEHelmet {
	BESagesCircletofAges() : base() {
		$this.Name               = 'Sage''s Circlet of Ages'
		$this.MapObjName         = 'sagescircletofages'
		$this.PurchasePrice      = 3200
		$this.SellPrice          = 1600
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A circlet that grants access to the wisdom of all ages.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEProphetsCrownofForetelling : BEHelmet {
	BEProphetsCrownofForetelling() : base() {
		$this.Name               = 'Prophet''s Crown of Foretelling'
		$this.MapObjName         = 'prophetscrownofforetelling'
		$this.PurchasePrice      = 3500
		$this.SellPrice          = 1750
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown that grants glimpses of future events, both good and ill.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOraclesDivineSightOrb : BEHelmet {
	BEOraclesDivineSightOrb() : base() {
		$this.Name               = 'Oracle''s Divine Sight Orb'
		$this.MapObjName         = 'oraclesdivinesightorb'
		$this.PurchasePrice      = 3800
		$this.SellPrice          = 1900
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An orb integrated into a helm, granting omniscient vision.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECosmicWanderersHood : BEHelmet {
	BECosmicWanderersHood() : base() {
		$this.Name               = 'Cosmic Wanderer''s Hood'
		$this.MapObjName         = 'cosmicwanderershood'
		$this.PurchasePrice      = 4000
		$this.SellPrice          = 2000
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A hood that aids wanderers across the cosmos, protecting them from stellar energies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarlightHelm : BEHelmet {
	BEStarlightHelm() : base() {
		$this.Name               = 'Starlight Helm'
		$this.MapObjName         = 'starlighthelm'
		$this.PurchasePrice      = 4200
		$this.SellPrice          = 2100
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that gathers starlight, empowering the wearer with celestial energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENebulaVeil : BEHelmet {
	BENebulaVeil() : base() {
		$this.Name               = 'Nebula Veil'
		$this.MapObjName         = 'nebulaveil'
		$this.PurchasePrice      = 4500
		$this.SellPrice          = 2250
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A veil that shimmers with the colors of a nebula, concealing the wearer''s true form.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESolarFlareDiadem : BEHelmet {
	BESolarFlareDiadem() : base() {
		$this.Name               = 'Solar Flare Diadem'
		$this.MapObjName         = 'solarflarediadem'
		$this.PurchasePrice      = 4800
		$this.SellPrice          = 2400
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A diadem that radiates solar energy, providing protection and offensive power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BELunarEmbraceTiara : BEHelmet {
	BELunarEmbraceTiara() : base() {
		$this.Name               = 'Lunar Embrace Tiara'
		$this.MapObjName         = 'lunarembracetiara'
		$this.PurchasePrice      = 4700
		$this.SellPrice          = 2350
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 37
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiara that glows with moonlight, enhancing nocturnal abilities and grace.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGalacticCoreHelm : BEHelmet {
	BEGalacticCoreHelm() : base() {
		$this.Name               = 'Galactic Core Helm'
		$this.MapObjName         = 'galacticcorehelm'
		$this.PurchasePrice      = 5000
		$this.SellPrice          = 2500
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm infused with the power of a galactic core, granting immense cosmic power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEUniverseShardHelm : BEHelmet {
	BEUniverseShardHelm() : base() {
		$this.Name               = 'Universe Shard Helm'
		$this.MapObjName         = 'universeshardhelm'
		$this.PurchasePrice      = 5500
		$this.SellPrice          = 2750
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm made from fragments of the universe itself, granting unimaginable power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERealityAnchorHelm : BEHelmet {
	BERealityAnchorHelm() : base() {
		$this.Name               = 'Reality Anchor Helm'
		$this.MapObjName         = 'realityanchorhelm'
		$this.PurchasePrice      = 6000
		$this.SellPrice          = 3000
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that anchors the wearer to reality, preventing temporal or dimensional displacement.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamWeaversTiara : BEHelmet {
	BEDreamWeaversTiara() : base() {
		$this.Name               = 'Dream Weaver''s Tiara'
		$this.MapObjName         = 'dreamweaverstiara'
		$this.PurchasePrice      = 6500
		$this.SellPrice          = 3250
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tiara that allows the wearer to weave dreams into reality.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BENightmareKingsCrown : BEHelmet {
	BENightmareKingsCrown() : base() {
		$this.Name               = 'Nightmare King''s Crown'
		$this.MapObjName         = 'nightmarekingscrown'
		$this.PurchasePrice      = 7000
		$this.SellPrice          = 3500
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown that harnesses nightmares, turning them into tangible fear for enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEternalSlumberHelm : BEHelmet {
	BEEternalSlumberHelm() : base() {
		$this.Name               = 'Eternal Slumber Helm'
		$this.MapObjName         = 'eternalslumberhelm'
		$this.PurchasePrice      = 7500
		$this.SellPrice          = 3750
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 65
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that puts enemies into an eternal slumber, rendering them harmless.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidGazersCrown : BEHelmet {
	BEVoidGazersCrown() : base() {
		$this.Name               = 'Void Gazer''s Crown'
		$this.MapObjName         = 'voidgazerscrown'
		$this.PurchasePrice      = 8000
		$this.SellPrice          = 4000
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 70
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown that allows deep gazes into the void, granting forbidden knowledge.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChaosLordsHelm : BEHelmet {
	BEChaosLordsHelm() : base() {
		$this.Name               = 'Chaos Lord''s Helm'
		$this.MapObjName         = 'chaoslordshelm'
		$this.PurchasePrice      = 8500
		$this.SellPrice          = 4250
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 75
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm of pure chaos, granting unpredictable and devastating power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEOrderKeepersHelm : BEHelmet {
	BEOrderKeepersHelm() : base() {
		$this.Name               = 'Order Keeper''s Helm'
		$this.MapObjName         = 'orderkeepershelm'
		$this.PurchasePrice      = 9000
		$this.SellPrice          = 4500
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 80
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that imposes order on chaos, suppressing unruly energies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBalanceKeepersHelm : BEHelmet {
	BEBalanceKeepersHelm() : base() {
		$this.Name               = 'Balance Keeper''s Helm'
		$this.MapObjName         = 'balancekeepershelm'
		$this.PurchasePrice      = 9500
		$this.SellPrice          = 4750
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 85
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that maintains the balance between light and darkness, good and evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETruthSeekersHelm : BEHelmet {
	BETruthSeekersHelm() : base() {
		$this.Name               = 'Truth Seeker''s Helm'
		$this.MapObjName         = 'truthseekershelm'
		$this.PurchasePrice      = 10000
		$this.SellPrice          = 5000
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 90
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that reveals the truth, cutting through illusions and lies.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKnowledgeBringersCrown : BEHelmet {
	BEKnowledgeBringersCrown() : base() {
		$this.Name               = 'Knowledge Bringer''s Crown'
		$this.MapObjName         = 'knowledgebringerscrown'
		$this.PurchasePrice      = 10500
		$this.SellPrice          = 5250
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 95
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown that bestows immense knowledge upon the wearer.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWisdomGiversHelm : BEHelmet {
	BEWisdomGiversHelm() : base() {
		$this.Name               = 'Wisdom Giver''s Helm'
		$this.MapObjName         = 'wisdomgivershelm'
		$this.PurchasePrice      = 11000
		$this.SellPrice          = 5500
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 100
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that grants profound wisdom, allowing the wearer to see beyond.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDestructionHelm : BEHelmet {
	BEDestructionHelm() : base() {
		$this.Name               = 'Destruction Helm'
		$this.MapObjName         = 'destructionhelm'
		$this.PurchasePrice      = 12000
		$this.SellPrice          = 6000
		$this.TargetStats        = @{
			[StatId]::Defense = 100
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that embodies pure destruction, increasing offensive power exponentially.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECreationHelm : BEHelmet {
	BECreationHelm() : base() {
		$this.Name               = 'Creation Helm'
		$this.MapObjName         = 'creationhelm'
		$this.PurchasePrice      = 12000
		$this.SellPrice          = 6000
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 100
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that embodies pure creation, allowing for the manifestation of wonders.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BELifeBringersCirclet : BEHelmet {
	BELifeBringersCirclet() : base() {
		$this.Name               = 'Life Bringer''s Circlet'
		$this.MapObjName         = 'lifebringerscirclet'
		$this.PurchasePrice      = 11500
		$this.SellPrice          = 5750
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 98
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A circlet that radiates life energy, healing all around the wearer.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDeathGiversHelm : BEHelmet {
	BEDeathGiversHelm() : base() {
		$this.Name               = 'Death Giver''s Helm'
		$this.MapObjName         = 'deathgivershelm'
		$this.PurchasePrice      = 11500
		$this.SellPrice          = 5750
		$this.TargetStats        = @{
			[StatId]::Defense = 98
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that radiates death energy, bringing ruin to enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BELightsBeaconHelm : BEHelmet {
	BELightsBeaconHelm() : base() {
		$this.Name               = 'Light''s Beacon Helm'
		$this.MapObjName         = 'lightsbeaconhelm'
		$this.PurchasePrice      = 13000
		$this.SellPrice          = 6500
		$this.TargetStats        = @{
			[StatId]::MagicDefense = 105
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that acts as a beacon of pure light, dispelling all darkness.'
		$this.PlayerEffectString = "  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowsEmbraceHelm : BEHelmet {
	BEShadowsEmbraceHelm() : base() {
		$this.Name               = 'Shadow''s Embrace Helm'
		$this.MapObjName         = 'shadowsembracehelm'
		$this.PurchasePrice      = 13000
		$this.SellPrice          = 6500
		$this.TargetStats        = @{
			[StatId]::Defense = 105
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that embodies pure shadow, allowing the wearer to command darkness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEElementalLordsCrown : BEHelmet {
	BEElementalLordsCrown() : base() {
		$this.Name               = 'Elemental Lord''s Crown'
		$this.MapObjName         = 'elementallordscrown'
		$this.PurchasePrice      = 14000
		$this.SellPrice          = 7000
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crown that grants mastery over all four classical elements.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETimeLordsHelm : BEHelmet {
	BETimeLordsHelm() : base() {
		$this.Name               = 'Time Lord''s Helm'
		$this.MapObjName         = 'timelordshelm'
		$this.PurchasePrice      = 15000
		$this.SellPrice          = 7500
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 75
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that grants absolute control over time itself, allowing reality rewriting.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpaceLordsHelm : BEHelmet {
	BESpaceLordsHelm() : base() {
		$this.Name               = 'Space Lord''s Helm'
		$this.MapObjName         = 'spacelordshelm'
		$this.PurchasePrice      = 15000
		$this.SellPrice          = 7500
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 75
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that grants absolute control over space, allowing teleportation and reality warping.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECosmicLordsHelm : BEHelmet {
	BECosmicLordsHelm() : base() {
		$this.Name               = 'Cosmic Lord''s Helm'
		$this.MapObjName         = 'cosmiclordshelm'
		$this.PurchasePrice      = 20000
		$this.SellPrice          = 10000
		$this.TargetStats        = @{
			[StatId]::Defense = 100
			[StatId]::MagicDefense = 100
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A helm that grants dominion over both time and space, truly omnipotent.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

#endregion





#region Armors

Class BECottonTunic : BEArmor {
	BECottonTunic() : base() {
		$this.Name               = 'Cotton Tunic'
		$this.MapObjName         = 'cottontunic'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{ [StatId]::MagicDefense = 5 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple tunic made of soft cotton, comfortable for everyday wear.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELeatherVest : BEArmor {
	BELeatherVest() : base() {
		$this.Name               = 'Leather Vest'
		$this.MapObjName         = 'leathervest'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{ [StatId]::Defense = 2 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A basic leather vest offering minimal protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPaddedShirt : BEArmor {
	BEPaddedShirt() : base() {
		$this.Name               = 'Padded Shirt'
		$this.MapObjName         = 'paddedshirt'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{  }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A quilted shirt providing light defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELinenRobe : BEArmor {
	BELinenRobe() : base() {
		$this.Name               = 'Linen Robe'
		$this.MapObjName         = 'linenrobe'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{ [StatId]::MagicDefense = 10 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A loose-fitting robe suitable for mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStuddedLeatherArmor : BEArmor {
	BEStuddedLeatherArmor() : base() {
		$this.Name               = 'Studded Leather Armor'
		$this.MapObjName         = 'studdedleatherarmor'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{ [StatId]::Defense = 5 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Leather armor reinforced with metal studs.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChainmailVest : BEArmor {
	BEChainmailVest() : base() {
		$this.Name               = 'Chainmail Vest'
		$this.MapObjName         = 'chainmailvest'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{ [StatId]::Defense = 8 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest made of interlocking metal rings.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIronBreastplate : BEArmor {
	BEIronBreastplate() : base() {
		$this.Name               = 'Iron Breastplate'
		$this.MapObjName         = 'ironbreastplate'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{ [StatId]::Defense = 12 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A solid iron plate protecting the chest.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESilkRobe : BEArmor {
	BESilkRobe() : base() {
		$this.Name               = 'Silk Robe'
		$this.MapObjName         = 'silkrobe'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{ [StatId]::MagicDefense = 15 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A luxurious robe woven from fine silk, enhancing magical prowess.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBronzeCuirass : BEArmor {
	BEBronzeCuirass() : base() {
		$this.Name               = 'Bronze Cuirass'
		$this.MapObjName         = 'bronzecuirass'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{ [StatId]::Defense = 15 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy chest piece crafted from bronze.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMithrilChainmail : BEArmor {
	BEMithrilChainmail() : base() {
		$this.Name               = 'Mithril Chainmail'
		$this.MapObjName         = 'mithrilchainmail'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{ [StatId]::Defense = 10; [StatId]::MagicDefense = 5 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Lightweight yet incredibly strong chainmail.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESteelPlateArmor : BEArmor {
	BESteelPlateArmor() : base() {
		$this.Name               = 'Steel Plate Armor'
		$this.MapObjName         = 'steelplatearmor'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{ [StatId]::Defense = 20 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy and reliable steel plate armor.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEnchantedRobe : BEArmor {
	BEEnchantedRobe() : base() {
		$this.Name               = 'Enchanted Robe'
		$this.MapObjName         = 'enchantedrobe'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{ [StatId]::MagicDefense = 20 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe imbued with minor magical properties.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonhideVest : BEArmor {
	BEDragonhideVest() : base() {
		$this.Name               = 'Dragonhide Vest'
		$this.MapObjName         = 'dragonhidevest'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{ [StatId]::Defense = 18 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest crafted from the tough hide of a dragon.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKnightsCuirass : BEArmor {
	BEKnightsCuirass() : base() {
		$this.Name               = 'Knight''s Cuirass'
		$this.MapObjName         = 'knightscuirass'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{ [StatId]::Defense = 25 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'The polished chest plate of a valiant knight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMysticRobe : BEArmor {
	BEMysticRobe() : base() {
		$this.Name               = 'Mystic Robe'
		$this.MapObjName         = 'mysticrobe'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{ [StatId]::MagicDefense = 25 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe pulsating with arcane energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAdamantitePlate : BEArmor {
	BEAdamantitePlate() : base() {
		$this.Name               = 'Adamantite Plate'
		$this.MapObjName         = 'adamantiteplate'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{ [StatId]::Defense = 30 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Extremely durable armor forged from adamantite.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECelestialTunic : BEArmor {
	BECelestialTunic() : base() {
		$this.Name               = 'Celestial Tunic'
		$this.MapObjName         = 'celestialtunic'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{ [StatId]::MagicDefense = 8 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tunic said to be woven from starlight, offering slight protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETravelersShirt : BEArmor {
	BETravelersShirt() : base() {
		$this.Name               = 'Traveler''s Shirt'
		$this.MapObjName         = 'travelersshirt'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{ [StatId]::Defense = 1 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A comfortable and durable shirt for long journeys.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFishermansVest : BEArmor {
	BEFishermansVest() : base() {
		$this.Name               = 'Fisherman''s Vest'
		$this.MapObjName         = 'fishermansvest'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{ [StatId]::Defense = 2 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A practical vest with many pockets, surprisingly resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWoolenTunic : BEArmor {
	BEWoolenTunic() : base() {
		$this.Name               = 'Woolen Tunic'
		$this.MapObjName         = 'woolentunic'
		$this.PurchasePrice      = 60
		$this.SellPrice          = 30
		$this.TargetStats        = @{  }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A warm tunic, ideal for colder climates.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELeatherJacket : BEArmor {
	BELeatherJacket() : base() {
		$this.Name               = 'Leather Jacket'
		$this.MapObjName         = 'leatherjacket'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{ [StatId]::Defense = 4 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A stylish leather jacket offering modest defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBrigandineVest : BEArmor {
	BEBrigandineVest() : base() {
		$this.Name               = 'Brigandine Vest'
		$this.MapObjName         = 'brigandinevest'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{ [StatId]::Defense = 7 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest made of small metal plates riveted to cloth or leather.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEScaleMail : BEArmor {
	BEScaleMail() : base() {
		$this.Name               = 'Scale Mail'
		$this.MapObjName         = 'scalemail'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{ [StatId]::Defense = 10 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Armor made from overlapping scales of metal or hardened leather.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDarkRobe : BEArmor {
	BEDarkRobe() : base() {
		$this.Name               = 'Dark Robe'
		$this.MapObjName         = 'darkrobe'
		$this.PurchasePrice      = 380
		$this.SellPrice          = 190
		$this.TargetStats        = @{ [StatId]::MagicDefense = 18 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A foreboding robe, favored by shadow mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGuardiansBreastplate : BEArmor {
	BEGuardiansBreastplate() : base() {
		$this.Name               = 'Guardian''s Breastplate'
		$this.MapObjName         = 'guardiansbreastplate'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{ [StatId]::Defense = 18 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy breastplate designed for protectors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEElvenChainmail : BEArmor {
	BEElvenChainmail() : base() {
		$this.Name               = 'Elven Chainmail'
		$this.MapObjName         = 'elvenchainmail'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{ [StatId]::Defense = 12; [StatId]::MagicDefense = 7 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Delicately crafted chainmail, light and resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPaladinsCuirass : BEArmor {
	BEPaladinsCuirass() : base() {
		$this.Name               = 'Paladin''s Cuirass'
		$this.MapObjName         = 'paladinscuirass'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{ [StatId]::Defense = 22; [StatId]::MagicDefense = 5 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A blessed cuirass, offering both defense and spiritual resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESorcerersRobe : BEArmor {
	BESorcerersRobe() : base() {
		$this.Name               = 'Sorcerer''s Robe'
		$this.MapObjName         = 'sorcerersrobe'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{ [StatId]::MagicDefense = 22 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe designed to amplify magical incantations.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDwarvenPlate : BEArmor {
	BEDwarvenPlate() : base() {
		$this.Name               = 'Dwarven Plate'
		$this.MapObjName         = 'dwarvenplate'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{ [StatId]::Defense = 28 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy and robust plate armor, masterfully forged.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhoenixRobe : BEArmor {
	BEPhoenixRobe() : base() {
		$this.Name               = 'Phoenix Robe'
		$this.MapObjName         = 'phoenixrobe'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{ [StatId]::MagicDefense = 30 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vibrant robe said to grant its wearer renewed vigor.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHerosPlate : BEArmor {
	BEHerosPlate() : base() {
		$this.Name               = 'Hero''s Plate'
		$this.MapObjName         = 'herosplate'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{ [StatId]::Defense = 35 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'The legendary plate armor of a true hero.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESimpleDress : BEArmor {
	BESimpleDress() : base() {
		$this.Name               = 'Simple Dress'
		$this.MapObjName         = 'simpledress'
		$this.PurchasePrice      = 60
		$this.SellPrice          = 30
		$this.TargetStats        = @{ [StatId]::MagicDefense = 3 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A basic dress, comfortable for daily wear.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMaidensBlouse : BEArmor {
	BEMaidensBlouse() : base() {
		$this.Name               = 'Maiden''s Blouse'
		$this.MapObjName         = 'maidensblouse'
		$this.PurchasePrice      = 75
		$this.SellPrice          = 38
		$this.TargetStats        = @{ [StatId]::MagicDefense = 2 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A delicate blouse often worn by young women.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEChefsApron : BEArmor {
	BEChefsApron() : base() {
		$this.Name               = 'Chef''s Apron'
		$this.MapObjName         = 'chefsapron'
		$this.PurchasePrice      = 85
		$this.SellPrice          = 42
		$this.TargetStats        = @{ [StatId]::Defense = 1 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A surprisingly durable apron, good for resisting minor damage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMerchantsVest : BEArmor {
	BEMerchantsVest() : base() {
		$this.Name               = 'Merchant''s Vest'
		$this.MapObjName         = 'merchantsvest'
		$this.PurchasePrice      = 95
		$this.SellPrice          = 48
		$this.TargetStats        = @{  }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple vest with hidden pockets, provides little defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEApprenticesRobe : BEArmor {
	BEApprenticesRobe() : base() {
		$this.Name               = 'Apprentice''s Robe'
		$this.MapObjName         = 'apprenticesrobe'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{ [StatId]::MagicDefense = 12 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A plain robe worn by aspiring mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHuntersTunic : BEArmor {
	BEHuntersTunic() : base() {
		$this.Name               = 'Hunter''s Tunic'
		$this.MapObjName         = 'hunterstunic'
		$this.PurchasePrice      = 160
		$this.SellPrice          = 80
		$this.TargetStats        = @{ [StatId]::Defense = 3 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rugged tunic, ideal for tracking and stealth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEReinforcedLeather : BEArmor {
	BEReinforcedLeather() : base() {
		$this.Name               = 'Reinforced Leather'
		$this.MapObjName         = 'reinforcedleather'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{ [StatId]::Defense = 6 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Leather armor with additional plating for better defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBanditsJerkin : BEArmor {
	BEBanditsJerkin() : base() {
		$this.Name               = 'Bandit''s Jerkin'
		$this.MapObjName         = 'banditsjerkin'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{ [StatId]::Defense = 5 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A patched-up jerkin, good for mobility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMagesTunic : BEArmor {
	BEMagesTunic() : base() {
		$this.Name               = 'Mage''s Tunic'
		$this.MapObjName         = 'magestunic'
		$this.PurchasePrice      = 220
		$this.SellPrice          = 110
		$this.TargetStats        = @{ [StatId]::MagicDefense = 14 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A comfortable tunic that aids in spellcasting.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGothicPlate : BEArmor {
	BEGothicPlate() : base() {
		$this.Name               = 'Gothic Plate'
		$this.MapObjName         = 'gothicplate'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{ [StatId]::Defense = 20 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Dark, imposing plate armor with sharp edges.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAcolytesRobe : BEArmor {
	BEAcolytesRobe() : base() {
		$this.Name               = 'Acolyte''s Robe'
		$this.MapObjName         = 'acolytesrobe'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{ [StatId]::MagicDefense = 18 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A solemn robe worn by those devoted to ancient deities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrusadersBreastplate : BEArmor {
	BECrusadersBreastplate() : base() {
		$this.Name               = 'Crusader''s Breastplate'
		$this.MapObjName         = 'crusadersbreastplate'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{ [StatId]::Defense = 23; [StatId]::MagicDefense = 3 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A holy breastplate, blessed against evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERoyalGown : BEArmor {
	BERoyalGown() : base() {
		$this.Name               = 'Royal Gown'
		$this.MapObjName         = 'royalgown'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{ [StatId]::MagicDefense = 5 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An elegant gown, offering prestige more than protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWarriorsTunic : BEArmor {
	BEWarriorsTunic() : base() {
		$this.Name               = 'Warrior''s Tunic'
		$this.MapObjName         = 'warriorstunic'
		$this.PurchasePrice      = 190
		$this.SellPrice          = 95
		$this.TargetStats        = @{ [StatId]::Defense = 4 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy tunic designed for frontline combatants.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThiefsVest : BEArmor {
	BEThiefsVest() : base() {
		$this.Name               = 'Thief''s Vest'
		$this.MapObjName         = 'thiefsvest'
		$this.PurchasePrice      = 210
		$this.SellPrice          = 105
		$this.TargetStats        = @{ [StatId]::Defense = 3 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A lightweight vest designed for agility and concealment.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEClericsVestments : BEArmor {
	BEClericsVestments() : base() {
		$this.Name               = 'Cleric''s Vestments'
		$this.MapObjName         = 'clericsvestments'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{ [StatId]::MagicDefense = 16 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blessed vestments providing spiritual protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGladiatorsHarness : BEArmor {
	BEGladiatorsHarness() : base() {
		$this.Name               = 'Gladiator''s Harness'
		$this.MapObjName         = 'gladiatorsharness'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{ [StatId]::Defense = 13 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A minimal but tough harness designed for arena combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESamuraiArmor : BEArmor {
	BESamuraiArmor() : base() {
		$this.Name               = 'Samurai Armor'
		$this.MapObjName         = 'samuraiarmor'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{ [StatId]::Defense = 20 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Intricate and strong armor, balanced for offense and defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENinjaGarb : BEArmor {
	BENinjaGarb() : base() {
		$this.Name               = 'Ninja Garb'
		$this.MapObjName         = 'ninjagarb'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{ [StatId]::Defense = 15; [StatId]::MagicDefense = 5 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Dark, flexible clothing for stealth and swift movement.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVestoftheWild : BEArmor {
	BEVestoftheWild() : base() {
		$this.Name               = 'Vest of the Wild'
		$this.MapObjName         = 'vestofthewild'
		$this.PurchasePrice      = 230
		$this.SellPrice          = 115
		$this.TargetStats        = @{ [StatId]::Defense = 4 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest made from beast hides, ideal for wilderness survival.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECourtWizardsRobe : BEArmor {
	BECourtWizardsRobe() : base() {
		$this.Name               = 'Court Wizard''s Robe'
		$this.MapObjName         = 'courtwizardsrobe'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{ [StatId]::MagicDefense = 23 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A finely embroidered robe, befitting a royal mage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHeavyLeatherArmor : BEArmor {
	BEHeavyLeatherArmor() : base() {
		$this.Name               = 'Heavy Leather Armor'
		$this.MapObjName         = 'heavyleatherarmor'
		$this.PurchasePrice      = 320
		$this.SellPrice          = 160
		$this.TargetStats        = @{ [StatId]::Defense = 7 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Thick layers of leather for enhanced defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESilverChainmail : BEArmor {
	BESilverChainmail() : base() {
		$this.Name               = 'Silver Chainmail'
		$this.MapObjName         = 'silverchainmail'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{ [StatId]::Defense = 10; [StatId]::MagicDefense = 3 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Chainmail woven with strands of silver, effective against dark creatures.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGoldenCuirass : BEArmor {
	BEGoldenCuirass() : base() {
		$this.Name               = 'Golden Cuirass'
		$this.MapObjName         = 'goldencuirass'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{ [StatId]::Defense = 16; [StatId]::MagicDefense = 2 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A polished gold-plated cuirass, more for show than defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiritRobe : BEArmor {
	BESpiritRobe() : base() {
		$this.Name               = 'Spirit Robe'
		$this.MapObjName         = 'spiritrobe'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{ [StatId]::MagicDefense = 28 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A translucent robe that shimmers with ethereal energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEObsidianPlate : BEArmor {
	BEObsidianPlate() : base() {
		$this.Name               = 'Obsidian Plate'
		$this.MapObjName         = 'obsidianplate'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{ [StatId]::Defense = 28 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Armor crafted from solidified volcanic glass, very strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESagesRobe : BEArmor {
	BESagesRobe() : base() {
		$this.Name               = 'Sage''s Robe'
		$this.MapObjName         = 'sagesrobe'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{ [StatId]::MagicDefense = 32 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple yet powerful robe, worn by wise mystics.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBattleWornTunic : BEArmor {
	BEBattleWornTunic() : base() {
		$this.Name               = 'Battle-Worn Tunic'
		$this.MapObjName         = 'battle-worntunic'
		$this.PurchasePrice      = 40
		$this.SellPrice          = 20
		$this.TargetStats        = @{ [StatId]::Defense = 1 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A torn but resilient tunic, seen many skirmishes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFarmersSmock : BEArmor {
	BEFarmersSmock() : base() {
		$this.Name               = 'Farmer''s Smock'
		$this.MapObjName         = 'farmerssmock'
		$this.PurchasePrice      = 30
		$this.SellPrice          = 15
		$this.TargetStats        = @{  }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rough smock, offering almost no protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERangersVest : BEArmor {
	BERangersVest() : base() {
		$this.Name               = 'Ranger''s Vest'
		$this.MapObjName         = 'rangersvest'
		$this.PurchasePrice      = 170
		$this.SellPrice          = 85
		$this.TargetStats        = @{ [StatId]::Defense = 3 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A practical vest with many pockets, good for outdoor life.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEScholarsRobe : BEArmor {
	BEScholarsRobe() : base() {
		$this.Name               = 'Scholar''s Robe'
		$this.MapObjName         = 'scholarsrobe'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{ [StatId]::MagicDefense = 13 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A comfortable robe for long hours of study.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHardLeatherVest : BEArmor {
	BEHardLeatherVest() : base() {
		$this.Name               = 'Hard Leather Vest'
		$this.MapObjName         = 'hardleathervest'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{ [StatId]::Defense = 3 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A stiff leather vest, slightly more protective.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELightChainmail : BEArmor {
	BELightChainmail() : base() {
		$this.Name               = 'Light Chainmail'
		$this.MapObjName         = 'lightchainmail'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{ [StatId]::Defense = 6 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A lighter version of chainmail, for increased mobility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESteelBreastplate : BEArmor {
	BESteelBreastplate() : base() {
		$this.Name               = 'Steel Breastplate'
		$this.MapObjName         = 'steelbreastplate'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{ [StatId]::Defense = 11 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A standard issue breastplate for soldiers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArcaneRobe : BEArmor {
	BEArcaneRobe() : base() {
		$this.Name               = 'Arcane Robe'
		$this.MapObjName         = 'arcanerobe'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{ [StatId]::MagicDefense = 21 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark robe crackling with uncontrolled magical energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEReinforcedCuirass : BEArmor {
	BEReinforcedCuirass() : base() {
		$this.Name               = 'Reinforced Cuirass'
		$this.MapObjName         = 'reinforcedcuirass'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{ [StatId]::Defense = 17 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass with extra plating in vital areas.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMysticalChainmail : BEArmor {
	BEMysticalChainmail() : base() {
		$this.Name               = 'Mystical Chainmail'
		$this.MapObjName         = 'mysticalchainmail'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{ [StatId]::Defense = 11; [StatId]::MagicDefense = 6 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Chainmail imbued with minor protective enchantments.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFullPlateArmor : BEArmor {
	BEFullPlateArmor() : base() {
		$this.Name               = 'Full Plate Armor'
		$this.MapObjName         = 'fullplatearmor'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{ [StatId]::Defense = 23 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Complete and heavy plate armor, offering superior defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowRobe : BEArmor {
	BEShadowRobe() : base() {
		$this.Name               = 'Shadow Robe'
		$this.MapObjName         = 'shadowrobe'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{ [StatId]::MagicDefense = 26 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that allows the wearer to blend into shadows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWyvernhideVest : BEArmor {
	BEWyvernhideVest() : base() {
		$this.Name               = 'Wyvernhide Vest'
		$this.MapObjName         = 'wyvernhidevest'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{ [StatId]::Defense = 20 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest crafted from the tough hide of a wyvern.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEmperorsCuirass : BEArmor {
	BEEmperorsCuirass() : base() {
		$this.Name               = 'Emperor''s Cuirass'
		$this.MapObjName         = 'emperorscuirass'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{ [StatId]::Defense = 27 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ceremonial cuirass, intricately decorated.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAstralRobe : BEArmor {
	BEAstralRobe() : base() {
		$this.Name               = 'Astral Robe'
		$this.MapObjName         = 'astralrobe'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{ [StatId]::MagicDefense = 35 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe said to be woven from threads of the cosmos.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELegendaryPlate : BEArmor {
	BELegendaryPlate() : base() {
		$this.Name               = 'Legendary Plate'
		$this.MapObjName         = 'legendaryplate'
		$this.PurchasePrice      = 3000
		$this.SellPrice          = 1500
		$this.TargetStats        = @{ [StatId]::Defense = 40 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Plate armor of unfathomable strength, rumored to be divine.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENursesUniform : BEArmor {
	BENursesUniform() : base() {
		$this.Name               = 'Nurse''s Uniform'
		$this.MapObjName         = 'nursesuniform'
		$this.PurchasePrice      = 65
		$this.SellPrice          = 33
		$this.TargetStats        = @{ [StatId]::MagicDefense = 4 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple white uniform, surprisingly durable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBallGown : BEArmor {
	BEBallGown() : base() {
		$this.Name               = 'Ball Gown'
		$this.MapObjName         = 'ballgown'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{ [StatId]::MagicDefense = 5 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A magnificent gown, offers no protection but great charm.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDancersVeil : BEArmor {
	BEDancersVeil() : base() {
		$this.Name               = 'Dancer''s Veil'
		$this.MapObjName         = 'dancersveil'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{ [StatId]::Defense = 1; [StatId]::MagicDefense = 1 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light, flowing garment that enhances agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEPriestesssRobe : BEArmor {
	BEPriestesssRobe() : base() {
		$this.Name               = 'Priestess''s Robe'
		$this.MapObjName         = 'priestesssrobe'
		$this.PurchasePrice      = 480
		$this.SellPrice          = 240
		$this.TargetStats        = @{ [StatId]::MagicDefense = 19 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pure white robe, blessed with divine protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESpellbindersRobe : BEArmor {
	BESpellbindersRobe() : base() {
		$this.Name               = 'Spellbinder''s Robe'
		$this.MapObjName         = 'spellbindersrobe'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{ [StatId]::MagicDefense = 29 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vibrant robe that hums with magical power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMatriarchsGown : BEArmor {
	BEMatriarchsGown() : base() {
		$this.Name               = 'Matriarch''s Gown'
		$this.MapObjName         = 'matriarchsgown'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{ [StatId]::MagicDefense = 10 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An imposing gown worn by powerful female leaders.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEValkyriesCuirass : BEArmor {
	BEValkyriesCuirass() : base() {
		$this.Name               = 'Valkyrie''s Cuirass'
		$this.MapObjName         = 'valkyriescuirass'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{ [StatId]::Defense = 26 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A golden cuirass worn by valiant warrior women.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEEnchantresssGown : BEArmor {
	BEEnchantresssGown() : base() {
		$this.Name               = 'Enchantress''s Gown'
		$this.MapObjName         = 'enchantresssgown'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{ [StatId]::MagicDefense = 33 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A gown of exquisite design, perfect for casting powerful spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEAmazonianBreastplate : BEArmor {
	BEAmazonianBreastplate() : base() {
		$this.Name               = 'Amazonian Breastplate'
		$this.MapObjName         = 'amazonianbreastplate'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{ [StatId]::Defense = 19 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light but sturdy breastplate for female warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEQueensRegalia : BEArmor {
	BEQueensRegalia() : base() {
		$this.Name               = 'Queen''s Regalia'
		$this.MapObjName         = 'queensregalia'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{ [StatId]::MagicDefense = 24 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'The ceremonial robes of a queen, imbued with subtle magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEHuntresssVest : BEArmor {
	BEHuntresssVest() : base() {
		$this.Name               = 'Huntress''s Vest'
		$this.MapObjName         = 'huntresssvest'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{ [StatId]::Defense = 4 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rugged vest designed for female hunters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDruidesssRobe : BEArmor {
	BEDruidesssRobe() : base() {
		$this.Name               = 'Druidess''s Robe'
		$this.MapObjName         = 'druidesssrobe'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{ [StatId]::MagicDefense = 20 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe made of natural fibers, attuned to nature''s magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESorceresssGown : BEArmor {
	BESorceresssGown() : base() {
		$this.Name               = 'Sorceress''s Gown'
		$this.MapObjName         = 'sorceresssgown'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{ [StatId]::MagicDefense = 31 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A darkly elegant gown, enhancing destructive spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWarriorPrincesssCuirass : BEArmor {
	BEWarriorPrincesssCuirass() : base() {
		$this.Name               = 'Warrior Princess''s Cuirass'
		$this.MapObjName         = 'warriorprincessscuirass'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{ [StatId]::Defense = 27 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A decorative yet strong cuirass for a royal warrior.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMaidensPlate : BEArmor {
	BEMaidensPlate() : base() {
		$this.Name               = 'Maiden''s Plate'
		$this.MapObjName         = 'maidensplate'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{ [StatId]::Defense = 20 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light plate armor designed for female combatants.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESpiritWeaversRobe : BEArmor {
	BESpiritWeaversRobe() : base() {
		$this.Name               = 'Spirit Weaver''s Robe'
		$this.MapObjName         = 'spiritweaversrobe'
		$this.PurchasePrice      = 1550
		$this.SellPrice          = 775
		$this.TargetStats        = @{ [StatId]::MagicDefense = 34 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe used to commune with spirits, enhancing spiritual magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBattleDress : BEArmor {
	BEBattleDress() : base() {
		$this.Name               = 'Battle Dress'
		$this.MapObjName         = 'battledress'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{ [StatId]::Defense = 3 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A functional dress designed for combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESilkBlouse : BEArmor {
	BESilkBlouse() : base() {
		$this.Name               = 'Silk Blouse'
		$this.MapObjName         = 'silkblouse'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{ [StatId]::MagicDefense = 2 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A fine silk blouse, comfortable but offers no defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEFairyTaleGown : BEArmor {
	BEFairyTaleGown() : base() {
		$this.Name               = 'Fairy Tale Gown'
		$this.MapObjName         = 'fairytalegown'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{ [StatId]::MagicDefense = 7 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A whimsical gown that offers a slight magic boost.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECelestialDress : BEArmor {
	BECelestialDress() : base() {
		$this.Name               = 'Celestial Dress'
		$this.MapObjName         = 'celestialdress'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{ [StatId]::MagicDefense = 9 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dress adorned with celestial patterns, granting minor magical resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMoonlightRobe : BEArmor {
	BEMoonlightRobe() : base() {
		$this.Name               = 'Moonlight Robe'
		$this.MapObjName         = 'moonlightrobe'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{ [StatId]::MagicDefense = 26 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that glows faintly in the dark, enhancing lunar magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESunstoneVest : BEArmor {
	BESunstoneVest() : base() {
		$this.Name               = 'Sunstone Vest'
		$this.MapObjName         = 'sunstonevest'
		$this.PurchasePrice      = 270
		$this.SellPrice          = 135
		$this.TargetStats        = @{ [StatId]::Defense = 5 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest embedded with sunstone fragments, offering fire resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOceanicRobe : BEArmor {
	BEOceanicRobe() : base() {
		$this.Name               = 'Oceanic Robe'
		$this.MapObjName         = 'oceanicrobe'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{ [StatId]::MagicDefense = 22 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe woven from kelp and enchanted shells, good for water magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGloomVest : BEArmor {
	BEGloomVest() : base() {
		$this.Name               = 'Gloom Vest'
		$this.MapObjName         = 'gloomvest'
		$this.PurchasePrice      = 240
		$this.SellPrice          = 120
		$this.TargetStats        = @{ [StatId]::Defense = 4 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark vest that helps the wearer blend into shadows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlazeCuirass : BEArmor {
	BEBlazeCuirass() : base() {
		$this.Name               = 'Blaze Cuirass'
		$this.MapObjName         = 'blazecuirass'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{ [StatId]::Defense = 16 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass imbued with fire magic, protecting against heat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFrostChainmail : BEArmor {
	BEFrostChainmail() : base() {
		$this.Name               = 'Frost Chainmail'
		$this.MapObjName         = 'frostchainmail'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{ [StatId]::Defense = 13; [StatId]::MagicDefense = 4 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Chainmail that shimmers with icy energy, resisting cold.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThunderRobe : BEArmor {
	BEThunderRobe() : base() {
		$this.Name               = 'Thunder Robe'
		$this.MapObjName         = 'thunderrobe'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{ [StatId]::MagicDefense = 27 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that crackles with static, enhancing lightning spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEarthPlate : BEArmor {
	BEEarthPlate() : base() {
		$this.Name               = 'Earth Plate'
		$this.MapObjName         = 'earthplate'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{ [StatId]::Defense = 29 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy plate armor forged from enchanted earth, very sturdy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWindTunic : BEArmor {
	BEWindTunic() : base() {
		$this.Name               = 'Wind Tunic'
		$this.MapObjName         = 'windtunic'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{ [StatId]::Defense = 2 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light tunic that makes the wearer feel swifter.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPoisonVest : BEArmor {
	BEPoisonVest() : base() {
		$this.Name               = 'Poison Vest'
		$this.MapObjName         = 'poisonvest'
		$this.PurchasePrice      = 290
		$this.SellPrice          = 145
		$this.TargetStats        = @{ [StatId]::Defense = 6 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest coated in a subtle, non-toxic venom, useful for rogues.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHolyBreastplate : BEArmor {
	BEHolyBreastplate() : base() {
		$this.Name               = 'Holy Breastplate'
		$this.MapObjName         = 'holybreastplate'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{ [StatId]::Defense = 17 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A breastplate blessed by the church, resisting dark attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECursedRobe : BEArmor {
	BECursedRobe() : base() {
		$this.Name               = 'Cursed Robe'
		$this.MapObjName         = 'cursedrobe'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{ [StatId]::MagicDefense = 30 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A powerful but dangerous robe, drains health but boosts magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDemonicCuirass : BEArmor {
	BEDemonicCuirass() : base() {
		$this.Name               = 'Demonic Cuirass'
		$this.MapObjName         = 'demoniccuirass'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{ [StatId]::Defense = 28 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark, imposing cuirass said to be forged in hellfire.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAngelsRobe : BEArmor {
	BEAngelsRobe() : base() {
		$this.Name               = 'Angel''s Robe'
		$this.MapObjName         = 'angelsrobe'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{ [StatId]::MagicDefense = 38 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A radiant robe that offers powerful divine protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonScalePlate : BEArmor {
	BEDragonScalePlate() : base() {
		$this.Name               = 'Dragon Scale Plate'
		$this.MapObjName         = 'dragonscaleplate'
		$this.PurchasePrice      = 2800
		$this.SellPrice          = 1400
		$this.TargetStats        = @{ [StatId]::Defense = 38 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Plate armor crafted from genuine dragon scales, incredibly tough.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEElementalVest : BEArmor {
	BEElementalVest() : base() {
		$this.Name               = 'Elemental Vest'
		$this.MapObjName         = 'elementalvest'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{ [StatId]::Defense = 6; [StatId]::MagicDefense = 6 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest that shifts color based on the nearest element, offering minor resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEClockworkCuirass : BEArmor {
	BEClockworkCuirass() : base() {
		$this.Name               = 'Clockwork Cuirass'
		$this.MapObjName         = 'clockworkcuirass'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{ [StatId]::Defense = 14 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass made of intricate gears and metal, offers decent defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAlchemistsRobe : BEArmor {
	BEAlchemistsRobe() : base() {
		$this.Name               = 'Alchemist''s Robe'
		$this.MapObjName         = 'alchemistsrobe'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{ [StatId]::MagicDefense = 17 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A stained but resilient robe, with many hidden pockets.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPlagueDoctorsCoat : BEArmor {
	BEPlagueDoctorsCoat() : base() {
		$this.Name               = 'Plague Doctor''s Coat'
		$this.MapObjName         = 'plaguedoctorscoat'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{ [StatId]::Defense = 5 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A long, thick coat offering protection against miasma.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpectersRobe : BEArmor {
	BESpectersRobe() : base() {
		$this.Name               = 'Specter''s Robe'
		$this.MapObjName         = 'spectersrobe'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{ [StatId]::MagicDefense = 25 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ghostly robe that grants a small chance to evade attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBerserkersHarness : BEArmor {
	BEBerserkersHarness() : base() {
		$this.Name               = 'Berserker''s Harness'
		$this.MapObjName         = 'berserkersharness'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{ [StatId]::Defense = 16 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A minimal harness that allows for unrestrained movement and boosts attack.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWardensVest : BEArmor {
	BEWardensVest() : base() {
		$this.Name               = 'Warden''s Vest'
		$this.MapObjName         = 'wardensvest'
		$this.PurchasePrice      = 260
		$this.SellPrice          = 130
		$this.TargetStats        = @{ [StatId]::Defense = 5 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robust vest for patrolling guards, with good defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESirensRobe : BEArmor {
	BESirensRobe() : base() {
		$this.Name               = 'Siren''s Robe'
		$this.MapObjName         = 'sirensrobe'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{ [StatId]::MagicDefense = 28 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shimmering robe that enthralls those nearby, enhancing charm magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEVampiresCoat : BEArmor {
	BEVampiresCoat() : base() {
		$this.Name               = 'Vampire''s Coat'
		$this.MapObjName         = 'vampirescoat'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{ [StatId]::Defense = 10; [StatId]::MagicDefense = 10 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An elegant dark coat, said to sustain the wearer''s life.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWerewolfHideVest : BEArmor {
	BEWerewolfHideVest() : base() {
		$this.Name               = 'Werewolf Hide Vest'
		$this.MapObjName         = 'werewolfhidevest'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{ [StatId]::Defense = 22 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest made from the hide of a werewolf, offers minor strength boost.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGolemPlate : BEArmor {
	BEGolemPlate() : base() {
		$this.Name               = 'Golem Plate'
		$this.MapObjName         = 'golemplate'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{ [StatId]::Defense = 32 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Extremely heavy and tough plate armor, slows movement.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECosmicRobe : BEArmor {
	BECosmicRobe() : base() {
		$this.Name               = 'Cosmic Robe'
		$this.MapObjName         = 'cosmicrobe'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{ [StatId]::MagicDefense = 40 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe depicting constellations, allowing glimpses of future spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulWeaversRobe : BEArmor {
	BESoulWeaversRobe() : base() {
		$this.Name               = 'Soul Weaver''s Robe'
		$this.MapObjName         = 'soulweaversrobe'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{ [StatId]::MagicDefense = 36 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark robe allowing manipulation of souls, boosts dark magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidPlate : BEArmor {
	BEVoidPlate() : base() {
		$this.Name               = 'Void Plate'
		$this.MapObjName         = 'voidplate'
		$this.PurchasePrice      = 3500
		$this.SellPrice          = 1750
		$this.TargetStats        = @{ [StatId]::Defense = 45 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Armor that seems to absorb light, offering ultimate protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENovicesTunic : BEArmor {
	BENovicesTunic() : base() {
		$this.Name               = 'Novice''s Tunic'
		$this.MapObjName         = 'novicestunic'
		$this.PurchasePrice      = 45
		$this.SellPrice          = 23
		$this.TargetStats        = @{  }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple tunic worn by those beginning their adventure.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOldLeatherArmor : BEArmor {
	BEOldLeatherArmor() : base() {
		$this.Name               = 'Old Leather Armor'
		$this.MapObjName         = 'oldleatherarmor'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{ [StatId]::Defense = 3 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn and patched leather armor, still offers some defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERaggedShirt : BEArmor {
	BERaggedShirt() : base() {
		$this.Name               = 'Ragged Shirt'
		$this.MapObjName         = 'raggedshirt'
		$this.PurchasePrice      = 20
		$this.SellPrice          = 10
		$this.TargetStats        = @{  }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tattered shirt, barely offering any protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDirtyRobe : BEArmor {
	BEDirtyRobe() : base() {
		$this.Name               = 'Dirty Robe'
		$this.MapObjName         = 'dirtyrobe'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{ [StatId]::MagicDefense = 8 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A grimy robe, suitable for beggars or desperate mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERustyChainmail : BEArmor {
	BERustyChainmail() : base() {
		$this.Name               = 'Rusty Chainmail'
		$this.MapObjName         = 'rustychainmail'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{ [StatId]::Defense = 5 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Old and rusted chainmail, prone to breaking.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDentedBreastplate : BEArmor {
	BEDentedBreastplate() : base() {
		$this.Name               = 'Dented Breastplate'
		$this.MapObjName         = 'dentedbreastplate'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{ [StatId]::Defense = 9 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A breastplate that has seen better days, but still functions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWovenRobe : BEArmor {
	BEWovenRobe() : base() {
		$this.Name               = 'Woven Robe'
		$this.MapObjName         = 'wovenrobe'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{ [StatId]::MagicDefense = 11 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple robe made from woven plant fibers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrudeCuirass : BEArmor {
	BECrudeCuirass() : base() {
		$this.Name               = 'Crude Cuirass'
		$this.MapObjName         = 'crudecuirass'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{ [StatId]::Defense = 13 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A poorly made cuirass, offers basic defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGildedChainmail : BEArmor {
	BEGildedChainmail() : base() {
		$this.Name               = 'Gilded Chainmail'
		$this.MapObjName         = 'gildedchainmail'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{ [StatId]::Defense = 8; [StatId]::MagicDefense = 2 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Chainmail with decorative gold plating, less practical.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOrnatePlateArmor : BEArmor {
	BEOrnatePlateArmor() : base() {
		$this.Name               = 'Ornate Plate Armor'
		$this.MapObjName         = 'ornateplatearmor'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{ [StatId]::Defense = 18 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Highly decorative plate armor, more for ceremonies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWhisperRobe : BEArmor {
	BEWhisperRobe() : base() {
		$this.Name               = 'Whisper Robe'
		$this.MapObjName         = 'whisperrobe'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{ [StatId]::MagicDefense = 19 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that makes a soft rustling sound, used for quiet movement.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFleshGolemVest : BEArmor {
	BEFleshGolemVest() : base() {
		$this.Name               = 'Flesh Golem Vest'
		$this.MapObjName         = 'fleshgolemvest'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{ [StatId]::Defense = 15 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A repulsive vest made from stitched together flesh, surprisingly tough.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBaronsCuirass : BEArmor {
	BEBaronsCuirass() : base() {
		$this.Name               = 'Baron''s Cuirass'
		$this.MapObjName         = 'baronscuirass'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{ [StatId]::Defense = 22 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A fancy cuirass, symbolizing minor nobility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamweaversRobe : BEArmor {
	BEDreamweaversRobe() : base() {
		$this.Name               = 'Dreamweaver''s Robe'
		$this.MapObjName         = 'dreamweaversrobe'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{ [StatId]::MagicDefense = 28 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that helps its wearer control dreams, useful for illusions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETitaniumPlate : BEArmor {
	BETitaniumPlate() : base() {
		$this.Name               = 'Titanium Plate'
		$this.MapObjName         = 'titaniumplate'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{ [StatId]::Defense = 25 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Lightweight yet incredibly strong plate armor.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESerpenthideRobe : BEArmor {
	BESerpenthideRobe() : base() {
		$this.Name               = 'Serpenthide Robe'
		$this.MapObjName         = 'serpenthiderobe'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{ [StatId]::MagicDefense = 30 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe made from the scales of a giant serpent, offers resistance to poison.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAmuletVest : BEArmor {
	BEAmuletVest() : base() {
		$this.Name               = 'Amulet Vest'
		$this.MapObjName         = 'amuletvest'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{ [StatId]::Defense = 7; [StatId]::MagicDefense = 7 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest embedded with various protective amulets.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGoblinHideTunic : BEArmor {
	BEGoblinHideTunic() : base() {
		$this.Name               = 'Goblin Hide Tunic'
		$this.MapObjName         = 'goblinhidetunic'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{ [StatId]::Defense = 2 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A crude tunic made from goblin hides, smells faintly of swamp.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOgreBoneCuirass : BEArmor {
	BEOgreBoneCuirass() : base() {
		$this.Name               = 'Ogre Bone Cuirass'
		$this.MapObjName         = 'ogrebonecuirass'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{ [StatId]::Defense = 20 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy cuirass made from ogre bones, very intimidating.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHarpyFeatherRobe : BEArmor {
	BEHarpyFeatherRobe() : base() {
		$this.Name               = 'Harpy Feather Robe'
		$this.MapObjName         = 'harpyfeatherrobe'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{ [StatId]::MagicDefense = 24 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light robe adorned with harpy feathers, allows graceful movement.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEUnicornHornPlate : BEArmor {
	BEUnicornHornPlate() : base() {
		$this.Name               = 'Unicorn Horn Plate'
		$this.MapObjName         = 'unicornhornplate'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{ [StatId]::Defense = 30; [StatId]::MagicDefense = 10 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Plate armor inlaid with fragments of unicorn horn, very rare.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChiffonGown : BEArmor {
	BEChiffonGown() : base() {
		$this.Name               = 'Chiffon Gown'
		$this.MapObjName         = 'chiffongown'
		$this.PurchasePrice      = 50
		$this.SellPrice          = 25
		$this.TargetStats        = @{ [StatId]::MagicDefense = 1 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A delicate and sheer gown, provides no protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBridalGown : BEArmor {
	BEBridalGown() : base() {
		$this.Name               = 'Bridal Gown'
		$this.MapObjName         = 'bridalgown'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{ [StatId]::MagicDefense = 3 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A beautiful white gown, worn for ceremonies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEFortuneTellersRobe : BEArmor {
	BEFortuneTellersRobe() : base() {
		$this.Name               = 'Fortune Teller''s Robe'
		$this.MapObjName         = 'fortunetellersrobe'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{ [StatId]::MagicDefense = 21 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A colorful robe with mystical symbols, enhances foresight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBardsVest : BEArmor {
	BEBardsVest() : base() {
		$this.Name               = 'Bard''s Vest'
		$this.MapObjName         = 'bardsvest'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{ [StatId]::Defense = 1 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A flashy vest that helps with performances, slight charm boost.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEScholarsGown : BEArmor {
	BEScholarsGown() : base() {
		$this.Name               = 'Scholar''s Gown'
		$this.MapObjName         = 'scholarsgown'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{ [StatId]::MagicDefense = 8 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dignified gown for intellectual pursuits, very comfortable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECourtJestersTunic : BEArmor {
	BECourtJestersTunic() : base() {
		$this.Name               = 'Court Jester''s Tunic'
		$this.MapObjName         = 'courtjesterstunic'
		$this.PurchasePrice      = 30
		$this.SellPrice          = 15
		$this.TargetStats        = @{  }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A brightly colored tunic, offers no protection, purely cosmetic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArtisansApron : BEArmor {
	BEArtisansApron() : base() {
		$this.Name               = 'Artisan''s Apron'
		$this.MapObjName         = 'artisansapron'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{ [StatId]::Defense = 1 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A practical apron with many pockets, good for crafting.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMinersVest : BEArmor {
	BEMinersVest() : base() {
		$this.Name               = 'Miner''s Vest'
		$this.MapObjName         = 'minersvest'
		$this.PurchasePrice      = 160
		$this.SellPrice          = 80
		$this.TargetStats        = @{ [StatId]::Defense = 4 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A thick vest, offers protection against falling debris.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInquisitorsRobe : BEArmor {
	BEInquisitorsRobe() : base() {
		$this.Name               = 'Inquisitor''s Robe'
		$this.MapObjName         = 'inquisitorsrobe'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{ [StatId]::MagicDefense = 25 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A grim robe worn by those who seek out evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEReapersShroud : BEArmor {
	BEReapersShroud() : base() {
		$this.Name               = 'Reaper''s Shroud'
		$this.MapObjName         = 'reapersshroud'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{ [StatId]::MagicDefense = 32 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark, flowing shroud that seems to absorb light, feared by many.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBarbariansFurVest : BEArmor {
	BEBarbariansFurVest() : base() {
		$this.Name               = 'Barbarian''s Fur Vest'
		$this.MapObjName         = 'barbariansfurvest'
		$this.PurchasePrice      = 220
		$this.SellPrice          = 110
		$this.TargetStats        = @{ [StatId]::Defense = 6 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A rugged vest made of thick fur, offers warmth and protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENomadsTunic : BEArmor {
	BENomadsTunic() : base() {
		$this.Name               = 'Nomad''s Tunic'
		$this.MapObjName         = 'nomadstunic'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{ [StatId]::Defense = 1 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple, durable tunic for desert wanderers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZephyrVest : BEArmor {
	BEZephyrVest() : base() {
		$this.Name               = 'Zephyr Vest'
		$this.MapObjName         = 'zephyrvest'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{ [StatId]::Defense = 2 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light vest that makes the wearer feel faster.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneBreastplate : BEArmor {
	BEStoneBreastplate() : base() {
		$this.Name               = 'Stone Breastplate'
		$this.MapObjName         = 'stonebreastplate'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{ [StatId]::Defense = 14 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy breastplate carved from a single piece of stone.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENetherRobe : BEArmor {
	BENetherRobe() : base() {
		$this.Name               = 'Nether Robe'
		$this.MapObjName         = 'netherrobe'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{ [StatId]::MagicDefense = 29 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark robe from the underworld, radiating ominous energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWyrmscaleVest : BEArmor {
	BEWyrmscaleVest() : base() {
		$this.Name               = 'Wyrmscale Vest'
		$this.MapObjName         = 'wyrmscalevest'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{ [StatId]::Defense = 17 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest crafted from the scales of a smaller wyrm.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrimsonRobe : BEArmor {
	BECrimsonRobe() : base() {
		$this.Name               = 'Crimson Robe'
		$this.MapObjName         = 'crimsonrobe'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{ [StatId]::MagicDefense = 30 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vivid red robe, associated with powerful fire mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESilverPlateArmor : BEArmor {
	BESilverPlateArmor() : base() {
		$this.Name               = 'Silver Plate Armor'
		$this.MapObjName         = 'silverplatearmor'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{ [StatId]::Defense = 28 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Plate armor forged from pure silver, shines brightly.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERunesmithsRobe : BEArmor {
	BERunesmithsRobe() : base() {
		$this.Name               = 'Runesmith''s Robe'
		$this.MapObjName         = 'runesmithsrobe'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{ [StatId]::MagicDefense = 34 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A heavy robe adorned with glowing runes, enhances enchanting.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChitinCuirass : BEArmor {
	BEChitinCuirass() : base() {
		$this.Name               = 'Chitin Cuirass'
		$this.MapObjName         = 'chitincuirass'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{ [StatId]::Defense = 16 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass made from the hard exoskeleton of a giant insect.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGolemHeartBreastplate : BEArmor {
	BEGolemHeartBreastplate() : base() {
		$this.Name               = 'Golem Heart Breastplate'
		$this.MapObjName         = 'golemheartbreastplate'
		$this.PurchasePrice      = 2300
		$this.SellPrice          = 1150
		$this.TargetStats        = @{ [StatId]::Defense = 33 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A breastplate embedded with the pulsating core of a golem.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarfallRobe : BEArmor {
	BEStarfallRobe() : base() {
		$this.Name               = 'Starfall Robe'
		$this.MapObjName         = 'starfallrobe'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{ [StatId]::MagicDefense = 42 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe said to be woven from threads of falling stars, grants incredible power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEtherealVest : BEArmor {
	BEEtherealVest() : base() {
		$this.Name               = 'Ethereal Vest'
		$this.MapObjName         = 'etherealvest'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{ [StatId]::Defense = 10; [StatId]::MagicDefense = 10 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A semi-transparent vest that seems to flicker in and out of existence.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpecterVest : BEArmor {
	BESpecterVest() : base() {
		$this.Name               = 'Specter Vest'
		$this.MapObjName         = 'spectervest'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{ [StatId]::Defense = 3; [StatId]::MagicDefense = 3 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest that offers slight resistance to spiritual attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShamansRobe : BEArmor {
	BEShamansRobe() : base() {
		$this.Name               = 'Shaman''s Robe'
		$this.MapObjName         = 'shamansrobe'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{ [StatId]::MagicDefense = 23 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A ceremonial robe adorned with totems and charms.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECultistsRobe : BEArmor {
	BECultistsRobe() : base() {
		$this.Name               = 'Cultist''s Robe'
		$this.MapObjName         = 'cultistsrobe'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{ [StatId]::MagicDefense = 15 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark and ominous robe, often worn by followers of dark deities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEExecutionersPlate : BEArmor {
	BEExecutionersPlate() : base() {
		$this.Name               = 'Executioner''s Plate'
		$this.MapObjName         = 'executionersplate'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{ [StatId]::Defense = 29 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy and dark plate armor, designed for maximum intimidation.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBloodRobe : BEArmor {
	BEBloodRobe() : base() {
		$this.Name               = 'Blood Robe'
		$this.MapObjName         = 'bloodrobe'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{ [StatId]::Defense = 5; [StatId]::MagicDefense = 30 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe stained with ancient blood, granting power through sacrifice.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonKingsCuirass : BEArmor {
	BEDragonKingsCuirass() : base() {
		$this.Name               = 'Dragon King''s Cuirass'
		$this.MapObjName         = 'dragonkingscuirass'
		$this.PurchasePrice      = 3000
		$this.SellPrice          = 1500
		$this.TargetStats        = @{ [StatId]::Defense = 40; [StatId]::MagicDefense = 5 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'The legendary cuirass of a dragon ruler, immensely powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivineRobe : BEArmor {
	BEDivineRobe() : base() {
		$this.Name               = 'Divine Robe'
		$this.MapObjName         = 'divinerobe'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{ [StatId]::MagicDefense = 45 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe of unparalleled purity, offering divine protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarlordsPlate : BEArmor {
	BEWarlordsPlate() : base() {
		$this.Name               = 'Warlord''s Plate'
		$this.MapObjName         = 'warlordsplate'
		$this.PurchasePrice      = 2800
		$this.SellPrice          = 1400
		$this.TargetStats        = @{ [StatId]::Defense = 38 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'The battle-hardened plate armor of a seasoned warlord.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMistRobe : BEArmor {
	BEMistRobe() : base() {
		$this.Name               = 'Mist Robe'
		$this.MapObjName         = 'mistrobe'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{ [StatId]::MagicDefense = 27 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that seems to shimmer like mist, enhancing stealth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneSkinVest : BEArmor {
	BEStoneSkinVest() : base() {
		$this.Name               = 'Stone Skin Vest'
		$this.MapObjName         = 'stoneskinvest'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{ [StatId]::Defense = 12 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest that makes the wearer''s skin as hard as stone.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEnigmaRobe : BEArmor {
	BEEnigmaRobe() : base() {
		$this.Name               = 'Enigma Robe'
		$this.MapObjName         = 'enigmarobe'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{ [StatId]::MagicDefense = 37 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that constantly changes its magical properties.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChampionsBreastplate : BEArmor {
	BEChampionsBreastplate() : base() {
		$this.Name               = 'Champion''s Breastplate'
		$this.MapObjName         = 'championsbreastplate'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{ [StatId]::Defense = 30 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'The shining breastplate of a revered champion.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESorcerersTunic : BEArmor {
	BESorcerersTunic() : base() {
		$this.Name               = 'Sorcerer''s Tunic'
		$this.MapObjName         = 'sorcererstunic'
		$this.PurchasePrice      = 170
		$this.SellPrice          = 85
		$this.TargetStats        = @{ [StatId]::MagicDefense = 12 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple tunic, often worn under a robe, with minor magical properties.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAdventurersJacket : BEArmor {
	BEAdventurersJacket() : base() {
		$this.Name               = 'Adventurer''s Jacket'
		$this.MapObjName         = 'adventurersjacket'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{ [StatId]::Defense = 3 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A versatile jacket with many pockets, good for general exploration.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHermitsRobe : BEArmor {
	BEHermitsRobe() : base() {
		$this.Name               = 'Hermit''s Robe'
		$this.MapObjName         = 'hermitsrobe'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{ [StatId]::MagicDefense = 10 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A plain, patched robe, worn by reclusive wise individuals.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGuardsUniform : BEArmor {
	BEGuardsUniform() : base() {
		$this.Name               = 'Guard''s Uniform'
		$this.MapObjName         = 'guardsuniform'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{ [StatId]::Defense = 4 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'The standard uniform of a town guard, offers moderate protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEExecutionersVest : BEArmor {
	BEExecutionersVest() : base() {
		$this.Name               = 'Executioner''s Vest'
		$this.MapObjName         = 'executionersvest'
		$this.PurchasePrice      = 240
		$this.SellPrice          = 120
		$this.TargetStats        = @{ [StatId]::Defense = 6 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy, dark vest worn by those carrying out justice.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENecromancersRobe : BEArmor {
	BENecromancersRobe() : base() {
		$this.Name               = 'Necromancer''s Robe'
		$this.MapObjName         = 'necromancersrobe'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{ [StatId]::MagicDefense = 28 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A chilling robe that pulses with unholy energy, enhancing dark magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlessedChainmail : BEArmor {
	BEBlessedChainmail() : base() {
		$this.Name               = 'Blessed Chainmail'
		$this.MapObjName         = 'blessedchainmail'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{ [StatId]::Defense = 11; [StatId]::MagicDefense = 4 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Chainmail consecrated by holy rites, effective against evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEObsidianCuirass : BEArmor {
	BEObsidianCuirass() : base() {
		$this.Name               = 'Obsidian Cuirass'
		$this.MapObjName         = 'obsidiancuirass'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{ [StatId]::Defense = 26 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass carved from pure obsidian, incredibly durable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunkenRobe : BEArmor {
	BESunkenRobe() : base() {
		$this.Name               = 'Sunken Robe'
		$this.MapObjName         = 'sunkenrobe'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{ [StatId]::MagicDefense = 30 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe recovered from deep sea ruins, still damp but enchanted.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETitansPlate : BEArmor {
	BETitansPlate() : base() {
		$this.Name               = 'Titan''s Plate'
		$this.MapObjName         = 'titansplate'
		$this.PurchasePrice      = 2700
		$this.SellPrice          = 1350
		$this.TargetStats        = @{ [StatId]::Defense = 36 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Plate armor said to be forged by ancient titans, immense defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEmberRobe : BEArmor {
	BEEmberRobe() : base() {
		$this.Name               = 'Ember Robe'
		$this.MapObjName         = 'emberrobe'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{ [StatId]::MagicDefense = 32 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that radiates a faint warmth, hinting at fire magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrystalCuirass : BEArmor {
	BECrystalCuirass() : base() {
		$this.Name               = 'Crystal Cuirass'
		$this.MapObjName         = 'crystalcuirass'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{ [StatId]::Defense = 24; [StatId]::MagicDefense = 8 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass made from hardened magical crystals, somewhat fragile.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVindicatorsPlate : BEArmor {
	BEVindicatorsPlate() : base() {
		$this.Name               = 'Vindicator''s Plate'
		$this.MapObjName         = 'vindicatorsplate'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{ [StatId]::Defense = 32 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Plate armor worn by those who seek justice, glows faintly.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhantomRobe : BEArmor {
	BEPhantomRobe() : base() {
		$this.Name               = 'Phantom Robe'
		$this.MapObjName         = 'phantomrobe'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{ [StatId]::MagicDefense = 35 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that makes the wearer partially incorporeal, enhancing evasion.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulboundVest : BEArmor {
	BESoulboundVest() : base() {
		$this.Name               = 'Soulbound Vest'
		$this.MapObjName         = 'soulboundvest'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{ [StatId]::Defense = 8; [StatId]::MagicDefense = 8 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest that has formed a mystical link with its wearer, gaining power over time.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlacialRobe : BEArmor {
	BEGlacialRobe() : base() {
		$this.Name               = 'Glacial Robe'
		$this.MapObjName         = 'glacialrobe'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{ [StatId]::MagicDefense = 31 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe radiating intense cold, perfect for ice mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonSlayersPlate : BEArmor {
	BEDragonSlayersPlate() : base() {
		$this.Name               = 'Dragon Slayer''s Plate'
		$this.MapObjName         = 'dragonslayersplate'
		$this.PurchasePrice      = 3200
		$this.SellPrice          = 1600
		$this.TargetStats        = @{ [StatId]::Defense = 42 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Plate armor designed specifically to combat dragons, immensely strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMonksGi : BEArmor {
	BEMonksGi() : base() {
		$this.Name               = 'Monk''s Gi'
		$this.MapObjName         = 'monksgi'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{ [StatId]::Defense = 2 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple, loose-fitting martial arts uniform.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETravelersCloak : BEArmor {
	BETravelersCloak() : base() {
		$this.Name               = 'Traveler''s Cloak'
		$this.MapObjName         = 'travelerscloak'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{  }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A multi-purpose cloak that can be worn like a tunic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHerbalistsTunic : BEArmor {
	BEHerbalistsTunic() : base() {
		$this.Name               = 'Herbalist''s Tunic'
		$this.MapObjName         = 'herbaliststunic'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{ [StatId]::MagicDefense = 5 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tunic with many pockets for herbs, slightly protective.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEngineersVest : BEArmor {
	BEEngineersVest() : base() {
		$this.Name               = 'Engineer''s Vest'
		$this.MapObjName         = 'engineersvest'
		$this.PurchasePrice      = 140
		$this.SellPrice          = 70
		$this.TargetStats        = @{ [StatId]::Defense = 3 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest with various tools and pockets, offers minor defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlitteringRobe : BEArmor {
	BEGlitteringRobe() : base() {
		$this.Name               = 'Glittering Robe'
		$this.MapObjName         = 'glitteringrobe'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{ [StatId]::MagicDefense = 18 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe woven with fine silver threads, sparkles in the light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESwashbucklersVest : BEArmor {
	BESwashbucklersVest() : base() {
		$this.Name               = 'Swashbuckler''s Vest'
		$this.MapObjName         = 'swashbucklersvest'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{ [StatId]::Defense = 5 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A flashy vest that helps with agility and charm.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBeastmastersTunic : BEArmor {
	BEBeastmastersTunic() : base() {
		$this.Name               = 'Beastmaster''s Tunic'
		$this.MapObjName         = 'beastmasterstunic'
		$this.PurchasePrice      = 230
		$this.SellPrice          = 115
		$this.TargetStats        = @{ [StatId]::Defense = 4 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tunic made from tough animal hides, enhances communication with beasts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBardsTunic : BEArmor {
	BEBardsTunic() : base() {
		$this.Name               = 'Bard''s Tunic'
		$this.MapObjName         = 'bardstunic'
		$this.PurchasePrice      = 160
		$this.SellPrice          = 80
		$this.TargetStats        = @{ [StatId]::Defense = 1 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A comfortable and stylish tunic for performers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGloomRobe : BEArmor {
	BEGloomRobe() : base() {
		$this.Name               = 'Gloom Robe'
		$this.MapObjName         = 'gloomrobe'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{ [StatId]::MagicDefense = 14 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark, plain robe for those who prefer to remain unnoticed.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStonehideVest : BEArmor {
	BEStonehideVest() : base() {
		$this.Name               = 'Stonehide Vest'
		$this.MapObjName         = 'stonehidevest'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{ [StatId]::Defense = 9 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest that feels as tough as stone, surprisingly flexible.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECoralCuirass : BEArmor {
	BECoralCuirass() : base() {
		$this.Name               = 'Coral Cuirass'
		$this.MapObjName         = 'coralcuirass'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{ [StatId]::Defense = 15; [StatId]::MagicDefense = 3 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass made from hardened coral, offers water resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarSapphireRobe : BEArmor {
	BEStarSapphireRobe() : base() {
		$this.Name               = 'Star Sapphire Robe'
		$this.MapObjName         = 'starsapphirerobe'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{ [StatId]::MagicDefense = 33 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A deep blue robe embedded with star sapphires, very potent.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEValiantCuirass : BEArmor {
	BEValiantCuirass() : base() {
		$this.Name               = 'Valiant Cuirass'
		$this.MapObjName         = 'valiantcuirass'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{ [StatId]::Defense = 20 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shining cuirass worn by courageous warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarlocksRobe : BEArmor {
	BEWarlocksRobe() : base() {
		$this.Name               = 'Warlock''s Robe'
		$this.MapObjName         = 'warlocksrobe'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{ [StatId]::MagicDefense = 29 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark, ominous robe, often associated with forbidden magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGriffinFeatherVest : BEArmor {
	BEGriffinFeatherVest() : base() {
		$this.Name               = 'Griffin Feather Vest'
		$this.MapObjName         = 'griffinfeathervest'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{ [StatId]::Defense = 16 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest made from the feathers of a griffin, allows for light fall.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFrostfireRobe : BEArmor {
	BEFrostfireRobe() : base() {
		$this.Name               = 'Frostfire Robe'
		$this.MapObjName         = 'frostfirerobe'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{ [StatId]::MagicDefense = 35 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that shimmers with both ice and fire, very volatile.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEternalPlate : BEArmor {
	BEEternalPlate() : base() {
		$this.Name               = 'Eternal Plate'
		$this.MapObjName         = 'eternalplate'
		$this.PurchasePrice      = 4000
		$this.SellPrice          = 2000
		$this.TargetStats        = @{ [StatId]::Defense = 50 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Armor said to be from another dimension, unbreakable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrimsonChainmail : BEArmor {
	BECrimsonChainmail() : base() {
		$this.Name               = 'Crimson Chainmail'
		$this.MapObjName         = 'crimsonchainmail'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{ [StatId]::Defense = 14 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Chainmail dyed crimson, favored by elite guards.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAzureRobe : BEArmor {
	BEAzureRobe() : base() {
		$this.Name               = 'Azure Robe'
		$this.MapObjName         = 'azurerobe'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{ [StatId]::MagicDefense = 31 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A brilliant blue robe, often worn by powerful water mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEForestDwellersTunic : BEArmor {
	BEForestDwellersTunic() : base() {
		$this.Name               = 'Forest Dweller''s Tunic'
		$this.MapObjName         = 'forestdwellerstunic'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{ [StatId]::Defense = 2 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A green tunic that blends in with natural environments.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPoachersVest : BEArmor {
	BEPoachersVest() : base() {
		$this.Name               = 'Poacher''s Vest'
		$this.MapObjName         = 'poachersvest'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{ [StatId]::Defense = 4 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A stealthy vest with many hidden compartments.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlacialBreastplate : BEArmor {
	BEGlacialBreastplate() : base() {
		$this.Name               = 'Glacial Breastplate'
		$this.MapObjName         = 'glacialbreastplate'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{ [StatId]::Defense = 22 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A breastplate emanating a freezing aura, good against fire.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVolcanicRobe : BEArmor {
	BEVolcanicRobe() : base() {
		$this.Name               = 'Volcanic Robe'
		$this.MapObjName         = 'volcanicrobe'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{ [StatId]::MagicDefense = 36 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe made from cooled lava, resisting extreme heat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAbyssalPlate : BEArmor {
	BEAbyssalPlate() : base() {
		$this.Name               = 'Abyssal Plate'
		$this.MapObjName         = 'abyssalplate'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{ [StatId]::Defense = 34 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Plate armor from the deepest parts of the ocean, incredibly tough.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESkyforgedCuirass : BEArmor {
	BESkyforgedCuirass() : base() {
		$this.Name               = 'Skyforged Cuirass'
		$this.MapObjName         = 'skyforgedcuirass'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{ [StatId]::Defense = 28 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass said to be hammered from clouds, very light and strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunkenTreasureRobe : BEArmor {
	BESunkenTreasureRobe() : base() {
		$this.Name               = 'Sunken Treasure Robe'
		$this.MapObjName         = 'sunkentreasurerobe'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{ [StatId]::MagicDefense = 33 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe encrusted with pearls and gems from sunken ships, carries a sea enchantment.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOnyxPlate : BEArmor {
	BEOnyxPlate() : base() {
		$this.Name               = 'Onyx Plate'
		$this.MapObjName         = 'onyxplate'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{ [StatId]::Defense = 31 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Armor crafted from polished black onyx, very heavy and strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESilverThreadedRobe : BEArmor {
	BESilverThreadedRobe() : base() {
		$this.Name               = 'Silver-Threaded Robe'
		$this.MapObjName         = 'silver-threadedrobe'
		$this.PurchasePrice      = 880
		$this.SellPrice          = 440
		$this.TargetStats        = @{ [StatId]::MagicDefense = 25 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe intricately woven with silver threads, enhances defense against dark magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIronboundVest : BEArmor {
	BEIronboundVest() : base() {
		$this.Name               = 'Ironbound Vest'
		$this.MapObjName         = 'ironboundvest'
		$this.PurchasePrice      = 310
		$this.SellPrice          = 155
		$this.TargetStats        = @{ [StatId]::Defense = 7 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest with iron plates sewn into the fabric for added protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWhisperwindTunic : BEArmor {
	BEWhisperwindTunic() : base() {
		$this.Name               = 'Whisperwind Tunic'
		$this.MapObjName         = 'whisperwindtunic'
		$this.PurchasePrice      = 140
		$this.SellPrice          = 70
		$this.TargetStats        = @{ [StatId]::Defense = 1 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A lightweight tunic that barely rustles, ideal for stealth and speed.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESolarCuirass : BEArmor {
	BESolarCuirass() : base() {
		$this.Name               = 'Solar Cuirass'
		$this.MapObjName         = 'solarcuirass'
		$this.PurchasePrice      = 920
		$this.SellPrice          = 460
		$this.TargetStats        = @{ [StatId]::Defense = 17; [StatId]::MagicDefense = 2 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass that radiates a gentle warmth, offering minor fire resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMoonstoneRobe : BEArmor {
	BEMoonstoneRobe() : base() {
		$this.Name               = 'Moonstone Robe'
		$this.MapObjName         = 'moonstonerobe'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{ [StatId]::MagicDefense = 29 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe adorned with glowing moonstones, boosting lunar magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGargoylePlate : BEArmor {
	BEGargoylePlate() : base() {
		$this.Name               = 'Gargoyle Plate'
		$this.MapObjName         = 'gargoyleplate'
		$this.PurchasePrice      = 1750
		$this.SellPrice          = 875
		$this.TargetStats        = @{ [StatId]::Defense = 29 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy, grotesque plate armor carved to resemble a gargoyle.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiritwalkersVest : BEArmor {
	BESpiritwalkersVest() : base() {
		$this.Name               = 'Spiritwalker''s Vest'
		$this.MapObjName         = 'spiritwalkersvest'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{ [StatId]::Defense = 9; [StatId]::MagicDefense = 9 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest that aids in traversing spiritual realms, light but protective.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArcaneWeaveRobe : BEArmor {
	BEArcaneWeaveRobe() : base() {
		$this.Name               = 'Arcane Weave Robe'
		$this.MapObjName         = 'arcaneweaverobe'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{ [StatId]::MagicDefense = 38 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe woven with pure arcane energy, granting significant magical power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlackenedSteelCuirass : BEArmor {
	BEBlackenedSteelCuirass() : base() {
		$this.Name               = 'Blackened Steel Cuirass'
		$this.MapObjName         = 'blackenedsteelcuirass'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{ [StatId]::Defense = 21 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Steel cuirass treated to a dark, menacing finish.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFeyTouchedTunic : BEArmor {
	BEFeyTouchedTunic() : base() {
		$this.Name               = 'Fey-Touched Tunic'
		$this.MapObjName         = 'fey-touchedtunic'
		$this.PurchasePrice      = 260
		$this.SellPrice          = 130
		$this.TargetStats        = @{ [StatId]::MagicDefense = 6 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tunic seemingly woven from forest leaves, offering minor magical resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowStitchedVest : BEArmor {
	BEShadowStitchedVest() : base() {
		$this.Name               = 'Shadow-Stitched Vest'
		$this.MapObjName         = 'shadow-stitchedvest'
		$this.PurchasePrice      = 320
		$this.SellPrice          = 160
		$this.TargetStats        = @{ [StatId]::Defense = 5 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest sewn with threads of shadow, enhancing stealth and evasion.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivineAegisBreastplate : BEArmor {
	BEDivineAegisBreastplate() : base() {
		$this.Name               = 'Divine Aegis Breastplate'
		$this.MapObjName         = 'divineaegisbreastplate'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{ [StatId]::Defense = 24; [StatId]::MagicDefense = 6 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A breastplate radiating holy light, offering strong defense against evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEElementalMastersRobe : BEArmor {
	BEElementalMastersRobe() : base() {
		$this.Name               = 'Elemental Master''s Robe'
		$this.MapObjName         = 'elementalmastersrobe'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{ [StatId]::Defense = 5; [StatId]::MagicDefense = 40 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe imbued with the essence of all four elements, highly versatile.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVenomhideCuirass : BEArmor {
	BEVenomhideCuirass() : base() {
		$this.Name               = 'Venomhide Cuirass'
		$this.MapObjName         = 'venomhidecuirass'
		$this.PurchasePrice      = 980
		$this.SellPrice          = 490
		$this.TargetStats        = @{ [StatId]::Defense = 18 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass made from poisonous beast hide, offering minor toxin resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAstralSilkRobe : BEArmor {
	BEAstralSilkRobe() : base() {
		$this.Name               = 'Astral Silk Robe'
		$this.MapObjName         = 'astralsilkrobe'
		$this.PurchasePrice      = 1650
		$this.SellPrice          = 825
		$this.TargetStats        = @{ [StatId]::MagicDefense = 35 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe made from ethereal silk, allowing slight glimpses into other dimensions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECrystalineBreastplate : BEArmor {
	BECrystalineBreastplate() : base() {
		$this.Name               = 'Crystaline Breastplate'
		$this.MapObjName         = 'crystalinebreastplate'
		$this.PurchasePrice      = 1850
		$this.SellPrice          = 925
		$this.TargetStats        = @{ [StatId]::Defense = 27; [StatId]::MagicDefense = 10 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A breastplate forged from compressed magical crystals, very durable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChronosRobe : BEArmor {
	BEChronosRobe() : base() {
		$this.Name               = 'Chronos Robe'
		$this.MapObjName         = 'chronosrobe'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{ [StatId]::MagicDefense = 39 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that seems to slightly bend time around the wearer, boosting speed.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAbyssalChainmail : BEArmor {
	BEAbyssalChainmail() : base() {
		$this.Name               = 'Abyssal Chainmail'
		$this.MapObjName         = 'abyssalchainmail'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{ [StatId]::Defense = 15 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Chainmail found in the deepest parts of the ocean, resistant to pressure.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDesertWanderersRobe : BEArmor {
	BEDesertWanderersRobe() : base() {
		$this.Name               = 'Desert Wanderer''s Robe'
		$this.MapObjName         = 'desertwanderersrobe'
		$this.PurchasePrice      = 190
		$this.SellPrice          = 95
		$this.TargetStats        = @{ [StatId]::MagicDefense = 7 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light, breathable robe ideal for hot climates, offers minor sun protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneGuardTunic : BEArmor {
	BEStoneGuardTunic() : base() {
		$this.Name               = 'Stone Guard Tunic'
		$this.MapObjName         = 'stoneguardtunic'
		$this.PurchasePrice      = 160
		$this.SellPrice          = 80
		$this.TargetStats        = @{ [StatId]::Defense = 3 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tunic reinforced with small stone plates for basic defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPilgrimsVest : BEArmor {
	BEPilgrimsVest() : base() {
		$this.Name               = 'Pilgrim''s Vest'
		$this.MapObjName         = 'pilgrimsvest'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{  }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple, durable vest for long journeys of faith.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAlchemistsApron : BEArmor {
	BEAlchemistsApron() : base() {
		$this.Name               = 'Alchemist''s Apron'
		$this.MapObjName         = 'alchemistsapron'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{ [StatId]::Defense = 1 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sturdy apron with many pockets, useful for potion crafting.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamersRobe : BEArmor {
	BEDreamersRobe() : base() {
		$this.Name               = 'Dreamer''s Robe'
		$this.MapObjName         = 'dreamersrobe'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{ [StatId]::MagicDefense = 13 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A soft robe that aids in lucid dreaming, enhancing magical recovery.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERiverstoneVest : BEArmor {
	BERiverstoneVest() : base() {
		$this.Name               = 'Riverstone Vest'
		$this.MapObjName         = 'riverstonevest'
		$this.PurchasePrice      = 220
		$this.SellPrice          = 110
		$this.TargetStats        = @{ [StatId]::Defense = 4 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest embedded with smooth river stones, offering minor water resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFrostweaveRobe : BEArmor {
	BEFrostweaveRobe() : base() {
		$this.Name               = 'Frostweave Robe'
		$this.MapObjName         = 'frostweaverobe'
		$this.PurchasePrice      = 780
		$this.SellPrice          = 390
		$this.TargetStats        = @{ [StatId]::MagicDefense = 22 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe woven from icy fibers, providing cold resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlimmeringChainmail : BEArmor {
	BEGlimmeringChainmail() : base() {
		$this.Name               = 'Glimmering Chainmail'
		$this.MapObjName         = 'glimmeringchainmail'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{ [StatId]::Defense = 12; [StatId]::MagicDefense = 1 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Chainmail that catches the light and subtly disorients foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWyvernBoneCuirass : BEArmor {
	BEWyvernBoneCuirass() : base() {
		$this.Name               = 'Wyvern Bone Cuirass'
		$this.MapObjName         = 'wyvernbonecuirass'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{ [StatId]::Defense = 23 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass crafted from the bones of a wyvern, lightweight yet strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECelestialMessengersRobe : BEArmor {
	BECelestialMessengersRobe() : base() {
		$this.Name               = 'Celestial Messenger''s Robe'
		$this.MapObjName         = 'celestialmessengersrobe'
		$this.PurchasePrice      = 1750
		$this.SellPrice          = 875
		$this.TargetStats        = @{ [StatId]::MagicDefense = 36 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe said to be worn by celestial beings, granting wisdom and foresight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGolemPlating : BEArmor {
	BEGolemPlating() : base() {
		$this.Name               = 'Golem Plating'
		$this.MapObjName         = 'golemplating'
		$this.PurchasePrice      = 2400
		$this.SellPrice          = 1200
		$this.TargetStats        = @{ [StatId]::Defense = 34 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Sections of golem plating fashioned into a heavy torso armor.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulfireRobe : BEArmor {
	BESoulfireRobe() : base() {
		$this.Name               = 'Soulfire Robe'
		$this.MapObjName         = 'soulfirerobe'
		$this.PurchasePrice      = 1950
		$this.SellPrice          = 975
		$this.TargetStats        = @{ [StatId]::MagicDefense = 37 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe imbued with captured souls, radiating dark energy and boosting spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEObsidianGuardVest : BEArmor {
	BEObsidianGuardVest() : base() {
		$this.Name               = 'Obsidian Guard Vest'
		$this.MapObjName         = 'obsidianguardvest'
		$this.PurchasePrice      = 480
		$this.SellPrice          = 240
		$this.TargetStats        = @{ [StatId]::Defense = 10 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest reinforced with shards of obsidian, offering sharp defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEmeraldRobe : BEArmor {
	BEEmeraldRobe() : base() {
		$this.Name               = 'Emerald Robe'
		$this.MapObjName         = 'emeraldrobe'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{ [StatId]::MagicDefense = 26 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vibrant green robe adorned with emeralds, enhancing nature magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERunicBreastplate : BEArmor {
	BERunicBreastplate() : base() {
		$this.Name               = 'Runic Breastplate'
		$this.MapObjName         = 'runicbreastplate'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{ [StatId]::Defense = 25; [StatId]::MagicDefense = 5 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A breastplate etched with protective runes, offering strong magical defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStardustRobe : BEArmor {
	BEStardustRobe() : base() {
		$this.Name               = 'Stardust Robe'
		$this.MapObjName         = 'stardustrobe'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{ [StatId]::MagicDefense = 34 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that shimmers like scattered stardust, boosting cosmic magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVikingChainmail : BEArmor {
	BEVikingChainmail() : base() {
		$this.Name               = 'Viking Chainmail'
		$this.MapObjName         = 'vikingchainmail'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{ [StatId]::Defense = 13 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy, sturdy chainmail favored by northern warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreadKnightsCuirass : BEArmor {
	BEDreadKnightsCuirass() : base() {
		$this.Name               = 'Dread Knight''s Cuirass'
		$this.MapObjName         = 'dreadknightscuirass'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{ [StatId]::Defense = 29 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A terrifying black cuirass, instilling fear in enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAetherRobe : BEArmor {
	BEAetherRobe() : base() {
		$this.Name               = 'Aether Robe'
		$this.MapObjName         = 'aetherrobe'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{ [StatId]::MagicDefense = 30 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A translucent robe that seems to shift with air currents, very light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChimeraHideVest : BEArmor {
	BEChimeraHideVest() : base() {
		$this.Name               = 'Chimera Hide Vest'
		$this.MapObjName         = 'chimerahidevest'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{ [StatId]::Defense = 20 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest made from the hides of various monstrous creatures, granting varied resistances.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVampiricRobe : BEArmor {
	BEVampiricRobe() : base() {
		$this.Name               = 'Vampiric Robe'
		$this.MapObjName         = 'vampiricrobe'
		$this.PurchasePrice      = 1550
		$this.SellPrice          = 775
		$this.TargetStats        = @{ [StatId]::Defense = 3; [StatId]::MagicDefense = 32 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that subtly drains life from enemies during combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStormforgedPlate : BEArmor {
	BEStormforgedPlate() : base() {
		$this.Name               = 'Stormforged Plate'
		$this.MapObjName         = 'stormforgedplate'
		$this.PurchasePrice      = 2600
		$this.SellPrice          = 1300
		$this.TargetStats        = @{ [StatId]::Defense = 35 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Plate armor that hums with static electricity, resisting lightning.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEchoingRobe : BEArmor {
	BEEchoingRobe() : base() {
		$this.Name               = 'Echoing Robe'
		$this.MapObjName         = 'echoingrobe'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{ [StatId]::MagicDefense = 38 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that amplifies spells, but leaves residual magical echoes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETitansLegacyBreastplate : BEArmor {
	BETitansLegacyBreastplate() : base() {
		$this.Name               = 'Titan''s Legacy Breastplate'
		$this.MapObjName         = 'titanslegacybreastplate'
		$this.PurchasePrice      = 2900
		$this.SellPrice          = 1450
		$this.TargetStats        = @{ [StatId]::Defense = 39 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A breastplate said to be a fragment of a titan''s armor, immense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamcatcherVest : BEArmor {
	BEDreamcatcherVest() : base() {
		$this.Name               = 'Dreamcatcher Vest'
		$this.MapObjName         = 'dreamcatchervest'
		$this.PurchasePrice      = 380
		$this.SellPrice          = 190
		$this.TargetStats        = @{ [StatId]::MagicDefense = 10 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest woven with mystical strands, protecting against magical sleep.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunkenPlate : BEArmor {
	BESunkenPlate() : base() {
		$this.Name               = 'Sunken Plate'
		$this.MapObjName         = 'sunkenplate'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{ [StatId]::Defense = 33 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy plate armor encrusted with barnacles, very resistant to water.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrimsonWitchsGown : BEArmor {
	BECrimsonWitchsGown() : base() {
		$this.Name               = 'Crimson Witch''s Gown'
		$this.MapObjName         = 'crimsonwitchsgown'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{ [StatId]::MagicDefense = 30 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A deep crimson gown, enhancing dark and fire-based magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BERoseSilkRobe : BEArmor {
	BERoseSilkRobe() : base() {
		$this.Name               = 'Rose Silk Robe'
		$this.MapObjName         = 'rosesilkrobe'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{ [StatId]::MagicDefense = 17 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A delicate pink silk robe, often worn by charming mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMaidensChainmail : BEArmor {
	BEMaidensChainmail() : base() {
		$this.Name               = 'Maiden''s Chainmail'
		$this.MapObjName         = 'maidenschainmail'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{ [StatId]::Defense = 9 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Lighter, more flexible chainmail designed for female warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEEnchantedCorset : BEArmor {
	BEEnchantedCorset() : base() {
		$this.Name               = 'Enchanted Corset'
		$this.MapObjName         = 'enchantedcorset'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{ [StatId]::Defense = 2; [StatId]::MagicDefense = 5 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A reinforced corset imbued with minor protective enchantments.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGoddesssGown : BEArmor {
	BEGoddesssGown() : base() {
		$this.Name               = 'Goddess''s Gown'
		$this.MapObjName         = 'goddesssgown'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{ [StatId]::MagicDefense = 40 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A radiant gown said to be blessed by a deity, offering divine protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEVixensVest : BEArmor {
	BEVixensVest() : base() {
		$this.Name               = 'Vixen''s Vest'
		$this.MapObjName         = 'vixensvest'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{ [StatId]::Defense = 5 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sleek, dark vest, often worn by agile and cunning female rogues.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEEmpresssRobe : BEArmor {
	BEEmpresssRobe() : base() {
		$this.Name               = 'Empress''s Robe'
		$this.MapObjName         = 'empresssrobe'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{ [StatId]::MagicDefense = 32 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A regal robe, richly embroidered and imbued with subtle power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMoonlitDress : BEArmor {
	BEMoonlitDress() : base() {
		$this.Name               = 'Moonlit Dress'
		$this.MapObjName         = 'moonlitdress'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{ [StatId]::MagicDefense = 23 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A flowing dress that glows softly in the moonlight, enhancing illusion magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDiamondCuirass : BEArmor {
	BEDiamondCuirass() : base() {
		$this.Name               = 'Diamond Cuirass'
		$this.MapObjName         = 'diamondcuirass'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{ [StatId]::Defense = 28 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A sparkling cuirass inlaid with diamonds, very durable and beautiful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEForestNymphsTunic : BEArmor {
	BEForestNymphsTunic() : base() {
		$this.Name               = 'Forest Nymph''s Tunic'
		$this.MapObjName         = 'forestnymphstunic'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{ [StatId]::MagicDefense = 6 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A tunic made from living leaves and moss, blending with nature.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBattleMaidensPlate : BEArmor {
	BEBattleMaidensPlate() : base() {
		$this.Name               = 'Battle Maiden''s Plate'
		$this.MapObjName         = 'battlemaidensplate'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{ [StatId]::Defense = 21 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Sturdy plate armor designed for female warriors, allowing flexibility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEQueenofThornsRobe : BEArmor {
	BEQueenofThornsRobe() : base() {
		$this.Name               = 'Queen of Thorns Robe'
		$this.MapObjName         = 'queenofthornsrobe'
		$this.PurchasePrice      = 1450
		$this.SellPrice          = 725
		$this.TargetStats        = @{ [StatId]::Defense = 2; [StatId]::MagicDefense = 31 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark, thorny robe, providing protection and minor offensive capabilities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESpiritDancersBlouse : BEArmor {
	BESpiritDancersBlouse() : base() {
		$this.Name               = 'Spirit Dancer''s Blouse'
		$this.MapObjName         = 'spiritdancersblouse'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{ [StatId]::MagicDefense = 7 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light blouse that enhances agility and spiritual connection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECrimsonCourtGown : BEArmor {
	BECrimsonCourtGown() : base() {
		$this.Name               = 'Crimson Court Gown'
		$this.MapObjName         = 'crimsoncourtgown'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{ [StatId]::MagicDefense = 10 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A luxurious crimson gown, granting slight magical allure.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEShadowHuntresssVest : BEArmor {
	BEShadowHuntresssVest() : base() {
		$this.Name               = 'Shadow Huntress''s Vest'
		$this.MapObjName         = 'shadowhuntresssvest'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{ [StatId]::Defense = 6 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark vest optimized for stealth and ranged attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECelestialSorceressGown : BEArmor {
	BECelestialSorceressGown() : base() {
		$this.Name               = 'Celestial Sorceress Gown'
		$this.MapObjName         = 'celestialsorceressgown'
		$this.PurchasePrice      = 2300
		$this.SellPrice          = 1150
		$this.TargetStats        = @{ [StatId]::MagicDefense = 44 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A magnificent gown adorned with celestial patterns, immensely powerful for magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDesertRoseDress : BEArmor {
	BEDesertRoseDress() : base() {
		$this.Name               = 'Desert Rose Dress'
		$this.MapObjName         = 'desertrosedress'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{ [StatId]::MagicDefense = 4 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A light, airy dress, comfortable in hot climates, with minor fire resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWinterMaidensRobe : BEArmor {
	BEWinterMaidensRobe() : base() {
		$this.Name               = 'Winter Maiden''s Robe'
		$this.MapObjName         = 'wintermaidensrobe'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{ [StatId]::MagicDefense = 27 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that emanates a chilling aura, providing strong cold resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWarriorQueensBreastplate : BEArmor {
	BEWarriorQueensBreastplate() : base() {
		$this.Name               = 'Warrior Queen''s Breastplate'
		$this.MapObjName         = 'warriorqueensbreastplate'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{ [StatId]::Defense = 31 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A fearsome breastplate worn by a powerful female leader.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGothicVest : BEArmor {
	BEGothicVest() : base() {
		$this.Name               = 'Gothic Vest'
		$this.MapObjName         = 'gothicvest'
		$this.PurchasePrice      = 380
		$this.SellPrice          = 190
		$this.TargetStats        = @{ [StatId]::Defense = 8 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A dark, layered vest with ornate buckles, offers good defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBonePlate : BEArmor {
	BEBonePlate() : base() {
		$this.Name               = 'Bone Plate'
		$this.MapObjName         = 'boneplate'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{ [StatId]::Defense = 13 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Armor crafted from hardened bones, eerie but effective.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDeepSeaRobe : BEArmor {
	BEDeepSeaRobe() : base() {
		$this.Name               = 'Deep Sea Robe'
		$this.MapObjName         = 'deepsearobe'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{ [StatId]::MagicDefense = 28 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe woven from rare deep-sea fibers, offers strong water resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVolatileVest : BEArmor {
	BEVolatileVest() : base() {
		$this.Name               = 'Volatile Vest'
		$this.MapObjName         = 'volatilevest'
		$this.PurchasePrice      = 420
		$this.SellPrice          = 210
		$this.TargetStats        = @{ [StatId]::Defense = 7; [StatId]::MagicDefense = 7 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A vest that sometimes explodes with magical energy, risky but powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEldritchRobe : BEArmor {
	BEEldritchRobe() : base() {
		$this.Name               = 'Eldritch Robe'
		$this.MapObjName         = 'eldritchrobe'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{ [StatId]::MagicDefense = 36 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A robe that subtly shifts patterns, enhancing forbidden magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidWeaversCuirass : BEArmor {
	BEVoidWeaversCuirass() : base() {
		$this.Name               = 'Void Weaver''s Cuirass'
		$this.MapObjName         = 'voidweaverscuirass'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{ [StatId]::Defense = 30 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A cuirass that seems to absorb all light, making the wearer harder to hit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

#endregion





#region Pauldrons

Class BEWovenPauldron : BEPauldron {
	BEWovenPauldron() : base() {
		$this.Name               = 'Woven Pauldron'
		$this.MapObjName         = 'wovenpauldron'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{ [StatId]::Defense = 2 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A simple pauldron woven from sturdy fibers. Offers basic protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELeatherPauldron : BEPauldron {
	BELeatherPauldron() : base() {
		$this.Name               = 'Leather Pauldron'
		$this.MapObjName         = 'leatherpauldron'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{ [StatId]::Defense = 3 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crafted from cured leather, providing light defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStuddedPauldron : BEPauldron {
	BEStuddedPauldron() : base() {
		$this.Name               = 'Studded Pauldron'
		$this.MapObjName         = 'studdedpauldron'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{ [StatId]::Defense = 4 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Leather pauldron reinforced with metal studs for added protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChainPauldron : BEPauldron {
	BEChainPauldron() : base() {
		$this.Name               = 'Chain Pauldron'
		$this.MapObjName         = 'chainpauldron'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{ [StatId]::Defense = 5 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Interlocking metal rings form a flexible and protective pauldron.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEScalePauldron : BEPauldron {
	BEScalePauldron() : base() {
		$this.Name               = 'Scale Pauldron'
		$this.MapObjName         = 'scalepauldron'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{ [StatId]::Defense = 6 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Overlapping metal scales provide good defense against various attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBronzePauldron : BEPauldron {
	BEBronzePauldron() : base() {
		$this.Name               = 'Bronze Pauldron'
		$this.MapObjName         = 'bronzepauldron'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{ [StatId]::Defense = 7 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Solid bronze pauldron offering decent protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIronPauldron : BEPauldron {
	BEIronPauldron() : base() {
		$this.Name               = 'Iron Pauldron'
		$this.MapObjName         = 'ironpauldron'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{ [StatId]::Defense = 8 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy iron pauldron, providing substantial physical defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESteelPauldron : BEPauldron {
	BESteelPauldron() : base() {
		$this.Name               = 'Steel Pauldron'
		$this.MapObjName         = 'steelpauldron'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{ [StatId]::Defense = 9 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Forged from strong steel, a reliable choice for warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMithrilPauldron : BEPauldron {
	BEMithrilPauldron() : base() {
		$this.Name               = 'Mithril Pauldron'
		$this.MapObjName         = 'mithrilpauldron'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{ [StatId]::Defense = 10 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Lightweight yet incredibly strong, favored by agile fighters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAdamantPauldron : BEPauldron {
	BEAdamantPauldron() : base() {
		$this.Name               = 'Adamant Pauldron'
		$this.MapObjName         = 'adamantpauldron'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{ [StatId]::Defense = 11 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Legendary metal pauldron, offering immense protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonhidePauldron : BEPauldron {
	BEDragonhidePauldron() : base() {
		$this.Name               = 'Dragonhide Pauldron'
		$this.MapObjName         = 'dragonhidepauldron'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{ [StatId]::Defense = 12 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crafted from the tough hide of a dragon, resistant to many elements.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERunedPauldron : BEPauldron {
	BERunedPauldron() : base() {
		$this.Name               = 'Runed Pauldron'
		$this.MapObjName         = 'runedpauldron'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{ [StatId]::Defense = 13; [StatId]::MagicDefense = 1 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Etched with ancient runes, granting minor magical resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHeroicPauldron : BEPauldron {
	BEHeroicPauldron() : base() {
		$this.Name               = 'Heroic Pauldron'
		$this.MapObjName         = 'heroicpauldron'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{ [StatId]::Defense = 14 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pauldron worn by heroes of old, imbued with fighting spirit.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEValiantPauldron : BEPauldron {
	BEValiantPauldron() : base() {
		$this.Name               = 'Valiant Pauldron'
		$this.MapObjName         = 'valiantpauldron'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{ [StatId]::Defense = 15 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Signifies courage and strength, often worn by knights.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGloriousPauldron : BEPauldron {
	BEGloriousPauldron() : base() {
		$this.Name               = 'Glorious Pauldron'
		$this.MapObjName         = 'gloriouspauldron'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{ [StatId]::Defense = 16 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A shining pauldron, symbolizing victory and honor.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEChampionsPauldron : BEPauldron {
	BEChampionsPauldron() : base() {
		$this.Name               = 'Champion''s Pauldron'
		$this.MapObjName         = 'championspauldron'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{ [StatId]::Defense = 17 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by the undefeated champions of the arena.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECommandersPauldron : BEPauldron {
	BECommandersPauldron() : base() {
		$this.Name               = 'Commander''s Pauldron'
		$this.MapObjName         = 'commanderspauldron'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{ [StatId]::Defense = 18 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grants authority and inspires allies on the battlefield.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEWarlordsPauldron : BEPauldron {
	BEWarlordsPauldron() : base() {
		$this.Name               = 'Warlord''s Pauldron'
		$this.MapObjName         = 'warlordspauldron'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{ [StatId]::Defense = 19 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy and menacing, favored by fierce military leaders.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BERoyalGuardPauldron : BEPauldron {
	BERoyalGuardPauldron() : base() {
		$this.Name               = 'Royal Guard Pauldron'
		$this.MapObjName         = 'royalguardpauldron'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{ [StatId]::Defense = 20 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Issued to the elite protectors of the monarchy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESacredPauldron : BEPauldron {
	BESacredPauldron() : base() {
		$this.Name               = 'Sacred Pauldron'
		$this.MapObjName         = 'sacredpauldron'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{ [StatId]::Defense = 21; [StatId]::MagicDefense = 1 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blessed by divine power, offering protection against evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEPaladinPauldron : BEPauldron {
	BEPaladinPauldron() : base() {
		$this.Name               = 'Paladin Pauldron'
		$this.MapObjName         = 'paladinpauldron'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{ [StatId]::Defense = 22; [StatId]::MagicDefense = 2 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by holy warriors dedicated to justice.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECrusaderPauldron : BEPauldron {
	BECrusaderPauldron() : base() {
		$this.Name               = 'Crusader Pauldron'
		$this.MapObjName         = 'crusaderpauldron'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{ [StatId]::Defense = 23 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy and imposing, a symbol of unwavering faith.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESentinelPauldron : BEPauldron {
	BESentinelPauldron() : base() {
		$this.Name               = 'Sentinel Pauldron'
		$this.MapObjName         = 'sentinelpauldron'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{ [StatId]::Defense = 24 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Designed for vigilant guardians, offering superior defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGuardiansPauldron : BEPauldron {
	BEGuardiansPauldron() : base() {
		$this.Name               = 'Guardian''s Pauldron'
		$this.MapObjName         = 'guardianspauldron'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{ [StatId]::Defense = 25; [StatId]::MagicDefense = 3 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Imbued with protective magic, shielding its wearer from harm.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDragonbonePauldron : BEPauldron {
	BEDragonbonePauldron() : base() {
		$this.Name               = 'Dragonbone Pauldron'
		$this.MapObjName         = 'dragonbonepauldron'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{ [StatId]::Defense = 26 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Forged from the bones of a fallen dragon, incredibly durable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESoulboundPauldron : BEPauldron {
	BESoulboundPauldron() : base() {
		$this.Name               = 'Soulbound Pauldron'
		$this.MapObjName         = 'soulboundpauldron'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{ [StatId]::Defense = 27 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Binds to its wearer, enhancing their fighting prowess.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEVanguardPauldron : BEPauldron {
	BEVanguardPauldron() : base() {
		$this.Name               = 'Vanguard Pauldron'
		$this.MapObjName         = 'vanguardpauldron'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{ [StatId]::Defense = 28 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Leads the charge, offering robust protection in the front lines.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBulwarkPauldron : BEPauldron {
	BEBulwarkPauldron() : base() {
		$this.Name               = 'Bulwark Pauldron'
		$this.MapObjName         = 'bulwarkpauldron'
		$this.PurchasePrice      = 1450
		$this.SellPrice          = 725
		$this.TargetStats        = @{ [StatId]::Defense = 29 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'An impenetrable defense, almost impossible to breach.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEFortressPauldron : BEPauldron {
	BEFortressPauldron() : base() {
		$this.Name               = 'Fortress Pauldron'
		$this.MapObjName         = 'fortresspauldron'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{ [StatId]::Defense = 30 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Turns its wearer into a walking fortress, unyielding.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BETitansPauldron : BEPauldron {
	BETitansPauldron() : base() {
		$this.Name               = 'Titan''s Pauldron'
		$this.MapObjName         = 'titanspauldron'
		$this.PurchasePrice      = 1550
		$this.SellPrice          = 775
		$this.TargetStats        = @{ [StatId]::Defense = 31 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Said to have been worn by a Titan, incredibly powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEWarriorMaidenPauldron : BEPauldron {
	BEWarriorMaidenPauldron() : base() {
		$this.Name               = 'Warrior Maiden Pauldron'
		$this.MapObjName         = 'warriormaidenpauldron'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{ [StatId]::Defense = 14 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Designed for courageous female warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEAmazonianPauldron : BEPauldron {
	BEAmazonianPauldron() : base() {
		$this.Name               = 'Amazonian Pauldron'
		$this.MapObjName         = 'amazonianpauldron'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{ [StatId]::Defense = 15 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by the legendary Amazons, light yet strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEValkyriePauldron : BEPauldron {
	BEValkyriePauldron() : base() {
		$this.Name               = 'Valkyrie Pauldron'
		$this.MapObjName         = 'valkyriepauldron'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{ [StatId]::Defense = 16 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Shines with divine light, granting protection to its wearer.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEHuntressPauldron : BEPauldron {
	BEHuntressPauldron() : base() {
		$this.Name               = 'Huntress Pauldron'
		$this.MapObjName         = 'huntresspauldron'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{ [StatId]::Defense = 17 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows for agile movement while offering decent protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEShieldmaidensPauldron : BEPauldron {
	BEShieldmaidensPauldron() : base() {
		$this.Name               = 'Shieldmaiden''s Pauldron'
		$this.MapObjName         = 'shieldmaidenspauldron'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{ [StatId]::Defense = 18 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by fierce shieldmaidens, providing robust defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDaughteroftheForestPauldron : BEPauldron {
	BEDaughteroftheForestPauldron() : base() {
		$this.Name               = 'Daughter of the Forest Pauldron'
		$this.MapObjName         = 'daughteroftheforestpauldron'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{ [StatId]::Defense = 19 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blends with nature, offering subtle protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEQueensGuardPauldron : BEPauldron {
	BEQueensGuardPauldron() : base() {
		$this.Name               = 'Queen''s Guard Pauldron'
		$this.MapObjName         = 'queensguardpauldron'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{ [StatId]::Defense = 20 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Elegant yet strong, worn by the elite protectors of the queen.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDivineMaidenPauldron : BEPauldron {
	BEDivineMaidenPauldron() : base() {
		$this.Name               = 'Divine Maiden Pauldron'
		$this.MapObjName         = 'divinemaidenpauldron'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{ [StatId]::Defense = 21; [StatId]::MagicDefense = 1 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blessed by ancient goddesses, warding off malevolent forces.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEPriestessPauldron : BEPauldron {
	BEPriestessPauldron() : base() {
		$this.Name               = 'Priestess Pauldron'
		$this.MapObjName         = 'priestesspauldron'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{ [StatId]::Defense = 22; [StatId]::MagicDefense = 2 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by holy priestesses, offering both defense and spiritual aid.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEMysticPauldron : BEPauldron {
	BEMysticPauldron() : base() {
		$this.Name               = 'Mystic Pauldron'
		$this.MapObjName         = 'mysticpauldron'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{ [StatId]::Defense = 23; [StatId]::MagicDefense = 4 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Imbued with arcane energies, enhancing magical defenses.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESorcerersPauldron : BEPauldron {
	BESorcerersPauldron() : base() {
		$this.Name               = 'Sorcerer''s Pauldron'
		$this.MapObjName         = 'sorcererspauldron'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{ [StatId]::Defense = 24; [StatId]::MagicDefense = 5 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Favored by powerful sorcerers, enhancing their spellcasting.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArchmagePauldron : BEPauldron {
	BEArchmagePauldron() : base() {
		$this.Name               = 'Archmage Pauldron'
		$this.MapObjName         = 'archmagepauldron'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{ [StatId]::Defense = 25; [StatId]::MagicDefense = 6 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pauldron of immense magical power, worn by master mages.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarlockPauldron : BEPauldron {
	BEWarlockPauldron() : base() {
		$this.Name               = 'Warlock Pauldron'
		$this.MapObjName         = 'warlockpauldron'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{ [StatId]::Defense = 26; [StatId]::MagicDefense = 7 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Dark and potent, for those who wield forbidden magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEnchantersPauldron : BEPauldron {
	BEEnchantersPauldron() : base() {
		$this.Name               = 'Enchanter''s Pauldron'
		$this.MapObjName         = 'enchanterspauldron'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{ [StatId]::Defense = 27; [StatId]::MagicDefense = 8 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Enhances enchantments and magical effects.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESagesPauldron : BEPauldron {
	BESagesPauldron() : base() {
		$this.Name               = 'Sage''s Pauldron'
		$this.MapObjName         = 'sagespauldron'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{ [StatId]::Defense = 28; [StatId]::MagicDefense = 9 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by wise sages, granting insight and magical prowess.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENecromancerPauldron : BEPauldron {
	BENecromancerPauldron() : base() {
		$this.Name               = 'Necromancer Pauldron'
		$this.MapObjName         = 'necromancerpauldron'
		$this.PurchasePrice      = 1450
		$this.SellPrice          = 725
		$this.TargetStats        = @{ [StatId]::Defense = 29; [StatId]::MagicDefense = 10 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows for manipulation of the undead, dark and chilling.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELichPauldron : BEPauldron {
	BELichPauldron() : base() {
		$this.Name               = 'Lich Pauldron'
		$this.MapObjName         = 'lichpauldron'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{ [StatId]::Defense = 30; [StatId]::MagicDefense = 11 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A relic of immense power, brimming with dark magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEElementalPauldron : BEPauldron {
	BEElementalPauldron() : base() {
		$this.Name               = 'Elemental Pauldron'
		$this.MapObjName         = 'elementalpauldron'
		$this.PurchasePrice      = 1550
		$this.SellPrice          = 775
		$this.TargetStats        = @{ [StatId]::Defense = 31; [StatId]::MagicDefense = 12 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Channels the power of the elements, offering varied resistances.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAstralPauldron : BEPauldron {
	BEAstralPauldron() : base() {
		$this.Name               = 'Astral Pauldron'
		$this.MapObjName         = 'astralpauldron'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{ [StatId]::Defense = 32; [StatId]::MagicDefense = 13 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Said to be woven from starlight, offering cosmic protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowPauldron : BEPauldron {
	BEShadowPauldron() : base() {
		$this.Name               = 'Shadow Pauldron'
		$this.MapObjName         = 'shadowpauldron'
		$this.PurchasePrice      = 1650
		$this.SellPrice          = 825
		$this.TargetStats        = @{ [StatId]::Defense = 33; [StatId]::MagicDefense = 14 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grants concealment and enhances stealth, for those who walk in shadows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAssassinsPauldron : BEPauldron {
	BEAssassinsPauldron() : base() {
		$this.Name               = 'Assassin''s Pauldron'
		$this.MapObjName         = 'assassinspauldron'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{ [StatId]::Defense = 34 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light and agile, perfect for striking from the shadows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BERoguePauldron : BEPauldron {
	BERoguePauldron() : base() {
		$this.Name               = 'Rogue Pauldron'
		$this.MapObjName         = 'roguepauldron'
		$this.PurchasePrice      = 1750
		$this.SellPrice          = 875
		$this.TargetStats        = @{ [StatId]::Defense = 35 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Designed for cunning rogues, offering minimal hindrance to movement.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEThiefsPauldron : BEPauldron {
	BEThiefsPauldron() : base() {
		$this.Name               = 'Thief''s Pauldron'
		$this.MapObjName         = 'thiefspauldron'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{ [StatId]::Defense = 36 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows for quick escapes and silent movement.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEScoutPauldron : BEPauldron {
	BEScoutPauldron() : base() {
		$this.Name               = 'Scout Pauldron'
		$this.MapObjName         = 'scoutpauldron'
		$this.PurchasePrice      = 1850
		$this.SellPrice          = 925
		$this.TargetStats        = @{ [StatId]::Defense = 37 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Lightweight and practical for long journeys and reconnaissance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEHuntersPauldron : BEPauldron {
	BEHuntersPauldron() : base() {
		$this.Name               = 'Hunter''s Pauldron'
		$this.MapObjName         = 'hunterspauldron'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{ [StatId]::Defense = 38 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Provides decent protection without sacrificing mobility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBrigandsPauldron : BEPauldron {
	BEBrigandsPauldron() : base() {
		$this.Name               = 'Brigand''s Pauldron'
		$this.MapObjName         = 'brigandspauldron'
		$this.PurchasePrice      = 1950
		$this.SellPrice          = 975
		$this.TargetStats        = @{ [StatId]::Defense = 39 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Roughly made but effective for those who live by their wits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEOutlawPauldron : BEPauldron {
	BEOutlawPauldron() : base() {
		$this.Name               = 'Outlaw Pauldron'
		$this.MapObjName         = 'outlawpauldron'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{ [StatId]::Defense = 40 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Favored by those who operate outside the law.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMaraudersPauldron : BEPauldron {
	BEMaraudersPauldron() : base() {
		$this.Name               = 'Marauder''s Pauldron'
		$this.MapObjName         = 'marauderspauldron'
		$this.PurchasePrice      = 2050
		$this.SellPrice          = 1025
		$this.TargetStats        = @{ [StatId]::Defense = 41 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Aggressive and functional, for those who take what they want.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BENomadPauldron : BEPauldron {
	BENomadPauldron() : base() {
		$this.Name               = 'Nomad Pauldron'
		$this.MapObjName         = 'nomadpauldron'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{ [StatId]::Defense = 42 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Practical and durable for endless journeys.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEWanderersPauldron : BEPauldron {
	BEWanderersPauldron() : base() {
		$this.Name               = 'Wanderer''s Pauldron'
		$this.MapObjName         = 'wandererspauldron'
		$this.PurchasePrice      = 2150
		$this.SellPrice          = 1075
		$this.TargetStats        = @{ [StatId]::Defense = 43 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by those who roam the wilderness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEPathfinderPauldron : BEPauldron {
	BEPathfinderPauldron() : base() {
		$this.Name               = 'Pathfinder Pauldron'
		$this.MapObjName         = 'pathfinderpauldron'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{ [StatId]::Defense = 44 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Aids in navigating difficult terrain and evading threats.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEExplorersPauldron : BEPauldron {
	BEExplorersPauldron() : base() {
		$this.Name               = 'Explorer''s Pauldron'
		$this.MapObjName         = 'explorerspauldron'
		$this.PurchasePrice      = 2250
		$this.SellPrice          = 1125
		$this.TargetStats        = @{ [StatId]::Defense = 45 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'For venturing into uncharted territories, offering decent protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BETravelersPauldron : BEPauldron {
	BETravelersPauldron() : base() {
		$this.Name               = 'Traveler''s Pauldron'
		$this.MapObjName         = 'travelerspauldron'
		$this.PurchasePrice      = 2300
		$this.SellPrice          = 1150
		$this.TargetStats        = @{ [StatId]::Defense = 46 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Comfortable and reliable for long expeditions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESurvivorsPauldron : BEPauldron {
	BESurvivorsPauldron() : base() {
		$this.Name               = 'Survivor''s Pauldron'
		$this.MapObjName         = 'survivorspauldron'
		$this.PurchasePrice      = 2350
		$this.SellPrice          = 1175
		$this.TargetStats        = @{ [StatId]::Defense = 47 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Shows signs of wear but has endured countless hardships.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEFrontierPauldron : BEPauldron {
	BEFrontierPauldron() : base() {
		$this.Name               = 'Frontier Pauldron'
		$this.MapObjName         = 'frontierpauldron'
		$this.PurchasePrice      = 2400
		$this.SellPrice          = 1200
		$this.TargetStats        = @{ [StatId]::Defense = 48 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Suited for the untamed wilds, offering rugged defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEWastelandPauldron : BEPauldron {
	BEWastelandPauldron() : base() {
		$this.Name               = 'Wasteland Pauldron'
		$this.MapObjName         = 'wastelandpauldron'
		$this.PurchasePrice      = 2450
		$this.SellPrice          = 1225
		$this.TargetStats        = @{ [StatId]::Defense = 49 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Salvaged and reinforced, offering protection in desolate lands.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BERebelPauldron : BEPauldron {
	BERebelPauldron() : base() {
		$this.Name               = 'Rebel Pauldron'
		$this.MapObjName         = 'rebelpauldron'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{ [StatId]::Defense = 50 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A symbol of defiance, for those who fight against oppression.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDesertWalkerPauldron : BEPauldron {
	BEDesertWalkerPauldron() : base() {
		$this.Name               = 'Desert Walker Pauldron'
		$this.MapObjName         = 'desertwalkerpauldron'
		$this.PurchasePrice      = 2550
		$this.SellPrice          = 1275
		$this.TargetStats        = @{ [StatId]::Defense = 51 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Designed for endurance in arid environments.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMountainClimberPauldron : BEPauldron {
	BEMountainClimberPauldron() : base() {
		$this.Name               = 'Mountain Climber Pauldron'
		$this.MapObjName         = 'mountainclimberpauldron'
		$this.PurchasePrice      = 2600
		$this.SellPrice          = 1300
		$this.TargetStats        = @{ [StatId]::Defense = 52 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Aids in scaling peaks and offers protection against falling debris.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGlacierPauldron : BEPauldron {
	BEGlacierPauldron() : base() {
		$this.Name               = 'Glacier Pauldron'
		$this.MapObjName         = 'glacierpauldron'
		$this.PurchasePrice      = 2650
		$this.SellPrice          = 1325
		$this.TargetStats        = @{ [StatId]::Defense = 53 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Provides warmth and protection in freezing conditions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESwamplandPauldron : BEPauldron {
	BESwamplandPauldron() : base() {
		$this.Name               = 'Swampland Pauldron'
		$this.MapObjName         = 'swamplandpauldron'
		$this.PurchasePrice      = 2700
		$this.SellPrice          = 1350
		$this.TargetStats        = @{ [StatId]::Defense = 54 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Resistant to moisture and disease, for traversing murky waters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDeepSeaPauldron : BEPauldron {
	BEDeepSeaPauldron() : base() {
		$this.Name               = 'Deep Sea Pauldron'
		$this.MapObjName         = 'deepseapauldron'
		$this.PurchasePrice      = 2750
		$this.SellPrice          = 1375
		$this.TargetStats        = @{ [StatId]::Defense = 55 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Offers protection against the pressures of the ocean depths.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESkyfarerPauldron : BEPauldron {
	BESkyfarerPauldron() : base() {
		$this.Name               = 'Skyfarer Pauldron'
		$this.MapObjName         = 'skyfarerpauldron'
		$this.PurchasePrice      = 2800
		$this.SellPrice          = 1400
		$this.TargetStats        = @{ [StatId]::Defense = 56 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Lightweight and aerodynamic, for those who travel the skies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECloudWalkerPauldron : BEPauldron {
	BECloudWalkerPauldron() : base() {
		$this.Name               = 'Cloud Walker Pauldron'
		$this.MapObjName         = 'cloudwalkerpauldron'
		$this.PurchasePrice      = 2850
		$this.SellPrice          = 1425
		$this.TargetStats        = @{ [StatId]::Defense = 57 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows for graceful movement across aerial platforms.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStormforgedPauldron : BEPauldron {
	BEStormforgedPauldron() : base() {
		$this.Name               = 'Stormforged Pauldron'
		$this.MapObjName         = 'stormforgedpauldron'
		$this.PurchasePrice      = 2900
		$this.SellPrice          = 1450
		$this.TargetStats        = @{ [StatId]::Defense = 58; [StatId]::MagicDefense = 15 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Forged in the heart of a storm, crackling with energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETempestPauldron : BEPauldron {
	BETempestPauldron() : base() {
		$this.Name               = 'Tempest Pauldron'
		$this.MapObjName         = 'tempestpauldron'
		$this.PurchasePrice      = 2950
		$this.SellPrice          = 1475
		$this.TargetStats        = @{ [StatId]::Defense = 59; [StatId]::MagicDefense = 16 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Embodies the fury of a storm, enhancing elemental resistances.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZephyrPauldron : BEPauldron {
	BEZephyrPauldron() : base() {
		$this.Name               = 'Zephyr Pauldron'
		$this.MapObjName         = 'zephyrpauldron'
		$this.PurchasePrice      = 3000
		$this.SellPrice          = 1500
		$this.TargetStats        = @{ [StatId]::Defense = 60 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light as a feather, granting incredible agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGalePauldron : BEPauldron {
	BEGalePauldron() : base() {
		$this.Name               = 'Gale Pauldron'
		$this.MapObjName         = 'galepauldron'
		$this.PurchasePrice      = 3050
		$this.SellPrice          = 1525
		$this.TargetStats        = @{ [StatId]::Defense = 61 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Channels the power of the wind, offering protection against air currents.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECyclonePauldron : BEPauldron {
	BECyclonePauldron() : base() {
		$this.Name               = 'Cyclone Pauldron'
		$this.MapObjName         = 'cyclonepauldron'
		$this.PurchasePrice      = 3100
		$this.SellPrice          = 1550
		$this.TargetStats        = @{ [StatId]::Defense = 62; [StatId]::MagicDefense = 17 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by masters of wind magic, creating defensive gusts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEarthenPauldron : BEPauldron {
	BEEarthenPauldron() : base() {
		$this.Name               = 'Earthen Pauldron'
		$this.MapObjName         = 'earthenpauldron'
		$this.PurchasePrice      = 3150
		$this.SellPrice          = 1575
		$this.TargetStats        = @{ [StatId]::Defense = 63 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Made from compressed earth, offering unparalleled physical defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStonePauldron : BEPauldron {
	BEStonePauldron() : base() {
		$this.Name               = 'Stone Pauldron'
		$this.MapObjName         = 'stonepauldron'
		$this.PurchasePrice      = 3200
		$this.SellPrice          = 1600
		$this.TargetStats        = @{ [StatId]::Defense = 64 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy and unyielding, providing immense protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGoliathPauldron : BEPauldron {
	BEGoliathPauldron() : base() {
		$this.Name               = 'Goliath Pauldron'
		$this.MapObjName         = 'goliathpauldron'
		$this.PurchasePrice      = 3250
		$this.SellPrice          = 1625
		$this.TargetStats        = @{ [StatId]::Defense = 65 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Named after the giants of old, granting incredible resilience.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDwarvenPauldron : BEPauldron {
	BEDwarvenPauldron() : base() {
		$this.Name               = 'Dwarven Pauldron'
		$this.MapObjName         = 'dwarvenpauldron'
		$this.PurchasePrice      = 3300
		$this.SellPrice          = 1650
		$this.TargetStats        = @{ [StatId]::Defense = 66 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Masterfully crafted by dwarves, incredibly sturdy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEOgrePauldron : BEPauldron {
	BEOgrePauldron() : base() {
		$this.Name               = 'Ogre Pauldron'
		$this.MapObjName         = 'ogrepauldron'
		$this.PurchasePrice      = 3350
		$this.SellPrice          = 1675
		$this.TargetStats        = @{ [StatId]::Defense = 67 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crude but effective, worn by large, brutish fighters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGolemPauldron : BEPauldron {
	BEGolemPauldron() : base() {
		$this.Name               = 'Golem Pauldron'
		$this.MapObjName         = 'golempauldron'
		$this.PurchasePrice      = 3400
		$this.SellPrice          = 1700
		$this.TargetStats        = @{ [StatId]::Defense = 68 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Imbued with the spirit of a golem, unmoving and strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMagmaPauldron : BEPauldron {
	BEMagmaPauldron() : base() {
		$this.Name               = 'Magma Pauldron'
		$this.MapObjName         = 'magmapauldron'
		$this.PurchasePrice      = 3450
		$this.SellPrice          = 1725
		$this.TargetStats        = @{ [StatId]::Defense = 69; [StatId]::MagicDefense = 18 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Radiates intense heat, offering fire resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVolcanicPauldron : BEPauldron {
	BEVolcanicPauldron() : base() {
		$this.Name               = 'Volcanic Pauldron'
		$this.MapObjName         = 'volcanicpauldron'
		$this.PurchasePrice      = 3500
		$this.SellPrice          = 1750
		$this.TargetStats        = @{ [StatId]::Defense = 70 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Forged in volcanic fires, resistant to extreme temperatures.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAshPauldron : BEPauldron {
	BEAshPauldron() : base() {
		$this.Name               = 'Ash Pauldron'
		$this.MapObjName         = 'ashpauldron'
		$this.PurchasePrice      = 3550
		$this.SellPrice          = 1775
		$this.TargetStats        = @{ [StatId]::Defense = 71 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Coated in volcanic ash, offering protection from heat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECinderPauldron : BEPauldron {
	BECinderPauldron() : base() {
		$this.Name               = 'Cinder Pauldron'
		$this.MapObjName         = 'cinderpauldron'
		$this.PurchasePrice      = 3600
		$this.SellPrice          = 1800
		$this.TargetStats        = @{ [StatId]::Defense = 72 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Still smoldering from its creation, radiates warmth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInfernoPauldron : BEPauldron {
	BEInfernoPauldron() : base() {
		$this.Name               = 'Inferno Pauldron'
		$this.MapObjName         = 'infernopauldron'
		$this.PurchasePrice      = 3650
		$this.SellPrice          = 1825
		$this.TargetStats        = @{ [StatId]::Defense = 73; [StatId]::MagicDefense = 19 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blazes with infernal fire, empowering fire defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlacialPauldron : BEPauldron {
	BEGlacialPauldron() : base() {
		$this.Name               = 'Glacial Pauldron'
		$this.MapObjName         = 'glacialpauldron'
		$this.PurchasePrice      = 3700
		$this.SellPrice          = 1850
		$this.TargetStats        = @{ [StatId]::Defense = 74; [StatId]::MagicDefense = 20 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Freezes anything that touches it, offering resistance to ice.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFrostPauldron : BEPauldron {
	BEFrostPauldron() : base() {
		$this.Name               = 'Frost Pauldron'
		$this.MapObjName         = 'frostpauldron'
		$this.PurchasePrice      = 3750
		$this.SellPrice          = 1875
		$this.TargetStats        = @{ [StatId]::Defense = 75; [StatId]::MagicDefense = 21 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Covered in perpetual frost, enhancing ice-based defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBorealPauldron : BEPauldron {
	BEBorealPauldron() : base() {
		$this.Name               = 'Boreal Pauldron'
		$this.MapObjName         = 'borealpauldron'
		$this.PurchasePrice      = 3800
		$this.SellPrice          = 1900
		$this.TargetStats        = @{ [StatId]::Defense = 76 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Woven with threads of ice, offering chilling protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlizzardPauldron : BEPauldron {
	BEBlizzardPauldron() : base() {
		$this.Name               = 'Blizzard Pauldron'
		$this.MapObjName         = 'blizzardpauldron'
		$this.PurchasePrice      = 3850
		$this.SellPrice          = 1925
		$this.TargetStats        = @{ [StatId]::Defense = 77; [StatId]::MagicDefense = 22 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Summons icy winds to buffet foes, enhancing cold defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOceanicPauldron : BEPauldron {
	BEOceanicPauldron() : base() {
		$this.Name               = 'Oceanic Pauldron'
		$this.MapObjName         = 'oceanicpauldron'
		$this.PurchasePrice      = 3900
		$this.SellPrice          = 1950
		$this.TargetStats        = @{ [StatId]::Defense = 78 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Shimmers with the colors of the deep sea, resistant to water.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECoralPauldron : BEPauldron {
	BECoralPauldron() : base() {
		$this.Name               = 'Coral Pauldron'
		$this.MapObjName         = 'coralpauldron'
		$this.PurchasePrice      = 3950
		$this.SellPrice          = 1975
		$this.TargetStats        = @{ [StatId]::Defense = 79 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Made from hardened coral, surprisingly durable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETidalPauldron : BEPauldron {
	BETidalPauldron() : base() {
		$this.Name               = 'Tidal Pauldron'
		$this.MapObjName         = 'tidalpauldron'
		$this.PurchasePrice      = 4000
		$this.SellPrice          = 2000
		$this.TargetStats        = @{ [StatId]::Defense = 80; [StatId]::MagicDefense = 23 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Channels the power of the tides, enhancing water defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAbyssalPauldron : BEPauldron {
	BEAbyssalPauldron() : base() {
		$this.Name               = 'Abyssal Pauldron'
		$this.MapObjName         = 'abyssalpauldron'
		$this.PurchasePrice      = 4050
		$this.SellPrice          = 2025
		$this.TargetStats        = @{ [StatId]::Defense = 81; [StatId]::MagicDefense = 24 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Pulled from the deepest trenches, exuding an ancient power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunkenPauldron : BEPauldron {
	BESunkenPauldron() : base() {
		$this.Name               = 'Sunken Pauldron'
		$this.MapObjName         = 'sunkenpauldron'
		$this.PurchasePrice      = 4100
		$this.SellPrice          = 2050
		$this.TargetStats        = @{ [StatId]::Defense = 82 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Waterlogged but incredibly resilient, carries the scent of the ocean.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEElectricPauldron : BEPauldron {
	BEElectricPauldron() : base() {
		$this.Name               = 'Electric Pauldron'
		$this.MapObjName         = 'electricpauldron'
		$this.PurchasePrice      = 4150
		$this.SellPrice          = 2075
		$this.TargetStats        = @{ [StatId]::Defense = 83; [StatId]::MagicDefense = 25 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crackles with static electricity, shocking nearby enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThunderPauldron : BEPauldron {
	BEThunderPauldron() : base() {
		$this.Name               = 'Thunder Pauldron'
		$this.MapObjName         = 'thunderpauldron'
		$this.PurchasePrice      = 4200
		$this.SellPrice          = 2100
		$this.TargetStats        = @{ [StatId]::Defense = 84; [StatId]::MagicDefense = 26 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Resonates with the roar of thunder, empowering lightning defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESparkPauldron : BEPauldron {
	BESparkPauldron() : base() {
		$this.Name               = 'Spark Pauldron'
		$this.MapObjName         = 'sparkpauldron'
		$this.PurchasePrice      = 4250
		$this.SellPrice          = 2125
		$this.TargetStats        = @{ [StatId]::Defense = 85 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Emits small sparks, offering minor electrical resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPlasmaPauldron : BEPauldron {
	BEPlasmaPauldron() : base() {
		$this.Name               = 'Plasma Pauldron'
		$this.MapObjName         = 'plasmapauldron'
		$this.PurchasePrice      = 4300
		$this.SellPrice          = 2150
		$this.TargetStats        = @{ [StatId]::Defense = 86; [StatId]::MagicDefense = 27 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Generates a field of superheated plasma, for advanced warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERadiantPauldron : BEPauldron {
	BERadiantPauldron() : base() {
		$this.Name               = 'Radiant Pauldron'
		$this.MapObjName         = 'radiantpauldron'
		$this.PurchasePrice      = 4350
		$this.SellPrice          = 2175
		$this.TargetStats        = @{ [StatId]::Defense = 87; [StatId]::MagicDefense = 28 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Glows with a warm light, warding off darkness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELunarPauldron : BEPauldron {
	BELunarPauldron() : base() {
		$this.Name               = 'Lunar Pauldron'
		$this.MapObjName         = 'lunarpauldron'
		$this.PurchasePrice      = 4400
		$this.SellPrice          = 2200
		$this.TargetStats        = @{ [StatId]::Defense = 88; [StatId]::MagicDefense = 29 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Shimmers with moonlight, enhancing night-based defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESolarPauldron : BEPauldron {
	BESolarPauldron() : base() {
		$this.Name               = 'Solar Pauldron'
		$this.MapObjName         = 'solarpauldron'
		$this.PurchasePrice      = 4450
		$this.SellPrice          = 2225
		$this.TargetStats        = @{ [StatId]::Defense = 89; [StatId]::MagicDefense = 30 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blazes with the power of the sun, enhancing fire and light defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarlightPauldron : BEPauldron {
	BEStarlightPauldron() : base() {
		$this.Name               = 'Starlight Pauldron'
		$this.MapObjName         = 'starlightpauldron'
		$this.PurchasePrice      = 4500
		$this.SellPrice          = 2250
		$this.TargetStats        = @{ [StatId]::Defense = 90; [StatId]::MagicDefense = 31 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Embedded with shimmering stardust, for celestial magic users.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECosmicPauldron : BEPauldron {
	BECosmicPauldron() : base() {
		$this.Name               = 'Cosmic Pauldron'
		$this.MapObjName         = 'cosmicpauldron'
		$this.PurchasePrice      = 4550
		$this.SellPrice          = 2275
		$this.TargetStats        = @{ [StatId]::Defense = 91; [StatId]::MagicDefense = 32 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Connects to the vastness of the cosmos, granting immense power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidPauldron : BEPauldron {
	BEVoidPauldron() : base() {
		$this.Name               = 'Void Pauldron'
		$this.MapObjName         = 'voidpauldron'
		$this.PurchasePrice      = 4600
		$this.SellPrice          = 2300
		$this.TargetStats        = @{ [StatId]::Defense = 92; [StatId]::MagicDefense = 33 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Woven from the fabric of the void, absorbing all light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENightfallPauldron : BEPauldron {
	BENightfallPauldron() : base() {
		$this.Name               = 'Nightfall Pauldron'
		$this.MapObjName         = 'nightfallpauldron'
		$this.PurchasePrice      = 4700
		$this.SellPrice          = 2350
		$this.TargetStats        = @{ [StatId]::Defense = 94 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Enshrouds its wearer in perpetual twilight, aiding stealth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEclipsePauldron : BEPauldron {
	BEEclipsePauldron() : base() {
		$this.Name               = 'Eclipse Pauldron'
		$this.MapObjName         = 'eclipsepauldron'
		$this.PurchasePrice      = 4750
		$this.SellPrice          = 2375
		$this.TargetStats        = @{ [StatId]::Defense = 95; [StatId]::MagicDefense = 35 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Combines light and shadow, offering balanced protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamWeaverPauldron : BEPauldron {
	BEDreamWeaverPauldron() : base() {
		$this.Name               = 'Dream Weaver Pauldron'
		$this.MapObjName         = 'dreamweaverpauldron'
		$this.PurchasePrice      = 4800
		$this.SellPrice          = 2400
		$this.TargetStats        = @{ [StatId]::Defense = 96; [StatId]::MagicDefense = 36 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grants access to dreams, allowing for illusory defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiritPauldron : BEPauldron {
	BESpiritPauldron() : base() {
		$this.Name               = 'Spirit Pauldron'
		$this.MapObjName         = 'spiritpauldron'
		$this.PurchasePrice      = 4850
		$this.SellPrice          = 2425
		$this.TargetStats        = @{ [StatId]::Defense = 97; [StatId]::MagicDefense = 37 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows communication with spirits, enhancing spiritual defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhantomPauldron : BEPauldron {
	BEPhantomPauldron() : base() {
		$this.Name               = 'Phantom Pauldron'
		$this.MapObjName         = 'phantompauldron'
		$this.PurchasePrice      = 4900
		$this.SellPrice          = 2450
		$this.TargetStats        = @{ [StatId]::Defense = 98 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Makes its wearer semi-corporeal, allowing them to phase through attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGhostPauldron : BEPauldron {
	BEGhostPauldron() : base() {
		$this.Name               = 'Ghost Pauldron'
		$this.MapObjName         = 'ghostpauldron'
		$this.PurchasePrice      = 4950
		$this.SellPrice          = 2475
		$this.TargetStats        = @{ [StatId]::Defense = 99 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by spectral beings, offering ethereal protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpecterPauldron : BEPauldron {
	BESpecterPauldron() : base() {
		$this.Name               = 'Specter Pauldron'
		$this.MapObjName         = 'specterpauldron'
		$this.PurchasePrice      = 5000
		$this.SellPrice          = 2500
		$this.TargetStats        = @{ [StatId]::Defense = 100; [StatId]::MagicDefense = 38 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A chilling relic, enhancing fear-inducing defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVampirePauldron : BEPauldron {
	BEVampirePauldron() : base() {
		$this.Name               = 'Vampire Pauldron'
		$this.MapObjName         = 'vampirepauldron'
		$this.PurchasePrice      = 5050
		$this.SellPrice          = 2525
		$this.TargetStats        = @{ [StatId]::Defense = 101; [StatId]::MagicDefense = 39 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Feeds on the life force of enemies, restoring health to the wearer.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWerewolfPauldron : BEPauldron {
	BEWerewolfPauldron() : base() {
		$this.Name               = 'Werewolf Pauldron'
		$this.MapObjName         = 'werewolfpauldron'
		$this.PurchasePrice      = 5100
		$this.SellPrice          = 2550
		$this.TargetStats        = @{ [StatId]::Defense = 102 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Enhances bestial resistance and ferocity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGargoylePauldron : BEPauldron {
	BEGargoylePauldron() : base() {
		$this.Name               = 'Gargoyle Pauldron'
		$this.MapObjName         = 'gargoylepauldron'
		$this.PurchasePrice      = 5150
		$this.SellPrice          = 2575
		$this.TargetStats        = @{ [StatId]::Defense = 103 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Made from hardened stone, incredibly tough and unyielding.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBasiliskPauldron : BEPauldron {
	BEBasiliskPauldron() : base() {
		$this.Name               = 'Basilisk Pauldron'
		$this.MapObjName         = 'basiliskpauldron'
		$this.PurchasePrice      = 5200
		$this.SellPrice          = 2600
		$this.TargetStats        = @{ [StatId]::Defense = 104 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Petrifies attackers with its gaze, offering unique defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGriffinPauldron : BEPauldron {
	BEGriffinPauldron() : base() {
		$this.Name               = 'Griffin Pauldron'
		$this.MapObjName         = 'griffinpauldron'
		$this.PurchasePrice      = 5250
		$this.SellPrice          = 2625
		$this.TargetStats        = @{ [StatId]::Defense = 105 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light and regal, allowing for swift aerial maneuvers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhoenixPauldron : BEPauldron {
	BEPhoenixPauldron() : base() {
		$this.Name               = 'Phoenix Pauldron'
		$this.MapObjName         = 'phoenixpauldron'
		$this.PurchasePrice      = 5300
		$this.SellPrice          = 2650
		$this.TargetStats        = @{ [StatId]::Defense = 106; [StatId]::MagicDefense = 40 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blazes with eternal flame, granting resistance to fire.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEUnicornPauldron : BEPauldron {
	BEUnicornPauldron() : base() {
		$this.Name               = 'Unicorn Pauldron'
		$this.MapObjName         = 'unicornpauldron'
		$this.PurchasePrice      = 5350
		$this.SellPrice          = 2675
		$this.TargetStats        = @{ [StatId]::Defense = 107; [StatId]::MagicDefense = 41 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Pure and benevolent, warding off evil and healing wounds.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonKingPauldron : BEPauldron {
	BEDragonKingPauldron() : base() {
		$this.Name               = 'Dragon King Pauldron'
		$this.MapObjName         = 'dragonkingpauldron'
		$this.PurchasePrice      = 5400
		$this.SellPrice          = 2700
		$this.TargetStats        = @{ [StatId]::Defense = 108; [StatId]::MagicDefense = 42 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by ancient dragon kings, embodying immense power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESerpentPauldron : BEPauldron {
	BESerpentPauldron() : base() {
		$this.Name               = 'Serpent Pauldron'
		$this.MapObjName         = 'serpentpauldron'
		$this.PurchasePrice      = 5450
		$this.SellPrice          = 2725
		$this.TargetStats        = @{ [StatId]::Defense = 109 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Slithers with subtle power, enhancing poison resistance and agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiderPauldron : BEPauldron {
	BESpiderPauldron() : base() {
		$this.Name               = 'Spider Pauldron'
		$this.MapObjName         = 'spiderpauldron'
		$this.PurchasePrice      = 5500
		$this.SellPrice          = 2750
		$this.TargetStats        = @{ [StatId]::Defense = 110 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows for agile movement and offers venom resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEScorpionPauldron : BEPauldron {
	BEScorpionPauldron() : base() {
		$this.Name               = 'Scorpion Pauldron'
		$this.MapObjName         = 'scorpionpauldron'
		$this.PurchasePrice      = 5550
		$this.SellPrice          = 2775
		$this.TargetStats        = @{ [StatId]::Defense = 111 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Sharp and deadly, enhancing critical resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBeetlePauldron : BEPauldron {
	BEBeetlePauldron() : base() {
		$this.Name               = 'Beetle Pauldron'
		$this.MapObjName         = 'beetlepauldron'
		$this.PurchasePrice      = 5600
		$this.SellPrice          = 2800
		$this.TargetStats        = @{ [StatId]::Defense = 112 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Hardened carapace provides exceptional defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChitinPauldron : BEPauldron {
	BEChitinPauldron() : base() {
		$this.Name               = 'Chitin Pauldron'
		$this.MapObjName         = 'chitinpauldron'
		$this.PurchasePrice      = 5650
		$this.SellPrice          = 2825
		$this.TargetStats        = @{ [StatId]::Defense = 113 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Made from the exoskeleton of a giant insect, surprisingly durable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFeyPauldron : BEPauldron {
	BEFeyPauldron() : base() {
		$this.Name               = 'Fey Pauldron'
		$this.MapObjName         = 'feypauldron'
		$this.PurchasePrice      = 5700
		$this.SellPrice          = 2850
		$this.TargetStats        = @{ [StatId]::Defense = 114; [StatId]::MagicDefense = 43 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Woven from moonlight and forest magic, offering subtle protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEElvenPauldron : BEPauldron {
	BEElvenPauldron() : base() {
		$this.Name               = 'Elven Pauldron'
		$this.MapObjName         = 'elvenpauldron'
		$this.PurchasePrice      = 5750
		$this.SellPrice          = 2875
		$this.TargetStats        = @{ [StatId]::Defense = 115 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Graceful and light, crafted with ancient elven techniques.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDrowPauldron : BEPauldron {
	BEDrowPauldron() : base() {
		$this.Name               = 'Drow Pauldron'
		$this.MapObjName         = 'drowpauldron'
		$this.PurchasePrice      = 5800
		$this.SellPrice          = 2900
		$this.TargetStats        = @{ [StatId]::Defense = 116 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Dark and menacing, crafted by the drow of the underworld.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGnomishPauldron : BEPauldron {
	BEGnomishPauldron() : base() {
		$this.Name               = 'Gnomish Pauldron'
		$this.MapObjName         = 'gnomishpauldron'
		$this.PurchasePrice      = 5850
		$this.SellPrice          = 2925
		$this.TargetStats        = @{ [StatId]::Defense = 117 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ingeniously crafted with hidden compartments and mechanisms.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGoblinPauldron : BEPauldron {
	BEGoblinPauldron() : base() {
		$this.Name               = 'Goblin Pauldron'
		$this.MapObjName         = 'goblinpauldron'
		$this.PurchasePrice      = 5900
		$this.SellPrice          = 2950
		$this.TargetStats        = @{ [StatId]::Defense = 118 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crudely assembled but surprisingly effective in a pinch.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOrcPauldron : BEPauldron {
	BEOrcPauldron() : base() {
		$this.Name               = 'Orc Pauldron'
		$this.MapObjName         = 'orcpauldron'
		$this.PurchasePrice      = 5950
		$this.SellPrice          = 2975
		$this.TargetStats        = @{ [StatId]::Defense = 119 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy and brutal, designed for sheer destructive power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGiantPauldron : BEPauldron {
	BEGiantPauldron() : base() {
		$this.Name               = 'Giant Pauldron'
		$this.MapObjName         = 'giantpauldron'
		$this.PurchasePrice      = 6000
		$this.SellPrice          = 3000
		$this.TargetStats        = @{ [StatId]::Defense = 120 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Scaled for immense warriors, offering formidable defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDemonPauldron : BEPauldron {
	BEDemonPauldron() : base() {
		$this.Name               = 'Demon Pauldron'
		$this.MapObjName         = 'demonpauldron'
		$this.PurchasePrice      = 6050
		$this.SellPrice          = 3025
		$this.TargetStats        = @{ [StatId]::Defense = 121; [StatId]::MagicDefense = 44 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Forged in the depths of hell, imbued with dark, corrupting power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDevilPauldron : BEPauldron {
	BEDevilPauldron() : base() {
		$this.Name               = 'Devil Pauldron'
		$this.MapObjName         = 'devilpauldron'
		$this.PurchasePrice      = 6100
		$this.SellPrice          = 3050
		$this.TargetStats        = @{ [StatId]::Defense = 122; [StatId]::MagicDefense = 45 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A relic of immense evil, granting unholy strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAngelPauldron : BEPauldron {
	BEAngelPauldron() : base() {
		$this.Name               = 'Angel Pauldron'
		$this.MapObjName         = 'angelpauldron'
		$this.PurchasePrice      = 6150
		$this.SellPrice          = 3075
		$this.TargetStats        = @{ [StatId]::Defense = 123; [StatId]::MagicDefense = 46 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Shines with divine light, warding off all evil and healing wounds.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECherubPauldron : BEPauldron {
	BECherubPauldron() : base() {
		$this.Name               = 'Cherub Pauldron'
		$this.MapObjName         = 'cherubpauldron'
		$this.PurchasePrice      = 6200
		$this.SellPrice          = 3100
		$this.TargetStats        = @{ [StatId]::Defense = 124; [StatId]::MagicDefense = 47 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light and angelic, bestowing blessings upon its wearer.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESeraphPauldron : BEPauldron {
	BESeraphPauldron() : base() {
		$this.Name               = 'Seraph Pauldron'
		$this.MapObjName         = 'seraphpauldron'
		$this.PurchasePrice      = 6250
		$this.SellPrice          = 3125
		$this.TargetStats        = @{ [StatId]::Defense = 125; [StatId]::MagicDefense = 48 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pauldron of the highest angels, granting incredible divine power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivinePauldron : BEPauldron {
	BEDivinePauldron() : base() {
		$this.Name               = 'Divine Pauldron'
		$this.MapObjName         = 'divinepauldron'
		$this.PurchasePrice      = 6300
		$this.SellPrice          = 3150
		$this.TargetStats        = @{ [StatId]::Defense = 126; [StatId]::MagicDefense = 49 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Imbued with the essence of a god, granting ultimate protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAegisPauldron : BEPauldron {
	BEAegisPauldron() : base() {
		$this.Name               = 'Aegis Pauldron'
		$this.MapObjName         = 'aegispauldron'
		$this.PurchasePrice      = 6350
		$this.SellPrice          = 3175
		$this.TargetStats        = @{ [StatId]::Defense = 127; [StatId]::MagicDefense = 50 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A legendary shield, offering unparalleled defense against all threats.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAdamantinePauldron : BEPauldron {
	BEAdamantinePauldron() : base() {
		$this.Name               = 'Adamantine Pauldron'
		$this.MapObjName         = 'adamantinepauldron'
		$this.PurchasePrice      = 6400
		$this.SellPrice          = 3200
		$this.TargetStats        = @{ [StatId]::Defense = 128 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'One of the strongest materials known, virtually indestructible.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOrichalcumPauldron : BEPauldron {
	BEOrichalcumPauldron() : base() {
		$this.Name               = 'Orichalcum Pauldron'
		$this.MapObjName         = 'orichalcumpauldron'
		$this.PurchasePrice      = 6450
		$this.SellPrice          = 3225
		$this.TargetStats        = @{ [StatId]::Defense = 129; [StatId]::MagicDefense = 51 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A mythical metal, offering incredible magical resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEtheriumPauldron : BEPauldron {
	BEEtheriumPauldron() : base() {
		$this.Name               = 'Etherium Pauldron'
		$this.MapObjName         = 'etheriumpauldron'
		$this.PurchasePrice      = 6500
		$this.SellPrice          = 3250
		$this.TargetStats        = @{ [StatId]::Defense = 130; [StatId]::MagicDefense = 52 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Woven from pure magical energy, incredibly light and potent.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidweavePauldron : BEPauldron {
	BEVoidweavePauldron() : base() {
		$this.Name               = 'Voidweave Pauldron'
		$this.MapObjName         = 'voidweavepauldron'
		$this.PurchasePrice      = 6550
		$this.SellPrice          = 3275
		$this.TargetStats        = @{ [StatId]::Defense = 131; [StatId]::MagicDefense = 53 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crafted from the threads of nothingness, absorbing all magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETimelessPauldron : BEPauldron {
	BETimelessPauldron() : base() {
		$this.Name               = 'Timeless Pauldron'
		$this.MapObjName         = 'timelesspauldron'
		$this.PurchasePrice      = 6600
		$this.SellPrice          = 3300
		$this.TargetStats        = @{ [StatId]::Defense = 132 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Unaffected by the flow of time, granting immense durability.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInfinityPauldron : BEPauldron {
	BEInfinityPauldron() : base() {
		$this.Name               = 'Infinity Pauldron'
		$this.MapObjName         = 'infinitypauldron'
		$this.PurchasePrice      = 6650
		$this.SellPrice          = 3325
		$this.TargetStats        = @{ [StatId]::Defense = 133; [StatId]::MagicDefense = 54 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Embodies infinite possibilities, granting varied resistances.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECosmicForgePauldron : BEPauldron {
	BECosmicForgePauldron() : base() {
		$this.Name               = 'Cosmic Forge Pauldron'
		$this.MapObjName         = 'cosmicforgepauldron'
		$this.PurchasePrice      = 6700
		$this.SellPrice          = 3350
		$this.TargetStats        = @{ [StatId]::Defense = 134; [StatId]::MagicDefense = 55 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Forged at the birth of the universe, incredibly powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGenesisPauldron : BEPauldron {
	BEGenesisPauldron() : base() {
		$this.Name               = 'Genesis Pauldron'
		$this.MapObjName         = 'genesispauldron'
		$this.PurchasePrice      = 6750
		$this.SellPrice          = 3375
		$this.TargetStats        = @{ [StatId]::Defense = 135; [StatId]::MagicDefense = 56 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A pauldron of creation, capable of altering reality.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEApocalypsePauldron : BEPauldron {
	BEApocalypsePauldron() : base() {
		$this.Name               = 'Apocalypse Pauldron'
		$this.MapObjName         = 'apocalypsepauldron'
		$this.PurchasePrice      = 6800
		$this.SellPrice          = 3400
		$this.TargetStats        = @{ [StatId]::Defense = 136; [StatId]::MagicDefense = 57 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn during the end of times, immense destructive resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOblivionPauldron : BEPauldron {
	BEOblivionPauldron() : base() {
		$this.Name               = 'Oblivion Pauldron'
		$this.MapObjName         = 'oblivionpauldron'
		$this.PurchasePrice      = 6850
		$this.SellPrice          = 3425
		$this.TargetStats        = @{ [StatId]::Defense = 137; [StatId]::MagicDefense = 58 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Drifts from beyond existence, absorbing all it touches.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESingularityPauldron : BEPauldron {
	BESingularityPauldron() : base() {
		$this.Name               = 'Singularity Pauldron'
		$this.MapObjName         = 'singularitypauldron'
		$this.PurchasePrice      = 6900
		$this.SellPrice          = 3450
		$this.TargetStats        = @{ [StatId]::Defense = 138; [StatId]::MagicDefense = 59 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Contains the power of a collapsing star, incredibly potent.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEParadoxPauldron : BEPauldron {
	BEParadoxPauldron() : base() {
		$this.Name               = 'Paradox Pauldron'
		$this.MapObjName         = 'paradoxpauldron'
		$this.PurchasePrice      = 6950
		$this.SellPrice          = 3475
		$this.TargetStats        = @{ [StatId]::Defense = 139; [StatId]::MagicDefense = 60 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Defies the laws of physics, offering unpredictable defensive effects.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERunicKnightPauldron : BEPauldron {
	BERunicKnightPauldron() : base() {
		$this.Name               = 'Runic Knight Pauldron'
		$this.MapObjName         = 'runicknightpauldron'
		$this.PurchasePrice      = 7000
		$this.SellPrice          = 3500
		$this.TargetStats        = @{ [StatId]::Defense = 140; [StatId]::MagicDefense = 61 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Covered in ancient runes, granting both physical and magical defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBattleMagePauldron : BEPauldron {
	BEBattleMagePauldron() : base() {
		$this.Name               = 'Battle Mage Pauldron'
		$this.MapObjName         = 'battlemagepauldron'
		$this.PurchasePrice      = 7050
		$this.SellPrice          = 3525
		$this.TargetStats        = @{ [StatId]::Defense = 141; [StatId]::MagicDefense = 62 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows full mobility for spellcasting while offering protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArcaneWarriorPauldron : BEPauldron {
	BEArcaneWarriorPauldron() : base() {
		$this.Name               = 'Arcane Warrior Pauldron'
		$this.MapObjName         = 'arcanewarriorpauldron'
		$this.PurchasePrice      = 7100
		$this.SellPrice          = 3550
		$this.TargetStats        = @{ [StatId]::Defense = 142; [StatId]::MagicDefense = 63 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blends magical and physical defense, for versatile fighters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpellbladePauldron : BEPauldron {
	BESpellbladePauldron() : base() {
		$this.Name               = 'Spellblade Pauldron'
		$this.MapObjName         = 'spellbladepauldron'
		$this.PurchasePrice      = 7150
		$this.SellPrice          = 3575
		$this.TargetStats        = @{ [StatId]::Defense = 143; [StatId]::MagicDefense = 64 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Enhances both swordplay and spellcasting defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWitchHunterPauldron : BEPauldron {
	BEWitchHunterPauldron() : base() {
		$this.Name               = 'Witch Hunter Pauldron'
		$this.MapObjName         = 'witchhunterpauldron'
		$this.PurchasePrice      = 7200
		$this.SellPrice          = 3600
		$this.TargetStats        = @{ [StatId]::Defense = 144; [StatId]::MagicDefense = 65 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Specifically designed to combat magic users, with innate resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEInquisitorPauldron : BEPauldron {
	BEInquisitorPauldron() : base() {
		$this.Name               = 'Inquisitor Pauldron'
		$this.MapObjName         = 'inquisitorpauldron'
		$this.PurchasePrice      = 7250
		$this.SellPrice          = 3625
		$this.TargetStats        = @{ [StatId]::Defense = 145; [StatId]::MagicDefense = 66 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by those who seek out and destroy evil, often associated with divine power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEExorcistPauldron : BEPauldron {
	BEExorcistPauldron() : base() {
		$this.Name               = 'Exorcist Pauldron'
		$this.MapObjName         = 'exorcistpauldron'
		$this.PurchasePrice      = 7300
		$this.SellPrice          = 3650
		$this.TargetStats        = @{ [StatId]::Defense = 146; [StatId]::MagicDefense = 67 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Designed to ward off demonic entities and evil spirits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BETemplarPauldron : BEPauldron {
	BETemplarPauldron() : base() {
		$this.Name               = 'Templar Pauldron'
		$this.MapObjName         = 'templarpauldron'
		$this.PurchasePrice      = 7350
		$this.SellPrice          = 3675
		$this.TargetStats        = @{ [StatId]::Defense = 147; [StatId]::MagicDefense = 68 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A symbol of unwavering faith and military might.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEOraclePauldron : BEPauldron {
	BEOraclePauldron() : base() {
		$this.Name               = 'Oracle Pauldron'
		$this.MapObjName         = 'oraclepauldron'
		$this.PurchasePrice      = 7400
		$this.SellPrice          = 3700
		$this.TargetStats        = @{ [StatId]::Defense = 148; [StatId]::MagicDefense = 69 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows glimpses into the future, enhancing foresight and wisdom.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESeerPauldron : BEPauldron {
	BESeerPauldron() : base() {
		$this.Name               = 'Seer Pauldron'
		$this.MapObjName         = 'seerpauldron'
		$this.PurchasePrice      = 7450
		$this.SellPrice          = 3725
		$this.TargetStats        = @{ [StatId]::Defense = 149; [StatId]::MagicDefense = 70 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Enhances perception and allows for detection of hidden truths.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEProphetPauldron : BEPauldron {
	BEProphetPauldron() : base() {
		$this.Name               = 'Prophet Pauldron'
		$this.MapObjName         = 'prophetpauldron'
		$this.PurchasePrice      = 7500
		$this.SellPrice          = 3750
		$this.TargetStats        = @{ [StatId]::Defense = 150; [StatId]::MagicDefense = 71 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by those who deliver divine messages, granting profound insight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVisionaryPauldron : BEPauldron {
	BEVisionaryPauldron() : base() {
		$this.Name               = 'Visionary Pauldron'
		$this.MapObjName         = 'visionarypauldron'
		$this.PurchasePrice      = 7550
		$this.SellPrice          = 3775
		$this.TargetStats        = @{ [StatId]::Defense = 151; [StatId]::MagicDefense = 72 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Inspires allies and reveals weaknesses in enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreamersPauldron : BEPauldron {
	BEDreamersPauldron() : base() {
		$this.Name               = 'Dreamer''s Pauldron'
		$this.MapObjName         = 'dreamerspauldron'
		$this.PurchasePrice      = 7600
		$this.SellPrice          = 3800
		$this.TargetStats        = @{ [StatId]::Defense = 152; [StatId]::MagicDefense = 73 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows one to traverse dreams and access subconscious powers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMindWeaverPauldron : BEPauldron {
	BEMindWeaverPauldron() : base() {
		$this.Name               = 'Mind Weaver Pauldron'
		$this.MapObjName         = 'mindweaverpauldron'
		$this.PurchasePrice      = 7650
		$this.SellPrice          = 3825
		$this.TargetStats        = @{ [StatId]::Defense = 153; [StatId]::MagicDefense = 74 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows for subtle manipulation of thoughts and emotions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETelepathPauldron : BEPauldron {
	BETelepathPauldron() : base() {
		$this.Name               = 'Telepath Pauldron'
		$this.MapObjName         = 'telepathpauldron'
		$this.PurchasePrice      = 7700
		$this.SellPrice          = 3850
		$this.TargetStats        = @{ [StatId]::Defense = 154; [StatId]::MagicDefense = 75 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grants the power of telepathy, for mental communication.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIllusionistPauldron : BEPauldron {
	BEIllusionistPauldron() : base() {
		$this.Name               = 'Illusionist Pauldron'
		$this.MapObjName         = 'illusionistpauldron'
		$this.PurchasePrice      = 7750
		$this.SellPrice          = 3875
		$this.TargetStats        = @{ [StatId]::Defense = 155; [StatId]::MagicDefense = 76 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Creates convincing illusions and disorients foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETricksterPauldron : BEPauldron {
	BETricksterPauldron() : base() {
		$this.Name               = 'Trickster Pauldron'
		$this.MapObjName         = 'tricksterpauldron'
		$this.PurchasePrice      = 7800
		$this.SellPrice          = 3900
		$this.TargetStats        = @{ [StatId]::Defense = 156 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows for agile evasions and cunning deceptions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEJesterPauldron : BEPauldron {
	BEJesterPauldron() : base() {
		$this.Name               = 'Jester Pauldron'
		$this.MapObjName         = 'jesterpauldron'
		$this.PurchasePrice      = 7850
		$this.SellPrice          = 3925
		$this.TargetStats        = @{ [StatId]::Defense = 157; [StatId]::MagicDefense = 77 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Provides unexpected defenses and chaotic effects.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBardPauldron : BEPauldron {
	BEBardPauldron() : base() {
		$this.Name               = 'Bard Pauldron'
		$this.MapObjName         = 'bardpauldron'
		$this.PurchasePrice      = 7900
		$this.SellPrice          = 3950
		$this.TargetStats        = @{ [StatId]::Defense = 158; [StatId]::MagicDefense = 78 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Inspires allies and demoralizes enemies through song.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDancersPauldron : BEPauldron {
	BEDancersPauldron() : base() {
		$this.Name               = 'Dancer''s Pauldron'
		$this.MapObjName         = 'dancerspauldron'
		$this.PurchasePrice      = 7950
		$this.SellPrice          = 3975
		$this.TargetStats        = @{ [StatId]::Defense = 159 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light and flexible, allowing for graceful movement and evasion.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEAcrobatPauldron : BEPauldron {
	BEAcrobatPauldron() : base() {
		$this.Name               = 'Acrobat Pauldron'
		$this.MapObjName         = 'acrobatpauldron'
		$this.PurchasePrice      = 8000
		$this.SellPrice          = 4000
		$this.TargetStats        = @{ [StatId]::Defense = 160 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Provides protection without hindering agility and balance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGymnastPauldron : BEPauldron {
	BEGymnastPauldron() : base() {
		$this.Name               = 'Gymnast Pauldron'
		$this.MapObjName         = 'gymnastpauldron'
		$this.PurchasePrice      = 8050
		$this.SellPrice          = 4025
		$this.TargetStats        = @{ [StatId]::Defense = 161 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Lightweight and ergonomic, for maximum flexibility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDuelistPauldron : BEPauldron {
	BEDuelistPauldron() : base() {
		$this.Name               = 'Duelist Pauldron'
		$this.MapObjName         = 'duelistpauldron'
		$this.PurchasePrice      = 8100
		$this.SellPrice          = 4050
		$this.TargetStats        = @{ [StatId]::Defense = 162 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Designed for swift, precise movements and countering.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEFencerPauldron : BEPauldron {
	BEFencerPauldron() : base() {
		$this.Name               = 'Fencer Pauldron'
		$this.MapObjName         = 'fencerpauldron'
		$this.PurchasePrice      = 8150
		$this.SellPrice          = 4075
		$this.TargetStats        = @{ [StatId]::Defense = 163 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light and unrestrictive, for rapid thrusts and parries.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESwashbucklerPauldron : BEPauldron {
	BESwashbucklerPauldron() : base() {
		$this.Name               = 'Swashbuckler Pauldron'
		$this.MapObjName         = 'swashbucklerpauldron'
		$this.PurchasePrice      = 8200
		$this.SellPrice          = 4100
		$this.TargetStats        = @{ [StatId]::Defense = 164 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Stylish yet practical, for those who fight with flair.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGladiatorPauldron : BEPauldron {
	BEGladiatorPauldron() : base() {
		$this.Name               = 'Gladiator Pauldron'
		$this.MapObjName         = 'gladiatorpauldron'
		$this.PurchasePrice      = 8250
		$this.SellPrice          = 4125
		$this.TargetStats        = @{ [StatId]::Defense = 165 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Built for the arena, offering robust protection and intimidation.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBerserkerPauldron : BEPauldron {
	BEBerserkerPauldron() : base() {
		$this.Name               = 'Berserker Pauldron'
		$this.MapObjName         = 'berserkerpauldron'
		$this.PurchasePrice      = 8300
		$this.SellPrice          = 4150
		$this.TargetStats        = @{ [StatId]::Defense = 166 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Infuses its wearer with uncontrolled rage, boosting defense at a cost.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEBrutePauldron : BEPauldron {
	BEBrutePauldron() : base() {
		$this.Name               = 'Brute Pauldron'
		$this.MapObjName         = 'brutepauldron'
		$this.PurchasePrice      = 8350
		$this.SellPrice          = 4175
		$this.TargetStats        = @{ [StatId]::Defense = 167 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy and unforgiving, for overwhelming opponents with raw strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESavagePauldron : BEPauldron {
	BESavagePauldron() : base() {
		$this.Name               = 'Savage Pauldron'
		$this.MapObjName         = 'savagepauldron'
		$this.PurchasePrice      = 8400
		$this.SellPrice          = 4200
		$this.TargetStats        = @{ [StatId]::Defense = 168 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Made from raw materials, for those who embrace primal combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBarbarianPauldron : BEPauldron {
	BEBarbarianPauldron() : base() {
		$this.Name               = 'Barbarian Pauldron'
		$this.MapObjName         = 'barbarianpauldron'
		$this.PurchasePrice      = 8450
		$this.SellPrice          = 4225
		$this.TargetStats        = @{ [StatId]::Defense = 169 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Minimal but effective, allowing for swift, powerful strikes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENomadicWarlordPauldron : BEPauldron {
	BENomadicWarlordPauldron() : base() {
		$this.Name               = 'Nomadic Warlord Pauldron'
		$this.MapObjName         = 'nomadicwarlordpauldron'
		$this.PurchasePrice      = 8500
		$this.SellPrice          = 4250
		$this.TargetStats        = @{ [StatId]::Defense = 170 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Combines mobility with imposing presence, for fierce tribal leaders.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDesertTyrantPauldron : BEPauldron {
	BEDesertTyrantPauldron() : base() {
		$this.Name               = 'Desert Tyrant Pauldron'
		$this.MapObjName         = 'deserttyrantpauldron'
		$this.PurchasePrice      = 8550
		$this.SellPrice          = 4275
		$this.TargetStats        = @{ [StatId]::Defense = 171 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by rulers of arid lands, exuding oppressive power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEJungleHunterPauldron : BEPauldron {
	BEJungleHunterPauldron() : base() {
		$this.Name               = 'Jungle Hunter Pauldron'
		$this.MapObjName         = 'junglehunterpauldron'
		$this.PurchasePrice      = 8600
		$this.SellPrice          = 4300
		$this.TargetStats        = @{ [StatId]::Defense = 172 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blends seamlessly with dense foliage, aiding ambushes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEForestProtectorPauldron : BEPauldron {
	BEForestProtectorPauldron() : base() {
		$this.Name               = 'Forest Protector Pauldron'
		$this.MapObjName         = 'forestprotectorpauldron'
		$this.PurchasePrice      = 8650
		$this.SellPrice          = 4325
		$this.TargetStats        = @{ [StatId]::Defense = 173 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Offers defense while allowing swift movement through woodlands.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIceWardenPauldron : BEPauldron {
	BEIceWardenPauldron() : base() {
		$this.Name               = 'Ice Warden Pauldron'
		$this.MapObjName         = 'icewardenpauldron'
		$this.PurchasePrice      = 8700
		$this.SellPrice          = 4350
		$this.TargetStats        = @{ [StatId]::Defense = 174; [StatId]::MagicDefense = 79 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Wards off the bitter cold and enhances ice-based defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMountainKingPauldron : BEPauldron {
	BEMountainKingPauldron() : base() {
		$this.Name               = 'Mountain King Pauldron'
		$this.MapObjName         = 'mountainkingpauldron'
		$this.PurchasePrice      = 8750
		$this.SellPrice          = 4375
		$this.TargetStats        = @{ [StatId]::Defense = 175 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by dwarven royalty, imbued with the strength of the mountains.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESeaCaptainPauldron : BEPauldron {
	BESeaCaptainPauldron() : base() {
		$this.Name               = 'Sea Captain Pauldron'
		$this.MapObjName         = 'seacaptainpauldron'
		$this.PurchasePrice      = 8800
		$this.SellPrice          = 4400
		$this.TargetStats        = @{ [StatId]::Defense = 176 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Durable and water-resistant, for those who command the seas.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESkySovereignPauldron : BEPauldron {
	BESkySovereignPauldron() : base() {
		$this.Name               = 'Sky Sovereign Pauldron'
		$this.MapObjName         = 'skysovereignpauldron'
		$this.PurchasePrice      = 8850
		$this.SellPrice          = 4425
		$this.TargetStats        = @{ [StatId]::Defense = 177; [StatId]::MagicDefense = 80 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows effortless flight and control over aerial forces.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEUrbanRangerPauldron : BEPauldron {
	BEUrbanRangerPauldron() : base() {
		$this.Name               = 'Urban Ranger Pauldron'
		$this.MapObjName         = 'urbanrangerpauldron'
		$this.PurchasePrice      = 8900
		$this.SellPrice          = 4450
		$this.TargetStats        = @{ [StatId]::Defense = 178 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blends into city environments, aiding stealth and surveillance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWastelandScavengerPauldron : BEPauldron {
	BEWastelandScavengerPauldron() : base() {
		$this.Name               = 'Wasteland Scavenger Pauldron'
		$this.MapObjName         = 'wastelandscavengerpauldron'
		$this.PurchasePrice      = 8950
		$this.SellPrice          = 4475
		$this.TargetStats        = @{ [StatId]::Defense = 179 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Patchwork but resilient, for surviving harsh, desolate lands.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPilgrimsPauldron : BEPauldron {
	BEPilgrimsPauldron() : base() {
		$this.Name               = 'Pilgrim''s Pauldron'
		$this.MapObjName         = 'pilgrimspauldron'
		$this.PurchasePrice      = 9000
		$this.SellPrice          = 4500
		$this.TargetStats        = @{ [StatId]::Defense = 180 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Simple yet enduring, for those on sacred journeys.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAsceticPauldron : BEPauldron {
	BEAsceticPauldron() : base() {
		$this.Name               = 'Ascetic Pauldron'
		$this.MapObjName         = 'asceticpauldron'
		$this.PurchasePrice      = 9050
		$this.SellPrice          = 4525
		$this.TargetStats        = @{ [StatId]::Defense = 181 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Minimizes distractions, allowing for heightened focus and discipline.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHermitsPauldron : BEPauldron {
	BEHermitsPauldron() : base() {
		$this.Name               = 'Hermit''s Pauldron'
		$this.MapObjName         = 'hermitspauldron'
		$this.PurchasePrice      = 9100
		$this.SellPrice          = 4550
		$this.TargetStats        = @{ [StatId]::Defense = 182; [StatId]::MagicDefense = 81 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by reclusive sages, offering subtle, ancient protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMonkPauldron : BEPauldron {
	BEMonkPauldron() : base() {
		$this.Name               = 'Monk Pauldron'
		$this.MapObjName         = 'monkpauldron'
		$this.PurchasePrice      = 9150
		$this.SellPrice          = 4575
		$this.TargetStats        = @{ [StatId]::Defense = 183; [StatId]::MagicDefense = 82 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows for agile, unarmed combat while offering spiritual defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZenMasterPauldron : BEPauldron {
	BEZenMasterPauldron() : base() {
		$this.Name               = 'Zen Master Pauldron'
		$this.MapObjName         = 'zenmasterpauldron'
		$this.PurchasePrice      = 9200
		$this.SellPrice          = 4600
		$this.TargetStats        = @{ [StatId]::Defense = 184; [StatId]::MagicDefense = 83 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Channels inner peace into powerful, disciplined defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESamuraiPauldron : BEPauldron {
	BESamuraiPauldron() : base() {
		$this.Name               = 'Samurai Pauldron'
		$this.MapObjName         = 'samuraipauldron'
		$this.PurchasePrice      = 9250
		$this.SellPrice          = 4625
		$this.TargetStats        = @{ [StatId]::Defense = 185 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Refined and honorable, offering balanced defense and attack.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BENinjaPauldron : BEPauldron {
	BENinjaPauldron() : base() {
		$this.Name               = 'Ninja Pauldron'
		$this.MapObjName         = 'ninjapauldron'
		$this.PurchasePrice      = 9300
		$this.SellPrice          = 4650
		$this.TargetStats        = @{ [StatId]::Defense = 186 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light and stealthy, designed for silent infiltration and swift strikes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKunoichiPauldron : BEPauldron {
	BEKunoichiPauldron() : base() {
		$this.Name               = 'Kunoichi Pauldron'
		$this.MapObjName         = 'kunoichipauldron'
		$this.PurchasePrice      = 9350
		$this.SellPrice          = 4675
		$this.TargetStats        = @{ [StatId]::Defense = 187 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows for incredibly agile and precise movements in combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BERoninPauldron : BEPauldron {
	BERoninPauldron() : base() {
		$this.Name               = 'Ronin Pauldron'
		$this.MapObjName         = 'roninpauldron'
		$this.PurchasePrice      = 9400
		$this.SellPrice          = 4700
		$this.TargetStats        = @{ [StatId]::Defense = 188 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by masterless warriors, showing signs of many battles.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEShogunPauldron : BEPauldron {
	BEShogunPauldron() : base() {
		$this.Name               = 'Shogun Pauldron'
		$this.MapObjName         = 'shogunpauldron'
		$this.PurchasePrice      = 9450
		$this.SellPrice          = 4725
		$this.TargetStats        = @{ [StatId]::Defense = 189 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A symbol of ultimate military authority and power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEmperorsPauldron : BEPauldron {
	BEEmperorsPauldron() : base() {
		$this.Name               = 'Emperor''s Pauldron'
		$this.MapObjName         = 'emperorspauldron'
		$this.PurchasePrice      = 9500
		$this.SellPrice          = 4750
		$this.TargetStats        = @{ [StatId]::Defense = 190 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Fit for a true ruler, bestowing regal authority and immense protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEmpresssPauldron : BEPauldron {
	BEEmpresssPauldron() : base() {
		$this.Name               = 'Empress''s Pauldron'
		$this.MapObjName         = 'empressspauldron'
		$this.PurchasePrice      = 9550
		$this.SellPrice          = 4775
		$this.TargetStats        = @{ [StatId]::Defense = 191 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Elegant and formidable, worn by powerful female monarchs.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEScholarPauldron : BEPauldron {
	BEScholarPauldron() : base() {
		$this.Name               = 'Scholar Pauldron'
		$this.MapObjName         = 'scholarpauldron'
		$this.PurchasePrice      = 9600
		$this.SellPrice          = 4800
		$this.TargetStats        = @{ [StatId]::Defense = 192; [StatId]::MagicDefense = 84 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Enhances knowledge and understanding, aiding in magical research.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArchivistPauldron : BEPauldron {
	BEArchivistPauldron() : base() {
		$this.Name               = 'Archivist Pauldron'
		$this.MapObjName         = 'archivistpauldron'
		$this.PurchasePrice      = 9650
		$this.SellPrice          = 4825
		$this.TargetStats        = @{ [StatId]::Defense = 193; [StatId]::MagicDefense = 85 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Protects ancient knowledge and grants access to forgotten lore.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELibrarianPauldron : BEPauldron {
	BELibrarianPauldron() : base() {
		$this.Name               = 'Librarian Pauldron'
		$this.MapObjName         = 'librarianpauldron'
		$this.PurchasePrice      = 9700
		$this.SellPrice          = 4850
		$this.TargetStats        = @{ [StatId]::Defense = 194; [StatId]::MagicDefense = 86 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Allows for quick access to vast amounts of information.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECuratorPauldron : BEPauldron {
	BECuratorPauldron() : base() {
		$this.Name               = 'Curator Pauldron'
		$this.MapObjName         = 'curatorpauldron'
		$this.PurchasePrice      = 9750
		$this.SellPrice          = 4875
		$this.TargetStats        = @{ [StatId]::Defense = 195; [StatId]::MagicDefense = 87 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Preserves precious artifacts and enhances identification abilities.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHistorianPauldron : BEPauldron {
	BEHistorianPauldron() : base() {
		$this.Name               = 'Historian Pauldron'
		$this.MapObjName         = 'historianpauldron'
		$this.PurchasePrice      = 9800
		$this.SellPrice          = 4900
		$this.TargetStats        = @{ [StatId]::Defense = 196; [StatId]::MagicDefense = 88 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grants insight into the past, revealing hidden truths.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDiplomatPauldron : BEPauldron {
	BEDiplomatPauldron() : base() {
		$this.Name               = 'Diplomat Pauldron'
		$this.MapObjName         = 'diplomatpauldron'
		$this.PurchasePrice      = 9850
		$this.SellPrice          = 4925
		$this.TargetStats        = @{ [StatId]::Defense = 197 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Enhances charisma and negotiation skills, aiding in peaceful resolutions.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMediatorPauldron : BEPauldron {
	BEMediatorPauldron() : base() {
		$this.Name               = 'Mediator Pauldron'
		$this.MapObjName         = 'mediatorpauldron'
		$this.PurchasePrice      = 9900
		$this.SellPrice          = 4950
		$this.TargetStats        = @{ [StatId]::Defense = 198 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Promotes understanding and de-escalation in conflicts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPeacemakerPauldron : BEPauldron {
	BEPeacemakerPauldron() : base() {
		$this.Name               = 'Peacemaker Pauldron'
		$this.MapObjName         = 'peacemakerpauldron'
		$this.PurchasePrice      = 9950
		$this.SellPrice          = 4975
		$this.TargetStats        = @{ [StatId]::Defense = 199 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A symbol of hope and unity, capable of calming volatile situations.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWardenofOrderPauldron : BEPauldron {
	BEWardenofOrderPauldron() : base() {
		$this.Name               = 'Warden of Order Pauldron'
		$this.MapObjName         = 'wardenoforderpauldron'
		$this.PurchasePrice      = 10000
		$this.SellPrice          = 5000
		$this.TargetStats        = @{ [StatId]::Defense = 200 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Upholds justice and maintains balance, with unwavering resolve.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChaosBringerPauldron : BEPauldron {
	BEChaosBringerPauldron() : base() {
		$this.Name               = 'Chaos Bringer Pauldron'
		$this.MapObjName         = 'chaosbringerpauldron'
		$this.PurchasePrice      = 10050
		$this.SellPrice          = 5025
		$this.TargetStats        = @{ [StatId]::Defense = 201; [StatId]::MagicDefense = 89 }
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Embodies pure chaos, creating unpredictable and destructive effects.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defnse]) DEF, +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

#endregion





#region Gauntlets

Class BEIronGauntlets : BEGauntlets {
	BEIronGauntlets() : base() {
		$this.Name               = 'Iron Gauntlets'
		$this.MapObjName         = 'irongauntlets'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Standard blacksmith-forged gauntlets, offering basic protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELeatherGauntlets : BEGauntlets {
	BELeatherGauntlets() : base() {
		$this.Name               = 'Leather Gauntlets'
		$this.MapObjName         = 'leathergauntlets'
		$this.PurchasePrice      = 80
		$this.SellPrice          = 40
		$this.TargetStats        = @{
			[StatId]::Defense = 3
			[StatId]::MagicDefense = 4
			[StatId]::Accuracy = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Lightweight leather gloves, offering dexterity with minimal defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBronzeFists : BEGauntlets {
	BEBronzeFists() : base() {
		$this.Name               = 'Bronze Fists'
		$this.MapObjName         = 'bronzefists'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crude but sturdy bronze gauntlets, heavy and reliable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESteelGauntlets : BEGauntlets {
	BESteelGauntlets() : base() {
		$this.Name               = 'Steel Gauntlets'
		$this.MapObjName         = 'steelgauntlets'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Reinforced steel gauntlets, a common choice for adventurers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPaddedMitts : BEGauntlets {
	BEPaddedMitts() : base() {
		$this.Name               = 'Padded Mitts'
		$this.MapObjName         = 'paddedmitts'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::Defense = 4
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Thickly padded gloves, offering surprising magical resistance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEHuntersGrips : BEGauntlets {
	BEHuntersGrips() : base() {
		$this.Name               = 'Hunter''s Grips'
		$this.MapObjName         = 'huntersgrips'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 5
			[StatId]::Accuracy = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Agile gauntlets favored by hunters, enhancing precision.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarriorsGauntlets : BEGauntlets {
	BEWarriorsGauntlets() : base() {
		$this.Name               = 'Warrior''s Gauntlets'
		$this.MapObjName         = 'warriorsgauntlets'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Solid gauntlets for frontline fighters, focusing on physical defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESorcerersBands : BEGauntlets {
	BESorcerersBands() : base() {
		$this.Name               = 'Sorcerer''s Bands'
		$this.MapObjName         = 'sorcerersbands'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Enchanted wristbands, amplifying magical potency.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEChainmailGauntlets : BEGauntlets {
	BEChainmailGauntlets() : base() {
		$this.Name               = 'Chainmail Gauntlets'
		$this.MapObjName         = 'chainmailgauntlets'
		$this.PurchasePrice      = 220
		$this.SellPrice          = 110
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Flexible chainmail providing good all-around protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThiefsGloves : BEGauntlets {
	BEThiefsGloves() : base() {
		$this.Name               = 'Thief''s Gloves'
		$this.MapObjName         = 'thiefsgloves'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{
			[StatId]::Defense = 2
			[StatId]::MagicDefense = 6
			[StatId]::Accuracy = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Thin, dark gloves used for stealth and quick movements.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESentinelGauntlets : BEGauntlets {
	BESentinelGauntlets() : base() {
		$this.Name               = 'Sentinel Gauntlets'
		$this.MapObjName         = 'sentinelgauntlets'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy duty gauntlets for guardians, built for endurance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMysticHandguards : BEGauntlets {
	BEMysticHandguards() : base() {
		$this.Name               = 'Mystic Handguards'
		$this.MapObjName         = 'mystichandguards'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets imbued with faint arcane energy, boosting magic defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGuardCaptainGauntlets : BEGauntlets {
	BEGuardCaptainGauntlets() : base() {
		$this.Name               = 'Guard Captain Gauntlets'
		$this.MapObjName         = 'guardcaptaingauntlets'
		$this.PurchasePrice      = 380
		$this.SellPrice          = 190
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Worn by experienced guards, providing reliable defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBerserkersFists : BEGauntlets {
	BEBerserkersFists() : base() {
		$this.Name               = 'Berserker''s Fists'
		$this.MapObjName         = 'berserkersfists'
		$this.PurchasePrice      = 320
		$this.SellPrice          = 160
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 2
			[StatId]::Accuracy = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crude, spiked gauntlets for aggressive combatants.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEArchersBracers : BEGauntlets {
	BEArchersBracers() : base() {
		$this.Name               = 'Archer''s Bracers'
		$this.MapObjName         = 'archersbracers'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 4
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light and flexible bracers for archers, aiding aim.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHolyGauntlets : BEGauntlets {
	BEHolyGauntlets() : base() {
		$this.Name               = 'Holy Gauntlets'
		$this.MapObjName         = 'holygauntlets'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blessed gauntlets, offering protection against dark forces.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowGrips : BEGauntlets {
	BEShadowGrips() : base() {
		$this.Name               = 'Shadow Grips'
		$this.MapObjName         = 'shadowgrips'
		$this.PurchasePrice      = 260
		$this.SellPrice          = 130
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 10
			[StatId]::Accuracy = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Dark, lightweight gloves for those who operate in shadows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKnightsGauntlets : BEGauntlets {
	BEKnightsGauntlets() : base() {
		$this.Name               = 'Knight''s Gauntlets'
		$this.MapObjName         = 'knightsgauntlets'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Polished and robust gauntlets, fit for a knight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEClericsCuffs : BEGauntlets {
	BEClericsCuffs() : base() {
		$this.Name               = 'Cleric''s Cuffs'
		$this.MapObjName         = 'clericscuffs'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Simple cuffs worn by clerics, aiding in divine magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDraconianClaws : BEGauntlets {
	BEDraconianClaws() : base() {
		$this.Name               = 'Draconian Claws'
		$this.MapObjName         = 'draconianclaws'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets crafted from dragon scales, exceptionally strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEElvenWeaveGloves : BEGauntlets {
	BEElvenWeaveGloves() : base() {
		$this.Name               = 'Elven Weave Gloves'
		$this.MapObjName         = 'elvenweavegloves'
		$this.PurchasePrice      = 420
		$this.SellPrice          = 210
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 20
			[StatId]::Accuracy = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Intricately woven gloves, light and magically resistant.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDwarvenStonefists : BEGauntlets {
	BEDwarvenStonefists() : base() {
		$this.Name               = 'Dwarven Stonefists'
		$this.MapObjName         = 'dwarvenstonefists'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Stone-infused gauntlets, incredibly durable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEnchantedArmbands : BEGauntlets {
	BEEnchantedArmbands() : base() {
		$this.Name               = 'Enchanted Armbands'
		$this.MapObjName         = 'enchantedarmbands'
		$this.PurchasePrice      = 480
		$this.SellPrice          = 240
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Armbands pulsating with magical energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGladiatorsGauntlets : BEGauntlets {
	BEGladiatorsGauntlets() : base() {
		$this.Name               = 'Gladiator''s Gauntlets'
		$this.MapObjName         = 'gladiatorsgauntlets'
		$this.PurchasePrice      = 370
		$this.SellPrice          = 185
		$this.TargetStats        = @{
			[StatId]::Defense = 19
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Rough yet effective gauntlets for arena combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEApprenticesMitts : BEGauntlets {
	BEApprenticesMitts() : base() {
		$this.Name               = 'Apprentice''s Mitts'
		$this.MapObjName         = 'apprenticesmitts'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::Defense = 3
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Basic gloves for a budding spellcaster.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETravelersGloves : BEGauntlets {
	BETravelersGloves() : base() {
		$this.Name               = 'Traveler''s Gloves'
		$this.MapObjName         = 'travelersgloves'
		$this.PurchasePrice      = 70
		$this.SellPrice          = 35
		$this.TargetStats        = @{
			[StatId]::Defense = 2
			[StatId]::MagicDefense = 3
			[StatId]::Accuracy = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Simple, comfortable gloves for long journeys.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrusadersGauntlets : BEGauntlets {
	BECrusadersGauntlets() : base() {
		$this.Name               = 'Crusader''s Gauntlets'
		$this.MapObjName         = 'crusadersgauntlets'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy, ornate gauntlets for a holy warrior.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMoonlitBands : BEGauntlets {
	BEMoonlitBands() : base() {
		$this.Name               = 'Moonlit Bands'
		$this.MapObjName         = 'moonlitbands'
		$this.PurchasePrice      = 520
		$this.SellPrice          = 260
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Silken bands that shimmer with lunar light, boosting mystical power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEVeteransGrips : BEGauntlets {
	BEVeteransGrips() : base() {
		$this.Name               = 'Veteran''s Grips'
		$this.MapObjName         = 'veteransgrips'
		$this.PurchasePrice      = 410
		$this.SellPrice          = 205
		$this.TargetStats        = @{
			[StatId]::Defense = 21
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Well-worn gauntlets of an experienced fighter.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWyvernClaws : BEGauntlets {
	BEWyvernClaws() : base() {
		$this.Name               = 'Wyvern Claws'
		$this.MapObjName         = 'wyvernclaws'
		$this.PurchasePrice      = 580
		$this.SellPrice          = 290
		$this.TargetStats        = @{
			[StatId]::Defense = 26
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets adorned with wyvern talons, sharp and intimidating.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECelestialGauntlets : BEGauntlets {
	BECelestialGauntlets() : base() {
		$this.Name               = 'Celestial Gauntlets'
		$this.MapObjName         = 'celestialgauntlets'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets said to be forged from starlight, offering divine protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarlocksWraps : BEGauntlets {
	BEWarlocksWraps() : base() {
		$this.Name               = 'Warlock''s Wraps'
		$this.MapObjName         = 'warlockswraps'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Dark wraps enhancing destructive magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEPaladinsVambraces : BEGauntlets {
	BEPaladinsVambraces() : base() {
		$this.Name               = 'Paladin''s Vambraces'
		$this.MapObjName         = 'paladinsvambraces'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Polished vambraces of a sworn protector.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESpiritWovenGloves : BEGauntlets {
	BESpiritWovenGloves() : base() {
		$this.Name               = 'Spirit Woven Gloves'
		$this.MapObjName         = 'spiritwovengloves'
		$this.PurchasePrice      = 460
		$this.SellPrice          = 230
		$this.TargetStats        = @{
			[StatId]::Defense = 11
			[StatId]::MagicDefense = 24
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves woven with spectral threads, offering ethereal defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDarkIronGauntlets : BEGauntlets {
	BEDarkIronGauntlets() : base() {
		$this.Name               = 'Dark Iron Gauntlets'
		$this.MapObjName         = 'darkirongauntlets'
		$this.PurchasePrice      = 620
		$this.SellPrice          = 310
		$this.TargetStats        = @{
			[StatId]::Defense = 29
			[StatId]::MagicDefense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets forged from dark iron, ominous and powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEOraclesHandguards : BEGauntlets {
	BEOraclesHandguards() : base() {
		$this.Name               = 'Oracle''s Handguards'
		$this.MapObjName         = 'oracleshandguards'
		$this.PurchasePrice      = 540
		$this.SellPrice          = 270
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 27
			[StatId]::Accuracy = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Handguards that hum with prophetic energy, aiding foresight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BERoyalGauntlets : BEGauntlets {
	BERoyalGauntlets() : base() {
		$this.Name               = 'Royal Gauntlets'
		$this.MapObjName         = 'royalgauntlets'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 38
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Finely crafted gauntlets, fit for royalty.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAssassinsClaws : BEGauntlets {
	BEAssassinsClaws() : base() {
		$this.Name               = 'Assassin''s Claws'
		$this.MapObjName         = 'assassinsclaws'
		$this.PurchasePrice      = 340
		$this.SellPrice          = 170
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 9
			[StatId]::Accuracy = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Sleek, sharp gauntlets designed for quick strikes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETitansFists : BEGauntlets {
	BETitansFists() : base() {
		$this.Name               = 'Titan''s Fists'
		$this.MapObjName         = 'titansfists'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Massive gauntlets rumored to be from a giant.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEPhoenixGloves : BEGauntlets {
	BEPhoenixGloves() : base() {
		$this.Name               = 'Phoenix Gloves'
		$this.MapObjName         = 'phoenixgloves'
		$this.PurchasePrice      = 720
		$this.SellPrice          = 360
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves said to be touched by a phoenix, offering fiery defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEAbyssalGauntlets : BEGauntlets {
	BEAbyssalGauntlets() : base() {
		$this.Name               = 'Abyssal Gauntlets'
		$this.MapObjName         = 'abyssalgauntlets'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 42
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets from the depths, reeking of darkness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERunesmithsGauntlets : BEGauntlets {
	BERunesmithsGauntlets() : base() {
		$this.Name               = 'Runesmith''s Gauntlets'
		$this.MapObjName         = 'runesmithsgauntlets'
		$this.PurchasePrice      = 780
		$this.SellPrice          = 390
		$this.TargetStats        = @{
			[StatId]::Defense = 36
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets inscribed with powerful runes, enhancing craftsmanship and defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHarpyTalons : BEGauntlets {
	BEHarpyTalons() : base() {
		$this.Name               = 'Harpy Talons'
		$this.MapObjName         = 'harpytalons'
		$this.PurchasePrice      = 390
		$this.SellPrice          = 195
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 7
			[StatId]::Accuracy = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light gauntlets with sharp tips, good for quick attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGorgonsGrip : BEGauntlets {
	BEGorgonsGrip() : base() {
		$this.Name               = 'Gorgon''s Grip'
		$this.MapObjName         = 'gorgonsgrip'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Petrifying gauntlets that can turn foes to stone.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDesertNomadGloves : BEGauntlets {
	BEDesertNomadGloves() : base() {
		$this.Name               = 'Desert Nomad Gloves'
		$this.MapObjName         = 'desertnomadgloves'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{
			[StatId]::Defense = 4
			[StatId]::MagicDefense = 5
			[StatId]::Accuracy = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Dust-resistant gloves for arid environments.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFrostbiteGauntlets : BEGauntlets {
	BEFrostbiteGauntlets() : base() {
		$this.Name               = 'Frostbite Gauntlets'
		$this.MapObjName         = 'frostbitegauntlets'
		$this.PurchasePrice      = 760
		$this.SellPrice          = 380
		$this.TargetStats        = @{
			[StatId]::Defense = 34
			[StatId]::MagicDefense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets radiating chilling energy, freezing foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESunstoneCuffs : BEGauntlets {
	BESunstoneCuffs() : base() {
		$this.Name               = 'Sunstone Cuffs'
		$this.MapObjName         = 'sunstonecuffs'
		$this.PurchasePrice      = 680
		$this.SellPrice          = 340
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Cuffs glowing with warm sunlight, providing healing and protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBeastkinGauntlets : BEGauntlets {
	BEBeastkinGauntlets() : base() {
		$this.Name               = 'Beastkin Gauntlets'
		$this.MapObjName         = 'beastkingauntlets'
		$this.PurchasePrice      = 430
		$this.SellPrice          = 215
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made from tough beast hide, wild and untamed.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGolemGauntlets : BEGauntlets {
	BEGolemGauntlets() : base() {
		$this.Name               = 'Golem Gauntlets'
		$this.MapObjName         = 'golemgauntlets'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy, stone-like gauntlets, nearly indestructible.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShamansHandwraps : BEGauntlets {
	BEShamansHandwraps() : base() {
		$this.Name               = 'Shaman''s Handwraps'
		$this.MapObjName         = 'shamanshandwraps'
		$this.PurchasePrice      = 490
		$this.SellPrice          = 245
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 26
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Simple wraps used in rituals, channeling natural magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZephyrGloves : BEGauntlets {
	BEZephyrGloves() : base() {
		$this.Name               = 'Zephyr Gloves'
		$this.MapObjName         = 'zephyrgloves'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 10
			[StatId]::Accuracy = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves light as air, granting incredible speed and evasion.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVampiresEmbrace : BEGauntlets {
	BEVampiresEmbrace() : base() {
		$this.Name               = 'Vampire''s Embrace'
		$this.MapObjName         = 'vampiresembrace'
		$this.PurchasePrice      = 820
		$this.SellPrice          = 410
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 23
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that seem to drain life from enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreadnoughtGauntlets : BEGauntlets {
	BEDreadnoughtGauntlets() : base() {
		$this.Name               = 'Dreadnought Gauntlets'
		$this.MapObjName         = 'dreadnoughtgauntlets'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Massive, intimidating gauntlets for ultimate defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEFaerieSilkGloves : BEGauntlets {
	BEFaerieSilkGloves() : base() {
		$this.Name               = 'Faerie Silk Gloves'
		$this.MapObjName         = 'faeriesilkgloves'
		$this.PurchasePrice      = 560
		$this.SellPrice          = 280
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves woven from mystical faerie silk, incredibly soft yet protective.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESavageGauntlets : BEGauntlets {
	BESavageGauntlets() : base() {
		$this.Name               = 'Savage Gauntlets'
		$this.MapObjName         = 'savagegauntlets'
		$this.PurchasePrice      = 470
		$this.SellPrice          = 235
		$this.TargetStats        = @{
			[StatId]::Defense = 23
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Brutal, unrefined gauntlets for savage warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStormcallerBands : BEGauntlets {
	BEStormcallerBands() : base() {
		$this.Name               = 'Stormcaller Bands'
		$this.MapObjName         = 'stormcallerbands'
		$this.PurchasePrice      = 880
		$this.SellPrice          = 440
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bands crackling with elemental energy, summoning lightning.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidGauntlets : BEGauntlets {
	BEVoidGauntlets() : base() {
		$this.Name               = 'Void Gauntlets'
		$this.MapObjName         = 'voidgauntlets'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 48
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets from the void, absorbing magical attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivineAegis : BEGauntlets {
	BEDivineAegis() : base() {
		$this.Name               = 'Divine Aegis'
		$this.MapObjName         = 'divineaegis'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets offering supreme divine protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInfernoFists : BEGauntlets {
	BEInfernoFists() : base() {
		$this.Name               = 'Inferno Fists'
		$this.MapObjName         = 'infernofists'
		$this.PurchasePrice      = 920
		$this.SellPrice          = 460
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets ablaze with eternal flames, burning all who touch.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESeraphicMitts : BEGauntlets {
	BESeraphicMitts() : base() {
		$this.Name               = 'Seraphic Mitts'
		$this.MapObjName         = 'seraphicmitts'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Feather-light mitts of angelic origin, offering celestial defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBarbariansCuffs : BEGauntlets {
	BEBarbariansCuffs() : base() {
		$this.Name               = 'Barbarian''s Cuffs'
		$this.MapObjName         = 'barbarianscuffs'
		$this.PurchasePrice      = 160
		$this.SellPrice          = 80
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Rough, leather cuffs for a primal warrior.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BERunepowderGauntlets : BEGauntlets {
	BERunepowderGauntlets() : base() {
		$this.Name               = 'Runepowder Gauntlets'
		$this.MapObjName         = 'runepowdergauntlets'
		$this.PurchasePrice      = 680
		$this.SellPrice          = 340
		$this.TargetStats        = @{
			[StatId]::Defense = 24
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets infused with explosive runepowder.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlacialHandguards : BEGauntlets {
	BEGlacialHandguards() : base() {
		$this.Name               = 'Glacial Handguards'
		$this.MapObjName         = 'glacialhandguards'
		$this.PurchasePrice      = 740
		$this.SellPrice          = 370
		$this.TargetStats        = @{
			[StatId]::Defense = 27
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Handguards emitting an icy aura, slowing enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrimsonGauntlets : BEGauntlets {
	BECrimsonGauntlets() : base() {
		$this.Name               = 'Crimson Gauntlets'
		$this.MapObjName         = 'crimsongauntlets'
		$this.PurchasePrice      = 530
		$this.SellPrice          = 265
		$this.TargetStats        = @{
			[StatId]::Defense = 26
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Blood-stained gauntlets of a ruthless warrior.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEmeraldBands : BEGauntlets {
	BEEmeraldBands() : base() {
		$this.Name               = 'Emerald Bands'
		$this.MapObjName         = 'emeraldbands'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 21
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bands gleaming with verdant energy, restoring vitality.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEObsidianFists : BEGauntlets {
	BEObsidianFists() : base() {
		$this.Name               = 'Obsidian Fists'
		$this.MapObjName         = 'obsidianfists'
		$this.PurchasePrice      = 980
		$this.SellPrice          = 490
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets carved from volcanic obsidian, sharp and resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpecterGloves : BEGauntlets {
	BESpecterGloves() : base() {
		$this.Name               = 'Specter Gloves'
		$this.MapObjName         = 'spectergloves'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 33
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves allowing passage through solid objects.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGloomGauntlets : BEGauntlets {
	BEGloomGauntlets() : base() {
		$this.Name               = 'Gloom Gauntlets'
		$this.MapObjName         = 'gloomgauntlets'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that seem to absorb light and hope.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZealotsBracers : BEGauntlets {
	BEZealotsBracers() : base() {
		$this.Name               = 'Zealot''s Bracers'
		$this.MapObjName         = 'zealotsbracers'
		$this.PurchasePrice      = 790
		$this.SellPrice          = 395
		$this.TargetStats        = @{
			[StatId]::Defense = 33
			[StatId]::MagicDefense = 13
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bracers of a fanatical warrior, inspiring courage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEChronoCuffs : BEGauntlets {
	BEChronoCuffs() : base() {
		$this.Name               = 'Chrono Cuffs'
		$this.MapObjName         = 'chronocuffs'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 25
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Cuffs that subtly manipulate time, improving reaction speed.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENecromancersGrips : BEGauntlets {
	BENecromancersGrips() : base() {
		$this.Name               = 'Necromancer''s Grips'
		$this.MapObjName         = 'necromancersgrips'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 11
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grips that draw power from the deceased.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGolemiteGauntlets : BEGauntlets {
	BEGolemiteGauntlets() : base() {
		$this.Name               = 'Golemite Gauntlets'
		$this.MapObjName         = 'golemitegauntlets'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 48
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy gauntlets made from animated stone.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESilverleafGloves : BEGauntlets {
	BESilverleafGloves() : base() {
		$this.Name               = 'Silverleaf Gloves'
		$this.MapObjName         = 'silverleafgloves'
		$this.PurchasePrice      = 620
		$this.SellPrice          = 310
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 29
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves crafted from mystical silverleaf, light and protective.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEAetherialBands : BEGauntlets {
	BEAetherialBands() : base() {
		$this.Name               = 'Aetherial Bands'
		$this.MapObjName         = 'aetherialbands'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 17
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bands pulsating with pure magical essence.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWyrmhideGauntlets : BEGauntlets {
	BEWyrmhideGauntlets() : base() {
		$this.Name               = 'Wyrmhide Gauntlets'
		$this.MapObjName         = 'wyrmhidegauntlets'
		$this.PurchasePrice      = 720
		$this.SellPrice          = 360
		$this.TargetStats        = @{
			[StatId]::Defense = 31
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made from the tough hide of a lesser wyrm.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneguardGauntlets : BEGauntlets {
	BEStoneguardGauntlets() : base() {
		$this.Name               = 'Stoneguard Gauntlets'
		$this.MapObjName         = 'stoneguardgauntlets'
		$this.PurchasePrice      = 670
		$this.SellPrice          = 335
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets reinforced with elemental earth, sturdy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEOceanicGauntlets : BEGauntlets {
	BEOceanicGauntlets() : base() {
		$this.Name               = 'Oceanic Gauntlets'
		$this.MapObjName         = 'oceanicgauntlets'
		$this.PurchasePrice      = 880
		$this.SellPrice          = 440
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 31
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets smelling of the sea, aiding in water spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBlazefireGauntlets : BEGauntlets {
	BEBlazefireGauntlets() : base() {
		$this.Name               = 'Blazefire Gauntlets'
		$this.MapObjName         = 'blazefiregauntlets'
		$this.PurchasePrice      = 930
		$this.SellPrice          = 465
		$this.TargetStats        = @{
			[StatId]::Defense = 37
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets radiating intense heat, burning enemies on contact.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BELunarGauntlets : BEGauntlets {
	BELunarGauntlets() : base() {
		$this.Name               = 'Lunar Gauntlets'
		$this.MapObjName         = 'lunargauntlets'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 28
			[StatId]::Accuracy = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that glow with soft moonlight, enhancing stealth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESolarBracers : BEGauntlets {
	BESolarBracers() : base() {
		$this.Name               = 'Solar Bracers'
		$this.MapObjName         = 'solarbracers'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 19
			[StatId]::MagicDefense = 26
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bracers that pulse with sun''s energy, healing allies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVanguardGauntlets : BEGauntlets {
	BEVanguardGauntlets() : base() {
		$this.Name               = 'Vanguard Gauntlets'
		$this.MapObjName         = 'vanguardgauntlets'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 52
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'The first line of defense, heavy and reliable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStormforgedFists : BEGauntlets {
	BEStormforgedFists() : base() {
		$this.Name               = 'Stormforged Fists'
		$this.MapObjName         = 'stormforgedfists'
		$this.PurchasePrice      = 960
		$this.SellPrice          = 480
		$this.TargetStats        = @{
			[StatId]::Defense = 39
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets forged in a thunderstorm, crackling with power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZealotGauntlets : BEGauntlets {
	BEZealotGauntlets() : base() {
		$this.Name               = 'Zealot Gauntlets'
		$this.MapObjName         = 'zealotgauntlets'
		$this.PurchasePrice      = 1020
		$this.SellPrice          = 510
		$this.TargetStats        = @{
			[StatId]::Defense = 43
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ornately decorated gauntlets, inspiring divine fury.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEShadowstitchGloves : BEGauntlets {
	BEShadowstitchGloves() : base() {
		$this.Name               = 'Shadowstitch Gloves'
		$this.MapObjName         = 'shadowstitchgloves'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 20
			[StatId]::Accuracy = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves sewn from threads of shadow, providing stealth and agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAncientRuneGauntlets : BEGauntlets {
	BEAncientRuneGauntlets() : base() {
		$this.Name               = 'Ancient Rune Gauntlets'
		$this.MapObjName         = 'ancientrunegauntlets'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{
			[StatId]::Defense = 47
			[StatId]::MagicDefense = 24
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets covered in ancient, forgotten runes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBloodboundGauntlets : BEGauntlets {
	BEBloodboundGauntlets() : base() {
		$this.Name               = 'Bloodbound Gauntlets'
		$this.MapObjName         = 'bloodboundgauntlets'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::Defense = 58
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that empower the wearer with every wound taken.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStarlightGauntlets : BEGauntlets {
	BEStarlightGauntlets() : base() {
		$this.Name               = 'Starlight Gauntlets'
		$this.MapObjName         = 'starlightgauntlets'
		$this.PurchasePrice      = 1080
		$this.SellPrice          = 540
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 36
			[StatId]::Accuracy = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets shimmering with starlight, offering celestial guidance.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECrystalineGauntlets : BEGauntlets {
	BECrystalineGauntlets() : base() {
		$this.Name               = 'Crystaline Gauntlets'
		$this.MapObjName         = 'crystalinegauntlets'
		$this.PurchasePrice      = 910
		$this.SellPrice          = 455
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets formed from pure crystal, fragile yet powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGravehandGloves : BEGauntlets {
	BEGravehandGloves() : base() {
		$this.Name               = 'Gravehand Gloves'
		$this.MapObjName         = 'gravehandgloves'
		$this.PurchasePrice      = 770
		$this.SellPrice          = 385
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves that chill to the touch, connected to the underworld.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonhideGauntlets : BEGauntlets {
	BEDragonhideGauntlets() : base() {
		$this.Name               = 'Dragonhide Gauntlets'
		$this.MapObjName         = 'dragonhidegauntlets'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets crafted from the hide of a mature dragon.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDreamweaverBands : BEGauntlets {
	BEDreamweaverBands() : base() {
		$this.Name               = 'Dreamweaver Bands'
		$this.MapObjName         = 'dreamweaverbands'
		$this.PurchasePrice      = 830
		$this.SellPrice          = 415
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 34
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bands that allow the wearer to influence dreams and minds.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEIroncladGauntlets : BEGauntlets {
	BEIroncladGauntlets() : base() {
		$this.Name               = 'Ironclad Gauntlets'
		$this.MapObjName         = 'ironcladgauntlets'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Exceptionally sturdy gauntlets, heavy but impenetrable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulforgedGauntlets : BEGauntlets {
	BESoulforgedGauntlets() : base() {
		$this.Name               = 'Soulforged Gauntlets'
		$this.MapObjName         = 'soulforgedgauntlets'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 68
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets imbued with a captured soul, granting dark power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAngelicGauntlets : BEGauntlets {
	BEAngelicGauntlets() : base() {
		$this.Name               = 'Angelic Gauntlets'
		$this.MapObjName         = 'angelicgauntlets'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets from the heavens, radiating purity and light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDemonicClaws : BEGauntlets {
	BEDemonicClaws() : base() {
		$this.Name               = 'Demonic Claws'
		$this.MapObjName         = 'demonicclaws'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 80
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Vicious gauntlets from the fiery pits, dripping with malice.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEbonGauntlets : BEGauntlets {
	BEEbonGauntlets() : base() {
		$this.Name               = 'Ebon Gauntlets'
		$this.MapObjName         = 'ebongauntlets'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 85
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets forged from solidified darkness, absorbing all light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BERadiantFists : BEGauntlets {
	BERadiantFists() : base() {
		$this.Name               = 'Radiant Fists'
		$this.MapObjName         = 'radiantfists'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 78
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Fists that glow with holy light, scorching evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEVoidforgedGauntlets : BEGauntlets {
	BEVoidforgedGauntlets() : base() {
		$this.Name               = 'Voidforged Gauntlets'
		$this.MapObjName         = 'voidforgedgauntlets'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 90
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets crafted in the heart of the void, immense power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMythrilGauntlets : BEGauntlets {
	BEMythrilGauntlets() : base() {
		$this.Name               = 'Mythril Gauntlets'
		$this.MapObjName         = 'mythrilgauntlets'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::Defense = 95
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of legendary mythril, light yet incredibly strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAdamantiteGauntlets : BEGauntlets {
	BEAdamantiteGauntlets() : base() {
		$this.Name               = 'Adamantite Gauntlets'
		$this.MapObjName         = 'adamantitegauntlets'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Defense = 100
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of the hardest known metal, virtually unbreakable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlimmeringGauntlets : BEGauntlets {
	BEGlimmeringGauntlets() : base() {
		$this.Name               = 'Glimmering Gauntlets'
		$this.MapObjName         = 'glimmeringgauntlets'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that sparkle with a faint, magical light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStonehideGloves : BEGauntlets {
	BEStonehideGloves() : base() {
		$this.Name               = 'Stonehide Gloves'
		$this.MapObjName         = 'stonehidegloves'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves made from petrified animal hide, surprisingly tough.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESilentWraps : BEGauntlets {
	BESilentWraps() : base() {
		$this.Name               = 'Silent Wraps'
		$this.MapObjName         = 'silentwraps'
		$this.PurchasePrice      = 140
		$this.SellPrice          = 70
		$this.TargetStats        = @{
			[StatId]::Defense = 3
			[StatId]::MagicDefense = 7
			[StatId]::Accuracy = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Soft wraps for quiet movement, favored by scouts.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWyrmfangGauntlets : BEGauntlets {
	BEWyrmfangGauntlets() : base() {
		$this.Name               = 'Wyrmfang Gauntlets'
		$this.MapObjName         = 'wyrmfanggauntlets'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets tipped with the fangs of a juvenile wyrm.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEWhisperwindBands : BEGauntlets {
	BEWhisperwindBands() : base() {
		$this.Name               = 'Whisperwind Bands'
		$this.MapObjName         = 'whisperwindbands'
		$this.PurchasePrice      = 580
		$this.SellPrice          = 290
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 23
			[StatId]::Accuracy = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bands that carry the faintest whispers, granting keen senses.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOgreGauntlets : BEGauntlets {
	BEOgreGauntlets() : base() {
		$this.Name               = 'Ogre Gauntlets'
		$this.MapObjName         = 'ogregauntlets'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crude and massive gauntlets, for the strongest warriors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDryadsEmbrace : BEGauntlets {
	BEDryadsEmbrace() : base() {
		$this.Name               = 'Dryad''s Embrace'
		$this.MapObjName         = 'dryadsembrace'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 26
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves woven with living vines, connected to nature''s magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEForgeheartGauntlets : BEGauntlets {
	BEForgeheartGauntlets() : base() {
		$this.Name               = 'Forgeheart Gauntlets'
		$this.MapObjName         = 'forgeheartgauntlets'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets from a master smith''s forge, enduring and hot.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStonetoothFists : BEGauntlets {
	BEStonetoothFists() : base() {
		$this.Name               = 'Stonetooth Fists'
		$this.MapObjName         = 'stonetoothfists'
		$this.PurchasePrice      = 480
		$this.SellPrice          = 240
		$this.TargetStats        = @{
			[StatId]::Defense = 24
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets with jagged, stone-like knuckles.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDeepwoodGrips : BEGauntlets {
	BEDeepwoodGrips() : base() {
		$this.Name               = 'Deepwood Grips'
		$this.MapObjName         = 'deepwoodgrips'
		$this.PurchasePrice      = 360
		$this.SellPrice          = 180
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 15
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves made from ancient forest materials, blending with shadows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECelestialSphereGauntlets : BEGauntlets {
	BECelestialSphereGauntlets() : base() {
		$this.Name               = 'Celestial Sphere Gauntlets'
		$this.MapObjName         = 'celestialspheregauntlets'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets adorned with miniature celestial spheres, aiding astral magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowbinderGauntlets : BEGauntlets {
	BEShadowbinderGauntlets() : base() {
		$this.Name               = 'Shadowbinder Gauntlets'
		$this.MapObjName         = 'shadowbindergauntlets'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that seem to control shadows, binding foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDrakeskinGauntlets : BEGauntlets {
	BEDrakeskinGauntlets() : base() {
		$this.Name               = 'Drakeskin Gauntlets'
		$this.MapObjName         = 'drakeskingauntlets'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 38
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made from the durable hide of a drake.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEChitinousGauntlets : BEGauntlets {
	BEChitinousGauntlets() : base() {
		$this.Name               = 'Chitinous Gauntlets'
		$this.MapObjName         = 'chitinousgauntlets'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets crafted from hardened insect chitin, surprisingly light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVikingsBracers : BEGauntlets {
	BEVikingsBracers() : base() {
		$this.Name               = 'Viking''s Bracers'
		$this.MapObjName         = 'vikingsbracers'
		$this.PurchasePrice      = 330
		$this.SellPrice          = 165
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Sturdy bracers for a seafaring warrior.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESirensGloves : BEGauntlets {
	BESirensGloves() : base() {
		$this.Name               = 'Siren''s Gloves'
		$this.MapObjName         = 'sirensgloves'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves with a captivating aura, charming adversaries.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGargoyleGauntlets : BEGauntlets {
	BEGargoyleGauntlets() : base() {
		$this.Name               = 'Gargoyle Gauntlets'
		$this.MapObjName         = 'gargoylegauntlets'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets resembling gargoyle claws, stony and imposing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEReapersGrasp : BEGauntlets {
	BEReapersGrasp() : base() {
		$this.Name               = 'Reaper''s Grasp'
		$this.MapObjName         = 'reapersgrasp'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that chill the soul, wielding spectral power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunkenGauntlets : BEGauntlets {
	BESunkenGauntlets() : base() {
		$this.Name               = 'Sunken Gauntlets'
		$this.MapObjName         = 'sunkengauntlets'
		$this.PurchasePrice      = 420
		$this.SellPrice          = 210
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Barnacle-encrusted gauntlets from a forgotten wreck.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETempestFists : BEGauntlets {
	BETempestFists() : base() {
		$this.Name               = 'Tempest Fists'
		$this.MapObjName         = 'tempestfists'
		$this.PurchasePrice      = 970
		$this.SellPrice          = 485
		$this.TargetStats        = @{
			[StatId]::Defense = 42
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Fists crackling with the raw energy of a storm.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWispweaveGloves : BEGauntlets {
	BEWispweaveGloves() : base() {
		$this.Name               = 'Wispweave Gloves'
		$this.MapObjName         = 'wispweavegloves'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 32
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves made of ethereal wisp material, nearly invisible.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BENomadsGauntlets : BEGauntlets {
	BENomadsGauntlets() : base() {
		$this.Name               = 'Nomad''s Gauntlets'
		$this.MapObjName         = 'nomadsgauntlets'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Practical and robust gauntlets for a wanderer.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAshwoodGauntlets : BEGauntlets {
	BEAshwoodGauntlets() : base() {
		$this.Name               = 'Ashwood Gauntlets'
		$this.MapObjName         = 'ashwoodgauntlets'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 17
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets carved from ancient ashwood, light and resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBloodsteelGauntlets : BEGauntlets {
	BEBloodsteelGauntlets() : base() {
		$this.Name               = 'Bloodsteel Gauntlets'
		$this.MapObjName         = 'bloodsteelgauntlets'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets forged with blood ritual, dark and potent.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStarfallGauntlets : BEGauntlets {
	BEStarfallGauntlets() : base() {
		$this.Name               = 'Starfall Gauntlets'
		$this.MapObjName         = 'starfallgauntlets'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets embedded with fallen star fragments, radiating power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOraclesTouch : BEGauntlets {
	BEOraclesTouch() : base() {
		$this.Name               = 'Oracle''s Touch'
		$this.MapObjName         = 'oraclestouch'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 36
			[StatId]::Accuracy = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves allowing brief glimpses into the future, improving reaction.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGriffinRidersGauntlets : BEGauntlets {
	BEGriffinRidersGauntlets() : base() {
		$this.Name               = 'Griffin Rider''s Gauntlets'
		$this.MapObjName         = 'griffinridersgauntlets'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Aerodynamic gauntlets for those who ride the skies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOnyxFists : BEGauntlets {
	BEOnyxFists() : base() {
		$this.Name               = 'Onyx Fists'
		$this.MapObjName         = 'onyxfists'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets crafted from dark onyx, absorbing negative energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZephyrweaveGauntlets : BEGauntlets {
	BEZephyrweaveGauntlets() : base() {
		$this.Name               = 'Zephyrweave Gauntlets'
		$this.MapObjName         = 'zephyrweavegauntlets'
		$this.PurchasePrice      = 880
		$this.SellPrice          = 440
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 27
			[StatId]::Accuracy = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets woven from enchanted air, granting swiftness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECragskinGauntlets : BEGauntlets {
	BECragskinGauntlets() : base() {
		$this.Name               = 'Cragskin Gauntlets'
		$this.MapObjName         = 'cragskingauntlets'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made from hardened mountain hide, durable and rugged.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMysticSentinelGauntlets : BEGauntlets {
	BEMysticSentinelGauntlets() : base() {
		$this.Name               = 'Mystic Sentinel Gauntlets'
		$this.MapObjName         = 'mysticsentinelgauntlets'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of an ancient order, protecting magic users.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEInfernalGrips : BEGauntlets {
	BEInfernalGrips() : base() {
		$this.Name               = 'Infernal Grips'
		$this.MapObjName         = 'infernalgrips'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 62
			[StatId]::MagicDefense = 24
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grips that burn with a malevolent fire, searing enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAegisGauntlets : BEGauntlets {
	BEAegisGauntlets() : base() {
		$this.Name               = 'Aegis Gauntlets'
		$this.MapObjName         = 'aegisgauntlets'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets with an invisible shield, deflecting attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidcallersCuffs : BEGauntlets {
	BEVoidcallersCuffs() : base() {
		$this.Name               = 'Voidcaller''s Cuffs'
		$this.MapObjName         = 'voidcallerscuffs'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Cuffs that resonate with the void, amplifying dark spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGravewardGauntlets : BEGauntlets {
	BEGravewardGauntlets() : base() {
		$this.Name               = 'Graveward Gauntlets'
		$this.MapObjName         = 'gravewardgauntlets'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 72
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a silent guardian, protecting sacred grounds.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECelestialHandguards : BEGauntlets {
	BECelestialHandguards() : base() {
		$this.Name               = 'Celestial Handguards'
		$this.MapObjName         = 'celestialhandguards'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 78
			[StatId]::MagicDefense = 33
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Handguards of celestial origin, radiating divine light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEElderwoodGauntlets : BEGauntlets {
	BEElderwoodGauntlets() : base() {
		$this.Name               = 'Elderwood Gauntlets'
		$this.MapObjName         = 'elderwoodgauntlets'
		$this.PurchasePrice      = 980
		$this.SellPrice          = 490
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 20
			[StatId]::Accuracy = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets carved from ancient, sentient wood.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStonefleshGauntlets : BEGauntlets {
	BEStonefleshGauntlets() : base() {
		$this.Name               = 'Stoneflesh Gauntlets'
		$this.MapObjName         = 'stonefleshgauntlets'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that seem to turn skin to stone.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESunblessedGauntlets : BEGauntlets {
	BESunblessedGauntlets() : base() {
		$this.Name               = 'Sunblessed Gauntlets'
		$this.MapObjName         = 'sunblessedgauntlets'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
			[StatId]::Defense = 33
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets infused with the sun''s warmth, healing allies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowfangGloves : BEGauntlets {
	BEShadowfangGloves() : base() {
		$this.Name               = 'Shadowfang Gloves'
		$this.MapObjName         = 'shadowfanggloves'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 25
			[StatId]::Accuracy = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves with retractable shadow claws, for stealthy strikes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWyvernscaleGauntlets : BEGauntlets {
	BEWyvernscaleGauntlets() : base() {
		$this.Name               = 'Wyvernscale Gauntlets'
		$this.MapObjName         = 'wyvernscalegauntlets'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made from the scales of a full-grown wyvern.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStormbreakerGauntlets : BEGauntlets {
	BEStormbreakerGauntlets() : base() {
		$this.Name               = 'Stormbreaker Gauntlets'
		$this.MapObjName         = 'stormbreakergauntlets'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::Defense = 58
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that can channel and disperse stormy energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFeywildGloves : BEGauntlets {
	BEFeywildGloves() : base() {
		$this.Name               = 'Feywild Gloves'
		$this.MapObjName         = 'feywildgloves'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 38
			[StatId]::Accuracy = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves touched by the Feywild, shimmering with magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEAbyssalMawGauntlets : BEGauntlets {
	BEAbyssalMawGauntlets() : base() {
		$this.Name               = 'Abyssal Maw Gauntlets'
		$this.MapObjName         = 'abyssalmawgauntlets'
		$this.PurchasePrice      = 1450
		$this.SellPrice          = 725
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets resembling a gaping maw, crushing foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarforgedGauntlets : BEGauntlets {
	BEStarforgedGauntlets() : base() {
		$this.Name               = 'Starforged Gauntlets'
		$this.MapObjName         = 'starforgedgauntlets'
		$this.PurchasePrice      = 1550
		$this.SellPrice          = 775
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 30
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets forged under a specific constellation, granting luck.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonlordsGauntlets : BEGauntlets {
	BEDragonlordsGauntlets() : base() {
		$this.Name               = 'Dragonlord''s Gauntlets'
		$this.MapObjName         = 'dragonlordsgauntlets'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 88
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets fit for a dragonlord, of immense power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESpiritwalkerGloves : BEGauntlets {
	BESpiritwalkerGloves() : base() {
		$this.Name               = 'Spiritwalker Gloves'
		$this.MapObjName         = 'spiritwalkergloves'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 42
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves that allow brief interaction with spirits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BENetheriteGauntlets : BEGauntlets {
	BENetheriteGauntlets() : base() {
		$this.Name               = 'Netherite Gauntlets'
		$this.MapObjName         = 'netheritegauntlets'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 92
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made from a rare, volatile metal.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArcaneWeaveGloves : BEGauntlets {
	BEArcaneWeaveGloves() : base() {
		$this.Name               = 'Arcane Weave Gloves'
		$this.MapObjName         = 'arcaneweavegloves'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves intricately woven with arcane threads, enhancing spellcasting.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEColossusGauntlets : BEGauntlets {
	BEColossusGauntlets() : base() {
		$this.Name               = 'Colossus Gauntlets'
		$this.MapObjName         = 'colossusgauntlets'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 98
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Massive gauntlets for a champion, empowering strikes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEChronoFluxGauntlets : BEGauntlets {
	BEChronoFluxGauntlets() : base() {
		$this.Name               = 'Chrono Flux Gauntlets'
		$this.MapObjName         = 'chronofluxgauntlets'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 35
			[StatId]::Accuracy = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that bend time, granting rapid movements.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidShroudGauntlets : BEGauntlets {
	BEVoidShroudGauntlets() : base() {
		$this.Name               = 'Void Shroud Gauntlets'
		$this.MapObjName         = 'voidshroudgauntlets'
		$this.PurchasePrice      = 1850
		$this.SellPrice          = 925
		$this.TargetStats        = @{
			[StatId]::Defense = 85
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that appear to fade in and out of existence.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELionheartGauntlets : BEGauntlets {
	BELionheartGauntlets() : base() {
		$this.Name               = 'Lionheart Gauntlets'
		$this.MapObjName         = 'lionheartgauntlets'
		$this.PurchasePrice      = 1650
		$this.SellPrice          = 825
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets bearing the symbol of a lion, inspiring courage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEValkyriesVambraces : BEGauntlets {
	BEValkyriesVambraces() : base() {
		$this.Name               = 'Valkyrie''s Vambraces'
		$this.MapObjName         = 'valkyriesvambraces'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 68
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Vambraces adorned with wings, lighter than air yet strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESerpentScaleGauntlets : BEGauntlets {
	BESerpentScaleGauntlets() : base() {
		$this.Name               = 'Serpent Scale Gauntlets'
		$this.MapObjName         = 'serpentscalegauntlets'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made from large serpent scales, flexible and tough.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGolemHandguards : BEGauntlets {
	BEGolemHandguards() : base() {
		$this.Name               = 'Golem Handguards'
		$this.MapObjName         = 'golemhandguards'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Handguards of an ancient golem, incredibly durable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMoonpetalGloves : BEGauntlets {
	BEMoonpetalGloves() : base() {
		$this.Name               = 'Moonpetal Gloves'
		$this.MapObjName         = 'moonpetalgloves'
		$this.PurchasePrice      = 680
		$this.SellPrice          = 340
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 30
			[StatId]::Accuracy = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves woven from moonlit petals, soft and magically potent.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECenturionGauntlets : BEGauntlets {
	BECenturionGauntlets() : base() {
		$this.Name               = 'Centurion Gauntlets'
		$this.MapObjName         = 'centuriongauntlets'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy, practical gauntlets for a seasoned soldier.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESpellboundGauntlets : BEGauntlets {
	BESpellboundGauntlets() : base() {
		$this.Name               = 'Spellbound Gauntlets'
		$this.MapObjName         = 'spellboundgauntlets'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets imbued with a powerful, protective spell.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIronGuardGauntlets : BEGauntlets {
	BEIronGuardGauntlets() : base() {
		$this.Name               = 'Iron Guard Gauntlets'
		$this.MapObjName         = 'ironguardgauntlets'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Reinforced iron gauntlets, preferred by city guards.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERoughspunGrips : BEGauntlets {
	BERoughspunGrips() : base() {
		$this.Name               = 'Roughspun Grips'
		$this.MapObjName         = 'roughspungrips'
		$this.PurchasePrice      = 60
		$this.SellPrice          = 30
		$this.TargetStats        = @{
			[StatId]::Defense = 2
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crude, but surprisingly durable gloves.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBrigandsBracers : BEGauntlets {
	BEBrigandsBracers() : base() {
		$this.Name               = 'Brigand''s Bracers'
		$this.MapObjName         = 'brigandsbracers'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Simple bracers, often found on bandits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZealotsMitts : BEGauntlets {
	BEZealotsMitts() : base() {
		$this.Name               = 'Zealot''s Mitts'
		$this.MapObjName         = 'zealotsmitts'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{
			[StatId]::Defense = 4
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light mitts for a quick, devoted follower.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESilkenGloves : BEGauntlets {
	BESilkenGloves() : base() {
		$this.Name               = 'Silken Gloves'
		$this.MapObjName         = 'silkengloves'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::Defense = 1
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Soft, elegant gloves offering minimal protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEApprenticesGauntlets : BEGauntlets {
	BEApprenticesGauntlets() : base() {
		$this.Name               = 'Apprentice''s Gauntlets'
		$this.MapObjName         = 'apprenticesgauntlets'
		$this.PurchasePrice      = 100
		$this.SellPrice          = 50
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Basic gauntlets for those learning the craft.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWanderersCuffs : BEGauntlets {
	BEWanderersCuffs() : base() {
		$this.Name               = 'Wanderer''s Cuffs'
		$this.MapObjName         = 'wandererscuffs'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Durable cuffs for endless travels.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFabledGauntlets : BEGauntlets {
	BEFabledGauntlets() : base() {
		$this.Name               = 'Fabled Gauntlets'
		$this.MapObjName         = 'fabledgauntlets'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Defense = 90
			[StatId]::MagicDefense = 45
			[StatId]::Accuracy = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets spoken of in legends, their power growing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGrimskullGauntlets : BEGauntlets {
	BEGrimskullGauntlets() : base() {
		$this.Name               = 'Grimskull Gauntlets'
		$this.MapObjName         = 'grimskullgauntlets'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets adorned with skulls, intimidating and dark.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECrystalweaveGloves : BEGauntlets {
	BECrystalweaveGloves() : base() {
		$this.Name               = 'Crystalweave Gloves'
		$this.MapObjName         = 'crystalweavegloves'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves woven with fine crystal threads, enhancing focus.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDragonswornGauntlets : BEGauntlets {
	BEDragonswornGauntlets() : base() {
		$this.Name               = 'Dragonsworn Gauntlets'
		$this.MapObjName         = 'dragonsworngauntlets'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 82
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of those who pledge loyalty to dragons.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEternalFlameGauntlets : BEGauntlets {
	BEEternalFlameGauntlets() : base() {
		$this.Name               = 'Eternal Flame Gauntlets'
		$this.MapObjName         = 'eternalflamegauntlets'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 80
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets burning with a non-consuming flame.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWhispersteelGauntlets : BEGauntlets {
	BEWhispersteelGauntlets() : base() {
		$this.Name               = 'Whispersteel Gauntlets'
		$this.MapObjName         = 'whispersteelgauntlets'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 25
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made of a silent, shadowy metal.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneskinGrips : BEGauntlets {
	BEStoneskinGrips() : base() {
		$this.Name               = 'Stoneskin Grips'
		$this.MapObjName         = 'stoneskingrips'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::Defense = 58
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grips that harden the skin, making it resistant.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGoddesssHandguards : BEGauntlets {
	BEGoddesssHandguards() : base() {
		$this.Name               = 'Goddess''s Handguards'
		$this.MapObjName         = 'goddessshandguards'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 95
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Handguards said to be touched by a deity, offering ultimate defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEChampionsGauntlets : BEGauntlets {
	BEChampionsGauntlets() : base() {
		$this.Name               = 'Champion''s Gauntlets'
		$this.MapObjName         = 'championsgauntlets'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::Defense = 100
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a legendary champion, imbued with their might.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWraithtouchGloves : BEGauntlets {
	BEWraithtouchGloves() : base() {
		$this.Name               = 'Wraithtouch Gloves'
		$this.MapObjName         = 'wraithtouchgloves'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves that pass through enemies, leaving a chilling effect.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETitanforgedGauntlets : BEGauntlets {
	BETitanforgedGauntlets() : base() {
		$this.Name               = 'Titanforged Gauntlets'
		$this.MapObjName         = 'titanforgedgauntlets'
		$this.PurchasePrice      = 2400
		$this.SellPrice          = 1200
		$this.TargetStats        = @{
			[StatId]::Defense = 110
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets forged in a titan''s forge, immense and heavy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEtherealBands : BEGauntlets {
	BEEtherealBands() : base() {
		$this.Name               = 'Ethereal Bands'
		$this.MapObjName         = 'etherealbands'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bands composed of pure ether, granting magical prowess.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlademasterGauntlets : BEGauntlets {
	BEBlademasterGauntlets() : base() {
		$this.Name               = 'Blademaster Gauntlets'
		$this.MapObjName         = 'blademastergauntlets'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 10
			[StatId]::Accuracy = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets designed for precision and offensive strikes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOathswornGauntlets : BEGauntlets {
	BEOathswornGauntlets() : base() {
		$this.Name               = 'Oathsworn Gauntlets'
		$this.MapObjName         = 'oathsworngauntlets'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 48
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a sworn knight, unbreakable in their resolve.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESilverlightGloves : BEGauntlets {
	BESilverlightGloves() : base() {
		$this.Name               = 'Silverlight Gloves'
		$this.MapObjName         = 'silverlightgloves'
		$this.PurchasePrice      = 780
		$this.SellPrice          = 390
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 25
			[StatId]::Accuracy = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves that emanate a faint silver light, revealing hidden paths.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGuardiansGrip : BEGauntlets {
	BEGuardiansGrip() : base() {
		$this.Name               = 'Guardian''s Grip'
		$this.MapObjName         = 'guardiansgrip'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 36
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'A firm grip for protecting others.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMysticRelicGauntlets : BEGauntlets {
	BEMysticRelicGauntlets() : base() {
		$this.Name               = 'Mystic Relic Gauntlets'
		$this.MapObjName         = 'mysticrelicgauntlets'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets from a forgotten civilization, holding ancient power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowdancerGloves : BEGauntlets {
	BEShadowdancerGloves() : base() {
		$this.Name               = 'Shadowdancer Gloves'
		$this.MapObjName         = 'shadowdancergloves'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 18
			[StatId]::Accuracy = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves allowing swift, silent movement through shadows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBattlewornGauntlets : BEGauntlets {
	BEBattlewornGauntlets() : base() {
		$this.Name               = 'Battleworn Gauntlets'
		$this.MapObjName         = 'battleworngauntlets'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that have seen countless battles, scarred but strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESpiritboundGauntlets : BEGauntlets {
	BESpiritboundGauntlets() : base() {
		$this.Name               = 'Spiritbound Gauntlets'
		$this.MapObjName         = 'spiritboundgauntlets'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that link to a spirit, enhancing defense and magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVenomousGrips : BEGauntlets {
	BEVenomousGrips() : base() {
		$this.Name               = 'Venomous Grips'
		$this.MapObjName         = 'venomousgrips'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 10
			[StatId]::Accuracy = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets dripping with faint poison, for subtle attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZealotsFists : BEGauntlets {
	BEZealotsFists() : base() {
		$this.Name               = 'Zealot''s Fists'
		$this.MapObjName         = 'zealotsfists'
		$this.PurchasePrice      = 520
		$this.SellPrice          = 260
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Fists of a righteous warrior, imbued with fervor.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEmeraldScaleGauntlets : BEGauntlets {
	BEEmeraldScaleGauntlets() : base() {
		$this.Name               = 'Emerald Scale Gauntlets'
		$this.MapObjName         = 'emeraldscalegauntlets'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made from vibrant green dragon scales.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFrostWeaverGloves : BEGauntlets {
	BEFrostWeaverGloves() : base() {
		$this.Name               = 'Frost Weaver Gloves'
		$this.MapObjName         = 'frostweavergloves'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves that manipulate ice, weaving chilling spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEOnyxClawGauntlets : BEGauntlets {
	BEOnyxClawGauntlets() : base() {
		$this.Name               = 'Onyx Claw Gauntlets'
		$this.MapObjName         = 'onyxclawgauntlets'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets with sharp onyx claws, for piercing attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStarshardGauntlets : BEGauntlets {
	BEStarshardGauntlets() : base() {
		$this.Name               = 'Starshard Gauntlets'
		$this.MapObjName         = 'starshardgauntlets'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets embedded with fragments of fallen stars, radiating cosmic energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMoonstoneBracers : BEGauntlets {
	BEMoonstoneBracers() : base() {
		$this.Name               = 'Moonstone Bracers'
		$this.MapObjName         = 'moonstonebracers'
		$this.PurchasePrice      = 980
		$this.SellPrice          = 490
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 38
			[StatId]::Accuracy = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bracers glowing with soft moonstone, aiding nocturnal endeavors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBlazeCoreGauntlets : BEGauntlets {
	BEBlazeCoreGauntlets() : base() {
		$this.Name               = 'Blaze Core Gauntlets'
		$this.MapObjName         = 'blazecoregauntlets'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets with an internal core of fire, burning steadily.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BENightfallGauntlets : BEGauntlets {
	BENightfallGauntlets() : base() {
		$this.Name               = 'Nightfall Gauntlets'
		$this.MapObjName         = 'nightfallgauntlets'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 25
			[StatId]::Accuracy = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that absorb surrounding light, cloaking the wearer.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAncientSteelGauntlets : BEGauntlets {
	BEAncientSteelGauntlets() : base() {
		$this.Name               = 'Ancient Steel Gauntlets'
		$this.MapObjName         = 'ancientsteelgauntlets'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of incredibly old, resilient steel.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivineEssenceGauntlets : BEGauntlets {
	BEDivineEssenceGauntlets() : base() {
		$this.Name               = 'Divine Essence Gauntlets'
		$this.MapObjName         = 'divineessencegauntlets'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 80
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets pulsating with pure divine essence, warding off evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidShardGloves : BEGauntlets {
	BEVoidShardGloves() : base() {
		$this.Name               = 'Void Shard Gloves'
		$this.MapObjName         = 'voidshardgloves'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 48
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves containing fragments of the void, disorienting foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrimsonGuardGauntlets : BEGauntlets {
	BECrimsonGuardGauntlets() : base() {
		$this.Name               = 'Crimson Guard Gauntlets'
		$this.MapObjName         = 'crimsonguardgauntlets'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a crimson guard, stained by many battles.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEnchantresssBands : BEGauntlets {
	BEEnchantresssBands() : base() {
		$this.Name               = 'Enchantress''s Bands'
		$this.MapObjName         = 'enchantresssbands'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 42
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bands for a powerful enchantress, boosting all magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BERuneforgedGauntlets : BEGauntlets {
	BERuneforgedGauntlets() : base() {
		$this.Name               = 'Runeforged Gauntlets'
		$this.MapObjName         = 'runeforgedgauntlets'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets forged with powerful runes, radiating mystical energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWhisperwindGauntlets : BEGauntlets {
	BEWhisperwindGauntlets() : base() {
		$this.Name               = 'Whisperwind Gauntlets'
		$this.MapObjName         = 'whisperwindgauntlets'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 20
			[StatId]::Accuracy = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets light as a breeze, granting unparalleled agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEarthshakerGauntlets : BEGauntlets {
	BEEarthshakerGauntlets() : base() {
		$this.Name               = 'Earthshaker Gauntlets'
		$this.MapObjName         = 'earthshakergauntlets'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that can cause minor tremors with each strike.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESoulfireGrips : BEGauntlets {
	BESoulfireGrips() : base() {
		$this.Name               = 'Soulfire Grips'
		$this.MapObjName         = 'soulfiregrips'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grips that burn with ethereal flame, searing spirits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonheartGauntlets : BEGauntlets {
	BEDragonheartGauntlets() : base() {
		$this.Name               = 'Dragonheart Gauntlets'
		$this.MapObjName         = 'dragonheartgauntlets'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 90
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets from the heart of a dragon, radiating power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECelestialTearGauntlets : BEGauntlets {
	BECelestialTearGauntlets() : base() {
		$this.Name               = 'Celestial Tear Gauntlets'
		$this.MapObjName         = 'celestialteargauntlets'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 95
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets said to be formed from a fallen star''s tear.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAbyssalPlateGauntlets : BEGauntlets {
	BEAbyssalPlateGauntlets() : base() {
		$this.Name               = 'Abyssal Plate Gauntlets'
		$this.MapObjName         = 'abyssalplategauntlets'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Defense = 100
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy gauntlets from the deepest abyss, extremely resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhoenixFeatherGloves : BEGauntlets {
	BEPhoenixFeatherGloves() : base() {
		$this.Name               = 'Phoenix Feather Gloves'
		$this.MapObjName         = 'phoenixfeathergloves'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 48
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves woven with phoenix feathers, offering light and healing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWarlordsGauntlets : BEGauntlets {
	BEWarlordsGauntlets() : base() {
		$this.Name               = 'Warlord''s Gauntlets'
		$this.MapObjName         = 'warlordsgauntlets'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 78
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a fearsome warlord, commanding respect.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDreamsteelGauntlets : BEGauntlets {
	BEDreamsteelGauntlets() : base() {
		$this.Name               = 'Dreamsteel Gauntlets'
		$this.MapObjName         = 'dreamsteelgauntlets'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 32
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets crafted from solidified dreams, both light and strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidstoneGauntlets : BEGauntlets {
	BEVoidstoneGauntlets() : base() {
		$this.Name               = 'Voidstone Gauntlets'
		$this.MapObjName         = 'voidstonegauntlets'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 80
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made of voidstone, absorbing all magical attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunpetalHandguards : BEGauntlets {
	BESunpetalHandguards() : base() {
		$this.Name               = 'Sunpetal Handguards'
		$this.MapObjName         = 'sunpetalhandguards'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 40
			[StatId]::Accuracy = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Handguards made from sun-kissed petals, vibrant and delicate.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECrimsonIronGauntlets : BEGauntlets {
	BECrimsonIronGauntlets() : base() {
		$this.Name               = 'Crimson Iron Gauntlets'
		$this.MapObjName         = 'crimsonirongauntlets'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 11
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Iron gauntlets dyed crimson, symbolizing ferocity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWovenVineGloves : BEGauntlets {
	BEWovenVineGloves() : base() {
		$this.Name               = 'Woven Vine Gloves'
		$this.MapObjName         = 'wovenvinegloves'
		$this.PurchasePrice      = 120
		$this.SellPrice          = 60
		$this.TargetStats        = @{
			[StatId]::Defense = 4
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves crafted from strong, flexible vines.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneSplinterGauntlets : BEGauntlets {
	BEStoneSplinterGauntlets() : base() {
		$this.Name               = 'Stone Splinter Gauntlets'
		$this.MapObjName         = 'stonesplintergauntlets'
		$this.PurchasePrice      = 220
		$this.SellPrice          = 110
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets reinforced with sharp stone splinters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELeatherBoundGauntlets : BEGauntlets {
	BELeatherBoundGauntlets() : base() {
		$this.Name               = 'Leather-Bound Gauntlets'
		$this.MapObjName         = 'leatherboundgauntlets'
		$this.PurchasePrice      = 160
		$this.SellPrice          = 80
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Leather gauntlets reinforced with metal bands.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETravelersBracers : BEGauntlets {
	BETravelersBracers() : base() {
		$this.Name               = 'Traveler''s Bracers'
		$this.MapObjName         = 'travelersbracers'
		$this.PurchasePrice      = 110
		$this.SellPrice          = 55
		$this.TargetStats        = @{
			[StatId]::Defense = 5
			[StatId]::MagicDefense = 3
			[StatId]::Accuracy = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Comfortable bracers for long journeys.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESimpleIronGauntlets : BEGauntlets {
	BESimpleIronGauntlets() : base() {
		$this.Name               = 'Simple Iron Gauntlets'
		$this.MapObjName         = 'simpleirongauntlets'
		$this.PurchasePrice      = 90
		$this.SellPrice          = 45
		$this.TargetStats        = @{
			[StatId]::Defense = 4
			[StatId]::MagicDefense = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Basic, unadorned iron gauntlets.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPaddedIronGauntlets : BEGauntlets {
	BEPaddedIronGauntlets() : base() {
		$this.Name               = 'Padded Iron Gauntlets'
		$this.MapObjName         = 'paddedirongauntlets'
		$this.PurchasePrice      = 130
		$this.SellPrice          = 65
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Iron gauntlets with padded interior for comfort.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStuddedLeatherGauntlets : BEGauntlets {
	BEStuddedLeatherGauntlets() : base() {
		$this.Name               = 'Studded Leather Gauntlets'
		$this.MapObjName         = 'studdedleathergauntlets'
		$this.PurchasePrice      = 170
		$this.SellPrice          = 85
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Leather gauntlets with small metal studs for added defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBonePlatedGauntlets : BEGauntlets {
	BEBonePlatedGauntlets() : base() {
		$this.Name               = 'Bone-Plated Gauntlets'
		$this.MapObjName         = 'boneplatedgauntlets'
		$this.PurchasePrice      = 210
		$this.SellPrice          = 105
		$this.TargetStats        = @{
			[StatId]::Defense = 11
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made from hardened animal bones.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEScaleMailGauntlets : BEGauntlets {
	BEScaleMailGauntlets() : base() {
		$this.Name               = 'Scale Mail Gauntlets'
		$this.MapObjName         = 'scalemailgauntlets'
		$this.PurchasePrice      = 240
		$this.SellPrice          = 120
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets composed of overlapping metal scales.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHardenedLeatherGloves : BEGauntlets {
	BEHardenedLeatherGloves() : base() {
		$this.Name               = 'Hardened Leather Gloves'
		$this.MapObjName         = 'hardenedleathergloves'
		$this.PurchasePrice      = 150
		$this.SellPrice          = 75
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves of exceptionally tough, treated leather.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEForgedSteelGauntlets : BEGauntlets {
	BEForgedSteelGauntlets() : base() {
		$this.Name               = 'Forged Steel Gauntlets'
		$this.MapObjName         = 'forgedsteelgauntlets'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Expertly forged steel gauntlets, balanced for battle.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEReinforcedMitts : BEGauntlets {
	BEReinforcedMitts() : base() {
		$this.Name               = 'Reinforced Mitts'
		$this.MapObjName         = 'reinforcedmitts'
		$this.PurchasePrice      = 190
		$this.SellPrice          = 95
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Mitts with extra padding, offering more protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoldiersGauntlets : BEGauntlets {
	BESoldiersGauntlets() : base() {
		$this.Name               = 'Soldier''s Gauntlets'
		$this.MapObjName         = 'soldiersgauntlets'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Standard issue gauntlets for army soldiers.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEAcolytesBands : BEGauntlets {
	BEAcolytesBands() : base() {
		$this.Name               = 'Acolyte''s Bands'
		$this.MapObjName         = 'acolytesbands'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 6
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Simple bands for a magical apprentice, aiding their studies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMaraudersGrips : BEGauntlets {
	BEMaraudersGrips() : base() {
		$this.Name               = 'Marauder''s Grips'
		$this.MapObjName         = 'maraudersgrips'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Rough grips favored by raiders, for brutal attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESilverthreadGloves : BEGauntlets {
	BESilverthreadGloves() : base() {
		$this.Name               = 'Silverthread Gloves'
		$this.MapObjName         = 'silverthreadgloves'
		$this.PurchasePrice      = 320
		$this.SellPrice          = 160
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves woven with fine silver thread, light and defensive against dark magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBarbariansClaws : BEGauntlets {
	BEBarbariansClaws() : base() {
		$this.Name               = 'Barbarian''s Claws'
		$this.MapObjName         = 'barbariansclaws'
		$this.PurchasePrice      = 290
		$this.SellPrice          = 145
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 2
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crude gauntlets with sharpened edges, for close combat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESquiresGauntlets : BEGauntlets {
	BESquiresGauntlets() : base() {
		$this.Name               = 'Squire''s Gauntlets'
		$this.MapObjName         = 'squiresgauntlets'
		$this.PurchasePrice      = 230
		$this.SellPrice          = 115
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets for a young knight in training.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEFightersCuffs : BEGauntlets {
	BEFightersCuffs() : base() {
		$this.Name               = 'Fighter''s Cuffs'
		$this.MapObjName         = 'fighterscuffs'
		$this.PurchasePrice      = 270
		$this.SellPrice          = 135
		$this.TargetStats        = @{
			[StatId]::Defense = 14
			[StatId]::MagicDefense = 3
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Strong cuffs for brawlers and melee combatants.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESpellbindersGloves : BEGauntlets {
	BESpellbindersGloves() : base() {
		$this.Name               = 'Spellbinder''s Gloves'
		$this.MapObjName         = 'spellbindersgloves'
		$this.PurchasePrice      = 360
		$this.SellPrice          = 180
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves designed to assist in the casting of complex spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERangersBracers : BEGauntlets {
	BERangersBracers() : base() {
		$this.Name               = 'Ranger''s Bracers'
		$this.MapObjName         = 'rangersbracers'
		$this.PurchasePrice      = 260
		$this.SellPrice          = 130
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 8
			[StatId]::Accuracy = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Light bracers for those who roam the wilderness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHeavyIronGauntlets : BEGauntlets {
	BEHeavyIronGauntlets() : base() {
		$this.Name               = 'Heavy Iron Gauntlets'
		$this.MapObjName         = 'heavyirongauntlets'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Very thick iron gauntlets, slow but incredibly tough.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMysticLeatherGauntlets : BEGauntlets {
	BEMysticLeatherGauntlets() : base() {
		$this.Name               = 'Mystic Leather Gauntlets'
		$this.MapObjName         = 'mysticleathergauntlets'
		$this.PurchasePrice      = 380
		$this.SellPrice          = 190
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Leather gauntlets infused with minor protective charms.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWarmastersGauntlets : BEGauntlets {
	BEWarmastersGauntlets() : base() {
		$this.Name               = 'Warmaster''s Gauntlets'
		$this.MapObjName         = 'warmastersgauntlets'
		$this.PurchasePrice      = 450
		$this.SellPrice          = 225
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a battle-hardened commander, commanding.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEForestGuardianGloves : BEGauntlets {
	BEForestGuardianGloves() : base() {
		$this.Name               = 'Forest Guardian Gloves'
		$this.MapObjName         = 'forestguardiangloves'
		$this.PurchasePrice      = 310
		$this.SellPrice          = 155
		$this.TargetStats        = @{
			[StatId]::Defense = 8
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves crafted from forest materials, blending with nature.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneGauntlets : BEGauntlets {
	BEStoneGauntlets() : base() {
		$this.Name               = 'Stone Gauntlets'
		$this.MapObjName         = 'stonegauntlets'
		$this.PurchasePrice      = 420
		$this.SellPrice          = 210
		$this.TargetStats        = @{
			[StatId]::Defense = 21
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets carved from solid stone, heavy and resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEFrostwornGrips : BEGauntlets {
	BEFrostwornGrips() : base() {
		$this.Name               = 'Frostworn Grips'
		$this.MapObjName         = 'frostworngrips'
		$this.PurchasePrice      = 370
		$this.SellPrice          = 185
		$this.TargetStats        = @{
			[StatId]::Defense = 19
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grips that retain a chilling touch from icy encounters.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunkenSilverGauntlets : BEGauntlets {
	BESunkenSilverGauntlets() : base() {
		$this.Name               = 'Sunken Silver Gauntlets'
		$this.MapObjName         = 'sunkensilvergauntlets'
		$this.PurchasePrice      = 480
		$this.SellPrice          = 240
		$this.TargetStats        = @{
			[StatId]::Defense = 24
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Silver gauntlets recovered from a sunken ship, glimmering.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowscaleGloves : BEGauntlets {
	BEShadowscaleGloves() : base() {
		$this.Name               = 'Shadowscale Gloves'
		$this.MapObjName         = 'shadowscalegloves'
		$this.PurchasePrice      = 430
		$this.SellPrice          = 215
		$this.TargetStats        = @{
			[StatId]::Defense = 9
			[StatId]::MagicDefense = 16
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves made from the scales of a shadowy creature, light and elusive.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEKnightErrantGauntlets : BEGauntlets {
	BEKnightErrantGauntlets() : base() {
		$this.Name               = 'Knight-Errant Gauntlets'
		$this.MapObjName         = 'knighterrantgauntlets'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 26
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a wandering knight, reliable and well-kept.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEPriestesssCuffs : BEGauntlets {
	BEPriestesssCuffs() : base() {
		$this.Name               = 'Priestess''s Cuffs'
		$this.MapObjName         = 'priestessscuffs'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 11
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Cuffs worn by priestesses, aiding in benevolent magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDrakehideGloves : BEGauntlets {
	BEDrakehideGloves() : base() {
		$this.Name               = 'Drakehide Gloves'
		$this.MapObjName         = 'drakehidegloves'
		$this.PurchasePrice      = 460
		$this.SellPrice          = 230
		$this.TargetStats        = @{
			[StatId]::Defense = 23
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves made from the hide of a young drake, flexible and tough.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDesertScavengerGrips : BEGauntlets {
	BEDesertScavengerGrips() : base() {
		$this.Name               = 'Desert Scavenger Grips'
		$this.MapObjName         = 'desertscavengergrips'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 3
			[StatId]::Accuracy = 1
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Makeshift grips used by desert scavengers, rugged.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStormchaserGauntlets : BEGauntlets {
	BEStormchaserGauntlets() : base() {
		$this.Name               = 'Stormchaser Gauntlets'
		$this.MapObjName         = 'stormchasergauntlets'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 27
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets designed to withstand and channel lightning.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMoonfallBands : BEGauntlets {
	BEMoonfallBands() : base() {
		$this.Name               = 'Moonfall Bands'
		$this.MapObjName         = 'moonfallbands'
		$this.PurchasePrice      = 490
		$this.SellPrice          = 245
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bands that softly glow, absorbing lunar energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGrizzledVeteransGauntlets : BEGauntlets {
	BEGrizzledVeteransGauntlets() : base() {
		$this.Name               = 'Grizzled Veteran''s Gauntlets'
		$this.MapObjName         = 'grizzledveteransgauntlets'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a truly ancient warrior, scarred and strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEAetherialGauntlets : BEGauntlets {
	BEAetherialGauntlets() : base() {
		$this.Name               = 'Aetherial Gauntlets'
		$this.MapObjName         = 'aetherialgauntlets'
		$this.PurchasePrice      = 520
		$this.SellPrice          = 260
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets infused with faint Aether, granting resilience.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlazeforgedGrips : BEGauntlets {
	BEBlazeforgedGrips() : base() {
		$this.Name               = 'Blazeforged Grips'
		$this.MapObjName         = 'blazeforgedgrips'
		$this.PurchasePrice      = 580
		$this.SellPrice          = 290
		$this.TargetStats        = @{
			[StatId]::Defense = 29
			[StatId]::MagicDefense = 11
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grips heated in intense flames, maintaining their warmth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDeepruneGauntlets : BEGauntlets {
	BEDeepruneGauntlets() : base() {
		$this.Name               = 'Deeprune Gauntlets'
		$this.MapObjName         = 'deeprunegauntlets'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 16
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets with deeply etched runes, enhancing their power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiritwalkerHandguards : BEGauntlets {
	BESpiritwalkerHandguards() : base() {
		$this.Name               = 'Spiritwalker Handguards'
		$this.MapObjName         = 'spiritwalkerhandguards'
		$this.PurchasePrice      = 540
		$this.SellPrice          = 270
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 24
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Handguards aiding those who commune with spirits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIronboundGauntlets : BEGauntlets {
	BEIronboundGauntlets() : base() {
		$this.Name               = 'Ironbound Gauntlets'
		$this.MapObjName         = 'ironboundgauntlets'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 17
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets tightly bound with iron strips, very durable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWyvernTailGauntlets : BEGauntlets {
	BEWyvernTailGauntlets() : base() {
		$this.Name               = 'Wyvern Tail Gauntlets'
		$this.MapObjName         = 'wyverntailgauntlets'
		$this.PurchasePrice      = 620
		$this.SellPrice          = 310
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 10
			[StatId]::Accuracy = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets ending in a segmented wyvern tail, for agile strikes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunfireGloves : BEGauntlets {
	BESunfireGloves() : base() {
		$this.Name               = 'Sunfire Gloves'
		$this.MapObjName         = 'sunfiregloves'
		$this.PurchasePrice      = 510
		$this.SellPrice          = 255
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 26
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves that radiate soft warmth, comforting and protective.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBarbarianKingGauntlets : BEGauntlets {
	BEBarbarianKingGauntlets() : base() {
		$this.Name               = 'Barbarian King Gauntlets'
		$this.MapObjName         = 'barbariankinggauntlets'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets fit for a tribal leader, raw and powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEShadeclothGloves : BEGauntlets {
	BEShadeclothGloves() : base() {
		$this.Name               = 'Shadecloth Gloves'
		$this.MapObjName         = 'shadeclothgloves'
		$this.PurchasePrice      = 470
		$this.SellPrice          = 235
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 19
			[StatId]::Accuracy = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves made of cloth spun from shadows, very stealthy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrystalSoulGauntlets : BEGauntlets {
	BECrystalSoulGauntlets() : base() {
		$this.Name               = 'Crystal Soul Gauntlets'
		$this.MapObjName         = 'crystalsoulgauntlets'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets embedded with a small crystal, reflecting magical attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGoliathGauntlets : BEGauntlets {
	BEGoliathGauntlets() : base() {
		$this.Name               = 'Goliath Gauntlets'
		$this.MapObjName         = 'goliathgauntlets'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Massive gauntlets designed for a giant''s strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEOraclesVisions : BEGauntlets {
	BEOraclesVisions() : base() {
		$this.Name               = 'Oracle''s Visions'
		$this.MapObjName         = 'oraclesvisions'
		$this.PurchasePrice      = 630
		$this.SellPrice          = 315
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 30
			[StatId]::Accuracy = 9
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves that briefly glimpse the future, boosting evasion.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECrimsonDeathGauntlets : BEGauntlets {
	BECrimsonDeathGauntlets() : base() {
		$this.Name               = 'Crimson Death Gauntlets'
		$this.MapObjName         = 'crimsondeathgauntlets'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 42
			[StatId]::MagicDefense = 14
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a formidable executioner, stained red.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStormheartGauntlets : BEGauntlets {
	BEStormheartGauntlets() : base() {
		$this.Name               = 'Stormheart Gauntlets'
		$this.MapObjName         = 'stormheartgauntlets'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that seem to beat with a storm''s heart, powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEldritchBands : BEGauntlets {
	BEEldritchBands() : base() {
		$this.Name               = 'Eldritch Bands'
		$this.MapObjName         = 'eldritchbands'
		$this.PurchasePrice      = 780
		$this.SellPrice          = 390
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bands pulsing with otherworldly energy, dangerous yet powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGlacialSpikeGauntlets : BEGauntlets {
	BEGlacialSpikeGauntlets() : base() {
		$this.Name               = 'Glacial Spike Gauntlets'
		$this.MapObjName         = 'glacialspikegauntlets'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 48
			[StatId]::MagicDefense = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets adorned with sharp ice spikes, chilling to touch.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECelestialTouchGloves : BEGauntlets {
	BECelestialTouchGloves() : base() {
		$this.Name               = 'Celestial Touch Gloves'
		$this.MapObjName         = 'celestialtouchgloves'
		$this.PurchasePrice      = 820
		$this.SellPrice          = 410
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 36
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves that feel like a gentle touch from the heavens.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEAbyssalCoreGauntlets : BEGauntlets {
	BEAbyssalCoreGauntlets() : base() {
		$this.Name               = 'Abyssal Core Gauntlets'
		$this.MapObjName         = 'abyssalcoregauntlets'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets with a core of abyssal energy, consuming magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BERuneboundGauntlets : BEGauntlets {
	BERuneboundGauntlets() : base() {
		$this.Name               = 'Runebound Gauntlets'
		$this.MapObjName         = 'runeboundgauntlets'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
			[StatId]::Defense = 52
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets strongly bound by ancient runes, powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulsteelGauntlets : BEGauntlets {
	BESoulsteelGauntlets() : base() {
		$this.Name               = 'Soulsteel Gauntlets'
		$this.MapObjName         = 'soulsteelgauntlets'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets forged from purified souls, radiant and strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonKingGauntlets : BEGauntlets {
	BEDragonKingGauntlets() : base() {
		$this.Name               = 'Dragon King Gauntlets'
		$this.MapObjName         = 'dragonkinggauntlets'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets fit for a true dragon king, absolute power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEPhoenixSoulGauntlets : BEGauntlets {
	BEPhoenixSoulGauntlets() : base() {
		$this.Name               = 'Phoenix Soul Gauntlets'
		$this.MapObjName         = 'phoenixsoulgauntlets'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets with the spirit of a phoenix, granting rebirth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETitanbloodGauntlets : BEGauntlets {
	BETitanbloodGauntlets() : base() {
		$this.Name               = 'Titanblood Gauntlets'
		$this.MapObjName         = 'titanbloodgauntlets'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets stained with titan blood, granting immense strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStarlightWeaveGloves : BEGauntlets {
	BEStarlightWeaveGloves() : base() {
		$this.Name               = 'Starlight Weave Gloves'
		$this.MapObjName         = 'starlightweavegloves'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 42
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves woven from starlight, shimmering and ethereal.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEVoidShroudedGauntlets : BEGauntlets {
	BEVoidShroudedGauntlets() : base() {
		$this.Name               = 'Void Shrouded Gauntlets'
		$this.MapObjName         = 'voidshroudedgauntlets'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 30
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets entirely cloaked in void energy, hard to perceive.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEHolyVambraces : BEGauntlets {
	BEHolyVambraces() : base() {
		$this.Name               = 'Holy Vambraces'
		$this.MapObjName         = 'holyvambraces'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::Defense = 62
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Vambraces blessed by sacred rites, warding off evil.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEInfernoCoreGauntlets : BEGauntlets {
	BEInfernoCoreGauntlets() : base() {
		$this.Name               = 'Inferno Core Gauntlets'
		$this.MapObjName         = 'infernocoregauntlets'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 33
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets with a perpetual internal flame, burning hot.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESeraphimsEmbrace : BEGauntlets {
	BESeraphimsEmbrace() : base() {
		$this.Name               = 'Seraphim''s Embrace'
		$this.MapObjName         = 'seraphimsembrace'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 48
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Feathery gloves that feel like an angelic embrace.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDreadskullGauntlets : BEGauntlets {
	BEDreadskullGauntlets() : base() {
		$this.Name               = 'Dreadskull Gauntlets'
		$this.MapObjName         = 'dreadskullgauntlets'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 80
			[StatId]::MagicDefense = 27
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets shaped like skulls, exuding fear.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEOnyxHeartGauntlets : BEGauntlets {
	BEOnyxHeartGauntlets() : base() {
		$this.Name               = 'Onyx Heart Gauntlets'
		$this.MapObjName         = 'onyxheartgauntlets'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 85
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets with an onyx core, drawing dark energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZephyrSoulGauntlets : BEGauntlets {
	BEZephyrSoulGauntlets() : base() {
		$this.Name               = 'Zephyr Soul Gauntlets'
		$this.MapObjName         = 'zephyrsoulgauntlets'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 35
			[StatId]::Accuracy = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets imbued with the soul of the wind, incredibly light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEarthboundGauntlets : BEGauntlets {
	BEEarthboundGauntlets() : base() {
		$this.Name               = 'Earthbound Gauntlets'
		$this.MapObjName         = 'earthboundgauntlets'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 90
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets rooted to the earth, granting stability.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BELunarEclipseGauntlets : BEGauntlets {
	BELunarEclipseGauntlets() : base() {
		$this.Name               = 'Lunar Eclipse Gauntlets'
		$this.MapObjName         = 'lunareclipsegauntlets'
		$this.PurchasePrice      = 1450
		$this.SellPrice          = 725
		$this.TargetStats        = @{
			[StatId]::Defense = 68
			[StatId]::MagicDefense = 32
			[StatId]::Accuracy = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that dim the light around them, aiding stealth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESolarFlareGauntlets : BEGauntlets {
	BESolarFlareGauntlets() : base() {
		$this.Name               = 'Solar Flare Gauntlets'
		$this.MapObjName         = 'solarflaregauntlets'
		$this.PurchasePrice      = 1550
		$this.SellPrice          = 775
		$this.TargetStats        = @{
			[StatId]::Defense = 72
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that periodically unleash bursts of sunlight.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEAbyssalHandguards : BEGauntlets {
	BEAbyssalHandguards() : base() {
		$this.Name               = 'Abyssal Handguards'
		$this.MapObjName         = 'abyssalhandguards'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 98
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Handguards from the deepest, darkest pits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivineAegisGloves : BEGauntlets {
	BEDivineAegisGloves() : base() {
		$this.Name               = 'Divine Aegis Gloves'
		$this.MapObjName         = 'divineaegisgloves'
		$this.PurchasePrice      = 1650
		$this.SellPrice          = 825
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 52
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves that provide an invisible shield, divinely powered.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGrimstoneGauntlets : BEGauntlets {
	BEGrimstoneGauntlets() : base() {
		$this.Name               = 'Grimstone Gauntlets'
		$this.MapObjName         = 'grimstonegauntlets'
		$this.PurchasePrice      = 1750
		$this.SellPrice          = 875
		$this.TargetStats        = @{
			[StatId]::Defense = 82
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets carved from cursed stone, heavy and menacing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEbonShadowGauntlets : BEGauntlets {
	BEEbonShadowGauntlets() : base() {
		$this.Name               = 'Ebon Shadow Gauntlets'
		$this.MapObjName         = 'ebonshadowgauntlets'
		$this.PurchasePrice      = 1850
		$this.SellPrice          = 925
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 35
			[StatId]::Accuracy = 17
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that melt into shadows, making the wearer unseen.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMythrilWeaveGloves : BEGauntlets {
	BEMythrilWeaveGloves() : base() {
		$this.Name               = 'Mythril Weave Gloves'
		$this.MapObjName         = 'mythrilweavegloves'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 38
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves woven from fine mythril, light and extremely strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAdamantiteFistGauntlets : BEGauntlets {
	BEAdamantiteFistGauntlets() : base() {
		$this.Name               = 'Adamantite Fist Gauntlets'
		$this.MapObjName         = 'adamantitefistgauntlets'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 105
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made of pure adamantite, unyielding.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECelestialZenithGauntlets : BEGauntlets {
	BECelestialZenithGauntlets() : base() {
		$this.Name               = 'Celestial Zenith Gauntlets'
		$this.MapObjName         = 'celestialzenithgauntlets'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Defense = 100
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that draw power from the highest heavens.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidHeartGauntlets : BEGauntlets {
	BEVoidHeartGauntlets() : base() {
		$this.Name               = 'Void Heart Gauntlets'
		$this.MapObjName         = 'voidheartgauntlets'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::Defense = 105
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that house a fragment of the void, immense power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonsBreathGauntlets : BEGauntlets {
	BEDragonsBreathGauntlets() : base() {
		$this.Name               = 'Dragon''s Breath Gauntlets'
		$this.MapObjName         = 'dragonsbreathgauntlets'
		$this.PurchasePrice      = 2300
		$this.SellPrice          = 1150
		$this.TargetStats        = @{
			[StatId]::Defense = 110
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets imbued with a dragon''s fiery breath.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarfireGauntlets : BEGauntlets {
	BEStarfireGauntlets() : base() {
		$this.Name               = 'Starfire Gauntlets'
		$this.MapObjName         = 'starfiregauntlets'
		$this.PurchasePrice      = 2400
		$this.SellPrice          = 1200
		$this.TargetStats        = @{
			[StatId]::Defense = 115
			[StatId]::MagicDefense = 42
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets glowing with cosmic fire, scorching foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETrueDivineGauntlets : BEGauntlets {
	BETrueDivineGauntlets() : base() {
		$this.Name               = 'True Divine Gauntlets'
		$this.MapObjName         = 'truedivinegauntlets'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Defense = 120
			[StatId]::MagicDefense = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets said to be worn by gods, ultimate protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESoulEaterGauntlets : BEGauntlets {
	BESoulEaterGauntlets() : base() {
		$this.Name               = 'Soul Eater Gauntlets'
		$this.MapObjName         = 'souleatergauntlets'
		$this.PurchasePrice      = 2600
		$this.SellPrice          = 1300
		$this.TargetStats        = @{
			[StatId]::Defense = 125
			[StatId]::MagicDefense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that devour the souls of defeated enemies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWorldshaperGauntlets : BEGauntlets {
	BEWorldshaperGauntlets() : base() {
		$this.Name               = 'Worldshaper Gauntlets'
		$this.MapObjName         = 'worldshapergauntlets'
		$this.PurchasePrice      = 2700
		$this.SellPrice          = 1350
		$this.TargetStats        = @{
			[StatId]::Defense = 130
			[StatId]::MagicDefense = 65
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that hum with world-shaping energy, immense power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunkenKingsGauntlets : BEGauntlets {
	BESunkenKingsGauntlets() : base() {
		$this.Name               = 'Sunken King''s Gauntlets'
		$this.MapObjName         = 'sunkenkingsgauntlets'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a forgotten underwater king, granting aquatic power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESpiritGuardianGauntlets : BEGauntlets {
	BESpiritGuardianGauntlets() : base() {
		$this.Name               = 'Spirit Guardian Gauntlets'
		$this.MapObjName         = 'spiritguardiangauntlets'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets imbued with ancient guardian spirits, protecting all.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWhisperwindGauntletsII : BEGauntlets {
	BEWhisperwindGauntletsII() : base() {
		$this.Name               = 'Whisperwind Gauntlets II'
		$this.MapObjName         = 'whisperwindgauntletsii'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 25
			[StatId]::Accuracy = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Improved Whisperwind Gauntlets, even swifter.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrimsonFuryGauntlets : BEGauntlets {
	BECrimsonFuryGauntlets() : base() {
		$this.Name               = 'Crimson Fury Gauntlets'
		$this.MapObjName         = 'crimsonfurygauntlets'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that boil with controlled rage, increasing strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEmeraldSoulGauntlets : BEGauntlets {
	BEEmeraldSoulGauntlets() : base() {
		$this.Name               = 'Emerald Soul Gauntlets'
		$this.MapObjName         = 'emeraldsoulgauntlets'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets pulsating with emerald energy, enhancing vitality.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEOnyxShadowGauntlets : BEGauntlets {
	BEOnyxShadowGauntlets() : base() {
		$this.Name               = 'Onyx Shadow Gauntlets'
		$this.MapObjName         = 'onyxshadowgauntlets'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of pure shadow, absorbing all light.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarfallGauntletsII : BEGauntlets {
	BEStarfallGauntletsII() : base() {
		$this.Name               = 'Starfall Gauntlets II'
		$this.MapObjName         = 'starfallgauntletsii'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Enhanced Starfall Gauntlets, stronger cosmic energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMoonstoneEclipseGauntlets : BEGauntlets {
	BEMoonstoneEclipseGauntlets() : base() {
		$this.Name               = 'Moonstone Eclipse Gauntlets'
		$this.MapObjName         = 'moonstoneeclipsegauntlets'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 40
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Bracers that absorb moonlight, enhancing night vision and stealth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBlazecoreGauntletsII : BEGauntlets {
	BEBlazecoreGauntletsII() : base() {
		$this.Name               = 'Blazecore Gauntlets II'
		$this.MapObjName         = 'blazecoregauntletsii'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 80
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Improved Blazecore Gauntlets, hotter and more resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BENightfallGauntletsII : BEGauntlets {
	BENightfallGauntletsII() : base() {
		$this.Name               = 'Nightfall Gauntlets II'
		$this.MapObjName         = 'nightfallgauntletsii'
		$this.PurchasePrice      = 1450
		$this.SellPrice          = 725
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 30
			[StatId]::Accuracy = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More potent Nightfall Gauntlets, deeper shadows.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAncientSteelGauntletsII : BEGauntlets {
	BEAncientSteelGauntletsII() : base() {
		$this.Name               = 'Ancient Steel Gauntlets II'
		$this.MapObjName         = 'ancientsteelgauntletsii'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Further reinforced Ancient Steel Gauntlets, nearly unbreakable.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivineRadianceGauntlets : BEGauntlets {
	BEDivineRadianceGauntlets() : base() {
		$this.Name               = 'Divine Radiance Gauntlets'
		$this.MapObjName         = 'divineradiancegauntlets'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 85
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets emanating intense divine light, scorching foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidShardGauntletsII : BEGauntlets {
	BEVoidShardGauntletsII() : base() {
		$this.Name               = 'Void Shard Gauntlets II'
		$this.MapObjName         = 'voidshardgauntletsii'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 52
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More powerful Void Shard Gauntlets, stronger disorientation.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrimsonGuardGauntletsII : BEGauntlets {
	BECrimsonGuardGauntletsII() : base() {
		$this.Name               = 'Crimson Guard Gauntlets II'
		$this.MapObjName         = 'crimsonguardgauntletsii'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 22
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Superior Crimson Guard Gauntlets, even more ferocious.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEnchantresssEmbrace : BEGauntlets {
	BEEnchantresssEmbrace() : base() {
		$this.Name               = 'Enchantress''s Embrace'
		$this.MapObjName         = 'enchantresssembrace'
		$this.PurchasePrice      = 1150
		$this.SellPrice          = 575
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Advanced bands for a master enchantress, supreme magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BERuneforgedGauntletsII : BEGauntlets {
	BERuneforgedGauntletsII() : base() {
		$this.Name               = 'Runeforged Gauntlets II'
		$this.MapObjName         = 'runeforgedgauntletsii'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More powerful Runeforged Gauntlets, stronger mystical energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEarthshakerGauntletsII : BEGauntlets {
	BEEarthshakerGauntletsII() : base() {
		$this.Name               = 'Earthshaker Gauntlets II'
		$this.MapObjName         = 'earthshakergauntletsii'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Improved Earthshaker Gauntlets, causing stronger tremors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESoulfireGripsII : BEGauntlets {
	BESoulfireGripsII() : base() {
		$this.Name               = 'Soulfire Grips II'
		$this.MapObjName         = 'soulfiregripsii'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More potent Soulfire Grips, searing spirits with greater intensity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonheartGauntletsII : BEGauntlets {
	BEDragonheartGauntletsII() : base() {
		$this.Name               = 'Dragonheart Gauntlets II'
		$this.MapObjName         = 'dragonheartgauntletsii'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 95
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets radiating even greater draconic power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECelestialTearGauntletsII : BEGauntlets {
	BECelestialTearGauntletsII() : base() {
		$this.Name               = 'Celestial Tear Gauntlets II'
		$this.MapObjName         = 'celestialteargauntletsii'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Defense = 100
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Enhanced Celestial Tear Gauntlets, drawing more cosmic power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAbyssalPlateGauntletsII : BEGauntlets {
	BEAbyssalPlateGauntletsII() : base() {
		$this.Name               = 'Abyssal Plate Gauntlets II'
		$this.MapObjName         = 'abyssalplategauntletsii'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::Defense = 105
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Further hardened Abyssal Plate Gauntlets, incredibly resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhoenixFeatherGlovesII : BEGauntlets {
	BEPhoenixFeatherGlovesII() : base() {
		$this.Name               = 'Phoenix Feather Gloves II'
		$this.MapObjName         = 'phoenixfeatherglovesii'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 52
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More protective Phoenix Feather Gloves, enhanced healing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWarlordsFuryGauntlets : BEGauntlets {
	BEWarlordsFuryGauntlets() : base() {
		$this.Name               = 'Warlord''s Fury Gauntlets'
		$this.MapObjName         = 'warlordsfurygauntlets'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 82
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets boiling with warlord''s fury, inspiring fear.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDreamsteelGauntletsII : BEGauntlets {
	BEDreamsteelGauntletsII() : base() {
		$this.Name               = 'Dreamsteel Gauntlets II'
		$this.MapObjName         = 'dreamsteelgauntletsii'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 80
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Improved Dreamsteel Gauntlets, lighter and stronger.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidstoneGauntletsII : BEGauntlets {
	BEVoidstoneGauntletsII() : base() {
		$this.Name               = 'Voidstone Gauntlets II'
		$this.MapObjName         = 'voidstonegauntletsii'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 85
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Superior Voidstone Gauntlets, absorbing more magical attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunpetalHandguardsII : BEGauntlets {
	BESunpetalHandguardsII() : base() {
		$this.Name               = 'Sunpetal Handguards II'
		$this.MapObjName         = 'sunpetalhandguardsii'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 45
			[StatId]::Accuracy = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More vibrant Sunpetal Handguards, enhanced healing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEHeavyChainmailGauntlets : BEGauntlets {
	BEHeavyChainmailGauntlets() : base() {
		$this.Name               = 'Heavy Chainmail Gauntlets'
		$this.MapObjName         = 'heavychainmailgauntlets'
		$this.PurchasePrice      = 280
		$this.SellPrice          = 140
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Dense chainmail gauntlets, offering robust defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlessedSilverGauntlets : BEGauntlets {
	BEBlessedSilverGauntlets() : base() {
		$this.Name               = 'Blessed Silver Gauntlets'
		$this.MapObjName         = 'blessedsilvergauntlets'
		$this.PurchasePrice      = 350
		$this.SellPrice          = 175
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made of purified silver, effective against undead.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDreadKnightGauntlets : BEGauntlets {
	BEDreadKnightGauntlets() : base() {
		$this.Name               = 'Dread Knight Gauntlets'
		$this.MapObjName         = 'dreadknightgauntlets'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a fearsome dark knight, chilling to the touch.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEFeyIronGauntlets : BEGauntlets {
	BEFeyIronGauntlets() : base() {
		$this.Name               = 'Fey Iron Gauntlets'
		$this.MapObjName         = 'feyirongauntlets'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets crafted from special Fey iron, resistant to magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESerpentTongueGloves : BEGauntlets {
	BESerpentTongueGloves() : base() {
		$this.Name               = 'Serpent Tongue Gloves'
		$this.MapObjName         = 'serpenttonguegloves'
		$this.PurchasePrice      = 300
		$this.SellPrice          = 150
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 12
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves with a subtle serpentine pattern, aiding in swiftness.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrusadersMightGauntlets : BEGauntlets {
	BECrusadersMightGauntlets() : base() {
		$this.Name               = 'Crusader''s Might Gauntlets'
		$this.MapObjName         = 'crusadersmightgauntlets'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavily fortified gauntlets of a valiant crusader.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMoonlitDewGloves : BEGauntlets {
	BEMoonlitDewGloves() : base() {
		$this.Name               = 'Moonlit Dew Gloves'
		$this.MapObjName         = 'moonlitdewgloves'
		$this.PurchasePrice      = 650
		$this.SellPrice          = 325
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves shimmering with moonlight dew, granting restorative power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESentinelsBulwark : BEGauntlets {
	BESentinelsBulwark() : base() {
		$this.Name               = 'Sentinel''s Bulwark'
		$this.MapObjName         = 'sentinelsbulwark'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 42
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that seem to project a defensive aura.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEWildheartGauntlets : BEGauntlets {
	BEWildheartGauntlets() : base() {
		$this.Name               = 'Wildheart Gauntlets'
		$this.MapObjName         = 'wildheartgauntlets'
		$this.PurchasePrice      = 500
		$this.SellPrice          = 250
		$this.TargetStats        = @{
			[StatId]::Defense = 26
			[StatId]::MagicDefense = 7
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made from primal beast hide, granting strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEThunderclapGauntlets : BEGauntlets {
	BEThunderclapGauntlets() : base() {
		$this.Name               = 'Thunderclap Gauntlets'
		$this.MapObjName         = 'thunderclapgauntlets'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that resonate with thunder, stunning foes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESpiritwovenArmbands : BEGauntlets {
	BESpiritwovenArmbands() : base() {
		$this.Name               = 'Spiritwoven Armbands'
		$this.MapObjName         = 'spiritwovenarmbands'
		$this.PurchasePrice      = 720
		$this.SellPrice          = 360
		$this.TargetStats        = @{
			[StatId]::Defense = 16
			[StatId]::MagicDefense = 33
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Armbands intricately woven with spiritual energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDragonshardGauntlets : BEGauntlets {
	BEDragonshardGauntlets() : base() {
		$this.Name               = 'Dragonshard Gauntlets'
		$this.MapObjName         = 'dragonshardgauntlets'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets embedded with fragments of dragon shards, immensely powerful.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStarforgedVambraces : BEGauntlets {
	BEStarforgedVambraces() : base() {
		$this.Name               = 'Starforged Vambraces'
		$this.MapObjName         = 'starforgedvambraces'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 22
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Vambraces forged under a specific constellation, granting luck.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGravecallerGauntlets : BEGauntlets {
	BEGravecallerGauntlets() : base() {
		$this.Name               = 'Gravecaller Gauntlets'
		$this.MapObjName         = 'gravecallergauntlets'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that hum with the whispers of the deceased, aiding necromancy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECelestialBlessingGauntlets : BEGauntlets {
	BECelestialBlessingGauntlets() : base() {
		$this.Name               = 'Celestial Blessing Gauntlets'
		$this.MapObjName         = 'celestialblessinggauntlets'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 78
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets blessed by celestial beings, divine protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidheartGrips : BEGauntlets {
	BEVoidheartGrips() : base() {
		$this.Name               = 'Voidheart Grips'
		$this.MapObjName         = 'voidheartgrips'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 82
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Grips that feel cold to the touch, connected to the void.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEArcaneSentinelGauntlets : BEGauntlets {
	BEArcaneSentinelGauntlets() : base() {
		$this.Name               = 'Arcane Sentinel Gauntlets'
		$this.MapObjName         = 'arcanesentinelgauntlets'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 42
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of an ancient order of arcane guardians, robust.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BELionheartVambraces : BEGauntlets {
	BELionheartVambraces() : base() {
		$this.Name               = 'Lionheart Vambraces'
		$this.MapObjName         = 'lionheartvambraces'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 72
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Vambraces bearing the crest of a lion, inspiring courage.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEValkyriesWingsGloves : BEGauntlets {
	BEValkyriesWingsGloves() : base() {
		$this.Name               = 'Valkyrie''s Wings Gloves'
		$this.MapObjName         = 'valkyrieswingsgloves'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 45
			[StatId]::Accuracy = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gloves with feather-like lightness, allowing swift movement.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BESerpentfangGauntlets : BEGauntlets {
	BESerpentfangGauntlets() : base() {
		$this.Name               = 'Serpentfang Gauntlets'
		$this.MapObjName         = 'serpentfanggauntlets'
		$this.PurchasePrice      = 850
		$this.SellPrice          = 425
		$this.TargetStats        = @{
			[StatId]::Defense = 38
			[StatId]::MagicDefense = 15
			[StatId]::Accuracy = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets with venomous serpent fangs, for deadly strikes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGolemLordGauntlets : BEGauntlets {
	BEGolemLordGauntlets() : base() {
		$this.Name               = 'Golem Lord Gauntlets'
		$this.MapObjName         = 'golemlordgauntlets'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 50
			[StatId]::MagicDefense = 12
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a golem lord, commanding immense strength.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEMoonpetalGauntlets : BEGauntlets {
	BEMoonpetalGauntlets() : base() {
		$this.Name               = 'Moonpetal Gauntlets'
		$this.MapObjName         = 'moonpetalgauntlets'
		$this.PurchasePrice      = 750
		$this.SellPrice          = 375
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 35
			[StatId]::Accuracy = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets made of moonlight-infused petals, magically potent.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BECenturionsLegacyGauntlets : BEGauntlets {
	BECenturionsLegacyGauntlets() : base() {
		$this.Name               = 'Centurion''s Legacy Gauntlets'
		$this.MapObjName         = 'centurionslegacygauntlets'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a legendary centurion, carrying his might.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESpellboundGauntletsII : BEGauntlets {
	BESpellboundGauntletsII() : base() {
		$this.Name               = 'Spellbound Gauntlets II'
		$this.MapObjName         = 'spellboundgauntletsii'
		$this.PurchasePrice      = 900
		$this.SellPrice          = 450
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 33
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More potent Spellbound Gauntlets, stronger protective spells.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEIronGuardGauntletsII : BEGauntlets {
	BEIronGuardGauntletsII() : base() {
		$this.Name               = 'Iron Guard Gauntlets II'
		$this.MapObjName         = 'ironguardgauntletsii'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 13
			[StatId]::MagicDefense = 5
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Reinforced Iron Guard Gauntlets, sturdier.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBrigandsPlatedBracers : BEGauntlets {
	BEBrigandsPlatedBracers() : base() {
		$this.Name               = 'Brigand''s Plated Bracers'
		$this.MapObjName         = 'brigandsplatedbracers'
		$this.PurchasePrice      = 200
		$this.SellPrice          = 100
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 4
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Heavy plated bracers favored by elite brigands.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZealotsVengeanceGauntlets : BEGauntlets {
	BEZealotsVengeanceGauntlets() : base() {
		$this.Name               = 'Zealot''s Vengeance Gauntlets'
		$this.MapObjName         = 'zealotsvengeancegauntlets'
		$this.PurchasePrice      = 600
		$this.SellPrice          = 300
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a vengeful zealot, empowering their strikes.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESilkenEnchantmentGloves : BEGauntlets {
	BESilkenEnchantmentGloves() : base() {
		$this.Name               = 'Silken Enchantment Gloves'
		$this.MapObjName         = 'silkenenchantmentgloves'
		$this.PurchasePrice      = 400
		$this.SellPrice          = 200
		$this.TargetStats        = @{
			[StatId]::Defense = 10
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Silken gloves imbued with potent enchantments, boosting magic.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEApprenticesRunebands : BEGauntlets {
	BEApprenticesRunebands() : base() {
		$this.Name               = 'Apprentice''s Runebands'
		$this.MapObjName         = 'apprenticesrunebands'
		$this.PurchasePrice      = 180
		$this.SellPrice          = 90
		$this.TargetStats        = @{
			[StatId]::Defense = 7
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Basic runebands for a magic apprentice, aiding their studies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWanderersIronGauntlets : BEGauntlets {
	BEWanderersIronGauntlets() : base() {
		$this.Name               = 'Wanderer''s Iron Gauntlets'
		$this.MapObjName         = 'wanderersirongauntlets'
		$this.PurchasePrice      = 250
		$this.SellPrice          = 125
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 6
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Iron gauntlets for a seasoned wanderer, robust and practical.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFabledChampionGauntlets : BEGauntlets {
	BEFabledChampionGauntlets() : base() {
		$this.Name               = 'Fabled Champion Gauntlets'
		$this.MapObjName         = 'fabledchampiongauntlets'
		$this.PurchasePrice      = 2800
		$this.SellPrice          = 1400
		$this.TargetStats        = @{
			[StatId]::Defense = 135
			[StatId]::MagicDefense = 70
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a fabled champion, unmatched power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEGrimskullLordGauntlets : BEGauntlets {
	BEGrimskullLordGauntlets() : base() {
		$this.Name               = 'Grimskull Lord Gauntlets'
		$this.MapObjName         = 'grimskulllordgauntlets'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 85
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets of a grimskull lord, radiating immense dread.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BECrystalweaveGlovesII : BEGauntlets {
	BECrystalweaveGlovesII() : base() {
		$this.Name               = 'Crystalweave Gloves II'
		$this.MapObjName         = 'crystalweaveglovesii'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 25
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Improved Crystalweave Gloves, enhancing focus further.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEDragonswornGauntletsII : BEGauntlets {
	BEDragonswornGauntletsII() : base() {
		$this.Name               = 'Dragonsworn Gauntlets II'
		$this.MapObjName         = 'dragonsworngauntletsii'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 90
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More potent Dragonsworn Gauntlets, stronger loyalty to dragons.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEternalFlameGauntletsII : BEGauntlets {
	BEEternalFlameGauntletsII() : base() {
		$this.Name               = 'Eternal Flame Gauntlets II'
		$this.MapObjName         = 'eternalflamegauntletsii'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 95
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Stronger Eternal Flame Gauntlets, more intense heat.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWhispersteelGauntletsII : BEGauntlets {
	BEWhispersteelGauntletsII() : base() {
		$this.Name               = 'Whispersteel Gauntlets II'
		$this.MapObjName         = 'whispersteelgauntletsii'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 30
			[StatId]::Accuracy = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Further enhanced Whispersteel Gauntlets, more silent and potent.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEStoneskinGripsII : BEGauntlets {
	BEStoneskinGripsII() : base() {
		$this.Name               = 'Stoneskin Grips II'
		$this.MapObjName         = 'stoneskingripsii'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::Defense = 62
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More powerful Stoneskin Grips, turning skin to tougher stone.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEGoddesssTouchGauntlets : BEGauntlets {
	BEGoddesssTouchGauntlets() : base() {
		$this.Name               = 'Goddess''s Touch Gauntlets'
		$this.MapObjName         = 'goddessstouchgauntlets'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Defense = 100
			[StatId]::MagicDefense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets said to be touched by a goddess, supreme defense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEChampionsGloryGauntlets : BEGauntlets {
	BEChampionsGloryGauntlets() : base() {
		$this.Name               = 'Champion''s Glory Gauntlets'
		$this.MapObjName         = 'championsglorygauntlets'
		$this.PurchasePrice      = 2300
		$this.SellPrice          = 1150
		$this.TargetStats        = @{
			[StatId]::Defense = 105
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets radiating the glory of a champion, inspiring allies.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEWraithtouchGlovesII : BEGauntlets {
	BEWraithtouchGlovesII() : base() {
		$this.Name               = 'Wraithtouch Gloves II'
		$this.MapObjName         = 'wraithtouchglovesii'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More potent Wraithtouch Gloves, chilling effect intensified.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BETitanforgedGauntletsII : BEGauntlets {
	BETitanforgedGauntletsII() : base() {
		$this.Name               = 'Titanforged Gauntlets II'
		$this.MapObjName         = 'titanforgedgauntletsii'
		$this.PurchasePrice      = 2500
		$this.SellPrice          = 1250
		$this.TargetStats        = @{
			[StatId]::Defense = 120
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Even more massive Titanforged Gauntlets, immense and heavy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEtherealBandsII : BEGauntlets {
	BEEtherealBandsII() : base() {
		$this.Name               = 'Ethereal Bands II'
		$this.MapObjName         = 'etherealbandsii'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More pure Ethereal Bands, granting greater magical prowess.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBlademasterGauntletsII : BEGauntlets {
	BEBlademasterGauntletsII() : base() {
		$this.Name               = 'Blademaster Gauntlets II'
		$this.MapObjName         = 'blademastergauntletsii'
		$this.PurchasePrice      = 1000
		$this.SellPrice          = 500
		$this.TargetStats        = @{
			[StatId]::Defense = 45
			[StatId]::MagicDefense = 15
			[StatId]::Accuracy = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Enhanced Blademaster Gauntlets, greater precision and offense.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEOathswornGauntletsII : BEGauntlets {
	BEOathswornGauntletsII() : base() {
		$this.Name               = 'Oathsworn Gauntlets II'
		$this.MapObjName         = 'oathsworngauntletsii'
		$this.PurchasePrice      = 1100
		$this.SellPrice          = 550
		$this.TargetStats        = @{
			[StatId]::Defense = 52
			[StatId]::MagicDefense = 15
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More potent Oathsworn Gauntlets, unwavering resolve.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESilverlightGlovesII : BEGauntlets {
	BESilverlightGlovesII() : base() {
		$this.Name               = 'Silverlight Gloves II'
		$this.MapObjName         = 'silverlightglovesii'
		$this.PurchasePrice      = 880
		$this.SellPrice          = 440
		$this.TargetStats        = @{
			[StatId]::Defense = 18
			[StatId]::MagicDefense = 30
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Brighter Silverlight Gloves, revealing more hidden paths.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEGuardiansResolveGauntlets : BEGauntlets {
	BEGuardiansResolveGauntlets() : base() {
		$this.Name               = 'Guardian''s Resolve Gauntlets'
		$this.MapObjName         = 'guardiansresolvegauntlets'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets imbued with a guardian''s unwavering resolve.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMysticRelicGauntletsII : BEGauntlets {
	BEMysticRelicGauntletsII() : base() {
		$this.Name               = 'Mystic Relic Gauntlets II'
		$this.MapObjName         = 'mysticrelicgauntletsii'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More powerful Mystic Relic Gauntlets, holding stronger ancient power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEShadowdancerGlovesII : BEGauntlets {
	BEShadowdancerGlovesII() : base() {
		$this.Name               = 'Shadowdancer Gloves II'
		$this.MapObjName         = 'shadowdancerglovesii'
		$this.PurchasePrice      = 700
		$this.SellPrice          = 350
		$this.TargetStats        = @{
			[StatId]::Defense = 12
			[StatId]::MagicDefense = 22
			[StatId]::Accuracy = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More advanced Shadowdancer Gloves, allowing greater agility.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEBattlewornGauntletsII : BEGauntlets {
	BEBattlewornGauntletsII() : base() {
		$this.Name               = 'Battleworn Gauntlets II'
		$this.MapObjName         = 'battleworngauntletsii'
		$this.PurchasePrice      = 800
		$this.SellPrice          = 400
		$this.TargetStats        = @{
			[StatId]::Defense = 38
			[StatId]::MagicDefense = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Battleworn Gauntlets hardened by more battles, even stronger.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESpiritboundGauntletsII : BEGauntlets {
	BESpiritboundGauntletsII() : base() {
		$this.Name               = 'Spiritbound Gauntlets II'
		$this.MapObjName         = 'spiritboundgauntletsii'
		$this.PurchasePrice      = 1050
		$this.SellPrice          = 525
		$this.TargetStats        = @{
			[StatId]::Defense = 30
			[StatId]::MagicDefense = 38
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More potent Spiritbound Gauntlets, stronger link to spirits.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVenomousGripsII : BEGauntlets {
	BEVenomousGripsII() : base() {
		$this.Name               = 'Venomous Grips II'
		$this.MapObjName         = 'venomousgripsii'
		$this.PurchasePrice      = 550
		$this.SellPrice          = 275
		$this.TargetStats        = @{
			[StatId]::Defense = 15
			[StatId]::MagicDefense = 12
			[StatId]::Accuracy = 8
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More potent Venomous Grips, dripping with stronger poison.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEZealotsHolyFists : BEGauntlets {
	BEZealotsHolyFists() : base() {
		$this.Name               = 'Zealot''s Holy Fists'
		$this.MapObjName         = 'zealotsholyfists'
		$this.PurchasePrice      = 620
		$this.SellPrice          = 310
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Fists of a truly righteous zealot, imbued with divine fervor.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEmeraldScaleGauntletsII : BEGauntlets {
	BEEmeraldScaleGauntletsII() : base() {
		$this.Name               = 'Emerald Scale Gauntlets II'
		$this.MapObjName         = 'emeraldscalegauntletsii'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 60
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More vibrant Emerald Scale Gauntlets, stronger protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEFrostWeaverGlovesII : BEGauntlets {
	BEFrostWeaverGlovesII() : base() {
		$this.Name               = 'Frost Weaver Gloves II'
		$this.MapObjName         = 'frostweaverglovesii'
		$this.PurchasePrice      = 950
		$this.SellPrice          = 475
		$this.TargetStats        = @{
			[StatId]::Defense = 20
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Improved Frost Weaver Gloves, manipulating ice with greater skill.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEOnyxClawGauntletsII : BEGauntlets {
	BEOnyxClawGauntletsII() : base() {
		$this.Name               = 'Onyx Claw Gauntlets II'
		$this.MapObjName         = 'onyxclawgauntletsii'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 18
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More potent Onyx Claw Gauntlets, for deeper piercing attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEStarshardGauntletsII : BEGauntlets {
	BEStarshardGauntletsII() : base() {
		$this.Name               = 'Starshard Gauntlets II'
		$this.MapObjName         = 'starshardgauntletsii'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'More powerful Starshard Gauntlets, radiating stronger cosmic energy.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEMoonstoneBracersII : BEGauntlets {
	BEMoonstoneBracersII() : base() {
		$this.Name               = 'Moonstone Bracers II'
		$this.MapObjName         = 'moonstonebracersii'
		$this.PurchasePrice      = 1080
		$this.SellPrice          = 540
		$this.TargetStats        = @{
			[StatId]::Defense = 22
			[StatId]::MagicDefense = 42
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Brighter Moonstone Bracers, enhancing nocturnal endeavors further.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEBlazecoreGauntletsIII : BEGauntlets {
	BEBlazecoreGauntletsIII() : base() {
		$this.Name               = 'Blazecore Gauntlets III'
		$this.MapObjName         = 'blazecoregauntletsiii'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 85
			[StatId]::MagicDefense = 28
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ultimate Blazecore Gauntlets, intensely hot and resilient.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BENightfallGauntletsIII : BEGauntlets {
	BENightfallGauntletsIII() : base() {
		$this.Name               = 'Nightfall Gauntlets III'
		$this.MapObjName         = 'nightfallgauntletsiii'
		$this.PurchasePrice      = 1550
		$this.SellPrice          = 775
		$this.TargetStats        = @{
			[StatId]::Defense = 75
			[StatId]::MagicDefense = 35
			[StatId]::Accuracy = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Final tier Nightfall Gauntlets, deepest shadows, supreme stealth.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAncientSteelGauntletsIII : BEGauntlets {
	BEAncientSteelGauntletsIII() : base() {
		$this.Name               = 'Ancient Steel Gauntlets III'
		$this.MapObjName         = 'ancientsteelgauntletsiii'
		$this.PurchasePrice      = 1200
		$this.SellPrice          = 600
		$this.TargetStats        = @{
			[StatId]::Defense = 55
			[StatId]::MagicDefense = 20
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ancient Steel Gauntlets of ultimate durability, unyielding.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDivineEssenceGauntletsIII : BEGauntlets {
	BEDivineEssenceGauntletsIII() : base() {
		$this.Name               = 'Divine Essence Gauntlets III'
		$this.MapObjName         = 'divineessencegauntletsiii'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 90
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ultimate Divine Essence Gauntlets, radiating pure divine power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidShardGlovesIII : BEGauntlets {
	BEVoidShardGlovesIII() : base() {
		$this.Name               = 'Void Shard Gloves III'
		$this.MapObjName         = 'voidshardglovesiii'
		$this.PurchasePrice      = 1300
		$this.SellPrice          = 650
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 58
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Final tier Void Shard Gloves, supreme disorientation.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECrimsonGuardGauntletsIII : BEGauntlets {
	BECrimsonGuardGauntletsIII() : base() {
		$this.Name               = 'Crimson Guard Gauntlets III'
		$this.MapObjName         = 'crimsonguardgauntletsiii'
		$this.PurchasePrice      = 1400
		$this.SellPrice          = 700
		$this.TargetStats        = @{
			[StatId]::Defense = 65
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Crimson Guard Gauntlets of unparalleled ferocity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEEnchantresssGrasp : BEGauntlets {
	BEEnchantresssGrasp() : base() {
		$this.Name               = 'Enchantress''s Grasp'
		$this.MapObjName         = 'enchantresssgrasp'
		$this.PurchasePrice      = 1250
		$this.SellPrice          = 625
		$this.TargetStats        = @{
			[StatId]::Defense = 28
			[StatId]::MagicDefense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ultimate bands for an enchantress, absolute magical power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BERuneforgedGauntletsIII : BEGauntlets {
	BERuneforgedGauntletsIII() : base() {
		$this.Name               = 'Runeforged Gauntlets III'
		$this.MapObjName         = 'runeforgedgauntletsiii'
		$this.PurchasePrice      = 1500
		$this.SellPrice          = 750
		$this.TargetStats        = @{
			[StatId]::Defense = 70
			[StatId]::MagicDefense = 35
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ultimate Runeforged Gauntlets, absolute mystical power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEEarthshakerGauntletsIII : BEGauntlets {
	BEEarthshakerGauntletsIII() : base() {
		$this.Name               = 'Earthshaker Gauntlets III'
		$this.MapObjName         = 'earthshakergauntletsiii'
		$this.PurchasePrice      = 1600
		$this.SellPrice          = 800
		$this.TargetStats        = @{
			[StatId]::Defense = 80
			[StatId]::MagicDefense = 25
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ultimate Earthshaker Gauntlets, causing devastating tremors.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BESoulfireGripsIII : BEGauntlets {
	BESoulfireGripsIII() : base() {
		$this.Name               = 'Soulfire Grips III'
		$this.MapObjName         = 'soulfiregripsiii'
		$this.PurchasePrice      = 1700
		$this.SellPrice          = 850
		$this.TargetStats        = @{
			[StatId]::Defense = 40
			[StatId]::MagicDefense = 60
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Final tier Soulfire Grips, searing spirits with maximum intensity.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEDragonheartGauntletsIII : BEGauntlets {
	BEDragonheartGauntletsIII() : base() {
		$this.Name               = 'Dragonheart Gauntlets III'
		$this.MapObjName         = 'dragonheartgauntletsiii'
		$this.PurchasePrice      = 2100
		$this.SellPrice          = 1050
		$this.TargetStats        = @{
			[StatId]::Defense = 100
			[StatId]::MagicDefense = 45
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets radiating the heart of a true dragon, immense power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BECelestialTearGauntletsIII : BEGauntlets {
	BECelestialTearGauntletsIII() : base() {
		$this.Name               = 'Celestial Tear Gauntlets III'
		$this.MapObjName         = 'celestialteargauntletsiii'
		$this.PurchasePrice      = 2200
		$this.SellPrice          = 1100
		$this.TargetStats        = @{
			[StatId]::Defense = 105
			[StatId]::MagicDefense = 50
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ultimate Celestial Tear Gauntlets, drawing maximum cosmic power.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEAbyssalPlateGauntletsIII : BEGauntlets {
	BEAbyssalPlateGauntletsIII() : base() {
		$this.Name               = 'Abyssal Plate Gauntlets III'
		$this.MapObjName         = 'abyssalplategauntletsiii'
		$this.PurchasePrice      = 2300
		$this.SellPrice          = 1150
		$this.TargetStats        = @{
			[StatId]::Defense = 110
			[StatId]::MagicDefense = 40
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Final tier Abyssal Plate Gauntlets, unyielding resilience.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEPhoenixFeatherGlovesIII : BEGauntlets {
	BEPhoenixFeatherGlovesIII() : base() {
		$this.Name               = 'Phoenix Feather Gloves III'
		$this.MapObjName         = 'phoenixfeatherglovesiii'
		$this.PurchasePrice      = 1450
		$this.SellPrice          = 725
		$this.TargetStats        = @{
			[StatId]::Defense = 35
			[StatId]::MagicDefense = 58
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ultimate Phoenix Feather Gloves, supreme healing and protection.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Female
	}
}

Class BEWarlordsDominionGauntlets : BEGauntlets {
	BEWarlordsDominionGauntlets() : base() {
		$this.Name               = 'Warlord''s Dominion Gauntlets'
		$this.MapObjName         = 'warlordsdominiongauntlets'
		$this.PurchasePrice      = 1800
		$this.SellPrice          = 900
		$this.TargetStats        = @{
			[StatId]::Defense = 88
			[StatId]::MagicDefense = 30
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Gauntlets that command absolute dominion, inspiring awe.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Male
	}
}

Class BEDreamsteelGauntletsIII : BEGauntlets {
	BEDreamsteelGauntletsIII() : base() {
		$this.Name               = 'Dreamsteel Gauntlets III'
		$this.MapObjName         = 'dreamsteelgauntletsiii'
		$this.PurchasePrice      = 1900
		$this.SellPrice          = 950
		$this.TargetStats        = @{
			[StatId]::Defense = 85
			[StatId]::MagicDefense = 42
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ultimate Dreamsteel Gauntlets, impossibly light and strong.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BEVoidstoneGauntletsIII : BEGauntlets {
	BEVoidstoneGauntletsIII() : base() {
		$this.Name               = 'Voidstone Gauntlets III'
		$this.MapObjName         = 'voidstonegauntletsiii'
		$this.PurchasePrice      = 2000
		$this.SellPrice          = 1000
		$this.TargetStats        = @{
			[StatId]::Defense = 90
			[StatId]::MagicDefense = 55
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Final tier Voidstone Gauntlets, absorbing all magical attacks.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF"
		$this.TargetGender       = [Gender]::Unisex
	}
}

Class BESunpetalHandguardsIII : BEGauntlets {
	BESunpetalHandguardsIII() : base() {
		$this.Name               = 'Sunpetal Handguards III'
		$this.MapObjName         = 'sunpetalhandguardsiii'
		$this.PurchasePrice      = 1350
		$this.SellPrice          = 675
		$this.TargetStats        = @{
			[StatId]::Defense = 32
			[StatId]::MagicDefense = 50
			[StatId]::Accuracy = 10
		}
		$this.CanAddToInventory  = $true
		$this.ExamineString      = 'Ultimate Sunpetal Handguards, vibrant and supremely healing.'
		$this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) DEF  +$($this.TargetStats[[StatId]::MagicDefense]) MDF  +$($this.TargetStats[[StatId]::Accuracy]) ACC"
		$this.TargetGender       = [Gender]::Female
	}
}

#endregion





#region Greaves

Class BEWornClothGreaves : BEGreaves {
    BEWornClothGreaves() : base() {
        $this.Name               = 'Worn Cloth Greaves'
        $this.MapObjName         = 'wornclothgreaves'
        $this.PurchasePrice      = 10
        $this.SellPrice          = 5
        $this.TargetStats        = @{
            [StatId]::Defense = 1
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 0
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Patched up cloth wrappings for the legs. Barely offers protection.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BERustedMetalShinguards : BEGreaves {
    BERustedMetalShinguards() : base() {
        $this.Name               = 'Rusted Metal Shinguards'
        $this.MapObjName         = 'rustedmetalshinguards'
        $this.PurchasePrice      = 20
        $this.SellPrice          = 10
        $this.TargetStats        = @{
            [StatId]::Defense = 2
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 1
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Shoddily made metal shinguards, covered in rust.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEThinLeatherLeggings : BEGreaves {
    BEThinLeatherLeggings() : base() {
        $this.Name               = 'Thin Leather Leggings'
        $this.MapObjName         = 'thinleatherleggings'
        $this.PurchasePrice      = 30
        $this.SellPrice          = 15
        $this.TargetStats        = @{
            [StatId]::Defense      = 2
            [StatId]::MagicDefense = 1
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 1
            [StatId]::MagicDefense = 0
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Simple leggings made from thin, treated leather.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEPaddedTravelersGreaves : BEGreaves {
    BEPaddedTravelersGreaves() : base() {
        $this.Name               = 'Padded Traveler''s Greaves'
        $this.MapObjName         = 'paddedtravelersgreaves'
        $this.PurchasePrice      = 45
        $this.SellPrice          = 22
        $this.TargetStats        = @{
            [StatId]::Defense = 3
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 2
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves with extra padding, suitable for long journeys.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEHardenedClothShinWraps : BEGreaves {
    BEHardenedClothShinWraps() : base() {
        $this.Name               = 'Hardened Cloth Shin Wraps'
        $this.MapObjName         = 'hardenedclothshinwraps'
        $this.PurchasePrice      = 55
        $this.SellPrice          = 27
        $this.TargetStats        = @{
            [StatId]::Defense      = 3
            [StatId]::MagicDefense = 1
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 2
            [StatId]::MagicDefense = 0
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Cloth wraps stiffened with resin for better leg protection.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEBasicWoodenGreaves : BEGreaves {
    BEBasicWoodenGreaves() : base() {
        $this.Name               = 'Basic Wooden Greaves'
        $this.MapObjName         = 'basicwoodengreaves'
        $this.PurchasePrice      = 70
        $this.SellPrice          = 35
        $this.TargetStats        = @{
            [StatId]::Defense = 4
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 2
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Simple greaves carved from sturdy wood.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEBoiledLeatherGreaves : BEGreaves {
    BEBoiledLeatherGreaves() : base() {
        $this.Name               = 'Boiled Leather Greaves'
        $this.MapObjName         = 'boiledleathergreaves'
        $this.PurchasePrice      = 85
        $this.SellPrice          = 42
        $this.TargetStats        = @{
            [StatId]::Defense      = 4
            [StatId]::MagicDefense = 2
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 3
            [StatId]::MagicDefense = 1
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves made from leather hardened by boiling.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BECopperPlatedGreaves : BEGreaves {
    BECopperPlatedGreaves() : base() {
        $this.Name               = 'Copper-Plated Greaves'
        $this.MapObjName         = 'copperplatedgreaves'
        $this.PurchasePrice      = 100
        $this.SellPrice          = 50
        $this.TargetStats        = @{
            [StatId]::Defense = 5
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 3
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Leather greaves reinforced with thin copper plates.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEApprenticeLeggings : BEGreaves {
    BEApprenticeLeggings() : base() {
        $this.Name               = 'Apprentice Leggings'
        $this.MapObjName         = 'apprenticeleggings'
        $this.PurchasePrice      = 90
        $this.SellPrice          = 45
        $this.TargetStats        = @{
            [StatId]::Defense      = 2
            [StatId]::MagicDefense = 3
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 1
            [StatId]::MagicDefense = 1
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Leggings worn by novice magic users, offering slight magical resistance.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEHideAndFurGreaves : BEGreaves {
    BEHideAndFurGreaves() : base() {
        $this.Name               = 'Hide and Fur Greaves'
        $this.MapObjName         = 'hideandfurgreaves'
        $this.PurchasePrice      = 110
        $this.SellPrice          = 55
        $this.TargetStats        = @{
            [StatId]::Defense      = 5
            [StatId]::MagicDefense = 1
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 3
            [StatId]::MagicDefense = 0
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves made from animal hides and lined with fur for warmth.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BESturdyLeatherGreaves : BEGreaves {
    BESturdyLeatherGreaves() : base() {
        $this.Name               = 'Sturdy Leather Greaves'
        $this.MapObjName         = 'sturdyleathergreaves'
        $this.PurchasePrice      = 130
        $this.SellPrice          = 65
        $this.TargetStats        = @{
            [StatId]::Defense = 6
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 4
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Well-made greaves from thick, sturdy leather.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEBronzeShinguards : BEGreaves {
    BEBronzeShinguards() : base() {
        $this.Name               = 'Bronze Shinguards'
        $this.MapObjName         = 'bronzeshinguards'
        $this.PurchasePrice      = 150
        $this.SellPrice          = 75
        $this.TargetStats        = @{
            [StatId]::Defense      = 7
            [StatId]::MagicDefense = 1
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 5
            [StatId]::MagicDefense = 0
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Shinguards crafted from beaten bronze.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEIronReinforcedGreaves : BEGreaves {
    BEIronReinforcedGreaves() : base() {
        $this.Name               = 'Iron-Reinforced Greaves'
        $this.MapObjName         = 'ironreinforcedgreaves'
        $this.PurchasePrice      = 180
        $this.SellPrice          = 90
        $this.TargetStats        = @{
            [StatId]::Defense = 8
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 6
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Leather greaves reinforced with strips of iron.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEQuiltedLegGuards : BEGreaves {
    BEQuiltedLegGuards() : base() {
        $this.Name               = 'Quilted Leg Guards'
        $this.MapObjName         = 'quiltedlegguards'
        $this.PurchasePrice      = 200
        $this.SellPrice          = 100
        $this.TargetStats        = @{
            [StatId]::Defense      = 6
            [StatId]::MagicDefense = 3
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 4
            [StatId]::MagicDefense = 1
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Thickly quilted guards providing decent leg protection.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEBanditChiefsGreaves : BEGreaves {
    BEBanditChiefsGreaves() : base() {
        $this.Name               = 'Bandit Chief''s Greaves'
        $this.MapObjName         = 'banditchiefsgreaves'
        $this.PurchasePrice      = 230
        $this.SellPrice          = 115
        $this.TargetStats        = @{
            [StatId]::Defense = 9
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 7
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Stolen and repurposed greaves, surprisingly effective.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEForestWalkersGreaves : BEGreaves {
    BEForestWalkersGreaves() : base() {
        $this.Name               = 'Forest Walker''s Greaves'
        $this.MapObjName         = 'forestwalkersgreaves'
        $this.PurchasePrice      = 250
        $this.SellPrice          = 125
        $this.TargetStats        = @{
            [StatId]::Defense      = 7
            [StatId]::MagicDefense = 4
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 5
            [StatId]::MagicDefense = 2
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves designed for quiet movement through forests.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BESoldiersIronGreaves : BEGreaves {
    BESoldiersIronGreaves() : base() {
        $this.Name               = 'Soldier''s Iron Greaves'
        $this.MapObjName         = 'soldiersirongreaves'
        $this.PurchasePrice      = 280
        $this.SellPrice          = 140
        $this.TargetStats        = @{
            [StatId]::Defense = 10
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 7
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Standard issue iron greaves for foot soldiers.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEEnchantedBronzeGreaves : BEGreaves {
    BEEnchantedBronzeGreaves() : base() {
        $this.Name               = 'Enchanted Bronze Greaves'
        $this.MapObjName         = 'enchantedbronzegreaves'
        $this.PurchasePrice      = 300
        $this.SellPrice          = 150
        $this.TargetStats        = @{
            [StatId]::Defense      = 8
            [StatId]::MagicDefense = 5
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 6
            [StatId]::MagicDefense = 3
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Bronze greaves imbued with minor protective enchantments.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEHeavyHideGreaves : BEGreaves {
    BEHeavyHideGreaves() : base() {
        $this.Name               = 'Heavy Hide Greaves'
        $this.MapObjName         = 'heavyhidegreaves'
        $this.PurchasePrice      = 260
        $this.SellPrice          = 130
        $this.TargetStats        = @{
            [StatId]::Defense = 9
            [StatId]::MagicDefense = 2
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 7
            [StatId]::MagicDefense = 1
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves made from thick, tough animal hides.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEJourneymansGreaves : BEGreaves {
    BEJourneymansGreaves() : base() {
        $this.Name               = 'Journeyman''s Greaves'
        $this.MapObjName         = 'journeymansgreaves'
        $this.PurchasePrice      = 320
        $this.SellPrice          = 160
        $this.TargetStats        = @{
            [StatId]::Defense = 11
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 8
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Reliable greaves for an experienced adventurer.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEReinforcedLeatherLegGuards : BEGreaves {
    BEReinforcedLeatherLegGuards() : base() {
        $this.Name               = 'Reinforced Leather Leg Guards'
        $this.MapObjName         = 'reinforcedleatherlegguards'
        $this.PurchasePrice      = 350
        $this.SellPrice          = 175
        $this.TargetStats        = @{
            [StatId]::Defense      = 10
            [StatId]::MagicDefense = 3
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 7
            [StatId]::MagicDefense = 1
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Leather leg guards with internal metal plates for added protection.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEIronGreaves : BEGreaves {
    BEIronGreaves() : base() {
        $this.Name               = 'Iron Greaves'
        $this.MapObjName         = 'irongreaves'
        $this.PurchasePrice      = 400
        $this.SellPrice          = 200
        $this.TargetStats        = @{
            [StatId]::Defense = 12
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 9
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Solid iron greaves offering good physical defense.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEStuddedIronGreaves : BEGreaves {
    BEStuddedIronGreaves() : base() {
        $this.Name               = 'Studded Iron Greaves'
        $this.MapObjName         = 'studdedirongreaves'
        $this.PurchasePrice      = 450
        $this.SellPrice          = 225
        $this.TargetStats        = @{
            [StatId]::Defense      = 13
            [StatId]::MagicDefense = 2
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 10
            [StatId]::MagicDefense = 1
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Iron greaves reinforced with prominent metal studs.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEChainmailLeggings : BEGreaves {
    BEChainmailLeggings() : base() {
        $this.Name               = 'Chainmail Leggings'
        $this.MapObjName         = 'chainmailleggings'
        $this.PurchasePrice      = 500
        $this.SellPrice          = 250
        $this.TargetStats        = @{
            [StatId]::Defense = 14
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 11
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Leggings made of interlocking metal rings.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEGuardiansGreaves : BEGreaves {
    BEGuardiansGreaves() : base() {
        $this.Name               = 'Guardian''s Greaves'
        $this.MapObjName         = 'guardiansgreaves'
        $this.PurchasePrice      = 550
        $this.SellPrice          = 275
        $this.TargetStats        = @{
            [StatId]::Defense      = 15
            [StatId]::MagicDefense = 4
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 12
            [StatId]::MagicDefense = 2
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves worn by city guardians, polished and well-maintained.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEAcolytesBoots : BEGreaves {
    BEAcolytesBoots() : base() {
        $this.Name               = 'Acolyte''s Boots'
        $this.MapObjName         = 'acolytesboots'
        $this.PurchasePrice      = 480
        $this.SellPrice          = 240
        $this.TargetStats        = @{
            [StatId]::Defense      = 5
            [StatId]::MagicDefense = 7
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 3
            [StatId]::MagicDefense = 4
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Sturdy boots often worn by acolytes, offering magical resistance.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEScaleMailGreaves : BEGreaves {
    BEScaleMailGreaves() : base() {
        $this.Name               = 'Scale Mail Greaves'
        $this.MapObjName         = 'scalemailgreaves'
        $this.PurchasePrice      = 600
        $this.SellPrice          = 300
        $this.TargetStats        = @{
            [StatId]::Defense = 16
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 12
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves constructed from overlapping metal scales.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEHuntersLeatherTreads : BEGreaves {
    BEHuntersLeatherTreads() : base() {
        $this.Name               = 'Hunter''s Leather Treads'
        $this.MapObjName         = 'huntersleathertreads'
        $this.PurchasePrice      = 650
        $this.SellPrice          = 325
        $this.TargetStats        = @{
            [StatId]::Defense      = 14
            [StatId]::MagicDefense = 5
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 11
            [StatId]::MagicDefense = 3
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Durable leather treads designed for tracking through rough terrain.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEFortifiedWoodenGreaves : BEGreaves {
    BEFortifiedWoodenGreaves() : base() {
        $this.Name               = 'Fortified Wooden Greaves'
        $this.MapObjName         = 'fortifiedwoodengreaves'
        $this.PurchasePrice      = 520
        $this.SellPrice          = 260
        $this.TargetStats        = @{
            [StatId]::Defense = 13
            [StatId]::MagicDefense = 1
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 10
            [StatId]::MagicDefense = 0
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Wooden greaves reinforced with metal bands.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEIroncladGreaves : BEGreaves {
    BEIroncladGreaves() : base() {
        $this.Name               = 'Ironclad Greaves'
        $this.MapObjName         = 'ironcladgreaves'
        $this.PurchasePrice      = 700
        $this.SellPrice          = 350
        $this.TargetStats        = @{
            [StatId]::Defense = 18
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 14
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Heavy iron greaves offering substantial protection.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BESteelGreaves : BEGreaves {
    BESteelGreaves() : base() {
        $this.Name               = 'Steel Greaves'
        $this.MapObjName         = 'steelgreaves'
        $this.PurchasePrice      = 750
        $this.SellPrice          = 375
        $this.TargetStats        = @{
            [StatId]::Defense      = 19
            [StatId]::MagicDefense = 3
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 15
            [StatId]::MagicDefense = 1
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Well-crafted greaves made of polished steel.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEHardenedLeatherLeggingsMarkII : BEGreaves {
    BEHardenedLeatherLeggingsMarkII() : base() {
        $this.Name               = 'Hardened Leather Leggings II'
        $this.MapObjName         = 'hardenedleatherleggingsii'
        $this.PurchasePrice      = 800
        $this.SellPrice          = 400
        $this.TargetStats        = @{
            [StatId]::Defense      = 16
            [StatId]::MagicDefense = 7
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 12
            [StatId]::MagicDefense = 4
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Improved leggings made from specially treated, hardened leather.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEChainmailAndPlateGreaves : BEGreaves {
    BEChainmailAndPlateGreaves() : base() {
        $this.Name               = 'Chainmail and Plate Greaves'
        $this.MapObjName         = 'chainmailandplategreaves'
        $this.PurchasePrice      = 900
        $this.SellPrice          = 450
        $this.TargetStats        = @{
            [StatId]::Defense = 22
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 17
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves combining chainmail flexibility with plate protection.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEWarriorsLeatherGreaves : BEGreaves {
    BEWarriorsLeatherGreaves() : base() {
        $this.Name               = 'Warrior''s Leather Greaves'
        $this.MapObjName         = 'warriorsleathergreaves'
        $this.PurchasePrice      = 950
        $this.SellPrice          = 475
        $this.TargetStats        = @{
            [StatId]::Defense      = 20
            [StatId]::MagicDefense = 5
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 16
            [StatId]::MagicDefense = 3
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Tough leather greaves favored by seasoned warriors.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEScholarsBoots : BEGreaves {
    BEScholarsBoots() : base() {
        $this.Name               = 'Scholar''s Boots'
        $this.MapObjName         = 'scholarsboots'
        $this.PurchasePrice      = 850
        $this.SellPrice          = 425
        $this.TargetStats        = @{
            [StatId]::Defense      = 7
            [StatId]::MagicDefense = 10
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 5
            [StatId]::MagicDefense = 6
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Comfortable boots often worn by scholars, offering some magical warding.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEHeavyChainGreaves : BEGreaves {
    BEHeavyChainGreaves() : base() {
        $this.Name               = 'Heavy Chain Greaves'
        $this.MapObjName         = 'heavychaingreaves'
        $this.PurchasePrice      = 1100
        $this.SellPrice          = 550
        $this.TargetStats        = @{
            [StatId]::Defense = 25
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 19
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves made from thick, heavy chainmail links.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEFineSteelGreaves : BEGreaves {
    BEFineSteelGreaves() : base() {
        $this.Name               = 'Fine Steel Greaves'
        $this.MapObjName         = 'finesteelgreaves'
        $this.PurchasePrice      = 1200
        $this.SellPrice          = 600
        $this.TargetStats        = @{
            [StatId]::Defense      = 24
            [StatId]::MagicDefense = 6
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 18
            [StatId]::MagicDefense = 3
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves crafted from high-quality steel, offering excellent protection.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEEnchantedTravelersBoots : BEGreaves {
    BEEnchantedTravelersBoots() : base() {
        $this.Name               = 'Enchanted Traveler''s Boots'
        $this.MapObjName         = 'enchantedtravelersboots'
        $this.PurchasePrice      = 1000
        $this.SellPrice          = 500
        $this.TargetStats        = @{
            [StatId]::Defense      = 10
            [StatId]::MagicDefense = 12
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 7
            [StatId]::MagicDefense = 8
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Boots enchanted for long journeys, providing magical resistance.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEPlateAndMailGreaves : BEGreaves {
    BEPlateAndMailGreaves() : base() {
        $this.Name               = 'Plate and Mail Greaves'
        $this.MapObjName         = 'plateandmailgreaves'
        $this.PurchasePrice      = 1350
        $this.SellPrice          = 675
        $this.TargetStats        = @{
            [StatId]::Defense = 28
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 22
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'A hybrid design combining the strength of plate with chainmail flexibility.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEVeteranSoldiersGreaves : BEGreaves {
    BEVeteranSoldiersGreaves() : base() {
        $this.Name               = 'Veteran Soldier''s Greaves'
        $this.MapObjName         = 'veteransoldiersgreaves'
        $this.PurchasePrice      = 1500
        $this.SellPrice          = 750
        $this.TargetStats        = @{
            [StatId]::Defense      = 26
            [StatId]::MagicDefense = 7
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 20
            [StatId]::MagicDefense = 4
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves worn by battle-hardened veteran soldiers.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEMithrilThreadedGreaves : BEGreaves {
    BEMithrilThreadedGreaves() : base() {
        $this.Name               = 'Mithril-Threaded Greaves'
        $this.MapObjName         = 'mithrilthreadedgreaves'
        $this.PurchasePrice      = 1600
        $this.SellPrice          = 800
        $this.TargetStats        = @{
            [StatId]::Defense      = 25
            [StatId]::MagicDefense = 10
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 19
            [StatId]::MagicDefense = 6
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Leather greaves interwoven with threads of mithril for lightness and strength.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEFullSteelPlateGreaves : BEGreaves {
    BEFullSteelPlateGreaves() : base() {
        $this.Name               = 'Full Steel Plate Greaves'
        $this.MapObjName         = 'fullsteelplategreaves'
        $this.PurchasePrice      = 1800
        $this.SellPrice          = 900
        $this.TargetStats        = @{
            [StatId]::Defense = 32
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 25
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves offering complete leg protection with articulated steel plates.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEEnchantedKnightGreaves : BEGreaves {
    BEEnchantedKnightGreaves() : base() {
        $this.Name               = 'Enchanted Knight Greaves'
        $this.MapObjName         = 'enchantedknightgreaves'
        $this.PurchasePrice      = 2000
        $this.SellPrice          = 1000
        $this.TargetStats        = @{
            [StatId]::Defense      = 30
            [StatId]::MagicDefense = 8
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 23
            [StatId]::MagicDefense = 5
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Steel greaves of a knight, imbued with protective enchantments.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEWyrmScaleLeggings : BEGreaves {
    BEWyrmScaleLeggings() : base() {
        $this.Name               = 'Wyrm Scale Leggings'
        $this.MapObjName         = 'wyrmscaleleggings'
        $this.PurchasePrice      = 2200
        $this.SellPrice          = 1100
        $this.TargetStats        = @{
            [StatId]::Defense = 35
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 27
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Leggings crafted from the scales of a young dragon or wyrm.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEMagesGuildBoots : BEGreaves {
    BEMagesGuildBoots() : base() {
        $this.Name               = 'Mage''s Guild Boots'
        $this.MapObjName         = 'magesguildboots'
        $this.PurchasePrice      = 1900
        $this.SellPrice          = 950
        $this.TargetStats        = @{
            [StatId]::Defense      = 12
            [StatId]::MagicDefense = 15
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 8
            [StatId]::MagicDefense = 10
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Boots issued to members of a mage''s guild, enchanted for magical defense.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEOrnateSteelLegguards : BEGreaves {
    BEOrnateSteelLegguards() : base() {
        $this.Name               = 'Ornate Steel Legguards'
        $this.MapObjName         = 'ornatesteellegguards'
        $this.PurchasePrice      = 2500
        $this.SellPrice          = 1250
        $this.TargetStats        = @{
            [StatId]::Defense      = 34
            [StatId]::MagicDefense = 6
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 26
            [StatId]::MagicDefense = 3
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Steel legguards with intricate, decorative carvings.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEGryphonFeatherBoots : BEGreaves {
    BEGryphonFeatherBoots() : base() {
        $this.Name               = 'Gryphon Feather Boots'
        $this.MapObjName         = 'gryphonfeatherboots'
        $this.PurchasePrice      = 2300
        $this.SellPrice          = 1150
        $this.TargetStats        = @{
            [StatId]::Defense      = 20
            [StatId]::MagicDefense = 12
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 15
            [StatId]::MagicDefense = 8
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Lightweight boots adorned with gryphon feathers, said to enhance agility.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEDwarvenForgedGreaves : BEGreaves {
    BEDwarvenForgedGreaves() : base() {
        $this.Name               = 'Dwarven Forged Greaves'
        $this.MapObjName         = 'dwarvenforgedgreaves'
        $this.PurchasePrice      = 2800
        $this.SellPrice          = 1400
        $this.TargetStats        = @{
            [StatId]::Defense = 38
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 30
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves masterfully forged by dwarven smiths, exceptionally durable.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEElvenScoutsBoots : BEGreaves {
    BEElvenScoutsBoots() : base() {
        $this.Name               = 'Elven Scout''s Boots'
        $this.MapObjName         = 'elvenscoutsboots'
        $this.PurchasePrice      = 2600
        $this.SellPrice          = 1300
        $this.TargetStats        = @{
            [StatId]::Defense      = 22
            [StatId]::MagicDefense = 14
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 17
            [StatId]::MagicDefense = 9
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Boots crafted for elven scouts, allowing for silent movement.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEAdamantiteWeaveGreaves : BEGreaves {
    BEAdamantiteWeaveGreaves() : base() {
        $this.Name               = 'Adamantite Weave Greaves'
        $this.MapObjName         = 'adamantiteweavegreaves'
        $this.PurchasePrice      = 3000
        $this.SellPrice          = 1500
        $this.TargetStats        = @{
            [StatId]::Defense = 40
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 32
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves with an underlying weave of adamantite threads for superior protection.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEMithrilPlateGreaves : BEGreaves {
    BEMithrilPlateGreaves() : base() {
        $this.Name               = 'Mithril Plate Greaves'
        $this.MapObjName         = 'mithrilplategreaves'
        $this.PurchasePrice      = 3200
        $this.SellPrice          = 1600
        $this.TargetStats        = @{
            [StatId]::Defense      = 38
            [StatId]::MagicDefense = 12
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 30
            [StatId]::MagicDefense = 8
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves made from plates of shining mithril, light and strong.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEBattlemageReinforcedBoots : BEGreaves {
    BEBattlemageReinforcedBoots() : base() {
        $this.Name               = 'Battlemage Reinforced Boots'
        $this.MapObjName         = 'battlemagereinforcedboots'
        $this.PurchasePrice      = 3500
        $this.SellPrice          = 1750
        $this.TargetStats        = @{
            [StatId]::Defense      = 28
            [StatId]::MagicDefense = 18
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 22
            [StatId]::MagicDefense = 13
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Boots reinforced with metal and enchantments for battle mages.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEOrnateDwarvenGreaves : BEGreaves {
    BEOrnateDwarvenGreaves() : base() {
        $this.Name               = 'Ornate Dwarven Greaves'
        $this.MapObjName         = 'ornatedwarvengreaves'
        $this.PurchasePrice      = 3800
        $this.SellPrice          = 1900
        $this.TargetStats        = @{
            [StatId]::Defense = 45
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 36
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Heavily ornamented greaves showcasing masterful dwarven craftsmanship.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEElvenKnightGreaves : BEGreaves {
    BEElvenKnightGreaves() : base() {
        $this.Name               = 'Elven Knight Greaves'
        $this.MapObjName         = 'elvenknightgreaves'
        $this.PurchasePrice      = 4200
        $this.SellPrice          = 2100
        $this.TargetStats        = @{
            [StatId]::Defense      = 35
            [StatId]::MagicDefense = 15
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 27
            [StatId]::MagicDefense = 10
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Elegant yet sturdy greaves worn by elven knights.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEShadowWalkerBoots : BEGreaves {
    BEShadowWalkerBoots() : base() {
        $this.Name               = 'Shadow Walker Boots'
        $this.MapObjName         = 'shadowwalkerboots'
        $this.PurchasePrice      = 4000
        $this.SellPrice          = 2000
        $this.TargetStats        = @{
            [StatId]::Defense      = 25
            [StatId]::MagicDefense = 22
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 19
            [StatId]::MagicDefense = 16
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Boots that allow the wearer to move like a shadow, silent and unseen.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEAdamantitePlatedGreaves : BEGreaves {
    BEAdamantitePlatedGreaves() : base() {
        $this.Name               = 'Adamantite-Plated Greaves'
        $this.MapObjName         = 'adamantiteplatedgreaves'
        $this.PurchasePrice      = 4800
        $this.SellPrice          = 2400
        $this.TargetStats        = @{
            [StatId]::Defense = 50
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 40
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves reinforced with nearly unbreakable adamantite plates.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEGreavesOfResilience : BEGreaves {
    BEGreavesOfResilience() : base() {
        $this.Name               = 'Greaves of Resilience'
        $this.MapObjName         = 'greavesofresilience'
        $this.PurchasePrice      = 5200
        $this.SellPrice          = 2600
        $this.TargetStats        = @{
            [StatId]::Defense      = 48
            [StatId]::MagicDefense = 10
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 38
            [StatId]::MagicDefense = 6
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves enchanted to withstand tremendous punishment.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEBootsOfSwiftStriking : BEGreaves {
    BEBootsOfSwiftStriking() : base() {
        $this.Name               = 'Boots of Swift Striking'
        $this.MapObjName         = 'bootsofswiftstriking'
        $this.PurchasePrice      = 5000
        $this.SellPrice          = 2500
        $this.TargetStats        = @{
            [StatId]::Defense      = 30
            [StatId]::MagicDefense = 20
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 23
            [StatId]::MagicDefense = 15
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Boots that enhance the wearer''s speed and reflexes in combat.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEWyrmboneGreaves : BEGreaves {
    BEWyrmboneGreaves() : base() {
        $this.Name               = 'Wyrmbone Greaves'
        $this.MapObjName         = 'wyrmbonegreaves'
        $this.PurchasePrice      = 5800
        $this.SellPrice          = 2900
        $this.TargetStats        = @{
            [StatId]::Defense = 55
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 44
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves carved from the bones of a powerful wyrm.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEArchmagesEnchantedBoots : BEGreaves {
    BEArchmagesEnchantedBoots() : base() {
        $this.Name               = 'Archmage''s Enchanted Boots'
        $this.MapObjName         = 'archmagesenchantedboots'
        $this.PurchasePrice      = 6000
        $this.SellPrice          = 3000
        $this.TargetStats        = @{
            [StatId]::Defense      = 25
            [StatId]::MagicDefense = 25
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 19
            [StatId]::MagicDefense = 19
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Boots heavily enchanted by an archmage for superior magical defense.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEDragonscaleGreaves : BEGreaves {
    BEDragonscaleGreaves() : base() {
        $this.Name               = 'Dragonscale Greaves'
        $this.MapObjName         = 'dragonscalegreaves'
        $this.PurchasePrice      = 6500
        $this.SellPrice          = 3250
        $this.TargetStats        = @{
            [StatId]::Defense      = 52
            [StatId]::MagicDefense = 15
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 41
            [StatId]::MagicDefense = 10
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves meticulously crafted from individual dragon scales.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEOrichalcumPlatedGreaves : BEGreaves {
    BEOrichalcumPlatedGreaves() : base() {
        $this.Name               = 'Orichalcum-Plated Greaves'
        $this.MapObjName         = 'orichalcumplatedgreaves'
        $this.PurchasePrice      = 7000
        $this.SellPrice          = 3500
        $this.TargetStats        = @{
            [StatId]::Defense      = 45
            [StatId]::MagicDefense = 20
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 36
            [StatId]::MagicDefense = 15
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves plated with the rare and magically resonant orichalcum.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEPhoenixRiderGreaves : BEGreaves {
    BEPhoenixRiderGreaves() : base() {
        $this.Name               = 'Phoenix Rider Greaves'
        $this.MapObjName         = 'phoenixridergreaves'
        $this.PurchasePrice      = 7500
        $this.SellPrice          = 3750
        $this.TargetStats        = @{
            [StatId]::Defense      = 40
            [StatId]::MagicDefense = 28
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 32
            [StatId]::MagicDefense = 21
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves worn by legendary riders of phoenixes, imbued with fire resistance.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEAdamantiumCoreGreaves : BEGreaves {
    BEAdamantiumCoreGreaves() : base() {
        $this.Name               = 'Adamantium Core Greaves'
        $this.MapObjName         = 'adamantiumcoregreaves'
        $this.PurchasePrice      = 8000
        $this.SellPrice          = 4000
        $this.TargetStats        = @{
            [StatId]::Defense = 60
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 48
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves with a solid core of nearly unbreakable adamantite.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEGreavesOfTheSilentGuardian : BEGreaves {
    BEGreavesOfTheSilentGuardian() : base() {
        $this.Name               = 'Greaves of the Silent Guardian'
        $this.MapObjName         = 'greavesofthesilentguardian'
        $this.PurchasePrice      = 8500
        $this.SellPrice          = 4250
        $this.TargetStats        = @{
            [StatId]::Defense      = 58
            [StatId]::MagicDefense = 18
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 46
            [StatId]::MagicDefense = 13
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves worn by guardians who protect sacred, silent places.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEStarSilverLegplates : BEGreaves {
    BEStarSilverLegplates() : base() {
        $this.Name               = 'Star Silver Legplates'
        $this.MapObjName         = 'starsilverlegplates'
        $this.PurchasePrice      = 9000
        $this.SellPrice          = 4500
        $this.TargetStats        = @{
            [StatId]::Defense      = 42
            [StatId]::MagicDefense = 25
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 33
            [StatId]::MagicDefense = 19
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Legplates forged from silver mined from a fallen star, cool to the touch.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEVoidtouchedGreaves : BEGreaves {
    BEVoidtouchedGreaves() : base() {
        $this.Name               = 'Void-Touched Greaves'
        $this.MapObjName         = 'voidtouchedgreaves'
        $this.PurchasePrice      = 9500
        $this.SellPrice          = 4750
        $this.TargetStats        = @{
            [StatId]::Defense      = 50
            [StatId]::MagicDefense = 22
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 40
            [StatId]::MagicDefense = 17
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves that seem to absorb light, touched by the emptiness of the void.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEGolemsHeartGreaves : BEGreaves {
    BEGolemsHeartGreaves() : base() {
        $this.Name               = 'Golem''s Heart Greaves'
        $this.MapObjName         = 'golemsheartgreaves'
        $this.PurchasePrice      = 10000
        $this.SellPrice          = 5000
        $this.TargetStats        = @{
            [StatId]::Defense = 68
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 54
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Massive greaves, as if taken from the core of a powerful stone golem.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BECelestialKnightGreaves : BEGreaves {
    BECelestialKnightGreaves() : base() {
        $this.Name               = 'Celestial Knight Greaves'
        $this.MapObjName         = 'celestialknightgreaves'
        $this.PurchasePrice      = 11000
        $this.SellPrice          = 5500
        $this.TargetStats        = @{
            [StatId]::Defense      = 55
            [StatId]::MagicDefense = 30
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 44
            [StatId]::MagicDefense = 23
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves worn by knights who serve celestial beings, shimmering with holy light.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEDemonboneGreaves : BEGreaves {
    BEDemonboneGreaves() : base() {
        $this.Name               = 'Demonbone Greaves'
        $this.MapObjName         = 'demonbonegreaves'
        $this.PurchasePrice      = 12000
        $this.SellPrice          = 6000
        $this.TargetStats        = @{
            [StatId]::Defense = 75
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 60
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves crafted from the bones of powerful demons, unnervingly strong.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEArchonForgedGreaves : BEGreaves {
    BEArchonForgedGreaves() : base() {
        $this.Name               = 'Archon-Forged Greaves'
        $this.MapObjName         = 'archonforgedgreaves'
        $this.PurchasePrice      = 13000
        $this.SellPrice          = 6500
        $this.TargetStats        = @{
            [StatId]::Defense      = 65
            [StatId]::MagicDefense = 35
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 52
            [StatId]::MagicDefense = 27
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves forged by Archons, imbued with immense protective power.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BETitaniumPlateGreaves : BEGreaves {
    BETitaniumPlateGreaves() : base() {
        $this.Name               = 'Titanium Plate Greaves'
        $this.MapObjName         = 'titaniumplategreaves'
        $this.PurchasePrice      = 14000
        $this.SellPrice          = 7000
        $this.TargetStats        = @{
            [StatId]::Defense = 80
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 64
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves made from solid plates of exceptionally strong titanium.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEStarMetalLegplates : BEGreaves {
    BEStarMetalLegplates() : base() {
        $this.Name               = 'Star Metal Legplates'
        $this.MapObjName         = 'starmetallegplates'
        $this.PurchasePrice      = 15000
        $this.SellPrice          = 7500
        $this.TargetStats        = @{
            [StatId]::Defense      = 70
            [StatId]::MagicDefense = 38
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 56
            [StatId]::MagicDefense = 29
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Legplates forged from metal fallen from the stars, humming with cosmic energy.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEVoidtouchedPlatelegs : BEGreaves {
    BEVoidtouchedPlatelegs() : base() {
        $this.Name               = 'Void-Touched Platelegs'
        $this.MapObjName         = 'voidtouchedplatelegs'
        $this.PurchasePrice      = 16000
        $this.SellPrice          = 8000
        $this.TargetStats        = @{
            [StatId]::Defense      = 78
            [StatId]::MagicDefense = 25
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 62
            [StatId]::MagicDefense = 19
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Platelegs that seem to absorb light, touched by the emptiness of the void.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEAncientRunicLegguards : BEGreaves {
    BEAncientRunicLegguards() : base() {
        $this.Name               = 'Ancient Runic Legguards'
        $this.MapObjName         = 'ancientruniclegguards'
        $this.PurchasePrice      = 17500
        $this.SellPrice          = 8750
        $this.TargetStats        = @{
            [StatId]::Defense      = 68
            [StatId]::MagicDefense = 42
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 54
            [StatId]::MagicDefense = 33
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Legguards covered in ancient, powerful runes of warding.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEDrakeLordGreaves : BEGreaves {
    BEDrakeLordGreaves() : base() {
        $this.Name               = 'Drake Lord Greaves'
        $this.MapObjName         = 'drakelordgreaves'
        $this.PurchasePrice      = 19000
        $this.SellPrice          = 9500
        $this.TargetStats        = @{
            [StatId]::Defense = 90
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 72
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves crafted from the scales of a mighty Drake Lord.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEPaladinsSacredGreaves : BEGreaves {
    BEPaladinsSacredGreaves() : base() {
        $this.Name               = 'Paladin''s Sacred Greaves'
        $this.MapObjName         = 'paladinssacredgreaves'
        $this.PurchasePrice      = 20000
        $this.SellPrice          = 10000
        $this.TargetStats        = @{
            [StatId]::Defense      = 80
            [StatId]::MagicDefense = 30
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 64
            [StatId]::MagicDefense = 23
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Sacred greaves blessed to protect a holy champion of justice.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEArchmagesWardBoots : BEGreaves {
    BEArchmagesWardBoots() : base() {
        $this.Name               = 'Archmage''s Ward Boots'
        $this.MapObjName         = 'archmageswardboots'
        $this.PurchasePrice      = 22000
        $this.SellPrice          = 11000
        $this.TargetStats        = @{
            [StatId]::Defense      = 45
            [StatId]::MagicDefense = 50
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 36
            [StatId]::MagicDefense = 40
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Boots heavily enchanted by an archmage, creating a powerful magical ward.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEBlacksteelPlatelegs : BEGreaves {
    BEBlacksteelPlatelegs() : base() {
        $this.Name               = 'Blacksteel Platelegs'
        $this.MapObjName         = 'blacksteelplatelegs'
        $this.PurchasePrice      = 24000
        $this.SellPrice          = 12000
        $this.TargetStats        = @{
            [StatId]::Defense = 95
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 76
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Platelegs forged from rare blacksteel, offering superior resilience.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEGryphonKingsGreaves : BEGreaves {
    BEGryphonKingsGreaves() : base() {
        $this.Name               = 'Gryphon King''s Greaves'
        $this.MapObjName         = 'gryphonkingsgreaves'
        $this.PurchasePrice      = 25000
        $this.SellPrice          = 12500
        $this.TargetStats        = @{
            [StatId]::Defense      = 85
            [StatId]::MagicDefense = 28
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 68
            [StatId]::MagicDefense = 21
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves worn by the king of gryphons, light yet incredibly strong.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BESunstonePlatedGreaves : BEGreaves {
    BESunstonePlatedGreaves() : base() {
        $this.Name               = 'Sunstone-Plated Greaves'
        $this.MapObjName         = 'sunstoneplatedgreaves'
        $this.PurchasePrice      = 27000
        $this.SellPrice          = 13500
        $this.TargetStats        = @{
            [StatId]::Defense      = 75
            [StatId]::MagicDefense = 45
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 60
            [StatId]::MagicDefense = 36
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves plated with radiant sunstones, warm to the touch.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEDragonbonePlatelegs : BEGreaves {
    BEDragonbonePlatelegs() : base() {
        $this.Name               = 'Dragonbone Platelegs'
        $this.MapObjName         = 'dragonboneplatelegs'
        $this.PurchasePrice      = 30000
        $this.SellPrice          = 15000
        $this.TargetStats        = @{
            [StatId]::Defense = 105
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 84
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Platelegs crafted from the ancient bones of a powerful dragon.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BECelestialGuardianGreaves : BEGreaves {
    BECelestialGuardianGreaves() : base() {
        $this.Name               = 'Celestial Guardian Greaves'
        $this.MapObjName         = 'celestialguardiangreaves'
        $this.PurchasePrice      = 33000
        $this.SellPrice          = 16500
        $this.TargetStats        = @{
            [StatId]::Defense      = 90
            [StatId]::MagicDefense = 50
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 72
            [StatId]::MagicDefense = 40
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves worn by celestial guardians, shimmering with divine light.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEDemonicLordGreaves : BEGreaves {
    BEDemonicLordGreaves() : base() {
        $this.Name               = 'Demonic Lord Greaves'
        $this.MapObjName         = 'demoniclordgreaves'
        $this.PurchasePrice      = 36000
        $this.SellPrice          = 18000
        $this.TargetStats        = @{
            [StatId]::Defense = 115
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 92
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves once worn by a powerful demon lord, radiating malevolence.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEAbyssalWalkerGreaves : BEGreaves {
    BEAbyssalWalkerGreaves() : base() {
        $this.Name               = 'Abyssal Walker Greaves'
        $this.MapObjName         = 'abyssalwalkergreaves'
        $this.PurchasePrice      = 39000
        $this.SellPrice          = 19500
        $this.TargetStats        = @{
            [StatId]::Defense      = 95
            [StatId]::MagicDefense = 48
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 76
            [StatId]::MagicDefense = 38
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves that allow one to tread the paths of the abyss unharmed.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEPhoenixEmperorGreaves : BEGreaves {
    BEPhoenixEmperorGreaves() : base() {
        $this.Name               = 'Phoenix Emperor Greaves'
        $this.MapObjName         = 'phoenixemperorgreaves'
        $this.PurchasePrice      = 42000
        $this.SellPrice          = 21000
        $this.TargetStats        = @{
            [StatId]::Defense      = 80
            [StatId]::MagicDefense = 58
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 64
            [StatId]::MagicDefense = 46
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves of a legendary emperor who commanded phoenixes, imbued with eternal flame.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BETitanSlayerGreaves : BEGreaves {
    BETitanSlayerGreaves() : base() {
        $this.Name               = 'Titan Slayer Greaves'
        $this.MapObjName         = 'titanslayergreaves'
        $this.PurchasePrice      = 45000
        $this.SellPrice          = 22500
        $this.TargetStats        = @{
            [StatId]::Defense = 125
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 100
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves worn by heroes who have slain titans, incredibly resilient.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEStormLordGreaves : BEGreaves {
    BEStormLordGreaves() : base() {
        $this.Name               = 'Storm Lord Greaves'
        $this.MapObjName         = 'stormlordgreaves'
        $this.PurchasePrice      = 48000
        $this.SellPrice          = 24000
        $this.TargetStats        = @{
            [StatId]::Defense      = 100
            [StatId]::MagicDefense = 52
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 80
            [StatId]::MagicDefense = 41
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves of a lord who commands the fury of storms, crackling with power.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEHolyAvengerGreaves : BEGreaves {
    BEHolyAvengerGreaves() : base() {
        $this.Name               = 'Holy Avenger Greaves'
        $this.MapObjName         = 'holyavengergreaves'
        $this.PurchasePrice      = 50000
        $this.SellPrice          = 25000
        $this.TargetStats        = @{
            [StatId]::Defense      = 90
            [StatId]::MagicDefense = 60
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 72
            [StatId]::MagicDefense = 48
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves of a divine avenger, radiating pure holy energy.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEInfernalTyrantGreaves : BEGreaves {
    BEInfernalTyrantGreaves() : base() {
        $this.Name               = 'Infernal Tyrant Greaves'
        $this.MapObjName         = 'infernaltyrantgreaves'
        $this.PurchasePrice      = 52000
        $this.SellPrice          = 26000
        $this.TargetStats        = @{
            [StatId]::Defense = 130
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 104
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves worn by a tyrant of the infernal realms, exuding dread.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEWorldTreeRootGreaves : BEGreaves {
    BEWorldTreeRootGreaves() : base() {
        $this.Name               = 'World Tree Root Greaves'
        $this.MapObjName         = 'worldtreerootgreaves'
        $this.PurchasePrice      = 55000
        $this.SellPrice          = 27500
        $this.TargetStats        = @{
            [StatId]::Defense      = 110
            [StatId]::MagicDefense = 65
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 88
            [StatId]::MagicDefense = 52
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves crafted from the ancient roots of the World Tree itself.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEStarforgedAegisGreaves : BEGreaves {
    BEStarforgedAegisGreaves() : base() {
        $this.Name               = 'Starforged Aegis Greaves'
        $this.MapObjName         = 'starforgedaegisgreaves'
        $this.PurchasePrice      = 60000
        $this.SellPrice          = 30000
        $this.TargetStats        = @{
            [StatId]::Defense = 140
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 112
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves forged in the heart of a dying star, offering unparalleled defense.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEAspectOfTheCreatorGreaves : BEGreaves {
    BEAspectOfTheCreatorGreaves() : base() {
        $this.Name               = 'Aspect of the Creator Greaves'
        $this.MapObjName         = 'aspectofthecreatorgreaves'
        $this.PurchasePrice      = 65000
        $this.SellPrice          = 32500
        $this.TargetStats        = @{
            [StatId]::Defense      = 120
            [StatId]::MagicDefense = 70
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 96
            [StatId]::MagicDefense = 56
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves said to be a fragment of the Creator''s own power and resilience.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEGodslayerWarboots : BEGreaves {
    BEGodslayerWarboots() : base() {
        $this.Name               = 'Godslayer Warboots'
        $this.MapObjName         = 'godslayerwarboots'
        $this.PurchasePrice      = 70000
        $this.SellPrice          = 35000
        $this.TargetStats        = @{
            [StatId]::Defense = 150
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 120
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Warboots imbued with the power to fell deities, offering unmatched protection.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEArmguardsofEternalNight : BEGreaves {
    BEArmguardsofEternalNight() : base() {
        $this.Name               = 'Armguards of Eternal Night'
        $this.MapObjName         = 'armguardsofeternalnight'
        $this.PurchasePrice      = 75000
        $this.SellPrice          = 37500
        $this.TargetStats        = @{
            [StatId]::Defense      = 125
            [StatId]::MagicDefense = 75
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 100
            [StatId]::MagicDefense = 60
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Armguards woven from the fabric of endless night, granting mastery over shadows and defense.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEGreavesOfTheWorldSerpent : BEGreaves {
    BEGreavesOfTheWorldSerpent() : base() {
        $this.Name               = 'Greaves of the World Serpent'
        $this.MapObjName         = 'greavesoftheworldserpent'
        $this.PurchasePrice      = 80000
        $this.SellPrice          = 40000
        $this.TargetStats        = @{
            [StatId]::Defense = 160
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 128
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves crafted from the scales of Jormungandr, the World Serpent, impossibly tough.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEGreavesOfTimelessness : BEGreaves {
    BEGreavesOfTimelessness() : base() {
        $this.Name               = 'Greaves of Timelessness'
        $this.MapObjName         = 'greavesoftimelessness'
        $this.PurchasePrice      = 85000
        $this.SellPrice          = 42500
        $this.TargetStats        = @{
            [StatId]::Defense      = 130
            [StatId]::MagicDefense = 80
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 104
            [StatId]::MagicDefense = 64
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves that seem to exist outside of time, offering profound protection.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEGreavesOfThePrimordials : BEGreaves {
    BEGreavesOfThePrimordials() : base() {
        $this.Name               = 'Greaves of the Primordials'
        $this.MapObjName         = 'greavesoftheprimordials'
        $this.PurchasePrice      = 90000
        $this.SellPrice          = 45000
        $this.TargetStats        = @{
            [StatId]::Defense = 170
        }
        $this.RequiredStats      = @{
            [StatId]::Defense = 136
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves imbued with the raw power of the first beings of creation.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense"
    }
}

Class BEGreavesOfDivineAscension : BEGreaves {
    BEGreavesOfDivineAscension() : base() {
        $this.Name               = 'Greaves of Divine Ascension'
        $this.MapObjName         = 'greavesofdivineascension'
        $this.PurchasePrice      = 95000
        $this.SellPrice          = 47500
        $this.TargetStats        = @{
            [StatId]::Defense      = 140
            [StatId]::MagicDefense = 85
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 112
            [StatId]::MagicDefense = 68
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'Greaves that signify the wearer''s path to godhood, radiating immense power.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}

Class BEOmegaGreaves : BEGreaves {
    BEOmegaGreaves() : base() {
        $this.Name               = 'Omega Greaves'
        $this.MapObjName         = 'omegagreaves'
        $this.PurchasePrice      = 100000
        $this.SellPrice          = 50000
        $this.TargetStats        = @{
            [StatId]::Defense      = 150
            [StatId]::MagicDefense = 70 # Omega items should be powerful in all aspects
        }
        $this.RequiredStats      = @{
            [StatId]::Defense      = 120
            [StatId]::MagicDefense = 56
        }
        $this.CanAddToInventory  = $true
        $this.ExamineString      = 'The ultimate greaves, signifying the end of all challenges to the wearer''s defense.'
        $this.PlayerEffectString = "+$($this.TargetStats[[StatId]::Defense]) Defense, +$($this.TargetStats[[StatId]::MagicDefense]) Magic Defense"
    }
}
#endregion

#endregion




#region Fast Noise Lite

###############################################################################
#
# FAST NOISE LITE IMPLEMENTATION
#
###############################################################################
Class FastNoiseLite {
    Static [Int64]$PRIMEX         = 501125321
    Static [Int64]$PRIMEY         = 1136930381
    Static [Int64]$PRIMEZ         = 1720413743
    Static [Int64]$HASH_MAGIC     = 0x27D4EB2D
    Static [Int64]$HASHCALC_MAGIC = 2147483648
    Static [Int64]$SEEDADD_MAGIC  = 1293373
    Static [Int64]$APRIMEXMULT2   = [FastNoiseLite]::PRIMEX * 2
    Static [Int64]$APRIMEYMULT2   = [FastNoiseLite]::PRIMEY * 2
    Static [Int64]$APRIMEZMULT2   = [FastNoiseLite]::PRIMEZ * 2
    
    Static [Single]$SQRT3                     = 1.7320508075688772935274463415059
    Static [Single]$PLANARIMPROVEA_MAGIC      = 0.211324865405187
    Static [Single]$PLANARIMPROVEZSCALE_MAGIC = 0.577350269189626
    Static [Single]$SIMPLEXVALMODA_MAGIC      = 32.69428253173828125
    Static [Single]$A2DIV3                    = 2 / 3

    Static [Single[]]$GRADIENTS2D = @(
        0.130526192220052,  0.99144486137381,   0.38268343236509,   0.923879532511287,  0.608761429008721,  0.793353340291235,  0.793353340291235,  0.608761429008721,
        0.923879532511287,  0.38268343236509,   0.99144486137381,   0.130526192220051,  0.99144486137381,  -0.130526192220051,  0.923879532511287, -0.38268343236509,
        0.793353340291235, -0.60876142900872,   0.608761429008721, -0.793353340291235,  0.38268343236509,  -0.923879532511287,  0.130526192220052, -0.99144486137381,
        -0.130526192220052, -0.99144486137381,  -0.38268343236509,  -0.923879532511287, -0.608761429008721, -0.793353340291235, -0.793353340291235, -0.608761429008721,
        -0.923879532511287, -0.38268343236509,  -0.99144486137381,  -0.130526192220052, -0.99144486137381,   0.130526192220051, -0.923879532511287,  0.38268343236509,
        -0.793353340291235,  0.608761429008721, -0.608761429008721,  0.793353340291235, -0.38268343236509,   0.923879532511287, -0.130526192220052,  0.99144486137381,
        0.130526192220052,  0.99144486137381,   0.38268343236509,   0.923879532511287,  0.608761429008721,  0.793353340291235,  0.793353340291235,  0.608761429008721,
        0.923879532511287,  0.38268343236509,   0.99144486137381,   0.130526192220051,  0.99144486137381,  -0.130526192220051,  0.923879532511287, -0.38268343236509,
        0.793353340291235, -0.60876142900872,   0.608761429008721, -0.793353340291235,  0.38268343236509,  -0.923879532511287,  0.130526192220052, -0.99144486137381,
        -0.130526192220052, -0.99144486137381,  -0.38268343236509,  -0.923879532511287, -0.608761429008721, -0.793353340291235, -0.793353340291235, -0.608761429008721,
        -0.923879532511287, -0.38268343236509,  -0.99144486137381,  -0.130526192220052, -0.99144486137381,   0.130526192220051, -0.923879532511287,  0.38268343236509,
        -0.793353340291235,  0.608761429008721, -0.608761429008721,  0.793353340291235, -0.38268343236509,   0.923879532511287, -0.130526192220052,  0.99144486137381,
        0.130526192220052,  0.99144486137381,   0.38268343236509,   0.923879532511287,  0.608761429008721,  0.793353340291235,  0.793353340291235,  0.608761429008721,
        0.923879532511287,  0.38268343236509,   0.99144486137381,   0.130526192220051,  0.99144486137381,  -0.130526192220051,  0.923879532511287, -0.38268343236509,
        0.793353340291235, -0.60876142900872,   0.608761429008721, -0.793353340291235,  0.38268343236509,  -0.923879532511287,  0.130526192220052, -0.99144486137381,
        -0.130526192220052, -0.99144486137381,  -0.38268343236509,  -0.923879532511287, -0.608761429008721, -0.793353340291235, -0.793353340291235, -0.608761429008721,
        -0.923879532511287, -0.38268343236509,  -0.99144486137381,  -0.130526192220052, -0.99144486137381,   0.130526192220051, -0.923879532511287,  0.38268343236509,
        -0.793353340291235,  0.608761429008721, -0.608761429008721,  0.793353340291235, -0.38268343236509,   0.923879532511287, -0.130526192220052,  0.99144486137381,
        0.130526192220052,  0.99144486137381,   0.38268343236509,   0.923879532511287,  0.608761429008721,  0.793353340291235,  0.793353340291235,  0.608761429008721,
        0.923879532511287,  0.38268343236509,   0.99144486137381,   0.130526192220051,  0.99144486137381,  -0.130526192220051,  0.923879532511287, -0.38268343236509,
        0.793353340291235, -0.60876142900872,   0.608761429008721, -0.793353340291235,  0.38268343236509,  -0.923879532511287,  0.130526192220052, -0.99144486137381,
        -0.130526192220052, -0.99144486137381,  -0.38268343236509,  -0.923879532511287, -0.608761429008721, -0.793353340291235, -0.793353340291235, -0.608761429008721,
        -0.923879532511287, -0.38268343236509,  -0.99144486137381,  -0.130526192220052, -0.99144486137381,   0.130526192220051, -0.923879532511287,  0.38268343236509,
        -0.793353340291235,  0.608761429008721, -0.608761429008721,  0.793353340291235, -0.38268343236509,   0.923879532511287, -0.130526192220052,  0.99144486137381,
        0.130526192220052,  0.99144486137381,   0.38268343236509,   0.923879532511287,  0.608761429008721,  0.793353340291235,  0.793353340291235,  0.608761429008721,
        0.923879532511287,  0.38268343236509,   0.99144486137381,   0.130526192220051,  0.99144486137381,  -0.130526192220051,  0.923879532511287, -0.38268343236509,
        0.793353340291235, -0.60876142900872,   0.608761429008721, -0.793353340291235,  0.38268343236509,  -0.923879532511287,  0.130526192220052, -0.99144486137381,
        -0.130526192220052, -0.99144486137381,  -0.38268343236509,  -0.923879532511287, -0.608761429008721, -0.793353340291235, -0.793353340291235, -0.608761429008721,
        -0.923879532511287, -0.38268343236509,  -0.99144486137381,  -0.130526192220052, -0.99144486137381,   0.130526192220051, -0.923879532511287,  0.38268343236509,
        -0.793353340291235,  0.608761429008721, -0.608761429008721,  0.793353340291235, -0.38268343236509,   0.923879532511287, -0.130526192220052,  0.99144486137381,
        0.38268343236509,   0.923879532511287,  0.923879532511287,  0.38268343236509,   0.923879532511287, -0.38268343236509,   0.38268343236509,  -0.923879532511287,
        -0.38268343236509,  -0.923879532511287, -0.923879532511287, -0.38268343236509,  -0.923879532511287,  0.38268343236509,  -0.38268343236509,   0.923879532511287
    )

    Static [Single[]]$RANDVECS2D = @(
        -0.2700222198, -0.9628540911, 0.3863092627, -0.9223693152, 0.04444859006, -0.999011673, -0.5992523158, -0.8005602176, -0.7819280288, 0.6233687174, 0.9464672271, 0.3227999196, -0.6514146797, -0.7587218957, 0.9378472289, 0.347048376,
        -0.8497875957, -0.5271252623, -0.879042592, 0.4767432447, -0.892300288, -0.4514423508, -0.379844434, -0.9250503802, -0.9951650832, 0.0982163789, 0.7724397808, -0.6350880136, 0.7573283322, -0.6530343002, -0.9928004525, -0.119780055,
        -0.0532665713, 0.9985803285, 0.9754253726, -0.2203300762, -0.7665018163, 0.6422421394, 0.991636706, 0.1290606184, -0.994696838, 0.1028503788, -0.5379205513, -0.84299554, 0.5022815471, -0.8647041387, 0.4559821461, -0.8899889226,
        -0.8659131224, -0.5001944266, 0.0879458407, -0.9961252577, -0.5051684983, 0.8630207346, 0.7753185226, -0.6315704146, -0.6921944612, 0.7217110418, -0.5191659449, -0.8546734591, 0.8978622882, -0.4402764035, -0.1706774107, 0.9853269617,
        -0.9353430106, -0.3537420705, -0.9992404798, 0.03896746794, -0.2882064021, -0.9575683108, -0.9663811329, 0.2571137995, -0.8759714238, -0.4823630009, -0.8303123018, -0.5572983775, 0.05110133755, -0.9986934731, -0.8558373281, -0.5172450752,
        0.09887025282, 0.9951003332, 0.9189016087, 0.3944867976, -0.2439375892, -0.9697909324, -0.8121409387, -0.5834613061, -0.9910431363, 0.1335421355, 0.8492423985, -0.5280031709, -0.9717838994, -0.2358729591, 0.9949457207, 0.1004142068,
        0.6241065508, -0.7813392434, 0.662910307, 0.7486988212, -0.7197418176, 0.6942418282, -0.8143370775, -0.5803922158, 0.104521054, -0.9945226741, -0.1065926113, -0.9943027784, 0.445799684, -0.8951327509, 0.105547406, 0.9944142724,
        -0.992790267, 0.1198644477, -0.8334366408, 0.552615025, 0.9115561563, -0.4111755999, 0.8285544909, -0.5599084351, 0.7217097654, -0.6921957921, 0.4940492677, -0.8694339084, -0.3652321272, -0.9309164803, -0.9696606758, 0.2444548501,
        0.08925509731, -0.996008799, 0.5354071276, -0.8445941083, -0.1053576186, 0.9944343981, -0.9890284586, 0.1477251101, 0.004856104961, 0.9999882091, 0.9885598478, 0.1508291331, 0.9286129562, -0.3710498316, -0.5832393863, -0.8123003252,
        0.3015207509, 0.9534596146, -0.9575110528, 0.2883965738, 0.9715802154, -0.2367105511, 0.229981792, 0.9731949318, 0.955763816, -0.2941352207, 0.740956116, 0.6715534485, -0.9971513787, -0.07542630764, 0.6905710663, -0.7232645452,
        -0.290713703, -0.9568100872, 0.5912777791, -0.8064679708, -0.9454592212, -0.325740481, 0.6664455681, 0.74555369, 0.6236134912, 0.7817328275, 0.9126993851, -0.4086316587, -0.8191762011, 0.5735419353, -0.8812745759, -0.4726046147,
        0.9953313627, 0.09651672651, 0.9855650846, -0.1692969699, -0.8495980887, 0.5274306472, 0.6174853946, -0.7865823463, 0.8508156371, 0.52546432, 0.9985032451, -0.05469249926, 0.1971371563, -0.9803759185, 0.6607855748, -0.7505747292,
        -0.03097494063, 0.9995201614, -0.6731660801, 0.739491331, -0.7195018362, -0.6944905383, 0.9727511689, 0.2318515979, 0.9997059088, -0.0242506907, 0.4421787429, -0.8969269532, 0.9981350961, -0.061043673, -0.9173660799, -0.3980445648,
        -0.8150056635, -0.5794529907, -0.8789331304, 0.4769450202, 0.0158605829, 0.999874213, -0.8095464474, 0.5870558317, -0.9165898907, -0.3998286786, -0.8023542565, 0.5968480938, -0.5176737917, 0.8555780767, -0.8154407307, -0.5788405779,
        0.4022010347, -0.9155513791, -0.9052556868, -0.4248672045, 0.7317445619, 0.6815789728, -0.5647632201, -0.8252529947, -0.8403276335, -0.5420788397, -0.9314281527, 0.363925262, 0.5238198472, 0.8518290719, 0.7432803869, -0.6689800195,
        -0.985371561, -0.1704197369, 0.4601468731, 0.88784281, 0.825855404, 0.5638819483, 0.6182366099, 0.7859920446, 0.8331502863, -0.553046653, 0.1500307506, 0.9886813308, -0.662330369, -0.7492119075, -0.668598664, 0.743623444,
        0.7025606278, 0.7116238924, -0.5419389763, -0.8404178401, -0.3388616456, 0.9408362159, 0.8331530315, 0.5530425174, -0.2989720662, -0.9542618632, 0.2638522993, 0.9645630949, 0.124108739, -0.9922686234, -0.7282649308, -0.6852956957,
        0.6962500149, 0.7177993569, -0.9183535368, 0.3957610156, -0.6326102274, -0.7744703352, -0.9331891859, -0.359385508, -0.1153779357, -0.9933216659, 0.9514974788, -0.3076565421, -0.08987977445, -0.9959526224, 0.6678496916, 0.7442961705,
        0.7952400393, -0.6062947138, -0.6462007402, -0.7631674805, -0.2733598753, 0.9619118351, 0.9669590226, -0.254931851, -0.9792894595, 0.2024651934, -0.5369502995, -0.8436138784, -0.270036471, -0.9628500944, -0.6400277131, 0.7683518247,
        -0.7854537493, -0.6189203566, 0.06005905383, -0.9981948257, -0.02455770378, 0.9996984141, -0.65983623, 0.751409442, -0.6253894466, -0.7803127835, -0.6210408851, -0.7837781695, 0.8348888491, 0.5504185768, -0.1592275245, 0.9872419133,
        0.8367622488, 0.5475663786, -0.8675753916, -0.4973056806, -0.2022662628, -0.9793305667, 0.9399189937, 0.3413975472, 0.9877404807, -0.1561049093, -0.9034455656, 0.4287028224, 0.1269804218, -0.9919052235, -0.3819600854, 0.924178821,
        0.9754625894, 0.2201652486, -0.3204015856, -0.9472818081, -0.9874760884, 0.1577687387, 0.02535348474, -0.9996785487, 0.4835130794, -0.8753371362, -0.2850799925, -0.9585037287, -0.06805516006, -0.99768156, -0.7885244045, -0.6150034663,
        0.3185392127, -0.9479096845, 0.8880043089, 0.4598351306, 0.6476921488, -0.7619021462, 0.9820241299, 0.1887554194, 0.9357275128, -0.3527237187, -0.8894895414, 0.4569555293, 0.7922791302, 0.6101588153, 0.7483818261, 0.6632681526,
        -0.7288929755, -0.6846276581, 0.8729032783, -0.4878932944, 0.8288345784, 0.5594937369, 0.08074567077, 0.9967347374, 0.9799148216, -0.1994165048, -0.580730673, -0.8140957471, -0.4700049791, -0.8826637636, 0.2409492979, 0.9705377045,
        0.9437816757, -0.3305694308, -0.8927998638, -0.4504535528, -0.8069622304, 0.5906030467, 0.06258973166, 0.9980393407, -0.9312597469, 0.3643559849, 0.5777449785, 0.8162173362, -0.3360095855, -0.941858566, 0.697932075, -0.7161639607,
        -0.002008157227, -0.9999979837, -0.1827294312, -0.9831632392, -0.6523911722, 0.7578824173, -0.4302626911, -0.9027037258, -0.9985126289, -0.05452091251, -0.01028102172, -0.9999471489, -0.4946071129, 0.8691166802, -0.2999350194, 0.9539596344,
        0.8165471961, 0.5772786819, 0.2697460475, 0.962931498, -0.7306287391, -0.6827749597, -0.7590952064, -0.6509796216, -0.907053853, 0.4210146171, -0.5104861064, -0.8598860013, 0.8613350597, 0.5080373165, 0.5007881595, -0.8655698812,
        -0.654158152, 0.7563577938, -0.8382755311, -0.545246856, 0.6940070834, 0.7199681717, 0.06950936031, 0.9975812994, 0.1702942185, -0.9853932612, 0.2695973274, 0.9629731466, 0.5519612192, -0.8338697815, 0.225657487, -0.9742067022,
        0.4215262855, -0.9068161835, 0.4881873305, -0.8727388672, -0.3683854996, -0.9296731273, -0.9825390578, 0.1860564427, 0.81256471, 0.5828709909, 0.3196460933, -0.9475370046, 0.9570913859, 0.2897862643, -0.6876655497, -0.7260276109,
        -0.9988770922, -0.047376731, -0.1250179027, 0.992154486, -0.8280133617, 0.560708367, 0.9324863769, -0.3612051451, 0.6394653183, 0.7688199442, -0.01623847064, -0.9998681473, -0.9955014666, -0.09474613458, -0.81453315, 0.580117012,
        0.4037327978, -0.9148769469, 0.9944263371, 0.1054336766, -0.1624711654, 0.9867132919, -0.9949487814, -0.100383875, -0.6995302564, 0.7146029809, 0.5263414922, -0.85027327, -0.5395221479, 0.841971408, 0.6579370318, 0.7530729462,
        0.01426758847, -0.9998982128, -0.6734383991, 0.7392433447, 0.639412098, -0.7688642071, 0.9211571421, 0.3891908523, -0.146637214, -0.9891903394, -0.782318098, 0.6228791163, -0.5039610839, -0.8637263605, -0.7743120191, -0.6328039957
    )

    Static [Single[]]$GRADIENTS3D = @(
        0, 1, 1, 0,  0,-1, 1, 0,  0, 1,-1, 0,  0,-1,-1, 0,
        1, 0, 1, 0, -1, 0, 1, 0,  1, 0,-1, 0, -1, 0,-1, 0,
        1, 1, 0, 0, -1, 1, 0, 0,  1,-1, 0, 0, -1,-1, 0, 0,
        0, 1, 1, 0,  0,-1, 1, 0,  0, 1,-1, 0,  0,-1,-1, 0,
        1, 0, 1, 0, -1, 0, 1, 0,  1, 0,-1, 0, -1, 0,-1, 0,
        1, 1, 0, 0, -1, 1, 0, 0,  1,-1, 0, 0, -1,-1, 0, 0,
        0, 1, 1, 0,  0,-1, 1, 0,  0, 1,-1, 0,  0,-1,-1, 0,
        1, 0, 1, 0, -1, 0, 1, 0,  1, 0,-1, 0, -1, 0,-1, 0,
        1, 1, 0, 0, -1, 1, 0, 0,  1,-1, 0, 0, -1,-1, 0, 0,
        0, 1, 1, 0,  0,-1, 1, 0,  0, 1,-1, 0,  0,-1,-1, 0,
        1, 0, 1, 0, -1, 0, 1, 0,  1, 0,-1, 0, -1, 0,-1, 0,
        1, 1, 0, 0, -1, 1, 0, 0,  1,-1, 0, 0, -1,-1, 0, 0,
        0, 1, 1, 0,  0,-1, 1, 0,  0, 1,-1, 0,  0,-1,-1, 0,
        1, 0, 1, 0, -1, 0, 1, 0,  1, 0,-1, 0, -1, 0,-1, 0,
        1, 1, 0, 0, -1, 1, 0, 0,  1,-1, 0, 0, -1,-1, 0, 0,
        1, 1, 0, 0,  0,-1, 1, 0, -1, 1, 0, 0,  0,-1,-1, 0
    )

    Static [Single[]]$RANDVECS3D = @(
        -0.7292736885, -0.6618439697, 0.1735581948, 0, 0.790292081, -0.5480887466, -0.2739291014, 0, 0.7217578935, 0.6226212466, -0.3023380997, 0, 0.565683137, -0.8208298145, -0.0790000257, 0, 0.760049034, -0.5555979497, -0.3370999617, 0, 0.3713945616, 0.5011264475, 0.7816254623, 0, -0.1277062463, -0.4254438999, -0.8959289049, 0, -0.2881560924, -0.5815838982, 0.7607405838, 0,
        0.5849561111, -0.662820239, -0.4674352136, 0, 0.3307171178, 0.0391653737, 0.94291689, 0, 0.8712121778, -0.4113374369, -0.2679381538, 0, 0.580981015, 0.7021915846, 0.4115677815, 0, 0.503756873, 0.6330056931, -0.5878203852, 0, 0.4493712205, 0.601390195, 0.6606022552, 0, -0.6878403724, 0.09018890807, -0.7202371714, 0, -0.5958956522, -0.6469350577, 0.475797649, 0,
        -0.5127052122, 0.1946921978, -0.8361987284, 0, -0.9911507142, -0.05410276466, -0.1212153153, 0, -0.2149721042, 0.9720882117, -0.09397607749, 0, -0.7518650936, -0.5428057603, 0.3742469607, 0, 0.5237068895, 0.8516377189, -0.02107817834, 0, 0.6333504779, 0.1926167129, -0.7495104896, 0, -0.06788241606, 0.3998305789, 0.9140719259, 0, -0.5538628599, -0.4729896695, -0.6852128902, 0,
        -0.7261455366, -0.5911990757, 0.3509933228, 0, -0.9229274737, -0.1782808786, 0.3412049336, 0, -0.6968815002, 0.6511274338, 0.3006480328, 0, 0.9608044783, -0.2098363234, -0.1811724921, 0, 0.06817146062, -0.9743405129, 0.2145069156, 0, -0.3577285196, -0.6697087264, -0.6507845481, 0, -0.1868621131, 0.7648617052, -0.6164974636, 0, -0.6541697588, 0.3967914832, 0.6439087246, 0,
        0.6993340405, -0.6164538506, 0.3618239211, 0, -0.1546665739, 0.6291283928, 0.7617583057, 0, -0.6841612949, -0.2580482182, -0.6821542638, 0, 0.5383980957, 0.4258654885, 0.7271630328, 0, -0.5026987823, -0.7939832935, -0.3418836993, 0, 0.3202971715, 0.2834415347, 0.9039195862, 0, 0.8683227101, -0.0003762656404, -0.4959995258, 0, 0.791120031, -0.08511045745, 0.6057105799, 0,
        -0.04011016052, -0.4397248749, 0.8972364289, 0, 0.9145119872, 0.3579346169, -0.1885487608, 0, -0.9612039066, -0.2756484276, 0.01024666929, 0, 0.6510361721, -0.2877799159, -0.7023778346, 0, -0.2041786351, 0.7365237271, 0.644859585, 0, -0.7718263711, 0.3790626912, 0.5104855816, 0, -0.3060082741, -0.7692987727, 0.5608371729, 0, 0.454007341, -0.5024843065, 0.7357899537, 0,
        0.4816795475, 0.6021208291, -0.6367380315, 0, 0.6961980369, -0.3222197429, 0.641469197, 0, -0.6532160499, -0.6781148932, 0.3368515753, 0, 0.5089301236, -0.6154662304, -0.6018234363, 0, -0.1635919754, -0.9133604627, -0.372840892, 0, 0.52408019, -0.8437664109, 0.1157505864, 0, 0.5902587356, 0.4983817807, -0.6349883666, 0, 0.5863227872, 0.494764745, 0.6414307729, 0,
        0.6779335087, 0.2341345225, 0.6968408593, 0, 0.7177054546, -0.6858979348, 0.120178631, 0, -0.5328819713, -0.5205125012, 0.6671608058, 0, -0.8654874251, -0.0700727088, -0.4960053754, 0, -0.2861810166, 0.7952089234, 0.5345495242, 0, -0.04849529634, 0.9810836427, -0.1874115585, 0, -0.6358521667, 0.6058348682, 0.4781800233, 0, 0.6254794696, -0.2861619734, 0.7258696564, 0,
        -0.2585259868, 0.5061949264, -0.8227581726, 0, 0.02136306781, 0.5064016808, -0.8620330371, 0, 0.200111773, 0.8599263484, 0.4695550591, 0, 0.4743561372, 0.6014985084, -0.6427953014, 0, 0.6622993731, -0.5202474575, -0.5391679918, 0, 0.08084972818, -0.6532720452, 0.7527940996, 0, -0.6893687501, 0.0592860349, 0.7219805347, 0, -0.1121887082, -0.9673185067, 0.2273952515, 0,
        0.7344116094, 0.5979668656, -0.3210532909, 0, 0.5789393465, -0.2488849713, 0.7764570201, 0, 0.6988182827, 0.3557169806, -0.6205791146, 0, -0.8636845529, -0.2748771249, -0.4224826141, 0, -0.4247027957, -0.4640880967, 0.777335046, 0, 0.5257722489, -0.8427017621, 0.1158329937, 0, 0.9343830603, 0.316302472, -0.1639543925, 0, -0.1016836419, -0.8057303073, -0.5834887393, 0,
        -0.6529238969, 0.50602126, -0.5635892736, 0, -0.2465286165, -0.9668205684, -0.06694497494, 0, -0.9776897119, -0.2099250524, -0.007368825344, 0, 0.7736893337, 0.5734244712, 0.2694238123, 0, -0.6095087895, 0.4995678998, 0.6155736747, 0, 0.5794535482, 0.7434546771, 0.3339292269, 0, -0.8226211154, 0.08142581855, 0.5627293636, 0, -0.510385483, 0.4703667658, 0.7199039967, 0,
        -0.5764971849, -0.07231656274, -0.8138926898, 0, 0.7250628871, 0.3949971505, -0.5641463116, 0, -0.1525424005, 0.4860840828, -0.8604958341, 0, -0.5550976208, -0.4957820792, 0.667882296, 0, -0.1883614327, 0.9145869398, 0.357841725, 0, 0.7625556724, -0.5414408243, -0.3540489801, 0, -0.5870231946, -0.3226498013, -0.7424963803, 0, 0.3051124198, 0.2262544068, -0.9250488391, 0,
        0.6379576059, 0.577242424, -0.5097070502, 0, -0.5966775796, 0.1454852398, -0.7891830656, 0, -0.658330573, 0.6555487542, -0.3699414651, 0, 0.7434892426, 0.2351084581, 0.6260573129, 0, 0.5562114096, 0.8264360377, -0.0873632843, 0, -0.3028940016, -0.8251527185, 0.4768419182, 0, 0.1129343818, -0.985888439, -0.1235710781, 0, 0.5937652891, -0.5896813806, 0.5474656618, 0,
        0.6757964092, -0.5835758614, -0.4502648413, 0, 0.7242302609, -0.1152719764, 0.6798550586, 0, -0.9511914166, 0.0753623979, -0.2992580792, 0, 0.2539470961, -0.1886339355, 0.9486454084, 0, 0.571433621, -0.1679450851, -0.8032795685, 0, -0.06778234979, 0.3978269256, 0.9149531629, 0, 0.6074972649, 0.733060024, -0.3058922593, 0, -0.5435478392, 0.1675822484, 0.8224791405, 0,
        -0.5876678086, -0.3380045064, -0.7351186982, 0, -0.7967562402, 0.04097822706, -0.6029098428, 0, -0.1996350917, 0.8706294745, 0.4496111079, 0, -0.02787660336, -0.9106232682, -0.4122962022, 0, -0.7797625996, -0.6257634692, 0.01975775581, 0, -0.5211232846, 0.7401644346, -0.4249554471, 0, 0.8575424857, 0.4053272873, -0.3167501783, 0, 0.1045223322, 0.8390195772, -0.5339674439, 0,
        0.3501822831, 0.9242524096, -0.1520850155, 0, 0.1987849858, 0.07647613266, 0.9770547224, 0, 0.7845996363, 0.6066256811, -0.1280964233, 0, 0.09006737436, -0.9750989929, -0.2026569073, 0, -0.8274343547, -0.542299559, 0.1458203587, 0, -0.3485797732, -0.415802277, 0.840000362, 0, -0.2471778936, -0.7304819962, -0.6366310879, 0, -0.3700154943, 0.8577948156, 0.3567584454, 0,
        0.5913394901, -0.548311967, -0.5913303597, 0, 0.1204873514, -0.7626472379, -0.6354935001, 0, 0.616959265, 0.03079647928, 0.7863922953, 0, 0.1258156836, -0.6640829889, -0.7369967419, 0, -0.6477565124, -0.1740147258, -0.7417077429, 0, 0.6217889313, -0.7804430448, -0.06547655076, 0, 0.6589943422, -0.6096987708, 0.4404473475, 0, -0.2689837504, -0.6732403169, -0.6887635427, 0,
        -0.3849775103, 0.5676542638, 0.7277093879, 0, 0.5754444408, 0.8110471154, -0.1051963504, 0, 0.9141593684, 0.3832947817, 0.131900567, 0, -0.107925319, 0.9245493968, 0.3654593525, 0, 0.377977089, 0.3043148782, 0.8743716458, 0, -0.2142885215, -0.8259286236, 0.5214617324, 0, 0.5802544474, 0.4148098596, -0.7008834116, 0, -0.1982660881, 0.8567161266, -0.4761596756, 0,
        -0.03381553704, 0.3773180787, -0.9254661404, 0, -0.6867922841, -0.6656597827, 0.2919133642, 0, 0.7731742607, -0.2875793547, -0.5652430251, 0, -0.09655941928, 0.9193708367, -0.3813575004, 0, 0.2715702457, -0.9577909544, -0.09426605581, 0, 0.2451015704, -0.6917998565, -0.6792188003, 0, 0.977700782, -0.1753855374, 0.1155036542, 0, -0.5224739938, 0.8521606816, 0.02903615945, 0,
        -0.7734880599, -0.5261292347, 0.3534179531, 0, -0.7134492443, -0.269547243, 0.6467878011, 0, 0.1644037271, 0.5105846203, -0.8439637196, 0, 0.6494635788, 0.05585611296, 0.7583384168, 0, -0.4711970882, 0.5017280509, -0.7254255765, 0, -0.6335764307, -0.2381686273, -0.7361091029, 0, -0.9021533097, -0.270947803, -0.3357181763, 0, -0.3793711033, 0.872258117, 0.3086152025, 0,
        -0.6855598966, -0.3250143309, 0.6514394162, 0, 0.2900942212, -0.7799057743, -0.5546100667, 0, -0.2098319339, 0.85037073, 0.4825351604, 0, -0.4592603758, 0.6598504336, -0.5947077538, 0, 0.8715945488, 0.09616365406, -0.4807031248, 0, -0.6776666319, 0.7118504878, -0.1844907016, 0, 0.7044377633, 0.312427597, 0.637304036, 0, -0.7052318886, -0.2401093292, -0.6670798253, 0,
        0.081921007, -0.7207336136, -0.6883545647, 0, -0.6993680906, -0.5875763221, -0.4069869034, 0, -0.1281454481, 0.6419895885, 0.7559286424, 0, -0.6337388239, -0.6785471501, -0.3714146849, 0, 0.5565051903, -0.2168887573, -0.8020356851, 0, -0.5791554484, 0.7244372011, -0.3738578718, 0, 0.1175779076, -0.7096451073, 0.6946792478, 0, -0.6134619607, 0.1323631078, 0.7785527795, 0,
        0.6984635305, -0.02980516237, -0.715024719, 0, 0.8318082963, -0.3930171956, 0.3919597455, 0, 0.1469576422, 0.05541651717, -0.9875892167, 0, 0.708868575, -0.2690503865, 0.6520101478, 0, 0.2726053183, 0.67369766, -0.68688995, 0, -0.6591295371, 0.3035458599, -0.6880466294, 0, 0.4815131379, -0.7528270071, 0.4487723203, 0, 0.9430009463, 0.1675647412, -0.2875261255, 0,
        0.434802957, 0.7695304522, -0.4677277752, 0, 0.3931996188, 0.594473625, 0.7014236729, 0, 0.7254336655, -0.603925654, 0.3301814672, 0, 0.7590235227, -0.6506083235, 0.02433313207, 0, -0.8552768592, -0.3430042733, 0.3883935666, 0, -0.6139746835, 0.6981725247, 0.3682257648, 0, -0.7465905486, -0.5752009504, 0.3342849376, 0, 0.5730065677, 0.810555537, -0.1210916791, 0,
        -0.9225877367, -0.3475211012, -0.167514036, 0, -0.7105816789, -0.4719692027, -0.5218416899, 0, -0.08564609717, 0.3583001386, 0.929669703, 0, -0.8279697606, -0.2043157126, 0.5222271202, 0, 0.427944023, 0.278165994, 0.8599346446, 0, 0.5399079671, -0.7857120652, -0.3019204161, 0, 0.5678404253, -0.5495413974, -0.6128307303, 0, -0.9896071041, 0.1365639107, -0.04503418428, 0,
        -0.6154342638, -0.6440875597, 0.4543037336, 0, 0.1074204368, -0.7946340692, 0.5975094525, 0, -0.3595449969, -0.8885529948, 0.28495784, 0, -0.2180405296, 0.1529888965, 0.9638738118, 0, -0.7277432317, -0.6164050508, -0.3007234646, 0, 0.7249729114, -0.00669719484, 0.6887448187, 0, -0.5553659455, -0.5336586252, 0.6377908264, 0, 0.5137558015, 0.7976208196, -0.3160000073, 0,
        -0.3794024848, 0.9245608561, -0.03522751494, 0, 0.8229248658, 0.2745365933, -0.4974176556, 0, -0.5404114394, 0.6091141441, 0.5804613989, 0, 0.8036581901, -0.2703029469, 0.5301601931, 0, 0.6044318879, 0.6832968393, 0.4095943388, 0, 0.06389988817, 0.9658208605, -0.2512108074, 0, 0.1087113286, 0.7402471173, -0.6634877936, 0, -0.713427712, -0.6926784018, 0.1059128479, 0,
        0.6458897819, -0.5724548511, -0.5050958653, 0, -0.6553931414, 0.7381471625, 0.159995615, 0, 0.3910961323, 0.9188871375, -0.05186755998, 0, -0.4879022471, -0.5904376907, 0.6429111375, 0, 0.6014790094, 0.7707441366, -0.2101820095, 0, -0.5677173047, 0.7511360995, 0.3368851762, 0, 0.7858573506, 0.226674665, 0.5753666838, 0, -0.4520345543, -0.604222686, -0.6561857263, 0,
        0.002272116345, 0.4132844051, -0.9105991643, 0, -0.5815751419, -0.5162925989, 0.6286591339, 0, -0.03703704785, 0.8273785755, 0.5604221175, 0, -0.5119692504, 0.7953543429, -0.3244980058, 0, -0.2682417366, -0.9572290247, -0.1084387619, 0, -0.2322482736, -0.9679131102, -0.09594243324, 0, 0.3554328906, -0.8881505545, 0.2913006227, 0, 0.7346520519, -0.4371373164, 0.5188422971, 0,
        0.9985120116, 0.04659011161, -0.02833944577, 0, -0.3727687496, -0.9082481361, 0.1900757285, 0, 0.91737377, -0.3483642108, 0.1925298489, 0, 0.2714911074, 0.4147529736, -0.8684886582, 0, 0.5131763485, -0.7116334161, 0.4798207128, 0, -0.8737353606, 0.18886992, -0.4482350644, 0, 0.8460043821, -0.3725217914, 0.3814499973, 0, 0.8978727456, -0.1780209141, -0.4026575304, 0,
        0.2178065647, -0.9698322841, -0.1094789531, 0, -0.1518031304, -0.7788918132, -0.6085091231, 0, -0.2600384876, -0.4755398075, -0.8403819825, 0, 0.572313509, -0.7474340931, -0.3373418503, 0, -0.7174141009, 0.1699017182, -0.6756111411, 0, -0.684180784, 0.02145707593, -0.7289967412, 0, -0.2007447902, 0.06555605789, -0.9774476623, 0, -0.1148803697, -0.8044887315, 0.5827524187, 0,
        -0.7870349638, 0.03447489231, 0.6159443543, 0, -0.2015596421, 0.6859872284, 0.6991389226, 0, -0.08581082512, -0.10920836, -0.9903080513, 0, 0.5532693395, 0.7325250401, -0.396610771, 0, -0.1842489331, -0.9777375055, -0.1004076743, 0, 0.0775473789, -0.9111505856, 0.4047110257, 0, 0.1399838409, 0.7601631212, -0.6344734459, 0, 0.4484419361, -0.845289248, 0.2904925424, 0
    )

    [Int64]$Seed                                           = 1337
    [Int64]$Octaves                                        = 3
    [Single]$Frequency                                     = 0.01
    [Single]$Lacunarity                                    = 2
    [Single]$Gain                                          = 0.5
    [Single]$WeightedStrength                              = 0
    [Single]$PingPongStrength                              = 2
    [Single]$FractalBounding                               = 1 / 1.75
    [Single]$CellularJitterModifier                        = 1
    [Single]$DomainWarpAmp                                 = 1
    [FnlNoiseType]$NoiseType                               = [FnlNoiseType]::OpenSimplex2
    [FnlRotationType3D]$RotationType3D                     = [FnlRotationType3D]::None
    [FnlTransformType3D]$TransformType3D                   = [FnlTransformType3D]::DefaultOpenSimplex2
    [FnlTransformType3D]$WarpTransformType3D               = [FnlTransformType3D]::DefaultOpenSimplex2
    [FnlFractalType]$FractalType                           = [FnlFractalType]::None
    [FnlCellularDistanceFunction]$CellularDistanceFunction = [FnlCellularDistanceFunction]::EuclideanSq
    [FnlCellularReturnType]$CellularReturnType             = [FnlCellularReturnType]::Distance
    [FnlDomainWarpType]$DomainWarpType                     = [FnlDomainWarpType]::OpenSimplex2

    FastNoiseLite() {}

    ###########################################################################
    #
    # NOTE THAT THE FOLLOWING METHODS WERE INLINED IN THE C# SOURCE.
    # POWERSHELL DOESN'T SUPPORT INLINING, SO THERE *MAY* BE SOME PERFORMANCE
    # DECAY HERE.
    #
    ###########################################################################
    Static [Single]FastMin(
        [Single]$A,
        [Single]$B
    ) {
        Return $A -LT $B ? $A : $B
    }

    Static [Single]FastMax(
        [Single]$A,
        [Single]$B
    ) {
        Return $A -GT $B ? $A : $B
    }

    Static [Single]FastAbs(
        [Single]$F
    ) {
        Return $F -LT 0 ? $F * -1 : $F
    }

    Static [Single]FastSqrt(
        [Single]$F
    ) {
        Return ([Single]([System.Math]::Sqrt($F))) # SQRT RETURNS DOUBLE, SO THIS CAST MAY MAKE SENSE, BUT WE MAY LOSE RESOLUTION
    }

    Static [Int64]FastFloor(
        [Single]$F
    ) {
        Return $F -GE 0 ? ([Int64]$F) : ([Int64]$F) - 1
    }

    Static [Int64]FastRound(
        [Single]$F
    ) {
        Return $F -GE 0 ? ([Int64]($F + 0.5)) : ([Int64]($F - 0.5))
    }

    Static [Single]Lerp(
        [Single]$A,
        [Single]$B,
        [Single]$T
    ) {
        Return $A + $T * ($B - $A)
    }

    Static [Single]InterpHermite(
        [Single]$T
    ) {
        Return $T * $T * (3 - 2 * $T)
    }

    Static [Single]InterpQuintic(
        [Single]$T
    ) {
        Return $T * $T * $T * ($T * ($T * 6 - 15) + 10)
    }

    Static [Single]CubicLerp(
        [Single]$A,
        [Single]$B,
        [Single]$C,
        [Single]$D,
        [Single]$T
    ) {
        [Single]$P = ($D - $C) - ($A - $B)

        Return $T * $T * $T * $P + $T * $T * (($A - $B) - $P) + $T * ($C - $A) + $B
    }

    Static [Int64]Hash(
        [Int64]$ASeed,
        [Int64]$XPrimed,
        [Int64]$YPrimed
    ) {
        [Int64]$Hash  = $ASeed -BXOR $XPrimed -BXOR $YPrimed
        $Hash        *= [FastNoiseLite]::HASH_MAGIC

        Return $Hash
    }

    Static [Int64]Hash(
        [Int64]$ASeed,
        [Int64]$XPrimed,
        [Int64]$YPrimed,
        [Int64]$ZPrimed
    ) {
        [Int64]$Hash  = $ASeed -BXOR $XPrimed -BXOR $YPrimed -BXOR $ZPrimed
        $Hash        *= [FastNoiseLite]::HASH_MAGIC

        Return $Hash
    }

    Static [Single]ValCoord(
        [Int64]$ASeed,
        [Int64]$XPrimed,
        [Int64]$YPrimed
    ) {
        [Int64]$Hash  = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed)
        $Hash        *= $Hash
        $Hash         = $Hash -BXOR ($Hash -SHL 19) # ORIGINAL STATEMENT WAS hash ^= hash << 19;

        Return $Hash * (1 / [FastNoiseLite]::HASHCALC_MAGIC)
    }

    Static [Single]ValCoord(
        [Int64]$ASeed,
        [Int64]$XPrimed,
        [Int64]$YPrimed,
        [Int64]$ZPrimed
    ) {
        [Int64]$Hash  = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed, $ZPrimed)
        $Hash        *= $Hash
        $Hash         = $Hash -BXOR ($Hash -SHL 19) # ORIGINAL STATEMENT WAS hash ^= hash << 19;

        Return $Hash * (1 / [FastNoiseLite]::HASHCALC_MAGIC)
    }

    Static [Single]GradCoord(
        [Int64]$ASeed,
        [Int64]$XPrimed,
        [Int64]$YPrimed,
        [Single]$Xd,
        [Single]$Yd
    ) {
        [Int64]$Hash = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed)
        $Hash        = $Hash -BXOR ($Hash -SHR 15) # ORIGINAL STATEMENT WAS hash ^= hash >> 15;
        $Hash        = $Hash -BAND (127 -SHL 1) # ORIGINAL STATEMENT WAS  hash &= 127 << 1;

        [Single]$Xg = [FastNoiseLite]::GRADIENTS2D[$Hash]
        [Single]$Yg = [FastNoiseLite]::GRADIENTS2D[($Hash -BOR 1)]

        Return $Xd * $Xg + $Yd * $Yg
    }

    Static [Single]GradCoord(
        [Int64]$ASeed,
        [Int64]$XPrimed,
        [Int64]$YPrimed,
        [Int64]$ZPrimed,
        [Single]$Xd,
        [Single]$Yd,
        [Single]$Zd
    ) {
        [Int64]$Hash = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed, $ZPrimed)
        $Hash        = $Hash -BXOR ($Hash -SHR 15) # ORIGINAL STATEMENT WAS hash ^= hash >> 15;
        $Hash        = $Hash -BAND (63 -SHL 2) # ORIGINAL STATEMENT WAS  hash &= 63 << 2;

        [Single]$Xg = [FastNoiseLite]::GRADIENTS3D[$Hash]
        [Single]$Yg = [FastNoiseLite]::GRADIENTS3D[($Hash -BOR 1)]
        [Single]$Zg = [FastNoiseLite]::GRADIENTS3D[($Hash -BOR 2)]

        Return $Xd * $Xg + $Yd * $Yg + $Zd * $Zg
    }

    ###########################################################################
    #
    # THE ORIGINAL SOURCE FOR THIS METHOD IS AS FOLLOWS:
    #
    #     private static void GradCoordOut(int seed, int xPrimed, int yPrimed, out Single xo, out Single yo)
    #     {
    #     int hash = Hash(seed, xPrimed, yPrimed) & (255 << 1);
    #
    #     xo = RandVecs2D[hash];
    #     yo = RandVecs2D[hash | 1];
    #     }
    #
    # USING REF ARGS IN LIEU OF OUT SHOULD BE SATISFACTORY HERE
    #
    ###########################################################################
    Static [Void]GradCoordOut(
        [Int64]$ASeed,
        [Int64]$XPrimed,
        [Int64]$YPrimed,
        [Ref]$Xo,
        [Ref]$Yo
    ) {
        [Int64]$Hash = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed) -BAND (255 -SHL 1)

        $Xo.Value = [FastNoiseLite]::RANDVECS2D[$Hash]
        $Yo.Value = [FastNoiseLite]::RANDVECS2D[($Hash -BOR 1)]
    }

    Static [Void]GradCoordOut(
        [Int64]$ASeed,
        [Int64]$XPrimed,
        [Int64]$YPrimed,
        [Int64]$ZPrimed,
        [Ref]$Xo,
        [Ref]$Yo,
        [Ref]$Zo
    ) {
        [Int64]$Hash = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed) -BAND (255 -SHL 2)

        $Xo.Value = [FastNoiseLite]::RANDVECS2D[$Hash]
        $Yo.Value = [FastNoiseLite]::RANDVECS2D[($Hash -BOR 1)]
        $Zo.Value = [FastNoiseLite]::RANDVECS2D[($Hash -BOR 2)]
    }

    Static [Void]GradCoordDual(
        [Int64]$ASeed,
        [Int64]$XPrimed,
        [Int64]$YPrimed,
        [Single]$Xd,
        [Single]$Yd,
        [Ref]$Xo,
        [Ref]$Yo
    ) {
        [Int64]$Hash   = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed)
        [Int64]$Index1 = $Hash -BAND (127 -SHL 1)
        [Int64]$Index2 = ($Hash -SHR 7) -BAND (255 -SHL 1)
        [Single]$Xg    = [FastNoiseLite]::GRADIENTS2D[$Index1]
        [Single]$Yg    = [FastNoiseLite]::GRADIENTS2D[($Index1 -BOR 1)]
        [Single]$Xgo   = [FastNoiseLite]::RANDVECS2D[$Index2]
        [Single]$Ygo   = [FastNoiseLite]::RANDVECS2D[($Index2 -BOR 1)]
        [Single]$Value = $Xd * $Xg + $Yd * $Yg

        $Xo.Value = $Value * $Xgo
        $Yo.Value = $Value * $Ygo
    }

    Static [Void]GradCoordDual(
        [Int64]$ASeed,
        [Int64]$XPrimed,
        [Int64]$YPrimed,
        [Int64]$ZPrimed,
        [Single]$Xd,
        [Single]$Yd,
        [Single]$Zd,
        [Ref]$Xo,
        [Ref]$Yo,
        [Ref]$Zo
    ) {
        [Int64]$Hash   = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed, $ZPrimed)
        [Int64]$Index1 = $Hash -BAND (63 -SHL 2)
        [Int64]$Index2 = ($Hash -SHR 6) -BAND (255 -SHL 2)
        [Single]$Xg    = [FastNoiseLite]::GRADIENTS3D[$Index1]
        [Single]$Yg    = [FastNoiseLite]::GRADIENTS3D[($Index1 -BOR 1)]
        [Single]$Zg    = [FastNoiseLite]::GRADIENTS2D[($Index1 -BOR 2)]
        [Single]$Xgo   = [FastNoiseLite]::RANDVECS3D[$Index2]
        [Single]$Ygo   = [FastNoiseLite]::RANDVECS3D[($Index2 -BOR 1)]
        [Single]$Zgo   = [FastNoiseLite]::RANDVECS3D[($Index2 -BOR 2)]
        [Single]$Value = $Xd * $Xg + $Yd * $Yg + $Zd * $Zg

        $Xo.Value = $Value * $Xgo
        $Yo.Value = $Value * $Ygo
        $Zo.Value = $Value * $Zgo
    }

    [Void]SetNoiseType(
        [FnlNoiseType]$NoiseType
    ) {
        $this.NoiseType = $NoiseType
        $this.UpdateTransformType3D()
    }

    [Void]SetRotationType3D(
        [FnlRotationType3D]$RotationType3D
    ) {
        $this.RotationType3D = $RotationType3D
        $this.UpdateTransformType3D()
        $this.UpdateWarpTransformType3D()
    }

    [Void]SetFractalOctaves(
        [Int64]$Octaves
    ) {
        $this.Octaves = $Octaves
        $this.CalculateFractalBounding()
    }

    [Void]SetFractalGain(
        [Single]$Gain
    ) {
        $this.Gain = $Gain
        $this.CalculateFractalBounding()
    }

    [Void]SetDomainWarpType(
        [FnlDomainWarpType]$DomainWarpType
    ) {
        $this.DomainWarpType = $DomainWarpType
        $this.UpdateWarpTransformType3D()
    }

    [Single]GetNoise(
        [Single]$X,
        [Single]$Y
    ) {
        $this.TransformNoiseCoordinate(([Ref]$X), ([Ref]$Y))

        Switch($this.FractalType) {
            ([FnlFractalType]::FBm) {
                Return $this.GenFractalFBm($X, $Y)
            }

            ([FnlFractalType]::Ridged) {
                Return $this.GenFractalRidged($X, $Y)
            }

            ([FnlFractalType]::PingPong) {
                Return $this.GenFractalPingPong($X, $Y)
            }

            Default {
                Return $this.GenNoiseSingle($this.Seed, $X, $Y)
            }
        }

        # THIS CODE PATH ISN'T CONSIDERED IN THE ORIGINAL SOURCE, SO I'LL JUST INCLUDE THE DEFAULT CASE HERE
        # THIS IS MORE SO THE LINTER WILL SHUT UP, BUT JUSTIN CASE
        Return $this.GenNoiseSingle($this.Seed, $X, $Y)
    }

    [Single]GetNoise(
        [Single]$X,
        [Single]$Y,
        [Single]$Z
    ) {
        $this.TransformNoiseCoordinate(([Ref]$X), ([Ref]$Y), ([Ref]$Z))

        Switch($this.FractalType) {
            ([FnlFractalType]::FBm) {
                Return $this.GenFractalFBm($X, $Y, $Z)
            }

            ([FnlFractalType]::Ridged) {
                Return $this.GenFractalRidged($X, $Y, $Z)
            }

            ([FnlFractalType]::PingPong) {
                Return $this.GenFractalPingPong($X, $Y, $Z)
            }

            Default {
                Return $this.GenNoiseSingle($this.Seed, $X, $Y, $Z)
            }
        }

        # THIS CODE PATH ISN'T CONSIDERED IN THE ORIGINAL SOURCE, SO I'LL JUST INCLUDE THE DEFAULT CASE HERE
        # THIS IS MORE SO THE LINTER WILL SHUT UP, BUT JUSTIN CASE
        Return $this.GenNoiseSingle($this.Seed, $X, $Y, $Z)
    }

    [Void]DomainWarp(
        [Ref]$X,
        [Ref]$Y
    ) {
        Switch($this.FractalType) {
            ([FnlFractalType]::DomainWarpProgressive) {
                $this.DomainWarpFractalProgressive($X, $Y)

                Break
            }

            ([FnlFractalType]::DomainWarpIndependent) {
                $this.DomainWarpFractalIndependent($X, $Y)

                Break
            }

            Default {
                $this.DomainWarpSingle($X, $Y)

                Break
            }
        }

        $this.DomainWarpSingle($X, $Y)
    }

    [Void]DomainWarp(
        [Ref]$X,
        [Ref]$Y,
        [Ref]$Z
    ) {
        Switch($this.FractalType) {
            ([FnlFractalType]::DomainWarpProgressive) {
                $this.DomainWarpFractalProgressive($X, $Y, $Z)

                Break
            }

            ([FnlFractalType]::DomainWarpIndependent) {
                $this.DomainWarpFractalIndependent($X, $Y, $Z)

                Break
            }

            Default {
                $this.DomainWarpSingle($X, $Y, $Z)

                Break
            }
        }

        $this.DomainWarpSingle($X, $Y, $Z)
    }

    [Single]PingPong(
        [Single]$T
    ) {
        $T = $T - ([Int64]($T * 0.5)) * 2

        Return $T -LT 1 ? $T : 2 - $T
    }

    [Void]CalculateFractalBounding() {
        [Single]$LGain       = [FastNoiseLite]::FastAbs($this.Gain)
        [Single]$LAmp        = $LGain
        [Single]$LAmpFractal = 1

        For([Int64]$I = 1; $I -LT $this.Octaves; $I++) {
            $LAmpFractal += $LAmp
            $LAmp        *= $LGain
        }

        $this.FractalBounding = 1 / $LAmpFractal
    }

    [Single]GenNoiseSingle(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y
    ) {
        Switch($this.NoiseType) {
            ([FnlNoiseType]::OpenSimplex2) {
                Return $this.SingleSimplex($ASeed, $X, $Y)
            }

            ([FnlNoiseType]::OpenSimplex2S) {
                Return $this.SingleOpenSimplex2S($ASeed, $X, $Y)
            }

            ([FnlNoiseType]::Cellular) {
                Return $this.SingleCellular($ASeed, $X, $Y)
            }

            ([FnlNoiseType]::Perlin) {
                Return $this.SinglePerlin($ASeed, $X, $Y)
            }

            ([FnlNoiseType]::ValueCubic) {
                Return $this.SingleValueCubic($ASeed, $X, $Y)
            }

            ([FnlNoiseType]::Value) {
                Return $this.SingleValue($ASeed, $X, $Y)
            }

            Default {
                Return 0
            }
        }

        Return 0
    }

    [Single]GenNoiseSingle(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y,
        [Single]$Z
    ) {
        Switch($this.NoiseType) {
            ([FnlNoiseType]::OpenSimplex2) {
                Return $this.SingleSimplex($ASeed, $X, $Y, $Z)
            }

            ([FnlNoiseType]::OpenSimplex2S) {
                Return $this.SingleOpenSimplex2S($ASeed, $X, $Y, $Z)
            }

            ([FnlNoiseType]::Cellular) {
                Return $this.SingleCellular($ASeed, $X, $Y, $Z)
            }

            ([FnlNoiseType]::Perlin) {
                Return $this.SinglePerlin($ASeed, $X, $Y, $Z)
            }

            ([FnlNoiseType]::ValueCubic) {
                Return $this.SingleValueCubic($ASeed, $X, $Y, $Z)
            }

            ([FnlNoiseType]::Value) {
                Return $this.SingleValue($ASeed, $X, $Y, $Z)
            }

            Default {
                Return 0
            }
        }

        Return 0
    }

    [Void]TransformNoiseCoordinate(
        [Ref]$X,
        [Ref]$Y
    ) {
        $X.Value *= $this.Frequency
        $Y.Value *= $this.Frequency

        Switch($this.NoiseType) {
            ($_ -EQ [FnlNoiseType]::OpenSimplex2 -OR $_ -EQ [FnlNoiseType]::OpenSimplex2S) {
                [Single]$F2 = 0.5 * ([FastNoiseLite]::SQRT3 - 1)
                [Single]$T  = ($X.Value + $Y.Value) * $F2

                $X.Value += $T
                $Y.Value += $T

                Break
            }

            Default {
                Break
            }
        }

        Return
    }

    [Void]TransformNoiseCoordinate(
        [Ref]$X,
        [Ref]$Y,
        [Ref]$Z
    ) {
        $X.Value *= $this.Frequency
        $Y.Value *= $this.Frequency
        $Z.Value *= $this.Frequency

        Switch($this.TransformType3D) {
            ([FnlTransformType3D]::ImproveXYPlanes) {
                [Single]$Xy = $X.Value + $Y.Value
                [Single]$S2 = $Xy * -[FastNoiseLite]::PLANARIMPROVEA_MAGIC

                $Z.Value *= [FastNoiseLite]::PLANARIMPROVEZSCALE_MAGIC
                $X.Value += $S2 - $Z.Value
                $Y.Value += $S2 - $Z.Value
                $Z.Value += $Xy * [FastNoiseLite]::PLANARIMPROVEZSCALE_MAGIC

                Break
            }

            ([FnlTransformType3D]::ImproveXZPlanes) {
                [Single]$Xz = $X.Value + $Z.Value
                [Single]$S2 = $Xz * -[FastNoiseLite]::PLANARIMPROVEA_MAGIC

                $Y.Value *= [FastNoiseLite]::PLANARIMPROVEZSCALE_MAGIC
                $X.Value += $S2 - $Z.Value
                $Y.Value += $S2 - $Z.Value
                $Z.Value += $Xz * [FastNoiseLite]::PLANARIMPROVEZSCALE_MAGIC

                Break
            }

            ([FnlTransformType3D]::DefaultOpenSimplex2) {
                [Single]$R = ($X.Value + $Y.Value + $Z.Value) * [FastNoiseLite]::A2DIV3

                $X.Value = $R - $X.Value
                $Y.Value = $R - $Y.Value
                $Z.Value = $R - $Z.Value

                Break
            }

            Default {
                Break
            }
        }

        Return
    }

    [Void]UpdateTransformType3D() {
        Switch($this.RotationType3D) {
            ([FnlRotationType3D]::ImproveXYPlanes) {
                $this.TransformType3D = [FnlTransformType3D]::ImproveXYPlanes

                Break
            }

            ([FnlRotationType3D]::ImproveXZPlanes) {
                $this.TransformType3D = [FnlTransformType3D]::ImproveXZPlanes

                Break
            }

            Default {
                Switch($this.NoiseType) {
                    ($_ -EQ [FnlNoiseType]::OpenSimplex2 -OR $_ -EQ [FnlNoiseType]::OpenSimplex2S) {
                        $this.TransformType3D = [FnlTransformType3D]::DefaultOpenSimplex2

                        Break
                    }

                    Default {
                        $this.TransformType3D = [FnlTransformType3D]::None

                        Break
                    }
                }

                Break
            }
        }

        Return
    }

    [Void]TransformDomainWarpCoordinate(
        [Ref]$X,
        [Ref]$Y
    ) {
        Switch($this.DomainWarpType) {
            ($_ -EQ [FnlDomainWarpType]::OpenSimplex2 -OR $_ -EQ [FnlDomainWarpType]::OpenSimplex2Reduced) {
                [Single]$F2 = 0.5 * ([FastNoiseLite]::SQRT3 - 1)
                [Single]$T  = ($X.Value + $Y.Value) * $F2

                $X.Value += $T
                $Y.Value += $T

                Break
            }

            Default {
                Break
            }
        }

        Return
    }

    [Void]TransformDomainWarpCoordinate(
        [Ref]$X,
        [Ref]$Y,
        [Ref]$Z
    ) {
        Switch($this.WarpTransformType3D) {
            ([FnlTransformType3D]::ImproveXYPlanes) {
                [Single]$Xy = $X.Value + $Y.Value
                [Single]$S2 = $Xy * -[FastNoiseLite]::PLANARIMPROVEA_MAGIC

                $Z.Value *= [FastNoiseLite]::PLANARIMPROVEZSCALE_MAGIC
                $X.Value += $S2 - $Z.Value
                $Y.Value += $S2 - $Z.Value
                $Z.Value += $Xy * [FastNoiseLite]::PLANARIMPROVEZSCALE_MAGIC

                Break
            }

            ([FnlTransformType3D]::ImproveXZPlanes) {
                [Single]$Xz = $X.Value + $Z.Value
                [Single]$S2 = $Xz * -[FastNoiseLite]::PLANARIMPROVEA_MAGIC

                $Y.Value *= [FastNoiseLite]::PLANARIMPROVEZSCALE_MAGIC
                $X.Value += $S2 - $Y.Value
                $Z.Value += $S2 - $Y.Value
                $Y.Value += $Xz * [FastNoiseLite]::PLANARIMPROVEZSCALE_MAGIC

                Break
            }

            ([FnlTransformType3D]::DefaultOpenSimplex2) {
                [Single]$R = ($X.Value + $Y.Value + $Z.Value) * [FastNoiseLite]::A2DIV3

                $X.Value = $R - $X.Value
                $Y.Value = $R - $Y.Value
                $Z.Value = $R - $Z.Value

                Break
            }

            Default {
                Break
            }
        }

        Return
    }

    [Void]UpdateWarpTransformType3D() {
        Switch($this.RotationType3D) {
            ([FnlRotationType3D]::ImproveXYPlanes) {
                $this.WarpTransformType3D = [FnlTransformType3D]::ImproveXYPlanes

                Break
            }

            ([FnlRotationType3D]::ImproveXZPlanes) {
                $this.WarpTransformType3D = [FnlTransformType3D]::ImproveXZPlanes

                Break
            }

            Default {
                Switch($this.DomainWarpType) {
                    ($_ -EQ [FnlDomainWarpType]::OpenSimplex2 -OR $_ -EQ [FnlDomainWarpType]::OpenSimplex2Reduced) {
                        $this.WarpTransformType3D = [FnlTransformType3D]::DefaultOpenSimplex2

                        Break
                    }

                    Default {
                        $this.WarpTransformType3D = [FnlTransformType3D]::None

                        Break
                    }
                }

                Break
            }
        }

        Return
    }

    [Single]GenFractalFBm(
        [Single]$X,
        [Single]$Y
    ) {
        [Int64]$ASeed = $this.Seed
        [Single]$Sum  = 0
        [Single]$Amp  = $this.FractalBounding

        For([Int64]$I = 0; $I -LT $this.Octaves; $I++) {
            [Single]$Noise = $this.GenNoiseSingle($ASeed++, $X, $Y)

            $Sum += $Noise * $Amp
            $Amp *= $this.Lerp(1, [FastNoiseLite]::FastMin($Noise + 1, 2) * 0.5, $this.WeightedStrength)
            $X   *= $this.Lacunarity
            $Y   *= $this.Lacunarity
            $Amp *= $this.Gain
        }

        Return $Sum
    }

    [Single]GenFractalFBm(
        [Single]$X,
        [Single]$Y,
        [Single]$Z
    ) {
        [Int64]$ASeed = $this.Seed
        [Single]$Sum  = 0
        [Single]$Amp  = $this.FractalBounding

        For([Int64]$I = 0; $I -LT $this.Octaves; $I++) {
            [Single]$Noise = $this.GenNoiseSingle($ASeed++, $X, $Y, $Z)

            $Sum += $Noise * $Amp
            $Amp *= $this.Lerp(1, [FastNoiseLite]::FastMin($Noise + 1, 2) * 0.5, $this.WeightedStrength)
            $X   *= $this.Lacunarity
            $Y   *= $this.Lacunarity
            $Z   *= $this.Lacunarity
            $Amp *= $this.Gain
        }

        Return $Sum
    }

    [Single]GenFractalRidged(
        [Single]$X,
        [Single]$Y
    ) {
        [Int64]$ASeed = $this.Seed
        [Single]$Sum  = 0
        [Single]$Amp  = $this.FractalBounding

        For([Int64]$I = 0; $I -LT $this.Octaves; $I++) {
            [Single]$Noise = [FastNoiseLite]::FastAbs($this.GenNoiseSingle($ASeed++, $X, $Y))

            $Sum += ($Noise * -2 + 1) * $Amp
            $Amp *= $this.Lerp(1, 1 - $Noise, $this.WeightedStrength)
            $X   *= $this.Lacunarity
            $Y   *= $this.Lacunarity
            $Amp *= $this.Gain
        }

        Return $Sum
    }

    [Single]GenFractalRidged(
        [Single]$X,
        [Single]$Y,
        [Single]$Z
    ) {
        [Int64]$ASeed = $this.Seed
        [Single]$Sum  = 0
        [Single]$Amp  = $this.FractalBounding

        For([Int64]$I = 0; $I -LT $this.Octaves; $I++) {
            [Single]$Noise = [FastNoiseLite]::FastAbs($this.GenNoiseSingle($ASeed++, $X, $Y, $Z))

            $Sum += ($Noise * -2 + 1) * $Amp
            $Amp *= $this.Lerp(1, 1 - $Noise, $this.WeightedStrength)
            $X   *= $this.Lacunarity
            $Y   *= $this.Lacunarity
            $Z   *= $this.Lacunarity
            $Amp *= $this.Gain
        }

        Return $Sum
    }

    [Single]GenFractalPingPong(
        [Single]$X,
        [Single]$Y
    ) {
        [Int64]$ASeed = $this.Seed
        [Single]$Sum  = 0
        [Single]$Amp  = $this.FractalBounding

        For([Int64]$I = 0; $I -LT $this.Octaves; $I++) {
            [Single]$Noise = $this.PingPong(($this.GenNoiseSingle($ASeed++, $X, $Y) + 1) * $this.PingPongStrength)

            $Sum += ($Noise - 0.5) * 2 * $Amp
            $Amp *= $this.Lerp(1, $Noise, $this.WeightedStrength)
            $X   *= $this.Lacunarity
            $Y   *= $this.Lacunarity
            $Amp *= $this.Gain
        }

        Return $Sum
    }

    [Single]GenFractalPingPong(
        [Single]$X,
        [Single]$Y,
        [Single]$Z
    ) {
        [Int64]$ASeed = $this.Seed
        [Single]$Sum  = 0
        [Single]$Amp  = $this.FractalBounding

        For([Int64]$I = 0; $I -LT $this.Octaves; $I++) {
            [Single]$Noise = $this.PingPong(($this.GenNoiseSingle($ASeed++, $X, $Y, $Z) + 1) * $this.PingPongStrength)

            $Sum += ($Noise - 0.5) * 2 * $Amp
            $Amp *= $this.Lerp(1, $Noise, $this.WeightedStrength)
            $X   *= $this.Lacunarity
            $Y   *= $this.Lacunarity
            $Z   *= $this.Lacunarity
            $Amp *= $this.Gain
        }

        Return $Sum
    }

    [Single]SingleSimplex(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y
    ) {
        [Single]$G2   = (3 - [FastNoiseLite]::SQRT3) / 6
        [Single]$G2m1 = $G2 - 1
        [Single]$G2a1 = 1 - 2 * $G2
        [Single]$G2a2 = 2 * $G2m1
        [Int64]$I     = [FastNoiseLite]::FastFloor($X)
        [Int64]$J     = [FastNoiseLite]::FastFloor($Y)
        [Single]$Xi   = ([Single]($X - $I))
        [Single]$Yi   = ([Single]($Y - $J))
        [Single]$T    = ($Xi + $Yi) * $G2
        [Single]$X0   = $Xi - $T
        [Single]$Y0   = $Yi - $T
        [Single]$N0   = 0
        [Single]$N1   = 0
        [Single]$N2   = 0

        $I *= [FastNoiseLite]::PRIMEX
        $J *= [FastNoiseLite]::PRIMEY

        [Single]$A  = 0.5 - $X0 * $X0 - $Y0 * $Y0

        If($A -LE 0) {
            $N0 = 0
        } Else {
            $N0 = $A * $A * $A * $A * [FastNoiseLite]::GradCoord($ASeed, $I, $J, $X0, $Y0)
        }

        [Single]$C  = ([Single](2 * $G2a1 * (1 / $G2 - 2)) * $T + ([Single](-2 * $G2a1 * $G2a1) + $A))

        If($C -LE 0) {
            $N2 = 0
        } Else {
            [Single]$X2 = $X0 + $G2a2
            [Single]$Y2 = $Y0 + $G2a2

            $N2 = $C * $C * $C * $C * [FastNoiseLite]::GradCoord($ASeed, $I + [FastNoiseLite]::PRIMEX, $J + [FastNoiseLite]::PRIMEY, $X2, $Y2)
        }

        If($Y0 -GT $X0) {
            [Single]$X1 = $X0 + $G2
            [Single]$Y1 = $Y0 + $G2m1
            [Single]$B  = 0.5 - $X1 * $X1 - $Y1 * $Y1

            If($B -LE 0) {
                $N1 = 0
            } Else {
                $N1 = $B * $B * $B * $B * [FastNoiseLite]::GradCoord($ASeed, $I, $J + [FastNoiseLite]::PRIMEY, $X1, $Y1)
            }
        } Else {
            [Single]$X1 = $X0 + $G2m1
            [Single]$Y1 = $Y0 + $G2
            [Single]$B  = 0.5 - $X1 * $X1 - $Y1 * $Y1

            If($B -LE 0) {
                $N1 = 0
            } Else {
                $N1 = $B * $B * $B * $B * [FastNoiseLite]::GradCoord($ASeed, $I + [FastNoiseLite]::PRIMEX, $J, $X1, $Y1)
            }
        }

        Return ($N0 + $N1 + $N2) * 99.83685446303647
    }

    [Single]SingleOpenSimplex2(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y,
        [Single]$Z
    ) {
        [Int64]$I      = [FastNoiseLite]::FastRound($X)
        [Int64]$J      = [FastNoiseLite]::FastRound($Y)
        [Int64]$K      = [FastNoiseLite]::FastRound($Z)
        [Single]$X0    = ([Single]($X - $I))
        [Single]$Y0    = ([Single]($Y - $J))
        [Single]$Z0    = ([Single]($Z - $K))
        [Int64]$XNSign = ([Int64](-1 - $X0) -BOR 1)
        [Int64]$YNSign = ([Int64](-1 - $Y0) -BOR 1)
        [Int64]$ZNSign = ([Int64](-1 - $Z0) -BOR 1)
        [Single]$Ax0   = $XNSign * -$X0
        [Single]$Ay0   = $YNSign * -$Y0
        [Single]$Az0   = $ZNSign * -$Z0
    
        $I *= [FastNoiseLite]::PRIMEX
        $J *= [FastNoiseLite]::PRIMEY
        $K *= [FastNoiseLite]::PRIMEZ
    
        [Single]$Value = 0
        [Single]$A     = (0.6 - $X0 * $X0) - ($Y0 * $Y0 + $Z0 * $Z0)
    
        For([Int64]$L = 0; ; $L++) {
            If($A -GT 0) {
                $Value += $A * $A * $A * $A * [FastNoiseLite]::GradCoord($ASeed, $I, $J, $K, $X0, $Y0, $Z0)
            }

            If($Ax0 -GE $Ay0 -AND $Ax0 -GE $Az0) {
                [Single]$B  = $A + $Ax0 + $Ax0

                If($B -GT 1) {
                    $B     -= 1
                    $Value += $B * $B * $B * $B * [FastNoiseLite]::GradCoord($ASeed, $I - $XNSign * [FastNoiseLite]::PRIMEX, $J, $K, $X0 + $XNSign, $Y0, $Z0)
                }
            } Elseif($Ay0 -GT $Ax0 -AND $Ay0 -GE $Az0) {
                [Single]$B  = $A + $Ay0 + $Ay0

                If($B -GT 1) {
                    $B     -= 1
                    $Value += $B * $B * $B * $B * [FastNoiseLite]::GradCoord($ASeed, $I, $J - $YNSign * [FastNoiseLite]::PRIMEY, $K, $X0, $Y0 + $YNSign, $Z0)
                }
            } Else {
                [Single]$B  = $A + $Az0 + $Az0

                If($B -GT 1) {
                    $B     -= 1
                    $Value += $B * $B * $B * $B * [FastNoiseLite]::GradCoord($ASeed, $I, $J, $K - $ZNSign * [FastNoiseLite]::PRIMEZ, $X0, $Y0, $Z0 + $ZNSign)
                }
            }

            If($L == 1) {
                Break
            }

            $Ax0     = 0.5 - $Ax0
            $Ay0     = 0.5 - $Ay0
            $Az0     = 0.5 - $Az0
            $X0      = $XNSign * $Ax0
            $Y0      = $YNSign * $Ay0
            $Z0      = $ZNSign * $Az0
            $A      += (0.75 - $Ax0) - ($Ay0 + $Az0)
            $I      += ($XNSign -SHR 1) -BAND [FastNoiseLite]::PRIMEX
            $J      += ($YNSign -SHR 1) -BAND [FastNoiseLite]::PRIMEY
            $K      += ($ZNSign -SHR 1) -BAND [FastNoiseLite]::PRIMEZ
            $XNSign  = -$XNSign
            $YNSign  = -$YNSign
            $ZNSign  = -$ZNSign
            $ASeed   = -BNOT $ASeed
        }

        Return $Value * [FastNoiseLite]::SIMPLEXVALMODA_MAGIC
    }

    [Single]SingleOpenSimplex2S(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y
    ) {
        [Single]$G2   = (3 - [FastNoiseLite]::SQRT3) / 6
        [Single]$G2m1 = $G2 - 1
        [Single]$G2a1 = 1 - 2 * $G2
        [Int64]$I     = [FastNoiseLite]::FastFloor($X)
        [Int64]$J     = [FastNoiseLite]::FastFloor($Y)
        [Single]$Xi   = ([Single]($X - $I))
        [Single]$Yi   = ([Single]($Y - $J))

        $I *= [FastNoiseLite]::PRIMEX
        $J *= [FastNoiseLite]::PRIMEY

        [Int64]$I1     = $I + [FastNoiseLite]::PRIMEX
        [Int64]$J1     = $J + [FastNoiseLite]::PRIMEY
        [Single]$T     = ($Xi + $Yi) * $G2
        [Single]$X0    = $Xi - $T
        [Single]$Y0    = $Yi - $T
        [Single]$A0    = [FastNoiseLite]::A2DIV3 - $X0 * $X0 - $Y0 * $Y0
        [Single]$Value = $A0 * $A0 * $A0 * $A0 * [FastNoiseLite]::GradCoord($ASeed, $I, $J, $X0, $Y0)
        [Single]$A1    = ([Single](2 * $G2a1 * (1 / $G2 - 2)) * $T + ([Single](-2 * $G2a1 * $G2a1) + $A0))
        [Single]$X1    = $X0 - $G2a1
        [Single]$Y1    = $Y0 - $G2a1

        $Value += $A1 * $A1 * $A1 * $A1 * [FastNoiseLite]::GradCoord($ASeed, $I1, $J1, $X1, $Y1)

        [Single]$Xmyi = $Xi - $Yi

        If($T -GT $G2) {
            If($Xi + $Xmyi -GT 1) {
                [Single]$X2  = $X0 + (3 * $G2 - 2)
                [Single]$Y2  = $Y0 + (3 * $G2 - 1)
                [Single]$A2  = [FastNoiseLite]::A2DIV3 - $X2 * $X2 - $Y2 * $Y2

                If($A2 -GT 0) {
                    $Value += $A2 * $A2 * $A2 * $A2 * [FastNoiseLite]::GradCoord($ASeed, $I + ([FastNoiseLite]::PRIMEX -SHL 1), $J + [FastNoiseLite]::PRIMEY, $X2, $Y2)
                }
            } Else {
                [Single]$X2  = $X0 + $G2
                [Single]$Y2  = $Y0 + $G2m1
                [Single]$A2  = [FastNoiseLite]::A2DIV3 - $X2 * $X2 - $Y2 * $Y2

                If($A2 -GT 0) {
                    $Value += $A2 * $A2 * $A2 * $A2 * [FastNoiseLite]::GradCoord($ASeed, $I, $J + [FastNoiseLite]::PRIMEY, $X2, $Y2)
                }
            }

            If($Yi - $Xmyi -GT 1) {
                [Single]$X3  = $X0 + $G2m1
                [Single]$Y3  = $Y0 + $G2
                [Single]$A3  = [FastNoiseLite]::A2DIV3 - $X3 * $X3 - $Y3 * $Y3

                If($A3 -GT 0) {
                    $Value += $A3 * $A3 * $A3 * $A3 * [FastNoiseLite]::GradCoord($ASeed, $I + [FastNoiseLite]::PRIMEX, $J, $X3, $Y3)
                }
            }
        } Else {
            If($Xi + $Xmyi -LT 0) {
                [Single]$X2  = $X0 + $G2m1
                [Single]$Y2  = $Y0 - $G2
                [Single]$A2  = [FastNoiseLite]::A2DIV3 - $X2 * $X2 - $Y2 * $Y2

                If($A2 -GT 0) {
                    $Value += $A2 * $A2 * $A2 * $A2 * [FastNoiseLite]::GradCoord($ASeed, $I - [FastNoiseLite]::PRIMEX, $J, $X2, $Y2)
                }
            } Else {
                [Single]$X2  = $X0 + $G2m1
                [Single]$Y2  = $Y0 - $G2
                [Single]$A2  = [FastNoiseLite]::A2DIV3 - $X2 * $X2 - $Y2 * $Y2

                If($A2 -GT 0) {
                    $Value += $A2 * $A2 * $A2 * $A2 * [FastNoiseLite]::GradCoord($ASeed, $I + [FastNoiseLite]::PRIMEX, $J, $X2, $Y2)
                }
            }

            If($Yi -LT $Xmyi) {
                [Single]$X2  = $X0 - $G2
                [Single]$Y2  = $Y0 - $G2m1
                [Single]$A2  = [FastNoiseLite]::A2DIV3 - $X2 * $X2 - $Y2 * $Y2

                If($A2 -GT 0) {
                    $Value += $A2 * $A2 * $A2 * $A2 * [FastNoiseLite]::GradCoord($ASeed, $I, $J - [FastNoiseLite]::PRIMEY, $X2, $Y2)
                }
            } Else {
                [Single]$X2  = $X0 + $G2
                [Single]$Y2  = $Y0 + $G2m1
                [Single]$A2  = [FastNoiseLite]::A2DIV3 - $X2 * $X2 - $Y2 * $Y2

                If($A2 -GT 0) {
                    $Value += $A2 * $A2 * $A2 * $A2 * [FastNoiseLite]::GradCoord($ASeed, $I, $J + [FastNoiseLite]::PRIMEY, $X2, $Y2)
                }
            }
        }

        Return $Value * 18.24196194486065
    }

    [Single]SingleOpenSimplex2S(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y,
        [Single]$Z
    ) {
        [Int64]$I   = [FastNoiseLite]::FastFloor($X)
        [Int64]$J   = [FastNoiseLite]::FastFloor($Y)
        [Int64]$K   = [FastNoiseLite]::FastFloor($Z)
        [Single]$Xi = ([Single]($X - $I))
        [Single]$Yi = ([Single]($Y - $J))
        [Single]$Zi = ([Single]($Z - $K))

        $I *= [FastNoiseLite]::PRIMEX
        $J *= [FastNoiseLite]::PRIMEY
        $K *= [FastNoiseLite]::PRIMEZ

        [Int64]$Seed2  = $ASeed + [FastNoiseLite]::SEEDADD_MAGIC
        [Int64]$XNMask = ([Int64](0.5 - $Xi))
        [Int64]$YNMask = ([Int64](0.5 - $Yi))
        [Int64]$ZNMask = ([Int64](0.5 - $Zi))
        [Single]$X0    = $Xi + $XNMask
        [Single]$Y0    = $Yi + $YNMask
        [Single]$Z0    = $Zi + $ZNMask
        [Single]$A0    = 0.75 - $X0 * $X0 - $Y0 * $Y0 - $Z0 * $Z0
        [Single]$Value = $A0 * $A0 * $A0 * $A0 * [FastNoiseLite]::GradCoord(
            $ASeed,
            $I + ($XNMask -BAND [FastNoiseLite]::PRIMEX),
            $J + ($YNMask -BAND [FastNoiseLite]::PRIMEY),
            $K + ($ZNMask -BAND [FastNoiseLite]::PRIMEZ),
            $X0, $Y0, $Z0
        )

        [Single]$X1   = $Xi - 0.5
        [Single]$Y1   = $Yi - 0.5
        [Single]$Z1   = $Zi - 0.5
        [Single]$A1   = 0.75 - $X1 * $X1 - $Y1 * $Y1 - $Z1 * $Z1
        $Value       += $A1 * $A1 * $A1 * $A1 * [FastNoiseLite]::GradCoord(
            $Seed2,
            $I + [FastNoiseLite]::PRIMEX,
            $J + [FastNoiseLite]::PRIMEY,
            $K + [FastNoiseLite]::PRIMEZ,
            $X1, $Y1, $Z1
        )

        [Single]$XAFlipMask0 = (($XNMask -BOR 1) -SHL 1) * $X1
        [Single]$YAFlipMask0 = (($YNMask -BOR 1) -SHL 1) * $Y1
        [Single]$ZAFlipMask0 = (($ZNMask -BOR 1) -SHL 1) * $Z1
        [Single]$XAFlipMask1 = (-2 - ($XNMask -SHL 2)) * $X1 - 1
        [Single]$YAFlipMask1 = (-2 - ($YNMask -SHL 2)) * $Y1 - 1
        [Single]$ZAFlipMask1 = (-2 - ($ZNMask -SHL 2)) * $Z1 - 1
        [Boolean]$Skip5      = $false
        [Single]$A2          = $XAFlipMask0 + $A0

        If($A2 -GT 0) {
            [Single]$X2 = $X0 - ($XNMask -BOR 1)
            [Single]$Y2 = $Y0
            [Single]$Z2 = $Z0

            $Value += $A2 * $A2 * $A2 * $A2 * [FastNoiseLite]::GradCoord(
                $ASeed,
                $I + (-BNOT $XNMask -BAND [FastNoiseLite]::PRIMEX),
                $J + ($YNMask -BAND [FastNoiseLite]::PRIMEY),
                $K + ($ZNMask -BAND [FastNoiseLite]::PRIMEZ),
                $X2, $Y2, $Z2
            )
        } Else {
            [Single]$A3  = $YAFlipMask0 + $ZAFlipMask0 + $A0

            If($A3 -GT 0) {
                [Single]$X3 = $X0
                [Single]$Y3 = $Y0 - ($YNMask -BOR 1)
                [Single]$Z3 = $Z0 - ($ZNMask -BOR 1)

                $Value += $A3 * $A3 * $A3 * $A3 * [FastNoiseLite]::GradCoord(
                    $ASeed,
                    $I + ($XNMask -BAND [FastNoiseLite]::PRIMEX),
                    $J + (-BNOT $YNMask -BAND [FastNoiseLite]::PRIMEY),
                    $K + (-BNOT $ZNMask -BAND [FastNoiseLite]::PRIMEZ),
                    $X3, $Y3, $Z3
                )
            }

            [Single]$A4  = $XAFlipMask1 + $A1

            If($A4 -GT 0) {
                [Single]$X4 = ($XNMask -BOR 1) + $X1
                [Single]$Y4 = $Y1
                [Single]$Z4 = $Z1

                $Value += $A4 * $A4 * $A4 * $A4 * [FastNoiseLite]::GradCoord(
                    $Seed2,
                    $I + ($XNMask -BAND [FastNoiseLite]::APRIMEXMULT2),
                    $J + [FastNoiseLite]::PRIMEY,
                    $K + [FastNoiseLite]::PRIMEZ,
                    $X4, $Y4, $Z4
                )
                $Skip5 = $true
            }
        }

        [Boolean]$Skip9 = $false
        [Single]$A6     = $YAFlipMask0 + $A0

        If($A6 -GT 0) {
            [Single]$X6 = $X0
            [Single]$Y6 = $Y0 - ($YNMask -BOR 1)
            [Single]$Z6 = $Z0

            $Value += $A6 * $A6 * $A6 * $A6 * [FastNoiseLite]::GradCoord(
                $ASeed,
                $I + ($XNMask -BAND [FastNoiseLite]::PRIMEX),
                $J + (-BNOT $YNMask -BAND [FastNoiseLite]::PRIMEY),
                $K + ($ZNMask -BAND [FastNoiseLite]::PRIMEZ),
                $X6, $Y6, $Z6
            )
        } Else {
            [Single]$A7  = $XAFlipMask0 + $ZAFlipMask0 + $A0

            If($A7 -GT 0) {
                [Single]$X7 = $X0 - ($XNMask -BOR 1)
                [Single]$Y7 = $Y0
                [Single]$Z7 = $Z0 - ($ZNMask -BOR 1)

                $Value += $A7 * $A7 * $A7 * $A7 * [FastNoiseLite]::GradCoord(
                    $ASeed,
                    $I + (-BNOT $XNMask -BAND [FastNoiseLite]::PRIMEX),
                    $J + ($YNMask -BAND [FastNoiseLite]::PRIMEY),
                    $K + (-BNOT $ZNMask -BAND [FastNoiseLite]::PRIMEZ),
                    $X7, $Y7, $Z7
                )
            }

            [Single]$A8  = $YAFlipMask1 + $A1

            If($A8 -GT 0) {
                [Single]$X8 = $X1
                [Single]$Y8 = ($YNMask -BOR 1) + $Y1
                [Single]$Z8 = $Z1

                $Value += $A8 * $A8 * $A8 * $A8 * [FastNoiseLite]::GradCoord(
                    $Seed2,
                    $I + [FastNoiseLite]::PRIMEX,
                    $J + ($YNMask -BAND ([FastNoiseLite]::PRIMEY -SHL 1)),
                    $K + [FastNoiseLite]::PRIMEZ,
                    $X8, $Y8, $Z8
                )
                $Skip9 = $true
            }
        }

        [Boolean]$SkipD = $false
        [Single]$Aa     = $ZAFlipMask0 + $A0

        If($Aa -GT 0) {
            [Single]$Xa = $X0
            [Single]$Ya = $Y0
            [Single]$Za = $Z0 - ($ZNMask -BOR 1)

            $Value += $Aa * $Aa * $Aa * $Aa * [FastNoiseLite]::GradCoord(
                $ASeed,
                $I + ($XNMask -BAND [FastNoiseLite]::PRIMEX),
                $J + ($YNMask -BAND [FastNoiseLite]::PRIMEY),
                $K + (-BNOT $ZNMask -BAND [FastNoiseLite]::PRIMEZ),
                $Xa, $Ya, $Za
            )
        } Else {
            [Single]$Ab  = $XAFlipMask0 + $YAFlipMask0 + $A0

            If($Ab -GT 0) {
                [Single]$Xb = $X0 - ($XNMask -BOR 1)
                [Single]$Yb = $Y0 - ($YNMask -BOR 1)
                [Single]$Zb = $Z0

                $Value += $Ab * $Ab * $Ab * $Ab * [FastNoiseLite]::GradCoord(
                    $ASeed,
                    $I + (-BNOT $XNMask -BAND [FastNoiseLite]::PRIMEX),
                    $J + (-BNOT $YNMask -BAND [FastNoiseLite]::PRIMEY),
                    $K + ($ZNMask -BAND [FastNoiseLite]::PRIMEZ),
                    $Xb, $Yb, $Zb
                )
            }

            [Single]$Ac  = $ZAFlipMask1 + $A1

            If($Ac -GT 0) {
                [Single]$Xc = $X1
                [Single]$Yc = $Y1
                [Single]$Zc = ($ZNMask -BOR 1) + $Z1

                $Value += $Ac * $Ac * $Ac * $Ac * [FastNoiseLite]::GradCoord(
                    $Seed2,
                    $I + [FastNoiseLite]::PRIMEX,
                    $J + [FastNoiseLite]::PRIMEY,
                    $K + ($ZNMask -BAND ([FastNoiseLite]::PRIMEZ -SHL 1)),
                    $Xc, $Yc, $Zc
                )
                $SkipD = $true
            }
        }

        If(-NOT $Skip5) {
            [Single]$A5  = $YAFlipMask1 + $ZAFlipMask1 + $A1

            If($A5 -GT 0) {
                [Single]$X5 = $X1
                [Single]$Y5 = ($YNMask -BOR 1) + $Y1
                [Single]$Z5 = ($ZNMask -BOR 1) + $Z1

                $Value += $A5 * $A5 * $A5 * $A5 * [FastNoiseLite]::GradCoord(
                    $Seed2,
                    $I + [FastNoiseLite]::PRIMEX,
                    $J + ($YNMask -BAND ([FastNoiseLite]::PRIMEY -SHL 1)),
                    $K + ($ZNMask -BAND ([FastNoiseLite]::PRIMEZ -SHL 1)),
                    $X5, $Y5, $Z5
                )
            }
        }

        If(-NOT $Skip9) {
            [Single]$A9  = $XAFlipMask1 + $ZAFlipMask1 + $A1

            If($A9 -GT 0) {
                [Single]$X9 = ($XNMask -BOR 1) + $X1
                [Single]$Y9 = $Y1
                [Single]$Z9 = ($ZNMask -BOR 1) + $Z1

                $Value += $A9 * $A9 * $A9 * $A9 * [FastNoiseLite]::GradCoord(
                    $Seed2,
                    $I + ($XNMask -BAND [FastNoiseLite]::APRIMEXMULT2),
                    $J + [FastNoiseLite]::PRIMEY,
                    $K + ($ZNMask -BAND ([FastNoiseLite]::PRIMEZ -SHL 1)),
                    $X9, $Y9, $Z9
                )
            }
        }

        If(-NOT $SkipD) {
            [Single]$Ad  = $XAFlipMask1 + $YAFlipMask1 + $A1

            If($Ad -GT 0) {
                [Single]$Xd = ($XNMask -BOR 1) + $X1
                [Single]$Yd = ($YNMask -BOR 1) + $Y1
                [Single]$Zd = $Z1

                $Value += $Ad * $Ad * $Ad * $Ad * [FastNoiseLite]::GradCoord(
                    $Seed2,
                    $I + ($XNMask -BAND ([FastNoiseLite]::PRIMEX -SHL 1)),
                    $J + ($YNMask -BAND ([FastNoiseLite]::PRIMEY -SHL 1)),
                    $K + [FastNoiseLite]::PRIMEZ,
                    $Xd, $Yd, $Zd
                )
            }
        }

        Return $Value * 9.046026385208288
    }

    [Single]SingleCellular(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y
    ) {
        [Int64]$Xr              = [FastNoiseLite]::FastRound($X)
        [Int64]$Yr              = [FastNoiseLite]::FastRound($Y)
        [Int64]$ClosestHash     = 0
        [Int64]$XPrimed         = ($Xr - 1) * [FastNoiseLite]::PRIMEX
        [Int64]$YPrimedBase     = ($Yr - 1) * [FastNoiseLite]::PRIMEY
        [Single]$Distance0      = [Single]::MaxValue
        [Single]$Distance1      = [Single]::MaxValue
        [Single]$CellularJitter = 0.43701595 * $this.CellularJitterModifier

        Switch($this.CellularDistanceFunction) {
            { $_ -EQ [FnlCellularDistanceFunction]::Euclidean -OR $_ -EQ [FnlCellularDistanceFunction]::EuclideanSq } {
                For([Int64]$Xi = $Xr - 1; $Xi -LE $Xr + 1; $Xi++) {
                    [Int64]$YPrimed = $YPrimedBase

                    For([Int64]$Yi = $Yr - 1; $Yi -LE $Yr - 1; $Yi++) {
                        [Int64]$AHash        = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed)
                        [Int64]$Idx          = $AHash -BAND (255 -SHL 1)
                        [Single]$VecX        = ([Single]($Xi - $X) + [FastNoiseLite]::RANDVECS2D[$Idx] * $CellularJitter)
                        [Single]$VecY        = ([Single]($Yi - $Y) + [FastNoiseLite]::RANDVECS2D[$Idx -BOR 1] * $CellularJitter)
                        [Single]$NewDistance = $VecX * $VecX + $VecY * $VecY

                        $Distance1 = [FastNoiseLite]::FastMax([FastNoiseLite]::FastMin($Distance1, $NewDistance), $Distance0)
                        If($NewDistance -LT $Distance0) {
                            $Distance0   = $NewDistance
                            $ClosestHash = $AHash
                        }

                        $YPrimed += [FastNoiseLite]::PRIMEY
                    }

                    $XPrimed += [FastNoiseLite]::PRIMEX
                }

                Break
            }

            ([FnlCellularDistanceFunction]::Manhattan) {
                For([Int64]$Xi = $Xr - 1; $Xi -LE $Xr + 1; $Xi++) {
                    [Int64]$YPrimed = $YPrimedBase

                    For([Int64]$Yi = $Yr - 1; $Yi -LE $Yr + 1; $Yi++) {
                        [Int64]$AHash        = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed)
                        [Int64]$Idx          = $AHash -BAND (255 -SHL 1)
                        [Single]$VecX        = ([Single]($Xi - $X) + [FastNoiseLite]::RANDVECS2D[$Idx] * $CellularJitter)
                        [Single]$VecY        = ([Single]($Yi - $Y) + [FastNoiseLite]::RANDVECS2D[$Idx -BOR 1] * $CellularJitter)
                        [Single]$NewDistance = [FastNoiseLite]::FastAbs($VecX) + [FastNoiseLite]::FastAbs($VecY)

                        $Distance1 = [FastNoiseLite]::FastMax([FastNoiseLite]::FastMin($Distance1, $NewDistance), $Distance0)
                        If($NewDistance -LT $Distance0) {
                            $Distance0   = $NewDistance
                            $ClosestHash = $AHash
                        }

                        $YPrimed += [FastNoiseLite]::PRIMEY
                    }

                    $XPrimed += [FastNoiseLite]::PRIMEX
                }

                Break
            }

            ([FnlCellularDistanceFunction]::Hybrid) {
                For([Int64]$Xi = $Xr - 1; $Xi -LE $Xr + 1; $Xi++) {
                    [Int64]$YPrimed = $YPrimedBase

                    For([Int64]$Yi = $Yr - 1; $Yi -LE $Yr + 1; $Yi++) {
                        [Int64]$AHash        = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed)
                        [Int64]$Idx          = $AHash -BAND (255 -SHL 1)
                        [Single]$VecX        = ([Single]($Xi - $X) + [FastNoiseLite]::RANDVECS2D[$Idx] * $CellularJitter)
                        [Single]$VecY        = ([Single]($Yi - $Y) + [FastNoiseLite]::RANDVECS2D[$Idx -BOR 1] * $CellularJitter)
                        [Single]$NewDistance = ([FastNoiseLite]::FastAbs($VecX) + [FastNoiseLite]::FastAbs($VecY)) + ($VecX * $VecX + $VecY * $VecY)

                        $Distance1 = [FastNoiseLite]::FastMax([FastNoiseLite]::FastMin($Distance0))
                        If($NewDIstance -LT $Distance0) {
                            $Distance0   = $NewDistance
                            $ClosestHash = $AHash
                        }

                        $YPrimed += [FastNoiseLite]::PRIMEY
                    }

                    $XPrimed += [FastNoiseLite]::PRIMEX
                }

                Break
            }

            Default { # SAME AS FIRST CASE
                For([Int64]$Xi = $Xr - 1; $Xi -LE $Xr + 1; $Xi++) {
                    [Int64]$YPrimed = $YPrimedBase

                    For([Int64]$Yi = $Yr - 1; $Yi -LE $Yr - 1; $Yi++) {
                        [Int64]$AHash        = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed)
                        [Int64]$Idx          = $AHash -BAND (255 -SHL 1)
                        [Single]$VecX        = ([Single]($Xi - $X) + [FastNoiseLite]::RANDVECS2D[$Idx] * $CellularJitter)
                        [Single]$VecY        = ([Single]($Yi - $Y) + [FastNoiseLite]::RANDVECS2D[$Idx -BOR 1] * $CellularJitter)
                        [Single]$NewDistance = $VecX * $VecX + $VecY * $VecY

                        $Distance1 = [FastNoiseLite]::FastMax([FastNoiseLite]::FastMin($Distance1, $NewDistance), $Distance0)
                        If($NewDistance -LT $Distance0) {
                            $Distance0   = $NewDistance
                            $ClosestHash = $AHash
                        }

                        $YPrimed += [FastNoiseLite]::PRIMEY
                    }

                    $XPrimed += [FastNoiseLite]::PRIMEX
                }

                Break
            }
        }

        If($this.CellularDistanceFunction -EQ [FnlCellularDistanceFunction]::Euclidean -AND $this.CellularReturnType -GE [FnlCellularReturnType]::Distance) {
            $Distance0 = [FastNoiseLite]::FastSqrt($Distance0)

            If($this.CellularReturnType -GE [FnlCellularReturnType]::Distance2) {
                $Distance1 = [FastNoiseLite]::FastSqrt($Distance1)
            }
        }

        Switch($this.CellularReturnType) {
            ([FnlCellularReturnType]::CellValue) {
                Return $ClosestHash * (1 / [FastNoiseLite]::HASHCALC_MAGIC)
            }

            ([FnlCellularReturnType]::Distance) {
                Return $Distance0 - 1
            }

            ([FnlCellularReturnType]::Distance2) {
                Return $Distance1 - 1
            }

            ([FnlCellularReturnType]::Distance2Add) {
                Return ($Distance1 + $Distance0) * 0.5 - 1
            }

            ([FnlCellularReturnType]::Distance2Sub) {
                Return $Distance1 - $Distance0 - 1
            }

            ([FnlCellularReturnType]::Distance2Mul) {
                Return $Distance1 * $Distance0 * 0.5 - 1
            }

            ([FnlCellularReturnType]::Distance2Div) {
                Return $Distance0 / $Distance1 - 1
            }

            Default {
                Return 0
            }
        }

        Return 0
    }

    [Single]SingleCellular(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y,
        [Single]$Z
    ) {
        [Int64]$Xr              = [FastNoiseLite]::FastRound($X)
        [Int64]$Yr              = [FastNoiseLite]::FastRound($Y)
        [Int64]$Zr              = [FastNoiseLite]::FastRound($Z)
        [Int64]$ClosestHash     = 0
        [Single]$Distance0      = [Single]::MaxValue
        [Single]$Distance1      = [Single]::MaxValue
        [Single]$CellularJitter = 0.39614353 * $this.CellularJitterModifier
        [Int64]$XPrimed         = ($Xr - 1) * [FastNoiseLite]::PRIMEX
        [Int64]$YPrimedBase     = ($Yr - 1) * [FastNoiseLite]::PRIMEY
        [Int64]$ZPrimedBase     = ($Zr - 1) * [FastNoiseLite]::PRIMEZ

        Switch($this.CellularDistanceFunction) {
            { $_ -EQ [FnlCellularDistanceFunction]::Euclidean -OR $_ -EQ [FnlCellularDistanceFunction]::EuclideanSq } {
                For([Int64]$Xi = $Xr - 1; $Xi -LE $Xr; $Xi++) {
                    [Int64]$YPrimed = $YPrimedBase

                    For([Int64]$Yi = $Yr - 1; $Yi -LE $Yr; $Yi++) {
                        [Int64]$ZPrimed = $ZPrimedBase

                        For([Int64]$Zi = $Zr - 1; $Zi -LE $Zr; $Zi++) {
                            [Int64]$AHash        = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed, $ZPrimed)
                            [Int64]$Idx          = $AHash -BAND (255 -SHL 2)
                            [Single]$VecX        = ([Single]($Xi - $X) + [FastNoiseLite]::RANDVECS3D[$Idx] * $CellularJitter)
                            [Single]$VecY        = ([Single]($Yi - $Y) + [FastNoiseLite]::RANDVECS3D[$Idx -BOR 1] * $CellularJitter)
                            [Single]$VecZ        = ([Single]($Zi - $Z) + [FastNoiseLite]::RANDVECS3D[$Idx -BOR 2] * $CellularJitter)
                            [Single]$NewDistance = $VecX * $VecX + $VecY * $VecY + $VecZ * $VecZ

                            $Distance1 = [FastNoiseLite]::FastMax([FastNoiseLite]::FastMin($Distance1, $NewDistance), $Distance0)
                            If($NewDistance -LT $Distance0) {
                                $Distance0   = $NewDistance
                                $ClosestHash = $AHash
                            }

                            $ZPrimed += [FastNoiseLite]::PRIMEZ
                        }

                        $YPrimed += [FastNoiseLite]::PRIMEY
                    }

                    $XPrimed += [FastNoiseLite]::PRIMEX
                }

                Break
            }

            ([FnlCellularDistanceFunction]::Manhattan) {
                For([Int64]$Xi = $Xr - 1; $Xi -LE $Xr; $Xi++) {
                    [Int64]$YPrimed = $YPrimedBase

                    For([Int64]$Yi = $Yr - 1; $Yi -LE $Yr; $Yi++) {
                        [Int64]$ZPrimed = $ZPrimedBase

                        For([Int64]$Zi = $Zr - 1; $Zi -LE $Zr + 1; $Zi++) {
                            [Int64]$AHash        = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed, $ZPrimed)
                            [Int64]$Idx          = $AHash -BAND (255 -SHL 2)
                            [Single]$VecX        = ([Single]($Xi - $X) + [FastNoiseLite]::RANDVECS3D[$Idx] * $CellularJitter)
                            [Single]$VecY        = ([Single]($Yi - $Y) + [FastNoiseLite]::RANDVECS3D[$Idx -BOR 1] * $CellularJitter)
                            [Single]$VecZ        = ([Single]($Zi - $Z) + [FastNoiseLite]::RANDVECS3D[$Idx -BOR 2] * $CellularJitter)
                            [Single]$NewDistance = [FastNoiseLite]::FastAbs($VecX) + [FastNoiseLite]::FastAbs($VecY) + [FastNoiseLite]::FastAbs($VecZ)

                            $Distance1 = [FastNoiseLite]::FastMax([FastNoiseLite]::FastMin($Distance1, $NewDistance), $Distance0)
                            If($NewDistance -LT $Distance0) {
                                $Distance0   = $NewDistance
                                $ClosestHash = $AHash
                            }

                            $ZPrimed += [FastNoiseLite]::PRIMEZ
                        }

                        $YPrimed += [FastNoiseLite]::PRIMEY
                    }

                    $XPrimed += [FastNoiseLite]::PRIMEX
                }

                Break
            }

            ([FnlCellularDistanceFunction]::Hybrid) {
                For([Int64]$Xi = $Xr - 1; $Xi -LE $Xr + 1; $Xi++) {
                    [Int64]$YPrimed = $YPrimedBase

                    For([Int64]$Yi = $Yr - 1; $Yi -LE $Yr + 1; $Yi++) {
                        [Int64]$ZPrimed = $ZPrimedBase

                        For([Int64]$Zi = $Zr - 1; $Zi -LE $Zr + 1; $Zi++) {
                            [Int64]$AHash        = [FastNoiseLite]::Hash($ASeed, $XPrimed, $YPrimed, $ZPrimed)
                            [Int64]$Idx          = $AHash -BAND (255 -SHL 2)
                            [Single]$VecX        = ([Single]($Xi - $X) + [FastNoiseLite]::RANDVECS3D[$Idx] * $CellularJitter)
                            [Single]$VecY        = ([Single]($Yi - $Y) + [FastNoiseLite]::RANDVECS3D[$Idx -BOR 1] * $CellularJitter)
                            [Single]$VecZ        = ([Single]($Zi - $Z) + [FastNoiseLite]::RANDVECS3D[$Idx -BOR 2] * $CellularJitter)
                            [Single]$NewDistance = (
                                [FastNoiseLite]::FastAbs($VecX) +
                                [FastNoiseLite]::FastAbs($VecY) +
                                [FastNoiseLite]::FastAbs($VecZ)
                            ) + (
                                $VecX * $VecX +
                                $VecY * $VecY +
                                $VecZ * $VecZ
                            )

                            $Distance1 = [FastNoiseLite]::FastMax([FastNoiseLite]::FastMin($Distance1, $NewDistance), $Distance0)
                            If($NewDistance -LT $Distance0) {
                                $Distance0   = $NewDistance
                                $ClosestHash = $AHash
                            }

                            $Zprimed += [FastNoiseLite]::PRIMEZ
                        }

                        $YPrimed += [FastNoiseLite]::PRIMEY
                    }

                    $XPrimed += [FastNoiseLite]::PRIMEX
                }

                Break
            }

            Default {
                Break
            }
        }

        If($this.CellularDistanceFunction -EQ [FnlCellularDistanceFunction]::Euclidean -AND $this.CellularReturnType -GE [FnlCellularReturnType]::Distance) {
            $Distance0 = [FastNoiseLite]::FastSqrt($Distance0)

            If($this.CellularReturnType -GE [FnlCellularReturnType].Distance2) {
                $Distance1 = [FastNoiseLite]::FastSqrt($Distance1)
            }
        }

        Switch($this.CellularReturnType) {
            ([FnlCellularReturnType]::CellValue) {
                Return $ClosestHash * (1 / [FastNoiseLite]::HASHCALC_MAGIC)
            }

            ([FnlCellularReturnType]::Distance) {
                Return $Distance0 - 1
            }

            ([FnlCellularReturnType]::Distance2) {
                Return $Distance1 - 1
            }

            ([FnlCellularReturnType]::Distance2Add) {
                Return ($Distance1 + $Distance0) * 0.5 - 1
            }

            ([FnlCellularReturnType]::Distance2Sub) {
                Return $Distance1 - $Distance0 - 1
            }

            ([FnlCellularReturnType]::Distance2Mul) {
                Return $Distance1 * $Distance0 * 0.5 - 1
            }

            ([FnlCellularReturnType]::Distance2Div) {
                Return $Distance0 / $Distance1 - 1
            }

            Default {
                Return 0
            }
        }

        Return 0
    }

    [Single]SinglePerlin(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y
    ) {
        [Int64]$X0   = [FastNoiseLite]::FastFloor($X)
        [Int64]$Y0   = [FastNoiseLite]::FastFloor($Y)
        [Single]$Xd0 = ([Single]($X - $X0))
        [Single]$Yd0 = ([Single]($Y - $Y0))
        [Single]$Xd1 = $Xd0 - 1
        [Single]$Yd1 = $Yd0 - 1
        [Single]$Xs  = [FastNoiseLite]::InterpQuintic($Xd0)
        [Single]$Ys  = [FastNoiseLite]::InterpQuintic($Yd0)

        $X0 *= [FastNoiseLite]::PRIMEX
        $Y0 *= [FastNoiseLite]::PRIMEY

        [Int64]$X1 = $X0 + [FastNoiseLite]::PRIMEX
        [Int64]$Y1 = $Y0 + [FastNoiseLite]::PRIMEY

        [Single]$Xf0 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::GradCoord($ASeed, $X0, $Y0, $Xd0, $Yd0),
            [FastNoiseLite]::GradCoord($ASeed, $X1, $Y0, $Xd1, $Yd0),
            $Xs
        )
        [Single]$Xf1 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::GradCoord($ASeed, $X0, $Y1, $Xd0, $Yd1),
            [FastNoiseLite]::GradCoord($ASeed, $X1, $Y1, $Xd1, $Yd1),
            $Xs
        )

        Return [FastNoiseLite]::Lerp($Xf0, $Xf1, $Ys) * 1.4247691104677813
    }

    [Single]SinglePerlin(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y,
        [Single]$Z
    ) {
        [Int64]$X0   = [FastNoiseLite]::FastFloor($X)
        [Int64]$Y0   = [FastNoiseLite]::FastFloor($Y)
        [Int64]$Z0   = [FastNoiseLite]::FastFloor($Z)
        [Single]$Xd0 = ([Single]($X - $X0))
        [Single]$Yd0 = ([Single]($Y - $Y0))
        [Single]$Zd0 = ([Single]($Z - $Z0))
        [Single]$Xd1 = $Xd0 - 1
        [Single]$Yd1 = $Yd0 - 1
        [Single]$Zd1 = $Zd0 - 1
        [Single]$Xs  = [FastNoiseLite]::InterpQuintic($Xd0)
        [Single]$Ys  = [FastNoiseLite]::InterpQuintic($Yd0)
        [Single]$Zs  = [FastNoiseLite]::InterpQuintic($Zd0)

        $X0 *= [FastNoiseLite]::PRIMEX
        $Y0 *= [FastNoiseLite]::PRIMEY
        $Z0 *= [FastNoiseLite]::PRIMEZ

        [Int64]$X1 = $X0 + [FastNoiseLite]::PRIMEX
        [Int64]$Y1 = $Y0 + [FastNoiseLite]::PRIMEY
        [Int64]$Z1 = $Z0 + [FastNoiseLite]::PRIMEZ

        [Single]$Xf00 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::GradCoord(
                $ASeed,
                $X0, $Y0, $Z0,
                $Xd0, $Yd0, $Zd0
            ),
            [FastNoiseLite]::GradCoord(
                $ASeed,
                $X1, $Y0, $Z0,
                $Xd1, $Yd0, $Zd0
            ),
            $Xs
        )
        [Single]$Xf10 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::GradCoord(
                $ASeed,
                $X0, $Y1, $Z0,
                $Xd0, $Yd1, $Zd0
            ),
            [FastNoiseLite]::GradCoord(
                $ASeed,
                $X1, $Y1, $Z0,
                $Xd1, $Yd1, $Zd0
            ),
            $Xs
        )
        [Single]$Xf01 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::GradCoord(
                $ASeed,
                $X0, $Y0, $Z1,
                $Xd0, $Yd0, $Zd1
            ),
            [FastNoiseLite]::GradCoord(
                $ASeed,
                $X1, $Y0, $Z1,
                $Xd1, $Yd0, $Zd1
            ),
            $Xs
        )
        [Single]$Xf11 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::GradCoord(
                $ASeed,
                $X0, $Y1, $Z1,
                $Xd0, $Yd1, $Zd1
            ),
            [FastNoiseLite]::GradCoord(
                $ASeed,
                $X1, $Y1, $Z1,
                $Xd1, $Yd1, $Zd1
            ),
            $Xs
        )

        [Single]$Yf0 = [FastNoiseLite]::Lerp($Xf00, $Xf10, $Ys)
        [Single]$Yf1 = [FastNoiseLite]::Lerp($Xf01, $Xf11, $Ys)

        Return [FastNoiseLite]::Lerp($Yf0, $Yf1, $Zs) * 0.964921414852142333984375
    }

    [Single]SingleValueCubic(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y
    ) {
        [Int64]$X1  = [FastNoiseLite]::FastFloor($X)
        [Int64]$Y1  = [FastNoiseLite]::FastFloor($Y)
        [Single]$Xs = ([Single]($X - $X1))
        [Single]$Ys = ([Single]($Y - $Y1))

        $X1 *= [FastNoiseLite]::PRIMEX
        $Y1 *= [FastNoiseLite]::PRIMEY

        [Int64]$X0 = $X1 - [FastNoiseLite]::PRIMEX
        [Int64]$Y0 = $Y1 - [FastNoiseLite]::PRIMEY
        [Int64]$X2 = $X1 + [FastNoiseLite]::PRIMEX
        [Int64]$Y2 = $Y1 + [FastNoiseLite]::PRIMEY
        
        # THE FOLLOWING TWO STATEMENTS ORIGINALLY USED UNCHECKED STATEMENTS IN THE ARITHMETIC.
        # POWERSHELL DOESN'T REALLY OFFER THIS, SO A FIXED CEILING COMPENSATING CONTROL IS
        # USED (WHICH WOULD LIKELY BE THE SAME RESULT IN C# GIVEN THE BEHAVIOR OF THE UNCHECKED OPERATION,
        # SAVE THE LACK OF A THROWN EXCEPTION).
        #
        # ANOTHER SANITY CHECK HERE IS TO USE INT64 RATHER THAN INT. INT MASKS TO INT32, AND AN OVERFLOW WILL THROW
        # AN EXCEPTION IN POWERSHELL (SYSTEM.OVERFLOWEXCEPTION).
        [Int64]$X3 = $X1 + (([FastNoiseLite]::APRIMEXMULT2 -GT [Int64]::MaxValue) ? [Int64]::MaxValue : [FastNoiseLite]::APRIMEXMULT2)
        [Int64]$Y3 = $Y1 + (([FastNoiseLite]::APRIMEYMULT2 -GT [Int64]::MaxValue) ? [Int64]::MaxValue : [FastNoiseLite]::APRIMEYMULT2)

        Return [FastNoiseLite]::CubicLerp(
            [FastNoiseLite]::CubicLerp(
                [FastNoiseLite]::ValCoord($ASeed, $X0, $Y0),
                [FastNoiseLite]::ValCoord($ASeed, $X1, $Y0),
                [FastNoiseLite]::ValCoord($ASeed, $X2, $Y0),
                [FastNoiseLite]::ValCoord($ASeed, $X3, $Y0),
                $Xs
            ),
            [FastNoiseLite]::CubicLerp(
                [FastNoiseLite]::ValCoord($ASeed, $X0, $Y1),
                [FastNoiseLite]::ValCoord($ASeed, $X1, $Y1),
                [FastNoiseLite]::ValCoord($ASeed, $X2, $Y1),
                [FastNoiseLite]::ValCoord($ASeed, $X3, $Y1),
                $Xs
            ),
            [FastNoiseLite]::CubicLerp(
                [FastNoiseLite]::ValCoord($ASeed, $X0, $Y2),
                [FastNoiseLite]::ValCoord($ASeed, $X1, $Y2),
                [FastNoiseLite]::ValCoord($ASeed, $X2, $Y2),
                [FastNoiseLite]::ValCoord($ASeed, $X3, $Y2),
                $Xs
            ),
            [FastNoiseLite]::CubicLerp(
                [FastNoiseLite]::ValCoord($ASeed, $X0, $Y3),
                [FastNoiseLite]::ValCoord($ASeed, $X1, $Y3),
                [FastNoiseLite]::ValCoord($ASeed, $X2, $Y3),
                [FastNoiseLite]::ValCoord($ASeed, $X3, $Y3),
                $Xs
            ),
            $Ys
        ) * (1 / (1.5 * 1.5))
    }

    [Single]SingleValueCubic(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y,
        [Single]$Z
    ) {
        [Int64]$X1  = [FastNoiseLite]::FastFloor($X)
        [Int64]$Y1  = [FastNoiseLite]::FastFloor($Y)
        [Int64]$Z1  = [FastNoiseLite]::FastFloor($Z)
        [Single]$Xs = ([Single]($X - $X1))
        [Single]$Ys = ([Single]($Y - $Y1))
        [Single]$Zs = ([Single]($Z - $Z1))

        $X1 *= [FastNoiseLite]::PRIMEX
        $Y1 *= [FastNoiseLite]::PRIMEY
        $Z1 *= [FastNoiseLite]::PRIMEZ

        [Int64]$X0 = $X1 - [FastNoiseLite]::PRIMEX
        [Int64]$Y0 = $Y1 - [FastNoiseLite]::PRIMEY
        [Int64]$Z0 = $Z1 - [FastNoiseLite]::PRIMEZ
        [Int64]$X2 = $X1 + [FastNoiseLite]::PRIMEX
        [Int64]$Y2 = $Y1 + [FastNoiseLite]::PRIMEY
        [Int64]$Z2 = $Z1 + [FastNoiseLite]::PRIMEZ

        # THE FOLLOWING THREE STATEMENTS ORIGINALLY USED UNCHECKED STATEMENTS IN THE ARITHMETIC.
        # POWERSHELL DOESN'T REALLY OFFER THIS, SO A FIXED CEILING COMPENSATING CONTROL IS
        # USED (WHICH WOULD LIKELY BE THE SAME RESULT IN C# GIVEN THE BEHAVIOR OF THE UNCHECKED OPERATION,
        # SAVE THE LACK OF A THROWN EXCEPTION).
        #
        # ANOTHER SANITY CHECK HERE IS TO USE INT64 RATHER THAN INT. INT MASKS TO INT32, AND AN OVERFLOW WILL THROW
        # AN EXCEPTION IN POWERSHELL (SYSTEM.OVERFLOWEXCEPTION).
        [Int64]$X3 = $X1 + (([FastNoiseLite]::APRIMEXMULT2 -GT [Int64]::MaxValue) ? [Int64]::MaxValue : [FastNoiseLite]::APRIMEXMULT2)
        [Int64]$Y3 = $Y1 + (([FastNoiseLite]::APRIMEYMULT2 -GT [Int64]::MaxValue) ? [Int64]::MaxValue : [FastNoiseLite]::APRIMEYMULT2)
        [Int64]$Z3 = $Z1 + (([FastNoiseLite]::APRIMEZMULT2 -GT [Int64]::MaxValue) ? [Int64]::MaxValue : [FastNoiseLite]::APRIMEZMULT2)

        Return [FastNoiseLite]::CubicLerp(
            [FastNoiseLite]::CubicLerp(
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y0, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y0, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y0, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y0, $Z0),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y1, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y1, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y1, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y1, $Z0),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y2, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y2, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y2, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y2, $Z0),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y3, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y3, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y3, $Z0),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y3, $Z0),
                    $Xs
                ),
                $Ys
            ),
            [FastNoiseLite]::CubicLerp(
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y0, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y0, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y0, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y0, $Z1),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y1, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y1, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y1, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y1, $Z1),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y2, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y2, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y2, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y2, $Z1),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y3, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y3, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y3, $Z1),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y3, $Z1),
                    $Xs
                ),
                $Ys
            ),
            [FastNoiseLite]::CubicLerp(
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y0, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y0, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y0, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y0, $Z2),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y1, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y1, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y1, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y1, $Z2),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y2, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y2, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y2, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y2, $Z2),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y3, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y3, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y3, $Z2),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y3, $Z2),
                    $Xs
                ),
                $Ys
            ),
            [FastNoiseLite]::CubicLerp(
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y0, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y0, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y0, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y0, $Z3),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y1, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y1, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y1, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y1, $Z3),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y2, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y2, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y2, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y2, $Z3),
                    $Xs
                ),
                [FastNoiseLite]::CubicLerp(
                    [FastNoiseLite]::ValCoord($ASeed, $X0, $Y3, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X1, $Y3, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X2, $Y3, $Z3),
                    [FastNoiseLite]::ValCoord($ASeed, $X3, $Y3, $Z3),
                    $Xs
                ),
                $Ys
            ),
            $Zs
        ) * (1 / (1.5 * 1.5 * 1.5))
    }

    [Single]SingleValue(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y
    ) {
        [Int64]$X0  = [FastNoiseLite]::FastFloor($X)
        [Int64]$Y0  = [FastNoiseLite]::FastFloor($Y)
        [Single]$Xs = [FastNoiseLite]::InterpHermite(([Single]($X - $X0)))
        [Single]$Ys = [FastNoiseLite]::InterpHermite(([Single]($Y - $Y0)))

        $X0 *= [FastNoiseLite]::PRIMEX
        $Y0 *= [FastNoiseLite]::PRIMEY

        [Int64]$X1 = $X0 + [FastNoiseLite]::PRIMEX
        [Int64]$Y1 = $Y0 + [FastNoiseLite]::PRIMEY

        [Single]$Xf0 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::ValCoord($ASeed, $X0, $Y0),
            [FastNoiseLite]::ValCoord($ASeed, $X1, $Y0),
            $Xs
        )
        [Single]$Xf1 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::ValCoord($ASeed, $X0, $Y1),
            [FastNoiseLite]::ValCoord($ASeed, $X1, $Y1),
            $Xs
        )

        Return [FastNoiseLite]::Lerp($Xf0, $Xf1, $Ys)
    }

    [Single]SingleValue(
        [Int64]$ASeed,
        [Single]$X,
        [Single]$Y,
        [Single]$Z
    ) {
        [Int64]$X0  = [FastNoiseLite]::FastFloor($X)
        [Int64]$Y0  = [FastNoiseLite]::FastFloor($Y)
        [Int64]$Z0  = [FastNoiseLite]::FastFloor($Z)
        [Single]$Xs = [FastNoiseLite]::InterpHermite(([Single]($X - $X0)))
        [Single]$Ys = [FastNoiseLite]::InterpHermite(([Single]($Y - $Y0)))
        [Single]$Zs = [FastNoiseLite]::InterpHermite(([Single]($Z - $Z0)))

        $X0 *= [FastNoiseLite]::PRIMEX
        $Y0 *= [FastNoiseLite]::PRIMEY
        $Z0 *= [FastNoiseLite]::PRIMEZ

        [Int64]$X1 = $X0 + [FastNoiseLite]::PRIMEX
        [Int64]$Y1 = $Y0 + [FastNoiseLite]::PRIMEY
        [Int64]$Z1 = $Z0 + [FastNoiseLite]::PRIMEZ

        [Single]$Xf00 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::ValCoord($ASeed, $X0, $Y0, $Z0),
            [FastNoiseLite]::ValCoord($ASeed, $X1, $Y0, $Z0),
            $Xs
        )
        [Single]$Xf10 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::ValCoord($ASeed, $X0, $Y1, $Z0),
            [FastNoiseLite]::ValCoord($ASeed, $X1, $Y1, $Z0),
            $Xs
        )
        [Single]$Xf01 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::ValCoord($ASeed, $X0, $Y0, $Z1),
            [FastNoiseLite]::ValCoord($ASeed, $X1, $Y0, $Z1),
            $Xs
        )
        [Single]$Xf11 = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::ValCoord($ASeed, $X0, $Y1, $Z1),
            [FastNoiseLite]::ValCoord($ASeed, $X1, $Y1, $Z1),
            $Xs
        )

        [Single]$Yf0 = [FastNoiseLite]::Lerp($Xf00, $Xf10, $Ys)
        [Single]$Yf1 = [FastNoiseLite]::Lerp($Xf01, $Xf11, $Ys)

        Return [FastNoiseLite]::Lerp($Yf0, $Yf1, $Zs)
    }

    [Void]DoSingleDomainWarp(
        [Int64]$ASeed,
        [Single]$Amp,
        [Single]$Freq,
        [Single]$X,
        [Single]$Y,
        [Ref]$Xr,
        [Ref]$Yr

    ) {
        Switch($this.DomainWarpType) {
            ([FnlDomainWarpType]::OpenSimplex2) {
                $this.SingleDomainWarpOpenSimplex2Gradient($ASeed, $Amp * [FastNoiseLite]::SIMPLEXVALMODA_MAGIC, $Freq, $X, $Y, $Xr, $Yr, $false)

                Break
            }

            ([FnlDomainWarpType]::OpenSimplex2Reduced) {
                $this.SingleDomainWarpSimplexGradient($ASeed, $Amp * 16.0, $Freq, $X, $Y, $Xr, $Yr, $true)

                Break
            }

            ([FnlDomainWarpType]::BasicGrid) {
                $this.SingleDomainWarpBasicGrid($ASeed, $Amp, $Freq, $X, $Y, $Xr, $Yr)

                Break
            }

            Default {
                Break
            }
        }
    }

    [Void]DoSingleDomainWarp(
        [Int64]$ASeed,
        [Single]$Amp,
        [Single]$Freq,
        [Single]$X,
        [Single]$Y,
        [Single]$Z,
        [Ref]$Xr,
        [Ref]$Yr,
        [Ref]$Zr
    ) {
        Switch($this.DomainWarpType) {
            ([FnlDomainWarpType]::OpenSimplex2) {
                $this.SingleDomainWarpOpenSimplex2Gradient($ASeed, $Amp * [FastNoiseLite]::SIMPLEXVALMODA_MAGIC, $Freq, $X, $Y, $Z, $Xr, $Yr, $Zr, $false)

                Break
            }

            ([FnlDomainWarpType]::OpenSimplex2Reduced) {
                $this.SingleDomainWarpOpenSimplex2Gradient($ASeed, $Amp * 7.71604938271605, $Freq, $X, $Y, $Z, $Xr, $Yr, $Zr, $true)

                Break
            }

            ([FnlDomainWarpType]::BasicGrid) {
                $this.SingleDomainWarpBasicGrid($ASeed, $Amp, $Freq, $X, $Y, $Z, $Xr, $Yr, $Zr)

                Break
            }

            Default {
                Break
            }
        }
    }

    [Void]DomainWarpSingle(
        [Ref]$X,
        [Ref]$Y
    ) {
        [Int64]$ASeed = $this.Seed
        [Single]$Amp  = $this.DomainWarpAmp * $this.FractalBounding
        [Single]$Freq = $this.Frequency
        [Single]$Xs   = $X.Value
        [Single]$Ys   = $Y.Value

        $this.TransformDomainWarpCoordinate(([Ref]$Xs), ([Ref]$Ys))
        $this.DoSingleDomainWarp($ASeed, $Amp, $Freq, $Xs, $Ys, $X, $Y)
    }

    [Void]DomainWarpSingle(
        [Ref]$X,
        [Ref]$Y,
        [Ref]$Z
    ) {
        [Int64]$ASeed = $this.Seed
        [Single]$Amp  = $this.DomainWarpAmp * $this.FractalBounding
        [Single]$Freq = $this.Frequency
        [Single]$Xs   = $X.Value
        [Single]$Ys   = $Y.Value
        [Single]$Zs   = $Z.Value

        $this.TransformDomainWarpCoordinate(([Ref]$Xs), ([Ref]$Ys), ([Ref]$Zs))
        $this.DoSingleDomainWarp($ASeed, $Amp, $Freq, $Xs, $Ys, $Zs, $X, $Y, $Z)
    }

    [Void]DomainWarpFractalProgressive(
        [Ref]$X,
        [Ref]$Y
    ) {
        [Int64]$Aseed = $this.Seed
        [Single]$Amp  = $this.DomainWarpAmp * $this.FractalBounding
        [Single]$Freq = $this.Frequency

        For([Int64]$I = 0; $I -LT $this.Octaves; $I++) {
            [Single]$Xs = $X.Value
            [Single]$Ys = $Y.Value

            $this.TransformDomainWarpCoordinate(([Ref]$Xs), ([Ref]$Ys))
            $this.DoSingleDomainWarp($ASeed, $Amp, $Freq, $Xs, $Ys, $X, $Y)

            $ASeed++
            $Amp  *= $this.Gain
            $Freq *= $this.Lacunarity
        }
    }

    [Void]DomainWarpFractalProgressive(
        [Ref]$X,
        [Ref]$Y,
        [Ref]$Z
    ) {
        [Int64]$ASeed = $this.Seed
        [Single]$Amp  = $this.DomainWarpAmp * $this.FractalBounding
        [Single]$Freq = $this.Frequency

        For([Int64]$I = 0; $I -LT $this.Octaves; $I++) {
            [Single]$Xs = $X.Value
            [Single]$Ys = $Y.Value
            [Single]$Zs = $Z.Value

            $this.TransformDomainWarpCoordinate(([Ref]$Xs), ([Ref]$Ys), ([Ref]$Zs))
            $this.DoSingleDomainWarp($ASeed, $Amp, $Freq, $Xs, $Ys, $Zs, $X, $Y, $Z)

            $ASeed++
            $Amp  *= $this.Gain
            $Freq *= $this.Lacunarity
        }
    }

    [Void]DomainWarpFractalIndependent(
        [Ref]$X,
        [Ref]$Y
    ) {
        [Int64]$ASeed = $this.Seed
        [Single]$Xs   = $X.Value
        [Single]$Ys   = $Y.Value
        [Single]$Amp  = $this.DomainWarpAmp * $this.FractalBounding
        [Single]$Freq = $this.Frequency

        $this.TransformDomainWarpCoordinate(([Ref]$Xs), ([Ref]$Ys))

        For([Int64]$I = 0; $I -LT $this.Octaves; $I++) {
            $this.DoSingleDomainWarp($ASeed, $Amp, $Freq, $Xs, $Ys, $X, $Y)

            $ASeed++
            $Amp  *= $this.Gain
            $Freq *= $this.Lacunarity
        }
    }

    [Void]DomainWarpFractalIndependent(
        [Ref]$X,
        [Ref]$Y,
        [Ref]$Z
    ) {
        [Int64]$ASeed = $this.Seed
        [Single]$Xs   = $X.Value
        [Single]$Ys   = $Y.Value
        [Single]$Zs   = $Z.Value
        [Single]$Amp  = $this.DomainWarpAmp * $this.FractalBounding
        [Single]$Freq = $this.Frequency

        $this.TransformDomainWarpCoordinate(([Ref]$Xs), ([Ref]$Ys), ([Ref]$Zs))

        For([Int64]$I = 0; $I -LT $this.Octaves; $I++) {
            $this.DoSingleDomainWarp($ASeed, $Amp, $Freq, $Xs, $Ys, $Zs, $X, $Y, $Z)

            $ASeed++
            $Amp  *= $this.Gain
            $Freq *= $this.Lacunarity
        }
    }

    [Void]SingleDomainWarpBasicGrid(
        [Int64]$ASeed,
        [Single]$WarpAmp,
        [Single]$AFrequency,
        [Single]$X,
        [Single]$Y,
        [Ref]$Xr,
        [Ref]$Yr
    ) {
        [Single]$Xf = $X * $AFrequency
        [Single]$Yf = $Y * $AFrequency
        [Int64]$X0  = [FastNoiseLite]::FastFloor($Xf)
        [Int64]$Y0  = [FastNoiseLite]::FastFloor($Yf)
        [Single]$Xs = [FastNoiseLite]::InterpHermite(([Single]($Xf - $X0)))
        [Single]$Ys = [FastNoiseLite]::InterpHermite(([Single]($Yf - $Y0)))

        $X0 *= [FastNoiseLite]::PRIMEX
        $Y0 *= [FastNoiseLite]::PRIMEY

        [Int64]$X1    = $X0 + [FastNoiseLite]::PRIMEX
        [Int64]$Y1    = $Y0 + [FastNoiseLite]::PRIMEY
        [Int64]$Hash0 = [FastNoiseLite]::Hash($ASeed, $X0, $Y0) -BAND (255 -SHL 1)
        [Int64]$Hash1 = [FastNoiseLite]::Hash($ASeed, $X1, $Y1) -BAND (255 -SHL 1)

        [Single]$Lx0x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS2D[$Hash0],
            [FastNoiseLite]::RANDVECS2D[$Hash1],
            $Xs
        )
        [Single]$Ly0x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS2D[$Hash0 -BOR 1],
            [FastNoiseLite]::RANDVECS2D[$Hash1 -BOR 1],
            $Xs
        )

        $Hash0 = [FastNoiseLite]::Hash($ASeed, $X0, $Y1) -BAND (255 -SHL 1)
        $Hash1 = [FastNoiseLite]::Hash($Aseed, $X1, $Y1) -BAND (255 -SHL 1)

        [Single]$Lx1x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS2D[$Hash0],
            [FastNoiseLite]::RANDVECS2D[$Hash1],
            $Xs
        )
        [Single]$Ly1x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS2D[$Hash0 -BOR 1],
            [FastNoiseLite]::RANDVECS2D[$Hash1 -BOR 1],
            $Xs
        )

        $Xr.Value += [FastNoiseLite]::Lerp($Lx0x, $Lx1x, $Ys) * $WarpAmp
        $Yr.Value += [FastNoiseLite]::Lerp($Ly0x, $Ly1x, $Ys) * $WarpAmp
    }

    [Void]SingleDomainWarpBasicGrid(
        [Int64]$ASeed,
        [Single]$WarpAmp,
        [Single]$AFrequency,
        [Single]$X,
        [Single]$Y,
        [Single]$Z,
        [Ref]$Xr,
        [Ref]$Yr,
        [Ref]$Zr
    ) {
        [Single]$Xf = $X * $AFrequency
        [Single]$Yf = $Y * $AFrequency
        [Single]$Zf = $Z * $AFrequency
        [Int64]$X0  = [FastNoiseLite]::FastFloor($Xf)
        [Int64]$Y0  = [FastNoiseLite]::FastFloor($Yf)
        [Int64]$Z0  = [FastNoiseLite]::FastFloor($Zf)
        [Single]$Xs = [FastNoiseLite]::InterpHermite(([Single]($Xf - $X0)))
        [Single]$Ys = [FastNoiseLite]::InterpHermite(([Single]($Yf - $Y0)))
        [Single]$Zs = [FastNoiseLite]::InterpHermite(([Single]($Zf - $Z0)))

        $X0 *= [FastNoiseLite]::PRIMEX
        $Y0 *= [FastNoiseLite]::PRIMEY
        $Z0 *= [FastNoiseLite]::PRIMEZ

        [Int64]$X1    = $X0 + [FastNoiseLite]::PRIMEX
        [Int64]$Y1    = $Y0 + [FastNoiseLite]::PRIMEY
        [Int64]$Z1    = $Z0 + [FastNoiseLite]::PRIMEZ
        [Int64]$Hash0 = [FastNoiseLite]::Hash($ASeed, $X0, $Y0, $Z0) -BAND (255 -SHL 2)
        [Int64]$Hash1 = [FastNoiseLite]::Hash($ASeed, $X1, $Y0, $Z0) -BAND (255 -SHL 2)

        [Single]$Lx0x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0],
            [FastNoiseLite]::RANDVECS3D[$Hash1],
            $Xs
        )
        [Single]$Ly0x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0 -BOR 1],
            [FastNoiseLite]::RANDVECS3D[$Hash1 -BOR 1],
            $Xs
        )
        [Single]$Lz0x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0 -BOR 2],
            [FastNoiseLite]::RANDVECS3D[$Hash1 -BOR 2],
            $Xs
        )

        $Hash0 = [FastNoiseLite]::Hash($ASeed, $X0, $Y1, $Z0) -BAND (255 -SHL 2)
        $Hash1 = [FastNoiseLite]::Hash($Aseed, $X1, $Y1, $Z0) -BAND (255 -SHL 2)

        [Single]$Lx1x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0],
            [FastNoiseLite]::RANDVECS3D[$Hash1],
            $Xs
        )
        [Single]$Ly1x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0 -BOR 1],
            [FastNoiseLite]::RANDVECS3D[$Hash1 -BOR 1],
            $Xs
        )
        [Single]$Lz1x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0 -BOR 2],
            [FastNoiseLite]::RANDVECS3D[$Hash1 -BOR 2],
            $Xs
        )

        [Single]$Lx0y = [FastNoiseLite]::Lerp($Lx0x, $Lx1x, $Ys)
        [Single]$Ly0y = [FastNoiseLite]::Lerp($Ly0x, $Ly1x, $Ys)
        [Single]$Lz0y = [FastNoiseLite]::Lerp($Lz0x, $Lz1x, $Ys)

        $Hash0 = [FastNoiseLite]::Hash($ASeed, $X0, $Y0, $Z1) -BAND (255 -SHL 2)
        $Hash1 = [FastNoiseLite]::Hash($ASeed, $X1, $Y0, $Z1) -BAND (255 -SHL 2)

        $Lx0x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0],
            [FastNoiseLite]::RANDVECS3D[$Hash1],
            $Xs
        )
        $Ly0x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0 -BOR 1],
            [FastNoiseLite]::RANDVECS3D[$Hash1 -BOR 1],
            $Xs
        )
        $Lz0x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0 -BOR 2],
            [FastNoiseLite]::RANDVECS3D[$Hash1 -BOR 2],
            $Xs
        )

        $Hash0 = [FastNoiseLite]::Hash($ASeed, $X0, $Y1, $Z1) -BAND (255 -SHL 2)
        $Hash1 = [FastNoiseLite]::Hash($ASeed, $X1, $Y1, $Z1) -BAND (255 -SHL 2)

        $Lx1x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0],
            [FastNoiseLite]::RANDVECS3D[$Hash1],
            $Xs
        )
        $Ly1x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0 -BOR 1],
            [FastNoiseLite]::RANDVECS3D[$Hash0 -BOR 1],
            $Xs
        )
        $Lz1x = [FastNoiseLite]::Lerp(
            [FastNoiseLite]::RANDVECS3D[$Hash0 -BOR 2],
            [FastNoiseLite]::RANDVECS3D[$Hash1 -BOR 2],
            $Xs
        )

        $Xr.Value += [FastNoiseLite]::Lerp(
            $Lx0y,
            [FastNoiseLite]::Lerp(
                $Lx0x,
                $Lx1x,
                $Ys
            ),
            $Zs
        ) * $WarpAmp
        $Yr.Value += [FastNoiseLite]::Lerp(
            $Ly0y,
            [FastNoiseLite]::Lerp(
                $Ly0x,
                $Ly1x,
                $Ys
            ),
            $Zs
        ) * $WarpAmp
        $Zr.Value += [FastNoiseLite]::Lerp(
            $Lz0y,
            [FastNoiseLite]::Lerp(
                $Ly0x,
                $Lz1x,
                $Ys
            ),
            $Zs
        ) * $WarpAmp
    }

    [Void]SingleDomainWarpSimplexGradient(
        [Int64]$ASeed,
        [Single]$WarpAmp,
        [Single]$AFrequency,
        [Single]$X,
        [Single]$Y,
        [Ref]$Xr,
        [Ref]$Yr,
        [Boolean]$OutGradOnly
    ) {
        [Single]$G2   = (3 - [FastNoiseLite]::SQRT3) / 6
        [Single]$G2m1 = $G2 - 1
        [Single]$G2a1 = 1 - 2 * $G2

        $X *= $AFrequency
        $Y *= $AFrequency

        [Int64]$I   = [FastNoiseLite]::FastFloor($X)
        [Int64]$J   = [FastNoiseLite]::FastFloor($Y)
        [Single]$Xi = ([Single]($X - $I))
        [Single]$Yi = ([Single]($Y - $J))
        [Single]$T  = ($Xi + $Yi) * $G2
        [Single]$X0 = $Xi - $T
        [Single]$Y0 = $Yi - $T

        $I *= [FastNoiseLite]::PRIMEX
        $J *= [FastNoiseLite]::PRIMEY

        [Single]$Vx = 0
        [Single]$Vy = 0
        [Single]$A  = 0.5 - $X0 * $X0 - $Y0 * $Y0
        [Single]$A2 = $A * $A

        If($A -GT 0) {
            [Single]$Aaaa = $A2 * $A2
            [Single]$Xo   = 0
            [Single]$Yo   = 0

            If($OutGradOnly -EQ $true) {
                [FastNoiseLite]::GradCoordOut($ASeed, $I, $J, ([Ref]$Xo), ([Ref]$Yo))
            } Else {
                [FastNoiseLite]::GradCoordDual($ASeed, $I, $J, $X0, $Y0, ([Ref]$Xo), ([Ref]$Yo))
            }
            $Vx += $Aaaa * $Xo
            $Vy += $Aaaa * $Yo
        }

        [Single]$C = ([Single](
            2 * $G2a1 * (1 / $G2 - 2)) * $T +
            ([Single](-2 * $G2a1 * $G2a1) + $A)
        )
        [Single]$C2 = $C * $C

        If($C -GT 0) {
            [Single]$X2   = $X0 + (2 * $G2m1)
            [Single]$Y2   = $Y0 + (2 * $G2m1)
            [Single]$Cccc = $C2 * $C2
            [Single]$Xo   = 0
            [Single]$Yo   = 0

            If($OutGradOnly -EQ $true) {
                [FastNoiseLite]::GradCoordOut($ASeed, $I + [FastNoiseLite]::PRIMEX, $J + [FastNoiseLite]::PRIMEY, ([Ref]$Xo), ([Ref]$Yo))
            } Else {
                [FastNoiseLite]::GradCoordDual($ASeed, $I + [FastNoiseLite]::PRIMEX, $J + [FastNoiseLite]::PRIMEY, $X2, $Y2, ([Ref]$Xo), ([Ref]$Yo))
            }

            $Vx += $Cccc * $Xo
            $Vy += $Cccc * $Yo
        }

        If($Y0 -GT $X0) {
            [Single]$X1 = $X0 + $G2
            [Single]$Y1 = $Y0 + $G2m1
            [Single]$B  = 0.5 - $X1 * $X1 - $Y1 * $Y1
            [Single]$B2 = $B * $B

            If($B -GT 0) {
                [Single]$Bbbb = $B2 * $B2
                [Single]$Xo   = 0
                [Single]$Yo   = 0

                If($OutGradOnly -EQ $true) {
                    [FastNoiseLite]::GradCoordOut($ASeed, $I, $J + [FastNoiseLite]::PRIMEY, ([Ref]$Xo), ([Ref]$Yo))
                } Else {
                    [FastNoiseLite]::GradCoordDual($ASeed, $I, $J + [FastNoiseLite]::PRIMEY, $X1, $Y1, ([Ref]$Xo), ([Ref]$Yo))
                }

                $Vx += $Bbbb * $Xo
                $Vy += $Bbbb * $Yo
            }
        } Else {
            [Single]$X1 = $X0 + $G2m1
            [Single]$Y1 = $Y0 + $G2
            [Single]$B  = 0.5 - $X1 * $X1 - $Y1 * $Y1
            [Single]$B2 = $B * $B

            If($B -GT 0) {
                [Single]$Bbbb = $B2 * $B2
                [Single]$Xo   = 0
                [Single]$Yo   = 0

                If($OutGradOnly -EQ $true) {
                    [FastNoiseLite]::GradCoordOut($ASeed, $I + [FastNoiseLite]::PRIMEX, $J, ([Ref]$Xo), ([Ref]$Yo))
                } Else {
                    [FastNoiseLite]::GradCoordDual($ASeed, $I + [FastNoiseLite]::PRIMEX, $J, $X1, $Y1, ([Ref]$Xo), ([Ref]$Yo))
                }

                $Vx += $Bbbb * $Xo
                $Vy += $Bbbb * $Yo
            }
        }

        $Xr.Value += $Vx * $WarpAmp
        $Yr.Value += $Vy * $WarpAmp
    }

    [Void]SingleDomainWarpOpenSimplex2Gradient(
        [Int64]$ASeed,
        [Single]$WarpAmp,
        [Single]$AFrequency,
        [Single]$X,
        [Single]$Y,
        [Single]$Z,
        [Ref]$Xr,
        [Ref]$Yr,
        [Ref]$Zr,
        [Boolean]$OutGradOnly
    ) {
        $X *= $AFrequency
        $Y *= $AFrequency
        $Z *= $AFrequency

        [Int64]$I      = [FastNoiseLite]::FastRound($X)
        [Int64]$J      = [FastNoiseLite]::FastRound($Y)
        [Int64]$K      = [FastNoiseLite]::FastRound($Z)
        [Single]$X0    = ([Single]($X - $I))
        [Single]$Y0    = ([Single]($Y - $J))
        [Single]$Z0    = ([Single]($Z - $K))
        [Int64]$XNSign = ([Int64](-$X0 - 1) -BOR 1)
        [Int64]$YNSign = ([Int64](-$Y0 - 1) -BOR 1)
        [Int64]$ZNSign = ([Int64](-$Z0 - 1) -BOR 1)
        [Single]$Ax0   = $XNSign * -$X0
        [Single]$Ay0   = $YNSign * -$Y0
        [Single]$Az0   = $ZNSign * -$Z0

        $I *= [FastNoiseLite]::PRIMEX
        $J *= [FastNoiseLite]::PRIMEY
        $K *= [FastNoiseLite]::PRIMEZ

        [Single]$Vx = 0
        [Single]$Vy = 0
        [Single]$Vz = 0
        [Single]$A  = (0.6 - $X0 * $X0)- ($Y0 * $Y0 + $Z0 * $Z0)
        [Single]$A2 = $A * $A

        For([Int64]$L = 0; ; $L++) {
            If($A -GT 0) {
                [Single]$Aaaa = $A2 * $A2
                [Single]$Xo   = 0
                [Single]$Yo   = 0
                [Single]$Zo   = 0

                If($OutGradOnly -EQ $true) {
                    [FastNoiseLite]::GradCoordOut($ASeed, $I, $J, $K, ([Ref]$Xo), ([Ref]$Yo), ([Ref]$Zo))
                } Else {
                    [FastNoiseLite]::GradCoordDual($ASeed, $I, $J, $K, $X0, $Y0, $Z0, ([Ref]$Xo), ([Ref]$Yo), ([Ref]$Zo))
                }

                $Vx += $Aaaa * $Xo
                $Vy += $Aaaa * $Yo
                $Vz += $Aaaa * $Zo
            }

            [Int64]$I1  = $I
            [Int64]$J1  = $J
            [Int64]$K1  = $K
            [Single]$B  = $A
            [Single]$B2 = $B * $B
            [Single]$X1 = $X0
            [Single]$Y1 = $Y0
            [Single]$Z1 = $Z0

            If($Ax0 -GE $Ay0 -AND $Ax0 -GE $Az0) {
                $X1 += $XNSign
                $B  += $Ax0 + $Ax0
                $I1 -= $XNSign + [FastNoiseLite]::PRIMEX
            } Elseif($Ay0 -GT $Ax0 -AND $Ay0 -GE $Az0) {
                $Y1 += $YNSign
                $B  += $Ay0 + $Ay0
                $J1 -= $YNSign * [FastNoiseLite]::PRIMEY
            } Else {
                $Z1 += $ZNSign
                $B  += $Az0 + $Az0
                $K1 -= $ZNSign * [FastNoiseLite]::PRIMEZ
            }

            If($B -GT 1) {
                $B -= 1

                [Single]$Bbbb = $B2 * $B2
                [Single]$Xo   = 0
                [Single]$Yo   = 0
                [Single]$Zo   = 0

                If($OutGradOnly -EQ $true) {
                    [FastNoiseLite]::GradCoordOut($ASeed, $I, $J, $K, ([Ref]$Xo), ([Ref]$Yo), ([Ref]$Zo))
                } Else {
                    [FastNoiseLite]::GradCoordDual($ASeed, $I1, $J1, $K1, $X1, $Y1, $Z1, ([Ref]$Xo), ([Ref]$Yo), ([Ref]$Zo))
                }

                $Vx += $Bbbb * $Xo
                $Vy += $Bbbb * $Yo
                $Vz += $Bbbb * $Zo
            }

            If($L -EQ 1) {
                Break
            }

            $Ax0     = 0.5 - $Ax0
            $Ay0     = 0.5 - $Ay0
            $Az0     = 0.5 - $Az0
            $X0      = $XNSign * $Ax0
            $Y0      = $YNSign * $Ay0
            $Z0      = $ZNSign * $Az0
            $A      += (0.75 - $Ax0) - ($Ay0 + $Az0)
            $I      += ($XNSign -SHR 1) -BAND [FastNoiseLite]::PRIMEX
            $J      += ($YNSign -SHR 1) -BAND [FastNoiseLite]::PRIMEY
            $K      += ($ZNSign -SHR 1) -BAND [FastNoiseLite]::PRIMEZ
            $XNSign  = -$XNSign
            $YNSign  = -$YNSign
            $ZNSign  = -$ZNSign
            $ASeed  += [FastNoiseLite]::SEEDADD_MAGIC
        }

        $Xr.Value += $Vx * $WarpAmp
        $Yr.Value += $Vy * $WarpAmp
        $Zr.Value += $Vz * $WarpAmp
    }
}

#endregion





#region Buffer Support

###############################################################################
#
# BUFFER MANAGER CLASS
#
# MANAGES A SET OF BUFFER STORES TO KEEP THE STATE OF THE GAME BUFFER IN.
#
###############################################################################
Class BufferManager {
    [BufferCell[,]]$ScreenBufferA
    [BufferCell[,]]$ScreenBufferB

    BufferManager() {
        $this.ScreenBufferA = New-Object 'BufferCell[,]' 80, 80
        $this.ScreenBufferB = New-Object 'BufferCell[,]' 80, 80
    }

    [Void]CopyActiveToBufferA() {
        $this.ScreenBufferA = $Script:Rui.GetBufferContents([Rectangle]::new(0, 0, 80, 80))
    }

    [Void]CopyActiveToBufferAWithWipe() {
        $this.ScreenBufferA = $Script:Rui.GetBufferContents([Rectangle]::new(0, 0, 80, 80))
        Clear-Host
    }

    [Void]CopyActiveToBufferB() {
        $this.ScreenBufferB = $Script:Rui.GetBufferContents([Rectangle]::new(0, 0, 80, 80))
    }

    [Void]CopyActiveToBufferBWithWipe() {
        $this.ScreenBufferB = $Script:Rui.GetBufferContents([Rectangle]::new(0, 0, 80, 80))
        Clear-Host
    }

    [Void]SwapAToB() {
        $this.ScreenBufferB = $this.ScreenBufferA
    }

    [Void]SwapBToA() {
        $this.ScreenBufferA = $this.ScreenBufferB
    }

    [Void]RestoreBufferAToActive() {
        Clear-Host
        $Script:Rui.SetBufferContents([Coordinates]::new(0, 0), $this.ScreenBufferA)
        $this.ScreenBufferA = New-Object 'BufferCell[,]' 80, 80
    }

    [Void]RestoreBufferBToActive() {
        Clear-Host
        $Script:Rui.SetBufferContents([Coordinates]::new(0, 0), $this.ScreenBufferB)
        $this.ScreenBufferB = New-Object 'BufferCell[,]' 80, 80
    }
}

#endregion





#region UI

###############################################################################
#
# UIE CONTAINER
#
# THE ROOT CONTAINER FOR ANY UI ELEMENT.
#
###############################################################################
Class UIEContainer {
    [ATCoordinates]$LeftTop
    [ATCoordinates]$RightBottom
    [Int]$Width
    [Int]$Height
    [Stack[UIEContainer]]$Children
    [UIELayout]$Layout

    UIEContainer() {
        $this.LeftTop     = [ATCoordinates]::new()
        $this.RightBottom = [ATCoordinates]::new()
        $this.Width       = 0
        $this.Height      = 0
        $this.Children    = [Stack[UIEContainer]]::new()
        $this.Layout      = [UIELayout]::Vertical
    }

    [Void]UpdateDimensions() {
        If($this.Children.Count -EQ 0) {
            $this.Width  = $this.LeftTop.Column + $this.RightBottom.Column
            $this.Height = $this.LeftTop.Row + $this.RightBottom.Row
        } Else {
            $this.Width  = 0
            $this.Height = 0
    
            Foreach($Child in $this.Children) {
                $this.Width  += $Child.Width
                $this.Height += $Child.Height
            }
        }
    }

    [Void]PushChild(
        [UIEContainer]$Child
    ) {
        If($null -EQ $Child) {
            # PROBABLY SHOULD DO SOMETHING A LITTLE DIFFERENT HERE, BUT WHATEVER
            Return
        }

        Switch($this.Layout) {
            ([UIELayout]::Horizontal) {
                If($this.Children.Count -GT 1) {
                    [UIEContainer]$Top = $this.Children.Peek()

                    $Child.LeftTop.Column = $Top.RightBottom.Column + 2
                    $Child.LeftTop.Row    = $Top.LeftTop.Row

                    $this.Children.Push($Child)
                    $this.UpdateDimensions()
                } Else {
                    $this.Children.Push($Child)
                    $this.UpdateDimensions()
                }
            }

            ([UIELayout]::Vertical) {
                If($this.Children.Count -GT 1) {
                    [UIEContainer]$Top = $this.Children.Peek()

                    # THIS PADDING CALCULATION MIGHT NEED ADJUSTED
                    $Child.LeftTop.Row = $Top.RightBottom.Row + 2

                    # ALIGN LEFT TO THE ABOVE CONTAINER
                    $Child.LeftTop.Column = $Top.LeftTop.Column

                    $this.Children.Push($Child)

                    $this.UpdateDimensions()
                } Else {
                    $this.Children.Push($Child)
                    $this.UpdateDimensions()
                }
            }

            Default {}
        }
    }
}





###############################################################################
#
# WINDOW BASE
#
# INTENDED TO BE USED AS THE FOUNDATION FOR MORE SPECIFIC "WINDOWS". THIS CLASS
# ISN'T INTENDED TO BE INSTANTIATED DIRECTLY FOR ANY REASON OTHER THAN TESTING.
#
# THE VERSION SHOWN HERE IS DERIVED FROM BURNT LATTE. IT EXTENDS THE ORIGINAL
# DESIGN BY ADDING SUPPORT FOR INDEPENDENT LEFT AND RIGHT BORDER CHARACTERS,
# AS WELL AS ADDING A TITLE. LEGACY DERIVED CLASSES WILL BE REQUIRED TO CHANGE
# CERTAIN INITIALIZATION PROCESSES TO FACILITATE DERIVATION FROM THIS VERSION.
#
# THE INCLUSION OF THE SECONDARY CONSTRUCTOR IS FOR POSTERITY. IT'S CURRENTLY
# UNCLEAR IF THIS CONSTRUCTOR IS USED. THIS SHOULD BE CLEANED UP LATER.
#
# NEWER ADDITIONS TO THIS CODE ARE INTENDED TO ADD CORNER CHARACTERS TO THE
# SPEC. THIS IS A DERIVATIVE OF PWSHSPECTRECONSOLE (THANKS TO TRACKD FOR THIS).
# I WASN'T DOING THIS ORIGINALLY, AND IT SEEMS LIKE IT MAY GIVE A BIT OF A
# BETTER VISUAL EXPERIENCE, ESPCIALLY SINCE I MAY NOT BE ABLE TO USE SAID
# LIBRARY TO RENDER THE GAME AFTER TALKING WITH HIM.
#
###############################################################################
Class WindowBase {
    [ATCoordinates]$LeftTop
    [ATCoordinates]$RightBottom
    [ConsoleColor24[]]$BorderDrawColors
    [Boolean[]]$BorderDrawDirty
    [Int]$Width
    [Int]$Height

    [String]$Title
    [Boolean]$UseTitle
    [Boolean]$TitleDirty
    [Boolean]$ComplexTitle
    [ConsoleColor24]$TitleColor

    WindowBase() {
        $this.LeftTop          = [ATCoordinatesNone]::new()
        $this.RightBottom      = [ATCoordinatesNone]::new()
        $this.BorderDrawColors = [ConsoleColor24[]](
            [CCWindowBorderDefault24]::new(),
            [CCWindowBorderDefault24]::new(),
            [CCWindowBorderDefault24]::new(),
            [CCWindowBorderDefault24]::new(),
            [CCWindowBorderDefault24]::new(),
            [CCWindowBorderDefault24]::new(),
            [CCWindowBorderDefault24]::new(),
            [CCWindowBorderDefault24]::new()
        )
        $this.BorderDrawDirty = [Boolean[]](
            $true,
            $true,
            $true,
            $true
        )
        $this.Title        = ''
        $this.UseTitle     = $false
        $this.TitleDirty   = $false
        $this.ComplexTitle = $false
        $this.TitleColor   = [CCTextDefault24]::new()
        $this.UpdateDimensions()
    }

    [Void]Draw() {
        [ATStringComposite]$Bt = [ATStringComposite]::new()
        [ATStringComposite]$Bb = [ATStringComposite]::new()
        [ATStringComposite]$Bl = [ATStringComposite]::new()
        [ATStringComposite]$Br = [ATStringComposite]::new()

        If($this.BorderDrawDirty[[WindowBorderPart]::Top] -EQ $true) {
            $Bt = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $this.BorderDrawColors[[WindowBorderPart]::LeftTop]
                        Coordinates     = $this.LeftTop
                    }
                    UserData = $($Script:CurrentWindowDesign[[WindowBorderPart]::LeftTop])
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $this.BorderDrawColors[[WindowBorderPart]::Top]
                    }

                    # I HAVE OFFICIALLY COMMITTED THE CARDINAL SIN OF MULTIPLYING A STRING WITH AN INTEGER
                    # TO REPEAT INLINE.
                    # FUCK ME. FUCK ME. FUCK ME.
                    UserData = $($Script:CurrentWindowDesign[[WindowBorderPart]::Top] * ($this.Width - 1))
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $this.BorderDrawColors[[WindowBorderPart]::RightTop]
                    }
                    UserData   = $($Script:CurrentWindowDesign[[WindowBorderPart]::RightTop])
                    UseATReset = $true
                }
            ))
            $this.BorderDrawDirty[[WindowBorderPartDirty]::Top] = $false
        }

        If($this.BorderDrawDirty[[WindowBorderPartDirty]::Bottom] -EQ $true) {
            $Bb = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $this.BorderDrawColors[[WindowBorderPart]::LeftBottom]
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.RightBottom.Row
                            Column = $this.LeftTop.Column
                        }
                    }
                    UserData = $($Script:CurrentWindowDesign[[WindowBorderPart]::LeftBottom])
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $this.BorderDrawColors[[WindowBorderPart]::Bottom]
                    }
                    UserData = $($Script:CurrentWindowDesign[[WindowBorderPart]::Bottom] * ($this.Width - 1))
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $this.BorderDrawColors[[WindowBorderPart]::RightBottom]
                    }
                    UserData   = $($Script:CurrentWindowDesign[[WindowBorderPart]::RightBottom])
                    UseATReset = $true
                }
            ))
            $this.BorderDrawDirty[[WindowBorderPartDirty]::Bottom] = $false
        }

        If($this.BorderDrawDirty[[WindowBorderPartDirty]::Left] -EQ $true) {
            # THE CORNERS WILL ALREADY HAVE BEEN DRAWN AT THIS POINT, SO WE JUST NEED TO REPEAT THE LEFT CHARACTER VERTICALLY
            $Bl = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $this.BorderDrawColors[[WindowBorderPart]::Left]
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.LeftTop.Row + 1
                            Column = $this.LeftTop.Column
                        }
                    }
                    UserData = $(
                        Invoke-Command -ScriptBlock {
                            [String]$T = ''

                            For($A = 0; $A -LT $this.Height; $A++) {
                                [ATCoordinates]$B = [ATCoordinates]@{
                                    Row    = ($this.LeftTop.Row + 1) + $A
                                    Column = $this.LeftTop.Column
                                }
                                $T += "$($Script:CurrentWindowDesign[[WindowBorderPart]::Left])$($B.ToAnsiControlSequenceString())"
                            }

                            Return $T
                        }
                    )
                }
            ))
            $this.BorderDrawDirty[[WindowBorderPartDirty]::Left] = $true
        }

        If($this.BorderDrawDirty[[WindowBorderPartDirty]::Right] -EQ $true) {
            $Br = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $this.BorderDrawColors[[WindowBorderPart]::Right]
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.LeftTop.Row + 1
                            Column = $this.RightBottom.Column
                        }
                    }
                    UserData = $(
                        Invoke-Command -ScriptBlock {
                            [String]$T = ''

                            For($A = 0; $A -LT $this.Height; $A++) {
                                [ATCoordinates]$B = [ATCoordinates]@{
                                    Row    = ($this.LeftTop.Row + 1) + $A
                                    Column = $this.RightBottom.Column
                                }
                                $T += "$($Script:CurrentWindowDesign[[WindowBorderPart]::Right])$($B.ToAnsiControlSequenceString())"
                            }

                            Return $T
                        }
                    )
                }
            ))
            $this.BorderDrawDirty[[WindowBorderPartDirty]::Right] = $false
        }

        Write-Host "$($Bt.ToAnsiControlSequenceString())$($Bb.ToAnsiControlSequenceString())$($Bl.ToAnsiControlSequenceString())$($Br.ToAnsiControlSequenceString())"

        If($this.UseTitle -EQ $true) {
            If($this.TitleDirty -EQ $true) {
                [ATString]$A = [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        # ForegroundColor = $this.TitleColor
                        Coordinates = [ATCoordinates]@{
                            Row    = $this.LeftTop.Row
                            Column = $this.LeftTop.Column + 2
                        }
                    }
                    UserData   = $this.Title
                    UseATReset = $true
                }

                Write-Host "$($A.ToAnsiControlSequenceString())"
                $this.TitleDirty = $false
            }
        }
    }

    [Void]UpdateDimensions() {
        $this.Width  = $this.RightBottom.Column - $this.LeftTop.Column
        $this.Height = $this.RightBottom.Row - $this.LeftTop.Row
    }

    [Void]SetupTitle(
        [String]$Title,
        [ConsoleColor24]$Color
    ) {
        $this.UseTitle   = $true
        $this.TitleDirty = $true
        $this.Title      = $Title
        $this.TitleColor = $Color
    }
}





###############################################################################
#
# STATUS WINDOW
#
# USED IN THE WORLD NAVIGATION STATE/SCREEN, THIS WINDOW SHOWS VERY BASIC
# STATISTICS ABOUT THE PLAYER. THE NAME OF THIS OBJECT SHOULD REALLY BE 
# CHANGED TO BETTER REFLECT ITS INTENDED USE. THIS NAME IS A VESTIGE FROM THE
# ORIGINAL CODE BASE.
#
# THIS CODE HAS ALSO BEEN DRAMATICALLY SIMPLIFIED FROM ITS ORIGINAL DESIGN.
# ONE OF THE MAJOR COMPONENTS THAT'S BEEN REMOVED IS CROSS PLATFORM SUPPORT
# IN THE DRAW METHOD. THIS VESTIGE IS NO LONGER NECESSARY SINCE THE CODE WILL
# NO LONGER BE PORTABLE BY DESIGN.
#
###############################################################################
Class StatusWindow : WindowBase {
    Static [Int]$PlayerStatDrawColumn = 3
    Static [Int]$PlayerNameDrawRow    = 2
    Static [Int]$PlayerHpDrawRow      = 4
    Static [Int]$PlayerMpDrawRow      = 6
    Static [Int]$PlayerGoldDrawRow    = 9
    Static [Int]$WindowLTRow          = 1
    Static [Int]$WindowLTColumn       = 1
    Static [Int]$WindowRBRow          = 10
    Static [Int]$WindowRBColumn       = 19

    Static [String]$LineBlank   = '                '
    Static [String]$WindowTitle = 'Status'

    Static [ATCoordinates]$PlayerNameDrawCoordinates = [ATCoordinates]::new([StatusWindow]::PlayerNameDrawRow, [StatusWindow]::PlayerStatDrawColumn)
    Static [ATCoordinates]$PlayerHpDrawCoordinates   = [ATCoordinates]::new([StatusWindow]::PlayerHpDrawRow, [StatusWindow]::PlayerStatDrawColumn)
    Static [ATCoordinates]$PlayerMpDrawCoordinates   = [ATCoordinates]::new([StatusWindow]::PlayerMpDrawRow, [StatusWindow]::PlayerStatDrawColumn)
    Static [ATCoordinates]$PlayerGoldDrawCoordinates = [ATCoordinates]::new([StatusWindow]::PlayerGoldDrawRow, [StatusWindow]::PlayerStatDrawColumn)

    [Boolean]$PlayerNameDrawDirty
    [Boolean]$PlayerHpDrawDirty
    [Boolean]$PlayerMpDrawDirty
    [Boolean]$PlayerGoldDrawDirty

    [ATString]$LineBlankActual

    StatusWindow() : base() {
        $this.LeftTop          = [ATCoordinates]::new([StatusWindow]::WindowLTRow, [StatusWindow]::WindowLTColumn)
        $this.RightBottom      = [ATCoordinates]::new([StatusWindow]::WindowRBRow, [StatusWindow]::WindowRBColumn)

        $this.UpdateDimensions()
        $this.SetupTitle([StatusWindow]::WindowTitle, [CCTextDefault24]::new())

        $this.PlayerNameDrawDirty = $true
        $this.PlayerHpDrawDirty   = $true
        $this.PlayerMpDrawDirty   = $true
        $this.PlayerGoldDrawDirty = $true
        $this.LineBlankActual     = [ATString]@{
            Prefix = [ATStringPrefix]@{
                Coordinates = [ATCoordinates]::new()
            }
            UserData   = "$([StatusWindow]::LineBlank)"
            UseATReset = $true
        }
    }

    [Void]Draw() {
        ([WindowBase]$this).Draw()

        If($this.PlayerNameDrawDirty -EQ $true) {
            [ATString]$A = [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:ThePlayer.NameDrawColor
                    Coordinates     = [StatusWindow]::PlayerNameDrawCoordinates
                }
                UserData   = $Script:ThePlayer.Name
                UseATReset = $true
            }
            $this.LineBlankActual.Prefix.Coordinates = [StatusWindow]::PlayerNameDrawCoordinates
            Write-Host "$($this.LineBlankActual.ToAnsiControlSequenceString())$($A.ToAnsiControlSequenceString())"
            $this.PlayerNameDrawDirty = $false
        }

        If($this.PlayerHpDrawDirty -EQ $true) {
            [String]$A               = ''
            [ATStringComposite]$Line = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                        Coordinates     = [StatusWindow]::PlayerHpDrawCoordinates
                    }
                    UserData = 'H '
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [BattleEntityProperty]::StatNumDrawColorSafe
                    }
                    UserData = "$($Script:ThePlayer.Stats[[StatId]::HitPoints].Base)`n`t"
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData = '/ '
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [BattleEntityProperty]::StatNumDrawColorSafe
                    }
                    UserData   = "$($Script:ThePlayer.Stats[[StatId]::HitPoints].Max)"
                    UseATReset = $true
                }
            ))

            Switch($Script:ThePlayer.Stats[[StatId]::HitPoints].State) {
                ([StatNumberState]::Normal) {
                    $A += "$($Line.ToAnsiControlSequenceString())"

                    Break
                }

                ([StatNumberState]::Caution) {
                    $Line.CompositeActual[1].Prefix.ForegroundColor = [BattleEntityProperty]::StatNumDrawColorCaution
                    $Line.CompositeActual[3].Prefix.ForegroundColor = [BattleEntityProperty]::StatNumDrawColorCaution
                    $A += "$($Line.ToAnsiControlSequenceString())"

                    Break
                }

                ([StatNumberState]::Danger) {
                    $Line.CompositeActual[1].Prefix.ForegroundColor = [BattleEntityProperty]::StatNumDrawColorDanger
                    $Line.CompositeActual[3].Prefix.ForegroundColor = [BattleEntityProperty]::StatNumDrawColorDanger
                    $A += "$($Line.ToAnsiControlSequenceString())"

                    Break
                }

                Default {
                    $A += "$($Line.ToAnsiControlSequenceString())"

                    Break
                }
            }

            ###################################################################
            #
            # MAKE A FUCKING MENTAL NOTE THAT THIS IS ABSOLUTELY NECESSARY!!!
            #
            # I TOTALLY FORGOT WHY I NEEDED THIS, AND NOW I REMEMBER!
            #
            # IF LINEBLANKACTUAL.PREFIX.COORDINATES IS ASSIGNED TO PLAYERHPDRAWCOORDINATES,
            # THE STATEMENT THAT POSTFIXES THE ROW VALUE WILL MODIFY PLAYERHPDRAWCOORDINATES
            # AND CAUSE SUBSEQUENT DRAWS TO TRAIL DOWN THE SCREEN, WHICH IS TOTAL BULLSHIT!!!
            # IMPLICIT COPY IS TOO MUCH TO ASK EVIDENTLY.
            #
            ###################################################################
            $this.LineBlankActual.Prefix.Coordinates = [ATCoordinates]::new([StatusWindow]::PlayerHpDrawCoordinates)
            Write-Host "$($this.LineBlankActual.ToAnsiControlSequenceString())"
            $this.LineBlankActual.Prefix.Coordinates.Row++
            Write-Host "$($this.LineBlankActual.ToAnsiControlSequenceString())$($A)"
            $this.PlayerHpDrawDirty = $false
        }

        If($this.PlayerMpDrawDirty -EQ $true) {
            [String]$A = ''
            [ATStringComposite]$Line = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                        Coordinates     = [StatusWindow]::PlayerMpDrawCoordinates
                    }
                    UserData = 'M '
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [BattleEntityProperty]::StatNumDrawColorSafe
                    }
                    UserData = "$($Script:ThePlayer.Stats[[StatId]::MagicPoints].Base)`n`t"
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData = '/ '
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [BattleEntityProperty]::StatNumDrawColorSafe
                    }
                    UserData   = "$($Script:ThePlayer.Stats[[StatId]::MagicPoints].Max)"
                    UseATReset = $true
                }
            ))

            Switch($Script:ThePlayer.Stats[[StatId]::MagicPoints].State) {
                ([StatNumberState]::Normal) {
                    $A += "$($Line.ToAnsiControlSequenceString())"

                    Break
                }

                ([StatNumberState]::Caution) {
                    $Line.CompositeActual[1].Prefix.ForegroundColor = [BattleEntityProperty]::StatNumDrawColorCaution
                    $Line.CompositeActual[3].Prefix.ForegroundColor = [BattleEntityProperty]::StatNumDrawColorCaution
                    $A += "$($Line.ToAnsiControlSequenceString())"

                    Break
                }

                ([StatNumberState]::Danger) {
                    $Line.CompositeActual[1].Prefix.ForegroundColor = [BattleEntityProperty]::StatNumDrawColorDanger
                    $Line.CompositeActual[3].Prefix.ForegroundColor = [BattleEntityProperty]::StatNumDrawColorDanger
                    $A += "$($Line.ToAnsiControlSequenceString())"

                    Break
                }

                Default {
                    $A += "$($Line.ToAnsiControlSequenceString())"

                    Break
                }
            }

            $this.LineBlankActual.Prefix.Coordinates = [ATCoordinates]::new([StatusWindow]::PlayerMpDrawCoordinates)
            Write-Host "$($this.LineBlankActual.ToAnsiControlSequenceString())"
            $this.LineBlankActual.Prefix.Coordinates.Row++
            Write-Host "$($this.LineBlankActual.ToAnsiControlSequenceString())$($a)"
            $this.PlayerMpDrawDirty = $false
        }

        If($this.PlayerGoldDrawDirty -EQ $true) {
            [ATStringComposite]$Line = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [Player]::GoldDrawColor
                        Coordinates     = [StatusWindow]::PlayerGoldDrawCoordinates
                    }
                    UserData = "$($Script:ThePlayer.CurrentGold)"
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = 'G'
                    UseATReset = $true
                }
            ))

            $this.LineBlankActual.Prefix.Coordinates = [ATCoordinates]::new([StatusWindow]::PlayerGoldDrawCoordinates)
            Write-Host "$($this.LineBlankActual.ToAnsiControlSequenceString())$($Line.ToAnsiControlSequenceString())"
            $this.PlayerGoldDrawDirty = $false
        }
    }
}





###############################################################################
#
# COMMAND WINDOW
#
# THIS IS THE WINDOW THAT ALLOWS THE USER TO INPUT COMMANDS AND ALSO SHOWS THE
# COMMAND HISTORY (FIVE MOST RECENT COMMANDS). 
#
###############################################################################
Class CommandWindow : WindowBase {
    Static [Int]$CommandHistoryARef    = 0
    Static [Int]$CommandHistoryBRef    = 1
    Static [Int]$CommandHistoryCRef    = 2
    Static [Int]$CommandHistoryDRef    = 3
    Static [Int]$CommandHistoryERef    = 4
    Static [Int]$WindowLTRow           = 12
    Static [Int]$WindowLTColumn        = 1
    Static [Int]$WindowRBRow           = 20
    Static [Int]$WindowRBColumn        = 19
    Static [Int]$DrawColumnOffset      = 1
    Static [Int]$DrawDivRowOffset      = 2
    Static [Int]$DrawHistoryDRowOffset = 3
    Static [Int]$DrawHistoryCRowOffset = 4
    Static [Int]$DrawHistoryBRowOffset = 5
    Static [Int]$DrawHistoryARowOffset = 6
    Static [Int]$DrawHistoryERowOffset = 7

    Static [String]$CommandBlankData = '                 '
    Static [String]$WindowCommandDiv = '─────────────────'
    Static [String]$WindowTitle      = 'Commands'

    Static [ATCoordinates]$CommandDivDrawCoordinates      = [ATCoordinatesNone]::new()
    Static [ATCoordinates]$CommandHistoryEDrawCoordinates = [ATCoordinatesNone]::new()
    Static [ATCoordinates]$CommandHistoryDDrawCoordinates = [ATCoordinatesNone]::new()
    Static [ATCoordinates]$CommandHistoryCDrawCoordinates = [ATCoordinatesNone]::new()
    Static [ATCoordinates]$CommandHistoryBDrawCoordinates = [ATCoordinatesNone]::new()
    Static [ATCoordinates]$CommandHistoryADrawCoordinates = [ATCoordinatesNone]::new()

    Static [ConsoleColor24]$HistoryEntryValid   = [CCAppleNGreenLight24]::new()
    Static [ConsoleColor24]$HistoryEntryError   = [CCAppleNRedLight24]::new()
    Static [ConsoleColor24]$HistoryBlankColor   = [CCBlack24]::new()
    Static [ConsoleColor24]$CommandDivDrawColor = [CCTextDefault24]::new()
    Static [ATString]$CommandDiv                = [ATStringNone]::new()
    Static [ATString]$CommandBlank              = [ATStringNone]::new()
    Static [ATString]$CommandHistBlank          = [ATStringNone]::new()

    [ATString]$CommandActual
    [ATString[]]$CommandHistory

    [Boolean]$CommandDivDirty
    [Boolean]$CommandHistoryDirty

    CommandWindow() : base() {
        $this.LeftTop          = [ATCoordinates]::new([CommandWindow]::WindowLTRow, [CommandWindow]::WindowLTColumn)
        $this.RightBottom      = [ATCoordinates]::new([CommandWindow]::WindowRBRow, [CommandWindow]::WindowRBColumn)

        $this.UpdateDimensions()
        $this.SetupTitle([CommandWindow]::WindowTitle, [CCTextDefault24]::new())

        $this.CommandDivDirty     = $true
        $this.CommandHistoryDirty = $false
        [Int]$rowBase             = $this.RightBottom.Row
        [Int]$columnBase          = $this.LeftTop.Column + [CommandWindow]::DrawColumnOffset

        [CommandWindow]::CommandDivDrawCoordinates = [ATCoordinates]@{
            Row    = ($rowBase - [CommandWindow]::DrawDivRowOffset)
            Column = $columnBase
        }
        [CommandWindow]::CommandHistoryEDrawCoordinates = [ATCoordinates]@{
            Row    = $rowBase - [CommandWindow]::DrawHistoryERowOffset
            Column = $columnBase
        }
        [CommandWindow]::CommandHistoryDDrawCoordinates = [ATCoordinates]@{
            Row    = $rowBase - [CommandWindow]::DrawHistoryDRowOffset
            Column = $columnBase
        }
        [CommandWindow]::CommandHistoryCDrawCoordinates = [ATCoordinates]@{
            Row    = $rowBase - [CommandWindow]::DrawHistoryCRowOffset
            Column = $columnBase
        }
        [CommandWindow]::CommandHistoryBDrawCoordinates = [ATCoordinates]@{
            Row    = $rowBase - [CommandWindow]::DrawHistoryBRowOffset
            Column = $columnBase
        }
        [CommandWindow]::CommandHistoryADrawCoordinates = [ATCoordinates]@{
            Row    = $rowBase - [CommandWindow]::DrawHistoryARowOffset
            Column = $columnBase
        }

        [CommandWindow]::CommandDiv = [ATString]@{
            Prefix = [ATStringPrefix]@{
                ForegroundColor = [CommandWindow]::CommandDivDrawColor
                Coordinates     = [CommandWindow]::CommandDivDrawCoordinates
            }
            UserData   = "$([CommandWindow]::WindowCommandDiv)"
            UseATReset = $true
        }
        [CommandWindow]::CommandBlank = [ATString]@{
            Prefix = [ATStringPrefix]@{
                ForegroundColor = [CommandWindow]::HistoryBlankColor
            }
            UserData   = "$([CommandWindow]::CommandBlankData)"
            UseATReset = $true
        }
        [CommandWindow]::CommandHistBlank = [ATString]@{
            Prefix = [ATStringPrefix]@{
                ForegroundColor = [CommandWindow]::HistoryBlankColor
            }
            UserData   = "$([CommandWindow]::CommandBlankData)"
            UseATReset = $true
        }

        $this.CommandActual                                       = [ATStringNone]::new()
        $this.CommandHistory                                      = New-Object 'ATString[]' 5
        $this.CommandHistory[[CommandWindow]::CommandHistoryARef] = [ATString]@{
            Prefix = [ATStringPrefix]@{
                ForegroundColor = [CCTextDefault24]::new()
                Coordinates     = [CommandWindow]::CommandHistoryADrawCoordinates
            }
            UserData   = "$([CommandWindow]::CommandBlank.UserData)"
            UseATReset = $true
        }
        $this.CommandHistory[[CommandWindow]::CommandHistoryBRef] = [ATString]@{
            Prefix = [ATStringPrefix]@{
                ForegroundColor = [CCTextDefault24]::new()
                Coordinates     = [CommandWindow]::CommandHistoryBDrawCoordinates
            }
            UserData   = "$([CommandWindow]::CommandBlank.UserData)"
            UseATReset = $true
        }
        $this.CommandHistory[[CommandWindow]::CommandHistoryCRef] = [ATString]@{
            Prefix = [ATStringPrefix]@{
                ForegroundColor = [CCTextDefault24]::new()
                Coordinates     = [CommandWindow]::CommandHistoryCDrawCoordinates
            }
            UserData   = "$([CommandWindow]::CommandBlank.UserData)"
            UseATReset = $true
        }
        $this.CommandHistory[[CommandWindow]::CommandHistoryDRef] = [ATString]@{
            Prefix = [ATStringPrefix]@{
                ForegroundColor = [CCTextDefault24]::new()
                Coordinates     = [CommandWindow]::CommandHistoryDDrawCoordinates
            }
            UserData   = "$([CommandWindow]::CommandBlank.UserData)"
            UseATReset = $true
        }
        $this.CommandHistory[[CommandWindow]::CommandHistoryERef] = [ATString]@{
            Prefix = [ATStringPrefix]@{
                ForegroundColor = [CCTextDefault24]::new()
                Coordinates     = [CommandWindow]::CommandHistoryEDrawCoordinates
            }
            UserData   = "$([CommandWindow]::CommandBlank.UserData)"
            UseATReset = $true
        }
    }

    [Void]Draw() {
        ([WindowBase]$this).Draw()
        If($this.CommandDivDirty -EQ $true) {
            Write-Host "$([CommandWindow]::CommandDiv.ToAnsiControlSequenceString())"
            $this.CommandDivDirty = $false
        }
        If($this.CommandHistoryDirty -EQ $true) {
            [CommandWindow]::CommandHistBlank.Prefix.Coordinates = [CommandWindow]::CommandHistoryDDrawCoordinates
            Write-Host "$([CommandWindow]::CommandHistBlank.ToAnsiControlSequenceString())$($this.CommandHistory[[CommandWindow]::CommandHistoryDRef].ToAnsiControlSequenceString())"
            [CommandWindow]::CommandHistBlank.Prefix.Coordinates = [CommandWindow]::CommandHistoryCDrawCoordinates
            Write-Host "$([CommandWindow]::CommandHistBlank.ToAnsiControlSequenceString())$($this.CommandHistory[[CommandWindow]::CommandHistoryCRef].ToAnsiControlSequenceString())"
            [CommandWindow]::CommandHistBlank.Prefix.Coordinates = [CommandWindow]::CommandHistoryBDrawCoordinates
            Write-Host "$([CommandWindow]::CommandHistBlank.ToAnsiControlSequenceString())$($this.CommandHistory[[CommandWindow]::CommandHistoryBRef].ToAnsiControlSequenceString())"
            [CommandWindow]::CommandHistBlank.Prefix.Coordinates = [CommandWindow]::CommandHistoryADrawCoordinates
            Write-Host "$([CommandWindow]::CommandHistBlank.ToAnsiControlSequenceString())$($this.CommandHistory[[CommandWindow]::CommandHistoryARef].ToAnsiControlSequenceString())"
            [CommandWindow]::CommandHistBlank.Prefix.Coordinates = [CommandWindow]::CommandHistoryEDrawCoordinates
            Write-Host "$([CommandWindow]::CommandHistBlank.ToAnsiControlSequenceString())$($this.CommandHistory[[CommandWindow]::CommandHistoryERef].ToAnsiControlSequenceString())"
            $this.CommandHistoryDirty = $false
        }
    }

    [Void]HandleInput() {
        $Script:Rui.CursorPosition = $Script:DefaultCursorCoordinates.ToAutomationCoordinates()
        $keyCap = $Script:Rui.ReadKey('IncludeKeyDown')
        While($keyCap.VirtualKeyCode -NE 13) {
            $cpx = $Script:Rui.CursorPosition.X
            If($cpx -GE 18) {
                Break
            }
            Switch($keyCap.VirtualKeyCode) {
                8 { # Backspace
                    $fpx = $Script:Rui.CursorPosition.X
                    If($fpx -GT $Script:DefaultCursorCoordinates.Row) {
                        Write-Host " `b" -NoNewLine
                        If($this.CommandActual.UserData.Length -GT 0) {
                            $this.CommandActual.UserData = $this.CommandActual.UserData.Remove($this.CommandActual.UserData.Length - 1, 1)
                        }
                    } Elseif($fpx -LT $Script:DefaultCursorCoordinates.Row) {
                        $Script:Rui.CursorPosition = $Script:DefaultCursorCoordinates.ToAutomationCoordinates()
                    } Elseif($fpx -EQ $Script:DefaultCursorCoordinates.Row) {
                        Write-Host " `b" -NoNewline
                        If($this.CommandActual.UserData.Length -GT 0) {
                            $this.CommandActual.UserData = $this.CommandActual.UserData.Remove($this.CommandActual.UserData.Length - 1, 1)
                        }
                    }
                }

                Default {
                    $this.CommandActual.UserData += $keyCap.Character
                }
            }
            $keyCap = $Script:Rui.ReadKey('IncludeKeyDown')
        }
        $this.InvokeCommandParser()
    }

    [Void]InvokeCommandParser() {
        $Script:Rui.CursorPosition = $Script:DefaultCursorCoordinates.ToAutomationCoordinates()
        Write-Host "$([CommandWindow]::CommandBlank.ToAnsiControlSequenceString())" -NoNewline
        $Script:Rui.CursorPosition = $Script:DefaultCursorCoordinates.ToAutomationCoordinates()

        If([String]::IsNullOrEmpty($this.CommandActual.UserData.Trim()) -EQ $true) {
            $Script:TheMessageWindow.WriteBadCommandRetortMessage()
            $this.CommandActual.UserData = ''

            Return
        } Else {
            $cmdactSplit = $this.CommandActual.UserData.Trim()
            $cmdactSplit = -SPLIT $this.CommandActual.UserData
            $rootFound   = $Script:TheCommandTable.GetEnumerator() | Where-Object { $_.Name -IEQ $cmdactSplit[0] }
            If($null -NE $rootFound) {
                Switch($cmdactSplit.Length) {
                    1 {
                        Invoke-Command $rootFound.Value
                    }

                    2 {
                        Invoke-Command $rootFound.Value -ArgumentList $cmdactSplit[1]
                    }

                    3 {
                        Invoke-Command $rootFound.Value -ArgumentList $cmdactSplit[1], $cmdactSplit[2]
                    }

                    Default {
                        $Script:TheCommandWindow.UpdateCommandHistory($false)
                        $Script:TheMessageWindow.WriteBadCommandRetortMessage()
                    }
                }
            } Else {
                $Script:TheCommandWindow.UpdateCommandHistory($false)
                $Script:TheMessageWindow.WriteBadCommandRetortMessage()

                Return
            }
        }
    }

    [Void]UpdateCommandHistory(
        [Boolean]$CmdValid
    ) {
        $this.CommandHistory[[CommandWindow]::CommandHistoryERef].UserData               = $this.CommandHistory[[CommandWindow]::CommandHistoryARef].UserData
        $this.CommandHistory[[CommandWindow]::CommandHistoryERef].Prefix.Decorations     = $this.CommandHistory[[CommandWindow]::CommandHistoryARef].Prefix.Decorations
        $this.CommandHistory[[CommandWindow]::CommandHistoryERef].Prefix.ForegroundColor = $this.CommandHistory[[CommandWindow]::CommandHistoryARef].Prefix.ForegroundColor
        $this.CommandHistory[[CommandWindow]::CommandHistoryARef].UserData               = $this.CommandHistory[[CommandWindow]::CommandHistoryBRef].UserData
        $this.CommandHistory[[CommandWindow]::CommandHistoryARef].Prefix.Decorations     = $this.CommandHistory[[CommandWindow]::CommandHistoryBRef].Prefix.Decorations
        $this.CommandHistory[[CommandWindow]::CommandHistoryARef].Prefix.ForegroundColor = $this.CommandHistory[[CommandWindow]::CommandHistoryBRef].Prefix.ForegroundColor
        $this.CommandHistory[[CommandWindow]::CommandHistoryBRef].UserData               = $this.CommandHistory[[CommandWindow]::CommandHistoryCRef].UserData
        $this.CommandHistory[[CommandWindow]::CommandHistoryBRef].Prefix.Decorations     = $this.CommandHistory[[CommandWindow]::CommandHistoryCRef].Prefix.Decorations
        $this.CommandHistory[[CommandWindow]::CommandHistoryBRef].Prefix.ForegroundColor = $this.CommandHistory[[CommandWindow]::CommandHistoryCRef].Prefix.ForegroundColor
        $this.CommandHistory[[CommandWindow]::CommandHistoryCRef].UserData               = $this.CommandHistory[[CommandWindow]::CommandHistoryDRef].UserData
        $this.CommandHistory[[CommandWindow]::CommandHistoryCRef].Prefix.Decorations     = $this.CommandHistory[[CommandWindow]::CommandHistoryDRef].Prefix.Decorations
        $this.CommandHistory[[CommandWindow]::CommandHistoryCRef].Prefix.ForegroundColor = $this.CommandHistory[[CommandWindow]::CommandHistoryDRef].Prefix.ForegroundColor
        $this.CommandHistory[[CommandWindow]::CommandHistoryDRef].UserData               = $this.CommandActual.UserData
        If($CmdValid -EQ $true) {
            $this.CommandHistory[[CommandWindow]::CommandHistoryDRef].Prefix.ForegroundColor = [CommandWindow]::HistoryEntryValid
            $this.CommandHistory[[CommandWindow]::CommandHistoryDRef].Prefix.Decorations     = [ATDecorationNone]::new()
        } Else {
            $this.CommandHistory[[CommandWindow]::CommandHistoryDRef].Prefix.ForegroundColor = [CommandWindow]::HistoryEntryError
            $this.CommandHistory[[CommandWindow]::CommandHistoryDRef].Prefix.Decorations = [ATDecoration]@{
                Blink = $true
            }
        }
        $this.CommandActual.UserData = ''
        $this.CommandHistoryDirty    = $true
    }
}





###############################################################################
#
# SCENE WINDOW
#
# THIS WINDOW DISPLAYS AN IMAGE FOR THE CURRENT MAP TILE. THIS IS A VISUAL
# HACK TO GIVE A VISUAL FLAIR TO THE PROGRAM.
#
###############################################################################
Class SceneWindow : WindowBase {
    Static [Int]$WindowLTRow           = 1
    Static [Int]$WindowLTColumn        = 30
    Static [Int]$WindowRBRow           = 20
    Static [Int]$WindowRBColumn        = 79
    Static [Int]$ImageDrawRowOffset    = [SceneWindow]::WindowLTRow + 1
    Static [Int]$ImageDrawColumnOffset = [SceneWindow]::WindowLTColumn + 1

    Static [String]$WindowTitle = 'Scene'

    Static [ATCoordinates]$SceneImageDrawCoordinates = [ATCoordinatesNone]::new()

    [Boolean]$SceneImageDirty
    [SceneImage]$Image

    SceneWindow() : base() {
        $this.LeftTop     = [ATCoordinates]::new([SceneWindow]::WindowLTRow, [SceneWindow]::WindowLTColumn)
        $this.RightBottom = [ATCoordinates]::new([SceneWindow]::WindowRBRow, [SceneWindow]::WindowRBColumn)

        $this.UpdateDimensions()
        $this.SetupTitle([SceneWindow]::WindowTitle, [CCTextDefault24]::new())

        $this.SceneImageDirty = $true
        $this.Image           = [SIEmpty]::new()

        [SceneWindow]::SceneImageDrawCoordinates = [ATCoordinates]@{
            Row    = [SceneWindow]::ImageDrawRowOffset
            Column = [SceneWindow]::ImageDrawColumnOffset
        }
    }

    [Void]Draw() {
        ([WindowBase]$this).Draw()

        If($this.SceneImageDirty -EQ $true) {
            # THRE MAY BE AN OPPORTUNITY TO DO SOMETHING A BIT DIFFERENT HERE
            $this.Image = $Script:CurrentMap.GetTileAtPlayerCoordinates().BackgroundImage
            Write-Host "$($this.Image.ToAnsiControlSequenceString())"
            $this.SceneImageDirty = $false
        }
    }

    [Void]UpdateCurrentImage(
        [SceneImage]$NewImage
    ) {
        $this.Image           = $NewImage
        $this.SceneImageDirty = $true
    }
}





###############################################################################
#
# MESSAGE WINDOW
#
# THIS WINDOW DISPLAYS MESSAGES IN THE MAP NAVIGATION SCREEN.
#
###############################################################################
Class MessageWindow : WindowBase {
    Static [Int]$MessageHistoryARef = 0
    Static [Int]$MessageHistoryBRef = 1
    Static [Int]$MessageHistoryCRef = 2
    Static [Int]$WindowLTRow        = 21
    Static [Int]$WindowLTColumn     = 1
    Static [Int]$WindowRBRow        = 25
    Static [Int]$WindowRBColumn     = 79

    Static [String]$WindowTitle = 'Messages'

    Static [ATCoordinates]$MessageADrawCoordinates = [ATCoordinatesNone]::new()
    Static [ATCoordinates]$MessageBDrawCoordinates = [ATCoordinatesNone]::new()
    Static [ATCoordinates]$MessageCDrawCoordinates = [ATCoordinatesNone]::new()

    Static [ATString]$MessageWindowBlank = [ATStringNone]::new()

    [ATStringComposite[]]$MessageHistory

    [Boolean]$MessageADirty
    [Boolean]$MessageBDirty
    [Boolean]$MessageCDirty

    MessageWindow() : base() {
        $this.LeftTop     = [ATCoordinates]::new([MessageWindow]::WindowLTRow, [MessageWindow]::WindowLTColumn)
        $this.RightBottom = [ATCoordinates]::new([MessageWindow]::WindowRBRow, [MessageWindow]::WindowRBColumn)

        $this.UpdateDimensions()
        $this.SetupTitle([MessageWindow]::WindowTitle, [CCTextDefault24]::new())

        [MessageWindow]::MessageCDrawCoordinates = [ATCoordinates]@{
            Row    = ($this.RightBottom.Row - 1)
            Column = ($this.LeftTop.Column + 1)
        }
        [MessageWindow]::MessageBDrawCoordinates = [ATCoordinates]@{
            Row    = ([MessageWindow]::MessageCDrawCoordinates.Row - 1)
            Column = ($this.LeftTop.Column + 1)
        }
        [MessageWindow]::MessageADrawCoordinates = [ATCoordinates]@{
            Row    = ([MessageWindow]::MessageBDrawCoordinates.Row - 1)
            Column = ($this.LeftTop.Column + 1)
        }
        [MessageWindow]::MessageWindowBlank = [ATString]@{
            Prefix     = [ATStringPrefix]::new()
            UserData   = '                                                                             '
            UseATReset = $true
        }
        $this.MessageHistory = @(
            [ATStringComposite]::new(),
            [ATStringComposite]::new(),
            [ATStringComposite]::new()
        )
        $this.MessageHistory[[MessageWindow]::MessageHistoryARef].CompositeActual[0].Prefix.Coordinates = [MessageWindow]::MessageADrawCoordinates
        $this.MessageHistory[[MessageWindow]::MessageHistoryBRef].CompositeActual[0].Prefix.Coordinates = [MessageWindow]::MessageBDrawCoordinates
        $this.MessageHistory[[MessageWindow]::MessageHistoryCRef].CompositeActual[0].Prefix.Coordinates = [MessageWindow]::MessageCDrawCoordinates
    }

    [Void]Draw() {
        ([WindowBase]$this).Draw()

        If($this.MessageADirty -EQ $true) {
            [MessageWindow]::MessageWindowBlank.Prefix.Coordinates = [MessageWindow]::MessageADrawCoordinates
            Write-Host "$([MessageWindow]::MessageWindowBlank.ToAnsiControlSequenceString())$([MessageWindow]::MessageADrawCoordinates.ToAnsiControlSequenceString())$($this.MessageHistory[[MessageWindow]::MessageHistoryARef].ToAnsiControlSequenceString())"
            $this.MessageADirty = $false
        }
        If($this.MessageBDirty -EQ $true) {
            [MessageWindow]::MessageWindowBlank.Prefix.Coordinates = [MessageWindow]::MessageBDrawCoordinates
            Write-Host "$([MessageWindow]::MessageWindowBlank.ToAnsiControlSequenceString())$([MessageWindow]::MessageBDrawCoordinates.ToAnsiControlSequenceString())$($this.MessageHistory[[MessageWindow]::MessageHistoryBRef].ToAnsiControlSequenceString())"
            $this.MessageBDirty = $false
        }
        If($this.MessageCDirty -EQ $true) {
            [MessageWindow]::MessageWindowBlank.Prefix.Coordinates = [MessageWindow]::MessageCDrawCoordinates
            Write-Host "$([MessageWindow]::MessageWindowBlank.ToAnsiControlSequenceString())$([MessageWindow]::MessageCDrawCoordinates.ToAnsiControlSequenceString())$($this.MessageHistory[[MessageWindow]::MessageHistoryCRef].ToAnsiControlSequenceString())"
            $this.MessageCDirty = $false
        }
    }

    [Void]WriteMessageComposite(
        [ATString[]]$Composite
    ) {
        $this.MessageHistory[[MessageWindow]::MessageHistoryARef].CompositeActual = [List[ATString]]::new($this.MessageHistory[[MessageWindow]::MessageHistoryBRef].CompositeActual)
        $this.MessageHistory[[MessageWindow]::MessageHistoryBRef].CompositeActual = [List[ATString]]::new($this.MessageHistory[[MessageWindow]::MessageHistoryCRef].CompositeActual)
        $this.MessageHistory[[MessageWindow]::MessageHistoryCRef].CompositeActual = [List[ATString]]::new($Composite)
        $this.MessageADirty                                                       = $true
        $this.MessageBDirty                                                       = $true
        $this.MessageCDirty                                                       = $true
    }

    [Void]WriteBadCommandMessage(
        [String]$Command
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                    Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                }
                UserData   = "$($Command)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' isn''t a valid command.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBadArg0Message(
        [String]$Command,
        [String]$Arg0
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = 'We can''t '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                    Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                }
                UserData   = "$($Command)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' with a(n) '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                }
                UserData   = "$($Arg0)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = '.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBadArg1Message(
        [String]$Command,
        [String]$Arg0,
        [String]$Arg1
    ) {
		$this.WriteMessageComposite(@(
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = 'We can''t '
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCAppleYellowDark24]::new()
					Decorations     = [ATDecoration]@{
						Blink = $true
					}
				}
				UserData   = "$($Command)"
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = ' with a(n) '
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCAppleYellowDark24]::new()
					Decorations     = [ATDecoration]@{
						Blink = $true
					}
				}
				UserData   = "$($Arg0)"
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = ' and a(n) '
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCAppleYellowDark24]::new()
					Decorations     = [ATDecoration]@{
						Blink = $true
					}
				}
				UserData   = "$($Arg1)"
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = '.'
				UseATReset = $true
			}
		))
    }

    [Void]WriteSomethingBadMessage() {
		$this.WriteMessageComposite(@(
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = 'I''m God, and I don''t know what just happened...'
				UseATReset = $true
			}
		))
    }

    [Void]WriteInvisibleWallEncounteredMessage() {
		$this.WriteMessageComposite(@(
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = 'The invisible wall blocks your path...'
				UseATReset = $true
			}
		))
    }

    [Void]WriteYouShallNotPassMessage() {
		$this.WriteMessageComposite(@(
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = 'The path you asked for is impossible...'
				UseATReset = $true
			}
		))
    }

    [Void]WriteMapNoItemsFoundMessage() {
		$this.WriteMessageComposite(@(
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = 'There''s nothing of interest here.'
				UseATReset = $true
			}
		))
    }

    [Void]WriteMapInvalidItemMessage(
        [String]$ItemName
    ) {
		$this.WriteMessageComposite(@(
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = 'There''s no '
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCAppleYellowDark24]::new()
					Decorations     = [ATDecoration]@{
						Blink = $true
					}
				}
				UserData   = "$($ItemName)"
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = ' here.'
				UseATReset = $true
			}
		))
    }

    [Void]WriteItemTakenMessage(
        [String]$ItemName
    ) {
		$this.WriteMessageComposite(@(
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = 'I''ve taken the '
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCAppleYellowDark24]::new()
					Decorations     = [ATDecoration]@{
						Blink = $true
					}
				}
				UserData   = "$($ItemName)"
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = ' and put it in my pocket.'
				UseATReset = $true
			}
		))
    }

    [Void]WriteItemCantTakeMessage(
        [String]$ItemName
    ) {
		$this.WriteMessageComposite(@(
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = 'It''s not possible to take the '
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCAppleYellowDark24]::new()
					Decorations     = [ATDecoration]@{
						Blink = $true
					}
				}
				UserData   = "$($ItemName)"
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = '.'
				UseATReset = $true
			}
		))
    }

    [Void]WriteCmdExtraArgsWarning(
        [String]$Command,
        [String[]]$ExtraArgs
    ) {
		$this.WriteMessageComposite(@(
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCAppleNPinkLight24]::new()
					Decorations     = [ATDecoration]@{
						Blink = $true
					}
				}
				UserData   = "$($Command)"
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = ' has garbage: '
				UseATReset = $true
			},
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCAppleNYellowDark24]::new()
					Decorations     = [ATDecoration]@{
						Blink = $true
					}
				}
				UserData   = "$($ExtraArgs)"
				UseATReset = $true
			}
		))
    }

    [Void]WriteBadCommandRetortMessage() {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleNRedDark24]::new()
                }
                UserData   = "$($Script:BadCommandRetorts | Get-Random)"
                UseATReset = $true
            }
        ))
    }

    [Void]WriteCantUseItemMessage(
        [String]$Source,
        [String]$Target
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                }
                UserData   = 'Can''t use a(n) '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = "$($Source)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                }
                UserData   = ' on a(n) '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = "$($Target)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                }
                UserData   = '.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteCantUseItemOnSelfMessage(
        [String]$ItemName
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                }
                UserData   = 'I can''t use '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = "$($ItemName)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                }
                UserData   = ' on myself.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteNoItemInInvMessage(
        [String]$DesiredItem
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                }
                UserData   = 'There ain''t no '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = "$($DesiredItem)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                }
                UserData   = ' in your pockets guv''.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteNoItemTargetMessage(
        [String]$Source
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                }
                UserData   = 'You need to tell me what you want to use the '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = "$($Source)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                }
                UserData   = ' on.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteItemUseUnsureMessage(
        [String]$Target
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                }
                UserData   = 'I have no idea how to use a(n) '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = "$($Target)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleRedDark24]::new()
                }
                UserData   = '.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteCantDropMultMessage() {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = 'Can''t drop all those items at once, bruh.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteItemDroppedMessage(
        [String]$ItemName
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = 'Dropped '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = "$($ItemName)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' from your inventory.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteMilkUseOkayMessage() {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = 'Hmmm. Delicious cow juice.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteMilkUseSpoiledMessage() {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = 'Now that wasn''t very smart, was it?'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteMilkUseNotNowMessage() {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = 'There''s no need to drink this now.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteTiedRopeToTreeMessage() {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = 'I''ve tied the '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = 'Rope'
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' to the '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = 'Tree'
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = '.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteLookMessage(
        [String]$ItemSetA,
        [String]$ItemSetB,
        [Boolean]$UseSetB
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = 'I can see the following things here:'
                UseATReset = $true
            }
        ))
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowLight24]::new()
                }
                UserData   = "$($ItemSetA)"
                UseATReset = $true
            }
        ))
        If($UseSetB -EQ $true) {
            $this.WriteMessageComposite(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAppleYellowLight24]::new()
                    }
                    UserData   = "$($ItemSetB)"
                    UseATReset = $true
                }
            ))
        }
    }

    [Void]WriteItemExamineMessage(
        [String]$ExamineString
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleMintDark24]::new()
                }
                UserData   = "$($ExamineString)"
                UseATReset = $true
            }
        ))
    }
}





###############################################################################
#
# INVENTORY WINDOW
#
# AS WITH OTHER CLASSES, THE NAME OF THIS CLASS IS A BIT OF A MISNOMER.
# SPECIFICALLY, THIS CLASS INCORPORATES MULTIPLE WINDOWS TOGETHER INTO A SINGLE
# SCREEN. ALSO, THIS INVENTORY COVERS THE PLAYER'S ITEM INVENTORY AND NOT THE
# BATTLE ACTION INVENTORY, SO THERE'S A BIT TO BE DESIRED HERE. THIS WILL BE
# WORKED ON AFTER COVERAGE IS COMPLETED.
#
###############################################################################
Class InventoryWindow : WindowBase {
    Static [Int]$WindowLTRow    = 1
    Static [Int]$WindowLTColumn = 1
    Static [Int]$WindowBRRow    = 20
    Static [Int]$WindowBRColumn = 79

    Static [String]$WindowTitle = 'Inventory'

    Static [String]$IChevronCharacter           = '❱'
    Static [String]$IChevronBlankCharacter      = ' '
    Static [String]$PagingChevronRightCharacter = "`u{1433}"
    Static [String]$PagingChevronLeftCharacter  = "`u{1438}"
    Static [String]$PagingChevronBlankCharater  = ' '

    Static [String]$DivLineHorizontalString = '─────────────────────────────────────────────────────────────────────────────'
    Static [String]$ZpLineBlank             = '                                                                             '
    Static [String]$DescLineBlank           = '                                                                          '
    Static [String]$ItemLabelBlank          = '               '

    Static [ATString]$PagingChevronRight = [ATString]@{
        Prefix = [ATStringPrefix]@{
            ForegroundColor = [CCAppleYellowLight24]::new()
            Coordinates     = [ATCoordinates]@{
                Row    = 2
                Column = 77
            }
        }
        UserData   = "$([InventoryWindow]::PagingChevronRightCharacter)"
        UseATReset = $true
    }
    Static [ATString]$PagingChevronLeft = [ATString]@{
        Prefix = [ATStringPrefix]@{
            ForegroundColor = [CCAppleYellowLight24]::new()
            Coordinates     = [ATCoordinates]@{
                Row    = 2
                Column = 3
            }
        }
        UserData   = "$([InventoryWindow]::PagingChevronLeftCharacter)"
        UseATReset = $true
    }
    Static [ATString]$PagingChevronRightBlank = [ATString]@{
        Prefix = [ATStringPrefix]@{
            ForegroundColor = [CCAppleMintLight24]::new()
            Coordinates     = [ATCoordinates]@{
                Row    = 2
                Column = 77
            }
        }
        UserData   = "$([InventoryWindow]::PagingChevronBlankCharater)"
        UseATReset = $true
    }
    Static [ATString]$PagingChevronLeftBlank = [ATString]@{
        Prefix = [ATStringPrefix]@{
            Coordinates = [ATCoordinates]@{
                Row    = 2
                Column = 3
            }
        }
        UserData   = "$([InventoryWindow]::PagingChevronBlankCharater)"
        UseATReset = $true
    }
    Static [ATString]$DivLineHorizontal = [ATString]@{
        Prefix = [ATStringPrefix]@{
            ForegroundColor = [CCTextDefault24]::new()
            Coordinates     = [ATCoordinates]@{
                Row    = 13
                Column = 2
            }
        }
        UserData   = "$([InventoryWindow]::DivLineHorizontalString)"
        UseATReset = $true
    }

    Static [Boolean]$DebugMode     = $false
    Static [Int]$MoronCounter      = 0
    Static [String]$ZeroPagePrompt = 'You have no items in your inventory.'

    [Boolean]$PlayerChevronDirty
    [Boolean]$PagingChevronRightDirty
    [Boolean]$PagingChevronLeftDirty
    [Boolean]$ItemsListDirty
    [Boolean]$CurrentPageDirty
    [Boolean]$PlayerChevronVisible
    [Boolean]$PagingChevronRightVisible
    [Boolean]$PagingChevronLeftVisible
    [Boolean]$ZeroPageActive
    [Boolean]$MoronPageActive
    [Boolean]$BookDirty
    [Boolean]$ActiveItemBlinking
    [Boolean]$DivLineDirty
    [Boolean]$ItemDescDirty
    [Boolean]$ZpBlankedDirty
    [Boolean]$ZpPromptDirty

    [Int]$ItemsPerPage
    [Int]$NumPages
    [Int]$CurrentPage
    [Int]$ActiveIChevronIndex
    [List[MapTileObject]]$PageRefs
    [List[ValueTuple[[ATString], [Boolean]]]]$IChevrons
    [List[ATString]]$ItemLabels
    [List[ATString]]$ItemLabelBlanks

    InventoryWindow() : base() {
        $this.LeftTop          = [ATCoordinates]@{
            Row    = [InventoryWindow]::WindowLTRow
            Column = [InventoryWindow]::WindowLTColumn
        }
        $this.RightBottom      = [ATCoordinates]@{
            Row    = [InventoryWindow]::WindowBRRow
            Column = [InventoryWindow]::WindowBRColumn
        }

        $this.UpdateDimensions()
        $this.SetupTitle([InventoryWindow]::WindowTitle, [CCTextDefault24]::new())

        $this.PlayerChevronDirty        = $true
        $this.PagingChevronRightDirty   = $true
        $this.PagingChevronLeftDirty    = $true
        $this.ItemsListDirty            = $true
        $this.CurrentPageDirty          = $true
        $this.PlayerChevronVisible      = $true
        $this.PagingChevronRightVisible = $false
        $this.PagingChevronLeftVisible  = $false
        $this.ZeroPageActive            = $false
        $this.MoronPageActive           = $false
        $this.BookDirty                 = $true
        $this.ActiveItemBlinking        = $false
        $this.DivLineDirty              = $true
        $this.ItemDescDirty             = $true
        $this.ZpBlankedDirty            = $true
        $this.ZpPromptDirty             = $true
        $this.ItemsPerPage              = 10
        $this.NumPages                  = 1
        $this.CurrentPage               = 1
        $this.PageRefs                  = [List[MapTileObject]]::new()

        $this.CreateIChevrons()
    }

    [Void]Draw() {
        ([WindowBase]$this).Draw()

        If($this.BookDirty -EQ $true) {
            $this.CalculateNumPages()
            $this.BookDirty = $false
        }
        If($this.CurrentPageDirty -EQ $true) {
            $this.PopulatePage()
        }
        If($this.ZeroPageActive -EQ $true) {
            If($this.MoronPageActive -EQ $true) {
                $this.WriteMoronPage()
            } Else {
                $this.WriteZeroInventoryPage()
            }
        } Else {
            If($this.DivLineDirty -EQ $true) {
                Write-Host "$([InventoryWindow]::DivLineHorizontal.ToAnsiControlSequenceString())"
                $this.DivLineDirty = $false
            }
            If(($this.PlayerChevronVisible -EQ $true) -AND ($this.PlayerChevronDirty -EQ $true)) {
                Foreach($ic in $this.IChevrons) {
                    Write-Host "$($ic.Item1.ToAnsiControlSequenceString())"
                }
                $this.PlayerChevronDirty = $false
            }
            If($this.NumPages -GT 1) {
                If($this.CurrentPage -EQ 1) {
                    If($this.PagingChevronLeftVisible -EQ $true) {
                        Write-Host "$([InventoryWindow]::PagingChevronLeftBlank.ToAnsiControlSequenceString())"
                        $this.PagingChevronLeftVisible = $false
                        $this.PagingChevronLeftDirty   = $true
                    }
                    If($this.PagingChevronRightVisible -EQ $false) {
                        $this.PagingChevronRightVisible = $true
                    }
                    If(($this.PagingChevronRightVisible -EQ $true) -AND ($this.PagingChevronRightDirty -EQ $true)) {
                        Write-Host "$([InventoryWindow]::PagingChevronRight.ToAnsiControlSequenceString())"
                        $this.PagingChevronRightDirty = $false
                    }
                } Elseif(($this.CurrentPage -GT 1) -AND ($this.CurrentPage -LT $this.NumPages)) {
                    If($this.PagingChevronLeftVisible -EQ $false) {
                        $this.PagingChevronLeftVisible = $true
                    }
                    If($this.PagingChevronRightVisible -EQ $false) {
                        $this.PagingChevronRightVisible = $true
                    }
                    If(($this.PagingChevronRightVisible -EQ $true) -AND ($this.PagingChevronRightDirty -EQ $true)) {
                        Write-Host "$([InventoryWindow]::PagingChevronRight.ToAnsiControlSequenceString())"
                        $this.PagingChevronRightDirty = $false
                    }
                    If(($this.PagingChevronLeftVisible -EQ $true) -AND ($this.PagingChevronLeftDirty -EQ $true)) {
                        Write-Host "$([InventoryWindow]::PagingChevronLeft.ToAnsiControlSequenceString())"
                        $this.PagingChevronLeftDirty = $false
                    }
                } Elseif($this.CurrentPage -GE $this.NumPages) {
                    If($this.PagingChevronRightVisible -EQ $true) {
                        Write-Host "$([InventoryWindow]::PagingChevronRightBlank.ToAnsiControlSequenceString())"
                        $this.PagingChevronRightVisible = $false
                        $this.PagingChevronRightDirty   = $true
                    }
                    If($this.PagingChevronLeftVisible -EQ $false) {
                        $this.PagingChevronLeftVisible = $true
                    }
                    If(($this.PagingChevronLeftVisible -EQ $true) -AND ($this.PagingChevronLeftDirty -EQ $true)) {
                        Write-Host "$([InventoryWindow]::PagingChevronLeft.ToAnsiControlSequenceString())"
                        $this.PagingChevronLeftDirty = $false
                    }
                }
            } Elseif($this.NumPages -EQ 1) {
                If($this.PagingChevronLeftVisible -EQ $true) {
                    $this.PagingChevronLeftVisible = $false
                }
                If($this.PagingChevronRightVisible -EQ $true) {
                    $this.PagingChevronRightVisible = $false
                }
                If($this.PagingChevronLeftVisible -EQ $false) {
                    Write-Host "$([InventoryWindow]::PagingChevronLeftBlank.ToAnsiControlSequenceString())"
                }
                If($this.PagingChevronRightVisible -EQ $false) {
                    Write-Host "$([InventoryWindow]::PagingChevronRightBlank.ToAnsiControlSequenceString())"
                }
            }
            If($this.ActiveItemBlinking -EQ $false) {
                $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations = [ATDecoration]@{
                    Blink = $true
                }
                $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCListItemCurrentHighlight24]::new()
                $this.ItemsListDirty                                               = $true
                $this.ActiveItemBlinking                                           = $true
            }
            If($this.ItemsListDirty -EQ $true) {
                $this.WriteItemLabels()
                Write-Host "$([ATControlSequences]::CursorHide)"
                $this.ItemsListDirty = $false
            }
            If($this.ItemDescDirty -EQ $true) {
                [ATString]$b = [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = 15
                            Column = 4
                        }
                    }
                    UserData   = [InventoryWindow]::DescLineBlank
                    UseATReset = $true
                }
                [ATString]$d = [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = 15
                            Column = 4
                        }
                    }
                    UserData   = $this.PageRefs[$this.ActiveIChevronIndex].ExamineString
                    UseATReset = $true
                }
                [ATString]$f = [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = 16
                            Column = 4
                        }
                    }
                    UserData   = [InventoryWindow]::DescLineBlank
                    UseATReset = $true
                }
                [ATString]$e = [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCApplePinkLight24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = 16
                            Column = 4
                        }
                    }
                    UserData   = $this.PageRefs[$this.ActiveIChevronIndex].PlayerEffectString
                    UseATReset = $true
                }
                [ATString]$h = [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = 17
                            Column = 4
                        }
                    }
                    UserData   = [InventoryWindow]::DescLineBlank
                    UseATReset = $true
                }
                [ATString]$i = [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAppleYellowLight24]::new()
                        Decorations     = [ATDecoration]@{
                            Blink  = $true
                            Italic = $true
                        }
                        Coordinates = [ATCoordinates]@{
                            Row    = 17
                            Column = 4
                        }
                    }
                    UserData   = ($this.PageRefs[$this.ActiveIChevronIndex].KeyItem -EQ $true ? 'KEY ITEM' : '')
                    UseATReset = $true
                }
                Write-Host "$($b.ToAnsiControlSequenceString())$($d.ToAnsiControlSequenceString())$($f.ToAnsiControlSequenceString())$($e.ToAnsiControlSequenceString())$($h.ToAnsiControlSequenceString())$($i.ToAnsiControlSequenceString())"
            }
        }
    }

    [Void]CreateIChevrons() {
        $this.IChevrons = [List[ValueTuple[[ATString], [Boolean]]]]::new()
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = 3
                        Column = 15
                    }
                }
                UserData   = [InventoryWindow]::IChevronCharacter
                UseATReset = $true
            },
            $true
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = 5
                        Column = 15
                    }
                }
                UserData = [InventoryWindow]::IChevronBlankCharacter
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates      = [ATCoordinates]@{
                        Row    = 7
                        Column = 15
                    }
                }
                UserData = [InventoryWindow]::IChevronBlankCharacter
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = 9
                        Column = 15
                    }
                }
                UserData = [InventoryWindow]::IChevronBlankCharacter
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = 11
                        Column = 15
                    }
                }
                UserData = [InventoryWindow]::IChevronBlankCharacter
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = 3
                        Column = 50
                    }
                }
                UserData = [InventoryWindow]::IChevronBlankCharacter
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = 5
                        Column = 50
                    }
                }
                UserData = [InventoryWindow]::IChevronBlankCharacter
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = 7
                        Column = 50
                    }
                }
                UserData = [InventoryWindow]::IChevronBlankCharacter
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = 9
                        Column = 50
                    }
                }
                UserData = [InventoryWindow]::IChevronBlankCharacter
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = 11
                        Column = 50
                    }
                }
                UserData = [InventoryWindow]::IChevronBlankCharacter
            },
            $false
        ))
    }

    [Void]CreateItemLabels() {
        $this.ItemLabels = [List[ATString]]::new()
        [Int]$c          = 0

        Foreach($i in $this.PageRefs) {
            $this.ItemLabels.Add(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.IChevrons[$c].Item1.Prefix.Coordinates.Row
                            Column = $this.IChevrons[$c].Item1.Prefix.Coordinates.Column + 2
                        }
                    }
                    UserData = $i.Name
                    UseATReset = $true
                }
            )
            $c++ # FYI - This was intentional
        }
        $this.ResetIChevronPosition()
        $this.CreateItemLabelBlanks()
    }

    [Void]CreateItemLabelBlanks() {
        $this.ItemLabelBlanks = [List[ATString]]::new()
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = 3
                        Column = 17
                    }
                }
                UserData   = [InventoryWindow]::ItemLabelBlank
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = 5
                        Column = 17
                    }
                }
                UserData   = [InventoryWindow]::ItemLabelBlank
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = 7
                        Column = 17
                    }
                }
                UserData   = [InventoryWindow]::ItemLabelBlank
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = 9
                        Column = 17
                    }
                }
                UserData   = [InventoryWindow]::ItemLabelBlank
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = 11
                        Column = 17
                    }
                }
                UserData   = [InventoryWindow]::ItemLabelBlank
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = 3
                        Column = 52
                    }
                }
                UserData   = [InventoryWindow]::ItemLabelBlank
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = 5
                        Column = 52
                    }
                }
                UserData   = [InventoryWindow]::ItemLabelBlank
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = 7
                        Column = 52
                    }
                }
                UserData   = [InventoryWindow]::ItemLabelBlank
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = 9
                        Column = 52
                    }
                }
                UserData   = [InventoryWindow]::ItemLabelBlank
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = 11
                        Column = 52
                    }
                }
                UserData   = [InventoryWindow]::ItemLabelBlank
                UseATReset = $true
            }
        )
    }

    [Void]CalculateNumPages() {
        $pp = $Script:ThePlayer.Inventory.Count / $this.ItemsPerPage
        If($pp -LT 1) {
            $this.NumPages = 1
        } Else {
            $this.NumPages = [Math]::Ceiling($pp)
        }
        If($this.CurrentPage -GT $this.NumPages) {
            $this.CurrentPage = $this.NumPages
        }
    }

    [Void]TurnPageForward() {
        If(($this.CurrentPage + 1) -LE $this.NumPages) {
            $this.CurrentPage++
            $this.CurrentPageDirty   = $true
            $this.ActiveItemBlinking = $false
            $this.ItemDescDirty      = $true
        }
    }

    [Void]TurnPageBackward() {
        If(($this.CurrentPage - 1) -GE 1) {
            $this.CurrentPage--
            $this.CurrentPageDirty   = $true
            $this.ActiveItemBlinking = $false
            $this.ItemDescDirty      = $true
        }
    }

    [Void]PopulatePage() {
        If($Script:ThePlayer.Inventory.Count -LE 0) {
            $this.ZeroPageActive   = $true
            $this.CurrentPageDirty = $false
            $this.ZpPromptDirty    = $true
            $this.ZpBlankedDirty   = $true

            If([InventoryWindow]::MoronCounter -LT 20) {
                [InventoryWindow]::MoronCounter++
            } Else {
                $this.MoronPageActive = $true
            }
        } Else {
            $this.PageRefs        = [List[MapTileObject]]::new()
            $this.ZeroPageActive  = $false
            $this.MoronPageActive = $false
            $rs                   = (($this.CurrentPage * $this.ItemsPerPage) - $this.ItemsPerPage)
            $rs                   = [Math]::Clamp($rs, 0, [Int]::MaxValue)
            $re                   = 10

            Try {
                $this.PageRefs = $Script:ThePlayer.Inventory.GetRange($rs, $re)
            } Catch {
                $this.PageRefs = $Script:ThePlayer.Inventory.GetRange($rs, ($Script:ThePlayer.Inventory.Count - $rs))
            }
            $this.CreateItemLabels()
            $this.ItemsListDirty   = $true
            $this.CurrentPageDirty = $false
        }
    }

    [Void]WriteItemLabels() {
        Foreach($i in $this.ItemLabelBlanks) {
            Write-Host "$($i.ToAnsiControlSequenceString())"
        }
        Foreach($i in $this.ItemLabels) {
            Write-Host "$($i.ToAnsiControlSequenceString())"
        }
    }

    [ATString]GetActiveIChevron() {
        $this.ActiveIChevronIndex = 0
        Foreach($a in $this.IChevrons) {
            If($a.Item2 -EQ $true) {
                Return $a.Item1
            }
            $this.ActiveIChevronIndex++
        }
        $this.ActiveIChevronIndex                        = 0
        $this.IChevrons[$this.ActiveIChevronIndex].Item2 = $true

        Return $this.IChevrons[$this.ActiveIChevronIndex].Item1
    }

    [Void]WriteZeroInventoryPage() {
        If($this.ZpBlankedDirty -EQ $true) {
            Foreach($a in 2..19) {
                [ATString]$b = [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $a
                            Column = 2
                        }
                    }
                    UserData   = [InventoryWindow]::ZpLineBlank
                    UseATReset = $true
                }
                Write-Host "$($b.ToAnsiControlSequenceString())"
            }
            $this.ZpBlankedDirty = $false
        }
        If($this.ZpPromptDirty -EQ $true) {
            [ATString]$a = [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.Height / 2
                        Column = ($this.Width / 2) - ([InventoryWindow]::ZeroPagePrompt.Length / 2)
                    }
                }
                UserData   = [InventoryWindow]::ZeroPagePrompt
                UseATReset = $true
            }
            Write-Host "$($a.ToAnsiControlSequenceString())"
            $this.ZpPromptDirty = $false
        }
    }

    [Void]WriteMoronPage() {}

    [Void]ResetIChevronPosition() {
        $this.IChevrons[$this.ActiveIChevronIndex].Item2          = $false
        $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData = [InventoryWindow]::IChevronBlankCharacter
        Try {
            $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecorationNone]::new()
            $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCTextDefault24]::new()
        } Catch {}
        $this.ActiveIChevronIndex                                          = 0
        $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $true
        $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = [InventoryWindow]::IChevronCharacter
        $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecoration]@{
            Blink = $true
        }
        $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCApplePinkLight24]::new()
        $this.PlayerChevronDirty                                           = $true
        $this.ActiveItemBlinking                                           = $false
        $this.ItemDescDirty                                                = $true
    }

    [Void]HandleInput() {
        $keyCap = $(Get-Host).UI.RawUI.ReadKey('IncludeKeyDown, NoEcho')

        #######################################################################
        #
        # BECAUSE POWERSHELL HAS BEEN REALLY WEIRD ABOUT MAPPING THE VALUE
        # OF VIRTUALKEYCODE TO AN ENUMERATION, TYPED OR OTHERWISE, I SHOULD
        # COMMENT THE MAPPINGS HERE SO THAT IT'S OBVIOUS WHAT KEY IS DOING
        # WHAT.
        #
        #######################################################################
        Switch($keyCap.VirtualKeyCode) {
            27 {
                $Script:ThePreviousGlobalGameState = $Script:TheGlobalGameState
                $Script:TheGlobalGameState         = [GameStatePrimary]::GamePlayScreen
            }

            38 {
                If(($this.ActiveIChevronIndex - 1) -GE 0) {
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $false
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = [InventoryWindow]::IChevronBlankCharacter
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecorationNone]::new()
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCTextDefault24]::new()
                    $this.ActiveIChevronIndex--
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $true
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = [InventoryWindow]::IChevronCharacter
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCApplePinkLight24]::new()
                }
                $this.PlayerChevronDirty = $true
                $this.ActiveItemBlinking = $false
                $this.ItemDescDirty      = $true
            }

            40 {
                If(($this.ActiveIChevronIndex + 1) -LT $this.PageRefs.Count) {
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $false
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = [InventoryWindow]::IChevronBlankCharacter
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecorationNone]::new()
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCTextDefault24]::new()
                    $this.ActiveIChevronIndex++
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $true
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = [InventoryWindow]::IChevronCharacter
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCApplePinkLight24]::new()
                }
                $this.PlayerChevronDirty                                               = $true
                $this.ActiveItemBlinking                                               = $false
                $this.ItemDescDirty                                                    = $true
            }

            39 {
                If(($this.ActiveIChevronIndex + 5) -LT $this.PageRefs.Count) {
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $false
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = [InventoryWindow]::IChevronBlankCharacter
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecorationNone]::new()
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCTextDefault24]::new()
                    $this.ActiveIChevronIndex += 5
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $true
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = [InventoryWindow]::IChevronCharacter
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCApplePinkLight24]::new()
                }
                $this.PlayerChevronDirty                                               = $true
                $this.ActiveItemBlinking                                               = $false
                $this.ItemDescDirty                                                    = $true
            }

            37 {
                If(($this.ActiveIChevronIndex -5) -GE 0) {
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $false
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = [InventoryWindow]::IChevronBlankCharacter
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecorationNone]::new()
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCTextDefault24]::new()
                    $this.ActiveIChevronIndex -= 5
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $true
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = [InventoryWindow]::IChevronCharacter
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCApplePinkLight24]::new()
                }
                $this.PlayerChevronDirty                                               = $true
                $this.ActiveItemBlinking                                               = $false
                $this.ItemDescDirty                                                    = $true
            }

            68 {
                $this.TurnPageForward()
            }

            65 {
                $this.TurnPageBackward()
            }

            83 {
                Switch($this.CurrentPage) {
                    1 {
                        [ItemRemovalStatus]$a = $Script:ThePlayer.RemoveInventoryItemByIndex($this.ActiveIChevronIndex)
                        If($a -EQ [ItemRemovalStatus]::Success) {
                            [Console]::Beep(493.9, 250)
                            [Console]::Beep((493.9 * 2), 250)
                            $this.BookDirty        = $true
                            $this.CurrentPageDirty = $true

                            Return
                        }
                        [Console]::Beep(493.9, 250)
                        [Console]::Beep((493.9 / 2), 250)
                    }

                    { $_ -GT 1 } {
                        [Int]$a               = ((10 * ($this.CurrentPage - 1)) + $this.ActiveIChevronIndex)
                        [ItemRemovalStatus]$b = $Script:ThePlayer.RemoveInventoryItemByIndex($a)
                        If($b -EQ [ItemRemovalStatus]::Success) {
                            [Console]::Beep(493.9, 250)
                            [Console]::Beep((493.9 * 2), 250)
                            $this.BookDirty        = $true
                            $this.CurrentPageDirty = $true

                            Return
                        }
                        [Console]::Beep(493.9, 250)
                        [Console]::Beep((493.9 / 2), 250)
                    }
                }
            }
        }
    }
}





###############################################################################
#
# BATTLE ENTITY STATUS WINDOW
#
# THIS IS THE STATUS WINDOW THAT DISPLAYS THE STATUS OF A BATTLE ENTITY IN THE
# BATTLE SCREEN.
#
# BECAUSE IN THE BATTLE SCREEN MULTIPLE INSTANCES OF THIS WINDOW EXIST, THERE
# ARE SOME ANTI-PATTERNS EXHIBITED HERE IN RELATION TO THE OTHER WINDOWS. THE
# FOLLOWING VARIABLES ARE DEMOTED FROM STATIC TO INSTANCE MEMBERS:
#
# WINDOWLTROW
# WINDOWLTCOLUMN
# WINDOWRBROW
# WINDOWRBCOLUMN
#
###############################################################################
Class BattleEntityStatusWindow : WindowBase {
    Static [String]$FullLineBlankActual    = '                '

    [ATCoordinates]$HpDrawCoordinates
    [ATCoordinates]$MpDrawCoordinates
    [ATCoordinates]$StatL1DrawCoordinates
    [ATCoordinates]$StatL2DrawCoordinates
    [ATCoordinates]$StatL3DrawCoordinates
    [ATCoordinates]$StatL4DrawCoordinates
    [Int]$WindowLTRow
    [Int]$WindowLTColumn
    [Int]$WindowRBRow
    [Int]$WindowRBColumn
    [Boolean]$HpDrawDirty
    [Boolean]$MpDrawDirty
    [Boolean]$StatL1DrawDirty
    [Boolean]$StatL2DrawDirty
    [Boolean]$StatL3DrawDirty
    [Boolean]$StatL4DrawDirty
    [Boolean]$EntityBattlePhaseActive
    [Boolean]$HasSetEntityActive
    [ATString]$FullLineBlank
    [ATStringComposite]$HpDrawString
    [ATStringComposite]$MpDrawString
    [ATStringComposite]$StatL1DrawString
    [ATStringComposite]$StatL2DrawString
    [ATStringComposite]$StatL3DrawString
    [ATStringComposite]$StatL4DrawString
    [BattleEntity]$BERef

    BattleEntityStatusWindow() : base() {
        $this.WindowLTRow    = 1
        $this.WindowLTColumn = 1
        $this.WindowRBRow    = 1
        $this.WindowRBColumn = 1
        $this.LeftTop = [ATCoordinates]@{
            Row    = $this.WindowLTRow
            Column = $this.WindowLTColumn
        }
        $this.RightBottom = [ATCoordinates]@{
            Row    = $this.WindowRBRow
            Column = $this.WindowRBColumn
        }

        $this.UpdateDimensions()

        [Int]$ColDef = $this.LeftTop.Column + 2
        $this.HpDrawCoordinates = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 2
            Column = $ColDef
        }
        $this.MpDrawCoordinates = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 5
            Column = $ColDef
        }
        $this.StatL1DrawCoordinates = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 9
            Column = $ColDef
        }
        $this.StatL2DrawCoordinates = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 11
            Column = $ColDef
        }
        $this.StatL3DrawCoordinates = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 13
            Column = $ColDef
        }
        $this.StatL4DrawCoordinates = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 15
            Column = $ColDef
        }
        $this.HpDrawDirty             = $true
        $this.MpDrawDirty             = $true
        $this.StatL1DrawDirty         = $true
        $this.StatL2DrawDirty         = $true
        $this.StatL3DrawDirty         = $true
        $this.StatL4DrawDirty         = $true
        $this.EntityBattlePhaseActive = $false
        $this.HasSetEntityActive      = $false
        $this.BERef                   = $null
        $this.FullLineBlank           = [ATString]@{
            UserData   = [BattleEntityStatusWindow]::FullLineBlankActual
            UseATReset = $true
        }
    }

    BattleEntityStatusWindow(
        [Int]$WindowLTRow,
        [Int]$WindowLTColumn,
        [Int]$WindowRBRow,
        [Int]$WindowRBColumn,
        [BattleEntity]$BERef
    ) : base() {
        $this.WindowLTRow    = $WindowLTRow
        $this.WindowLTColumn = $WindowLTColumn
        $this.WindowRBRow    = $WindowRBRow
        $this.WindowRBColumn = $WindowRBColumn
        $this.LeftTop = [ATCoordinates]@{
            Row    = $this.WindowLTRow
            Column = $this.WindowLTColumn
        }
        $this.RightBottom = [ATCoordinates]@{
            Row    = $this.WindowRBRow
            Column = $this.WindowRBColumn
        }

        $this.UpdateDimensions()

        [Int]$ColDef = $this.LeftTop.Column + 2
        $this.HpDrawCoordinates = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 2
            Column = $ColDef
        }
        $this.MpDrawCoordinates = [ATCoordinates]@{
            Row    = $this.HpDrawCoordinates.Row + 3
            Column = $ColDef
        }
        $this.StatL1DrawCoordinates = [ATCoordinates]@{
            Row    = $this.MpDrawCoordinates.Row + 3
            Column = $ColDef
        }
        $this.StatL2DrawCoordinates = [ATCoordinates]@{
            Row    = $this.StatL1DrawCoordinates.Row + 2
            Column = $ColDef
        }
        $this.StatL3DrawCoordinates = [ATCoordinates]@{
            Row    = $this.StatL2DrawCoordinates.Row + 2
            Column = $ColDef
        }
        $this.StatL4DrawCoordinates = [ATCoordinates]@{
            Row    = $this.StatL3DrawCoordinates.Row + 2
            Column = $ColDef
        }
        $this.HpDrawDirty             = $true
        $this.MpDrawDirty             = $true
        $this.StatL1DrawDirty         = $true
        $this.StatL2DrawDirty         = $true
        $this.StatL3DrawDirty         = $true
        $this.StatL4DrawDirty         = $true
        $this.EntityBattlePhaseActive = $false
        $this.HasSetEntityActive      = $false
        $this.BERef                   = $BERef
        $this.FullLineBlank           = [ATString]@{
            Prefix     = [ATStringPrefix]::new()
            UserData   = [BattleEntityStatusWindow]::FullLineBlankActual
            UseATReset = $true
        }

        $this.SetupTitle("$(
            (
                [ATStringComposite]::new(@(
                    [ATString]@{
                        Prefix = [ATStringPrefix]@{
                            ForegroundColor = $Script:BATAdornmentCharTable[$this.BERef.Affinity].Item2
                        }
                        UserData   = "$($Script:BATAdornmentCharTable[$this.BERef.Affinity].Item1)"
                        UseATReset = $true
                    },
                    [ATString]@{
                        Prefix = [ATStringPrefix]@{
                            ForegroundColor = $this.BERef.NameDrawColor
                        }
                        UserData   = " $($this.BERef.Name)"
                        UseATReset = $true
                    }
                ))
            ).ToAnsiControlSequenceString()
        )", $this.BERef.NameDrawColor)
    }

    [Void]Draw() {
        If(($this.EntityBattlePhaseActive -EQ $true) -AND ($this.HasSetEntityActive -EQ $false)) {
            $this.BorderDrawColors = [ConsoleColor24[]](
                [CCAppleYellowDark24]::new(),
                [CCAppleYellowDark24]::new(),
                [CCAppleYellowDark24]::new(),
                [CCAppleYellowDark24]::new(),
                [CCAppleYellowDark24]::new(),
                [CCAppleYellowDark24]::new(),
                [CCAppleYellowDark24]::new(),
                [CCAppleYellowDark24]::new()
            )
            $this.BorderDrawDirty = [Boolean[]](
                $true,
                $true,
                $true,
                $true,
                $true,
                $true,
                $true,
                $true
            )
            $this.HasSetEntityActive = $true
            $this.TitleDirty         = $true
        } Elseif($this.EntityBattlePhaseActive -EQ $false) {
            $this.BorderDrawColors = [ConsoleColor24[]](
                [CCWindowBorderDefault24]::new(),
                [CCWindowBorderDefault24]::new(),
                [CCWindowBorderDefault24]::new(),
                [CCWindowBorderDefault24]::new(),
                [CCWindowBorderDefault24]::new(),
                [CCWindowBorderDefault24]::new(),
                [CCWindowBorderDefault24]::new(),
                [CCWindowBorderDefault24]::new()
            )
            $this.BorderDrawDirty = [Boolean[]](
                $true,
                $true,
                $true,
                $true,
                $true,
                $true,
                $true,
                $true
            )
            $this.HasSetEntityActive = $false
            $this.TitleDirty         = $true
        }

        ([WindowBase]$this).Draw()
        If($this.HpDrawDirty -EQ $true) {
            $this.CreateHpDrawString()
            $this.FullLineBlank.Prefix.Coordinates = [ATCoordinates]::new($this.HpDrawCoordinates)
            Write-Host "$($this.FullLineBlank.ToAnsiControlSequenceString())"
            $this.FullLineBlank.Prefix.Coordinates.Row++
            Write-Host "$($this.FullLineBlank.ToAnsiControlSequenceString())$($this.HpDrawString.ToAnsiControlSequenceString())"
            $this.HpDrawDirty = $false
        }
        If($this.MpDrawDirty -EQ $true) {
            $this.CreateMpDrawString()
            $this.FullLineBlank.Prefix.Coordinates = [ATCoordinates]::new($this.MpDrawCoordinates)
            Write-Host "$($this.FullLineBlank.ToAnsiControlSequenceString())$($this.MpDrawString.ToAnsiControlSequenceString())"
            $this.MpDrawDirty = $false
        }
        If($this.StatL1DrawDirty -EQ $true) {
            $this.CreateStatL1DrawString()
            $this.FullLineBlank.Prefix.Coordinates = [ATCoordinates]::new($this.StatL1DrawCoordinates)
            Write-Host "$($this.FullLineBlank.ToAnsiControlSequenceString())$($this.StatL1DrawString.ToAnsiControlSequenceString())"
            $this.StatL1DrawDirty = $false
        }
        If($this.StatL2DrawDirty -EQ $true) {
            $this.CreateStatL2DrawString()
            $this.FullLineBlank.Prefix.Coordinates = [ATCoordinates]::new($this.StatL2DrawCoordinates)
            Write-Host "$($this.FullLineBlank.ToAnsiControlSequenceString())$($this.StatL2DrawString.ToAnsiControlSequenceString())"
            $this.StatL2DrawDirty = $false
        }
        If($this.StatL3DrawDirty -EQ $true) {
            $this.CreateStatL3DrawString()
            $this.FullLineBlank.Prefix.Coordinates = [ATCoordinates]::new($this.StatL3DrawCoordinates)
            Write-Host "$($this.FullLineBlank.ToAnsiControlSequenceString())$($this.StatL3DrawString.ToAnsiControlSequenceString())"
            $this.StatL3DrawDirty = $false
        }
        If($this.StatL4DrawDirty -EQ $true) {
            $this.CreateStatL4DrawString()
            $this.FullLineBlank.Prefix.Coordinates = [ATCoordinates]::new($this.StatL4DrawCoordinates)
            Write-Host "$($this.FullLineBlank.ToAnsiControlSequenceString())$($this.StatL4DrawString.ToAnsiControlSequenceString())"
            $this.StatL4DrawDirty = $false
        }
    }

    [Void]CreateHpDrawString() {
        [ConsoleColor24]$NumDrawColor = [CCTextDefault24]::new()
        [ATDecoration]$NumDeco        = [ATDecorationNone]::new()

        Switch($this.BERef.Stats[[StatId]::HitPoints].State) {
            ([StatNumberState]::Normal) {
                $NumDrawColor = [BattleEntityProperty]::StatNumDrawColorSafe
            }

            ([StatNumberState]::Caution) {
                $NumDrawColor = [BattleEntityProperty]::StatNumDrawColorCaution
            }

            ([StatNumberState]::Danger) {
                $NumDrawColor = [BattleEntityProperty]::StatNumDrawColorDanger
                $NumDeco      = [ATDecoration]@{
                    Blink = $true
                }
            }

            Default {
                $NumDrawColor = [BattleEntityProperty]::StatNumDrawColorSafe
            }
        }

        $this.HpDrawString = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates     = $this.HpDrawCoordinates
                }
                UserData = 'H '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $NumDrawColor
                    Decorations     = $NumDeco
                }
                UserData = "$($this.BERef.Stats[[StatId]::HitPoints].Base)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.HpDrawCoordinates.Row + 1
                        Column = $this.HpDrawCoordinates.Column + 6
                    }
                }
                UserData = '/ '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $NumDrawColor
                    Decorations     = $NumDeco
                }
                UserData   = "$($this.BERef.Stats[[StatId]::HitPoints].Max)"
                UseATReset = $true
            }
        ))
    }

    [Void]CreateMpDrawString() {
        [ConsoleColor24]$NumDrawColor = [CCTextDefault24]::new()
        [ATDecoration]$NumDeco        = [ATDecorationNone]::new()

        Switch($this.BERef.Stats[[StatId]::MagicPoints].State) {
            ([StatNumberState]::Normal) {
                $NumDrawColor = [BattleEntityProperty]::StatNumDrawColorSafe
            }

            ([StatNumberState]::Caution) {
                $NumDrawColor = [BattleEntityProperty]::StatNumDrawColorCaution
            }

            ([StatNumberState]::Danger) {
                $NumDrawColor = [BattleEntityProperty]::StatNumDrawColorDanger
                $NumDeco      = [ATDecoration]@{
                    Blink = $true
                }
            }

            Default {
                $NumDrawColor = [BattleEntityProperty]::StatNumDrawColorSafe
            }
        }

        $this.MpDrawString = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates     = $this.MpDrawCoordinates
                }
                UserData = 'M '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $NumDrawColor
                    Decorations     = $NumDeco
                }
                UserData = "$($this.BERef.Stats[[StatId]::MagicPoints].Base)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.MpDrawCoordinates.Row + 1
                        Column = $this.MpDrawCoordinates.Column + 6
                    }
                }
                UserData = '/ '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $NumDrawColor
                    Decorations     = $NumDeco
                }
                UserData   = "$($this.BERef.Stats[[StatId]::MagicPoints].Max)"
                UseATReset = $true
            }
        ))
    }

    [Void]CreateStatL1DrawString() {
        [BattleEntityProperty]$AtkStat = $this.BERef.Stats[[StatId]::Attack]
        [BattleEntityProperty]$DefStat = $this.BERef.Stats[[StatId]::Defense]
        [ConsoleColor24]$AtkDrawColor  = [CCTextDefault24]::new()
        [ConsoleColor24]$DefDrawColor  = [CCTextDefault24]::new()
        [String]$AtkStatSignStr        = ''
        [String]$DefStatSignStr        = ''
        [String]$AtkStatFmtStr         = ''
        [String]$DefStatFmtStr         = ''

        If($AtkStat.AugmentTurnDuration -GT 0) {
            Switch($AtkStat.BaseAugmentValue) {
                { $_ -GT 0 } {
                    $AtkDrawColor   = [BattleEntityProperty]::StatAugDrawColorPositive
                    $AtkStatSignStr = '+'
                }

                { $_ -LT 0 } {
                    $AtkDrawColor   = [BattleEntityProperty]::StatAugDrawColorNegative
                    $AtkStatSignStr = '-'
                }

                Default {
                    $AtkDrawColor   = [CCTextDefault24]::new()
                    $AtkStatSignStr = ' '
                }
            }
        } Else {
            $AtkDrawColor   = [CCTextDefault24]::new()
            $AtkStatSignStr = ' '
        }
        If($AtkStat.Base -LT 10) {
            $AtkStatFmtStr = "{0:d2}" -F $AtkStat.Base
        } Elseif($AtkStat.Base -GE 10) {
            $AtkStatFmtStr = "$($AtkStat.Base)"
        }

        If($DefStat.AugmentTurnDuration -GT 0) {
            Switch($DefStat.BaseAugmentValue) {
                { $_ -GT 0 } {
                    $DefDrawColor   = [BattleEntityProperty]::StatAugDrawColorPositive
                    $DefStatSignStr = '+'
                }

                { $_ -LT 0 } {
                    $DefDrawColor   = [BattleEntityProperty]::StatAugDrawColorNegative
                    $DefStatSignStr = '-'
                }

                Default {
                    $DefDrawColor   = [CCTextDefault24]::new()
                    $DefStatSignStr = ' '
                }
            }
        } Else {
            $DefDrawColor   = [CCTextDefault24]::new()
            $DefStatSignStr = ' '
        }
        If($DefStat.Base -LT 10) {
            $DefStatFmtStr = "{0:d2}" -F $DefStat.Base
        } Elseif($DefStat.Base -GE 10) {
            $DefStatFmtStr = "$($DefStat.Base)"
        }

        $this.StatL1DrawString = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates     = $this.StatL1DrawCoordinates
                }
                UserData = 'ATK '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $AtkDrawColor
                }
                UserData = "$($AtkStatSignStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $AtkDrawColor
                }
                UserData = "$($AtkStatFmtStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = ' DEF '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $DefDrawColor
                }
                UserData = "$($DefStatSignStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $DefDrawColor
                }
                UserData   = "$($DefStatFmtStr)"
                UseATReset = $true
            }
        ))
    }

    [Void]CreateStatL2DrawString() {
        [BattleEntityProperty]$MatStat = $this.BERef.Stats[[StatId]::MagicAttack]
        [BattleEntityProperty]$MdfStat = $this.BERef.Stats[[StatId]::MagicDefense]
        [ConsoleColor24]$MatDrawColor  = [CCTextDefault24]::new()
        [ConsoleColor24]$MdfDrawColor  = [CCTextDefault24]::new()
        [String]$MatStatSignStr        = ''
        [String]$MdfStatSignStr        = ''
        [String]$MatStatFmtStr         = ''
        [String]$MdfStatFmtStr         = ''

        If($MatStat.AugmentTurnDuration -GT 0) {
            Switch($MatStat.BaseAugmentValue) {
                { $_ -GT 0 } {
                    $MatDrawColor   = [BattleEntityProperty]::StatAugDrawColorPositive
                    $MatStatSignStr = '+'
                }

                { $_ -LT 0 } {
                    $MatDrawColor = [BattleEntityProperty]::StatAugDrawColorNegative
                    $MatStatSignStr = '-'
                }

                Default {
                    $MatDrawColor   = [CCTextDefault24]::new()
                    $MatStatSignStr = ' '
                }
            }
        } Else {
            $MatDrawColor   = [CCTextDefault24]::new()
            $MatStatSignStr = ' '
        }
        If($MatStat.Base -LT 10) {
            $MatStatFmtStr = "{0:d2}" -F $MatStat.Base
        } Elseif($MatStat.Base -GE 10) {
            $MatStatFmtStr = "$($MatStat.Base)"
        }

        If($MdfStat.AugmentTurnDuration -GT 0) {
            Switch($MdfStat.BaseAugmentValue) {
                { $_ -GT 0 } {
                    $MdfDrawColor   = [BattleEntityProperty]::StatAugDrawColorPositive
                    $MdfStatSignStr = '+'
                }

                { $_ -LT 0 } {
                    $MdfDrawColor   = [BattleEntityProperty]::StatAugDrawColorNegative
                    $MdfStatSignStr = '-'
                }

                Default {
                    $MdfDrawColor   = [CCTextDefault24]::new()
                    $MdfStatSignStr = ' '
                }
            }
        } Else {
            $MdfDrawColor   = [CCTextDefault24]::new()
            $MdfStatSignStr = ' '
        }
        If($MdfStat.Base -LT 10) {
            $MdfStatFmtStr = "{0:d2}" -F $MdfStat.Base
        } Elseif($MdfStat.Base -GE 10) {
            $MdfStatFmtStr = "$($MdfStat.Base)"
        }

        $this.StatL2DrawString = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates     = $this.StatL2DrawCoordinates
                }
                UserData = 'MAT '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $MatDrawColor
                }
                UserData = "$($MatStatSignStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $MatDrawColor
                }
                UserData = "$($MatStatFmtStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = ' MDF '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $MdfDrawColor
                }
                UserData = "$($MdfStatSignStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $MdfDrawColor
                }
                UserData   = "$($MdfStatFmtStr)"
                UseATReset = $true
            }
        ))
    }

    [Void]CreateStatL3DrawString() {
        [BattleEntityProperty]$SpdStat = $this.BERef.Stats[[StatId]::Speed]
        [BattleEntityProperty]$AccStat = $this.BERef.Stats[[StatId]::Accuracy]
        [ConsoleColor24]$SpdDrawColor  = [CCTextDefault24]::new()
        [ConsoleColor24]$AccDrawColor  = [CCTextDefault24]::new()
        [String]$SpdStatSignStr        = ''
        [String]$AccStatSignStr        = ''
        [String]$SpdStatFmtStr         = ''
        [String]$AccStatFmtStr         = ''

        If($SpdStat.AugmentTurnDuration -GT 0) {
            Switch($SpdStat.BaseAugmentValue) {
                { $_ -GT 0 } {
                    $SpdDrawColor   = [BattleEntityProperty]::StatAugDrawColorPositive
                    $SpdStatSignStr = '+'
                }

                { $_ -LT 0 } {
                    $SpdDrawColor = [BattleEntityProperty]::StatAugDrawColorNegative
                    $SpdStatSignStr = '-'
                }

                Default {
                    $SpdDrawColor   = [CCTextDefault24]::new()
                    $SpdStatSignStr = ' '
                }
            }
        } Else {
            $SpdDrawColor   = [CCTextDefault24]::new()
            $SpdStatSignStr = ' '
        }
        If($SpdStat.Base -LT 10) {
            $SpdStatFmtStr = "{0:d2}" -F $SpdStat.Base
        } Elseif($SpdStat.Base -GE 10) {
            $SpdStatFmtStr = "$($SpdStat.Base)"
        }

        If($AccStat.AugmentTurnDuration -GT 0) {
            Switch($AccStat.BaseAugmentValue) {
                { $_ -GT 0 } {
                    $AccDrawColor   = [BattleEntityProperty]::StatAugDrawColorPositive
                    $AccStatSignStr = '+'
                }

                { $_ -LT 0 } {
                    $AccDrawColor   = [BattleEntityProperty]::StatAugDrawColorNegative
                    $AccStatSignStr = '-'
                }

                Default {
                    $AccDrawColor   = [CCTextDefault24]::new()
                    $AccStatSignStr = ' '
                }
            }
        } Else {
            $AccDrawColor   = [CCTextDefault24]::new()
            $AccStatSignStr = ' '
        }
        If($AccStat.Base -LT 10) {
            $AccStatFmtStr = "{0:d2}" -F $AccStat.Base
        } Elseif($AccStat.Base -GE 10) {
            $AccStatFmtStr = "$($AccStat.Base)"
        }

        $this.StatL3DrawString = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates     = $this.StatL3DrawCoordinates
                }
                UserData = 'SPD '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $SpdDrawColor
                }
                UserData = "$($SpdStatSignStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $SpdDrawColor
                }
                UserData = "$($SpdStatFmtStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = ' ACC '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $AccDrawColor
                }
                UserData = "$($AccStatSignStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $AccDrawColor
                }
                UserData   = "$($AccStatFmtStr)"
                UseATReset = $true
            }
        ))
    }

    [Void]CreateStatL4DrawString() {
        [BattleEntityProperty]$LckStat = $this.BERef.Stats[[StatId]::Luck]
        [ConsoleColor24]$LckDrawColor  = [CCTextDefault24]::new()
        [String]$LckStatSignStr        = ''
        [String]$LckStatFmtStr         = ''

        If($LckStat.AugmentTurnDuration -GT 0) {
            Switch($LckStat.BaseAugmentValue) {
                { $_ -GT 0 } {
                    $LckDrawColor   = [BattleEntityProperty]::StatAugDrawColorPositive
                    $LckStatSignStr = '+'
                }

                { $_ -LT 0 } {
                    $LckDrawColor   = [BattleEntityProperty]::StatAugDrawColorNegative
                    $LckStatSignStr = '-'
                }

                Default {
                    $LckDrawColor   = [CCTextDefault24]::new()
                    $LckStatSignStr = ' '
                }
            }
        } Else {
            $LckDrawColor   = [CCTextDefault24]::new()
            $LckStatSignStr = ' '
        }
        If($LckStat.Base -LT 10) {
            $LckStatFmtStr = "{0:d2}" -F $LckStat.Base
        } Elseif($LckStat.Base -GE 10) {
            $LckStatFmtStr = "$($LckStat.Base)"
        }

        $this.StatL4DrawString = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates     = $this.StatL4DrawCoordinates
                }
                UserData = 'LCK '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $LckDrawColor
                }
                UserData = "$($LckStatSignStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $LckDrawColor
                }
                UserData   = "$($LckStatFmtStr)"
                UseATReset = $true
            }
        ))
    }

    [Void]SetAllFlagsDirty() {
        $this.HpDrawDirty     = $true
        $this.MpDrawDirty     = $true
        $this.StatL1DrawDirty = $true
        $this.StatL2DrawDirty = $true
        $this.StatL3DrawDirty = $true
        $this.StatL4DrawDirty = $true
    }
}





###############################################################################
#
# BATTLE PLAYER ACTION WINDOW
#
###############################################################################
Class BattlePlayerActionWindow : WindowBase {
    Static [Int]$WindowLTRow    = 18
    Static [Int]$WindowLTColumn = 1
    Static [Int]$WindowRBRow    = 23
    Static [Int]$WindowRBCOlumn = 19

    Static [String]$PlayerChevronCharacter      = '❱'
    Static [String]$PlayerChevronBlankCharacter = ' '
    Static [String]$WindowTitle                 = 'Actions'

    Static [ATString]$PlayerChevron = [ATString]@{
        Prefix = [ATStringPrefix]@{
            ForegroundColor = [CCTextDefault24]::new()
        }
        UserData   = "$([BattlePlayerActionWindow]::PlayerChevronCharacter)"
        UseATReset = $true
    }
    Static [ATString]$PlayerChevronBlank = [ATString]@{
        UserData   = "$([BattlePlayerActionWindow]::PlayerChevronBlankCharacter)"
        UseATReset = $true
    }

    [Int]$ActiveChevronIndex
    [Boolean]$PlayerChevronDirty
    [Boolean]$ActiveItemBlinking
    [Boolean]$ActionADrawDirty
    [Boolean]$ActionBDrawDirty
    [Boolean]$ActionCDrawDirty
    [Boolean]$ActionDDrawDirty
    [ATCoordinates]$ActionADrawCoords
    [ATCoordinates]$ActionBDrawCoords
    [ATCoordinates]$ActionCDrawCoords
    [ATCoordinates]$ActionDDrawCoords
    [List[ValueTuple[[ATString], [Boolean]]]]$Chevrons

    BattlePlayerActionWindow() : base() {
        $this.LeftTop = [ATCoordinates]@{
            Row    = [BattlePlayerActionWindow]::WindowLTRow
            Column = [BattlePlayerActionWindow]::WindowLTColumn
        }
        $this.RightBottom = [ATCoordinates]@{
            Row    = [BattlePlayerActionWindow]::WindowRBRow
            Column = [BattlePlayerActionWindow]::WindowRBColumn
        }

        $this.UpdateDimensions()

        $this.SetupTitle([BattlePlayerActionWindow]::WindowTitle, [CCTextDefault24]::new())

        $this.ActiveChevronIndex = 0
        $this.PlayerChevronDirty = $true
        $this.ActiveItemBlinking = $false
        $this.ActionADrawDirty   = $true
        $this.ActionBDrawDirty   = $true
        $this.ActionCDrawDirty   = $true
        $this.ActionDDrawDirty   = $true
        $this.ActionADrawCoords = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 1
            Column = $this.LeftTop.Column + 3
        }
        $this.ActionBDrawCoords = [ATCoordinates]@{
            Row    = $this.ActionADrawCoords.Row + 1
            Column = $this.ActionADrawCoords.Column
        }
        $this.ActionCDrawCoords = [ATCoordinates]@{
            Row    = $this.ActionBDrawCoords.Row + 1
            Column = $this.ActionBDrawCoords.Column
        }
        $this.ActionDDrawCoords = [ATCoordinates]@{
            Row    = $this.ActionCDrawCoords.Row + 1
            Column = $this.ActionCDrawCoords.Column
        }
        $this.CreateChevrons()
    }

    [Void]CreateChevrons() {
        $this.Chevrons = [List[ValueTuple[[ATString], [Boolean]]]]::new()
        $this.Chevrons.Add(
            [ValueTuple]::Create(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAppleGreenLight24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.ActionADrawCoords.Row
                            Column = $this.ActionADrawCoords.Column - 2
                        }
                    }
                    UserData   = "$([BattlePlayerActionWindow]::PlayerChevronCharacter)"
                    UseATReset = $true
                },
                $true
            )
        )
        $this.Chevrons.Add(
            [ValueTuple]::Create(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAppleGreenLight24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.ActionBDrawCoords.Row
                            Column = $this.ActionBDrawCoords.Column - 2
                        }
                    }
                    UserData   = "$([BattlePlayerActionWindow]::PlayerChevronBlankCharacter)"
                    UseATReset = $true
                },
                $false
            )
        )
        $this.Chevrons.Add(
            [ValueTuple]::Create(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAppleGreenLight24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.ActionCDrawCoords.Row
                            Column = $this.ActionCDrawCoords.Column - 2
                        }
                    }
                    UserData   = "$([BattlePlayerActionWindow]::PlayerChevronBlankCharacter)"
                    UseATReset = $true
                },
                $false
            )
        )
        $this.Chevrons.Add(
            [ValueTuple]::Create(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAppleGreenLight24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.ActionDDrawCoords.Row
                            Column = $this.ActionDDrawCoords.Column - 2
                        }
                    }
                    UserData   = "$([BattlePlayerActionWindow]::PlayerChevronBlankCharacter)"
                    UseATReset = $true
                },
                $false
            )
        )
    }

    [ATString]GetActiveChevron() {
        Foreach($a in $this.Chevrons) {
            If($a.Item2 -EQ $true) {
                Return $a.Item1
            }
        }
        $this.ActiveChevronIndex                       = 0
        $this.Chevrons[$this.ActiveChevronIndex].Item2 = $true

        Return $this.Chevrons[$this.ActiveChevronIndex].Item1
    }

    [Void]ResetChevronPosition() {
        $this.Chevrons[$this.ActiveChevronIndex].Item2          = $false
        $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([BattlePlayerActionWindow]::PlayerChevronBlankCharacter)"
        $this.ActiveChevronIndex                                = 0
        $this.Chevrons[$this.ActiveChevronIndex].Item2          = $true
        $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([BattlePlayerActionWindow]::PlayerChevronCharacter)"
    }

    [Void]Draw() {
        ([WindowBase]$this).Draw()

        If($this.ActionADrawDirty -EQ $true) {
            [ATStringComposite]$a = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::A].Type].Item2
                        Coordinates     = $this.ActionADrawCoords
                    }
                    UserData   = "$($Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::A].Type].Item1)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = " $($Script:ThePlayer.ActionListing[[ActionSlot]::A].Name)"
                    UseATReset = $true
                }
            ))
            Write-Host "$($a.ToAnsiControlSequenceString())"
            $this.ActionADrawDirty = $false
        }
        If($this.ActionBDrawDirty -EQ $true) {
            [ATStringComposite]$a = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::B].Type].Item2
                        Coordinates     = $this.ActionBDrawCoords
                    }
                    UserData   = "$($Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::B].Type].Item1)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = " $($Script:ThePlayer.ActionListing[[ActionSlot]::B].Name)"
                    UseATReset = $true
                }
            ))
            Write-Host "$($a.ToAnsiControlSequenceString())"
            $this.ActionBDrawDirty = $false
        }
        If($this.ActionCDrawDirty -EQ $true) {
            [ATStringComposite]$a = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::C].Type].Item2
                        Coordinates     = $this.ActionCDrawCoords
                    }
                    UserData   = "$($Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::C].Type].Item1)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = " $($Script:ThePlayer.ActionListing[[ActionSlot]::C].Name)"
                    UseATReset = $true
                }
            ))
            Write-Host "$($a.ToAnsiControlSequenceString())"
            $this.ActionCDrawDirty = $false
        }
        If($this.ActionDDrawDirty -EQ $true) {
            [ATStringComposite]$a = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::D].Type].Item2
                        Coordinates     = $this.ActionDDrawCoords
                    }
                    UserData   = "$($Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::D].Type].Item1)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = " $($Script:ThePlayer.ActionListing[[ActionSlot]::D].Name)"
                    UseATReset = $true
                }
            ))
            Write-Host "$($a.ToAnsiControlSequenceString())"
            $this.ActionDDrawDirty = $false
        }
        If($this.PlayerChevronDirty -EQ $true) {
            Foreach($c in $this.Chevrons) {
                Write-Host "$($c.Item1.ToAnsiControlSequenceString())"
            }
            $this.PlayerChevronDirty = $false
        }
    }

    [BattleAction]HandleInput() {
        $keyCap = $(Get-Host).UI.RawUI.ReadKey('IncludeKeyDown, NoEcho')
        Switch($keyCap.VirtualKeyCode) {
            13 {
                Switch($this.ActiveChevronIndex) {
                    0 {
                        If(($Script:ThePlayer.ActionListing[[ActionSlot]::A].MpCost -GT 0) -AND ($Script:ThePlayer.Stats[[StatId]::MagicPoints].Base -LT $Script:ThePlayer.ActionListing[[ActionSlot]::A].MpCost)) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBattleNem)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}
                            $Script:TheBattleStatusMessageWindow.WriteNotEnoughMpMessage()
                            $Script:TheBattleStatusMessageWindow.Draw()

                            Return $null
                        }

                        Return $Script:ThePlayer.ActionListing[[ActionSlot]::A]
                    }

                    1 {
                        If(($Script:ThePlayer.ActionListing[[ActionSlot]::B].MpCost -GT 0) -AND ($Script:ThePlayer.Stats[[StatId]::MagicPoints].Base -LT $Script:ThePlayer.ActionListing[[ActionSlot]::B].MpCost)) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBattleNem)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}
                            $Script:TheBattleStatusMessageWindow.WriteNotEnoughMpMessage()
                            $Script:TheBattleStatusMessageWindow.Draw()

                            Return $null
                        }

                        Return $Script:ThePlayer.ActionListing[[ActionSlot]::B]
                    }

                    2 {
                        If(($Script:ThePlayer.ActionListing[[ActionSlot]::C].MpCost -GT 0) -AND ($Script:ThePlayer.Stats[[StatId]::MagicPoints].Base -LT $Script:ThePlayer.ActionListing[[ActionSlot]::C].MpCost)) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBattleNem)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}
                            $Script:TheBattleStatusMessageWindow.WriteNotEnoughMpMessage()
                            $Script:TheBattleStatusMessageWindow.Draw()

                            Return $null
                        }

                        Return $Script:ThePlayer.ActionListing[[ActionSlot]::C]
                    }

                    3 {
                        If(($Script:ThePlayer.ActionListing[[ActionSlot]::D].MpCost -GT 0) -AND ($Script:ThePlayer.Stats[[StatId]::MagicPoints].Base -LT $Script:ThePlayer.ActionListing[[ActionSlot]::D].MpCost)) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBattleNem)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}
                            $Script:TheBattleStatusMessageWindow.WriteNotEnoughMpMessage()
                            $Script:TheBattleStatusMessageWindow.Draw()

                            Return $null
                        }

                        Return $Script:ThePlayer.ActionListing[[ActionSlot]::D]
                    }

                    Default {
                        Return $null
                    }
                }
            }

            38 {
                Try {
                    $Script:TheSfxMPlayer.Open($Script:SfxUiChevronMove)
                    $Script:TheSfxMPlayer.Play()
                } Catch {
                    Write-Host 'Blew up'
                }
                If(($this.ActiveChevronIndex - 1) -LT 0) {
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $false
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([BattlePlayerActionWindow]::PlayerChevronBlankCharacter)"
                    $this.ActiveChevronIndex                                = 3
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $true
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([BattlePlayerActionWindow]::PlayerChevronCharacter)"
                } Elseif(($this.ActiveChevronIndex - 1) -GE 0) {
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $false
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([BattlePlayerActionWindow]::PlayerChevronBlankCharacter)"
                    $this.ActiveChevronIndex--
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $true
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([BattlePlayerActionWindow]::PlayerChevronCharacter)"
                }
                $this.PlayerChevronDirty = $true
            }

            40 {
                Try {
                    $Script:TheSfxMPlayer.Open($Script:SfxUiChevronMove)
                    $Script:TheSfxMPlayer.Play()
                } Catch {
                    Write-Host 'Blew up'
                }
                If(($this.ActiveChevronIndex + 1) -GT 3) {
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $false
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([BattlePlayerActionWindow]::PlayerChevronBlankCharacter)"
                    $this.ActiveChevronIndex                                = 0
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $true
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([BattlePlayerActionWindow]::PlayerChevronCharacter)"
                } Elseif(($this.ActiveChevronIndex + 1) -LE 3) {
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $false
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([BattlePlayerActionWindow]::PlayerChevronBlankCharacter)"
                    $this.ActiveChevronIndex++
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $true
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([BattlePlayerActionWindow]::PlayerChevronCharacter)"
                }
                $this.PlayerChevronDirty = $true
            }
        }

        Return $null
    }

    [Void]SetAllActionDrawDirty() {
        $this.ActionADrawDirty = $true
        $this.ActionBDrawDirty = $true
        $this.ActionCDrawDirty = $true
        $this.ActionDDrawDirty = $true
    }
}





###############################################################################
#
# BATTLE STATUS MESSAGE WINDOW
#
###############################################################################
Class BattleStatusMessageWindow : WindowBase {
    Static [Int]$MessageHistoryARef = 0
    Static [Int]$MessageHistoryBRef = 1
    Static [Int]$MessageHistoryCRef = 2
    Static [Int]$MessageHistoryDRef = 3
    Static [Int]$MessageHistoryERef = 4
    Static [Int]$WindowLTRow        = 18
    Static [Int]$WindowLTColumn     = 22
    Static [Int]$WindowRBRow        = 24
    Static [Int]$WindowRBColumn     = 81

    Static [String]$MessageBlankActual = '                                                         '
    Static [String]$WindowTitle        = 'Log'

    Static [Single]$MessageSleepTime = 0.2

    [Boolean]$MessageADirty
    [Boolean]$MessageBDirty
    [Boolean]$MessageCDirty
    [Boolean]$MessageDDirty
    [Boolean]$MessageEDirty
    [ATString]$MessageBlank
    [ATCoordinates]$MessageADrawCoords
    [ATCoordinates]$MessageBDrawCoords
    [ATCoordinates]$MessageCDrawCoords
    [ATCoordinates]$MessageDDrawCoords
    [ATCoordinates]$MessageEDrawCoords
    [ATStringComposite[]]$MessageHistory

    BattleStatusMessageWindow() : base() {
        $this.LeftTop = [ATCoordinates]@{
            Row    = [BattleStatusMessageWindow]::WindowLTRow
            Column = [BattleStatusMessageWindow]::WindowLTColumn
        }
        $this.RightBottom = [ATCoordinates]@{
            Row    = [BattleStatusMessageWindow]::WindowRBRow
            Column = [BattleStatusMessageWindow]::WindowRBColumn
        }

        $this.UpdateDimensions()

        $this.SetupTitle([BattleStatusMessageWindow]::WindowTitle, [CCTextDefault24]::new())

        $this.MessageADirty = $false
        $this.MessageBDirty = $false
        $this.MessageCDirty = $false
        $this.MessageDDirty = $false
        $this.MessageEDirty = $false

        $this.MessageBlank = [ATString]@{
            Prefix     = [ATStringPrefix]::new()
            UserData   = "$([BattleStatusMessageWindow]::MessageBlankActual)"
            UseATReset = $true
        }

        $this.MessageADrawCoords = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 1
            Column = $this.LeftTop.Column + 1
        }
        $this.MessageBDrawCoords = [ATCoordinates]@{
            Row    = $this.MessageADrawCoords.Row + 1
            Column = $this.MessageADrawCoords.Column
        }
        $this.MessageCDrawCoords = [ATCoordinates]@{
            Row    = $this.MessageBDrawCoords.Row + 1
            Column = $this.MessageBDrawCoords.Column
        }
        $this.MessageDDrawCoords = [ATCoordinates]@{
            Row    = $this.MessageCDrawCoords.Row + 1
            Column = $this.MessageCDrawCoords.Column
        }
        $this.MessageEDrawCoords = [ATCoordinates]@{
            Row    = $this.MessageDDrawCoords.Row + 1
            Column = $this.MessageDDrawCoords.Column
        }

        $this.MessageHistory = [ATStringComposite[]](
            [ATStringComposite]::new(),
            [ATStringComposite]::new(),
            [ATStringComposite]::new(),
            [ATStringComposite]::new(),
            [ATStringComposite]::new()
        )
        $this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryARef].CompositeActual[0].Prefix.Coordinates = $this.MessageADrawCoords
        $this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryBRef].CompositeActual[0].Prefix.Coordinates = $this.MessageBDrawCoords
        $this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryCRef].CompositeActual[0].Prefix.Coordinates = $this.MessageCDrawCoords
        $this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryDRef].CompositeActual[0].Prefix.Coordinates = $this.MessageDDrawCoords
        $this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryERef].CompositeActual[0].Prefix.Coordinates = $this.MessageEDrawCoords
    }

    [Void]Draw() {
        ([WindowBase]$this).Draw()

        If($this.MessageEDirty -EQ $true) {
            $this.MessageBlank.Prefix.Coordinates = $this.MessageEDrawCoords
            Write-Host "$($this.MessageBlank.ToAnsiControlSequenceString())$($this.MessageEDrawCoords.ToAnsiControlSequenceString())$($this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryERef].ToAnsiControlSequenceString())"
            $this.MessageEDirty = $false
            Start-Sleep -Seconds $([BattleStatusMessageWindow]::MessageSleepTime)
        }
        If($this.MessageDDirty -EQ $true) {
            $this.MessageBlank.Prefix.Coordinates = $this.MessageDDrawCoords
            Write-Host "$($this.MessageBlank.ToAnsiControlSequenceString())$($this.MessageDDrawCoords.ToAnsiControlSequenceString())$($this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryDRef].ToAnsiControlSequenceString())"
            $this.MessageDDirty = $false
            Start-Sleep -Seconds $([BattleStatusMessageWindow]::MessageSleepTime)
        }
        If($this.MessageCDirty -EQ $true) {
            $this.MessageBlank.Prefix.Coordinates = $this.MessageCDrawCoords
            Write-Host "$($this.MessageBlank.ToAnsiControlSequenceString())$($this.MessageCDrawCoords.ToAnsiControlSequenceString())$($this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryCRef].ToAnsiControlSequenceString())"
            $this.MessageCDirty = $false
            Start-Sleep -Seconds $([BattleStatusMessageWindow]::MessageSleepTime)
        }
        If($this.MessageBDirty -EQ $true) {
            $this.MessageBlank.Prefix.Coordinates = $this.MessageBDrawCoords
            Write-Host "$($this.MessageBlank.ToAnsiControlSequenceString())$($this.MessageBDrawCoords.ToAnsiControlSequenceString())$($this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryBRef].ToAnsiControlSequenceString())"
            $this.MessageBDirty = $false
            Start-Sleep -Seconds $([BattleStatusMessageWindow]::MessageSleepTime)
        }
        If($this.MessageADirty -EQ $true) {
            $this.MessageBlank.Prefix.Coordinates = $this.MessageADrawCoords
            Write-Host "$($this.MessageBlank.ToAnsiControlSequenceString())$($this.MessageADrawCoords.ToAnsiControlSequenceString())$($this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryARef].ToAnsiControlSequenceString())"
            $this.MessageADirty = $false
            Start-Sleep -Seconds $([BattleStatusMessageWindow]::MessageSleepTime + 0.4)
        }
    }

    [Void]WriteMessageComposite(
        [ATString[]]$ATComposite
    ) {
        $this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryARef].CompositeActual = [List[ATString]]::new($this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryBRef].CompositeActual)
        $this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryBRef].CompositeActual = [List[ATString]]::new($this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryCRef].CompositeActual)
        $this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryCRef].CompositeActual = [List[ATString]]::new($this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryDRef].CompositeActual)
        $this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryDRef].CompositeActual = [List[ATString]]::new($this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryERef].CompositeActual)
        $this.MessageHistory[[BattleStatusMessageWindow]::MessageHistoryERef]                 = [ATStringComposite]::new($ATComposite)

        $this.MessageADirty = $true
        $this.MessageBDirty = $true
        $this.MessageCDirty = $true
        $this.MessageDDirty = $true
        $this.MessageEDirty = $true
    }

    [Void]WriteNotEnoughMpMessage() {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleVYellowADark24]::new()
                    Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                }
                UserData   = 'Not enough MP!'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteEntityUsesMessage(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' uses '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Action.Name)"
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBarSwc(
        [BattleAction]$Action
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Action.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' was successful! '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowLight24]::new()
                    Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                }
                UserData   = 'CRITICAL!'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBarAff(
        [BattleAction]$Action
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Action.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' was successful! '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowLight24]::new()
                    Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                }
                UserData   = 'AFFINITY!'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBarCritAff(
        [BattleAction]$Action
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Action.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = ' was successful! '
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowLight24]::new()
                    Decorations = [ATDecoration]@{
                        Blink = $true
                    }
                }
                UserData   = 'CRIT AND AFFINITY!'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBarSuccess(
        [BattleAction]$Action
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Action.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' was successful!'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBarFailMissed(
        [BattleAction]$Action
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Action.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' missed!'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBarFailFailed(
        [BattleAction]$Action
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Action.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' failed!'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatPhysical(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' hit '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATSTringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' for '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Result.ActionEffectSum)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' damage.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatElementalFire(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' burned '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATSTringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' for '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Result.ActionEffectSum)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' damage.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatElementalWater(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' soaked '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATSTringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' for '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Result.ActionEffectSum)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' damage.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatElementalEarth(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' stoned '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATSTringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' for '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Result.ActionEffectSum)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' damage.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatElementalWind(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' sheared '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATSTringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' for '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Result.ActionEffectSum)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' damage.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatElementalLight(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' cast holy power on '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATSTringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' for '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Result.ActionEffectSum)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' damage.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatElementalDark(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' cast unholy power on '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATSTringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' for '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Result.ActionEffectSum)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' damage.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatElementalIce(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' froze '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATSTringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' for '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Result.ActionEffectSum)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' damage.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatMagicPoison(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' poisoned '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATSTringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' for '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Action.Type].Item2
                }
                UserData   = "$($Result.ActionEffectSum)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' damage.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatMagicConfuse(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' confused '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = '!'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatMagicSleep(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' put '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' to sleep!'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatMagicAging(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData   = "$($Originator.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' made '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Target.NameDrawColor
                }
                UserData   = "$($Target.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' grow old!'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBatMagicHealing(
        [BattleEntity]$Originator,
        [BattleEntity]$Target,
        [BattleAction]$Action,
        [BattleActionResult]$Result
    ) {
        If($Originator == $Target) {
            # Healed themselves
            $this.WriteMessageComposite(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $Originator.NameDrawColor
                    }
                    UserData   = "$($Originator.Name)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = ' healed themself '
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAppleGreenLight24]::new()
                    }
                    UserData   = "$($Result.ActionEfffectSum)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = '!'
                    UseATReset = $true
                }
            ))
        } Else {
            # Healed Target
            $this.WriteMessageComposite(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $Originator.NameDrawColor
                    }
                    UserData   = "$($Originator.Name)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = ' healed '
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $Target.NameDrawColor
                    }
                    UserData   = "$($Target.Name)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = ' for '
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAppleGreenLight24]::new()
                    }
                    UserData   = "$($Result.ActionEfffectSum)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = '!'
                    UseATReset = $true
                }
            ))
        }
    }

    [Void]WriteEntityCantActMessage(
        [BattleEntity]$Originator
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Originator.NameDrawColor
                }
                UserData = "$($Originator.Name)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' is unable to act!'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteBattleWonMessage() {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = 'You''ve won the battle!'
                UseATReset = $true
            }
        ))
    }
	
	[Void]WriteBattleLostMessage() {
		$this.WriteMessageComposite(@(
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = 'You''ve lost the battle.'
				UseATReset = $true
			}
		))
	}
	
	[Void]WriteGameOverMessage() {
		$this.WriteMessageComposite(@(
			[ATString]@{
				Prefix = [ATStringPrefix]@{
					ForegroundColor = [CCTextDefault24]::new()
				}
				UserData   = 'GAME OVER'
				UseATReset = $true
			}
		))
	}

    [Void]WriteBattleEndPrompt() {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = 'Press ''Enter'' to exit.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteSpoilsMessage(
        [EnemyBattleEntity]$Opponent
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Opponent.NameDrawColor
                }
                UserData   = "$($Opponent.Name)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' dropped '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = "$($Opponent.SpoilsGold)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = ' gold.'
                UseATReset = $true
            }
        ))
    }

    [Void]WriteItemsFoundMessage(
        [String]$ItemNames
    ) {
        $this.WriteMessageComposite(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = 'Also found '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleYellowDark24]::new()
                }
                UserData   = "$($ItemNames)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = '.'
                UseATReset = $true
            }
        ))
    }
}





###############################################################################
#
# BATTLE ENEMY IMAGE WINDOW
#
###############################################################################
Class BattleEnemyImageWindow : WindowBase {
    Static [Int]$WindowLTRow           = 1
    Static [Int]$WindowLTColumn        = 43
    Static [Int]$WindowRBRow           = 17
    Static [Int]$WindowRBColumn        = 81
    Static [Int]$ImageDrawRowOffset    = [BattleEnemyImageWindow]::WindowLTRow + 1
    Static [Int]$ImageDrawColumnOffset = [BattleEnemyImageWindow]::WindowLTColumn + 1

    [Boolean]$ImageDirty
    [ATCoordinates]$ImageDrawCoords
    [EnemyEntityImage]$Image

    BattleEnemyImageWindow() : base() {
        $this.LeftTop = [ATCoordinates]@{
            Row    = [BattleEnemyImageWindow]::WindowLTRow
            Column = [BattleEnemyImageWindow]::WindowLTColumn
        }
        $this.RightBottom = [ATCoordinates]@{
            Row    = [BattleEnemyImageWindow]::WindowRBRow
            Column = [BattleEnemyImageWindow]::WindowRBColumn
        }

        $this.UpdateDimensions()

        $this.SetupTitle("$($Script:TheCurrentEnemy.Name)", [CCTextDefault24]::new())

        $this.ImageDirty      = $true
        $this.Image           = [EEIEmpty]::new()
        $this.ImageDrawCoords = [ATCoordinates]@{
            Row    = [BattleEnemyImageWindow]::ImageDrawRowOffset
            Column = [BattleEnemyImageWindow]::ImageDrawColumnOffset
        }
    }

    [Void]Draw() {
        ([WindowBase]$this).Draw()
        If($this.ImageDirty -EQ $true) {
            $this.Image = $Script:TheCurrentEnemy.Image
            Write-Host "$($this.Image.ToAnsiControlSequenceString())"
            $this.ImageDirty = $false
        }
    }
}





###############################################################################
#
# STATUS HUD WINDOW
#
###############################################################################
Class StatusHudWindow : WindowBase {
    Static [Int]$WindowLTRow    = 1
    Static [Int]$WindowLTColumn = 1
    Static [Int]$WindowRBRow    = 3
    Static [Int]$WindowRBColumn = 80

    Static [String]$LineBlankStr = '                                                                              '
    Static [String]$WindowTitle  = 'Status'

    [Boolean]$StatLineDrawDirty
    [ATString]$LineBlank
    [ATCoordinates]$StatLineDrawCoords
    [ATCoordinates]$StatSeparatorDrawCoords
    [ATStringComposite]$StatLineActual

    StatusHudWindow() : base() {
        $this.LeftTop = [ATCoordinates]@{
            Row    = [StatusHudWindow]::WindowLTRow
            Column = [StatusHudWindow]::WindowLTColumn
        }
        $this.RightBottom = [ATCoordinates]@{
            Row    = [StatusHudWindow]::WindowRBRow
            Column = [StatusHudWindow]::WindowRBColumn
        }

        $this.UpdateDimensions()

        $this.StatLineDrawDirty = $true
        $this.LineBlank = [ATString]@{
            UserData   = [StatusHudWindow]::LineBlankStr
            UseATReset = $true
        }
        $this.StatLineDrawCoords = [ATCoordinates]@{
            Row    = 2
            Column = 3
        }
        $this.StatSeparatorDrawCoords = [ATCoordinates]@{
            Row    = 2
            Column = [StatusHudWindow]::WindowRBColumn - 48
        }

        $this.SetupTitle([StatusHudWindow]::WindowTitle, [CCTextDefault24]::new())
    }

    [Void]Draw() {
        ([WindowBase]$this).Draw()

        If($this.StatLineDrawDirty -EQ $true) {
            $this.ComposeStatLineString()
            $this.LineBlank.Prefix.Coordinates = [ATCoordinates]::new($this.StatLineDrawCoords)
            Write-Host "$($this.LineBlank.ToAnsiControlSequenceString())$($this.StatLineActual.ToAnsiControlSequenceString())"
            $this.StatLineDrawDirty = $false
        }

        # FOR SOME REASON, THE SETUP TITLE CAUSES THE LEFT BAR TO DISAPPEAR?
        # THIS IS REQUIRED TO DEAL WITH THAT.
        ([WindowBase]$this).Draw()
    }

    [Void]ComposeStatLineString() {
        [String]$AtkStatFmtStr = ''
        [String]$DefStatFmtStr = ''
        [String]$MatStatFmtStr = ''
        [String]$MdfStatFmtStr = ''
        [String]$SpdStatFmtStr = ''
        [String]$AccStatFmtStr = ''
        [String]$LckStatFmtStr = ''
        [String]$AtkDispStr    = 'ATK:'
        [String]$DefDispStr    = 'DEF:'
        [String]$MatDispStr    = 'MAT:'
        [String]$MdfDispStr    = 'MDF:'
        [String]$SpdDispStr    = 'SPD:'
        [String]$AccDispStr    = 'ACC:'
        [String]$LckDispStr    = 'LCK:'

        If($Script:ThePlayer.Stats[[StatId]::Attack].Base -LT 10) {
            $AtkStatFmtStr = "{0:d2}" -F $Script:ThePlayer.Stats[[StatId]::Attack].Base
        } Elseif($Script:ThePlayer.Stats[[StatId]::Attack].Base -GE 10) {
            $AtkStatFmtStr = "$($Script:ThePlayer.Stats[[StatId]::Attack].Base)"
        }
        If($Script:ThePlayer.Stats[[StatId]::Defense].Base -LT 10) {
            $DefStatFmtStr = "{0:d2}" -F $Script:ThePlayer.Stats[[StatId]::Defense].Base
        } Elseif($Script:ThePlayer.Stats[[StatId]::Defense].Base -GE 10) {
            $DefStatFmtStr = "$($Script:ThePlayer.Stats[[StatId]::Defense].Base)"
        }
        If($Script:ThePlayer.Stats[[StatId]::MagicAttack].Base -LT 10) {
            $MatStatFmtStr = "{0:d2}" -F $Script:ThePlayer.Stats[[StatId]::MagicAttack].Base
        } Elseif($Script:ThePlayer.Stats[[StatId]::MagicAttack].Base -GE 10) {
            $MatStatFmtStr = "$($Script:ThePlayer.Stats[[StatId]::MagicAttack].Base)"
        }
        If($Script:ThePlayer.Stats[[StatId]::MagicDefense].Base -LT 10) {
            $MdfStatFmtStr = "{0:d2}" -F $Script:ThePlayer.Stats[[StatId]::MagicDefense].Base
        } Elseif($Script:ThePlayer.Stats[[StatId]::MagicDefense].Base -GE 10) {
            $MdfStatFmtStr = "$($Script:ThePlayer.Stats[[StatId]::MagicDefense].Base)"
        }
        If($Script:ThePlayer.Stats[[StatId]::Speed].Base -LT 10) {
            $SpdStatFmtStr = "{0:d2}" -F $Script:ThePlayer.Stats[[StatId]::Speed].Base
        } Elseif($Script:ThePlayer.Stats[[StatId]::Speed].Base -GE 10) {
            $SpdStatFmtStr = "$($Script:ThePlayer.Stats[[StatId]::Speed].Base)"
        }
        If($Script:ThePlayer.Stats[[StatId]::Accuracy].Base -LT 10) {
            $AccStatFmtStr = "{0:d2}" -F $Script:ThePlayer.Stats[[StatId]::Accuracy].Base
        } Elseif($Script:ThePlayer.Stats[[StatId]::Accuracy].Base -GE 10) {
            $AccStatFmtStr = "$($Script:ThePlayer.Stats[[StatId]::Accuracy].Base)"
        }
        If($Script:ThePlayer.Stats[[StatId]::Luck].Base -LT 10) {
            $LckStatFmtStr = "{0:d2}" -F $Script:ThePlayer.Stats[[StatId]::Luck].Base
        } Elseif($Script:ThePlayer.Stats[[StatId]::Luck].Base -GE 10) {
            $LckStatFmtStr = "$($Script:ThePlayer.Stats[[StatId]::Luck].Base)"
        }

        $this.StatLineActual = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = $Script:BATAdornmentCharTable[$Script:ThePlayer.Affinity].Item2
                    Coordinates     = [ATCoordinates]::new($this.StatLineDrawCoords)
                }
                UserData = "$($Script:BATAdornmentCharTable[$Script:ThePlayer.Affinity].Item1) "
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($Script:ThePlayer.Name)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates     = [ATCoordinates]::new($this.StatSeparatorDrawCoords)
                }
                UserData = "$($AtkDispStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($AtkStatFmtStr) "
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($DefDispStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($DefStatFmtStr) "
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($MatDispStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($MatStatFmtStr) "
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($MdfDispStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($MdfStatFmtStr) "
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($SpdDispStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($SpdStatFmtStr) "
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($AccDispStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($AccStatFmtStr) "
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData = "$($LckDispStr)"
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                }
                UserData   = "$($LckStatFmtStr)"
                UseATReset = $true
            }
        ))
    }
}





###############################################################################
#
# STATUS TECHNIQUE SELECTION WINDOW
#
###############################################################################
Class StatusTechniqueSelectionWindow : WindowBase {
    Static [Int]$WindowLTRow    = 4
    Static [Int]$WindowLTColumn = 1
    Static [Int]$WindowRBRow    = 9
    Static [Int]$WindowRBColumn = 19

    Static [String]$PlayerChevronCharacter      = '❱'
    Static [String]$PlayerChevronBlankCharacter = ' '
    Static [String]$NameBlank                   = '              '
    Static [String]$WindowTitle                 = 'Equipped'

    Static [ATString]$PlayerChevron = [ATString]@{
        Prefix = [ATStringPrefix]@{
            ForegroundColor = [CCTextDefault24]::new()
        }
        UserData   = "$([StatusTechniqueSelectionWindow]::PlayerChevronCharacter)"
        UseATReset = $true
    }
    Static [ATString]$PlayerChevronBlank = [ATString]@{
        UserData   = "$([StatusTechniqueSelectionWindow]::PlayerChevronBlankCharacter)"
        UseATReset = $true
    }
    Static [ATString]$BaNameBlank = [ATString]@{
        Prefix     = [ATStringPrefix]::new()
        UserData   = "$([StatusTechniqueSelectionWindow]::NameBlank)"
        UseATReset = $true
    }

    [Int]$ActiveChevronIndex
    [Boolean]$PlayerChevronDirty
    [Boolean]$ActiveItemBlinking
    [Boolean]$ActionADrawDirty
    [Boolean]$ActionBDrawDirty
    [Boolean]$ActionCDrawDirty
    [Boolean]$ActionDDrawDirty
    [Boolean]$IsActive
    [ATCoordinates]$ActionADrawCoords
    [ATCoordinates]$ActionBDrawCoords
    [ATCoordinates]$ActionCDrawCoords
    [ATCoordinates]$ActionDDrawCoords
    [List[ValueTuple[[ATString], [Boolean]]]]$Chevrons

    StatusTechniqueSelectionWindow() : base() {
        $this.LeftTop = [ATCoordinates]@{
            Row    = [StatusTechniqueSelectionWindow]::WindowLTRow
            Column = [StatusTechniqueSelectionWindow]::WindowLTColumn
        }
        $this.RightBottom = [ATCoordinates]@{
            Row    = [StatusTechniqueSelectionWindow]::WindowRBRow
            Column = [StatusTechniqueSelectionWindow]::WindowRBColumn
        }

        $this.UpdateDimensions()

        $this.ActiveChevronIndex = 0
        $this.PlayerChevronDirty = $true
        $this.ActiveItemBlinking = $false
        $this.ActionADrawDirty   = $true
        $this.ActionBDrawDirty   = $true
        $this.ActionCDrawDirty   = $true
        $this.ActionDDrawDirty   = $true
        $this.IsActive           = $true
        $this.ActionADrawCoords = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 1
            Column = $this.LeftTop.Column + 3
        }
        $this.ActionBDrawCoords = [ATCoordinates]@{
            Row    = $this.ActionADrawCoords.Row + 1
            Column = $this.ActionADrawCoords.Column
        }
        $this.ActionCDrawCoords = [ATCoordinates]@{
            Row    = $this.ActionBDrawCoords.Row + 1
            Column = $this.ActionBDrawCoords.Column
        }
        $this.ActionDDrawCoords = [ATCoordinates]@{
            Row    = $this.ActionCDrawCoords.Row + 1
            Column = $this.ActionCDrawCoords.Column
        }
        $this.CreateChevrons()

        $this.SetupTitle([StatusTechniqueSelectionWindow]::WindowTitle, [CCTextDefault24]::new())
    }

    [Void]CreateChevrons() {
        $this.Chevrons = [List[ValueTuple[[ATString], [Boolean]]]]::new()
        $this.Chevrons.Add(
            [ValueTuple]::Create(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAPpleGreenLight24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.ActionADrawCoords.Row
                            Column = $this.ActionADrawCoords.Column - 2
                        }
                    }
                    UserData   = "$([StatusTechniqueSelectionWindow]::PlayerChevronCharacter)"
                    UseATReset = $true
                },
                $true
            )
        )
        $this.Chevrons.Add(
            [ValueTuple]::Create(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAPpleGreenLight24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.ActionBDrawCoords.Row
                            Column = $this.ActionBDrawCoords.Column - 2
                        }
                    }
                    UserData   = "$([StatusTechniqueSelectionWindow]::PlayerChevronBlankCharacter)"
                    UseATReset = $true
                },
                $false
            )
        )
        $this.Chevrons.Add(
            [ValueTuple]::Create(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAPpleGreenLight24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.ActionCDrawCoords.Row
                            Column = $this.ActionCDrawCoords.Column - 2
                        }
                    }
                    UserData   = "$([StatusTechniqueSelectionWindow]::PlayerChevronBlankCharacter)"
                    UseATReset = $true
                },
                $false
            )
        )
        $this.Chevrons.Add(
            [ValueTuple]::Create(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCAPpleGreenLight24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.ActionDDrawCoords.Row
                            Column = $this.ActionDDrawCoords.Column - 2
                        }
                    }
                    UserData   = "$([StatusTechniqueSelectionWindow]::PlayerChevronBlankCharacter)"
                    UseATReset = $true
                },
                $false
            )
        )
    }

    [ATString]GetActiveChevron() {
        Foreach($a in $this.Chevrons) {
            If($a.Item2 -EQ $true) {
                Return $a.Item1
            }
        }
        $this.ActiveChevronIndex                       = 0
        $this.Chevrons[$this.ActiveChevronIndex].Item2 = $true

        Return $this.Chevrons[$this.ActiveChevronIndex].Item1
    }

    [Void]ResetChevronPosition() {
        $this.Chevrons[$this.ActiveChevronIndex].Item2          = $false
        $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([StatusTechniqueSelectionWindow]::PlayerChevronBlankCharacter)"
        $this.ActiveChevronIndex                                = 0
        $this.Chevrons[$this.ActiveChevronIndex].Item2          = $true
        $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([StatusTechniqueSelectionWindow]::PlayerChevronCharacter)"
    }

    [Void]Draw() {
        ([WindowBase]$this).Draw()

        If($this.ActionADrawDirty -EQ $true) {
            [StatusTechniqueSelectionWindow]::BaNameBlank.Prefix.Coordinates = [ATCoordinates]@{
                Row    = $this.ActionADrawCoords.Row
                Column = $this.ActionADrawCoords.Column + 1
            }
            [ATStringComposite]$a = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::A].Type].Item2
                        Coordinates     = $this.ActionADrawCoords
                    }
                    UserData   = "$($Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::A].Type].Item1)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = " $($Script:ThePlayer.ActionListing[[ActionSlot]::A].Name)"
                    UseATReset = $true
                }
            ))
            Write-Host "$([StatusTechniqueSelectionWindow]::BaNameBlank.ToAnsiControlSequenceString())$($a.ToAnsiControlSequenceString())"
            $this.ActionADrawDirty = $false
        }
        If($this.ActionBDrawDirty -EQ $true) {
            [StatusTechniqueSelectionWindow]::BaNameBlank.Prefix.Coordinates = [ATCoordinates]@{
                Row    = $this.ActionBDrawCoords.Row
                Column = $this.ActionBDrawCoords.Column + 1
            }
            [ATStringComposite]$a = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::B].Type].Item2
                        Coordinates     = $this.ActionBDrawCoords
                    }
                    UserData   = "$($Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::B].Type].Item1)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = " $($Script:ThePlayer.ActionListing[[ActionSlot]::B].Name)"
                    UseATReset = $true
                }
            ))
            Write-Host "$([StatusTechniqueSelectionWindow]::BaNameBlank.ToAnsiControlSequenceString())$($a.ToAnsiControlSequenceString())"
            $this.ActionBDrawDirty = $false
        }
        If($this.ActionCDrawDirty -EQ $true) {
            [StatusTechniqueSelectionWindow]::BaNameBlank.Prefix.Coordinates = [ATCoordinates]@{
                Row    = $this.ActionCDrawCoords.Row
                Column = $this.ActionCDrawCoords.Column + 1
            }
            [ATStringComposite]$a = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::C].Type].Item2
                        Coordinates     = $this.ActionCDrawCoords
                    }
                    UserData   = "$($Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::C].Type].Item1)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = " $($Script:ThePlayer.ActionListing[[ActionSlot]::C].Name)"
                    UseATReset = $true
                }
            ))
            Write-Host "$([StatusTechniqueSelectionWindow]::BaNameBlank.ToAnsiControlSequenceString())$($a.ToAnsiControlSequenceString())"
            $this.ActionCDrawDirty = $false
        }
        If($this.ActionDDrawDirty -EQ $true) {
            [StatusTechniqueSelectionWindow]::BaNameBlank.Prefix.Coordinates = [ATCoordinates]@{
                Row    = $this.ActionDDrawCoords.Row
                Column = $this.ActionDDrawCoords.Column + 1
            }
            [ATStringComposite]$a = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::D].Type].Item2
                        Coordinates     = $this.ActionDDrawCoords
                    }
                    UserData   = "$($Script:BATAdornmentCharTable[$Script:ThePlayer.ActionListing[[ActionSlot]::D].Type].Item1)"
                    UseATReset = $true
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                    }
                    UserData   = " $($Script:ThePlayer.ActionListing[[ActionSlot]::D].Name)"
                    UseATReset = $true
                }
            ))
            Write-Host "$([StatusTechniqueSelectionWindow]::BaNameBlank.ToAnsiControlSequenceString())$($a.ToAnsiControlSequenceString())"
            $this.ActionDDrawDirty = $false
        }
        If($this.PlayerChevronDirty -EQ $true) {
            If($this.IsActive -EQ $true) {
                Foreach($c in $this.Chevrons) {
                    $c.Item1.Prefix.ForegroundColor = [CCAppleNGreenLight24]::new()
                    Write-Host "$($c.Item1.ToAnsiControlSequenceString())"
                }
            } Else {
                Foreach($c in $this.Chevrons) {
                    $c.Item1.Prefix.ForegroundColor = [CCAppleNOrangeLight24]::new()
                    Write-Host "$($c.Item1.ToAnsiControlSequenceString())"
                }
            }
            $this.PlayerChevronDirty = $false
        }
    }

    [Void]HandleInput() {
        $keyCap = $(Get-Host).UI.RawUI.ReadKey('IncludeKeyDown, NoEcho')
        Switch($keyCap.VirtualKeyCode) {
            13 {
                Switch($this.ActiveChevronIndex) {
                    0 {
                        $Script:StatusEsSelectedSlot = [ActionSlot]::A
                    }

                    1 {
                        $Script:StatusEsSelectedSlot = [ActionSlot]::B
                    }

                    2 {
                        $Script:StatusEsSelectedSlot = [ActionSlot]::C
                    }

                    3 {
                        $Script:StatusEsSelectedSlot = [ActionSlot]::D
                    }
                }
                $Script:StatusScreenMode = [StatusScreenMode]::TechInventorySelection
            }

            27 {
                $Script:ThePreviousGlobalGameState = $Script:TheGlobalGameState
                $Script:TheGlobalGameState         = [GameStatePrimary]::GamePlayScreen
            }

            38 {
                Try {
                    $Script:TheSfxMPlayer.Open($Script:SfxUiChevronMove)
                    $Script:TheSfxMPlayer.Play()
                } Catch {
                    Write-Host 'Blew up.'
                }

                If(($this.ActiveChevronIndex - 1) -LT 0) {
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $false
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([StatusTechniqueSelectionWindow]::PlayerChevronBlankCharacter)"
                    $this.ActiveChevronIndex                                = 3
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $true
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([StatusTechniqueSelectionWindow]::PlayerChevronCharacter)"
                } Elseif(($this.ActiveChevronIndex - 1) -GE 0) {
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $false
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([StatusTechniqueSelectionWindow]::PlayerChevronBlankCharacter)"
                    $this.ActiveChevronIndex--
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $true
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([StatusTechniqueSelectionWindow]::PlayerChevronCharacter)"
                }
                $this.PlayerChevronDirty = $true
            }

            40 {
                Try {
                    $Script:TheSfxMPlayer.Open($Script:SfxUiChevronMove)
                    $Script:TheSfxMPlayer.Play()
                } Catch {
                    Write-Host 'Blew up'
                }
                If(($this.ActiveChevronIndex + 1) -GT 3) {
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $false
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([StatusTechniqueSelectionWindow]::PlayerChevronBlankCharacter)"
                    $this.ActiveChevronIndex                                = 0
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $true
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([StatusTechniqueSelectionWindow]::PlayerChevronCharacter)"
                } Elseif(($this.ActiveChevronIndex + 1) -LE 3) {
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $false
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([StatusTechniqueSelectionWindow]::PlayerChevronBlankCharacter)"
                    $this.ActiveChevronIndex++
                    $this.Chevrons[$this.ActiveChevronIndex].Item2          = $true
                    $this.Chevrons[$this.ActiveChevronIndex].Item1.UserData = "$([StatusTechniqueSelectionWindow]::PlayerChevronCharacter)"
                }
                $this.PlayerChevronDirty = $true
            }
        }
    }

    [Void]SetAllActionDrawDirty() {
        $this.ActionADrawDirty = $true
        $this.ActionBDrawDirty = $true
        $this.ActionCDrawDirty = $true
        $this.ActionDDrawDirty = $true
    }
}





###############################################################################
#
# STATUS TECHNIQUE INVENTORY WINDOW
#
###############################################################################
Class StatusTechniqueInventoryWindow : WindowBase {
    Static [Int]$WindowLTRow    = 4
    Static [Int]$WindowLTColumn = 22
    Static [Int]$WindowRBRow    = 16
    Static [Int]$WindowRBColumn = 80

    Static [String]$IChevronCharacter           = '❱'
    Static [String]$IChevronCharacterBlank      = ' '
    Static [String]$PagingChevronRightCharacter = "`u{1433}"
    Static [String]$PagingChevronLeftCharacter  = "`u{1438}"
    Static [String]$PagingChevronBlankCharacter = ' '
    Static [String]$DivLineHorizontalString     = '─────────────────────────────────────────────────────────'
    Static [String]$ZpLineBlank                 = '                                                         '
    Static [String]$DescLineBlank               = '                                                         '
    Static [String]$ZeroPagePrompt              = 'You have no techniques in your inventory.'
    Static [String]$WindowTitle                 = 'Inventory'

    Static [ATString]$PagingChevronRight = [ATString]@{
        Prefix = [ATStringPrefix]@{
            ForegroundColor = [CCAppleYellowLight24]::new()
        }
        UserData   = "$([StatusTechniqueInventoryWindow]::PagingChevronRightCharacter)"
        UseATReset = $true
    }
    Static [ATString]$PagingChevronLeft = [ATString]@{
        Prefix = [ATStringPrefix]@{
            ForegroundColor = [CCAppleYellowLight24]::new()
        }
        UserData   = "$([StatusTechniqueInventoryWindow]::PagingChevronLeftCharacter)"
        UseATReset = $true
    }
    Static [ATString]$PagingChevronRightBlank = [ATStringNone]::new()
    Static [ATString]$PagingChevronLeftBlank = [ATStringNone]::new()
    Static [ATString]$DivLineHorizontal = [ATString]@{
        Prefix = [ATStringPrefix]@{
            ForegroundColor = [CCTextDefault24]::new()
        }
        UserData   = "$([StatusTechniqueInventoryWindow]::DivLineHorizontalString)"
        UseATReset = $true
    }

    Static [Boolean]$DebugMode = $false

    [Int]$ItemsPerPage
    [Int]$NumPages
    [Int]$CurrentPage
    [Int]$ActiveIChevronIndex
    [Boolean]$PlayerChevronDirty
    [Boolean]$PagingChevronRightDirty
    [Boolean]$PagingChevronLeftDirty
    [Boolean]$ItemsListDirty
    [Boolean]$CurrentPageDirty
    [Boolean]$PlayerChevronVisible
    [Boolean]$PagingChevronRightVisible
    [Boolean]$PagingChevronLeftVisible
    [Boolean]$ZeroPageActive
    [Boolean]$BookDirty
    [Boolean]$ActiveItemBlinking
    [Boolean]$DivLineDirty
    [Boolean]$ItemDescDirty
    [Boolean]$ZpBlankedDirty
    [Boolean]$ZpPromptDirty
    [Boolean]$IsActive
    [Boolean]$IsBlanked
    [List[ATString]]$ItemLabels
    [List[ATString]]$ItemLabelBlanks
    [List[BattleAction]]$PageRefs
    [List[ValueTuple[[ATString], [Boolean]]]]$IChevrons

    StatusTechniqueInventoryWindow() : base() {
        $this.LeftTop = [ATCoordinates]@{
            Row    = [StatusTechniqueInventoryWindow]::WindowLTRow
            Column = [StatusTechniqueInventoryWindow]::WindowLTColumn
        }
        $this.RightBottom = [ATCoordinates]@{
            Row    = [StatusTechniqueInventoryWindow]::WindowRBRow
            Column = [StatusTechniqueInventoryWindow]::WindowRBColumn
        }

        $this.UpdateDimensions()

        $this.SetupTitle([StatusTechniqueInventoryWindow]::WindowTitle, [CCTextDefault24]::new())

        $this.ItemsPerPage              = 10
        $this.NumPages                  = 1
        $this.CurrentPage               = 1
        $this.ActiveIChevronIndex       = 0
        $this.PlayerChevronDirty        = $true
        $this.PagingChevronRightDirty   = $true
        $this.PagingChevronLeftDirty    = $true
        $this.ItemsListDirty            = $true
        $this.CurrentPageDirty          = $true
        $this.PlayerChevronVisible      = $true
        $this.PagingChevronRightVisible = $false
        $this.PagingChevronLeftVisible  = $false
        $this.ZeroPageActive            = $false
        $this.BookDirty                 = $true
        $this.ActiveItemBlinking        = $false
        $this.DivLineDirty              = $true
        $this.ItemDescDirty             = $true
        $this.ZpBlankedDirty            = $true
        $this.ZpPromptDirty             = $true
        $this.IsActive                  = $false
        $this.IsBlanked                 = $false
        $this.PageRefs                  = $null

        $this.CreateIChevrons()
        $this.ConfigurePagingChevrons()
        $this.ConfigureDivLine()
    }

    [Void]Draw() {
        ([WindowBase]$this).Draw()

        If($this.IsActive -EQ $true) {
            $this.IsBlanked = $false
            If($this.BookDirty -EQ $true) {
                $this.CalculateNumPages()
                $this.BookDirty = $false
            }
            If($this.CurrentPageDirty -EQ $true) {
                $this.PopulatePage()
            }
            If($this.ZeroPageActive -EQ $true) {
                $this.WriteZeroInventoryPage()
            } Else {
                If($this.DivLineDirty -EQ $true) {
                    Write-Host "$([StatusTechniqueInventoryWindow]::DivLineHorizontal.ToAnsiControlSequenceString())"
                    $this.DivLineDirty = $false
                }
                If($this.PlayerChevronVisible -EQ $true -AND $this.PlayerChevronDirty -EQ $true) {
                    Foreach($ic in $this.IChevrons) {
                        Write-Host "$($ic.Item1.ToAnsiControlSequenceString())"
                    }
                    $this.PlayerChevronDirty = $false
                }
                If($this.NumPages -GT 1) {
                    If($this.CurrentPage -EQ 1) {
                        If($this.PagingChevronLeftVisible -EQ $true) {
                            Write-Host "$([StatusTechniqueInventoryWindow]::PagingChevronLeftBlank.ToAnsiControlSequenceString())"
                            $this.PagingChevronLeftVisible = $false
                            $this.PagingChevronLeftDirty   = $true
                        }
                        If($this.PagingChevronRightVisible -EQ $false) {
                            $this.PagingChevronRightVisible = $true
                        }
                        If(($this.PagingChevronRightVisible -EQ $true) -AND ($this.PagingChevronRightDirty -EQ $true)) {
                            Write-Host "$([StatusTechniqueInventoryWindow]::PagingChevronRight.ToAnsiControlSequenceString())"
                            $this.PagingChevronRightDirty = $false
                        }
                    } Elseif(($this.CurrentPage -GT 1) -AND ($this.CurrentPage -LT $this.NumPages)) {
                        If($this.PagingChevronLeftVisible -EQ $false) {
                            $this.PagingChevronLeftVisible = $true
                        }
                        If($this.PagingChevronRightVisible -EQ $false) {
                            $this.PagingChevronRightVisible = $true
                        }
                        If(($this.PagingChevronRightVisible -EQ $true) -AND ($this.PagingChevronRightDirty -EQ $true)) {
                            Write-Host "$([StatusTechniqueInventoryWindow]::PagingChevronLeft.ToAnsiControlSequenceString())"
                            $this.PagingChevronRightDirty = $false
                        }
                        If(($this.PagingChevronLeftVisible -EQ $true) -AND ($this.PagingChevronLeftDirty -EQ $true)) {
                            Write-Host "$([StatusTechniqueInventoryWindow]::PagingChevronRight.ToAnsiControlSequenceString())"
                            $this.PagingChevronLeftDirty = $false
                        }
                    } Elseif($this.CurrentPage -GE $this.NumPages) {
                        If($this.PagingChevronRightVisible -EQ $true) {
                            Write-Host "$([StatusTechniqueInventoryWindow]::PagingChevronRightBlank.ToAnsiControlSequenceString())"
                            $this.PagingChevronRightVisible = $false
                            $this.PagingChevronRightDirty   = $true
                        }
                        If($this.PagingChevronLeftVisible -EQ $false) {
                            $this.PagingChevronLeftVisible = $true
                        }
                        If(($this.PagingChevronLeftVisible -EQ $true) -AND ($this.PagingChevronLeftDirty -EQ $true)) {
                            Write-Host "$([StatusTechniqueInventoryWindow]::PagingChevronLeft.ToAnsiControlSequenceString())"
                            $this.PagingChevronLeftDirty = $false
                        }
                    }
                } Elseif($this.NumPages -EQ 1) {
                    If($this.PagingChevronLeftVisible -EQ $true) {
                        $this.PagingChevronLeftVisible = $false
                    }
                    If($this.PagingChevronRightVisible -EQ $true) {
                        $this.PagingChevronRightVisible = $false
                    }
                    If($this.PagingChevronLeftVisible -EQ $false) {
                        Write-Host "$([StatusTechniqueInventoryWindow]::PagingChevronLeftBlank.ToAnsiControlSequenceString())"
                    }
                    If($this.PagingChevronRightVisible -EQ $false) {
                        Write-Host "$([StatusTechniqueInventoryWindow]::PagingChevronRightBlank.ToAnsiControlSequenceString())"
                    }
                }
                If($this.ActiveItemBlinking -EQ $false) {
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations = [ATDecoration]@{
                        Blink = $true
                    }
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCListItemCurrentHighlight24]::new()
                    $this.ItemsListDirty                                               = $true
                    $this.ActiveItemBlinking                                           = $true
                }
                If($this.ItemsListDirty -EQ $true) {
                    $this.WriteItemLabels()
                    Write-Host "$([ATControlSequences]::CursorHide)"
                    $this.ItemsListDirty = $false
                }
                If($this.ItemDescDirty -EQ $true) {
                    [ATStringComposite]$a = [ATStringComposite]::new(@(
                        [ATString]@{
                            Prefix = [ATStringPrefix]@{
                                ForegroundColor = [CCTextDefault24]::new()
                                Coordinates     = [ATCoordinates]@{
                                    Row    = $this.RightBottom.Row - 3
                                    Column = $this.LeftTop.Column + 1
                                }
                            }
                            UserData   = "$([StatusTechniqueInventoryWindow]::DescLineBlank)"
                            UseATReset = $true
                        },
                        [ATString]@{
                            Prefix = [ATStringPrefix]@{
                                ForegroundColor = [CCTextDefault24]::new()
                                Coordinates     = [ATCoordinates]@{
                                    Row    = $this.RightBottom.Row - 3
                                    Column = $this.LeftTop.Column + 2
                                }
                            }
                            UserData   = "$($this.PageRefs[$this.ActiveIChevronIndex].Description)"
                            UseATReset = $true
                        },
                        [ATString]@{
                            Prefix = [ATStringPrefix]@{
                                ForegroundColor = [CCTextDefault24]::new()
                                Coordinates     = [ATCoordinates]@{
                                    Row    = $this.RightBottom.Row - 1
                                    Column = $this.LeftTop.Column + 1
                                }
                            }
                            UserData   = "$([StatusTechniqueInventoryWindow]::DescLineBlank)"
                            UseATReset = $true
                        },
                        [ATString]@{
                            Prefix = [ATStringPrefix]@{
                                ForegroundColor = [CCTextDefault24]::new()
                                Coordinates     = [ATCoordinates]@{
                                    Row    = $this.RightBottom.Row - 1
                                    Column = $this.LeftTop.Column + 2
                                }
                            }
                            UserData = 'AFF: '
                        },
                        [ATString]@{
                            Prefix = [ATStringPrefix]@{
                                ForegroundColor = $Script:BATAdornmentCharTable[$this.PageRefs[$this.ActiveIChevronIndex].Type].Item2
                            }
                            UserData   = "$($Script:BATAdornmentCharTable[$this.PageRefs[$this.ActiveIChevronIndex].Type].Item1)"
                            UseATReset = $true
                        },
                        [ATString]@{
                            Prefix = [ATStringPrefix]@{
                                ForegroundColor = [CCTextDefault24]::new()
                            }
                            UserData   = "   PWR: $($this.PageRefs[$this.ActiveIChevronIndex].EffectValue)   MP COST: $("{0:d2}" -F $this.PageRefs[$this.ActiveIChevronIndex].MpCost)   CHANCE: $("{0:f0}" -F ($this.PageRefs[$this.ActiveIChevronIndex].Chance * 100))%"
                            UseATReset = $true
                        }
                    ))
                    Write-Host "$($a.ToAnsiControlSequenceString())"
                }
            }
        } Else {
            If($this.IsBlanked -EQ $false) {
                Foreach($Row in 5..15) {
                    [ATString]$a = [ATString]@{
                        Prefix = [ATStringPrefix]@{
                            Coordinates = [ATCoordinates]@{
                                Row    = $Row
                                Column = $this.LeftTop.Column + 1
                            }
                        }
                        UserData   = "$([StatusTechniqueInventoryWindow]::ZpLineBlank)"
                        UseATReset = $true
                    }
                    Write-Host "$($a.ToAnsiControlSequenceString())"
                }
                $this.IsBlanked = $true
            }
        }
    }

    [Void]CreateIChevrons() {
        $this.IChevrons = [List[ValueTuple[[ATString], [Boolean]]]]::new()
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 2
                        Column = $this.LeftTop.Column + 1
                    }
                }
                UserData   = "$([StatusTechniqueInventoryWindow]::IChevronCharacter)"
                UseATReset = $true
            },
            $true
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 3
                        Column = $this.LeftTop.Column + 1
                    }
                }
                UserData   = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                UseATReset = $true
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 4
                        Column = $this.LeftTop.Column + 1
                    }
                }
                UserData   = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                UseATReset = $true
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 5
                        Column = $this.LeftTop.Column + 1
                    }
                }
                UserData   = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                UseATReset = $true
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 6
                        Column = $this.LeftTop.Column + 1
                    }
                }
                UserData   = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                UseATReset = $true
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 2
                        Column = $this.RightBottom.Column - 17
                    }
                }
                UserData   = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                UseATReset = $true
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 3
                        Column = $this.RightBottom.Column - 17
                    }
                }
                UserData   = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                UseATReset = $true
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 4
                        Column = $this.RightBottom.Column - 17
                    }
                }
                UserData   = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                UseATReset = $true
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 5
                        Column = $this.RightBottom.Column - 17
                    }
                }
                UserData   = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                UseATReset = $true
            },
            $false
        ))
        $this.IChevrons.Add([ValueTuple]::Create(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 6
                        Column = $this.RightBottom.Column - 17
                    }
                }
                UserData   = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                UseATReset = $true
            },
            $false
        ))
    }

    [Void]CreateItemLabels() {
        $this.ItemLabels = [List[ATString]]::new()
        [Int]$c = 0

        Foreach($i in $this.PageRefs) {
            $this.ItemLabels.Add(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                        Coordinates     = [ATCoordinates]@{
                            Row    = $this.IChevrons[$c].Item1.Prefix.Coordinates.Row
                            Column = $this.IChevrons[$c].Item1.Prefix.Coordinates.Column + 2
                        }
                    }
                    UserData   = "$($i.Name)"
                    UseATReset = $true
                }
            )
            $c++ # TOTALLY A PROGRAMMER JOKE
        }
        $this.ResetIChevronPositions()
        $this.CreateItemLabelBlanks()
    }

    [Void]CreateItemLabelBlanks() {
        $this.ItemLabelBlanks = [List[ATString]]::new()
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 2
                        Column = $this.LeftTop.Column + 2
                    }
                }
                UserData   = '               '
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 3
                        Column = $this.LeftTop.Column + 2
                    }
                }
                UserData   = '               '
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 4
                        Column = $this.LeftTop.Column + 2
                    }
                }
                UserData   = '               '
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 5
                        Column = $this.LeftTop.Column + 2
                    }
                }
                UserData   = '               '
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 6
                        Column = $this.LeftTop.Column + 2
                    }
                }
                UserData   = '               '
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 2
                        Column = $this.RightBottom.Column - 16
                    }
                }
                UserData   = '               '
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 3
                        Column = $this.RightBottom.Column - 16
                    }
                }
                UserData   = '               '
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 4
                        Column = $this.RightBottom.Column - 16
                    }
                }
                UserData   = '               '
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 5
                        Column = $this.RightBottom.Column - 16
                    }
                }
                UserData   = '               '
                UseATReset = $true
            }
        )
        $this.ItemLabelBlanks.Add(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + 6
                        Column = $this.RightBottom.Column - 16
                    }
                }
                UserData   = '               '
                UseATReset = $true
            }
        )
    }

    [Void]CalculateNumPages() {
        $pp = $Script:ThePlayer.ActionInventory.Listing.Count / $this.ItemsPerPage
        If($pp -LT 1) {
            $this.NumPages = 1
        } Else {
            $this.NumPages = [Math]::Ceiling($pp)
        }
        If($this.CurrentPage -GT $this.NumPages) {
            $this.CurrentPage = $this.NumPages
        }
    }

    [Void]TurnPageForward() {
        If(($this.CurrentPage + 1) -LE $this.NumPages) {
            $this.CurrentPage++
            $this.CurrentPageDirty   = $true
            $this.ActiveItemBlinking = $false
            $this.ItemDescDirty      = $true
        }
    }

    [Void]TurnPageBackward() {
        If(($this.CurrentPage - 1) -GE 1) {
            $this.CurrentPage--
            $this.CurrentPageDirty   = $true
            $this.ActiveItemBlinking = $false
            $this.ItemDescDirty      = $true
        }
    }

    [Void]PopulatePage() {
        If($Script:ThePlayer.ActionInventory.Listing.Count -LE 0) {
            $this.ZeroPageActive   = $true
            $this.CurrentPageDirty = $false
            $this.ZpPromptDirty    = $true
            $this.ZpBlankedDirty   = $true
        } Else {
            $this.PageRefs       = [List[BattleAction]]::new()
            $this.ZeroPageActive = $false
            $rs                  = (($this.CurrentPage * $this.ItemsPerPage) - $this.ItemsPerPage)
            $rs                  = [Math]::Clamp($rs, 0, [Int]::MaxValue)
            $re                  = 10
            
            Try {
                $this.PageRefs = $Script:ThePlayer.ActionInventory.Listing.GetRange($rs, $re)
            } Catch {
                $this.PageRefs = $Script:ThePlayer.ActionInventory.Listing.GetRange($rs, ($Script:ThePlayer.ActionInventory.Listing.Count - $rs))
            }
            $this.CreateItemLabels()
            $this.ItemsListDirty   = $true
            $this.CurrentPageDirty = $false
        }
    }

    [Void]WriteItemLabels() {
        Foreach($i in $this.ItemLabelBlanks) {
            Write-Host "$($i.ToAnsiControlSequenceString())"
        }
        Foreach($i in $this.ItemLabels) {
            Write-Host "$($i.ToAnsiControlSequenceString())"
        }
    }

    [ATString]GetActiveIChevron() {
        $this.ActiveIChevronIndex = 0

        Foreach($a in $this.IChevrons) {
            If($a.Item2 -EQ $true) {
                Return $a.Item1
            }
            $this.ActiveIChevronIndex++
        }
        $this.ActiveIChevronIndex                        = 0
        $this.IChevrons[$this.ActiveIChevronIndex].Item2 = $true

        Return $this.IChevrons[$this.ActiveIChevronIndex].Item1
    }

    [Void]WriteZeroInventoryPage() {
        If($this.ZpBlankedDirty -EQ $true) {
            Foreach($a in 5..15) {
                [ATString]$b = [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCTextDefault24]::new()
                        BackgroundColor = [CCAppleBlueDark24]::new()
                        Coordinates = [ATCoordinates]@{
                            Row    = $a
                            Column = $this.LeftTop.Column + 1
                        }
                    }
                    UserData   = "$([StatusTechniqueInventoryWindow]::ZpLineBlank)"
                    UseATReset = $true
                }
                Write-Host "$($b.ToAnsiControlSequenceString())"
            }
            $this.ZpBlankedDirty = $false
        }
        If($this.ZpPromptDirty -EQ $true) {
            [ATString]$a = [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = $this.LeftTop.Row + ($this.Height / 2)
                        Column = $this.LeftTop.Column + (($this.Width / 2) - ([StatusTechniqueInventoryWindow]::ZeroPagePrompt.Length / 2))
                    }
                }
                UserData   = "$([StatusTechniqueInventoryWindow]::ZeroPagePrompt)"
                UseATReset = $true
            }
            Write-Host "$($a.ToAnsiControlSequenceString())"
            $this.ZpPromptDirty = $false
        }
    }

    [Void]WriteMoronPage() {}

    [Void]ResetIChevronPositions() {
        $this.IChevrons[$this.ActiveIChevronIndex].Item2          = $false
        $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
        Try {
            $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecorationNone]::new()
            $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCTextDefault24]::new()
        } Catch {}
        $this.ActiveIChevronIndex                                      = 0
        $this.IChevrons[$this.ActiveIChevronIndex].Item2               = $true
        $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData      = "$([StatusTechniqueInventoryWindow]::IChevronCharacter)"
        $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations = [ATDecoration]@{
            Blink = $true
        }
        $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCApplePinkLight24]::new()
        $this.PlayerChevronDirty                                           = $true
        $this.ActiveItemBlinking                                           = $false
        $this.ItemDescDirty                                                = $true
    }

    [Void]HandleInput() {
        $keyCap = $(Get-Host).UI.RawUI.ReadKey('IncludeKeyDown, NoEcho')
        Switch($keyCap.VirtualKeyCode) {
            13 {
                $Script:StatusIsSelected      = $this.PageRefs[$this.ActiveIChevronIndex]
                [BattleAction]$EquippedAction = $Script:ThePlayer.ActionListing[$Script:StatusEsSelectedSlot]
                If($null -EQ $EquippedAction) {
                    $Script:ThePlayer.ActionListing[$Script:StatusEsSelectedSlot] = [BattleAction]::new($Script:StatusIsSelected)
                    $Script:ThePlayer.ActionInventory.RemoveActionByName($Script:StatusIsSelected.Name)
                } Else {
                    [Int]$RootCollectionIndex = $this.CurrentPage -EQ 1 ? $this.ActiveIChevronIndex : ((($this.CurrentPage - 1) * $this.ItemsPerPage) + $this.ActiveIChevronIndex)
                    $Script:ThePlayer.ActionListing[$Script:StatusEsSelectedSlot]   = [BattleAction]::new($Script:StatusIsSelected)
                    $Script:ThePlayer.ActionInventory.Listing[$RootCollectionIndex] = [BattleAction]::new($EquippedAction)
                }
                $Script:StatusScreenMode = [StatusScreenMode]::EquippedTechSelection
            }

            27 {
                $Script:StatusScreenMode = [StatusScreenMode]::EquippedTechSelection
            }

            38 {
                Try {
                    $Script:TheSfxMPlayer.Open($Script:SfxUiChevronMove)
                    $Script:TheSfxMPlayer.Play()
                } Catch {
                    Write-Host 'Blew up.'
                }
                If(($this.ActiveIChevronIndex -1) -GE 0) {
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $false
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecorationNone]::new()
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCTextDefault24]::new()
                    $this.ActiveIChevronIndex--
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $true
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = "$([StatusTechniqueInventoryWindow]::IChevronCharacter)"
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCApplePinkLight24]::new()
                }
                $this.PlayerChevronDirty = $true
                $this.ActiveItemBlinking = $false
                $this.ItemDescDirty      = $true
                $this.DivLineDirty       = $true
            }

            40 {
                Try {
                    $Script:TheSfxMPlayer.Open($Script:SfxUiChevronMove)
                    $Script:TheSfxMPlayer.Play()
                } Catch {
                    Write-Host 'Blew up.'
                }
                If(($this.ActiveIChevronIndex + 1) -LT $this.PageRefs.Count) {
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $false
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecorationNone]::new()
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCTextDefault24]::new()
                    $this.ActiveIChevronIndex++
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $true
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = "$([StatusTechniqueInventoryWindow]::IChevronCharacter)"
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCApplePinkLight24]::new()
                }
                $this.PlayerChevronDirty = $true
                $this.ActiveItemBlinking = $false
                $this.ItemDescDirty      = $true
                $this.DivLineDirty       = $true
            }

            39 {
                Try {
                    $Script:TheSfxMPlayer.Open($Script:SfxUiChevronMove)
                    $Script:TheSfxMPlayer.Play()
                } Catch {
                    Write-Host 'Blew up.'
                }
                If(($this.ActiveIChevronIndex + 5) -LT $this.PageRefs.Count) {
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $false
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecorationNone]::new()
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCTextDefault24]::new()
                    $this.ActiveIChevronIndex += 5
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $true
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = "$([StatusTechniqueInventoryWindow]::IChevronCharacter)"
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCApplePinkLight24]::new()
                }
                $this.PlayerChevronDirty = $true
                $this.ActiveItemBlinking = $false
                $this.ItemDescDirty      = $true
                $this.DivLineDirty       = $true
            }

            37 {
                Try {
                    $Script:TheSfxMPlayer.Open($Script:SfxUiChevronMove)
                    $Script:TheSfxMPlayer.Play()
                } Catch {
                    Write-Host 'Blew up.'
                }
                If(($this.ActiveIChevronIndex - 5) -GE 0) {
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $false
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = "$([StatusTechniqueInventoryWindow]::IChevronCharacterBlank)"
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecorationNone]::new()
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCTextDefault24]::new()
                    $this.ActiveIChevronIndex -= 5
                    $this.IChevrons[$this.ActiveIChevronIndex].Item2                   = $true
                    $this.IChevrons[$this.ActiveIChevronIndex].Item1.UserData          = "$([StatusTechniqueInventoryWindow]::IChevronCharacter)"
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.Decorations     = [ATDecoration]@{
                        Blink = $true
                    }
                    $this.ItemLabels[$this.ActiveIChevronIndex].Prefix.ForegroundColor = [CCApplePinkLight24]::new()
                }
                $this.PlayerChevronDirty = $true
                $this.ActiveItemBlinking = $false
                $this.ItemDescDirty      = $true
                $this.DivLineDirty       = $true
            }

            68 {
                $this.TurnPageForward()
            }

            65 {
                $this.TurnPageBackward()
            }
        }
    }

    [Void]ConfigurePagingChevrons() {
        [StatusTechniqueInventoryWindow]::PagingChevronRight.Prefix.Coordinates = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 1
            Column = $this.RightBottom.Column - 2
        }
        [StatusTechniqueInventoryWindow]::PagingChevronRightBlank = [ATString]@{
            Prefix     = [ATStringPrefix]::new()
            UserData   = ' '
            UseATReset = $true
        }
        [StatusTechniqueInventoryWindow]::PagingChevronRightBlank.Prefix.Coordinates = [ATCoordinates]::new([StatusTechniqueInventoryWindow]::PagingChevronRight.Prefix.Coordinates)
        [StatusTechniqueInventoryWindow]::PagingChevronLeft.Prefix.Coordinates = [ATCoordinates]@{
            Row    = $this.LeftTop.Row + 1
            Column = $this.LeftTop.Column + 2
        }
        [StatusTechniqueInventoryWindow]::PagingChevronLeftBlank = [ATString]@{
            Prefix     = [ATStringPrefix]::new()
            UserData   = ' '
            UseATReset = $true
        }
        [StatusTechniqueInventoryWindow]::PagingChevronLeftBlank.Prefix.Coordinates = [ATCoordinates]::new([StatusTechniqueInventoryWindow]::PagingChevronLeft.Prefix.Coordinates)
    }

    [Void]ConfigureDivLine() {
        [StatusTechniqueInventoryWindow]::DivLineHorizontal.Prefix.Coordinates = [ATCoordinates]@{
            Row    = $this.RightBottom.Row - 4
            Column = $this.LeftTop.Column + 1
        }
    }

    [Void]SetFlagsDirty() {
        $this.BookDirty        = $true
        $this.CurrentPageDirty = $true
        $this.DivLineDirty     = $true
        $this.CurrentPage      = 1
    }
}





###############################################################################
#
# BATTLE PHASE INDICATOR
#
###############################################################################
Class BattlePhaseIndicator {
    [Boolean]$IndicatorDrawDirty
    [ATCoordinates]$IndicatorDrawCoords
    [ATStringComposite]$IndicatorStringActual
    [ATStringComposite]$IndicatorStringBlank

    BattlePhaseIndicator() {
        $this.IndicatorDrawCoords = [ATCoordinates]@{
            Row    = 24
            Column = 1
        }
    }

    [Void]Draw(
        [BattleEntity]$ActingEntity
    ) {
        If($this.IndicatorDrawDirty -EQ $true) {
            $this.IndicatorStringBlank = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCApplePinkLight24]::new()
                        Coordinates     = $this.IndicatorDrawCoords
                    }
                    UserData = 'Turn: '
                },
                [ATString]@{
                    UserData   = '              '
                    UseATReset = $true
                }
            ))
            $this.IndicatorStringActual = [ATStringComposite]::new(@(
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = [CCApplePinkLight24]::new()
                        Coordinates     = $this.IndicatorDrawCoords
                    }
                    UserData = 'Turn: '
                },
                [ATString]@{
                    Prefix = [ATStringPrefix]@{
                        ForegroundColor = $ActingEntity.NameDrawColor
                    }
                    UserData   = "$($ActingEntity.Name)"
                    UseATReset = $true
                }
            ))
            Write-Host "$($this.IndicatorStringBlank.ToAnsiControlSequenceString())$($this.IndicatorStringActual.ToAnsiControlSequenceString())"
            # I'M OMITTING THE ORIGINAL CALL I MADE HERE TO RESET THE CURSOR POSITION TO ORIGIN - SEEMS LIKE A SHIT CALL TO MAKE
            $this.IndicatorDrawDirty = $true
        }
    }
}





###############################################################################
#
# SPLASH SCREEN A (SSA) "FIGLET"
#
# I'M HIJACKING THE FIGLET!
#
# ... SORT OF. IT'S HARD CODED. DOES THIS STILL COUNT?
#
###############################################################################
Class SSAFiglet {
    # I DID IT AGAIN! FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    Static [String]$LineBlankData = ' ' * $Script:MaxWidth

    # THIS LOOKS REALLY NEAT IN HERE
    # DOESN'T LINE UP FOR SHIT IN THE CODE, BUT WHATEVS
    Static [String]$TitleDataLine1 = '     ░        ░░  ░░░░░░░░       ░░░░      ░░░       ░░░        ░░░      ░░     '
    Static [String]$TitleDataLine2 = '     ▒  ▒▒▒▒▒▒▒▒  ▒▒▒▒▒▒▒▒  ▒▒▒▒  ▒▒  ▒▒▒▒  ▒▒  ▒▒▒▒  ▒▒▒▒▒  ▒▒▒▒▒  ▒▒▒▒  ▒     '
    Static [String]$TitleDataLine3 = '     ▓      ▓▓▓▓  ▓▓▓▓▓▓▓▓  ▓▓▓▓  ▓▓  ▓▓▓▓  ▓▓       ▓▓▓▓▓▓  ▓▓▓▓▓  ▓▓▓▓  ▓     '
    Static [String]$TitleDataLine4 = '     █  ████████  ████████  ████  ██  ████  ██  ███  ██████  █████        █     '
    Static [String]$TitleDataLine5 = '     █        ██        ██       ████      ███  ████  ██        ██  ████  █     '

    Static [Int]$DrawTop  = 1
    Static [Int]$DrawLeft = 1

    [Boolean]$Dirty
    [ATStringComposite]$Title

    SSAFiglet() {
        $this.Dirty = $true
        $this.Title = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row    = [SSAFiglet]::DrawTop
                        Column = [SSAFiglet]::DrawLeft
                    }
                }
                UserData   = "$([SSAFiglet]::LineBlankData)"
                UseATReset = $true
            }
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleNMintLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSAFiglet]::DrawTop
                        Column = [SSAFiglet]::DrawLeft
                    }
                }
                UserData   = "$([SSAFiglet]::TitleDataLine1)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row    = [SSAFiglet]::DrawTop + 1
                        Column = [SSAFiglet]::DrawLeft
                    }
                }
                UserData   = "$([SSAFiglet]::LineBlankData)"
                UseATReset = $true
            }
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleNGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSAFiglet]::DrawTop + 1
                        Column = [SSAFiglet]::DrawLeft
                    }
                }
                UserData   = "$([SSAFiglet]::TitleDataLine2)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row    = [SSAFiglet]::DrawTop + 2
                        Column = [SSAFiglet]::DrawLeft
                    }
                }
                UserData   = "$([SSAFiglet]::LineBlankData)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleNMintLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSAFiglet]::DrawTop + 2
                        Column = [SSAFiglet]::DrawLeft
                    }
                }
                UserData   = "$([SSAFiglet]::TitleDataLine3)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row    = [SSAFiglet]::DrawTop + 3
                        Column = [SSAFiglet]::DrawLeft
                    }
                }
                UserData   = "$([SSAFiglet]::LineBlankData)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleNGreenLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSAFiglet]::DrawTop + 3
                        Column = [SSAFiglet]::DrawLeft
                    }
                }
                UserData   = "$([SSAFiglet]::TitleDataLine4)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates = [ATCoordinates]@{
                        Row    = [SSAFiglet]::DrawTop + 4
                        Column = [SSAFiglet]::DrawLeft
                    }
                }
                UserData   = "$([SSAFiglet]::LineBlankData)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCAppleNMintLight24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSAFiglet]::DrawTop + 4
                        Column = [SSAFiglet]::DrawLeft
                    }
                }
                UserData   = "$([SSAFiglet]::TitleDataLine5)"
                UseATReset = $true
            }
        ))
    }

    [Void]Draw() {
        If($this.Dirty -EQ $true) {
            Write-Host "$($this.Title.CompositeActual[0].ToAnsiControlSequenceString())$($this.Title.CompositeActual[1].ToAnsiControlSequenceString())"
            Start-Sleep -Seconds 0.75
            Write-Host "$($this.Title.CompositeActual[2].ToAnsiControlSequenceString())$($this.Title.CompositeActual[3].ToAnsiControlSequenceString())"
            Start-Sleep -Seconds 0.75
            Write-Host "$($this.Title.CompositeActual[4].ToAnsiControlSequenceString())$($this.Title.CompositeActual[5].ToAnsiControlSequenceString())"
            Start-Sleep -Seconds 0.75
            Write-Host "$($this.Title.CompositeActual[6].ToAnsiControlSequenceString())$($this.Title.CompositeActual[7].ToAnsiControlSequenceString())"
            Start-Sleep -Seconds 0.75
            Write-Host "$($this.Title.CompositeActual[8].ToAnsiControlSequenceString())$($this.Title.CompositeActual[9].ToAnsiControlSequenceString())"
            Start-Sleep -Seconds 0.75
            $this.Dirty = $false
        }
    }
}

Class SSASubtitle {
    Static [Int]$DrawTop  = 9
    Static [Int]$DrawLeft = 33

    [Boolean]$Dirty
    [ATStringComposite]$Text

    SSASubtitle() {
        $this.Dirty = $true
        $this.Text  = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft
                    }
                }
                UserData   = 'A'
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 1
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 1
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 2
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 2
                    }
                }
                UserData   = 'N'
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 3
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 3
                    }
                }
                UserData   = 'O'
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 4
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 4
                    }
                }
                UserData   = 'T'
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 5
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 5
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 6
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 6
                    }
                }
                UserData   = 'G'
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 7
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 7
                    }
                }
                UserData   = 'A'
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 8
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 8
                    }
                }
                UserData   = 'R'
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 9
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 9
                    }
                }
                UserData   = 'Y'
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 10
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 10
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 11
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 11
                    }
                }
                UserData   = 'G'
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 12
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 12
                    }
                }
                UserData   = 'A'
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 13
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 13
                    }
                }
                UserData   = 'M'
                UseATReset = $true
            },

            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCBlack24]::new()
                    BackgroundColor = [CCBlack24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 14
                    }
                }
                UserData   = ' '
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCRandom24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSASubtitle]::DrawTop
                        Column = [SSASubtitle]::DrawLeft + 14
                    }
                }
                UserData   = 'E'
                UseATReset = $true
            }
        ))
    }

    [Void]Draw() {
        $this.Text.CompositeActual[1].Prefix.ForegroundColor = [CCRandom24]::new()
        $this.Text.CompositeActual[5].Prefix.ForegroundColor = [CCRandom24]::new()
        $this.Text.CompositeActual[7].Prefix.ForegroundColor = [CCRandom24]::new()
        $this.Text.CompositeActual[9].Prefix.ForegroundColor = [CCRandom24]::new()
        $this.Text.CompositeActual[13].Prefix.ForegroundColor = [CCRandom24]::new()
        $this.Text.CompositeActual[15].Prefix.ForegroundColor = [CCRandom24]::new()
        $this.Text.CompositeActual[17].Prefix.ForegroundColor = [CCRandom24]::new()
        $this.Text.CompositeActual[19].Prefix.ForegroundColor = [CCRandom24]::new()
        $this.Text.CompositeActual[23].Prefix.ForegroundColor = [CCRandom24]::new()
        $this.Text.CompositeActual[25].Prefix.ForegroundColor = [CCRandom24]::new()
        $this.Text.CompositeActual[27].Prefix.ForegroundColor = [CCRandom24]::new()
        $this.Text.CompositeActual[29].Prefix.ForegroundColor = [CCRandom24]::new()

        If($this.Dirty -EQ $true) {
            Write-Host "$($this.Text.ToAnsiControlSequenceString())"
            $this.Dirty = $false
        }
    }
}

Class SSAPressEnterPrompt {
    Static [Int]$DrawTop    = 15
    Static [Int]$DrawLeft   = 35
    Static [Int]$DataLength = 11

    Static [String]$LineBlankData = ' ' * [SSAPressEnterPrompt]::DataLength

    [Boolean]$Dirty
    [Boolean]$DrawMode
    [ATStringComposite]$Text

    SSAPressEnterPrompt() {
        $this.Dirty    = $true
        $this.DrawMode = $false
        $this.Text     = [ATStringComposite]::new(@(
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSAPressEnterPrompt]::DrawTop
                        Column = [SSAPressEnterPrompt]::DrawLeft
                    }
                }
                UserData   = "$([SSAPressEnterPrompt]::LineBlankData)"
                UseATReset = $true
            },
            [ATString]@{
                Prefix = [ATStringPrefix]@{
                    ForegroundColor = [CCTextDefault24]::new()
                    Coordinates     = [ATCoordinates]@{
                        Row    = [SSAPressEnterPrompt]::DrawTop
                        Column = [SSAPressEnterPrompt]::DrawLeft
                    }
                }
                UserData   = 'PRESS ENTER'
                UseATReset = $true
            }
        ))
    }

    [Void]Draw() {
        If($this.Dirty -EQ $true) {
            If($this.DrawMode -EQ $false) {
                Write-Host "$($this.Text.CompositeActual[0].ToAnsiControlSequenceString())"
                $this.Dirty = $false
            } Else {
                Write-Host "$($this.Text.CompositeActual[1].ToAnsiControlSequenceString())"
                $this.Dirty = $false
            }
        }
    }
}

#endregion





#region Battle Manager

###############################################################################
#
# BATTLE MANAGER
#
# THIS CLASS IS SUBJECT TO SERIOUS REFACTORING AT THIS POINT. MOST OF THE CODE
# HERE IS TOTAL GARBAGE.
#
###############################################################################
Class BattleManager {
    [Int]$TurnCounter
    [Int]$TurnLimit
    [BattleEntity]$PhaseOneEntity
    [BattleEntity]$PhaseTwoEntity
    [BattleManagerState]$State

    # AT THIS POINT, I'VE OMITTED THE TWO ACTION FLAGS (THESE SHOULD COME FROM THE ENTITIES THEMSELVES)
    # AND THE SPOILS ACTION MEMBER; NOT SURE WHAT THE FUCK I NEEDED THAT THING FOR. I PROBABLY STILL
    # NEED IT, BUT I'LL WORK AROUND IT.

    BattleManager() {
        # THIS CTOR DID A WHOLE BUNCH OF CRAP THAT REALLY SHOULD BE IN THE STATE TABLE. I'M NOT DOING
        # THAT STUFF HERE.
    }

    [Void]Update() {
        # MAKE PRELIMINARY OUT-OF-BAND DRAW CALLS TO ENSURE THAT THE VISUAL DISPLAY IS KOSHER
        $Script:ThePlayer.Update()
        $Script:TheCurrentEnemy.Update()
        $Script:ThePlayerBattleStatWindow.Draw()
        $Script:TheEnemyBattleStatWindow.Draw()
        $Script:TheBattleEnemyImageWindow.Draw()
        $Script:ThePlayerBattleActionWindow.Draw()
        $Script:TheBattleStatusMessageWindow.Draw()
        $Script:Rui.CursorPosition = $([ATCoordinates]::new(0, 0)).ToAutomationCoordinates()

        # HERE COMES THE HONKER BLOCK
        # THESE CASES WERE ORIGINALLY UNSCOPED, WHICH IS FUCKING LAZY ON MY PART
        Switch($this.State) {
            ([BattleManagerState]::TurnIncrement) {
                If($this.TurnLimit -GT 0) {
                    If(($this.TurnCounter + 1) -GT $this.TurnLimit) {
                        $this.State = [BattleManagerState]::BattleLost

                        Return
                    }
                }
                $this.TurnCounter++
                $this.State = [BattleManagerState]::PhaseOrdering

                Return
            }

            ([BattleManagerState]::PhaseOrdering) {
                [Single]$PlayerEffectiveSpeed = 0.0
                [Single]$EnemyEffectiveSpeed  = 0.0

                $PlayerEffectiveSpeed = $Script:ThePlayer.Stats[[StatId]::Speed].Base + ($(Get-Random -Minimum 0.0 -Maximum 1.0) * $Script:ThePlayer.Stats[[StatId]::Luck].Base)
                $EnemyEffectiveSpeed  = $Script:TheCurrentEnemy.Stats[[StatId]::Speed].Base + ($(Get-Random -Minimum 0.0 -Maximum 1.0) * $Script:TheCurrentEnemy.Stats[[StatId]::Luck].Base)
                [Single]$EsWinner     = [Math]::Max($PlayerEffectiveSpeed, $EnemyEffectiveSpeed)
                If($EsWinner -EQ $PlayerEffectiveSpeed) {
                    $this.PhaseOneEntity = $Script:ThePlayer
                    $this.PhaseTwoEntity = $Script:TheCurrentEnemy
                } Elseif($EsWinner -EQ $EnemyEffectiveSpeed) {
                    $this.PhaseOneEntity = $Script:TheCurrentEnemy
                    $this.PhaseTwoEntity = $Script:ThePlayer
                }
                $this.State = [BattleManagerState]::PhaseAExecution

                Return
            }

            ([BattleManagerState]::PhaseAExecution) {
                # THE FIRST OF THE NASTY BLOCKS
                # DESPITE THIS BEING A SECOND PASS AT THIS CODE, I'LL BE COMMENTING ALONG THE WAY

                # BEFORE DOING ANYTHING, MAKE SURE THAT WE DON'T NEED TO CHANGE OUT TO THE CALCULATION STATE
                # THIS HELPS FACILITATE, PRIMARILY, THAT AN ENTITY CAN'T ACT IF THEY'RE ACTUALLY "DEAD"
                If(($this.PhaseOneEntity.Stats[[StatId]::HitPoints].Base -LE 0) -OR ($this.PhaseTwoEntity.Stats[[StatId]::HitPoints].Base -LE 0)) {
                    $this.State = [BattleManagerState]::Calculation

                    Break
                }

                # UPDATE THE PHASE INDICATOR
                $Script:TheBattlePhaseIndicator.IndicatorDrawDirty = $true
                $Script:TheBattlePhaseIndicator.Draw($this.PhaseOneEntity)

                # ENSURE THAT THE CORRESPONDING STATUS WINDOW HAS A HIGHLIGHT AROUND THE BORDER
                If($this.PhaseOneEntity -IS [Player]) {
                    $Script:ThePlayerBattleStatWindow.EntityBattlePhaseActive = $true
                    $Script:TheEnemyBattleStatWindow.EntityBattlePhaseActive  = $false
                } Else {
                    $Script:ThePlayerBattleStatWindow.EntityBattlePhaseActive = $false
                    $Script:TheEnemyBattleStatWindow.EntityBattlePhaseActive  = $true
                }
                $Script:ThePlayerBattleStatWindow.Draw()
                $Script:TheEnemyBattleStatWindow.Draw()

                # CHECK TO SEE IF THE PHASE ONE ENTITY CAN ACTUALLY ACT
                # REASONS THEY COULDN'T INCLUDE, BUT AREN'T LIMITED TO, STATUS AILMENTS LIKE SLEEP OR PARALYSIS
                If($this.PhaseOneEntity.CanAct -EQ $true) {
                    [BattleAction]$ToExecute          = $null
                    [BattleActionResult]$ActionResult = $null

                    # DETERMINE IF THE PHASE ONE ENTITY IS THE PLAYER OR NOT
                    # DIFFERENT LOGIC NEEDS TO OCCUR DEPENDING UPON THIS DECISION
                    # IF IT'S THE PLAYER, WE NEED TO BLOCK LOOP ON THE BATTLE ACTION
                    # SELECTION WINDOW SO THE PLAYER CAN CHOOSE AN ATTACK TO EXECUTE.
                    If($this.PhaseOneEntity -IS [Player]) {
                        # REFRESH THE BATTLE ACTION SELECTION WINDOW AND BLOCK LOOP ON IT
                        # THE RESULT OF THE SELECTION IS STORED IN TOEXECUTE
                        # NOTE THAT THIS IMPLEMENTATION OF HANDLEINPUT IS AN ANTI-PATTERN
                        # BUT IS REQUIRED
                        $Script:ThePlayerBattleActionWindow.SetAllActionDrawDirty()
                        While($null -EQ $ToExecute) {
                            $Script:ThePlayerBattleActionWindow.Draw()
                            $ToExecute = $Script:ThePlayerBattleActionWindow.HandleInput()
                        }

                        # THIS IS WHERE THINGS START GETTING HAIRY
                        # A LITANY OF CALLS TO WRITECOMPOSITEMESSAGE ON THE BATTLESTATUSMESSAGEWINDOW
                        # OCCUR FOLLOWING. I'M GOING TO ATTEMPT TO CONDENSE THESE CALLS.
                        $Script:TheBattleStatusMessageWindow.WriteEntityUsesMessage(
                            $this.PhaseOneEntity,
                            $this.PhaseTwoEntity,
                            $ToExecute
                        )

                        # ACTUALLY EXECUTE THE SELECTED COMMAND
                        # PS DOES SOME GOOFY SHIT WITH DISPATCHING THESE CALLS TO ICM, BUT THIS HASN'T CAUSED ANY PROBLEMS AFTER MANY HOURS
                        # OF TESTING THUS FAR.
                        $ActionResult = $(Invoke-Command $ToExecute.Effect -ArgumentList $this.PhaseOneEntity, $this.PhaseTwoEntity, $ToExecute)

                        # REFRESH THE PLAYER BATTLE STATUS WINDOW
                        $Script:ThePlayerBattleStatWindow.Draw()
                    } Else {
                        # THE PHASE ONE ENTITY IS THE ENEMY
                        # THE ACTION THE ENEMY USES IS SELECTED FROM THE "MARBLE BAG", SO NO DELAY IS NEEDED HERE.
                        [ActionSlot]$SelectedSlot = $($this.PhaseOneEntity.ActionMarbleBag | Get-Random)
                        $ToExecute                = $this.PhaseOneEntity.ActionListing[$SelectedSlot]

                        # NOTIFY THE BATTLE STATUS MESSAGE WINDOW
                        $Script:TheBattleStatusMessageWindow.WriteEntityUsesMessage(
                            $this.PhaseOneEntity,
                            $this.PhaseTwoEntity,
                            $ToExecute
                        )

                        # EXECUTE THE ACTION AND UPDATE THE ENEMY'S BATTLE STATUS WINDOW
                        $ActionResult = $(Invoke-Command $ToExecute.Effect -ArgumentList $this.PhaseOneEntity, $this.PhaseTwoEntity, $ToExecute)
                        $Script:TheEnemyBattleStatWindow.Draw()
                    }

                    # WE NEED TO EXAMINE THE ACTION RESULT TO SEE WHAT HAPPENED AS A CONSEQUENCE OF RUNNING THE SELECTED ACTION
                    # THIS IS DONE FIRST BY LOOKING AT THE VALUE OF THE TYPE PROPERTY
                    Switch($ActionResult.Type) {
                        ([BattleActionResultType]::SuccessWithCritical) {
                            $Script:TheBattleStatusMessageWindow.WriteBarSwc($ToExecute)

                            Break
                        }

                        ([BattleActionResultType]::SuccessWithAffinityBonus) {
                            $Script:TheBattleStatusMessageWindow.WriteBarAff($ToExecute)

                            Break
                        }

                        ([BattleActionResultType]::SuccessWithCritAndAffinityBonus) {
                            $Script:TheBattleStatusMessageWindow.WriteBarCritAff($ToExecute)

                            Break
                        }

                        ([BattleActionResultType]::Success) {
                            $Script:TheBattleStatusMessageWindow.WriteBarSuccess($ToExecute)

                            Break
                        }

                        ([BattleActionResultType]::FailedAttackMissed) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBaMissFail)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}

                            $Script:TheBattleStatusMessageWindow.WriteBarFailMissed($ToExecute)

                            Break
                        }

                        ([BattleActionResultType]::FailedAttackFailed) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBaMissFail)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}

                            $Script:TheBattleStatusMessageWindow.WriteBarFailFailed($ToExecute)

                            Break
                        }
                    }

                    # NEXT WE NEED TO EXAMINE THE TYPE OF THE ACTION EXECUTED TO DO PROVIDE SOME
                    # ADDITIONAL FEEDBACK
                    Switch($ToExecute.Type) {
                        ([BattleActionType]::Physical) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBaPhysicalStrikeA)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}

                            $Script:TheBattleStatusMessageWindow.WriteBatPhysical(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalFire) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBaFireStrikeA)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalFire(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalWater) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalWater(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalEarth) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalEarth(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalWind) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalWind(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalLight) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalLight(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalDark) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalDark(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalIce) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalIce(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicPoison) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            $Script:TheBattleStatusMessageWindow.WriteBatMagicPoison(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicConfuse) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            $Script:TheBattleStatusMessageWindow.WriteBatMagicPoison(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicSleep) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            $Script:TheBattleStatusMessageWindow.WriteBatMagicSleep(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicAging) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            $Script:TheBattleStatusMessageWindow.WriteBatMagicAging(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicHealing) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            $Script:TheBattleStatusMessageWindow.WriteBatMagicHealing(
                                $this.PhaseOneEntity,
                                $this.PhaseTwoEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicStatAugment) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            # TODO: I'M NOT SURE I'VE CODIFIED IN THE BATTLE RESULT FOR STAT AUGS.

                            Break
                        }
                    }
                } Else {
                    # THE PHASE ONE ENTITY CAN'T ACT AT THIS TIME
                    Try {
                        $Script:TheSfxMPlayer.Open($Script:SfxBaActionDisabled)
                        $Script:TheSfxMPlayer.Play()
                    } Catch {}

                    $Script:TheBattleStatusMessageWindow.WriteEntityCantActMessage(
                        $this.PhaseOneEntity
                    )
                }

                # FACILITATE THE UPDATE OF AUGMENTS AT THE END OF THE TURN
                Foreach($Stat in $this.PhaseOneEntity.Stats.Values) {
                    $Stat.Update()
                    If($Stat.AugmentTurnDuration -EQ 0) {
                        If($this.PhaseOneEntity -IS [Player]) {
                            $Script:ThePlayerBattleStatWindow.SetAllFlagsDirty()
                            $Script:ThePlayerBattleStatWindow.Draw()
                        } Else {
                            $Script:TheEnemyBattleStatWindow.SetAllFlagsDirty()
                            $Script:TheEnemyBattleStatWindow.Draw()
                        }
                    }
                }

                # CHANGE STATE TO PHASE B
                $this.State = [BattleManagerState]::PhaseBExecution

                Break
            }

            ([BattleManagerState]::PhaseBExecution) {
                # THE SECOND OF THE NASTY BLOCKS
                # THIS IS A CARBON COPY OF PHASE A, EXCEPT THAT THE ENTITY CONSIDERED IS THE PHASETWOENTITY

                # BEFORE DOING ANYTHING, MAKE SURE THAT WE DON'T NEED TO CHANGE OUT TO THE CALCULATION STATE
                # THIS HELPS FACILITATE, PRIMARILY, THAT AN ENTITY CAN'T ACT IF THEY'RE ACTUALLY "DEAD"
                If(($this.PhaseOneEntity.Stats[[StatId]::HitPoints].Base -LE 0) -OR ($this.PhaseTwoEntity.Stats[[StatId]::HitPoints].Base -LE 0)) {
                    $this.State = [BattleManagerState]::Calculation

                    Break
                }

                # UPDATE THE PHASE INDICATOR
                $Script:TheBattlePhaseIndicator.IndicatorDrawDirty = $true
                $Script:TheBattlePhaseIndicator.Draw($this.PhaseTwoEntity)

                # ENSURE THAT THE CORRESPONDING STATUS WINDOW HAS A HIGHLIGHT AROUND THE BORDER
                If($this.PhaseTwoEntity -IS [Player]) {
                    $Script:ThePlayerBattleStatWindow.EntityBattlePhaseActive = $true
                    $Script:TheEnemyBattleStatWindow.EntityBattlePhaseActive  = $false
                } Else {
                    $Script:ThePlayerBattleStatWindow.EntityBattlePhaseActive = $false
                    $Script:TheEnemyBattleStatWindow.EntityBattlePhaseActive  = $true
                }
                $Script:ThePlayerBattleStatWindow.Draw()
                $Script:TheEnemyBattleStatWindow.Draw()

                # CHECK TO SEE IF THE PHASE TWO ENTITY CAN ACTUALLY ACT
                # REASONS THEY COULDN'T INCLUDE, BUT AREN'T LIMITED TO, STATUS AILMENTS LIKE SLEEP OR PARALYSIS
                If($this.PhaseTwoEntity.CanAct -EQ $true) {
                    [BattleAction]$ToExecute          = $null
                    [BattleActionResult]$ActionResult = $null

                    # DETERMINE IF THE PHASE TWO ENTITY IS THE PLAYER OR NOT
                    # DIFFERENT LOGIC NEEDS TO OCCUR DEPENDING UPON THIS DECISION
                    # IF IT'S THE PLAYER, WE NEED TO BLOCK LOOP ON THE BATTLE ACTION
                    # SELECTION WINDOW SO THE PLAYER CAN CHOOSE AN ATTACK TO EXECUTE.
                    If($this.PhaseTwoEntity -IS [Player]) {
                        # REFRESH THE BATTLE ACTION SELECTION WINDOW AND BLOCK LOOP ON IT
                        # THE RESULT OF THE SELECTION IS STORED IN TOEXECUTE
                        # NOTE THAT THIS IMPLEMENTATION OF HANDLEINPUT IS AN ANTI-PATTERN
                        # BUT IS REQUIRED
                        $Script:ThePlayerBattleActionWindow.SetAllActionDrawDirty()
                        While($null -EQ $ToExecute) {
                            $Script:ThePlayerBattleActionWindow.Draw()
                            $ToExecute = $Script:ThePlayerBattleActionWindow.HandleInput()
                        }

                        # THIS IS WHERE THINGS START GETTING HAIRY
                        # A LITANY OF CALLS TO WRITECOMPOSITEMESSAGE ON THE BATTLESTATUSMESSAGEWINDOW
                        # OCCUR FOLLOWING. I'M GOING TO ATTEMPT TO CONDENSE THESE CALLS.
                        $Script:TheBattleStatusMessageWindow.WriteEntityUsesMessage(
                            $this.PhaseTwoEntity,
                            $this.PhaseOneEntity,
                            $ToExecute
                        )

                        # ACTUALLY EXECUTE THE SELECTED COMMAND
                        # PS DOES SOME GOOFY SHIT WITH DISPATCHING THESE CALLS TO ICM, BUT THIS HASN'T CAUSED ANY PROBLEMS AFTER MANY HOURS
                        # OF TESTING THUS FAR.
                        $ActionResult = $(Invoke-Command $ToExecute.Effect -ArgumentList $this.PhaseTwoEntity, $this.PhaseOneEntity, $ToExecute)

                        # REFRESH THE PLAYER BATTLE STATUS WINDOW
                        $Script:ThePlayerBattleStatWindow.Draw()
                    } Else {
                        # THE PHASE TWO ENTITY IS THE ENEMY
                        # THE ACTION THE ENEMY USES IS SELECTED FROM THE "MARBLE BAG", SO NO DELAY IS NEEDED HERE.
                        [ActionSlot]$SelectedSlot = $($this.PhaseTwoEntity.ActionMarbleBag | Get-Random)
                        $ToExecute                = $this.PhaseTwoEntity.ActionListing[$SelectedSlot]

                        # NOTIFY THE BATTLE STATUS MESSAGE WINDOW
                        $Script:TheBattleStatusMessageWindow.WriteEntityUsesMessage(
                            $this.PhaseTwoEntity,
                            $this.PhaseOneEntity,
                            $ToExecute
                        )

                        # EXECUTE THE ACTION AND UPDATE THE ENEMY'S BATTLE STATUS WINDOW
                        $ActionResult = $(Invoke-Command $ToExecute.Effect -ArgumentList $this.PhaseTwoEntity, $this.PhaseOneEntity, $ToExecute)
                        $Script:TheEnemyBattleStatWindow.Draw()
                    }

                    # WE NEED TO EXAMINE THE ACTION RESULT TO SEE WHAT HAPPENED AS A CONSEQUENCE OF RUNNING THE SELECTED ACTION
                    # THIS IS DONE FIRST BY LOOKING AT THE VALUE OF THE TYPE PROPERTY
                    Switch($ActionResult.Type) {
                        ([BattleActionResultType]::SuccessWithCritical) {
                            $Script:TheBattleStatusMessageWindow.WriteBarSwc($ToExecute)

                            Break
                        }

                        ([BattleActionResultType]::SuccessWithAffinityBonus) {
                            $Script:TheBattleStatusMessageWindow.WriteBarAff($ToExecute)

                            Break
                        }

                        ([BattleActionResultType]::SuccessWithCritAndAffinityBonus) {
                            $Script:TheBattleStatusMessageWindow.WriteBarCritAff($ToExecute)

                            Break
                        }

                        ([BattleActionResultType]::Success) {
                            $Script:TheBattleStatusMessageWindow.WriteBarSuccess($ToExecute)

                            Break
                        }

                        ([BattleActionResultType]::FailedAttackMissed) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBaMissFail)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}

                            $Script:TheBattleStatusMessageWindow.WriteBarFailMissed($ToExecute)

                            Break
                        }

                        ([BattleActionResultType]::FailedAttackFailed) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBaMissFail)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}

                            $Script:TheBattleStatusMessageWindow.WriteBarFailFailed($ToExecute)

                            Break
                        }
                    }

                    # NEXT WE NEED TO EXAMINE THE TYPE OF THE ACTION EXECUTED TO DO PROVIDE SOME
                    # ADDITIONAL FEEDBACK
                    Switch($ToExecute.Type) {
                        ([BattleActionType]::Physical) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBaPhysicalStrikeA)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}

                            $Script:TheBattleStatusMessageWindow.WriteBatPhysical(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalFire) {
                            Try {
                                $Script:TheSfxMPlayer.Open($Script:SfxBaFireStrikeA)
                                $Script:TheSfxMPlayer.Play()
                            } Catch {}

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalFire(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalWater) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalWater(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalEarth) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalEarth(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalWind) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalWind(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalLight) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalLight(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalDark) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalDark(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::ElementalIce) {
                            # TODO: ADD SOUND EFFECT FOR THIS ELEMENT

                            $Script:TheBattleStatusMessageWindow.WriteBatElementalIce(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicPoison) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            $Script:TheBattleStatusMessageWindow.WriteBatMagicPoison(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicConfuse) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            $Script:TheBattleStatusMessageWindow.WriteBatMagicPoison(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicSleep) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            $Script:TheBattleStatusMessageWindow.WriteBatMagicSleep(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicAging) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            $Script:TheBattleStatusMessageWindow.WriteBatMagicAging(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicHealing) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            $Script:TheBattleStatusMessageWindow.WriteBatMagicHealing(
                                $this.PhaseTwoEntity,
                                $this.PhaseOneEntity,
                                $ToExecute,
                                $ActionResult
                            )

                            Break
                        }

                        ([BattleActionType]::MagicStatAugment) {
                            # TODO: ADD SOUND EFFECT FOR THIS MAGIC

                            # TODO: I'M NOT SURE I'VE CODIFIED IN THE BATTLE RESULT FOR STAT AUGS.

                            Break
                        }
                    }
                } Else {
                    # THE PHASE ONE ENTITY CAN'T ACT AT THIS TIME
                    Try {
                        $Script:TheSfxMPlayer.Open($Script:SfxBaActionDisabled)
                        $Script:TheSfxMPlayer.Play()
                    } Catch {}

                    $Script:TheBattleStatusMessageWindow.WriteEntityCantActMessage(
                        $this.PhaseTwoEntity
                    )
                }

                # FACILITATE THE UPDATE OF AUGMENTS AT THE END OF THE TURN
                Foreach($Stat in $this.PhaseTwoEntity.Stats.Values) {
                    $Stat.Update()
                    If($Stat.AugmentTurnDuration -EQ 0) {
                        If($this.PhaseOneEntity -IS [Player]) {
                            $Script:ThePlayerBattleStatWindow.SetAllFlagsDirty()
                            $Script:ThePlayerBattleStatWindow.Draw()
                        } Else {
                            $Script:TheEnemyBattleStatWindow.SetAllFlagsDirty()
                            $Script:TheEnemyBattleStatWindow.Draw()
                        }
                    }
                }

                # CHANGE STATE TO TURN INCREMENT
                $this.State = [BattleManagerState]::TurnIncrement

                Break
            }

            ([BattleManagerState]::Calculation) {
                # GIVEN HOW THIS STATE IS ENTERED, THIS MAY BE A REDUNDANT CHECK, BUT I DON'T CARE
                If($this.PhaseOneEntity.Stats[[StatId]::HitPoints].Base -LE 0) {
                    If($this.PhaseOneEntity -IS [Player]) {
                        $this.State = [BattleManagerState]::BattleLost

                        Break
                    } Else {
                        # $this.SpoilsAction = $this.PhaseTwoEntity.SpoilsEffect
                        $this.State = [BattleManagerState]::BattleWon

                        Break
                    }
                } Elseif($this.PhaseTwoEntity.Stats[[StatId]::HitPoints].Base -LE 0) {
                    If($this.PhaseTwoEntity -IS [Player]) {
                        $this.State = [BattleManagerState]::BattleLost

                        Break
                    } Else {
                        # $this.SpoilsAction = $this.PhaseOneEntity.SpoilsEffect
                        $this.State = [BattleManagerState]::BattleWon

                        Break
                    }
                }

                # DO NOTHING, TRANSITION BACK TO TURN INCREMENT STATE
                $this.State = [BattleManagerState]::BattleWon

                Break
            }

            ([BattleManagerState]::BattleWon) {
                $Script:TheBgmMPlayer.Stop() # STOP PLAYING THE BATTLE BGM
                
                # CHECK TO SEE IF THE BATTLE WON CHIME HAS PLAYED
                # PLAY IT IF IT HASN'T
                If($Script:HasBattleWonChimePlayed -EQ $false) {
                    Try {
                        $Script:TheSfxMPlayer.Open($Script:SfxBattlePlayerWin)
                        $Script:TheSfxMPlayer.Play()
                    } Catch {}
                    $Script:HasBattleWonChimePlayed = $true
                }

                # THE FOLLOWING CODE WILL WRITE TWO OUT-OF-BAND MESSAGES TO THE STATUS WINDOW
                # OUT-OF-BAND MEANING THAT EXPLICIT CALLS TO THE DRAW FUNCTION ARE MADE BECAUSE
                # THE NORMAL SEQUENCING WOULD CAUSE THESE TO NOT BE DRAWN IN TIME
                
                # WRITE THE WON MESSAGE TO THE STATUS WINDOW
                $Script:TheBattleStatusMessageWindow.WriteBattleWonMessage()
                $Script:TheBattleStatusMessageWindow.Draw()

                # RUN THE SPOILS EFFECT; NEED TO DETERMINE WHICH ENTITY IS THE PLAYER
                If($this.PhaseOneEntity -IS [Player]) {
                    # THE ORIGINAL CODE RESET THE SPOILSACTION MEMBER; NOT SURE WHY
                    # THE LIKELY CAUSE IS I'M AN IDIOT
                    Invoke-Command $this.PhaseTwoEntity.SpoilsEffect -ArgumentList ([Player]$this.PhaseOneEntity), ([EnemyBattleEntity]$this.PhaseTwoEntity)
                } Elseif($this.PhaseTwoEntity -IS [Player]) {
                    Invoke-Command $this.PhaseOneEntity.SpoilsEffect -ArgumentList ([Player]$this.PhaseTwoEntity), ([EnemyBattleEntity]$this.PhaseOneEntity)
                }

                # WRITE THE BATTLE END PROMPT
                $Script:TheBattleStatusMessageWindow.WriteBattleEndPrompt()
                $Script:TheBattleStatusMessageWindow.Draw()

                # BLOCK FOR THE ENTER KEY (ACKSHUALEE ENTER KEY)
                $a = $Script:Rui.ReadKey('IncludeKeyDown, NoEcho')
                While($a.VirtualKeyCode -NE 13) {
                    $a = $Script:Rui.ReadKey('IncludeKeyDown, NoEcho')
                }

                # CHANGE GLOBAL STATE
                $Script:ThePreviousGlobalGameState = $Script:TheGlobalGameState
                $Script:TheGlobalGameState         = [GameStatePrimary]::GamePlayScreen

                Break
            }

            ([BattleManagerState]::BattleLost) {
				$Script:TheBgmMPlayer.Stop() # STOP PLAYING THE BATTLE BGM
				
				# CHECK TO SEE IF THE BATTLE LOST CHIME HAS PLAYED
				# PLAY IT IF IT HASN'T
				If($Script:HasBattleLostChimePlayed -EQ $false) {
					Try {
						$Script:TheSfxMPlayer.Open($Script:SfxBattlePlayerLose)
						$Script:TheSfxMPlayer.Play()
					} Catch {}
					$Script:HasBattleLostChimPlayed = $true
				}
				
				# WRITE THE LOST MESSAGE TO THE STATUS WINDOW
				$Script:TheBattleStatusMessageWindow.WriteBattleLostMessage()
				$Script:TheBattleStatusMessageWindow.Draw()
				$Script:TheBattleStatusMessageWindow.WriteGameOverMessage()
				$Script:TheBattleStatusMessageWindow.Draw()
				
				# SLEEP THEN DIE
				Start-Sleep -Seconds 5
				Clear-Host
				
				Exit
			}

            Default {}
        }
    }

    [Void]Cleanup() {
        $Script:BattleCursorVisible          = $false
        $Script:HasBattleIntroPlayed         = $false
        $Script:IsBattleBgmPlaying           = $false
        $Script:HasBattleWonChimePlayed      = $false
        $Script:HasBattleLostChimePlayed     = $false
    }
}

#endregion





###############################################################################
#
# GAME CORE
#
# ENTRY POINT FOR THE GAME PROGRAM
#
###############################################################################
Class GameCore {
    [Boolean]$GameRunning

    GameCore() {
        $this.GameRunning          = $true
        $Script:TheGlobalGameState = [GameStatePrimary]::GamePlayScreen
    }

    [Void]Run() {
        While($this.GameRunning -EQ $true) {
            $this.Logic()
        }
    }

    [Void]Logic() {
        Invoke-Command $Script:TheGlobalStateBlockTable[$Script:TheGlobalGameState]
        $Script:Rui.FlushInputBuffer()
    }
}





###############################################################################
#
# DUMMY SETUP CODE
#
###############################################################################
Clear-Host

$Script:ThePlayer.Inventory.Add([MTOLadder]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTORope]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOStairs]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOPole]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOBacon]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOApple]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOStick]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOYogurt]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTORock]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTORope]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOPole]::new()) | Out-Null
# $Script:ThePlayer.Inventory.Add([MTOBacon]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOApple]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOStick]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOYogurt]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTORock]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTORope]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOLadder]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTORope]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOStairs]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOPole]::new()) | Out-Null
# $Script:ThePlayer.Inventory.Add([MTOBacon]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOApple]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOStick]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOYogurt]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTORock]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTORope]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOPole]::new()) | Out-Null
# $Script:ThePlayer.Inventory.Add([MTOBacon]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOApple]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOStick]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOYogurt]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTORock]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTORope]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOTree]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOMilk]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOMilk]::new()) | Out-Null
$Script:ThePlayer.Inventory.Add([MTOMilk]::new()) | Out-Null

$Script:ThePlayer.ActionInventory.Add([BASwordStab]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAPunch]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAKick]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAKarateChop]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAKarateKick]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAFlamePunch]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAFlameKick]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BASwordStab]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAPunch]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAKick]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAKarateChop]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAKarateKick]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAFlamePunch]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAFlameKick]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BASeafoamBolt]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BATyphoon]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BATerraStrike]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BABoulderBash]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAIcicleStrike]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BAGaleStrike]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BARadiance]::new()) | Out-Null
$Script:ThePlayer.ActionInventory.Add([BASunfire]::new()) | Out-Null

# $Script:SampleMap.CreateMapTiles()
# $Script:SampleMap.Tiles[0, 0] = [MapTile]::new(
#     $Script:FieldNorthEastRoadImage,
#     @(
#         [MTOApple]::new(),
#         [MTOTree]::new(),
#         [MTOLadder]::new(),
#         [MTORope]::new(),
#         [MTOStairs]::new(),
#         [MTOPole]::new()
#     ),
#     @(
#         $true,
#         $false,
#         $true,
#         $false
#     ),
#     $true,
#     0.5,
#     0
# )
# $Script:SampleMap.Tiles[0, 1] = [MapTile]::new(
#     $Script:FieldNorthWestRoadImage,
#     @(
#         [MTOApple]::new()
#     ),
#     @(
#         $true,
#         $false,
#         $false,
#         $true
#     ),
#     $true,
#     0.5,
#     0
# )
# $Script:SampleMap.Tiles[1, 0] = [MapTile]::new(
#     $Script:FieldSouthEastRoadImage,
#     @(
#         [MTOTree]::new()
#     ),
#     @(
#         $false,
#         $true,
#         $true,
#         $false
#     ),
#     $true,
#     0.5,
#     0
# )
# $Script:SampleMap.Tiles[1, 1] = [MapTile]::new(
#     $Script:FieldSouthWestRoadImage,
#     @(
#         [MTOTree]::new()
#     ),
#     @(
#         $false,
#         $true,
#         $false,
#         $true
#     ),
#     $true,
#     0.5,
#     0
# )

$Script:TheGameCore.Run()
