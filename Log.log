WELCOME TO THE DANGER ZONE!!!
CommandWindow::Constructor - Starting the constructor.
CommandWindow::Constructor - 	Setting LeftTop and BottomRight relative to the desired window position.
CommandWindow::Constructor - 	Setting the BorderDrawColors relative to the desired effect for this window (all sides CCWhite24).
CommandWindow::Constructor - 	Settings BorderStrings relative to the desired strings for this window.
CommandWindow::Constructor - 	Calling UpdateDimensions to ensure that measurements are correct.
CommandWindow::Constructor - 	CommandDivDirty to true and CommandHistoryDirty to false.
CommandWindow::Constructor - 	Defining rowBase to 20 and columnBase to 2.
CommandWindow::Constructor - 	Calculating History String Drawing Coordinates.
CommandWindow::Constructor - 	History String Drawing Coordinates have been calculated as follows:
CommandWindow::Constructor - 		Div: (R18, C2)
CommandWindow::Constructor - 		E: (R13, C2)
CommandWindow::Constructor - 		D: (R17, C2)
CommandWindow::Constructor - 		C: (R16, C2)
CommandWindow::Constructor - 		B: (R15, C2)
CommandWindow::Constructor - 		A: (R14, C2)
CommandWindow::Draw - Starting the Draw function.
CommandWindow::Draw - Calling base class Draw function.
CommandWindow::Draw - Checking to see if the CommandDivDirty flag is true.
CommandWindow::Draw - 	CommandDivDirty is true, draw the Command Div to the console.
CommandWindow::Draw - 	Setting CommandDivDirty to false to avoid overdraws.
CommandWindow::Draw - Checking to see if the CommandHistoryDirty flag is true.
CommandWindow::HandleInput - A regular keypress has been detected. Adding g to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is g.
CommandWindow::HandleInput - A regular keypress has been detected. Adding r to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is gr.
CommandWindow::HandleInput - A regular keypress has been detected. Adding e to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is gre.
CommandWindow::HandleInput - A regular keypress has been detected. Adding g to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is greg.
CommandWindow::InvokeCommandParser - Starting the CommandParser.
CommandWindow::InvokeCommandParser - 	Writing the Command Blank.
CommandWindow::InvokeCommandParser - 	Command Blank has been written.
CommandWindow::InvokeCommandParser - 	Checking to see if Command Actual contains anything.
CommandWindow::InvokeCommandParser - 		It contains data. The current data is greg. Attempting to split the string.
CommandWindow::InvokeCommandParser - 		Split is successful. The split data is Foreach($a in $cmdactSplit){"$a, "}.
CommandWindow::InvokeCommandParser - 		Attempting to find the root command in the Command Table.
CommandWindow::InvokeCommandParser - 		An invalid command has been typed in. Asking the Command Window to update the history.
CommandWindow::UpdateCommandHistory - Starting to shuffle the Command History around.
CommandWindow::UpdateCommandHistory - Setting History E ('                  ') to History A ('                  ').
CommandWindow::UpdateCommandHistory - Setting History A ('                  ') to History B ('                  ').
CommandWindow::UpdateCommandHistory - Setting History B ('                  ') to History C ('                  ').
CommandWindow::UpdateCommandHistory - Setting History C ('                  ') to History D ('                  ').
CommandWindow::UpdateCommandHistory - Setting History D ('                  ') to Command Actual ('greg').
CommandWindow::UpdateCommandHistory - The current layout of the history is as follows: E:                   , A:                   , B:                   , C:                   , D: greg
CommandWindow::UpdateCommandHistory - Checking to see if the Command Valid flag is true or false.
CommandWindow::UpdateCommandHistory - 	The Command Valid Flag is false. Set the Foreground Color to HistoryEntryError and set the Decoration to Blink.
CommandWindow::UpdateCommandHistory - 	Clearing the Command Actual.
CommandWindow::UpdateCommandHistory - Set the CommandHistoryDirty flag to true so the Draw function will draw the strings to the console.
CommandWindow::Draw - Starting the Draw function.
CommandWindow::Draw - Calling base class Draw function.
CommandWindow::Draw - Checking to see if the CommandDivDirty flag is true.
CommandWindow::Draw - Checking to see if the CommandHistoryDirty flag is true.
CommandWindow::Draw - 	CommandHistoryDirty is true, draw the Command History strings to the console.
CommandWindow::Draw - 	Setting the CommandHistoryDirty flag to false.
CommandWindow::HandleInput - A regular keypress has been detected. Adding t to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is t.
CommandWindow::HandleInput - A regular keypress has been detected. Adding e to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is te.
CommandWindow::HandleInput - A regular keypress has been detected. Adding s to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is tes.
CommandWindow::HandleInput - A regular keypress has been detected. Adding t to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is test.
CommandWindow::InvokeCommandParser - Starting the CommandParser.
CommandWindow::InvokeCommandParser - 	Writing the Command Blank.
CommandWindow::InvokeCommandParser - 	Command Blank has been written.
CommandWindow::InvokeCommandParser - 	Checking to see if Command Actual contains anything.
CommandWindow::InvokeCommandParser - 		It contains data. The current data is test. Attempting to split the string.
CommandWindow::InvokeCommandParser - 		Split is successful. The split data is Foreach($a in $cmdactSplit){"$a, "}.
CommandWindow::InvokeCommandParser - 		Attempting to find the root command in the Command Table.
CommandWindow::InvokeCommandParser - 		An invalid command has been typed in. Asking the Command Window to update the history.
CommandWindow::UpdateCommandHistory - Starting to shuffle the Command History around.
CommandWindow::UpdateCommandHistory - Setting History E ('                  ') to History A ('                  ').
CommandWindow::UpdateCommandHistory - Setting History A ('                  ') to History B ('                  ').
CommandWindow::UpdateCommandHistory - Setting History B ('                  ') to History C ('                  ').
CommandWindow::UpdateCommandHistory - Setting History C ('                  ') to History D ('greg').
CommandWindow::UpdateCommandHistory - Setting History D ('greg') to Command Actual ('test').
CommandWindow::UpdateCommandHistory - The current layout of the history is as follows: E:                   , A:                   , B:                   , C: greg, D: test
CommandWindow::UpdateCommandHistory - Checking to see if the Command Valid flag is true or false.
CommandWindow::UpdateCommandHistory - 	The Command Valid Flag is false. Set the Foreground Color to HistoryEntryError and set the Decoration to Blink.
CommandWindow::UpdateCommandHistory - 	Clearing the Command Actual.
CommandWindow::UpdateCommandHistory - Set the CommandHistoryDirty flag to true so the Draw function will draw the strings to the console.
CommandWindow::Draw - Starting the Draw function.
CommandWindow::Draw - Calling base class Draw function.
CommandWindow::Draw - Checking to see if the CommandDivDirty flag is true.
CommandWindow::Draw - Checking to see if the CommandHistoryDirty flag is true.
CommandWindow::Draw - 	CommandHistoryDirty is true, draw the Command History strings to the console.
CommandWindow::Draw - 	Setting the CommandHistoryDirty flag to false.
CommandWindow::HandleInput - A regular keypress has been detected. Adding a to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is a.
CommandWindow::HandleInput - A regular keypress has been detected. Adding s to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is as.
CommandWindow::HandleInput - A regular keypress has been detected. Adding s to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is ass.
CommandWindow::InvokeCommandParser - Starting the CommandParser.
CommandWindow::InvokeCommandParser - 	Writing the Command Blank.
CommandWindow::InvokeCommandParser - 	Command Blank has been written.
CommandWindow::InvokeCommandParser - 	Checking to see if Command Actual contains anything.
CommandWindow::InvokeCommandParser - 		It contains data. The current data is ass. Attempting to split the string.
CommandWindow::InvokeCommandParser - 		Split is successful. The split data is Foreach($a in $cmdactSplit){"$a, "}.
CommandWindow::InvokeCommandParser - 		Attempting to find the root command in the Command Table.
CommandWindow::InvokeCommandParser - 		An invalid command has been typed in. Asking the Command Window to update the history.
CommandWindow::UpdateCommandHistory - Starting to shuffle the Command History around.
CommandWindow::UpdateCommandHistory - Setting History E ('                  ') to History A ('                  ').
CommandWindow::UpdateCommandHistory - Setting History A ('                  ') to History B ('                  ').
CommandWindow::UpdateCommandHistory - Setting History B ('                  ') to History C ('greg').
CommandWindow::UpdateCommandHistory - Setting History C ('greg') to History D ('test').
CommandWindow::UpdateCommandHistory - Setting History D ('test') to Command Actual ('ass').
CommandWindow::UpdateCommandHistory - The current layout of the history is as follows: E:                   , A:                   , B: greg, C: test, D: ass
CommandWindow::UpdateCommandHistory - Checking to see if the Command Valid flag is true or false.
CommandWindow::UpdateCommandHistory - 	The Command Valid Flag is false. Set the Foreground Color to HistoryEntryError and set the Decoration to Blink.
CommandWindow::UpdateCommandHistory - 	Clearing the Command Actual.
CommandWindow::UpdateCommandHistory - Set the CommandHistoryDirty flag to true so the Draw function will draw the strings to the console.
CommandWindow::Draw - Starting the Draw function.
CommandWindow::Draw - Calling base class Draw function.
CommandWindow::Draw - Checking to see if the CommandDivDirty flag is true.
CommandWindow::Draw - Checking to see if the CommandHistoryDirty flag is true.
CommandWindow::Draw - 	CommandHistoryDirty is true, draw the Command History strings to the console.
CommandWindow::Draw - 	Setting the CommandHistoryDirty flag to false.
CommandWindow::HandleInput - A regular keypress has been detected. Adding b to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is b.
CommandWindow::HandleInput - A regular keypress has been detected. Adding a to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is ba.
CommandWindow::HandleInput - A regular keypress has been detected. Adding r to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is bar.
CommandWindow::HandleInput - A regular keypress has been detected. Adding f to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is barf.
CommandWindow::InvokeCommandParser - Starting the CommandParser.
CommandWindow::InvokeCommandParser - 	Writing the Command Blank.
CommandWindow::InvokeCommandParser - 	Command Blank has been written.
CommandWindow::InvokeCommandParser - 	Checking to see if Command Actual contains anything.
CommandWindow::InvokeCommandParser - 		It contains data. The current data is barf. Attempting to split the string.
CommandWindow::InvokeCommandParser - 		Split is successful. The split data is Foreach($a in $cmdactSplit){"$a, "}.
CommandWindow::InvokeCommandParser - 		Attempting to find the root command in the Command Table.
CommandWindow::InvokeCommandParser - 		An invalid command has been typed in. Asking the Command Window to update the history.
CommandWindow::UpdateCommandHistory - Starting to shuffle the Command History around.
CommandWindow::UpdateCommandHistory - Setting History E ('                  ') to History A ('                  ').
CommandWindow::UpdateCommandHistory - Setting History A ('                  ') to History B ('greg').
CommandWindow::UpdateCommandHistory - Setting History B ('greg') to History C ('test').
CommandWindow::UpdateCommandHistory - Setting History C ('test') to History D ('ass').
CommandWindow::UpdateCommandHistory - Setting History D ('ass') to Command Actual ('barf').
CommandWindow::UpdateCommandHistory - The current layout of the history is as follows: E:                   , A: greg, B: test, C: ass, D: barf
CommandWindow::UpdateCommandHistory - Checking to see if the Command Valid flag is true or false.
CommandWindow::UpdateCommandHistory - 	The Command Valid Flag is false. Set the Foreground Color to HistoryEntryError and set the Decoration to Blink.
CommandWindow::UpdateCommandHistory - 	Clearing the Command Actual.
CommandWindow::UpdateCommandHistory - Set the CommandHistoryDirty flag to true so the Draw function will draw the strings to the console.
CommandWindow::Draw - Starting the Draw function.
CommandWindow::Draw - Calling base class Draw function.
CommandWindow::Draw - Checking to see if the CommandDivDirty flag is true.
CommandWindow::Draw - Checking to see if the CommandHistoryDirty flag is true.
CommandWindow::Draw - 	CommandHistoryDirty is true, draw the Command History strings to the console.
CommandWindow::Draw - 	Setting the CommandHistoryDirty flag to false.
CommandWindow::HandleInput - A regular keypress has been detected. Adding l to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is l.
CommandWindow::HandleInput - A regular keypress has been detected. Adding o to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is lo.
CommandWindow::HandleInput - A regular keypress has been detected. Adding o to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is loo.
CommandWindow::HandleInput - A regular keypress has been detected. Adding k to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is look.
CommandWindow::HandleInput - Backspace Key has been pressed. Virtual Key Code value is 8
CommandWindow::HandleInput - 	Obtaining current Cursor Position X (Row) Value as FPX. The current value is 4
CommandWindow::HandleInput - 	Comparing FPX against the Default Coordinates X (Row). The default value is 1, and FPX is 4.
CommandWindow::HandleInput - 		FPX is GREATER THAN the Default Coordinates X (Row).
CommandWindow::HandleInput - 		The character that would be deleted here is k.
CommandWindow::HandleInput - 		Performing character deletion from console window.
CommandWindow::HandleInput - 		The current value of Command Actual is look. Attempting to delete the last character.
CommandWindow::HandleInput - 		The last character has been deleted. The current value of Command Actual is loo.
CommandWindow::HandleInput - Backspace Key has been pressed. Virtual Key Code value is 8
CommandWindow::HandleInput - 	Obtaining current Cursor Position X (Row) Value as FPX. The current value is 3
CommandWindow::HandleInput - 	Comparing FPX against the Default Coordinates X (Row). The default value is 1, and FPX is 3.
CommandWindow::HandleInput - 		FPX is GREATER THAN the Default Coordinates X (Row).
CommandWindow::HandleInput - 		The character that would be deleted here is o.
CommandWindow::HandleInput - 		Performing character deletion from console window.
CommandWindow::HandleInput - 		The current value of Command Actual is loo. Attempting to delete the last character.
CommandWindow::HandleInput - 		The last character has been deleted. The current value of Command Actual is lo.
CommandWindow::HandleInput - Backspace Key has been pressed. Virtual Key Code value is 8
CommandWindow::HandleInput - 	Obtaining current Cursor Position X (Row) Value as FPX. The current value is 2
CommandWindow::HandleInput - 	Comparing FPX against the Default Coordinates X (Row). The default value is 1, and FPX is 2.
CommandWindow::HandleInput - 		FPX is GREATER THAN the Default Coordinates X (Row).
CommandWindow::HandleInput - 		The character that would be deleted here is o.
CommandWindow::HandleInput - 		Performing character deletion from console window.
CommandWindow::HandleInput - 		The current value of Command Actual is lo. Attempting to delete the last character.
CommandWindow::HandleInput - 		The last character has been deleted. The current value of Command Actual is l.
CommandWindow::HandleInput - A regular keypress has been detected. Adding e to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is le.
CommandWindow::HandleInput - A regular keypress has been detected. Adding a to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is lea.
CommandWindow::HandleInput - A regular keypress has been detected. Adding f to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is leaf.
CommandWindow::InvokeCommandParser - Starting the CommandParser.
CommandWindow::InvokeCommandParser - 	Writing the Command Blank.
CommandWindow::InvokeCommandParser - 	Command Blank has been written.
CommandWindow::InvokeCommandParser - 	Checking to see if Command Actual contains anything.
CommandWindow::InvokeCommandParser - 		It contains data. The current data is leaf. Attempting to split the string.
CommandWindow::InvokeCommandParser - 		Split is successful. The split data is Foreach($a in $cmdactSplit){"$a, "}.
CommandWindow::InvokeCommandParser - 		Attempting to find the root command in the Command Table.
CommandWindow::InvokeCommandParser - 		An invalid command has been typed in. Asking the Command Window to update the history.
CommandWindow::UpdateCommandHistory - Starting to shuffle the Command History around.
CommandWindow::UpdateCommandHistory - Setting History E ('                  ') to History A ('greg').
CommandWindow::UpdateCommandHistory - Setting History A ('greg') to History B ('test').
CommandWindow::UpdateCommandHistory - Setting History B ('test') to History C ('ass').
CommandWindow::UpdateCommandHistory - Setting History C ('ass') to History D ('barf').
CommandWindow::UpdateCommandHistory - Setting History D ('barf') to Command Actual ('leaf').
CommandWindow::UpdateCommandHistory - The current layout of the history is as follows: E: greg, A: test, B: ass, C: barf, D: leaf
CommandWindow::UpdateCommandHistory - Checking to see if the Command Valid flag is true or false.
CommandWindow::UpdateCommandHistory - 	The Command Valid Flag is false. Set the Foreground Color to HistoryEntryError and set the Decoration to Blink.
CommandWindow::UpdateCommandHistory - 	Clearing the Command Actual.
CommandWindow::UpdateCommandHistory - Set the CommandHistoryDirty flag to true so the Draw function will draw the strings to the console.
CommandWindow::Draw - Starting the Draw function.
CommandWindow::Draw - Calling base class Draw function.
CommandWindow::Draw - Checking to see if the CommandDivDirty flag is true.
CommandWindow::Draw - Checking to see if the CommandHistoryDirty flag is true.
CommandWindow::Draw - 	CommandHistoryDirty is true, draw the Command History strings to the console.
CommandWindow::Draw - 	Setting the CommandHistoryDirty flag to false.
CommandWindow::HandleInput - A regular keypress has been detected. Adding t to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is t.
CommandWindow::HandleInput - A regular keypress has been detected. Adding i to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is ti.
CommandWindow::HandleInput - A regular keypress has been detected. Adding t to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is tit.
CommandWindow::HandleInput - A regular keypress has been detected. Adding s to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is tits.
CommandWindow::InvokeCommandParser - Starting the CommandParser.
CommandWindow::InvokeCommandParser - 	Writing the Command Blank.
CommandWindow::InvokeCommandParser - 	Command Blank has been written.
CommandWindow::InvokeCommandParser - 	Checking to see if Command Actual contains anything.
CommandWindow::InvokeCommandParser - 		It contains data. The current data is tits. Attempting to split the string.
CommandWindow::InvokeCommandParser - 		Split is successful. The split data is Foreach($a in $cmdactSplit){"$a, "}.
CommandWindow::InvokeCommandParser - 		Attempting to find the root command in the Command Table.
CommandWindow::InvokeCommandParser - 		An invalid command has been typed in. Asking the Command Window to update the history.
CommandWindow::UpdateCommandHistory - Starting to shuffle the Command History around.
CommandWindow::UpdateCommandHistory - Setting History E ('greg') to History A ('test').
CommandWindow::UpdateCommandHistory - Setting History A ('test') to History B ('ass').
CommandWindow::UpdateCommandHistory - Setting History B ('ass') to History C ('barf').
CommandWindow::UpdateCommandHistory - Setting History C ('barf') to History D ('leaf').
CommandWindow::UpdateCommandHistory - Setting History D ('leaf') to Command Actual ('tits').
CommandWindow::UpdateCommandHistory - The current layout of the history is as follows: E: test, A: ass, B: barf, C: leaf, D: tits
CommandWindow::UpdateCommandHistory - Checking to see if the Command Valid flag is true or false.
CommandWindow::UpdateCommandHistory - 	The Command Valid Flag is false. Set the Foreground Color to HistoryEntryError and set the Decoration to Blink.
CommandWindow::UpdateCommandHistory - 	Clearing the Command Actual.
CommandWindow::UpdateCommandHistory - Set the CommandHistoryDirty flag to true so the Draw function will draw the strings to the console.
CommandWindow::Draw - Starting the Draw function.
CommandWindow::Draw - Calling base class Draw function.
CommandWindow::Draw - Checking to see if the CommandDivDirty flag is true.
CommandWindow::Draw - Checking to see if the CommandHistoryDirty flag is true.
CommandWindow::Draw - 	CommandHistoryDirty is true, draw the Command History strings to the console.
CommandWindow::Draw - 	Setting the CommandHistoryDirty flag to false.
CommandWindow::HandleInput - A regular keypress has been detected. Adding   to Command Actual.
CommandWindow::HandleInput - 	The current value of Command Actual is  .
